
;; Function main (main, funcdef_no=2, decl_uid=5209, cgraph_uid=2, symbol_order=3)

Partition 8: size 4504 align 16
	event2
Partition 9: size 4128 align 16
	event
Partition 14: size 1072 align 16
	pcrReadOut
Partition 12: size 400 align 16
	in
Partition 10: size 296 align 16
	specIdEvent
Partition 13: size 24 align 16
	pcrReadIn
Partition 5: size 8 align 8
	infile_42
Partition 2: size 8 align 8
	infilename_13
Partition 17: size 8 align 8
	num
Partition 16: size 8 align 8
	submsg
Partition 15: size 8 align 8
	msg
Partition 7: size 8 align 8
	tssContext
Partition 6: size 4 align 4
	rc1_158
Partition 4: size 4 align 4
	nospec_16
Partition 3: size 4 align 4
	lineNum_15
Partition 1: size 4 align 4
	i_11
Partition 0: size 4 align 4
	rc_1
Partition 11: size 4 align 4
	endOfFile

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 50->51 to 66 failed.
Edge 62->65 redirected to 66
Edge 63->65 redirected to 66
Merging block 65 into block 64...
Merged blocks 64 and 65.
Merged 64 and 65 without moving.
Edge 72->74 redirected to 76
Merging block 74 into block 73...
Merged blocks 73 and 74.
Merged 73 and 74 without moving.
Merging block 79 into block 78...
Merged blocks 78 and 79.
Merged 78 and 79 without moving.
Removing jump 507.
Merging block 80 into block 78...
Merged blocks 78 and 80.
Merged 78 and 80 without moving.


try_optimize_cfg iteration 2

Forwarding edge 50->51 to 66 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10532 [0xffffffffffffd6dc])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) eventextend.c:60 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10544 [0xffffffffffffd6d0])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) eventextend.c:60 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.5410+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:60 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
        (const_int 0 [0])) eventextend.c:61 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10512 [0xffffffffffffd6f0])) [0 i+0 S4 A32])
        (const_int 0 [0])) eventextend.c:62 -1
     (nil))
(insn 10 9 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10496 [0xffffffffffffd700])) [0 tssContext+0 S8 A64])
        (const_int 0 [0])) eventextend.c:63 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10464 [0xffffffffffffd720])) [0 infilename+0 S8 A64])
        (const_int 0 [0])) eventextend.c:64 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10456 [0xffffffffffffd728])) [0 infile+0 S8 A64])
        (const_int 0 [0])) eventextend.c:65 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10520 [0xffffffffffffd6e8])) [0 endOfFile+0 S4 A64])
        (const_int 0 [0])) eventextend.c:70 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10504 [0xffffffffffffd6f8])) [0 nospec+0 S4 A32])
        (const_int 0 [0])) eventextend.c:71 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 87 [ D.5400 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f2e1c3005a0 stdout>) [0 stdout+0 S8 A64])) eventextend.c:74 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) eventextend.c:74 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) eventextend.c:74 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (const_int 0 [0])) eventextend.c:74 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.5400 ])) eventextend.c:74 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("setvbuf") [flags 0x41]  <function_decl 0x7f2e1c3401b0 setvbuf>) [0 setvbuf S1 A8])
            (const_int 0 [0]))) eventextend.c:74 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 21 20 22 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f2e1bdfa3f0 *.LC0>)) eventextend.c:75 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) eventextend.c:75 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (const_int 0 [0])) eventextend.c:75 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7f2e1c1b4000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) eventextend.c:75 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 25 24 26 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10512 [0xffffffffffffd6f0])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) eventextend.c:77 -1
     (nil))
(jump_insn 26 25 27 2 (set (pc)
        (label_ref 138)) eventextend.c:77 -1
     (nil)
 -> 138)
(barrier 27 26 140)
(code_label 140 27 28 4 9 "" [1 uses])
(note 28 140 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10512 [0xffffffffffffd6f0])) [0 i+0 S4 A32])) eventextend.c:78 -1
     (nil))
(insn 30 29 31 4 (set (reg:DI 88 [ D.5401 ])
        (sign_extend:DI (reg:SI 153))) eventextend.c:78 -1
     (nil))
(insn 31 30 32 4 (parallel [
            (set (reg:DI 89 [ D.5401 ])
                (ashift:DI (reg:DI 88 [ D.5401 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:78 -1
     (nil))
(insn 32 31 33 4 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10544 [0xffffffffffffd6d0])) [0 argv+0 S8 A64])) eventextend.c:78 -1
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg/f:DI 90 [ D.5402 ])
                (plus:DI (reg:DI 89 [ D.5401 ])
                    (reg/f:DI 154)))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:78 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10544 [0xffffffffffffd6d0])) [0 argv+0 S8 A64])
            (reg:DI 89 [ D.5401 ]))
        (nil)))
(insn 34 33 35 4 (set (reg/f:DI 91 [ D.5403 ])
        (mem/f:DI (reg/f:DI 90 [ D.5402 ]) [0 *_53+0 S8 A64])) eventextend.c:78 -1
     (nil))
(insn 35 34 36 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2e1bdfa480 *.LC1>)) eventextend.c:78 -1
     (nil))
(insn 36 35 37 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.5403 ])) eventextend.c:78 -1
     (nil))
(call_insn/i 37 36 38 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f2e1c2480d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) eventextend.c:78 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 38 37 39 4 (set (reg:SI 92 [ D.5404 ])
        (reg:SI 0 ax)) eventextend.c:78 -1
     (nil))
(insn 39 38 40 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:78 -1
     (nil))
(jump_insn 40 39 41 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) eventextend.c:78 -1
     (nil)
 -> 64)
(note 41 40 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -10512 [0xffffffffffffd6f0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -10512 [0xffffffffffffd6f0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:79 -1
     (nil))
(insn 43 42 44 5 (set (reg:SI 155)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10512 [0xffffffffffffd6f0])) [0 i+0 S4 A32])) eventextend.c:80 -1
     (nil))
(insn 44 43 45 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 155)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10532 [0xffffffffffffd6dc])) [0 argc+0 S4 A32]))) eventextend.c:80 -1
     (nil))
(jump_insn 45 44 46 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) eventextend.c:80 -1
     (nil)
 -> 56)
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 6 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10512 [0xffffffffffffd6f0])) [0 i+0 S4 A32])) eventextend.c:81 -1
     (nil))
(insn 48 47 49 6 (set (reg:DI 93 [ D.5401 ])
        (sign_extend:DI (reg:SI 156))) eventextend.c:81 -1
     (nil))
(insn 49 48 50 6 (parallel [
            (set (reg:DI 94 [ D.5401 ])
                (ashift:DI (reg:DI 93 [ D.5401 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:81 -1
     (nil))
(insn 50 49 51 6 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10544 [0xffffffffffffd6d0])) [0 argv+0 S8 A64])) eventextend.c:81 -1
     (nil))
(insn 51 50 52 6 (parallel [
            (set (reg/f:DI 95 [ D.5402 ])
                (plus:DI (reg:DI 94 [ D.5401 ])
                    (reg/f:DI 157)))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:81 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10544 [0xffffffffffffd6d0])) [0 argv+0 S8 A64])
            (reg:DI 94 [ D.5401 ]))
        (nil)))
(insn 52 51 53 6 (set (reg/f:DI 158)
        (mem/f:DI (reg/f:DI 95 [ D.5402 ]) [0 *_59+0 S8 A64])) eventextend.c:81 -1
     (nil))
(insn 53 52 54 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10464 [0xffffffffffffd720])) [0 infilename+0 S8 A64])
        (reg/f:DI 158)) eventextend.c:81 -1
     (nil))
(jump_insn 54 53 55 6 (set (pc)
        (label_ref 135)) -1
     (nil)
 -> 135)
(barrier 55 54 56)
(code_label 56 55 57 7 4 "" [1 uses])
(note 57 56 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f2e1bdfa510 *.LC2>)) eventextend.c:84 -1
     (nil))
(call_insn 59 58 60 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2e1c251360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) eventextend.c:84 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 60 59 61 7 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f2e1c1b4a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) eventextend.c:85 -1
     (nil)
    (nil))
(insn 61 60 62 7 (set (reg:SI 5 di)
        (const_int 2 [0x2])) eventextend.c:86 -1
     (nil))
(call_insn 62 61 63 7 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f2e1c264000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) eventextend.c:86 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 63 62 64)
(code_label 64 63 65 8 3 "" [1 uses])
(note 65 64 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 8 (set (reg:SI 159)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10512 [0xffffffffffffd6f0])) [0 i+0 S4 A32])) eventextend.c:89 -1
     (nil))
(insn 67 66 68 8 (set (reg:DI 96 [ D.5401 ])
        (sign_extend:DI (reg:SI 159))) eventextend.c:89 -1
     (nil))
(insn 68 67 69 8 (parallel [
            (set (reg:DI 97 [ D.5401 ])
                (ashift:DI (reg:DI 96 [ D.5401 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:89 -1
     (nil))
(insn 69 68 70 8 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10544 [0xffffffffffffd6d0])) [0 argv+0 S8 A64])) eventextend.c:89 -1
     (nil))
(insn 70 69 71 8 (parallel [
            (set (reg/f:DI 98 [ D.5402 ])
                (plus:DI (reg:DI 97 [ D.5401 ])
                    (reg/f:DI 160)))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:89 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10544 [0xffffffffffffd6d0])) [0 argv+0 S8 A64])
            (reg:DI 97 [ D.5401 ]))
        (nil)))
(insn 71 70 72 8 (set (reg/f:DI 99 [ D.5403 ])
        (mem/f:DI (reg/f:DI 98 [ D.5402 ]) [0 *_66+0 S8 A64])) eventextend.c:89 -1
     (nil))
(insn 72 71 73 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f2e1bdfa5a0 *.LC3>)) eventextend.c:89 -1
     (nil))
(insn 73 72 74 8 (set (reg:DI 5 di)
        (reg/f:DI 99 [ D.5403 ])) eventextend.c:89 -1
     (nil))
(call_insn/i 74 73 75 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f2e1c2480d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) eventextend.c:89 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 75 74 76 8 (set (reg:SI 100 [ D.5404 ])
        (reg:SI 0 ax)) eventextend.c:89 -1
     (nil))
(insn 76 75 77 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:89 -1
     (nil))
(jump_insn 77 76 78 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) eventextend.c:89 -1
     (nil)
 -> 82)
(note 78 77 79 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10504 [0xffffffffffffd6f8])) [0 nospec+0 S4 A32])
        (const_int 1 [0x1])) eventextend.c:90 -1
     (nil))
(jump_insn 80 79 81 9 (set (pc)
        (label_ref 135)) -1
     (nil)
 -> 135)
(barrier 81 80 82)
(code_label 82 81 83 10 6 "" [1 uses])
(note 83 82 84 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 10 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10512 [0xffffffffffffd6f0])) [0 i+0 S4 A32])) eventextend.c:92 -1
     (nil))
(insn 85 84 86 10 (set (reg:DI 101 [ D.5401 ])
        (sign_extend:DI (reg:SI 161))) eventextend.c:92 -1
     (nil))
(insn 86 85 87 10 (parallel [
            (set (reg:DI 102 [ D.5401 ])
                (ashift:DI (reg:DI 101 [ D.5401 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:92 -1
     (nil))
(insn 87 86 88 10 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10544 [0xffffffffffffd6d0])) [0 argv+0 S8 A64])) eventextend.c:92 -1
     (nil))
(insn 88 87 89 10 (parallel [
            (set (reg/f:DI 103 [ D.5402 ])
                (plus:DI (reg:DI 102 [ D.5401 ])
                    (reg/f:DI 162)))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:92 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10544 [0xffffffffffffd6d0])) [0 argv+0 S8 A64])
            (reg:DI 102 [ D.5401 ]))
        (nil)))
(insn 89 88 90 10 (set (reg/f:DI 104 [ D.5403 ])
        (mem/f:DI (reg/f:DI 103 [ D.5402 ]) [0 *_72+0 S8 A64])) eventextend.c:92 -1
     (nil))
(insn 90 89 91 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f2e1bdfa630 *.LC4>)) eventextend.c:92 -1
     (nil))
(insn 91 90 92 10 (set (reg:DI 5 di)
        (reg/f:DI 104 [ D.5403 ])) eventextend.c:92 -1
     (nil))
(call_insn/i 92 91 93 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f2e1c2480d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) eventextend.c:92 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 93 92 94 10 (set (reg:SI 105 [ D.5404 ])
        (reg:SI 0 ax)) eventextend.c:92 -1
     (nil))
(insn 94 93 95 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 105 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:92 -1
     (nil))
(jump_insn 95 94 96 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) eventextend.c:92 -1
     (nil)
 -> 100)
(note 96 95 97 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(call_insn 97 96 98 11 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f2e1c1b4a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) eventextend.c:93 -1
     (nil)
    (nil))
(jump_insn 98 97 99 11 (set (pc)
        (label_ref 135)) -1
     (nil)
 -> 135)
(barrier 99 98 100)
(code_label 100 99 101 12 7 "" [1 uses])
(note 101 100 102 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 12 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10512 [0xffffffffffffd6f0])) [0 i+0 S4 A32])) eventextend.c:95 -1
     (nil))
(insn 103 102 104 12 (set (reg:DI 106 [ D.5401 ])
        (sign_extend:DI (reg:SI 163))) eventextend.c:95 -1
     (nil))
(insn 104 103 105 12 (parallel [
            (set (reg:DI 107 [ D.5401 ])
                (ashift:DI (reg:DI 106 [ D.5401 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:95 -1
     (nil))
(insn 105 104 106 12 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10544 [0xffffffffffffd6d0])) [0 argv+0 S8 A64])) eventextend.c:95 -1
     (nil))
(insn 106 105 107 12 (parallel [
            (set (reg/f:DI 108 [ D.5402 ])
                (plus:DI (reg:DI 107 [ D.5401 ])
                    (reg/f:DI 164)))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:95 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10544 [0xffffffffffffd6d0])) [0 argv+0 S8 A64])
            (reg:DI 107 [ D.5401 ]))
        (nil)))
(insn 107 106 108 12 (set (reg/f:DI 109 [ D.5403 ])
        (mem/f:DI (reg/f:DI 108 [ D.5402 ]) [0 *_78+0 S8 A64])) eventextend.c:95 -1
     (nil))
(insn 108 107 109 12 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f2e1bdfa6c0 *.LC5>)) eventextend.c:95 -1
     (nil))
(insn 109 108 110 12 (set (reg:DI 5 di)
        (reg/f:DI 109 [ D.5403 ])) eventextend.c:95 -1
     (nil))
(call_insn/i 110 109 111 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f2e1c2480d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) eventextend.c:95 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 111 110 112 12 (set (reg:SI 110 [ D.5404 ])
        (reg:SI 0 ax)) eventextend.c:95 -1
     (nil))
(insn 112 111 113 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 110 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:95 -1
     (nil))
(jump_insn 113 112 114 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) eventextend.c:95 -1
     (nil)
 -> 122)
(note 114 113 115 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 13 (set (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f2e1c010090 verbose>) [0 verbose+0 S4 A32])
        (const_int 1 [0x1])) eventextend.c:96 -1
     (nil))
(insn 116 115 117 13 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f2e1bdfa750 *.LC6>)) eventextend.c:97 -1
     (nil))
(insn 117 116 118 13 (set (reg:SI 4 si)
        (const_int 1 [0x1])) eventextend.c:97 -1
     (nil))
(insn 118 117 119 13 (set (reg:DI 5 di)
        (const_int 0 [0])) eventextend.c:97 -1
     (nil))
(call_insn 119 118 120 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7f2e1c1b4000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) eventextend.c:97 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 120 119 121 13 (set (pc)
        (label_ref 135)) -1
     (nil)
 -> 135)
(barrier 121 120 122)
(code_label 122 121 123 14 8 "" [1 uses])
(note 123 122 124 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 14 (set (reg:SI 165)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10512 [0xffffffffffffd6f0])) [0 i+0 S4 A32])) eventextend.c:100 -1
     (nil))
(insn 125 124 126 14 (set (reg:DI 111 [ D.5401 ])
        (sign_extend:DI (reg:SI 165))) eventextend.c:100 -1
     (nil))
(insn 126 125 127 14 (parallel [
            (set (reg:DI 112 [ D.5401 ])
                (ashift:DI (reg:DI 111 [ D.5401 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:100 -1
     (nil))
(insn 127 126 128 14 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10544 [0xffffffffffffd6d0])) [0 argv+0 S8 A64])) eventextend.c:100 -1
     (nil))
(insn 128 127 129 14 (parallel [
            (set (reg/f:DI 113 [ D.5402 ])
                (plus:DI (reg:DI 112 [ D.5401 ])
                    (reg/f:DI 166)))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:100 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10544 [0xffffffffffffd6d0])) [0 argv+0 S8 A64])
            (reg:DI 112 [ D.5401 ]))
        (nil)))
(insn 129 128 130 14 (set (reg/f:DI 114 [ D.5403 ])
        (mem/f:DI (reg/f:DI 113 [ D.5402 ]) [0 *_85+0 S8 A64])) eventextend.c:100 -1
     (nil))
(insn 130 129 131 14 (set (reg:DI 4 si)
        (reg/f:DI 114 [ D.5403 ])) eventextend.c:100 -1
     (nil))
(insn 131 130 132 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f2e1bdfa7e0 *.LC7>)) eventextend.c:100 -1
     (nil))
(insn 132 131 133 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) eventextend.c:100 -1
     (nil))
(call_insn 133 132 134 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2e1c24eca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) eventextend.c:100 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(call_insn 134 133 135 14 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f2e1c1b4a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) eventextend.c:101 -1
     (nil)
    (nil))
(code_label 135 134 136 15 5 "" [4 uses])
(note 136 135 137 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -10512 [0xffffffffffffd6f0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -10512 [0xffffffffffffd6f0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:77 -1
     (nil))
(code_label 138 137 139 16 2 "" [1 uses])
(note 139 138 141 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 141 139 142 16 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10512 [0xffffffffffffd6f0])) [0 i+0 S4 A32])) eventextend.c:77 -1
     (nil))
(insn 142 141 143 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 167)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10532 [0xffffffffffffd6dc])) [0 argc+0 S4 A32]))) eventextend.c:77 -1
     (nil))
(jump_insn 143 142 144 16 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) eventextend.c:77 -1
     (nil)
 -> 140)
(note 144 143 145 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10464 [0xffffffffffffd720])) [0 infilename+0 S8 A64])
            (const_int 0 [0]))) eventextend.c:104 -1
     (nil))
(jump_insn 146 145 147 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) eventextend.c:104 -1
     (nil)
 -> 151)
(note 147 146 148 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f2e1bdfa870 *.LC8>)) eventextend.c:105 -1
     (nil))
(call_insn 149 148 150 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2e1c251360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) eventextend.c:105 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 150 149 151 18 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f2e1c1b4a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) eventextend.c:106 -1
     (nil)
    (nil))
(code_label 151 150 152 19 10 "" [1 uses])
(note 152 151 153 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 19 (set (reg:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10464 [0xffffffffffffd720])) [0 infilename+0 S8 A64])) eventextend.c:111 -1
     (nil))
(insn 154 153 155 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f2e1bdfa900 *.LC9>)) eventextend.c:111 -1
     (nil))
(insn 155 154 156 19 (set (reg:DI 5 di)
        (reg:DI 168)) eventextend.c:111 -1
     (nil))
(call_insn 156 155 157 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f2e1c338bd0 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) eventextend.c:111 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 157 156 158 19 (set (reg:DI 169)
        (reg:DI 0 ax)) eventextend.c:111 -1
     (nil))
(insn 158 157 159 19 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10456 [0xffffffffffffd728])) [0 infile+0 S8 A64])
        (reg:DI 169)) eventextend.c:111 -1
     (nil))
(insn 159 158 160 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10456 [0xffffffffffffd728])) [0 infile+0 S8 A64])
            (const_int 0 [0]))) eventextend.c:112 -1
     (nil))
(jump_insn 160 159 161 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) eventextend.c:112 -1
     (nil)
 -> 170)
(note 161 160 162 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 20 (set (reg:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10464 [0xffffffffffffd720])) [0 infilename+0 S8 A64])) eventextend.c:113 -1
     (nil))
(insn 163 162 164 20 (set (reg:DI 4 si)
        (reg:DI 170)) eventextend.c:113 -1
     (nil))
(insn 164 163 165 20 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f2e1bdfa990 *.LC10>)) eventextend.c:113 -1
     (nil))
(insn 165 164 166 20 (set (reg:QI 0 ax)
        (const_int 0 [0])) eventextend.c:113 -1
     (nil))
(call_insn 166 165 167 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2e1c24eca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) eventextend.c:113 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 167 166 168 20 (set (reg:SI 5 di)
        (const_int -4 [0xfffffffffffffffc])) eventextend.c:114 -1
     (nil))
(call_insn 168 167 169 20 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f2e1c264000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) eventextend.c:114 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 169 168 170)
(code_label 170 169 171 21 11 "" [1 uses])
(note 171 170 172 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:118 -1
     (nil))
(jump_insn 173 172 174 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) eventextend.c:118 -1
     (nil)
 -> 187)
(note 174 173 175 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10504 [0xffffffffffffd6f8])) [0 nospec+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:118 -1
     (nil))
(jump_insn 176 175 177 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) eventextend.c:118 -1
     (nil)
 -> 187)
(note 177 176 178 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 178 177 179 23 (set (reg:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10456 [0xffffffffffffd728])) [0 infile+0 S8 A64])) eventextend.c:119 -1
     (nil))
(insn 179 178 180 23 (parallel [
            (set (reg:DI 172)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10520 [0xffffffffffffd6e8])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:119 -1
     (nil))
(insn 180 179 181 23 (parallel [
            (set (reg:DI 173)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8640 [0xffffffffffffde40])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:119 -1
     (nil))
(insn 181 180 182 23 (set (reg:DI 1 dx)
        (reg:DI 171)) eventextend.c:119 -1
     (nil))
(insn 182 181 183 23 (set (reg:DI 4 si)
        (reg:DI 172)) eventextend.c:119 -1
     (nil))
(insn 183 182 184 23 (set (reg:DI 5 di)
        (reg:DI 173)) eventextend.c:119 -1
     (nil))
(call_insn 184 183 185 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_EVENT_Line_Read") [flags 0x41]  <function_decl 0x7f2e1c1b41b0 TSS_EVENT_Line_Read>) [0 TSS_EVENT_Line_Read S1 A8])
            (const_int 0 [0]))) eventextend.c:119 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 185 184 186 23 (set (reg:SI 115 [ D.5404 ])
        (reg:SI 0 ax)) eventextend.c:119 -1
     (nil))
(insn 186 185 187 23 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
        (reg:SI 115 [ D.5404 ])) eventextend.c:119 -1
     (nil))
(code_label 187 186 188 24 12 "" [2 uses])
(note 188 187 189 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 24 (set (reg:SI 116 [ D.5404 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f2e1c010090 verbose>) [0 verbose+0 S4 A32])) eventextend.c:122 -1
     (nil))
(insn 190 189 191 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:122 -1
     (nil))
(jump_insn 191 190 192 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 208)
            (pc))) eventextend.c:122 -1
     (nil)
 -> 208)
(note 192 191 193 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 193 192 194 25 (set (reg:SI 117 [ D.5404 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10520 [0xffffffffffffd6e8])) [0 endOfFile+0 S4 A64])) eventextend.c:122 -1
     (nil))
(insn 194 193 195 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:122 -1
     (nil))
(jump_insn 195 194 196 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 208)
            (pc))) eventextend.c:122 -1
     (nil)
 -> 208)
(note 196 195 197 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:122 -1
     (nil))
(jump_insn 198 197 199 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 208)
            (pc))) eventextend.c:122 -1
     (nil)
 -> 208)
(note 199 198 200 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10504 [0xffffffffffffd6f8])) [0 nospec+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:122 -1
     (nil))
(jump_insn 201 200 202 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 208)
            (pc))) eventextend.c:122 -1
     (nil)
 -> 208)
(note 202 201 203 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 204 28 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f2e1bdfaa20 *.LC11>)) eventextend.c:123 -1
     (nil))
(call_insn 204 203 205 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2e1c251360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) eventextend.c:123 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 205 204 206 28 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8640 [0xffffffffffffde40])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:124 -1
     (nil))
(insn 206 205 207 28 (set (reg:DI 5 di)
        (reg:DI 174)) eventextend.c:124 -1
     (nil))
(call_insn 207 206 208 28 (call (mem:QI (symbol_ref:DI ("TSS_EVENT_Line_Trace") [flags 0x41]  <function_decl 0x7f2e1c1b45e8 TSS_EVENT_Line_Trace>) [0 TSS_EVENT_Line_Trace S1 A8])
        (const_int 0 [0])) eventextend.c:124 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 208 207 209 29 13 "" [4 uses])
(note 209 208 210 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 29 (set (reg:SI 118 [ D.5404 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f2e1c010090 verbose>) [0 verbose+0 S4 A32])) eventextend.c:127 -1
     (nil))
(insn 211 210 212 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:127 -1
     (nil))
(jump_insn 212 211 213 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) eventextend.c:127 -1
     (nil)
 -> 234)
(note 213 212 214 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 30 (set (reg:SI 119 [ D.5404 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10520 [0xffffffffffffd6e8])) [0 endOfFile+0 S4 A64])) eventextend.c:127 -1
     (nil))
(insn 215 214 216 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:127 -1
     (nil))
(jump_insn 216 215 217 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) eventextend.c:127 -1
     (nil)
 -> 234)
(note 217 216 218 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:127 -1
     (nil))
(jump_insn 219 218 220 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) eventextend.c:127 -1
     (nil)
 -> 234)
(note 220 219 221 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10504 [0xffffffffffffd6f8])) [0 nospec+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:127 -1
     (nil))
(jump_insn 222 221 223 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) eventextend.c:127 -1
     (nil)
 -> 234)
(note 223 222 224 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 33 (set (reg:SI 120 [ D.5405 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8612 [0xffffffffffffde5c])) [0 event.eventDataSize+0 S4 A32])) eventextend.c:128 -1
     (nil))
(insn 225 224 226 33 (parallel [
            (set (reg:DI 175)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8640 [0xffffffffffffde40])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:128 -1
     (nil))
(insn 226 225 227 33 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg:DI 175)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:128 -1
     (nil))
(insn 227 226 228 33 (parallel [
            (set (reg:DI 177)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10416 [0xffffffffffffd750])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:128 -1
     (nil))
(insn 228 227 229 33 (set (reg:DI 1 dx)
        (reg:DI 176)) eventextend.c:128 -1
     (nil))
(insn 229 228 230 33 (set (reg:SI 4 si)
        (reg:SI 120 [ D.5405 ])) eventextend.c:128 -1
     (nil))
(insn 230 229 231 33 (set (reg:DI 5 di)
        (reg:DI 177)) eventextend.c:128 -1
     (nil))
(call_insn 231 230 232 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SpecIdEvent_Unmarshal") [flags 0x41]  <function_decl 0x7f2e1c1b4798 TSS_SpecIdEvent_Unmarshal>) [0 TSS_SpecIdEvent_Unmarshal S1 A8])
            (const_int 0 [0]))) eventextend.c:128 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 232 231 233 33 (set (reg:SI 178)
        (reg:SI 0 ax)) eventextend.c:128 -1
     (nil))
(insn 233 232 234 33 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
        (reg:SI 178)) eventextend.c:128 -1
     (nil))
(code_label 234 233 235 34 14 "" [4 uses])
(note 235 234 236 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 236 235 237 34 (set (reg:SI 121 [ D.5404 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f2e1c010090 verbose>) [0 verbose+0 S4 A32])) eventextend.c:132 -1
     (nil))
(insn 237 236 238 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 121 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:132 -1
     (nil))
(jump_insn 238 237 239 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 253)
            (pc))) eventextend.c:132 -1
     (nil)
 -> 253)
(note 239 238 240 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 35 (set (reg:SI 122 [ D.5404 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10520 [0xffffffffffffd6e8])) [0 endOfFile+0 S4 A64])) eventextend.c:132 -1
     (nil))
(insn 241 240 242 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:132 -1
     (nil))
(jump_insn 242 241 243 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 253)
            (pc))) eventextend.c:132 -1
     (nil)
 -> 253)
(note 243 242 244 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:132 -1
     (nil))
(jump_insn 245 244 246 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 253)
            (pc))) eventextend.c:132 -1
     (nil)
 -> 253)
(note 246 245 247 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10504 [0xffffffffffffd6f8])) [0 nospec+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:132 -1
     (nil))
(jump_insn 248 247 249 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 253)
            (pc))) eventextend.c:132 -1
     (nil)
 -> 253)
(note 249 248 250 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 38 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10416 [0xffffffffffffd750])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:133 -1
     (nil))
(insn 251 250 252 38 (set (reg:DI 5 di)
        (reg:DI 179)) eventextend.c:133 -1
     (nil))
(call_insn 252 251 253 38 (call (mem:QI (symbol_ref:DI ("TSS_SpecIdEvent_Trace") [flags 0x41]  <function_decl 0x7f2e1c1b4870 TSS_SpecIdEvent_Trace>) [0 TSS_SpecIdEvent_Trace S1 A8])
        (const_int 0 [0])) eventextend.c:133 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 253 252 254 39 15 "" [4 uses])
(note 254 253 255 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:136 -1
     (nil))
(jump_insn 256 255 257 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) eventextend.c:136 -1
     (nil)
 -> 263)
(note 257 256 258 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 258 257 259 40 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10496 [0xffffffffffffd700])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:137 -1
     (nil))
(insn 259 258 260 40 (set (reg:DI 5 di)
        (reg:DI 180)) eventextend.c:137 -1
     (nil))
(call_insn 260 259 261 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Create") [flags 0x41]  <function_decl 0x7f2e1c1acca8 TSS_Create>) [0 TSS_Create S1 A8])
            (const_int 0 [0]))) eventextend.c:137 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 261 260 262 40 (set (reg:SI 181)
        (reg:SI 0 ax)) eventextend.c:137 -1
     (nil))
(insn 262 261 263 40 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
        (reg:SI 181)) eventextend.c:137 -1
     (nil))
(code_label 263 262 264 41 16 "" [1 uses])
(note 264 263 265 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 41 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10508 [0xffffffffffffd6f4])) [0 lineNum+0 S4 A32])
        (const_int 1 [0x1])) eventextend.c:140 -1
     (nil))
(jump_insn 266 265 267 41 (set (pc)
        (label_ref 431)) eventextend.c:140 -1
     (nil)
 -> 431)
(barrier 267 266 437)
(code_label 437 267 268 42 27 "" [1 uses])
(note 268 437 269 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 269 268 270 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:142 -1
     (nil))
(jump_insn 270 269 271 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 281)
            (pc))) eventextend.c:142 -1
     (nil)
 -> 281)
(note 271 270 272 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 43 (set (reg:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10456 [0xffffffffffffd728])) [0 infile+0 S8 A64])) eventextend.c:143 -1
     (nil))
(insn 273 272 274 43 (parallel [
            (set (reg:DI 183)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10520 [0xffffffffffffd6e8])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:143 -1
     (nil))
(insn 274 273 275 43 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4512 [0xffffffffffffee60])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:143 -1
     (nil))
(insn 275 274 276 43 (set (reg:DI 1 dx)
        (reg:DI 182)) eventextend.c:143 -1
     (nil))
(insn 276 275 277 43 (set (reg:DI 4 si)
        (reg:DI 183)) eventextend.c:143 -1
     (nil))
(insn 277 276 278 43 (set (reg:DI 5 di)
        (reg:DI 184)) eventextend.c:143 -1
     (nil))
(call_insn 278 277 279 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_EVENT2_Line_Read") [flags 0x41]  <function_decl 0x7f2e1c1b4288 TSS_EVENT2_Line_Read>) [0 TSS_EVENT2_Line_Read S1 A8])
            (const_int 0 [0]))) eventextend.c:143 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 279 278 280 43 (set (reg:SI 124 [ D.5404 ])
        (reg:SI 0 ax)) eventextend.c:143 -1
     (nil))
(insn 280 279 281 43 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
        (reg:SI 124 [ D.5404 ])) eventextend.c:143 -1
     (nil))
(code_label 281 280 282 44 18 "" [1 uses])
(note 282 281 283 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 44 (set (reg:SI 125 [ D.5404 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f2e1c010090 verbose>) [0 verbose+0 S4 A32])) eventextend.c:146 -1
     (nil))
(insn 284 283 285 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 125 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:146 -1
     (nil))
(jump_insn 285 284 286 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) eventextend.c:146 -1
     (nil)
 -> 302)
(note 286 285 287 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 45 (set (reg:SI 126 [ D.5404 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10520 [0xffffffffffffd6e8])) [0 endOfFile+0 S4 A64])) eventextend.c:146 -1
     (nil))
(insn 288 287 289 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 126 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:146 -1
     (nil))
(jump_insn 289 288 290 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) eventextend.c:146 -1
     (nil)
 -> 302)
(note 290 289 291 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:146 -1
     (nil))
(jump_insn 292 291 293 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) eventextend.c:146 -1
     (nil)
 -> 302)
(note 293 292 294 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 294 293 295 47 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10508 [0xffffffffffffd6f4])) [0 lineNum+0 S4 A32])) eventextend.c:147 -1
     (nil))
(insn 295 294 296 47 (set (reg:SI 4 si)
        (reg:SI 185)) eventextend.c:147 -1
     (nil))
(insn 296 295 297 47 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f2e1bdfaab0 *.LC12>)) eventextend.c:147 -1
     (nil))
(insn 297 296 298 47 (set (reg:QI 0 ax)
        (const_int 0 [0])) eventextend.c:147 -1
     (nil))
(call_insn 298 297 299 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2e1c24eca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) eventextend.c:147 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 299 298 300 47 (parallel [
            (set (reg:DI 186)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4512 [0xffffffffffffee60])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:148 -1
     (nil))
(insn 300 299 301 47 (set (reg:DI 5 di)
        (reg:DI 186)) eventextend.c:148 -1
     (nil))
(call_insn 301 300 302 47 (call (mem:QI (symbol_ref:DI ("TSS_EVENT2_Line_Trace") [flags 0x41]  <function_decl 0x7f2e1c1b46c0 TSS_EVENT2_Line_Trace>) [0 TSS_EVENT2_Line_Trace S1 A8])
        (const_int 0 [0])) eventextend.c:148 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 302 301 303 48 19 "" [3 uses])
(note 303 302 304 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 48 (set (reg:SI 127 [ D.5404 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10520 [0xffffffffffffd6e8])) [0 endOfFile+0 S4 A64])) eventextend.c:151 -1
     (nil))
(insn 305 304 306 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 127 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:151 -1
     (nil))
(jump_insn 306 305 307 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 317)
            (pc))) eventextend.c:151 -1
     (nil)
 -> 317)
(note 307 306 308 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:151 -1
     (nil))
(jump_insn 309 308 310 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 317)
            (pc))) eventextend.c:151 -1
     (nil)
 -> 317)
(note 310 309 311 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 311 310 312 50 (set (reg:SI 128 [ D.5405 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4508 [0xffffffffffffee64])) [0 event2.eventType+0 S4 A32])) eventextend.c:152 -1
     (nil))
(insn 312 311 313 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 128 [ D.5405 ])
            (const_int 3 [0x3]))) eventextend.c:152 -1
     (nil))
(jump_insn 313 312 314 50 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 317)
            (pc))) eventextend.c:152 -1
     (nil)
 -> 317)
(note 314 313 315 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(jump_insn 315 314 316 51 (set (pc)
        (label_ref 428)) eventextend.c:153 -1
     (nil)
 -> 428)
(barrier 316 315 317)
(code_label 317 316 318 52 20 "" [3 uses])
(note 318 317 319 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 319 318 320 52 (set (reg:SI 129 [ D.5404 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10520 [0xffffffffffffd6e8])) [0 endOfFile+0 S4 A64])) eventextend.c:156 -1
     (nil))
(insn 320 319 321 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 129 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:156 -1
     (nil))
(jump_insn 321 320 322 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 355)
            (pc))) eventextend.c:156 -1
     (nil)
 -> 355)
(note 322 321 323 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 323 322 324 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:156 -1
     (nil))
(jump_insn 324 323 325 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 355)
            (pc))) eventextend.c:156 -1
     (nil)
 -> 355)
(note 325 324 326 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 54 (set (reg:SI 130 [ D.5405 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4512 [0xffffffffffffee60])) [0 event2.pcrIndex+0 S4 A64])) eventextend.c:157 -1
     (nil))
(insn 327 326 328 54 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10112 [0xffffffffffffd880])) [0 in.pcrHandle+0 S4 A64])
        (reg:SI 130 [ D.5405 ])) eventextend.c:157 -1
     (nil))
(insn 328 327 329 54 (parallel [
            (set (reg/f:DI 187)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10108 [0xffffffffffffd884])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:158 -1
     (nil))
(insn 329 328 330 54 (parallel [
            (set (reg/f:DI 188)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4504 [0xffffffffffffee68])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:158 -1
     (nil))
(insn 330 329 331 54 (set (reg:SI 189)
        (mem/j/c:SI (reg/f:DI 188) [0 event2.digests+0 S4 A64])) eventextend.c:158 -1
     (nil))
(insn 331 330 332 54 (set (mem/j/c:SI (reg/f:DI 187) [0 in.digests+0 S4 A32])
        (reg:SI 189)) eventextend.c:158 -1
     (nil))
(insn 332 331 333 54 (set (reg/f:DI 187)
        (plus:DI (reg/f:DI 187)
            (const_int 4 [0x4]))) eventextend.c:158 -1
     (nil))
(insn 333 332 334 54 (set (reg/f:DI 188)
        (plus:DI (reg/f:DI 188)
            (const_int 4 [0x4]))) eventextend.c:158 -1
     (nil))
(insn 334 333 335 54 (set (reg:DI 190)
        (const_int 49 [0x31])) eventextend.c:158 -1
     (nil))
(insn 335 334 336 54 (parallel [
            (set (reg:DI 190)
                (const_int 0 [0]))
            (set (reg/f:DI 187)
                (plus:DI (ashift:DI (reg:DI 190)
                        (const_int 3 [0x3]))
                    (reg/f:DI 187)))
            (set (reg/f:DI 188)
                (plus:DI (ashift:DI (reg:DI 190)
                        (const_int 3 [0x3]))
                    (reg/f:DI 188)))
            (set (mem/j/c:BLK (reg/f:DI 187) [0 in.digests+4 S392 A64])
                (mem/j/c:BLK (reg/f:DI 188) [0 event2.digests+4 S392 A64]))
            (use (reg:DI 190))
        ]) eventextend.c:158 -1
     (nil))
(insn 336 335 337 54 (set (reg/f:DI 131 [ D.5406 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10496 [0xffffffffffffd700])) [0 tssContext+0 S8 A64])) eventextend.c:159 -1
     (nil))
(insn 337 336 338 54 (parallel [
            (set (reg:DI 191)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10112 [0xffffffffffffd880])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:159 -1
     (nil))
(insn 338 337 339 54 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:159 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 339 338 340 54 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) eventextend.c:159 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 340 339 341 54 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) eventextend.c:159 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 341 340 342 54 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1073741831 [0x40000007])) eventextend.c:159 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 342 341 343 54 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) eventextend.c:159 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 343 342 344 54 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) eventextend.c:159 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 344 343 345 54 (set (reg:SI 38 r9)
        (const_int 1073741833 [0x40000009])) eventextend.c:159 -1
     (nil))
(insn 345 344 346 54 (set (reg:SI 37 r8)
        (const_int 386 [0x182])) eventextend.c:159 -1
     (nil))
(insn 346 345 347 54 (set (reg:DI 2 cx)
        (const_int 0 [0])) eventextend.c:159 -1
     (nil))
(insn 347 346 348 54 (set (reg:DI 1 dx)
        (reg:DI 191)) eventextend.c:159 -1
     (nil))
(insn 348 347 349 54 (set (reg:DI 4 si)
        (const_int 0 [0])) eventextend.c:159 -1
     (nil))
(insn 349 348 350 54 (set (reg:DI 5 di)
        (reg/f:DI 131 [ D.5406 ])) eventextend.c:159 -1
     (nil))
(insn 350 349 351 54 (set (reg:QI 0 ax)
        (const_int 0 [0])) eventextend.c:159 -1
     (nil))
(call_insn 351 350 352 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7f2e1c1ace58 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 48 [0x30]))) eventextend.c:159 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 352 351 353 54 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:159 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 353 352 354 54 (set (reg:SI 192)
        (reg:SI 0 ax)) eventextend.c:159 -1
     (nil))
(insn 354 353 355 54 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
        (reg:SI 192)) eventextend.c:159 -1
     (nil))
(code_label 355 354 356 55 22 "" [2 uses])
(note 356 355 357 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 357 356 358 55 (set (reg:SI 132 [ D.5404 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f2e1c010090 verbose>) [0 verbose+0 S4 A32])) eventextend.c:168 -1
     (nil))
(insn 358 357 359 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:168 -1
     (nil))
(jump_insn 359 358 360 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 428)
            (pc))) eventextend.c:168 -1
     (nil)
 -> 428)
(note 360 359 361 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 361 360 362 56 (set (reg:SI 133 [ D.5404 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10520 [0xffffffffffffd6e8])) [0 endOfFile+0 S4 A64])) eventextend.c:171 -1
     (nil))
(insn 362 361 363 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 133 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:171 -1
     (nil))
(jump_insn 363 362 364 56 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 384)
            (pc))) eventextend.c:171 -1
     (nil)
 -> 384)
(note 364 363 365 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 365 364 366 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:171 -1
     (nil))
(jump_insn 366 365 367 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 384)
            (pc))) eventextend.c:171 -1
     (nil)
 -> 384)
(note 367 366 368 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 58 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10448 [0xffffffffffffd730])) [0 pcrReadIn.pcrSelectionIn.count+0 S4 A64])
        (const_int 1 [0x1])) eventextend.c:172 -1
     (nil))
(insn 369 368 370 58 (set (reg:HI 134 [ D.5407 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4500 [0xffffffffffffee6c])) [0 event2.digests.digests[0].hashAlg+0 S2 A32])) eventextend.c:174 -1
     (nil))
(insn 370 369 371 58 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10444 [0xffffffffffffd734])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[0].hash+0 S2 A32])
        (reg:HI 134 [ D.5407 ])) eventextend.c:173 -1
     (nil))
(insn 371 370 372 58 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10442 [0xffffffffffffd736])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[0].sizeofSelect+0 S1 A16])
        (const_int 3 [0x3])) eventextend.c:175 -1
     (nil))
(insn 372 371 373 58 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10441 [0xffffffffffffd737])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[0].pcrSelect+0 S1 A8])
        (const_int 0 [0])) eventextend.c:176 -1
     (nil))
(insn 373 372 374 58 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10440 [0xffffffffffffd738])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[0].pcrSelect+1 S1 A64])
        (const_int 0 [0])) eventextend.c:177 -1
     (nil))
(insn 374 373 375 58 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10439 [0xffffffffffffd739])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[0].pcrSelect+2 S1 A8])
        (const_int 0 [0])) eventextend.c:178 -1
     (nil))
(insn 375 374 376 58 (set (reg:SI 135 [ D.5405 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4512 [0xffffffffffffee60])) [0 event2.pcrIndex+0 S4 A64])) eventextend.c:179 -1
     (nil))
(insn 376 375 377 58 (parallel [
            (set (reg:SI 136 [ D.5405 ])
                (lshiftrt:SI (reg:SI 135 [ D.5405 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:179 -1
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 135 [ D.5405 ])
            (const_int 8 [0x8]))
        (nil)))
(insn 377 376 378 58 (set (reg:SI 137 [ D.5405 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4512 [0xffffffffffffee60])) [0 event2.pcrIndex+0 S4 A64])) eventextend.c:180 -1
     (nil))
(insn 378 377 379 58 (parallel [
            (set (reg:SI 138 [ D.5405 ])
                (and:SI (reg:SI 137 [ D.5405 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:180 -1
     (nil))
(insn 379 378 380 58 (set (reg:SI 193)
        (const_int 1 [0x1])) eventextend.c:180 -1
     (nil))
(insn 380 379 381 58 (parallel [
            (set (reg:SI 139 [ D.5404 ])
                (ashift:SI (reg:SI 193)
                    (subreg:QI (reg:SI 138 [ D.5405 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:180 -1
     (nil))
(insn 381 380 382 58 (set (reg:QI 140 [ D.5408 ])
        (subreg:QI (reg:SI 139 [ D.5404 ]) 0)) eventextend.c:179 -1
     (nil))
(insn 382 381 383 58 (set (reg:DI 194)
        (zero_extend:DI (reg:SI 136 [ D.5405 ]))) eventextend.c:179 -1
     (nil))
(insn 383 382 384 58 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (reg:DI 194))
                (const_int -10441 [0xffffffffffffd737])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[0].pcrSelect S1 A8])
        (reg:QI 140 [ D.5408 ])) eventextend.c:179 -1
     (nil))
(code_label 384 383 385 59 23 "" [2 uses])
(note 385 384 386 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 386 385 387 59 (set (reg:SI 141 [ D.5404 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10520 [0xffffffffffffd6e8])) [0 endOfFile+0 S4 A64])) eventextend.c:182 -1
     (nil))
(insn 387 386 388 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 141 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:182 -1
     (nil))
(jump_insn 388 387 389 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 409)
            (pc))) eventextend.c:182 -1
     (nil)
 -> 409)
(note 389 388 390 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:182 -1
     (nil))
(jump_insn 391 390 392 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 409)
            (pc))) eventextend.c:182 -1
     (nil)
 -> 409)
(note 392 391 393 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 393 392 394 61 (set (reg/f:DI 142 [ D.5406 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10496 [0xffffffffffffd700])) [0 tssContext+0 S8 A64])) eventextend.c:183 -1
     (nil))
(insn 394 393 395 61 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10448 [0xffffffffffffd730])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:183 -1
     (nil))
(insn 395 394 396 61 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -9712 [0xffffffffffffda10])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:183 -1
     (nil))
(insn 396 395 397 61 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) eventextend.c:183 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 397 396 398 61 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) eventextend.c:183 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 398 397 399 61 (set (reg:SI 38 r9)
        (const_int 1073741831 [0x40000007])) eventextend.c:183 -1
     (nil))
(insn 399 398 400 61 (set (reg:SI 37 r8)
        (const_int 382 [0x17e])) eventextend.c:183 -1
     (nil))
(insn 400 399 401 61 (set (reg:DI 2 cx)
        (const_int 0 [0])) eventextend.c:183 -1
     (nil))
(insn 401 400 402 61 (set (reg:DI 1 dx)
        (reg:DI 195)) eventextend.c:183 -1
     (nil))
(insn 402 401 403 61 (set (reg:DI 4 si)
        (reg:DI 196)) eventextend.c:183 -1
     (nil))
(insn 403 402 404 61 (set (reg:DI 5 di)
        (reg/f:DI 142 [ D.5406 ])) eventextend.c:183 -1
     (nil))
(insn 404 403 405 61 (set (reg:QI 0 ax)
        (const_int 0 [0])) eventextend.c:183 -1
     (nil))
(call_insn 405 404 406 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7f2e1c1ace58 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 16 [0x10]))) eventextend.c:183 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 406 405 407 61 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:183 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 407 406 408 61 (set (reg:SI 197)
        (reg:SI 0 ax)) eventextend.c:183 -1
     (nil))
(insn 408 407 409 61 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
        (reg:SI 197)) eventextend.c:183 -1
     (nil))
(code_label 409 408 410 62 24 "" [2 uses])
(note 410 409 411 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 411 410 412 62 (set (reg:SI 143 [ D.5404 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10520 [0xffffffffffffd6e8])) [0 endOfFile+0 S4 A64])) eventextend.c:190 -1
     (nil))
(insn 412 411 413 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 143 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:190 -1
     (nil))
(jump_insn 413 412 414 62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 428)
            (pc))) eventextend.c:190 612 {*jcc_1}
     (nil)
 -> 428)
(note 414 413 415 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 415 414 416 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:190 -1
     (nil))
(jump_insn 416 415 417 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 428)
            (pc))) eventextend.c:190 612 {*jcc_1}
     (nil)
 -> 428)
(note 417 416 418 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 418 417 419 64 (set (reg:HI 144 [ D.5407 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -9680 [0xffffffffffffda30])) [0 pcrReadOut.pcrValues.digests[0].t.size+0 S2 A64])) eventextend.c:193 -1
     (nil))
(insn 419 418 420 64 (set (reg:SI 145 [ D.5405 ])
        (zero_extend:SI (reg:HI 144 [ D.5407 ]))) eventextend.c:191 -1
     (nil))
(insn 420 419 421 64 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -9712 [0xffffffffffffda10])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:191 -1
     (nil))
(insn 421 420 422 64 (parallel [
            (set (reg:DI 199)
                (plus:DI (reg:DI 198)
                    (const_int 34 [0x22])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:191 -1
     (nil))
(insn 422 421 423 64 (set (reg:SI 1 dx)
        (reg:SI 145 [ D.5405 ])) eventextend.c:191 -1
     (nil))
(insn 423 422 424 64 (set (reg:DI 4 si)
        (reg:DI 199)) eventextend.c:191 -1
     (nil))
(insn 424 423 425 64 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f2e1bdfabd0 *.LC13>)) eventextend.c:191 -1
     (nil))
(call_insn 425 424 428 64 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7f2e1c17b948 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) eventextend.c:191 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(code_label 428 425 429 66 21 "" [4 uses])
(note 429 428 430 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 430 429 431 66 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -10508 [0xffffffffffffd6f4])) [0 lineNum+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -10508 [0xffffffffffffd6f4])) [0 lineNum+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:140 -1
     (nil))
(code_label 431 430 432 67 17 "" [1 uses])
(note 432 431 433 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 433 432 434 67 (set (reg:SI 123 [ D.5404 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10520 [0xffffffffffffd6e8])) [0 endOfFile+0 S4 A64])) eventextend.c:140 -1
     (nil))
(insn 434 433 435 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 123 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:140 -1
     (nil))
(jump_insn 435 434 436 67 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 440)
            (pc))) eventextend.c:140 -1
     (nil)
 -> 440)
(note 436 435 438 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 438 436 439 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:140 -1
     (nil))
(jump_insn 439 438 440 68 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 437)
            (pc))) eventextend.c:140 -1
     (nil)
 -> 437)
(code_label 440 439 441 69 26 "" [1 uses])
(note 441 440 442 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 442 441 443 69 (set (reg/f:DI 146 [ D.5406 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10496 [0xffffffffffffd700])) [0 tssContext+0 S8 A64])) eventextend.c:198 -1
     (nil))
(insn 443 442 444 69 (set (reg:DI 5 di)
        (reg/f:DI 146 [ D.5406 ])) eventextend.c:198 -1
     (nil))
(call_insn 444 443 445 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Delete") [flags 0x41]  <function_decl 0x7f2e1c1acd80 TSS_Delete>) [0 TSS_Delete S1 A8])
            (const_int 0 [0]))) eventextend.c:198 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 445 444 446 69 (set (reg:SI 200)
        (reg:SI 0 ax)) eventextend.c:198 -1
     (nil))
(insn 446 445 447 69 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10500 [0xffffffffffffd6fc])) [0 rc1+0 S4 A32])
        (reg:SI 200)) eventextend.c:198 -1
     (nil))
(insn 447 446 448 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:199 -1
     (nil))
(jump_insn 448 447 449 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 452)
            (pc))) eventextend.c:199 -1
     (nil)
 -> 452)
(note 449 448 450 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 450 449 451 70 (set (reg:SI 201)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10500 [0xffffffffffffd6fc])) [0 rc1+0 S4 A32])) eventextend.c:200 -1
     (nil))
(insn 451 450 452 70 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
        (reg:SI 201)) eventextend.c:200 -1
     (nil))
(code_label 452 451 453 71 28 "" [1 uses])
(note 453 452 454 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 454 453 455 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) eventextend.c:203 -1
     (nil))
(jump_insn 455 454 456 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 467)
            (pc))) eventextend.c:203 -1
     (nil)
 -> 467)
(note 456 455 457 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 457 456 458 72 (set (reg:SI 147 [ D.5404 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f2e1c010090 verbose>) [0 verbose+0 S4 A32])) eventextend.c:204 -1
     (nil))
(insn 458 457 459 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 147 [ D.5404 ])
            (const_int 0 [0]))) eventextend.c:204 -1
     (nil))
(jump_insn 459 458 460 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 493)
            (pc))) eventextend.c:204 612 {*jcc_1}
     (nil)
 -> 493)
(note 460 459 461 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 461 460 462 73 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f2e1bdfac60 *.LC14>)) eventextend.c:204 -1
     (nil))
(call_insn 462 461 465 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2e1c251360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) eventextend.c:204 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 465 462 466 73 (set (pc)
        (label_ref 493)) -1
     (nil)
 -> 493)
(barrier 466 465 467)
(code_label 467 466 468 75 29 "" [1 uses])
(note 468 467 469 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 469 468 470 75 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])) eventextend.c:210 -1
     (nil))
(insn 470 469 471 75 (set (reg:SI 4 si)
        (reg:SI 202)) eventextend.c:210 -1
     (nil))
(insn 471 470 472 75 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f2e1bdfacf0 *.LC15>)) eventextend.c:210 -1
     (nil))
(insn 472 471 473 75 (set (reg:QI 0 ax)
        (const_int 0 [0])) eventextend.c:210 -1
     (nil))
(call_insn 473 472 474 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2e1c24eca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) eventextend.c:210 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 474 473 475 75 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])) eventextend.c:211 -1
     (nil))
(insn 475 474 476 75 (parallel [
            (set (reg:DI 204)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10472 [0xffffffffffffd718])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:211 -1
     (nil))
(insn 476 475 477 75 (parallel [
            (set (reg:DI 205)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10480 [0xffffffffffffd710])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:211 -1
     (nil))
(insn 477 476 478 75 (parallel [
            (set (reg:DI 206)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10488 [0xffffffffffffd708])))
            (clobber (reg:CC 17 flags))
        ]) eventextend.c:211 -1
     (nil))
(insn 478 477 479 75 (set (reg:SI 2 cx)
        (reg:SI 203)) eventextend.c:211 -1
     (nil))
(insn 479 478 480 75 (set (reg:DI 1 dx)
        (reg:DI 204)) eventextend.c:211 -1
     (nil))
(insn 480 479 481 75 (set (reg:DI 4 si)
        (reg:DI 205)) eventextend.c:211 -1
     (nil))
(insn 481 480 482 75 (set (reg:DI 5 di)
        (reg:DI 206)) eventextend.c:211 -1
     (nil))
(call_insn 482 481 483 75 (call (mem:QI (symbol_ref:DI ("TSS_ResponseCode_toString") [flags 0x41]  <function_decl 0x7f2e1c1b40d8 TSS_ResponseCode_toString>) [0 TSS_ResponseCode_toString S1 A8])
        (const_int 0 [0])) eventextend.c:211 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 483 482 484 75 (set (reg/f:DI 148 [ D.5409 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10472 [0xffffffffffffd718])) [0 num+0 S8 A64])) eventextend.c:212 -1
     (nil))
(insn 484 483 485 75 (set (reg/f:DI 149 [ D.5409 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10480 [0xffffffffffffd710])) [0 submsg+0 S8 A64])) eventextend.c:212 -1
     (nil))
(insn 485 484 486 75 (set (reg/f:DI 150 [ D.5409 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10488 [0xffffffffffffd708])) [0 msg+0 S8 A64])) eventextend.c:212 -1
     (nil))
(insn 486 485 487 75 (set (reg:DI 2 cx)
        (reg/f:DI 148 [ D.5409 ])) eventextend.c:212 -1
     (nil))
(insn 487 486 488 75 (set (reg:DI 1 dx)
        (reg/f:DI 149 [ D.5409 ])) eventextend.c:212 -1
     (nil))
(insn 488 487 489 75 (set (reg:DI 4 si)
        (reg/f:DI 150 [ D.5409 ])) eventextend.c:212 -1
     (nil))
(insn 489 488 490 75 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f2e1bdfad80 *.LC16>)) eventextend.c:212 -1
     (nil))
(insn 490 489 491 75 (set (reg:QI 0 ax)
        (const_int 0 [0])) eventextend.c:212 -1
     (nil))
(call_insn 491 490 492 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2e1c24eca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) eventextend.c:212 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 492 491 493 75 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) eventextend.c:213 -1
     (nil))
(code_label 493 492 494 76 31 "" [2 uses])
(note 494 493 495 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 495 494 496 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10456 [0xffffffffffffd728])) [0 infile+0 S8 A64])
            (const_int 0 [0]))) eventextend.c:215 -1
     (nil))
(jump_insn 496 495 497 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 501)
            (pc))) eventextend.c:215 -1
     (nil)
 -> 501)
(note 497 496 498 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 498 497 499 77 (set (reg:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10456 [0xffffffffffffd728])) [0 infile+0 S8 A64])) eventextend.c:216 -1
     (nil))
(insn 499 498 500 77 (set (reg:DI 5 di)
        (reg:DI 207)) eventextend.c:216 -1
     (nil))
(call_insn 500 499 501 77 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f2e1c338948 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) eventextend.c:216 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 501 500 502 78 32 "" [1 uses])
(note 502 501 503 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 503 502 506 78 (set (reg:SI 151 [ D.5404 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10516 [0xffffffffffffd6ec])) [0 rc+0 S4 A32])) eventextend.c:218 -1
     (nil))
(insn 506 503 510 78 (set (reg:SI 152 [ <retval> ])
        (reg:SI 151 [ D.5404 ])) -1
     (nil))
(insn 510 506 511 78 (set (reg/i:SI 0 ax)
        (reg:SI 152 [ <retval> ])) eventextend.c:219 -1
     (nil))
(insn 511 510 512 78 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.5410+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) eventextend.c:219 -1
     (nil))
(jump_insn 512 511 518 78 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 515)
            (pc))) eventextend.c:219 -1
     (nil)
 -> 515)
(note 518 512 513 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(call_insn 513 518 514 81 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f2e1bde8af8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) eventextend.c:219 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 514 513 515)
(code_label 515 514 519 82 34 "" [1 uses])
(note 519 515 516 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 516 519 0 82 (use (reg/i:SI 0 ax)) eventextend.c:219 -1
     (nil))

;; Function printUsage (printUsage, funcdef_no=3, decl_uid=5205, cgraph_uid=3, symbol_order=4)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f2e1be1b510 *.LC17>)) eventextend.c:223 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2e1c251360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) eventextend.c:223 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) eventextend.c:224 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f2e1c251000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) eventextend.c:224 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f2e1be1b5a0 *.LC18>)) eventextend.c:225 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2e1c251360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) eventextend.c:225 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) eventextend.c:226 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f2e1c251000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) eventextend.c:226 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f2e1be1b630 *.LC19>)) eventextend.c:227 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2e1c251360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) eventextend.c:227 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f2e1be1b6c0 *.LC20>)) eventextend.c:228 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2e1c251360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) eventextend.c:228 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f2e1be1b750 *.LC21>)) eventextend.c:229 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2e1c251360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) eventextend.c:229 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) eventextend.c:230 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f2e1c251000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) eventextend.c:230 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:SI 5 di)
        (const_int -1 [0xffffffffffffffff])) eventextend.c:231 -1
     (nil))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f2e1c264000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) eventextend.c:231 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 23 22 0)
