
;; Function main (main, funcdef_no=2, decl_uid=16775, cgraph_uid=2, symbol_order=3)

Partition 14: size 668 align 16
	in
Partition 15: size 272 align 16
	out
Partition 20: size 130 align 16
	aHash
Partition 10: size 8 align 8
	signatureFilename_41
Partition 9: size 8 align 8
	signingKeyPassword_38
Partition 8: size 8 align 8
	signingKeyFilename_35
Partition 6: size 8 align 8
	timeoutFilename_29
Partition 5: size 8 align 8
	ticketFilename_26
Partition 4: size 8 align 8
	policyRefFilename_23
Partition 3: size 8 align 8
	cpHashAFilename_20
Partition 2: size 8 align 8
	nonceTPMFilename_17
Partition 24: size 8 align 8
	num	expirationNbo
Partition 23: size 8 align 8
	submsg
Partition 22: size 8 align 8
	msg
Partition 19: size 8 align 8
	signatureLength
Partition 18: size 8 align 8
	signature
Partition 13: size 8 align 8
	tssContext
Partition 12: size 4 align 4
	rc1_346
Partition 7: size 4 align 4
	expiration_32
Partition 1: size 4 align 4
	i_15
Partition 0: size 4 align 4
	rc_1
Partition 17: size 4 align 4
	policySession
Partition 16: size 4 align 4
	authObject
Partition 11: size 2 align 2
	halg_44

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; Generating RTL for gimple basic block 110

;; Generating RTL for gimple basic block 111

;; Generating RTL for gimple basic block 112

;; Generating RTL for gimple basic block 113

;; Generating RTL for gimple basic block 114

;; Generating RTL for gimple basic block 115

;; Generating RTL for gimple basic block 116

;; Generating RTL for gimple basic block 117

;; Generating RTL for gimple basic block 118

;; Generating RTL for gimple basic block 119

;; Generating RTL for gimple basic block 120

;; Generating RTL for gimple basic block 121

;; Generating RTL for gimple basic block 122

;; Generating RTL for gimple basic block 123

;; Generating RTL for gimple basic block 124

;; Generating RTL for gimple basic block 125

;; Generating RTL for gimple basic block 126

;; Generating RTL for gimple basic block 127

;; Generating RTL for gimple basic block 128

;; Generating RTL for gimple basic block 129

;; Generating RTL for gimple basic block 130


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 72 from 8 to 74.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Redirecting jump 115 from 13 to 74.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Redirecting jump 153 from 18 to 74.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Redirecting jump 191 from 23 to 74.
Merging block 23 into block 22...
Merged blocks 22 and 23.
Merged 22 and 23 without moving.
Redirecting jump 229 from 28 to 74.
Merging block 28 into block 27...
Merged blocks 27 and 28.
Merged 27 and 28 without moving.
Redirecting jump 270 from 33 to 74.
Merging block 33 into block 32...
Merged blocks 32 and 33.
Merged 32 and 33 without moving.
Redirecting jump 308 from 38 to 74.
Merging block 38 into block 37...
Merged blocks 37 and 38.
Merged 37 and 38 without moving.
Redirecting jump 346 from 43 to 74.
Merging block 43 into block 42...
Merged blocks 42 and 43.
Merged 42 and 43 without moving.
Redirecting jump 384 from 48 to 74.
Merging block 48 into block 47...
Merged blocks 47 and 48.
Merged 47 and 48 without moving.
Redirecting jump 422 from 53 to 74.
Merging block 53 into block 52...
Merged blocks 52 and 53.
Merged 52 and 53 without moving.
Redirecting jump 460 from 58 to 74.
Merging block 58 into block 57...
Merged blocks 57 and 58.
Merged 57 and 58 without moving.
Redirecting jump 505 from 66 to 74.
Redirecting jump 523 from 66 to 74.
Merging block 66 into block 65...
Merged blocks 65 and 66.
Merged 65 and 66 without moving.
Redirecting jump 532 from 68 to 74.
Merging block 68 into block 67...
Merged blocks 67 and 68.
Merged 67 and 68 without moving.
Edge 126->128 redirected to 130
Merging block 128 into block 127...
Merged blocks 127 and 128.
Merged 127 and 128 without moving.
Merging block 131 into block 130...
Merged blocks 130 and 131.
Merged 130 and 131 without moving.
Removing jump 962.
Merging block 132 into block 130...
Merged blocks 130 and 132.
Merged 130 and 132 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1252 [0xfffffffffffffb1c])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) policysigned.c:77 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) policysigned.c:77 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.17185+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:77 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
        (const_int 0 [0])) policysigned.c:78 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 tssContext+0 S8 A64])
        (const_int 0 [0])) policysigned.c:80 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1240 [0xfffffffffffffb28])) [0 authObject+0 S4 A64])
        (const_int 0 [0])) policysigned.c:83 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1236 [0xfffffffffffffb2c])) [0 policySession+0 S4 A32])
        (const_int 0 [0])) policysigned.c:84 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 nonceTPMFilename+0 S8 A64])
        (const_int 0 [0])) policysigned.c:85 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1160 [0xfffffffffffffb78])) [0 cpHashAFilename+0 S8 A64])
        (const_int 0 [0])) policysigned.c:86 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1152 [0xfffffffffffffb80])) [0 policyRefFilename+0 S8 A64])
        (const_int 0 [0])) policysigned.c:87 -1
     (nil))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1144 [0xfffffffffffffb88])) [0 ticketFilename+0 S8 A64])
        (const_int 0 [0])) policysigned.c:88 -1
     (nil))
(insn 16 15 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1136 [0xfffffffffffffb90])) [0 timeoutFilename+0 S8 A64])
        (const_int 0 [0])) policysigned.c:89 -1
     (nil))
(insn 17 16 18 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1224 [0xfffffffffffffb38])) [0 expiration+0 S4 A32])
        (const_int 0 [0])) policysigned.c:90 -1
     (nil))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1128 [0xfffffffffffffb98])) [0 signingKeyFilename+0 S8 A64])
        (const_int 0 [0])) policysigned.c:91 -1
     (nil))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1120 [0xfffffffffffffba0])) [0 signingKeyPassword+0 S8 A64])
        (const_int 0 [0])) policysigned.c:92 -1
     (nil))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1112 [0xfffffffffffffba8])) [0 signatureFilename+0 S8 A64])
        (const_int 0 [0])) policysigned.c:93 -1
     (nil))
(insn 21 20 22 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1208 [0xfffffffffffffb48])) [0 signature+0 S8 A64])
        (const_int 0 [0])) policysigned.c:94 -1
     (nil))
(insn 22 21 23 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1242 [0xfffffffffffffb26])) [0 halg+0 S2 A16])
        (const_int 11 [0xb])) policysigned.c:96 -1
     (nil))
(insn 23 22 24 2 (set (reg/f:DI 87 [ D.17174 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7fe01ae425a0 stdout>) [0 stdout+0 S8 A64])) policysigned.c:99 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) policysigned.c:99 -1
     (nil))
(insn 25 24 26 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) policysigned.c:99 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 4 si)
        (const_int 0 [0])) policysigned.c:99 -1
     (nil))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.17174 ])) policysigned.c:99 -1
     (nil))
(call_insn 28 27 29 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("setvbuf") [flags 0x41]  <function_decl 0x7fe01ae821b0 setvbuf>) [0 setvbuf S1 A8])
            (const_int 0 [0]))) policysigned.c:99 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 29 28 30 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fe01a1083f0 *.LC0>)) policysigned.c:100 -1
     (nil))
(insn 30 29 31 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) policysigned.c:100 -1
     (nil))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (const_int 0 [0])) policysigned.c:100 -1
     (nil))
(call_insn 32 31 33 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7fe01a3c10d8 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) policysigned.c:100 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(call_insn 33 32 34 2 (call (mem:QI (symbol_ref:DI ("OPENSSL_add_all_algorithms_noconf") [flags 0x41]  <function_decl 0x7fe01a71c0d8 OPENSSL_add_all_algorithms_noconf>) [0 OPENSSL_add_all_algorithms_noconf S1 A8])
        (const_int 0 [0])) policysigned.c:101 -1
     (nil)
    (nil))
(call_insn 34 33 35 2 (call (mem:QI (symbol_ref:DI ("ERR_load_crypto_strings") [flags 0x41]  <function_decl 0x7fe01a789438 ERR_load_crypto_strings>) [0 ERR_load_crypto_strings S1 A8])
        (const_int 0 [0])) policysigned.c:102 -1
     (nil)
    (nil))
(insn 35 34 36 2 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [0 in.nonceTPM.b.size+0 S2 A64])
        (const_int 0 [0])) policysigned.c:106 -1
     (nil))
(insn 36 35 37 2 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -550 [0xfffffffffffffdda])) [0 in.cpHashA.b.size+0 S2 A16])
        (const_int 0 [0])) policysigned.c:107 -1
     (nil))
(insn 37 36 38 2 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -420 [0xfffffffffffffe5c])) [0 in.policyRef.b.size+0 S2 A32])
        (const_int 0 [0])) policysigned.c:108 -1
     (nil))
(insn 38 37 39 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) policysigned.c:110 -1
     (nil))
(jump_insn 39 38 40 2 (set (pc)
        (label_ref 599)) policysigned.c:110 -1
     (nil)
 -> 599)
(barrier 40 39 605)
(code_label 605 40 41 4 46 "" [1 uses])
(note 41 605 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 4 (set (reg:SI 239)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:111 -1
     (nil))
(insn 43 42 44 4 (set (reg:DI 88 [ D.17175 ])
        (sign_extend:DI (reg:SI 239))) policysigned.c:111 -1
     (nil))
(insn 44 43 45 4 (parallel [
            (set (reg:DI 89 [ D.17175 ])
                (ashift:DI (reg:DI 88 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:111 -1
     (nil))
(insn 45 44 46 4 (set (reg/f:DI 240)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:111 -1
     (nil))
(insn 46 45 47 4 (parallel [
            (set (reg/f:DI 90 [ D.17176 ])
                (plus:DI (reg:DI 89 [ D.17175 ])
                    (reg/f:DI 240)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:111 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 89 [ D.17175 ]))
        (nil)))
(insn 47 46 48 4 (set (reg/f:DI 91 [ D.17177 ])
        (mem/f:DI (reg/f:DI 90 [ D.17176 ]) [0 *_112+0 S8 A64])) policysigned.c:111 -1
     (nil))
(insn 48 47 49 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fe01a108480 *.LC1>)) policysigned.c:111 -1
     (nil))
(insn 49 48 50 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.17177 ])) policysigned.c:111 -1
     (nil))
(call_insn/i 50 49 51 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fe01ad8a0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysigned.c:111 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 51 50 52 4 (set (reg:SI 92 [ D.17178 ])
        (reg:SI 0 ax)) policysigned.c:111 -1
     (nil))
(insn 52 51 53 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.17178 ])
            (const_int 0 [0]))) policysigned.c:111 -1
     (nil))
(jump_insn 53 52 54 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) policysigned.c:111 -1
     (nil)
 -> 83)
(note 54 53 55 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:112 -1
     (nil))
(insn 56 55 57 5 (set (reg:SI 241)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:113 -1
     (nil))
(insn 57 56 58 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 241)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1252 [0xfffffffffffffb1c])) [0 argc+0 S4 A32]))) policysigned.c:113 -1
     (nil))
(jump_insn 58 57 59 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) policysigned.c:113 -1
     (nil)
 -> 74)
(note 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 6 (set (reg:SI 242)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:114 -1
     (nil))
(insn 61 60 62 6 (set (reg:DI 93 [ D.17175 ])
        (sign_extend:DI (reg:SI 242))) policysigned.c:114 -1
     (nil))
(insn 62 61 63 6 (parallel [
            (set (reg:DI 94 [ D.17175 ])
                (ashift:DI (reg:DI 93 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:114 -1
     (nil))
(insn 63 62 64 6 (set (reg/f:DI 243)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:114 -1
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg/f:DI 95 [ D.17176 ])
                (plus:DI (reg:DI 94 [ D.17175 ])
                    (reg/f:DI 243)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:114 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 94 [ D.17175 ]))
        (nil)))
(insn 65 64 66 6 (set (reg/f:DI 96 [ D.17177 ])
        (mem/f:DI (reg/f:DI 95 [ D.17176 ]) [0 *_118+0 S8 A64])) policysigned.c:114 -1
     (nil))
(insn 66 65 67 6 (parallel [
            (set (reg:DI 244)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1240 [0xfffffffffffffb28])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:114 -1
     (nil))
(insn 67 66 68 6 (set (reg:DI 1 dx)
        (reg:DI 244)) policysigned.c:114 -1
     (nil))
(insn 68 67 69 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fe01a108510 *.LC2>)) policysigned.c:114 -1
     (nil))
(insn 69 68 70 6 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.17177 ])) policysigned.c:114 -1
     (nil))
(insn 70 69 71 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysigned.c:114 -1
     (nil))
(call_insn 71 70 72 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fe01ad93ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policysigned.c:114 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 72 71 73 6 (set (pc)
        (label_ref:DI 596)) 654 {jump}
     (nil)
 -> 596)
(barrier 73 72 74)
(code_label 74 73 75 7 4 "" [1 uses])
(note 75 74 76 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fe01a1085a0 *.LC3>)) policysigned.c:117 -1
     (nil))
(call_insn 77 76 78 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:117 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 78 77 81 7 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:118 -1
     (nil)
    (nil))
(jump_insn 81 78 82 7 (set (pc)
        (label_ref 596)) -1
     (nil)
 -> 596)
(barrier 82 81 83)
(code_label 83 82 84 9 3 "" [1 uses])
(note 84 83 85 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 9 (set (reg:SI 245)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:121 -1
     (nil))
(insn 86 85 87 9 (set (reg:DI 97 [ D.17175 ])
        (sign_extend:DI (reg:SI 245))) policysigned.c:121 -1
     (nil))
(insn 87 86 88 9 (parallel [
            (set (reg:DI 98 [ D.17175 ])
                (ashift:DI (reg:DI 97 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:121 -1
     (nil))
(insn 88 87 89 9 (set (reg/f:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:121 -1
     (nil))
(insn 89 88 90 9 (parallel [
            (set (reg/f:DI 99 [ D.17176 ])
                (plus:DI (reg:DI 98 [ D.17175 ])
                    (reg/f:DI 246)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:121 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 98 [ D.17175 ]))
        (nil)))
(insn 90 89 91 9 (set (reg/f:DI 100 [ D.17177 ])
        (mem/f:DI (reg/f:DI 99 [ D.17176 ]) [0 *_125+0 S8 A64])) policysigned.c:121 -1
     (nil))
(insn 91 90 92 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fe01a108630 *.LC4>)) policysigned.c:121 -1
     (nil))
(insn 92 91 93 9 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.17177 ])) policysigned.c:121 -1
     (nil))
(call_insn/i 93 92 94 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fe01ad8a0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysigned.c:121 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 94 93 95 9 (set (reg:SI 101 [ D.17178 ])
        (reg:SI 0 ax)) policysigned.c:121 -1
     (nil))
(insn 95 94 96 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.17178 ])
            (const_int 0 [0]))) policysigned.c:121 -1
     (nil))
(jump_insn 96 95 97 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 126)
            (pc))) policysigned.c:121 -1
     (nil)
 -> 126)
(note 97 96 98 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:122 -1
     (nil))
(insn 99 98 100 10 (set (reg:SI 247)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:123 -1
     (nil))
(insn 100 99 101 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 247)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1252 [0xfffffffffffffb1c])) [0 argc+0 S4 A32]))) policysigned.c:123 -1
     (nil))
(jump_insn 101 100 102 10 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) policysigned.c:123 -1
     (nil)
 -> 117)
(note 102 101 103 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 11 (set (reg:SI 248)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:124 -1
     (nil))
(insn 104 103 105 11 (set (reg:DI 102 [ D.17175 ])
        (sign_extend:DI (reg:SI 248))) policysigned.c:124 -1
     (nil))
(insn 105 104 106 11 (parallel [
            (set (reg:DI 103 [ D.17175 ])
                (ashift:DI (reg:DI 102 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:124 -1
     (nil))
(insn 106 105 107 11 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:124 -1
     (nil))
(insn 107 106 108 11 (parallel [
            (set (reg/f:DI 104 [ D.17176 ])
                (plus:DI (reg:DI 103 [ D.17175 ])
                    (reg/f:DI 249)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:124 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 103 [ D.17175 ]))
        (nil)))
(insn 108 107 109 11 (set (reg/f:DI 105 [ D.17177 ])
        (mem/f:DI (reg/f:DI 104 [ D.17176 ]) [0 *_131+0 S8 A64])) policysigned.c:124 -1
     (nil))
(insn 109 108 110 11 (parallel [
            (set (reg:DI 250)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1236 [0xfffffffffffffb2c])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:124 -1
     (nil))
(insn 110 109 111 11 (set (reg:DI 1 dx)
        (reg:DI 250)) policysigned.c:124 -1
     (nil))
(insn 111 110 112 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fe01a108510 *.LC2>)) policysigned.c:124 -1
     (nil))
(insn 112 111 113 11 (set (reg:DI 5 di)
        (reg/f:DI 105 [ D.17177 ])) policysigned.c:124 -1
     (nil))
(insn 113 112 114 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysigned.c:124 -1
     (nil))
(call_insn 114 113 115 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fe01ad93ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policysigned.c:124 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 115 114 116 11 (set (pc)
        (label_ref:DI 596)) 654 {jump}
     (nil)
 -> 596)
(barrier 116 115 117)
(code_label 117 116 118 12 8 "" [1 uses])
(note 118 117 119 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fe01a1086c0 *.LC5>)) policysigned.c:127 -1
     (nil))
(call_insn 120 119 121 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:127 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 121 120 124 12 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:128 -1
     (nil)
    (nil))
(jump_insn 124 121 125 12 (set (pc)
        (label_ref 596)) -1
     (nil)
 -> 596)
(barrier 125 124 126)
(code_label 126 125 127 14 7 "" [1 uses])
(note 127 126 128 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 14 (set (reg:SI 251)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:131 -1
     (nil))
(insn 129 128 130 14 (set (reg:DI 106 [ D.17175 ])
        (sign_extend:DI (reg:SI 251))) policysigned.c:131 -1
     (nil))
(insn 130 129 131 14 (parallel [
            (set (reg:DI 107 [ D.17175 ])
                (ashift:DI (reg:DI 106 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:131 -1
     (nil))
(insn 131 130 132 14 (set (reg/f:DI 252)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:131 -1
     (nil))
(insn 132 131 133 14 (parallel [
            (set (reg/f:DI 108 [ D.17176 ])
                (plus:DI (reg:DI 107 [ D.17175 ])
                    (reg/f:DI 252)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:131 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 107 [ D.17175 ]))
        (nil)))
(insn 133 132 134 14 (set (reg/f:DI 109 [ D.17177 ])
        (mem/f:DI (reg/f:DI 108 [ D.17176 ]) [0 *_138+0 S8 A64])) policysigned.c:131 -1
     (nil))
(insn 134 133 135 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fe01a108750 *.LC6>)) policysigned.c:131 -1
     (nil))
(insn 135 134 136 14 (set (reg:DI 5 di)
        (reg/f:DI 109 [ D.17177 ])) policysigned.c:131 -1
     (nil))
(call_insn/i 136 135 137 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fe01ad8a0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysigned.c:131 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 137 136 138 14 (set (reg:SI 110 [ D.17178 ])
        (reg:SI 0 ax)) policysigned.c:131 -1
     (nil))
(insn 138 137 139 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 110 [ D.17178 ])
            (const_int 0 [0]))) policysigned.c:131 -1
     (nil))
(jump_insn 139 138 140 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 164)
            (pc))) policysigned.c:131 -1
     (nil)
 -> 164)
(note 140 139 141 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:132 -1
     (nil))
(insn 142 141 143 15 (set (reg:SI 253)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:133 -1
     (nil))
(insn 143 142 144 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 253)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1252 [0xfffffffffffffb1c])) [0 argc+0 S4 A32]))) policysigned.c:133 -1
     (nil))
(jump_insn 144 143 145 15 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 155)
            (pc))) policysigned.c:133 -1
     (nil)
 -> 155)
(note 145 144 146 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 16 (set (reg:SI 254)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:134 -1
     (nil))
(insn 147 146 148 16 (set (reg:DI 111 [ D.17175 ])
        (sign_extend:DI (reg:SI 254))) policysigned.c:134 -1
     (nil))
(insn 148 147 149 16 (parallel [
            (set (reg:DI 112 [ D.17175 ])
                (ashift:DI (reg:DI 111 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:134 -1
     (nil))
(insn 149 148 150 16 (set (reg/f:DI 255)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:134 -1
     (nil))
(insn 150 149 151 16 (parallel [
            (set (reg/f:DI 113 [ D.17176 ])
                (plus:DI (reg:DI 112 [ D.17175 ])
                    (reg/f:DI 255)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:134 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 112 [ D.17175 ]))
        (nil)))
(insn 151 150 152 16 (set (reg/f:DI 256)
        (mem/f:DI (reg/f:DI 113 [ D.17176 ]) [0 *_144+0 S8 A64])) policysigned.c:134 -1
     (nil))
(insn 152 151 153 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 nonceTPMFilename+0 S8 A64])
        (reg/f:DI 256)) policysigned.c:134 -1
     (nil))
(jump_insn 153 152 154 16 (set (pc)
        (label_ref:DI 596)) 654 {jump}
     (nil)
 -> 596)
(barrier 154 153 155)
(code_label 155 154 156 17 11 "" [1 uses])
(note 156 155 157 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fe01a1087e0 *.LC7>)) policysigned.c:137 -1
     (nil))
(call_insn 158 157 159 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:137 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 159 158 162 17 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:138 -1
     (nil)
    (nil))
(jump_insn 162 159 163 17 (set (pc)
        (label_ref 596)) -1
     (nil)
 -> 596)
(barrier 163 162 164)
(code_label 164 163 165 19 10 "" [1 uses])
(note 165 164 166 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 19 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:141 -1
     (nil))
(insn 167 166 168 19 (set (reg:DI 114 [ D.17175 ])
        (sign_extend:DI (reg:SI 257))) policysigned.c:141 -1
     (nil))
(insn 168 167 169 19 (parallel [
            (set (reg:DI 115 [ D.17175 ])
                (ashift:DI (reg:DI 114 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:141 -1
     (nil))
(insn 169 168 170 19 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:141 -1
     (nil))
(insn 170 169 171 19 (parallel [
            (set (reg/f:DI 116 [ D.17176 ])
                (plus:DI (reg:DI 115 [ D.17175 ])
                    (reg/f:DI 258)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:141 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 115 [ D.17175 ]))
        (nil)))
(insn 171 170 172 19 (set (reg/f:DI 117 [ D.17177 ])
        (mem/f:DI (reg/f:DI 116 [ D.17176 ]) [0 *_150+0 S8 A64])) policysigned.c:141 -1
     (nil))
(insn 172 171 173 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fe01a108870 *.LC8>)) policysigned.c:141 -1
     (nil))
(insn 173 172 174 19 (set (reg:DI 5 di)
        (reg/f:DI 117 [ D.17177 ])) policysigned.c:141 -1
     (nil))
(call_insn/i 174 173 175 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fe01ad8a0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysigned.c:141 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 175 174 176 19 (set (reg:SI 118 [ D.17178 ])
        (reg:SI 0 ax)) policysigned.c:141 -1
     (nil))
(insn 176 175 177 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ D.17178 ])
            (const_int 0 [0]))) policysigned.c:141 -1
     (nil))
(jump_insn 177 176 178 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 202)
            (pc))) policysigned.c:141 -1
     (nil)
 -> 202)
(note 178 177 179 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:142 -1
     (nil))
(insn 180 179 181 20 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:143 -1
     (nil))
(insn 181 180 182 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 259)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1252 [0xfffffffffffffb1c])) [0 argc+0 S4 A32]))) policysigned.c:143 -1
     (nil))
(jump_insn 182 181 183 20 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 193)
            (pc))) policysigned.c:143 -1
     (nil)
 -> 193)
(note 183 182 184 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 21 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:144 -1
     (nil))
(insn 185 184 186 21 (set (reg:DI 119 [ D.17175 ])
        (sign_extend:DI (reg:SI 260))) policysigned.c:144 -1
     (nil))
(insn 186 185 187 21 (parallel [
            (set (reg:DI 120 [ D.17175 ])
                (ashift:DI (reg:DI 119 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:144 -1
     (nil))
(insn 187 186 188 21 (set (reg/f:DI 261)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:144 -1
     (nil))
(insn 188 187 189 21 (parallel [
            (set (reg/f:DI 121 [ D.17176 ])
                (plus:DI (reg:DI 120 [ D.17175 ])
                    (reg/f:DI 261)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:144 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 120 [ D.17175 ]))
        (nil)))
(insn 189 188 190 21 (set (reg/f:DI 262)
        (mem/f:DI (reg/f:DI 121 [ D.17176 ]) [0 *_156+0 S8 A64])) policysigned.c:144 -1
     (nil))
(insn 190 189 191 21 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1160 [0xfffffffffffffb78])) [0 cpHashAFilename+0 S8 A64])
        (reg/f:DI 262)) policysigned.c:144 -1
     (nil))
(jump_insn 191 190 192 21 (set (pc)
        (label_ref:DI 596)) 654 {jump}
     (nil)
 -> 596)
(barrier 192 191 193)
(code_label 193 192 194 22 14 "" [1 uses])
(note 194 193 195 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fe01a108900 *.LC9>)) policysigned.c:147 -1
     (nil))
(call_insn 196 195 197 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:147 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 197 196 200 22 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:148 -1
     (nil)
    (nil))
(jump_insn 200 197 201 22 (set (pc)
        (label_ref 596)) -1
     (nil)
 -> 596)
(barrier 201 200 202)
(code_label 202 201 203 24 13 "" [1 uses])
(note 203 202 204 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 204 203 205 24 (set (reg:SI 263)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:151 -1
     (nil))
(insn 205 204 206 24 (set (reg:DI 122 [ D.17175 ])
        (sign_extend:DI (reg:SI 263))) policysigned.c:151 -1
     (nil))
(insn 206 205 207 24 (parallel [
            (set (reg:DI 123 [ D.17175 ])
                (ashift:DI (reg:DI 122 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:151 -1
     (nil))
(insn 207 206 208 24 (set (reg/f:DI 264)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:151 -1
     (nil))
(insn 208 207 209 24 (parallel [
            (set (reg/f:DI 124 [ D.17176 ])
                (plus:DI (reg:DI 123 [ D.17175 ])
                    (reg/f:DI 264)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:151 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 123 [ D.17175 ]))
        (nil)))
(insn 209 208 210 24 (set (reg/f:DI 125 [ D.17177 ])
        (mem/f:DI (reg/f:DI 124 [ D.17176 ]) [0 *_162+0 S8 A64])) policysigned.c:151 -1
     (nil))
(insn 210 209 211 24 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fe01a108990 *.LC10>)) policysigned.c:151 -1
     (nil))
(insn 211 210 212 24 (set (reg:DI 5 di)
        (reg/f:DI 125 [ D.17177 ])) policysigned.c:151 -1
     (nil))
(call_insn/i 212 211 213 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fe01ad8a0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysigned.c:151 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 213 212 214 24 (set (reg:SI 126 [ D.17178 ])
        (reg:SI 0 ax)) policysigned.c:151 -1
     (nil))
(insn 214 213 215 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 126 [ D.17178 ])
            (const_int 0 [0]))) policysigned.c:151 -1
     (nil))
(jump_insn 215 214 216 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) policysigned.c:151 -1
     (nil)
 -> 240)
(note 216 215 217 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 25 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:152 -1
     (nil))
(insn 218 217 219 25 (set (reg:SI 265)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:153 -1
     (nil))
(insn 219 218 220 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 265)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1252 [0xfffffffffffffb1c])) [0 argc+0 S4 A32]))) policysigned.c:153 -1
     (nil))
(jump_insn 220 219 221 25 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 231)
            (pc))) policysigned.c:153 -1
     (nil)
 -> 231)
(note 221 220 222 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 26 (set (reg:SI 266)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:154 -1
     (nil))
(insn 223 222 224 26 (set (reg:DI 127 [ D.17175 ])
        (sign_extend:DI (reg:SI 266))) policysigned.c:154 -1
     (nil))
(insn 224 223 225 26 (parallel [
            (set (reg:DI 128 [ D.17175 ])
                (ashift:DI (reg:DI 127 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:154 -1
     (nil))
(insn 225 224 226 26 (set (reg/f:DI 267)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:154 -1
     (nil))
(insn 226 225 227 26 (parallel [
            (set (reg/f:DI 129 [ D.17176 ])
                (plus:DI (reg:DI 128 [ D.17175 ])
                    (reg/f:DI 267)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:154 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 128 [ D.17175 ]))
        (nil)))
(insn 227 226 228 26 (set (reg/f:DI 268)
        (mem/f:DI (reg/f:DI 129 [ D.17176 ]) [0 *_168+0 S8 A64])) policysigned.c:154 -1
     (nil))
(insn 228 227 229 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1152 [0xfffffffffffffb80])) [0 policyRefFilename+0 S8 A64])
        (reg/f:DI 268)) policysigned.c:154 -1
     (nil))
(jump_insn 229 228 230 26 (set (pc)
        (label_ref:DI 596)) 654 {jump}
     (nil)
 -> 596)
(barrier 230 229 231)
(code_label 231 230 232 27 17 "" [1 uses])
(note 232 231 233 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 234 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fe01a108a20 *.LC11>)) policysigned.c:157 -1
     (nil))
(call_insn 234 233 235 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:157 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 235 234 238 27 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:158 -1
     (nil)
    (nil))
(jump_insn 238 235 239 27 (set (pc)
        (label_ref 596)) -1
     (nil)
 -> 596)
(barrier 239 238 240)
(code_label 240 239 241 29 16 "" [1 uses])
(note 241 240 242 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 29 (set (reg:SI 269)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:161 -1
     (nil))
(insn 243 242 244 29 (set (reg:DI 130 [ D.17175 ])
        (sign_extend:DI (reg:SI 269))) policysigned.c:161 -1
     (nil))
(insn 244 243 245 29 (parallel [
            (set (reg:DI 131 [ D.17175 ])
                (ashift:DI (reg:DI 130 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:161 -1
     (nil))
(insn 245 244 246 29 (set (reg/f:DI 270)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:161 -1
     (nil))
(insn 246 245 247 29 (parallel [
            (set (reg/f:DI 132 [ D.17176 ])
                (plus:DI (reg:DI 131 [ D.17175 ])
                    (reg/f:DI 270)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:161 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 131 [ D.17175 ]))
        (nil)))
(insn 247 246 248 29 (set (reg/f:DI 133 [ D.17177 ])
        (mem/f:DI (reg/f:DI 132 [ D.17176 ]) [0 *_174+0 S8 A64])) policysigned.c:161 -1
     (nil))
(insn 248 247 249 29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fe01a108ab0 *.LC12>)) policysigned.c:161 -1
     (nil))
(insn 249 248 250 29 (set (reg:DI 5 di)
        (reg/f:DI 133 [ D.17177 ])) policysigned.c:161 -1
     (nil))
(call_insn/i 250 249 251 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fe01ad8a0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysigned.c:161 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 251 250 252 29 (set (reg:SI 134 [ D.17178 ])
        (reg:SI 0 ax)) policysigned.c:161 -1
     (nil))
(insn 252 251 253 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 134 [ D.17178 ])
            (const_int 0 [0]))) policysigned.c:161 -1
     (nil))
(jump_insn 253 252 254 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 281)
            (pc))) policysigned.c:161 -1
     (nil)
 -> 281)
(note 254 253 255 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 30 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:162 -1
     (nil))
(insn 256 255 257 30 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:163 -1
     (nil))
(insn 257 256 258 30 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 271)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1252 [0xfffffffffffffb1c])) [0 argc+0 S4 A32]))) policysigned.c:163 -1
     (nil))
(jump_insn 258 257 259 30 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 272)
            (pc))) policysigned.c:163 -1
     (nil)
 -> 272)
(note 259 258 260 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 31 (set (reg:SI 272)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:164 -1
     (nil))
(insn 261 260 262 31 (set (reg:DI 135 [ D.17175 ])
        (sign_extend:DI (reg:SI 272))) policysigned.c:164 -1
     (nil))
(insn 262 261 263 31 (parallel [
            (set (reg:DI 136 [ D.17175 ])
                (ashift:DI (reg:DI 135 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:164 -1
     (nil))
(insn 263 262 264 31 (set (reg/f:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:164 -1
     (nil))
(insn 264 263 265 31 (parallel [
            (set (reg/f:DI 137 [ D.17176 ])
                (plus:DI (reg:DI 136 [ D.17175 ])
                    (reg/f:DI 273)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:164 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 136 [ D.17175 ]))
        (nil)))
(insn 265 264 266 31 (set (reg/f:DI 138 [ D.17177 ])
        (mem/f:DI (reg/f:DI 137 [ D.17176 ]) [0 *_180+0 S8 A64])) policysigned.c:164 -1
     (nil))
(insn 266 265 267 31 (set (reg:DI 5 di)
        (reg/f:DI 138 [ D.17177 ])) policysigned.c:164 -1
     (nil))
(call_insn/i 267 266 268 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7fe01aeb20d8 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) policysigned.c:164 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 268 267 269 31 (set (reg:SI 274)
        (reg:SI 0 ax)) policysigned.c:164 -1
     (nil))
(insn 269 268 270 31 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1224 [0xfffffffffffffb38])) [0 expiration+0 S4 A32])
        (reg:SI 274)) policysigned.c:164 -1
     (nil))
(jump_insn 270 269 271 31 (set (pc)
        (label_ref:DI 596)) 654 {jump}
     (nil)
 -> 596)
(barrier 271 270 272)
(code_label 272 271 273 32 20 "" [1 uses])
(note 273 272 274 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 32 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fe01a108b40 *.LC13>)) policysigned.c:167 -1
     (nil))
(call_insn 275 274 276 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:167 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 276 275 279 32 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:168 -1
     (nil)
    (nil))
(jump_insn 279 276 280 32 (set (pc)
        (label_ref 596)) -1
     (nil)
 -> 596)
(barrier 280 279 281)
(code_label 281 280 282 34 19 "" [1 uses])
(note 282 281 283 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 34 (set (reg:SI 275)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:171 -1
     (nil))
(insn 284 283 285 34 (set (reg:DI 139 [ D.17175 ])
        (sign_extend:DI (reg:SI 275))) policysigned.c:171 -1
     (nil))
(insn 285 284 286 34 (parallel [
            (set (reg:DI 140 [ D.17175 ])
                (ashift:DI (reg:DI 139 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:171 -1
     (nil))
(insn 286 285 287 34 (set (reg/f:DI 276)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:171 -1
     (nil))
(insn 287 286 288 34 (parallel [
            (set (reg/f:DI 141 [ D.17176 ])
                (plus:DI (reg:DI 140 [ D.17175 ])
                    (reg/f:DI 276)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:171 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 140 [ D.17175 ]))
        (nil)))
(insn 288 287 289 34 (set (reg/f:DI 142 [ D.17177 ])
        (mem/f:DI (reg/f:DI 141 [ D.17176 ]) [0 *_187+0 S8 A64])) policysigned.c:171 -1
     (nil))
(insn 289 288 290 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fe01a108bd0 *.LC14>)) policysigned.c:171 -1
     (nil))
(insn 290 289 291 34 (set (reg:DI 5 di)
        (reg/f:DI 142 [ D.17177 ])) policysigned.c:171 -1
     (nil))
(call_insn/i 291 290 292 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fe01ad8a0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysigned.c:171 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 292 291 293 34 (set (reg:SI 143 [ D.17178 ])
        (reg:SI 0 ax)) policysigned.c:171 -1
     (nil))
(insn 293 292 294 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 143 [ D.17178 ])
            (const_int 0 [0]))) policysigned.c:171 -1
     (nil))
(jump_insn 294 293 295 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) policysigned.c:171 -1
     (nil)
 -> 319)
(note 295 294 296 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 296 295 297 35 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:172 -1
     (nil))
(insn 297 296 298 35 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:173 -1
     (nil))
(insn 298 297 299 35 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 277)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1252 [0xfffffffffffffb1c])) [0 argc+0 S4 A32]))) policysigned.c:173 -1
     (nil))
(jump_insn 299 298 300 35 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 310)
            (pc))) policysigned.c:173 -1
     (nil)
 -> 310)
(note 300 299 301 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 36 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:174 -1
     (nil))
(insn 302 301 303 36 (set (reg:DI 144 [ D.17175 ])
        (sign_extend:DI (reg:SI 278))) policysigned.c:174 -1
     (nil))
(insn 303 302 304 36 (parallel [
            (set (reg:DI 145 [ D.17175 ])
                (ashift:DI (reg:DI 144 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:174 -1
     (nil))
(insn 304 303 305 36 (set (reg/f:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:174 -1
     (nil))
(insn 305 304 306 36 (parallel [
            (set (reg/f:DI 146 [ D.17176 ])
                (plus:DI (reg:DI 145 [ D.17175 ])
                    (reg/f:DI 279)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:174 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 145 [ D.17175 ]))
        (nil)))
(insn 306 305 307 36 (set (reg/f:DI 280)
        (mem/f:DI (reg/f:DI 146 [ D.17176 ]) [0 *_193+0 S8 A64])) policysigned.c:174 -1
     (nil))
(insn 307 306 308 36 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1128 [0xfffffffffffffb98])) [0 signingKeyFilename+0 S8 A64])
        (reg/f:DI 280)) policysigned.c:174 -1
     (nil))
(jump_insn 308 307 309 36 (set (pc)
        (label_ref:DI 596)) 654 {jump}
     (nil)
 -> 596)
(barrier 309 308 310)
(code_label 310 309 311 37 23 "" [1 uses])
(note 311 310 312 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 37 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fe01a108c60 *.LC15>)) policysigned.c:177 -1
     (nil))
(call_insn 313 312 314 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:177 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 314 313 317 37 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:178 -1
     (nil)
    (nil))
(jump_insn 317 314 318 37 (set (pc)
        (label_ref 596)) -1
     (nil)
 -> 596)
(barrier 318 317 319)
(code_label 319 318 320 39 22 "" [1 uses])
(note 320 319 321 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 39 (set (reg:SI 281)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:181 -1
     (nil))
(insn 322 321 323 39 (set (reg:DI 147 [ D.17175 ])
        (sign_extend:DI (reg:SI 281))) policysigned.c:181 -1
     (nil))
(insn 323 322 324 39 (parallel [
            (set (reg:DI 148 [ D.17175 ])
                (ashift:DI (reg:DI 147 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:181 -1
     (nil))
(insn 324 323 325 39 (set (reg/f:DI 282)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:181 -1
     (nil))
(insn 325 324 326 39 (parallel [
            (set (reg/f:DI 149 [ D.17176 ])
                (plus:DI (reg:DI 148 [ D.17175 ])
                    (reg/f:DI 282)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:181 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 148 [ D.17175 ]))
        (nil)))
(insn 326 325 327 39 (set (reg/f:DI 150 [ D.17177 ])
        (mem/f:DI (reg/f:DI 149 [ D.17176 ]) [0 *_199+0 S8 A64])) policysigned.c:181 -1
     (nil))
(insn 327 326 328 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fe01a108cf0 *.LC16>)) policysigned.c:181 -1
     (nil))
(insn 328 327 329 39 (set (reg:DI 5 di)
        (reg/f:DI 150 [ D.17177 ])) policysigned.c:181 -1
     (nil))
(call_insn/i 329 328 330 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fe01ad8a0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysigned.c:181 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 330 329 331 39 (set (reg:SI 151 [ D.17178 ])
        (reg:SI 0 ax)) policysigned.c:181 -1
     (nil))
(insn 331 330 332 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 151 [ D.17178 ])
            (const_int 0 [0]))) policysigned.c:181 -1
     (nil))
(jump_insn 332 331 333 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 357)
            (pc))) policysigned.c:181 -1
     (nil)
 -> 357)
(note 333 332 334 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 40 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:182 -1
     (nil))
(insn 335 334 336 40 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:183 -1
     (nil))
(insn 336 335 337 40 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 283)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1252 [0xfffffffffffffb1c])) [0 argc+0 S4 A32]))) policysigned.c:183 -1
     (nil))
(jump_insn 337 336 338 40 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 348)
            (pc))) policysigned.c:183 -1
     (nil)
 -> 348)
(note 338 337 339 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 41 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:184 -1
     (nil))
(insn 340 339 341 41 (set (reg:DI 152 [ D.17175 ])
        (sign_extend:DI (reg:SI 284))) policysigned.c:184 -1
     (nil))
(insn 341 340 342 41 (parallel [
            (set (reg:DI 153 [ D.17175 ])
                (ashift:DI (reg:DI 152 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:184 -1
     (nil))
(insn 342 341 343 41 (set (reg/f:DI 285)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:184 -1
     (nil))
(insn 343 342 344 41 (parallel [
            (set (reg/f:DI 154 [ D.17176 ])
                (plus:DI (reg:DI 153 [ D.17175 ])
                    (reg/f:DI 285)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:184 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 153 [ D.17175 ]))
        (nil)))
(insn 344 343 345 41 (set (reg/f:DI 286)
        (mem/f:DI (reg/f:DI 154 [ D.17176 ]) [0 *_205+0 S8 A64])) policysigned.c:184 -1
     (nil))
(insn 345 344 346 41 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1112 [0xfffffffffffffba8])) [0 signatureFilename+0 S8 A64])
        (reg/f:DI 286)) policysigned.c:184 -1
     (nil))
(jump_insn 346 345 347 41 (set (pc)
        (label_ref:DI 596)) 654 {jump}
     (nil)
 -> 596)
(barrier 347 346 348)
(code_label 348 347 349 42 26 "" [1 uses])
(note 349 348 350 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 350 349 351 42 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fe01a108d80 *.LC17>)) policysigned.c:187 -1
     (nil))
(call_insn 351 350 352 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:187 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 352 351 355 42 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:188 -1
     (nil)
    (nil))
(jump_insn 355 352 356 42 (set (pc)
        (label_ref 596)) -1
     (nil)
 -> 596)
(barrier 356 355 357)
(code_label 357 356 358 44 25 "" [1 uses])
(note 358 357 359 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 359 358 360 44 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:191 -1
     (nil))
(insn 360 359 361 44 (set (reg:DI 155 [ D.17175 ])
        (sign_extend:DI (reg:SI 287))) policysigned.c:191 -1
     (nil))
(insn 361 360 362 44 (parallel [
            (set (reg:DI 156 [ D.17175 ])
                (ashift:DI (reg:DI 155 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:191 -1
     (nil))
(insn 362 361 363 44 (set (reg/f:DI 288)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:191 -1
     (nil))
(insn 363 362 364 44 (parallel [
            (set (reg/f:DI 157 [ D.17176 ])
                (plus:DI (reg:DI 156 [ D.17175 ])
                    (reg/f:DI 288)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:191 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 156 [ D.17175 ]))
        (nil)))
(insn 364 363 365 44 (set (reg/f:DI 158 [ D.17177 ])
        (mem/f:DI (reg/f:DI 157 [ D.17176 ]) [0 *_211+0 S8 A64])) policysigned.c:191 -1
     (nil))
(insn 365 364 366 44 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fe01a108e10 *.LC18>)) policysigned.c:191 -1
     (nil))
(insn 366 365 367 44 (set (reg:DI 5 di)
        (reg/f:DI 158 [ D.17177 ])) policysigned.c:191 -1
     (nil))
(call_insn/i 367 366 368 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fe01ad8a0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysigned.c:191 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 368 367 369 44 (set (reg:SI 159 [ D.17178 ])
        (reg:SI 0 ax)) policysigned.c:191 -1
     (nil))
(insn 369 368 370 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 159 [ D.17178 ])
            (const_int 0 [0]))) policysigned.c:191 -1
     (nil))
(jump_insn 370 369 371 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 395)
            (pc))) policysigned.c:191 -1
     (nil)
 -> 395)
(note 371 370 372 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 372 371 373 45 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:192 -1
     (nil))
(insn 373 372 374 45 (set (reg:SI 289)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:193 -1
     (nil))
(insn 374 373 375 45 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 289)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1252 [0xfffffffffffffb1c])) [0 argc+0 S4 A32]))) policysigned.c:193 -1
     (nil))
(jump_insn 375 374 376 45 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 386)
            (pc))) policysigned.c:193 -1
     (nil)
 -> 386)
(note 376 375 377 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 377 376 378 46 (set (reg:SI 290)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:194 -1
     (nil))
(insn 378 377 379 46 (set (reg:DI 160 [ D.17175 ])
        (sign_extend:DI (reg:SI 290))) policysigned.c:194 -1
     (nil))
(insn 379 378 380 46 (parallel [
            (set (reg:DI 161 [ D.17175 ])
                (ashift:DI (reg:DI 160 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:194 -1
     (nil))
(insn 380 379 381 46 (set (reg/f:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:194 -1
     (nil))
(insn 381 380 382 46 (parallel [
            (set (reg/f:DI 162 [ D.17176 ])
                (plus:DI (reg:DI 161 [ D.17175 ])
                    (reg/f:DI 291)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:194 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 161 [ D.17175 ]))
        (nil)))
(insn 382 381 383 46 (set (reg/f:DI 292)
        (mem/f:DI (reg/f:DI 162 [ D.17176 ]) [0 *_217+0 S8 A64])) policysigned.c:194 -1
     (nil))
(insn 383 382 384 46 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1144 [0xfffffffffffffb88])) [0 ticketFilename+0 S8 A64])
        (reg/f:DI 292)) policysigned.c:194 -1
     (nil))
(jump_insn 384 383 385 46 (set (pc)
        (label_ref:DI 596)) 654 {jump}
     (nil)
 -> 596)
(barrier 385 384 386)
(code_label 386 385 387 47 29 "" [1 uses])
(note 387 386 388 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 388 387 389 47 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fe01a108ea0 *.LC19>)) policysigned.c:197 -1
     (nil))
(call_insn 389 388 390 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:197 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 390 389 393 47 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:198 -1
     (nil)
    (nil))
(jump_insn 393 390 394 47 (set (pc)
        (label_ref 596)) -1
     (nil)
 -> 596)
(barrier 394 393 395)
(code_label 395 394 396 49 28 "" [1 uses])
(note 396 395 397 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 397 396 398 49 (set (reg:SI 293)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:201 -1
     (nil))
(insn 398 397 399 49 (set (reg:DI 163 [ D.17175 ])
        (sign_extend:DI (reg:SI 293))) policysigned.c:201 -1
     (nil))
(insn 399 398 400 49 (parallel [
            (set (reg:DI 164 [ D.17175 ])
                (ashift:DI (reg:DI 163 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:201 -1
     (nil))
(insn 400 399 401 49 (set (reg/f:DI 294)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:201 -1
     (nil))
(insn 401 400 402 49 (parallel [
            (set (reg/f:DI 165 [ D.17176 ])
                (plus:DI (reg:DI 164 [ D.17175 ])
                    (reg/f:DI 294)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:201 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 164 [ D.17175 ]))
        (nil)))
(insn 402 401 403 49 (set (reg/f:DI 166 [ D.17177 ])
        (mem/f:DI (reg/f:DI 165 [ D.17176 ]) [0 *_223+0 S8 A64])) policysigned.c:201 -1
     (nil))
(insn 403 402 404 49 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fe01a108f30 *.LC20>)) policysigned.c:201 -1
     (nil))
(insn 404 403 405 49 (set (reg:DI 5 di)
        (reg/f:DI 166 [ D.17177 ])) policysigned.c:201 -1
     (nil))
(call_insn/i 405 404 406 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fe01ad8a0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysigned.c:201 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 406 405 407 49 (set (reg:SI 167 [ D.17178 ])
        (reg:SI 0 ax)) policysigned.c:201 -1
     (nil))
(insn 407 406 408 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 167 [ D.17178 ])
            (const_int 0 [0]))) policysigned.c:201 -1
     (nil))
(jump_insn 408 407 409 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 433)
            (pc))) policysigned.c:201 -1
     (nil)
 -> 433)
(note 409 408 410 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 410 409 411 50 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:202 -1
     (nil))
(insn 411 410 412 50 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:203 -1
     (nil))
(insn 412 411 413 50 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 295)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1252 [0xfffffffffffffb1c])) [0 argc+0 S4 A32]))) policysigned.c:203 -1
     (nil))
(jump_insn 413 412 414 50 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 424)
            (pc))) policysigned.c:203 -1
     (nil)
 -> 424)
(note 414 413 415 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 415 414 416 51 (set (reg:SI 296)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:204 -1
     (nil))
(insn 416 415 417 51 (set (reg:DI 168 [ D.17175 ])
        (sign_extend:DI (reg:SI 296))) policysigned.c:204 -1
     (nil))
(insn 417 416 418 51 (parallel [
            (set (reg:DI 169 [ D.17175 ])
                (ashift:DI (reg:DI 168 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:204 -1
     (nil))
(insn 418 417 419 51 (set (reg/f:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:204 -1
     (nil))
(insn 419 418 420 51 (parallel [
            (set (reg/f:DI 170 [ D.17176 ])
                (plus:DI (reg:DI 169 [ D.17175 ])
                    (reg/f:DI 297)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:204 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 169 [ D.17175 ]))
        (nil)))
(insn 420 419 421 51 (set (reg/f:DI 298)
        (mem/f:DI (reg/f:DI 170 [ D.17176 ]) [0 *_229+0 S8 A64])) policysigned.c:204 -1
     (nil))
(insn 421 420 422 51 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1136 [0xfffffffffffffb90])) [0 timeoutFilename+0 S8 A64])
        (reg/f:DI 298)) policysigned.c:204 -1
     (nil))
(jump_insn 422 421 423 51 (set (pc)
        (label_ref:DI 596)) 654 {jump}
     (nil)
 -> 596)
(barrier 423 422 424)
(code_label 424 423 425 52 32 "" [1 uses])
(note 425 424 426 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 426 425 427 52 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fe01a11c000 *.LC21>)) policysigned.c:207 -1
     (nil))
(call_insn 427 426 428 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:207 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 428 427 431 52 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:208 -1
     (nil)
    (nil))
(jump_insn 431 428 432 52 (set (pc)
        (label_ref 596)) -1
     (nil)
 -> 596)
(barrier 432 431 433)
(code_label 433 432 434 54 31 "" [1 uses])
(note 434 433 435 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 435 434 436 54 (set (reg:SI 299)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:211 -1
     (nil))
(insn 436 435 437 54 (set (reg:DI 171 [ D.17175 ])
        (sign_extend:DI (reg:SI 299))) policysigned.c:211 -1
     (nil))
(insn 437 436 438 54 (parallel [
            (set (reg:DI 172 [ D.17175 ])
                (ashift:DI (reg:DI 171 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:211 -1
     (nil))
(insn 438 437 439 54 (set (reg/f:DI 300)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:211 -1
     (nil))
(insn 439 438 440 54 (parallel [
            (set (reg/f:DI 173 [ D.17176 ])
                (plus:DI (reg:DI 172 [ D.17175 ])
                    (reg/f:DI 300)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:211 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 172 [ D.17175 ]))
        (nil)))
(insn 440 439 441 54 (set (reg/f:DI 174 [ D.17177 ])
        (mem/f:DI (reg/f:DI 173 [ D.17176 ]) [0 *_235+0 S8 A64])) policysigned.c:211 -1
     (nil))
(insn 441 440 442 54 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fe01a11c090 *.LC22>)) policysigned.c:211 -1
     (nil))
(insn 442 441 443 54 (set (reg:DI 5 di)
        (reg/f:DI 174 [ D.17177 ])) policysigned.c:211 -1
     (nil))
(call_insn/i 443 442 444 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fe01ad8a0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysigned.c:211 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 444 443 445 54 (set (reg:SI 175 [ D.17178 ])
        (reg:SI 0 ax)) policysigned.c:211 -1
     (nil))
(insn 445 444 446 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 175 [ D.17178 ])
            (const_int 0 [0]))) policysigned.c:211 -1
     (nil))
(jump_insn 446 445 447 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 471)
            (pc))) policysigned.c:211 -1
     (nil)
 -> 471)
(note 447 446 448 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 448 447 449 55 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:212 -1
     (nil))
(insn 449 448 450 55 (set (reg:SI 301)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:213 -1
     (nil))
(insn 450 449 451 55 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 301)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1252 [0xfffffffffffffb1c])) [0 argc+0 S4 A32]))) policysigned.c:213 -1
     (nil))
(jump_insn 451 450 452 55 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 462)
            (pc))) policysigned.c:213 -1
     (nil)
 -> 462)
(note 452 451 453 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 454 56 (set (reg:SI 302)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:214 -1
     (nil))
(insn 454 453 455 56 (set (reg:DI 176 [ D.17175 ])
        (sign_extend:DI (reg:SI 302))) policysigned.c:214 -1
     (nil))
(insn 455 454 456 56 (parallel [
            (set (reg:DI 177 [ D.17175 ])
                (ashift:DI (reg:DI 176 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:214 -1
     (nil))
(insn 456 455 457 56 (set (reg/f:DI 303)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:214 -1
     (nil))
(insn 457 456 458 56 (parallel [
            (set (reg/f:DI 178 [ D.17176 ])
                (plus:DI (reg:DI 177 [ D.17175 ])
                    (reg/f:DI 303)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:214 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 177 [ D.17175 ]))
        (nil)))
(insn 458 457 459 56 (set (reg/f:DI 304)
        (mem/f:DI (reg/f:DI 178 [ D.17176 ]) [0 *_241+0 S8 A64])) policysigned.c:214 -1
     (nil))
(insn 459 458 460 56 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1120 [0xfffffffffffffba0])) [0 signingKeyPassword+0 S8 A64])
        (reg/f:DI 304)) policysigned.c:214 -1
     (nil))
(jump_insn 460 459 461 56 (set (pc)
        (label_ref:DI 596)) 654 {jump}
     (nil)
 -> 596)
(barrier 461 460 462)
(code_label 462 461 463 57 35 "" [1 uses])
(note 463 462 464 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 464 463 465 57 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fe01a11c120 *.LC23>)) policysigned.c:217 -1
     (nil))
(call_insn 465 464 466 57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:217 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 466 465 469 57 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:218 -1
     (nil)
    (nil))
(jump_insn 469 466 470 57 (set (pc)
        (label_ref 596)) -1
     (nil)
 -> 596)
(barrier 470 469 471)
(code_label 471 470 472 59 34 "" [1 uses])
(note 472 471 473 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 473 472 474 59 (set (reg:SI 305)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:221 -1
     (nil))
(insn 474 473 475 59 (set (reg:DI 179 [ D.17175 ])
        (sign_extend:DI (reg:SI 305))) policysigned.c:221 -1
     (nil))
(insn 475 474 476 59 (parallel [
            (set (reg:DI 180 [ D.17175 ])
                (ashift:DI (reg:DI 179 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:221 -1
     (nil))
(insn 476 475 477 59 (set (reg/f:DI 306)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:221 -1
     (nil))
(insn 477 476 478 59 (parallel [
            (set (reg/f:DI 181 [ D.17176 ])
                (plus:DI (reg:DI 180 [ D.17175 ])
                    (reg/f:DI 306)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:221 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 180 [ D.17175 ]))
        (nil)))
(insn 478 477 479 59 (set (reg/f:DI 182 [ D.17177 ])
        (mem/f:DI (reg/f:DI 181 [ D.17176 ]) [0 *_247+0 S8 A64])) policysigned.c:221 -1
     (nil))
(insn 479 478 480 59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fe01a11c1b0 *.LC24>)) policysigned.c:221 -1
     (nil))
(insn 480 479 481 59 (set (reg:DI 5 di)
        (reg/f:DI 182 [ D.17177 ])) policysigned.c:221 -1
     (nil))
(call_insn/i 481 480 482 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fe01ad8a0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysigned.c:221 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 482 481 483 59 (set (reg:SI 183 [ D.17178 ])
        (reg:SI 0 ax)) policysigned.c:221 -1
     (nil))
(insn 483 482 484 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 183 [ D.17178 ])
            (const_int 0 [0]))) policysigned.c:221 -1
     (nil))
(jump_insn 484 483 485 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 543)
            (pc))) policysigned.c:221 -1
     (nil)
 -> 543)
(note 485 484 486 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 486 485 487 60 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:222 -1
     (nil))
(insn 487 486 488 60 (set (reg:SI 307)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:223 -1
     (nil))
(insn 488 487 489 60 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 307)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1252 [0xfffffffffffffb1c])) [0 argc+0 S4 A32]))) policysigned.c:223 -1
     (nil))
(jump_insn 489 488 490 60 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 534)
            (pc))) policysigned.c:223 -1
     (nil)
 -> 534)
(note 490 489 491 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 491 490 492 61 (set (reg:SI 308)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:224 -1
     (nil))
(insn 492 491 493 61 (set (reg:DI 184 [ D.17175 ])
        (sign_extend:DI (reg:SI 308))) policysigned.c:224 -1
     (nil))
(insn 493 492 494 61 (parallel [
            (set (reg:DI 185 [ D.17175 ])
                (ashift:DI (reg:DI 184 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:224 -1
     (nil))
(insn 494 493 495 61 (set (reg/f:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:224 -1
     (nil))
(insn 495 494 496 61 (parallel [
            (set (reg/f:DI 186 [ D.17176 ])
                (plus:DI (reg:DI 185 [ D.17175 ])
                    (reg/f:DI 309)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:224 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 185 [ D.17175 ]))
        (nil)))
(insn 496 495 497 61 (set (reg/f:DI 187 [ D.17177 ])
        (mem/f:DI (reg/f:DI 186 [ D.17176 ]) [0 *_253+0 S8 A64])) policysigned.c:224 -1
     (nil))
(insn 497 496 498 61 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fe01a11c240 *.LC25>)) policysigned.c:224 -1
     (nil))
(insn 498 497 499 61 (set (reg:DI 5 di)
        (reg/f:DI 187 [ D.17177 ])) policysigned.c:224 -1
     (nil))
(call_insn/i 499 498 500 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fe01ad8a0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysigned.c:224 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 500 499 501 61 (set (reg:SI 188 [ D.17178 ])
        (reg:SI 0 ax)) policysigned.c:224 -1
     (nil))
(insn 501 500 502 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 188 [ D.17178 ])
            (const_int 0 [0]))) policysigned.c:224 -1
     (nil))
(jump_insn 502 501 503 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 507)
            (pc))) policysigned.c:224 -1
     (nil)
 -> 507)
(note 503 502 504 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 504 503 505 62 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1242 [0xfffffffffffffb26])) [0 halg+0 S2 A16])
        (const_int 11 [0xb])) policysigned.c:225 -1
     (nil))
(jump_insn 505 504 506 62 (set (pc)
        (label_ref:DI 596)) 654 {jump}
     (nil)
 -> 596)
(barrier 506 505 507)
(code_label 507 506 508 63 39 "" [1 uses])
(note 508 507 509 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 509 508 510 63 (set (reg:SI 310)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:227 -1
     (nil))
(insn 510 509 511 63 (set (reg:DI 189 [ D.17175 ])
        (sign_extend:DI (reg:SI 310))) policysigned.c:227 -1
     (nil))
(insn 511 510 512 63 (parallel [
            (set (reg:DI 190 [ D.17175 ])
                (ashift:DI (reg:DI 189 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:227 -1
     (nil))
(insn 512 511 513 63 (set (reg/f:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:227 -1
     (nil))
(insn 513 512 514 63 (parallel [
            (set (reg/f:DI 191 [ D.17176 ])
                (plus:DI (reg:DI 190 [ D.17175 ])
                    (reg/f:DI 311)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:227 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 190 [ D.17175 ]))
        (nil)))
(insn 514 513 515 63 (set (reg/f:DI 192 [ D.17177 ])
        (mem/f:DI (reg/f:DI 191 [ D.17176 ]) [0 *_259+0 S8 A64])) policysigned.c:227 -1
     (nil))
(insn 515 514 516 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fe01a11c2d0 *.LC26>)) policysigned.c:227 -1
     (nil))
(insn 516 515 517 63 (set (reg:DI 5 di)
        (reg/f:DI 192 [ D.17177 ])) policysigned.c:227 -1
     (nil))
(call_insn/i 517 516 518 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fe01ad8a0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysigned.c:227 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 518 517 519 63 (set (reg:SI 193 [ D.17178 ])
        (reg:SI 0 ax)) policysigned.c:227 -1
     (nil))
(insn 519 518 520 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 193 [ D.17178 ])
            (const_int 0 [0]))) policysigned.c:227 -1
     (nil))
(jump_insn 520 519 521 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 525)
            (pc))) policysigned.c:227 -1
     (nil)
 -> 525)
(note 521 520 522 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 522 521 523 64 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1242 [0xfffffffffffffb26])) [0 halg+0 S2 A16])
        (const_int 4 [0x4])) policysigned.c:228 -1
     (nil))
(jump_insn 523 522 524 64 (set (pc)
        (label_ref:DI 596)) 654 {jump}
     (nil)
 -> 596)
(barrier 524 523 525)
(code_label 525 524 526 65 41 "" [1 uses])
(note 526 525 527 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 527 526 528 65 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fe01a11c360 *.LC27>)) policysigned.c:231 -1
     (nil))
(call_insn 528 527 529 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:231 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 529 528 532 65 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:232 -1
     (nil)
    (nil))
(jump_insn 532 529 533 65 (set (pc)
        (label_ref:DI 596)) 654 {jump}
     (nil)
 -> 596)
(barrier 533 532 534)
(code_label 534 533 535 67 38 "" [1 uses])
(note 535 534 536 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 536 535 537 67 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fe01a11c3f0 *.LC28>)) policysigned.c:236 -1
     (nil))
(call_insn 537 536 538 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:236 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 538 537 541 67 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:237 -1
     (nil)
    (nil))
(jump_insn 541 538 542 67 (set (pc)
        (label_ref 596)) -1
     (nil)
 -> 596)
(barrier 542 541 543)
(code_label 543 542 544 69 37 "" [1 uses])
(note 544 543 545 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 545 544 546 69 (set (reg:SI 312)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:240 -1
     (nil))
(insn 546 545 547 69 (set (reg:DI 194 [ D.17175 ])
        (sign_extend:DI (reg:SI 312))) policysigned.c:240 -1
     (nil))
(insn 547 546 548 69 (parallel [
            (set (reg:DI 195 [ D.17175 ])
                (ashift:DI (reg:DI 194 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:240 -1
     (nil))
(insn 548 547 549 69 (set (reg/f:DI 313)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:240 -1
     (nil))
(insn 549 548 550 69 (parallel [
            (set (reg/f:DI 196 [ D.17176 ])
                (plus:DI (reg:DI 195 [ D.17175 ])
                    (reg/f:DI 313)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:240 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 195 [ D.17175 ]))
        (nil)))
(insn 550 549 551 69 (set (reg/f:DI 197 [ D.17177 ])
        (mem/f:DI (reg/f:DI 196 [ D.17176 ]) [0 *_269+0 S8 A64])) policysigned.c:240 -1
     (nil))
(insn 551 550 552 69 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fe01a11c480 *.LC29>)) policysigned.c:240 -1
     (nil))
(insn 552 551 553 69 (set (reg:DI 5 di)
        (reg/f:DI 197 [ D.17177 ])) policysigned.c:240 -1
     (nil))
(call_insn/i 553 552 554 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fe01ad8a0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysigned.c:240 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 554 553 555 69 (set (reg:SI 198 [ D.17178 ])
        (reg:SI 0 ax)) policysigned.c:240 -1
     (nil))
(insn 555 554 556 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 198 [ D.17178 ])
            (const_int 0 [0]))) policysigned.c:240 -1
     (nil))
(jump_insn 556 555 557 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 561)
            (pc))) policysigned.c:240 -1
     (nil)
 -> 561)
(note 557 556 558 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(call_insn 558 557 559 70 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:241 -1
     (nil)
    (nil))
(jump_insn 559 558 560 70 (set (pc)
        (label_ref 596)) -1
     (nil)
 -> 596)
(barrier 560 559 561)
(code_label 561 560 562 71 43 "" [1 uses])
(note 562 561 563 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 563 562 564 71 (set (reg:SI 314)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:243 -1
     (nil))
(insn 564 563 565 71 (set (reg:DI 199 [ D.17175 ])
        (sign_extend:DI (reg:SI 314))) policysigned.c:243 -1
     (nil))
(insn 565 564 566 71 (parallel [
            (set (reg:DI 200 [ D.17175 ])
                (ashift:DI (reg:DI 199 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:243 -1
     (nil))
(insn 566 565 567 71 (set (reg/f:DI 315)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:243 -1
     (nil))
(insn 567 566 568 71 (parallel [
            (set (reg/f:DI 201 [ D.17176 ])
                (plus:DI (reg:DI 200 [ D.17175 ])
                    (reg/f:DI 315)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:243 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 200 [ D.17175 ]))
        (nil)))
(insn 568 567 569 71 (set (reg/f:DI 202 [ D.17177 ])
        (mem/f:DI (reg/f:DI 201 [ D.17176 ]) [0 *_275+0 S8 A64])) policysigned.c:243 -1
     (nil))
(insn 569 568 570 71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7fe01a11c510 *.LC30>)) policysigned.c:243 -1
     (nil))
(insn 570 569 571 71 (set (reg:DI 5 di)
        (reg/f:DI 202 [ D.17177 ])) policysigned.c:243 -1
     (nil))
(call_insn/i 571 570 572 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fe01ad8a0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysigned.c:243 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 572 571 573 71 (set (reg:SI 203 [ D.17178 ])
        (reg:SI 0 ax)) policysigned.c:243 -1
     (nil))
(insn 573 572 574 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 203 [ D.17178 ])
            (const_int 0 [0]))) policysigned.c:243 -1
     (nil))
(jump_insn 574 573 575 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 583)
            (pc))) policysigned.c:243 -1
     (nil)
 -> 583)
(note 575 574 576 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 576 575 577 72 (set (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fe01a6176c0 verbose>) [0 verbose+0 S4 A32])
        (const_int 1 [0x1])) policysigned.c:244 -1
     (nil))
(insn 577 576 578 72 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7fe01a11c5a0 *.LC31>)) policysigned.c:245 -1
     (nil))
(insn 578 577 579 72 (set (reg:SI 4 si)
        (const_int 1 [0x1])) policysigned.c:245 -1
     (nil))
(insn 579 578 580 72 (set (reg:DI 5 di)
        (const_int 0 [0])) policysigned.c:245 -1
     (nil))
(call_insn 580 579 581 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7fe01a3c10d8 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) policysigned.c:245 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 581 580 582 72 (set (pc)
        (label_ref 596)) -1
     (nil)
 -> 596)
(barrier 582 581 583)
(code_label 583 582 584 73 44 "" [1 uses])
(note 584 583 585 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 585 584 586 73 (set (reg:SI 316)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:248 -1
     (nil))
(insn 586 585 587 73 (set (reg:DI 204 [ D.17175 ])
        (sign_extend:DI (reg:SI 316))) policysigned.c:248 -1
     (nil))
(insn 587 586 588 73 (parallel [
            (set (reg:DI 205 [ D.17175 ])
                (ashift:DI (reg:DI 204 [ D.17175 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:248 -1
     (nil))
(insn 588 587 589 73 (set (reg/f:DI 317)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])) policysigned.c:248 -1
     (nil))
(insn 589 588 590 73 (parallel [
            (set (reg/f:DI 206 [ D.17176 ])
                (plus:DI (reg:DI 205 [ D.17175 ])
                    (reg/f:DI 317)))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:248 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1264 [0xfffffffffffffb10])) [0 argv+0 S8 A64])
            (reg:DI 205 [ D.17175 ]))
        (nil)))
(insn 590 589 591 73 (set (reg/f:DI 207 [ D.17177 ])
        (mem/f:DI (reg/f:DI 206 [ D.17176 ]) [0 *_282+0 S8 A64])) policysigned.c:248 -1
     (nil))
(insn 591 590 592 73 (set (reg:DI 4 si)
        (reg/f:DI 207 [ D.17177 ])) policysigned.c:248 -1
     (nil))
(insn 592 591 593 73 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7fe01a11c630 *.LC32>)) policysigned.c:248 -1
     (nil))
(insn 593 592 594 73 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysigned.c:248 -1
     (nil))
(call_insn 594 593 595 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fe01ad90ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policysigned.c:248 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(call_insn 595 594 596 73 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:249 -1
     (nil)
    (nil))
(code_label 596 595 597 74 6 "" [28 uses])
(note 597 596 598 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 598 597 599 74 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:110 -1
     (nil))
(code_label 599 598 600 75 2 "" [1 uses])
(note 600 599 601 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 601 600 602 75 (set (reg:SI 318)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1228 [0xfffffffffffffb34])) [0 i+0 S4 A32])) policysigned.c:110 -1
     (nil))
(insn 602 601 603 75 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 318)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1252 [0xfffffffffffffb1c])) [0 argc+0 S4 A32]))) policysigned.c:110 -1
     (nil))
(jump_insn 603 602 604 75 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 608)
            (pc))) policysigned.c:110 -1
     (nil)
 -> 608)
(note 604 603 606 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 606 604 607 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:110 -1
     (nil))
(jump_insn 607 606 608 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 605)
            (pc))) policysigned.c:110 -1
     (nil)
 -> 605)
(code_label 608 607 609 77 45 "" [1 uses])
(note 609 608 610 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 610 609 611 77 (set (reg:SI 208 [ D.17179 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1240 [0xfffffffffffffb28])) [0 authObject+0 S4 A64])) policysigned.c:252 -1
     (nil))
(insn 611 610 612 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 208 [ D.17179 ])
            (const_int 0 [0]))) policysigned.c:252 -1
     (nil))
(jump_insn 612 611 613 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 617)
            (pc))) policysigned.c:252 -1
     (nil)
 -> 617)
(note 613 612 614 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 614 613 615 78 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7fe01a11c6c0 *.LC33>)) policysigned.c:253 -1
     (nil))
(call_insn 615 614 616 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:253 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 616 615 617 78 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:254 -1
     (nil)
    (nil))
(code_label 617 616 618 79 47 "" [1 uses])
(note 618 617 619 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 619 618 620 79 (set (reg:SI 209 [ D.17179 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1236 [0xfffffffffffffb2c])) [0 policySession+0 S4 A32])) policysigned.c:256 -1
     (nil))
(insn 620 619 621 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 209 [ D.17179 ])
            (const_int 0 [0]))) policysigned.c:256 -1
     (nil))
(jump_insn 621 620 622 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 626)
            (pc))) policysigned.c:256 -1
     (nil)
 -> 626)
(note 622 621 623 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 623 622 624 80 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fe01a11c750 *.LC34>)) policysigned.c:257 -1
     (nil))
(call_insn 624 623 625 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:257 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 625 624 626 80 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:258 -1
     (nil)
    (nil))
(code_label 626 625 627 81 48 "" [1 uses])
(note 627 626 628 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 628 627 629 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1128 [0xfffffffffffffb98])) [0 signingKeyFilename+0 S8 A64])
            (const_int 0 [0]))) policysigned.c:260 -1
     (nil))
(jump_insn 629 628 630 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 637)
            (pc))) policysigned.c:260 -1
     (nil)
 -> 637)
(note 630 629 631 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 631 630 632 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1112 [0xfffffffffffffba8])) [0 signatureFilename+0 S8 A64])
            (const_int 0 [0]))) policysigned.c:260 -1
     (nil))
(jump_insn 632 631 633 82 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 637)
            (pc))) policysigned.c:260 -1
     (nil)
 -> 637)
(note 633 632 634 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 634 633 635 83 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7fe01a11c7e0 *.LC35>)) policysigned.c:261 -1
     (nil))
(call_insn 635 634 636 83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:261 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 636 635 637 83 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:262 -1
     (nil)
    (nil))
(code_label 637 636 638 84 49 "" [2 uses])
(note 638 637 639 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 639 638 640 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1128 [0xfffffffffffffb98])) [0 signingKeyFilename+0 S8 A64])
            (const_int 0 [0]))) policysigned.c:264 -1
     (nil))
(jump_insn 640 639 641 84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 648)
            (pc))) policysigned.c:264 -1
     (nil)
 -> 648)
(note 641 640 642 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 642 641 643 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1112 [0xfffffffffffffba8])) [0 signatureFilename+0 S8 A64])
            (const_int 0 [0]))) policysigned.c:264 -1
     (nil))
(jump_insn 643 642 644 85 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 648)
            (pc))) policysigned.c:264 -1
     (nil)
 -> 648)
(note 644 643 645 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 645 644 646 86 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fe01a11c870 *.LC36>)) policysigned.c:265 -1
     (nil))
(call_insn 646 645 647 86 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:265 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 647 646 648 86 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fe01a48e000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysigned.c:266 -1
     (nil)
    (nil))
(code_label 648 647 649 87 50 "" [2 uses])
(note 649 648 650 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 650 649 651 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:268 -1
     (nil))
(jump_insn 651 650 652 87 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 657)
            (pc))) policysigned.c:268 -1
     (nil)
 -> 657)
(note 652 651 653 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 653 652 654 88 (set (reg:SI 210 [ D.17179 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1240 [0xfffffffffffffb28])) [0 authObject+0 S4 A64])) policysigned.c:269 -1
     (nil))
(insn 654 653 655 88 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [0 in.authObject+0 S4 A64])
        (reg:SI 210 [ D.17179 ])) policysigned.c:269 -1
     (nil))
(insn 655 654 656 88 (set (reg:SI 211 [ D.17179 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1236 [0xfffffffffffffb2c])) [0 policySession+0 S4 A32])) policysigned.c:270 -1
     (nil))
(insn 656 655 657 88 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -684 [0xfffffffffffffd54])) [0 in.policySession+0 S4 A32])
        (reg:SI 211 [ D.17179 ])) policysigned.c:270 -1
     (nil))
(code_label 657 656 658 89 51 "" [1 uses])
(note 658 657 659 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 659 658 660 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:273 -1
     (nil))
(jump_insn 660 659 661 89 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 674)
            (pc))) policysigned.c:273 -1
     (nil)
 -> 674)
(note 661 660 662 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 662 661 663 90 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1168 [0xfffffffffffffb70])) [0 nonceTPMFilename+0 S8 A64])
            (const_int 0 [0]))) policysigned.c:273 -1
     (nil))
(jump_insn 663 662 664 90 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 674)
            (pc))) policysigned.c:273 -1
     (nil)
 -> 674)
(note 664 663 665 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 665 664 666 91 (set (reg:DI 319)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 nonceTPMFilename+0 S8 A64])) policysigned.c:274 -1
     (nil))
(insn 666 665 667 91 (parallel [
            (set (reg:DI 320)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:274 -1
     (nil))
(insn 667 666 668 91 (parallel [
            (set (reg:DI 321)
                (plus:DI (reg:DI 320)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:274 -1
     (nil))
(insn 668 667 669 91 (set (reg:DI 1 dx)
        (reg:DI 319)) policysigned.c:274 -1
     (nil))
(insn 669 668 670 91 (set (reg:SI 4 si)
        (const_int 128 [0x80])) policysigned.c:274 -1
     (nil))
(insn 670 669 671 91 (set (reg:DI 5 di)
        (reg:DI 321)) policysigned.c:274 -1
     (nil))
(call_insn 671 670 672 91 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_Read2B") [flags 0x41]  <function_decl 0x7fe01a3c1d80 TSS_File_Read2B>) [0 TSS_File_Read2B S1 A8])
            (const_int 0 [0]))) policysigned.c:274 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 672 671 673 91 (set (reg:SI 322)
        (reg:SI 0 ax)) policysigned.c:274 -1
     (nil))
(insn 673 672 674 91 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
        (reg:SI 322)) policysigned.c:274 -1
     (nil))
(code_label 674 673 675 92 52 "" [2 uses])
(note 675 674 676 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 676 675 677 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:278 -1
     (nil))
(jump_insn 677 676 678 92 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 691)
            (pc))) policysigned.c:278 -1
     (nil)
 -> 691)
(note 678 677 679 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 679 678 680 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1160 [0xfffffffffffffb78])) [0 cpHashAFilename+0 S8 A64])
            (const_int 0 [0]))) policysigned.c:278 -1
     (nil))
(jump_insn 680 679 681 93 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 691)
            (pc))) policysigned.c:278 -1
     (nil)
 -> 691)
(note 681 680 682 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 682 681 683 94 (set (reg:DI 323)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1160 [0xfffffffffffffb78])) [0 cpHashAFilename+0 S8 A64])) policysigned.c:279 -1
     (nil))
(insn 683 682 684 94 (parallel [
            (set (reg:DI 324)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:279 -1
     (nil))
(insn 684 683 685 94 (parallel [
            (set (reg:DI 325)
                (plus:DI (reg:DI 324)
                    (const_int 138 [0x8a])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:279 -1
     (nil))
(insn 685 684 686 94 (set (reg:DI 1 dx)
        (reg:DI 323)) policysigned.c:279 -1
     (nil))
(insn 686 685 687 94 (set (reg:SI 4 si)
        (const_int 128 [0x80])) policysigned.c:279 -1
     (nil))
(insn 687 686 688 94 (set (reg:DI 5 di)
        (reg:DI 325)) policysigned.c:279 -1
     (nil))
(call_insn 688 687 689 94 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_Read2B") [flags 0x41]  <function_decl 0x7fe01a3c1d80 TSS_File_Read2B>) [0 TSS_File_Read2B S1 A8])
            (const_int 0 [0]))) policysigned.c:279 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 689 688 690 94 (set (reg:SI 326)
        (reg:SI 0 ax)) policysigned.c:279 -1
     (nil))
(insn 690 689 691 94 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
        (reg:SI 326)) policysigned.c:279 -1
     (nil))
(code_label 691 690 692 95 53 "" [2 uses])
(note 692 691 693 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 693 692 694 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:283 -1
     (nil))
(jump_insn 694 693 695 95 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 708)
            (pc))) policysigned.c:283 -1
     (nil)
 -> 708)
(note 695 694 696 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 696 695 697 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1152 [0xfffffffffffffb80])) [0 policyRefFilename+0 S8 A64])
            (const_int 0 [0]))) policysigned.c:283 -1
     (nil))
(jump_insn 697 696 698 96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 708)
            (pc))) policysigned.c:283 -1
     (nil)
 -> 708)
(note 698 697 699 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 699 698 700 97 (set (reg:DI 327)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1152 [0xfffffffffffffb80])) [0 policyRefFilename+0 S8 A64])) policysigned.c:284 -1
     (nil))
(insn 700 699 701 97 (parallel [
            (set (reg:DI 328)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:284 -1
     (nil))
(insn 701 700 702 97 (parallel [
            (set (reg:DI 329)
                (plus:DI (reg:DI 328)
                    (const_int 268 [0x10c])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:284 -1
     (nil))
(insn 702 701 703 97 (set (reg:DI 1 dx)
        (reg:DI 327)) policysigned.c:284 -1
     (nil))
(insn 703 702 704 97 (set (reg:SI 4 si)
        (const_int 128 [0x80])) policysigned.c:284 -1
     (nil))
(insn 704 703 705 97 (set (reg:DI 5 di)
        (reg:DI 329)) policysigned.c:284 -1
     (nil))
(call_insn 705 704 706 97 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_Read2B") [flags 0x41]  <function_decl 0x7fe01a3c1d80 TSS_File_Read2B>) [0 TSS_File_Read2B S1 A8])
            (const_int 0 [0]))) policysigned.c:284 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 706 705 707 97 (set (reg:SI 330)
        (reg:SI 0 ax)) policysigned.c:284 -1
     (nil))
(insn 707 706 708 97 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
        (reg:SI 330)) policysigned.c:284 -1
     (nil))
(code_label 708 707 709 98 54 "" [2 uses])
(note 709 708 710 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 710 709 711 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:288 -1
     (nil))
(jump_insn 711 710 712 98 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 718)
            (pc))) policysigned.c:288 -1
     (nil)
 -> 718)
(note 712 711 713 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 713 712 714 99 (set (reg:SI 331)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1224 [0xfffffffffffffb38])) [0 expiration+0 S4 A32])) policysigned.c:289 -1
     (nil))
(insn 714 713 715 99 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 in.expiration+0 S4 A64])
        (reg:SI 331)) policysigned.c:289 -1
     (nil))
(insn 715 714 716 99 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -284 [0xfffffffffffffee4])) [0 in.auth.sigAlg+0 S2 A32])
        (const_int 20 [0x14])) policysigned.c:290 -1
     (nil))
(insn 716 715 717 99 (set (reg:HI 332)
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1242 [0xfffffffffffffb26])) [0 halg+0 S2 A16])) policysigned.c:291 -1
     (nil))
(insn 717 716 718 99 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -282 [0xfffffffffffffee6])) [0 in.auth.signature.rsassa.hash+0 S2 A16])
        (reg:HI 332)) policysigned.c:291 -1
     (nil))
(code_label 718 717 719 100 55 "" [1 uses])
(note 719 718 720 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 720 719 721 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1128 [0xfffffffffffffb98])) [0 signingKeyFilename+0 S8 A64])
            (const_int 0 [0]))) policysigned.c:294 -1
     (nil))
(jump_insn 721 720 722 100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 783)
            (pc))) policysigned.c:294 -1
     (nil)
 -> 783)
(note 722 721 723 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 723 722 724 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:297 -1
     (nil))
(jump_insn 724 723 725 101 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 766)
            (pc))) policysigned.c:297 -1
     (nil)
 -> 766)
(note 725 724 726 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 726 725 727 102 (set (reg:SI 212 [ D.17178 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 in.expiration+0 S4 A64])) policysigned.c:298 -1
     (nil))
(insn 727 726 728 102 (set (reg:SI 213 [ D.17179 ])
        (reg:SI 212 [ D.17178 ])) policysigned.c:298 -1
     (nil))
(insn 728 727 729 102 (set (reg:SI 5 di)
        (reg:SI 213 [ D.17179 ])) policysigned.c:298 -1
     (nil))
(call_insn/u 729 728 730 102 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("htonl") [flags 0x41]  <function_decl 0x7fe01ab42d80 htonl>) [0 htonl S1 A8])
            (const_int 0 [0]))) policysigned.c:298 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 730 729 731 102 (set (reg:SI 214 [ D.17179 ])
        (reg:SI 0 ax)) policysigned.c:298 -1
     (nil))
(insn 731 730 732 102 (set (reg:SI 215 [ D.17178 ])
        (reg:SI 214 [ D.17179 ])) policysigned.c:298 -1
     (nil))
(insn 732 731 733 102 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1176 [0xfffffffffffffb68])) [0 expirationNbo+0 S4 A64])
        (reg:SI 215 [ D.17178 ])) policysigned.c:298 -1
     (nil))
(insn 733 732 734 102 (set (reg:HI 333)
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1242 [0xfffffffffffffb26])) [0 halg+0 S2 A16])) policysigned.c:299 -1
     (nil))
(insn 734 733 735 102 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1104 [0xfffffffffffffbb0])) [0 aHash.hashAlg+0 S2 A64])
        (reg:HI 333)) policysigned.c:299 -1
     (nil))
(insn 735 734 736 102 (set (reg:HI 216 [ D.17180 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -420 [0xfffffffffffffe5c])) [0 in.policyRef.t.size+0 S2 A32])) policysigned.c:307 -1
     (nil))
(insn 736 735 737 102 (set (reg:SI 217 [ D.17178 ])
        (zero_extend:SI (reg:HI 216 [ D.17180 ]))) policysigned.c:303 -1
     (nil))
(insn 737 736 738 102 (set (reg:HI 218 [ D.17180 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -550 [0xfffffffffffffdda])) [0 in.cpHashA.t.size+0 S2 A16])) policysigned.c:306 -1
     (nil))
(insn 738 737 739 102 (set (reg:SI 219 [ D.17178 ])
        (zero_extend:SI (reg:HI 218 [ D.17180 ]))) policysigned.c:303 -1
     (nil))
(insn 739 738 740 102 (set (reg:HI 220 [ D.17180 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -680 [0xfffffffffffffd58])) [0 in.nonceTPM.t.size+0 S2 A64])) policysigned.c:304 -1
     (nil))
(insn 740 739 741 102 (set (reg:SI 221 [ D.17178 ])
        (zero_extend:SI (reg:HI 220 [ D.17180 ]))) policysigned.c:303 -1
     (nil))
(insn 741 740 742 102 (parallel [
            (set (reg:DI 334)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1176 [0xfffffffffffffb68])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:303 -1
     (nil))
(insn 742 741 743 102 (parallel [
            (set (reg:DI 335)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:303 -1
     (nil))
(insn 743 742 744 102 (parallel [
            (set (reg:DI 336)
                (plus:DI (reg:DI 335)
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:303 -1
     (nil))
(insn 744 743 745 102 (parallel [
            (set (reg:DI 337)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1104 [0xfffffffffffffbb0])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:303 -1
     (nil))
(insn 745 744 746 102 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:303 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 746 745 747 102 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policysigned.c:303 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 747 746 748 102 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) policysigned.c:303 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 748 747 749 102 (parallel [
            (set (reg:DI 338)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:303 -1
     (nil))
(insn 749 748 750 102 (parallel [
            (set (reg:DI 339)
                (plus:DI (reg:DI 338)
                    (const_int 270 [0x10e])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:303 -1
     (nil))
(insn 750 749 751 102 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 339)) policysigned.c:303 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 751 750 752 102 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 217 [ D.17178 ])) policysigned.c:303 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 752 751 753 102 (parallel [
            (set (reg:DI 340)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:303 -1
     (nil))
(insn 753 752 754 102 (parallel [
            (set (reg:DI 341)
                (plus:DI (reg:DI 340)
                    (const_int 140 [0x8c])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:303 -1
     (nil))
(insn 754 753 755 102 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 341)) policysigned.c:303 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 755 754 756 102 (set (reg:SI 38 r9)
        (reg:SI 219 [ D.17178 ])) policysigned.c:303 -1
     (nil))
(insn 756 755 757 102 (set (reg:DI 37 r8)
        (reg:DI 334)) policysigned.c:303 -1
     (nil))
(insn 757 756 758 102 (set (reg:DI 2 cx)
        (const_int 4 [0x4])) policysigned.c:303 -1
     (nil))
(insn 758 757 759 102 (set (reg:DI 1 dx)
        (reg:DI 336)) policysigned.c:303 -1
     (nil))
(insn 759 758 760 102 (set (reg:SI 4 si)
        (reg:SI 221 [ D.17178 ])) policysigned.c:303 -1
     (nil))
(insn 760 759 761 102 (set (reg:DI 5 di)
        (reg:DI 337)) policysigned.c:303 -1
     (nil))
(insn 761 760 762 102 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysigned.c:303 -1
     (nil))
(call_insn 762 761 763 102 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Hash_Generate") [flags 0x41]  <function_decl 0x7fe01a3ca1b0 TSS_Hash_Generate>) [0 TSS_Hash_Generate S1 A8])
            (const_int 48 [0x30]))) policysigned.c:303 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 763 762 764 102 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:303 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 764 763 765 102 (set (reg:SI 342)
        (reg:SI 0 ax)) policysigned.c:303 -1
     (nil))
(insn 765 764 766 102 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
        (reg:SI 342)) policysigned.c:303 -1
     (nil))
(code_label 766 765 767 103 57 "" [1 uses])
(note 767 766 768 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 768 767 769 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:311 -1
     (nil))
(jump_insn 769 768 770 103 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 783)
            (pc))) policysigned.c:311 -1
     (nil)
 -> 783)
(note 770 769 771 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 771 770 772 104 (set (reg:DI 343)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1120 [0xfffffffffffffba0])) [0 signingKeyPassword+0 S8 A64])) policysigned.c:312 -1
     (nil))
(insn 772 771 773 104 (set (reg:DI 344)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1128 [0xfffffffffffffb98])) [0 signingKeyFilename+0 S8 A64])) policysigned.c:312 -1
     (nil))
(insn 773 772 774 104 (parallel [
            (set (reg:DI 345)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1104 [0xfffffffffffffbb0])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:312 -1
     (nil))
(insn 774 773 775 104 (parallel [
            (set (reg:DI 346)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:312 -1
     (nil))
(insn 775 774 776 104 (parallel [
            (set (reg:DI 347)
                (plus:DI (reg:DI 346)
                    (const_int 408 [0x198])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:312 -1
     (nil))
(insn 776 775 777 104 (set (reg:DI 2 cx)
        (reg:DI 343)) policysigned.c:312 -1
     (nil))
(insn 777 776 778 104 (set (reg:DI 1 dx)
        (reg:DI 344)) policysigned.c:312 -1
     (nil))
(insn 778 777 779 104 (set (reg:DI 4 si)
        (reg:DI 345)) policysigned.c:312 -1
     (nil))
(insn 779 778 780 104 (set (reg:DI 5 di)
        (reg:DI 347)) policysigned.c:312 -1
     (nil))
(call_insn 780 779 781 104 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("signAHash") [flags 0x3]  <function_decl 0x7fe01a48e0d8 signAHash>) [0 signAHash S1 A8])
            (const_int 0 [0]))) policysigned.c:312 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 781 780 782 104 (set (reg:SI 348)
        (reg:SI 0 ax)) policysigned.c:312 -1
     (nil))
(insn 782 781 783 104 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
        (reg:SI 348)) policysigned.c:312 -1
     (nil))
(code_label 783 782 784 105 56 "" [2 uses])
(note 784 783 785 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 785 784 786 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1112 [0xfffffffffffffba8])) [0 signatureFilename+0 S8 A64])
            (const_int 0 [0]))) policysigned.c:318 -1
     (nil))
(jump_insn 786 785 787 105 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 832)
            (pc))) policysigned.c:318 -1
     (nil)
 -> 832)
(note 787 786 788 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 788 787 789 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:319 -1
     (nil))
(jump_insn 789 788 790 106 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 800)
            (pc))) policysigned.c:319 -1
     (nil)
 -> 800)
(note 790 789 791 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 791 790 792 107 (set (reg:DI 349)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1112 [0xfffffffffffffba8])) [0 signatureFilename+0 S8 A64])) policysigned.c:320 -1
     (nil))
(insn 792 791 793 107 (parallel [
            (set (reg:DI 350)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1200 [0xfffffffffffffb50])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:320 -1
     (nil))
(insn 793 792 794 107 (parallel [
            (set (reg:DI 351)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1208 [0xfffffffffffffb48])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:320 -1
     (nil))
(insn 794 793 795 107 (set (reg:DI 1 dx)
        (reg:DI 349)) policysigned.c:320 -1
     (nil))
(insn 795 794 796 107 (set (reg:DI 4 si)
        (reg:DI 350)) policysigned.c:320 -1
     (nil))
(insn 796 795 797 107 (set (reg:DI 5 di)
        (reg:DI 351)) policysigned.c:320 -1
     (nil))
(call_insn 797 796 798 107 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_ReadBinaryFile") [flags 0x41]  <function_decl 0x7fe01a3c1a20 TSS_File_ReadBinaryFile>) [0 TSS_File_ReadBinaryFile S1 A8])
            (const_int 0 [0]))) policysigned.c:320 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 798 797 799 107 (set (reg:SI 352)
        (reg:SI 0 ax)) policysigned.c:320 -1
     (nil))
(insn 799 798 800 107 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
        (reg:SI 352)) policysigned.c:320 -1
     (nil))
(code_label 800 799 801 108 59 "" [1 uses])
(note 801 800 802 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 802 801 803 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:324 -1
     (nil))
(jump_insn 803 802 804 108 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 816)
            (pc))) policysigned.c:324 -1
     (nil)
 -> 816)
(note 804 803 805 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 805 804 806 109 (set (reg:DI 222 [ D.17175 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1200 [0xfffffffffffffb50])) [0 signatureLength+0 S8 A64])) policysigned.c:325 -1
     (nil))
(insn 806 805 807 109 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 222 [ D.17175 ])
            (const_int 256 [0x100]))) policysigned.c:325 -1
     (nil))
(jump_insn 807 806 808 109 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 816)
            (pc))) policysigned.c:325 -1
     (nil)
 -> 816)
(note 808 807 809 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 809 808 810 110 (set (reg:DI 223 [ D.17175 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1200 [0xfffffffffffffb50])) [0 signatureLength+0 S8 A64])) policysigned.c:326 -1
     (nil))
(insn 810 809 811 110 (set (reg:DI 1 dx)
        (const_int 256 [0x100])) policysigned.c:326 -1
     (nil))
(insn 811 810 812 110 (set (reg:DI 4 si)
        (reg:DI 223 [ D.17175 ])) policysigned.c:326 -1
     (nil))
(insn 812 811 813 110 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fe01a11c990 *.LC37>)) policysigned.c:326 -1
     (nil))
(insn 813 812 814 110 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysigned.c:326 -1
     (nil))
(call_insn 814 813 815 110 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fe01ad90ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policysigned.c:326 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 815 814 816 110 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
        (const_int 721018 [0xb007a])) policysigned.c:329 -1
     (nil))
(code_label 816 815 817 111 60 "" [2 uses])
(note 817 816 818 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 818 817 819 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:332 -1
     (nil))
(jump_insn 819 818 820 111 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 832)
            (pc))) policysigned.c:332 -1
     (nil)
 -> 832)
(note 820 819 821 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 821 820 822 112 (set (reg:DI 224 [ D.17175 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1200 [0xfffffffffffffb50])) [0 signatureLength+0 S8 A64])) policysigned.c:333 -1
     (nil))
(insn 822 821 823 112 (set (reg:HI 225 [ D.17180 ])
        (subreg:HI (reg:DI 224 [ D.17175 ]) 0)) policysigned.c:333 -1
     (nil))
(insn 823 822 824 112 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [0 in.auth.signature.rsassa.sig.t.size+0 S2 A64])
        (reg:HI 225 [ D.17180 ])) policysigned.c:333 -1
     (nil))
(insn 824 823 825 112 (set (reg:DI 226 [ D.17175 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1200 [0xfffffffffffffb50])) [0 signatureLength+0 S8 A64])) policysigned.c:334 -1
     (nil))
(insn 825 824 826 112 (set (reg/f:DI 227 [ D.17181 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1208 [0xfffffffffffffb48])) [0 signature+0 S8 A64])) policysigned.c:334 -1
     (nil))
(insn 826 825 827 112 (parallel [
            (set (reg:DI 353)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:334 -1
     (nil))
(insn 827 826 828 112 (parallel [
            (set (reg:DI 354)
                (plus:DI (reg:DI 353)
                    (const_int 410 [0x19a])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:334 -1
     (nil))
(insn 828 827 829 112 (set (reg:DI 1 dx)
        (reg:DI 226 [ D.17175 ])) policysigned.c:334 -1
     (nil))
(insn 829 828 830 112 (set (reg:DI 4 si)
        (reg/f:DI 227 [ D.17181 ])) policysigned.c:334 -1
     (nil))
(insn 830 829 831 112 (set (reg:DI 5 di)
        (reg:DI 354)) policysigned.c:334 -1
     (nil))
(call_insn 831 830 832 112 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fe01ad86e58 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) policysigned.c:334 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 832 831 833 113 58 "" [2 uses])
(note 833 832 834 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 834 833 835 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:338 -1
     (nil))
(jump_insn 835 834 836 113 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 842)
            (pc))) policysigned.c:338 -1
     (nil)
 -> 842)
(note 836 835 837 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 837 836 838 114 (parallel [
            (set (reg:DI 355)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1216 [0xfffffffffffffb40])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:339 -1
     (nil))
(insn 838 837 839 114 (set (reg:DI 5 di)
        (reg:DI 355)) policysigned.c:339 -1
     (nil))
(call_insn 839 838 840 114 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Create") [flags 0x41]  <function_decl 0x7fe01a3b7d80 TSS_Create>) [0 TSS_Create S1 A8])
            (const_int 0 [0]))) policysigned.c:339 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 840 839 841 114 (set (reg:SI 356)
        (reg:SI 0 ax)) policysigned.c:339 -1
     (nil))
(insn 841 840 842 114 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
        (reg:SI 356)) policysigned.c:339 -1
     (nil))
(code_label 842 841 843 115 61 "" [1 uses])
(note 843 842 844 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 844 843 845 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:342 -1
     (nil))
(jump_insn 845 844 846 115 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 863)
            (pc))) policysigned.c:342 -1
     (nil)
 -> 863)
(note 846 845 847 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 847 846 848 116 (set (reg/f:DI 228 [ D.17182 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 tssContext+0 S8 A64])) policysigned.c:343 -1
     (nil))
(insn 848 847 849 116 (parallel [
            (set (reg:DI 357)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:343 -1
     (nil))
(insn 849 848 850 116 (parallel [
            (set (reg:DI 358)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:343 -1
     (nil))
(insn 850 849 851 116 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) policysigned.c:343 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 851 850 852 116 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policysigned.c:343 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 852 851 853 116 (set (reg:SI 38 r9)
        (const_int 1073741831 [0x40000007])) policysigned.c:343 -1
     (nil))
(insn 853 852 854 116 (set (reg:SI 37 r8)
        (const_int 352 [0x160])) policysigned.c:343 -1
     (nil))
(insn 854 853 855 116 (set (reg:DI 2 cx)
        (const_int 0 [0])) policysigned.c:343 -1
     (nil))
(insn 855 854 856 116 (set (reg:DI 1 dx)
        (reg:DI 357)) policysigned.c:343 -1
     (nil))
(insn 856 855 857 116 (set (reg:DI 4 si)
        (reg:DI 358)) policysigned.c:343 -1
     (nil))
(insn 857 856 858 116 (set (reg:DI 5 di)
        (reg/f:DI 228 [ D.17182 ])) policysigned.c:343 -1
     (nil))
(insn 858 857 859 116 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysigned.c:343 -1
     (nil))
(call_insn 859 858 860 116 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fe01a3c1000 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 16 [0x10]))) policysigned.c:343 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 860 859 861 116 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:343 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 861 860 862 116 (set (reg:SI 359)
        (reg:SI 0 ax)) policysigned.c:343 -1
     (nil))
(insn 862 861 863 116 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
        (reg:SI 359)) policysigned.c:343 -1
     (nil))
(code_label 863 862 864 117 62 "" [1 uses])
(note 864 863 865 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 865 864 866 117 (set (reg/f:DI 229 [ D.17182 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 tssContext+0 S8 A64])) policysigned.c:351 -1
     (nil))
(insn 866 865 867 117 (set (reg:DI 5 di)
        (reg/f:DI 229 [ D.17182 ])) policysigned.c:351 -1
     (nil))
(call_insn 867 866 868 117 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Delete") [flags 0x41]  <function_decl 0x7fe01a3b7e58 TSS_Delete>) [0 TSS_Delete S1 A8])
            (const_int 0 [0]))) policysigned.c:351 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 868 867 869 117 (set (reg:SI 360)
        (reg:SI 0 ax)) policysigned.c:351 -1
     (nil))
(insn 869 868 870 117 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1220 [0xfffffffffffffb3c])) [0 rc1+0 S4 A32])
        (reg:SI 360)) policysigned.c:351 -1
     (nil))
(insn 870 869 871 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:352 -1
     (nil))
(jump_insn 871 870 872 117 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 875)
            (pc))) policysigned.c:352 -1
     (nil)
 -> 875)
(note 872 871 873 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 873 872 874 118 (set (reg:SI 361)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1220 [0xfffffffffffffb3c])) [0 rc1+0 S4 A32])) policysigned.c:353 -1
     (nil))
(insn 874 873 875 118 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
        (reg:SI 361)) policysigned.c:353 -1
     (nil))
(code_label 875 874 876 119 63 "" [1 uses])
(note 876 875 877 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 877 876 878 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:356 -1
     (nil))
(jump_insn 878 877 879 119 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 893)
            (pc))) policysigned.c:356 -1
     (nil)
 -> 893)
(note 879 878 880 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 880 879 881 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1144 [0xfffffffffffffb88])) [0 ticketFilename+0 S8 A64])
            (const_int 0 [0]))) policysigned.c:356 -1
     (nil))
(jump_insn 881 880 882 120 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 893)
            (pc))) policysigned.c:356 -1
     (nil)
 -> 893)
(note 882 881 883 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 883 882 884 121 (set (reg:DI 362)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1144 [0xfffffffffffffb88])) [0 ticketFilename+0 S8 A64])) policysigned.c:357 -1
     (nil))
(insn 884 883 885 121 (parallel [
            (set (reg:DI 363)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:357 -1
     (nil))
(insn 885 884 886 121 (parallel [
            (set (reg:DI 364)
                (plus:DI (reg:DI 363)
                    (const_int 132 [0x84])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:357 -1
     (nil))
(insn 886 885 887 121 (set (reg:DI 1 dx)
        (reg:DI 362)) policysigned.c:357 -1
     (nil))
(insn 887 886 888 121 (set (reg:DI 365)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("TSS_TPMT_TK_AUTH_Marshal") [flags 0x41]  <function_decl 0x7fe01a4485e8 TSS_TPMT_TK_AUTH_Marshal>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) policysigned.c:357 -1
     (nil))
(insn 888 887 889 121 (set (reg:DI 4 si)
        (reg:DI 365)) policysigned.c:357 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("TSS_TPMT_TK_AUTH_Marshal") [flags 0x41]  <function_decl 0x7fe01a4485e8 TSS_TPMT_TK_AUTH_Marshal>)
        (nil)))
(insn 889 888 890 121 (set (reg:DI 5 di)
        (reg:DI 364)) policysigned.c:357 -1
     (nil))
(call_insn 890 889 891 121 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_WriteStructure") [flags 0x41]  <function_decl 0x7fe01a3c1ca8 TSS_File_WriteStructure>) [0 TSS_File_WriteStructure S1 A8])
            (const_int 0 [0]))) policysigned.c:357 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 891 890 892 121 (set (reg:SI 366)
        (reg:SI 0 ax)) policysigned.c:357 -1
     (nil))
(insn 892 891 893 121 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
        (reg:SI 366)) policysigned.c:357 -1
     (nil))
(code_label 893 892 894 122 64 "" [2 uses])
(note 894 893 895 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 895 894 896 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:361 -1
     (nil))
(jump_insn 896 895 897 122 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 912)
            (pc))) policysigned.c:361 -1
     (nil)
 -> 912)
(note 897 896 898 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 898 897 899 123 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1136 [0xfffffffffffffb90])) [0 timeoutFilename+0 S8 A64])
            (const_int 0 [0]))) policysigned.c:361 -1
     (nil))
(jump_insn 899 898 900 123 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 912)
            (pc))) policysigned.c:361 -1
     (nil)
 -> 912)
(note 900 899 901 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 901 900 902 124 (set (reg:HI 230 [ D.17180 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -960 [0xfffffffffffffc40])) [0 out.timeout.b.size+0 S2 A64])) policysigned.c:363 -1
     (nil))
(insn 902 901 903 124 (set (reg:DI 231 [ D.17175 ])
        (zero_extend:DI (reg:HI 230 [ D.17180 ]))) policysigned.c:362 -1
     (nil))
(insn 903 902 904 124 (set (reg:DI 367)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1136 [0xfffffffffffffb90])) [0 timeoutFilename+0 S8 A64])) policysigned.c:362 -1
     (nil))
(insn 904 903 905 124 (parallel [
            (set (reg:DI 368)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:362 -1
     (nil))
(insn 905 904 906 124 (parallel [
            (set (reg:DI 369)
                (plus:DI (reg:DI 368)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:362 -1
     (nil))
(insn 906 905 907 124 (set (reg:DI 1 dx)
        (reg:DI 367)) policysigned.c:362 -1
     (nil))
(insn 907 906 908 124 (set (reg:DI 4 si)
        (reg:DI 231 [ D.17175 ])) policysigned.c:362 -1
     (nil))
(insn 908 907 909 124 (set (reg:DI 5 di)
        (reg:DI 369)) policysigned.c:362 -1
     (nil))
(call_insn 909 908 910 124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_WriteBinaryFile") [flags 0x41]  <function_decl 0x7fe01a3c1af8 TSS_File_WriteBinaryFile>) [0 TSS_File_WriteBinaryFile S1 A8])
            (const_int 0 [0]))) policysigned.c:362 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 910 909 911 124 (set (reg:SI 370)
        (reg:SI 0 ax)) policysigned.c:362 -1
     (nil))
(insn 911 910 912 124 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
        (reg:SI 370)) policysigned.c:362 -1
     (nil))
(code_label 912 911 913 125 65 "" [2 uses])
(note 913 912 914 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 914 913 915 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:366 -1
     (nil))
(jump_insn 915 914 916 125 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 927)
            (pc))) policysigned.c:366 -1
     (nil)
 -> 927)
(note 916 915 917 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 917 916 918 126 (set (reg:SI 232 [ D.17178 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fe01a6176c0 verbose>) [0 verbose+0 S4 A32])) policysigned.c:367 -1
     (nil))
(insn 918 917 919 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 232 [ D.17178 ])
            (const_int 0 [0]))) policysigned.c:367 -1
     (nil))
(jump_insn 919 918 920 126 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 953)
            (pc))) policysigned.c:367 612 {*jcc_1}
     (nil)
 -> 953)
(note 920 919 921 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 921 920 922 127 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7fe01a11ca20 *.LC38>)) policysigned.c:367 -1
     (nil))
(call_insn 922 921 925 127 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:367 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 925 922 926 127 (set (pc)
        (label_ref 953)) -1
     (nil)
 -> 953)
(barrier 926 925 927)
(code_label 927 926 928 129 66 "" [1 uses])
(note 928 927 929 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 929 928 930 129 (set (reg:SI 371)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])) policysigned.c:373 -1
     (nil))
(insn 930 929 931 129 (set (reg:SI 4 si)
        (reg:SI 371)) policysigned.c:373 -1
     (nil))
(insn 931 930 932 129 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7fe01a11cab0 *.LC39>)) policysigned.c:373 -1
     (nil))
(insn 932 931 933 129 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysigned.c:373 -1
     (nil))
(call_insn 933 932 934 129 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fe01ad90ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policysigned.c:373 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 934 933 935 129 (set (reg:SI 372)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])) policysigned.c:374 -1
     (nil))
(insn 935 934 936 129 (parallel [
            (set (reg:DI 373)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1176 [0xfffffffffffffb68])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:374 -1
     (nil))
(insn 936 935 937 129 (parallel [
            (set (reg:DI 374)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1184 [0xfffffffffffffb60])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:374 -1
     (nil))
(insn 937 936 938 129 (parallel [
            (set (reg:DI 375)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1192 [0xfffffffffffffb58])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:374 -1
     (nil))
(insn 938 937 939 129 (set (reg:SI 2 cx)
        (reg:SI 372)) policysigned.c:374 -1
     (nil))
(insn 939 938 940 129 (set (reg:DI 1 dx)
        (reg:DI 373)) policysigned.c:374 -1
     (nil))
(insn 940 939 941 129 (set (reg:DI 4 si)
        (reg:DI 374)) policysigned.c:374 -1
     (nil))
(insn 941 940 942 129 (set (reg:DI 5 di)
        (reg:DI 375)) policysigned.c:374 -1
     (nil))
(call_insn 942 941 943 129 (call (mem:QI (symbol_ref:DI ("TSS_ResponseCode_toString") [flags 0x41]  <function_decl 0x7fe01a3d2510 TSS_ResponseCode_toString>) [0 TSS_ResponseCode_toString S1 A8])
        (const_int 0 [0])) policysigned.c:374 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 943 942 944 129 (set (reg/f:DI 233 [ D.17183 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1176 [0xfffffffffffffb68])) [0 num+0 S8 A64])) policysigned.c:375 -1
     (nil))
(insn 944 943 945 129 (set (reg/f:DI 234 [ D.17183 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1184 [0xfffffffffffffb60])) [0 submsg+0 S8 A64])) policysigned.c:375 -1
     (nil))
(insn 945 944 946 129 (set (reg/f:DI 235 [ D.17183 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1192 [0xfffffffffffffb58])) [0 msg+0 S8 A64])) policysigned.c:375 -1
     (nil))
(insn 946 945 947 129 (set (reg:DI 2 cx)
        (reg/f:DI 233 [ D.17183 ])) policysigned.c:375 -1
     (nil))
(insn 947 946 948 129 (set (reg:DI 1 dx)
        (reg/f:DI 234 [ D.17183 ])) policysigned.c:375 -1
     (nil))
(insn 948 947 949 129 (set (reg:DI 4 si)
        (reg/f:DI 235 [ D.17183 ])) policysigned.c:375 -1
     (nil))
(insn 949 948 950 129 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC40") [flags 0x2]  <var_decl 0x7fe01a11cb40 *.LC40>)) policysigned.c:375 -1
     (nil))
(insn 950 949 951 129 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysigned.c:375 -1
     (nil))
(call_insn 951 950 952 129 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fe01ad90ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policysigned.c:375 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 952 951 953 129 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) policysigned.c:376 -1
     (nil))
(code_label 953 952 954 130 68 "" [2 uses])
(note 954 953 955 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 955 954 956 130 (set (reg/f:DI 236 [ D.17181 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1208 [0xfffffffffffffb48])) [0 signature+0 S8 A64])) policysigned.c:378 -1
     (nil))
(insn 956 955 957 130 (set (reg:DI 5 di)
        (reg/f:DI 236 [ D.17181 ])) policysigned.c:378 -1
     (nil))
(call_insn 957 956 958 130 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fe01ada6e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) policysigned.c:378 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 958 957 961 130 (set (reg:SI 237 [ D.17178 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1232 [0xfffffffffffffb30])) [0 rc+0 S4 A32])) policysigned.c:379 -1
     (nil))
(insn 961 958 965 130 (set (reg:SI 238 [ <retval> ])
        (reg:SI 237 [ D.17178 ])) -1
     (nil))
(insn 965 961 966 130 (set (reg/i:SI 0 ax)
        (reg:SI 238 [ <retval> ])) policysigned.c:380 -1
     (nil))
(insn 966 965 967 130 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.17185+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) policysigned.c:380 -1
     (nil))
(jump_insn 967 966 973 130 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 970)
            (pc))) policysigned.c:380 -1
     (nil)
 -> 970)
(note 973 967 968 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(call_insn 968 973 969 133 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fe01a48e510 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) policysigned.c:380 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 969 968 970)
(code_label 970 969 974 134 70 "" [1 uses])
(note 974 970 971 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 971 974 0 134 (use (reg/i:SI 0 ax)) policysigned.c:380 -1
     (nil))

;; Function signAHash (signAHash, funcdef_no=3, decl_uid=16771, cgraph_uid=3, symbol_order=4)

Partition 2: size 8 align 8
	keyFile_7
Partition 1: size 8 align 8
	rsaKey_6
Partition 6: size 4 align 4
	irc_60
Partition 5: size 4 align 4
	keySize_53
Partition 4: size 4 align 4
	sizeInBytes_9
Partition 3: size 4 align 4
	nid_8
Partition 0: size 4 align 4
	rc_1
Partition 7: size 4 align 4
	length

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28
Purged edges from bb 32


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 7->8 to 11 failed.
Merging block 31 into block 30...
Merged blocks 30 and 31.
Merged 30 and 31 without moving.
Removing jump 183.
Merging block 32 into block 30...
Merged blocks 30 and 32.
Merged 30 and 32 without moving.


try_optimize_cfg iteration 2

Forwarding edge 7->8 to 11 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 signature+0 S8 A64])
        (reg:DI 5 di [ signature ])) policysigned.c:393 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 aHash+0 S8 A64])
        (reg:DI 4 si [ aHash ])) policysigned.c:393 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 signingKeyFilename+0 S8 A64])
        (reg:DI 1 dx [ signingKeyFilename ])) policysigned.c:393 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 signingKeyPassword+0 S8 A64])
        (reg:DI 2 cx [ signingKeyPassword ])) policysigned.c:393 -1
     (nil))
(note 6 5 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 6 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.17236+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:393 -1
     (nil))
(insn 10 7 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) policysigned.c:394 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 rsaKey+0 S8 A64])
        (const_int 0 [0])) policysigned.c:396 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 keyFile+0 S8 A64])
        (const_int 0 [0])) policysigned.c:397 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:402 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) policysigned.c:402 -1
     (nil)
 -> 24)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 aHash+0 S8 A64])) policysigned.c:403 -1
     (nil))
(insn 17 16 18 4 (set (reg:HI 87 [ D.17229 ])
        (mem/j:HI (reg/f:DI 103) [0 aHash_24(D)->hashAlg+0 S2 A16])) policysigned.c:403 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.17230 ])
        (zero_extend:SI (reg:HI 87 [ D.17229 ]))) policysigned.c:403 -1
     (nil))
(insn 19 18 20 4 (set (reg:SI 5 di)
        (reg:SI 88 [ D.17230 ])) policysigned.c:403 -1
     (nil))
(call_insn 20 19 21 4 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_GetDigestSize") [flags 0x41]  <function_decl 0x7fe01a3ca000 TSS_GetDigestSize>) [0 TSS_GetDigestSize S1 A8])
            (const_int 0 [0]))) policysigned.c:403 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 21 20 22 4 (set (reg:HI 89 [ D.17229 ])
        (reg:HI 0 ax)) policysigned.c:403 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 104)
        (zero_extend:SI (reg:HI 89 [ D.17229 ]))) policysigned.c:403 -1
     (nil))
(insn 23 22 24 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 sizeInBytes+0 S4 A32])
        (reg:SI 104)) policysigned.c:403 -1
     (nil))
(code_label 24 23 25 5 72 "" [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:412 -1
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) policysigned.c:412 -1
     (nil)
 -> 58)
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 aHash+0 S8 A64])) policysigned.c:413 -1
     (nil))
(insn 30 29 31 6 (set (reg:HI 90 [ D.17229 ])
        (mem/j:HI (reg/f:DI 105) [0 aHash_24(D)->hashAlg+0 S2 A16])) policysigned.c:413 -1
     (nil))
(insn 31 30 32 6 (set (reg:SI 91 [ D.17230 ])
        (zero_extend:SI (reg:HI 90 [ D.17229 ]))) policysigned.c:413 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.17230 ])
            (const_int 4 [0x4]))) policysigned.c:413 -1
     (nil))
(jump_insn 33 32 194 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) policysigned.c:413 -1
     (nil)
 -> 43)
(note 194 33 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 194 35 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.17230 ])
            (const_int 11 [0xb]))) policysigned.c:413 -1
     (nil))
(jump_insn 35 34 195 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) policysigned.c:413 -1
     (nil)
 -> 38)
(note 195 35 36 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 36 195 37 8 (set (pc)
        (label_ref 48)) policysigned.c:413 -1
     (nil)
 -> 48)
(barrier 37 36 38)
(code_label 38 37 39 9 76 "" [1 uses])
(note 39 38 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 nid+0 S4 A32])
        (const_int 672 [0x2a0])) policysigned.c:415 -1
     (nil))
(jump_insn 41 40 42 9 (set (pc)
        (label_ref 58)) policysigned.c:416 -1
     (nil)
 -> 58)
(barrier 42 41 43)
(code_label 43 42 44 10 75 "" [1 uses])
(note 44 43 45 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 nid+0 S4 A32])
        (const_int 64 [0x40])) policysigned.c:418 -1
     (nil))
(jump_insn 46 45 47 10 (set (pc)
        (label_ref 58)) policysigned.c:419 -1
     (nil)
 -> 58)
(barrier 47 46 48)
(code_label 48 47 49 11 74 "" [1 uses])
(note 49 48 50 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 11 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 aHash+0 S8 A64])) policysigned.c:421 -1
     (nil))
(insn 51 50 52 11 (set (reg:HI 92 [ D.17229 ])
        (mem/j:HI (reg/f:DI 106) [0 aHash_24(D)->hashAlg+0 S2 A16])) policysigned.c:421 -1
     (nil))
(insn 52 51 53 11 (set (reg:SI 93 [ D.17230 ])
        (zero_extend:SI (reg:HI 92 [ D.17229 ]))) policysigned.c:421 -1
     (nil))
(insn 53 52 54 11 (set (reg:SI 4 si)
        (reg:SI 93 [ D.17230 ])) policysigned.c:421 -1
     (nil))
(insn 54 53 55 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x7fe01a14e1b0 *.LC41>)) policysigned.c:421 -1
     (nil))
(insn 55 54 56 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysigned.c:421 -1
     (nil))
(call_insn 56 55 57 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fe01ad90ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policysigned.c:421 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 57 56 58 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 rc+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) policysigned.c:422 -1
     (nil))
(code_label 58 57 59 12 73 "" [3 uses])
(note 59 58 60 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:426 -1
     (nil))
(jump_insn 61 60 62 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) policysigned.c:426 -1
     (nil)
 -> 78)
(note 62 61 63 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 13 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 signingKeyFilename+0 S8 A64])) policysigned.c:427 -1
     (nil))
(insn 64 63 65 13 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC42") [flags 0x2]  <var_decl 0x7fe01a14e240 *.LC42>)) policysigned.c:427 -1
     (nil))
(insn 65 64 66 13 (set (reg:DI 5 di)
        (reg:DI 107)) policysigned.c:427 -1
     (nil))
(call_insn 66 65 67 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7fe01ae7abd0 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) policysigned.c:427 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 67 66 68 13 (set (reg:DI 108)
        (reg:DI 0 ax)) policysigned.c:427 -1
     (nil))
(insn 68 67 69 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 keyFile+0 S8 A64])
        (reg:DI 108)) policysigned.c:427 -1
     (nil))
(insn 69 68 70 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 keyFile+0 S8 A64])
            (const_int 0 [0]))) policysigned.c:428 -1
     (nil))
(jump_insn 70 69 71 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) policysigned.c:428 -1
     (nil)
 -> 78)
(note 71 70 72 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 14 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 signingKeyFilename+0 S8 A64])) policysigned.c:429 -1
     (nil))
(insn 73 72 74 14 (set (reg:DI 4 si)
        (reg:DI 109)) policysigned.c:429 -1
     (nil))
(insn 74 73 75 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC43") [flags 0x2]  <var_decl 0x7fe01a14e2d0 *.LC43>)) policysigned.c:429 -1
     (nil))
(insn 75 74 76 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysigned.c:429 -1
     (nil))
(call_insn 76 75 77 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fe01ad90ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policysigned.c:429 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 77 76 78 14 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 rc+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) policysigned.c:430 -1
     (nil))
(code_label 78 77 79 15 77 "" [2 uses])
(note 79 78 80 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:433 -1
     (nil))
(jump_insn 81 80 82 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) policysigned.c:433 -1
     (nil)
 -> 101)
(note 82 81 83 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 16 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 signingKeyPassword+0 S8 A64])) policysigned.c:434 -1
     (nil))
(insn 84 83 85 16 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 keyFile+0 S8 A64])) policysigned.c:434 -1
     (nil))
(insn 85 84 86 16 (set (reg:DI 2 cx)
        (reg:DI 110)) policysigned.c:434 -1
     (nil))
(insn 86 85 87 16 (set (reg:DI 1 dx)
        (const_int 0 [0])) policysigned.c:434 -1
     (nil))
(insn 87 86 88 16 (set (reg:DI 4 si)
        (const_int 0 [0])) policysigned.c:434 -1
     (nil))
(insn 88 87 89 16 (set (reg:DI 5 di)
        (reg:DI 111)) policysigned.c:434 -1
     (nil))
(call_insn 89 88 90 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PEM_read_RSAPrivateKey") [flags 0x41]  <function_decl 0x7fe01a5d2798 PEM_read_RSAPrivateKey>) [0 PEM_read_RSAPrivateKey S1 A8])
            (const_int 0 [0]))) policysigned.c:434 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 90 89 91 16 (set (reg:DI 112)
        (reg:DI 0 ax)) policysigned.c:434 -1
     (nil))
(insn 91 90 92 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 rsaKey+0 S8 A64])
        (reg:DI 112)) policysigned.c:434 -1
     (nil))
(insn 92 91 93 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 rsaKey+0 S8 A64])
            (const_int 0 [0]))) policysigned.c:435 -1
     (nil))
(jump_insn 93 92 94 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) policysigned.c:435 -1
     (nil)
 -> 101)
(note 94 93 95 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC44") [flags 0x2]  <var_decl 0x7fe01a14e360 *.LC44>)) policysigned.c:436 -1
     (nil))
(call_insn 96 95 97 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:436 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 97 96 98 17 (set (reg/f:DI 94 [ D.17231 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7fe01ae425a0 stdout>) [0 stdout+0 S8 A64])) policysigned.c:437 -1
     (nil))
(insn 98 97 99 17 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.17231 ])) policysigned.c:437 -1
     (nil))
(call_insn 99 98 100 17 (call (mem:QI (symbol_ref:DI ("ERR_print_errors_fp") [flags 0x41]  <function_decl 0x7fe01a783d80 ERR_print_errors_fp>) [0 ERR_print_errors_fp S1 A8])
        (const_int 0 [0])) policysigned.c:437 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 100 99 101 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 rc+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) policysigned.c:438 -1
     (nil))
(code_label 101 100 102 18 78 "" [2 uses])
(note 102 101 103 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:444 -1
     (nil))
(jump_insn 104 103 105 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) policysigned.c:444 -1
     (nil)
 -> 121)
(note 105 104 106 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 19 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 rsaKey+0 S8 A64])) policysigned.c:445 -1
     (nil))
(insn 107 106 108 19 (set (reg:DI 5 di)
        (reg:DI 113)) policysigned.c:445 -1
     (nil))
(call_insn 108 107 109 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("RSA_size") [flags 0x41]  <function_decl 0x7fe01a799360 RSA_size>) [0 RSA_size S1 A8])
            (const_int 0 [0]))) policysigned.c:445 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 109 108 110 19 (set (reg:SI 95 [ D.17230 ])
        (reg:SI 0 ax)) policysigned.c:445 -1
     (nil))
(insn 110 109 111 19 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 keySize+0 S4 A32])
        (reg:SI 95 [ D.17230 ])) policysigned.c:445 -1
     (nil))
(insn 111 110 112 19 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 keySize+0 S4 A32])
            (const_int 256 [0x100]))) policysigned.c:446 -1
     (nil))
(jump_insn 112 111 113 19 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) policysigned.c:446 -1
     (nil)
 -> 121)
(note 113 112 114 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 20 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 keySize+0 S4 A32])) policysigned.c:447 -1
     (nil))
(insn 115 114 116 20 (set (reg:SI 1 dx)
        (const_int 256 [0x100])) policysigned.c:447 -1
     (nil))
(insn 116 115 117 20 (set (reg:SI 4 si)
        (reg:SI 114)) policysigned.c:447 -1
     (nil))
(insn 117 116 118 20 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC45") [flags 0x2]  <var_decl 0x7fe01a14e3f0 *.LC45>)) policysigned.c:447 -1
     (nil))
(insn 118 117 119 20 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysigned.c:447 -1
     (nil))
(call_insn 119 118 120 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fe01ad90ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policysigned.c:447 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 120 119 121 20 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 rc+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) policysigned.c:449 -1
     (nil))
(code_label 121 120 122 21 79 "" [2 uses])
(note 122 121 123 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:452 -1
     (nil))
(jump_insn 124 123 125 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 152)
            (pc))) policysigned.c:452 -1
     (nil)
 -> 152)
(note 125 124 126 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 22 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 signature+0 S8 A64])) policysigned.c:455 -1
     (nil))
(insn 127 126 128 22 (parallel [
            (set (reg/f:DI 96 [ D.17232 ])
                (plus:DI (reg/f:DI 115)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:455 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 signature+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 128 127 129 22 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 aHash+0 S8 A64])) policysigned.c:454 -1
     (nil))
(insn 129 128 130 22 (parallel [
            (set (reg/f:DI 97 [ D.17233 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:454 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])) [0 aHash+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 130 129 131 22 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 rsaKey+0 S8 A64])) policysigned.c:453 -1
     (nil))
(insn 131 130 132 22 (parallel [
            (set (reg:DI 118)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) policysigned.c:453 -1
     (nil))
(insn 132 131 133 22 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 sizeInBytes+0 S4 A32])) policysigned.c:453 -1
     (nil))
(insn 133 132 134 22 (set (reg:SI 120)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 nid+0 S4 A32])) policysigned.c:453 -1
     (nil))
(insn 134 133 135 22 (set (reg:DI 38 r9)
        (reg:DI 117)) policysigned.c:453 -1
     (nil))
(insn 135 134 136 22 (set (reg:DI 37 r8)
        (reg:DI 118)) policysigned.c:453 -1
     (nil))
(insn 136 135 137 22 (set (reg:DI 2 cx)
        (reg/f:DI 96 [ D.17232 ])) policysigned.c:453 -1
     (nil))
(insn 137 136 138 22 (set (reg:SI 1 dx)
        (reg:SI 119)) policysigned.c:453 -1
     (nil))
(insn 138 137 139 22 (set (reg:DI 4 si)
        (reg/f:DI 97 [ D.17233 ])) policysigned.c:453 -1
     (nil))
(insn 139 138 140 22 (set (reg:SI 5 di)
        (reg:SI 120)) policysigned.c:453 -1
     (nil))
(call_insn 140 139 141 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("RSA_sign") [flags 0x41]  <function_decl 0x7fe01a7ab6c0 RSA_sign>) [0 RSA_sign S1 A8])
            (const_int 0 [0]))) policysigned.c:453 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 141 140 142 22 (set (reg:SI 121)
        (reg:SI 0 ax)) policysigned.c:453 -1
     (nil))
(insn 142 141 143 22 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 irc+0 S4 A32])
        (reg:SI 121)) policysigned.c:453 -1
     (nil))
(insn 143 142 144 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 irc+0 S4 A32])
            (const_int 1 [0x1]))) policysigned.c:457 -1
     (nil))
(jump_insn 144 143 145 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 152)
            (pc))) policysigned.c:457 -1
     (nil)
 -> 152)
(note 145 144 146 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 23 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC46") [flags 0x2]  <var_decl 0x7fe01a14e480 *.LC46>)) policysigned.c:458 -1
     (nil))
(call_insn 147 146 148 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:458 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 148 147 149 23 (set (reg/f:DI 98 [ D.17231 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7fe01ae425a0 stdout>) [0 stdout+0 S8 A64])) policysigned.c:459 -1
     (nil))
(insn 149 148 150 23 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.17231 ])) policysigned.c:459 -1
     (nil))
(call_insn 150 149 151 23 (call (mem:QI (symbol_ref:DI ("ERR_print_errors_fp") [flags 0x41]  <function_decl 0x7fe01a783d80 ERR_print_errors_fp>) [0 ERR_print_errors_fp S1 A8])
        (const_int 0 [0])) policysigned.c:459 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 151 150 152 23 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 rc+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) policysigned.c:460 -1
     (nil))
(code_label 152 151 153 24 80 "" [2 uses])
(note 153 152 154 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysigned.c:463 -1
     (nil))
(jump_insn 155 154 156 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 161)
            (pc))) policysigned.c:463 -1
     (nil)
 -> 161)
(note 156 155 157 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 25 (set (reg:SI 99 [ D.17234 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 length+0 S4 A64])) policysigned.c:464 -1
     (nil))
(insn 158 157 159 25 (set (reg:HI 100 [ D.17229 ])
        (subreg:HI (reg:SI 99 [ D.17234 ]) 0)) policysigned.c:464 -1
     (nil))
(insn 159 158 160 25 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 signature+0 S8 A64])) policysigned.c:464 -1
     (nil))
(insn 160 159 161 25 (set (mem/j:HI (reg/f:DI 122) [0 signature_56(D)->t.size+0 S2 A16])
        (reg:HI 100 [ D.17229 ])) policysigned.c:464 -1
     (nil))
(code_label 161 160 162 26 81 "" [1 uses])
(note 162 161 163 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 keyFile+0 S8 A64])
            (const_int 0 [0]))) policysigned.c:470 -1
     (nil))
(jump_insn 164 163 165 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) policysigned.c:470 -1
     (nil)
 -> 169)
(note 165 164 166 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 27 (set (reg:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 keyFile+0 S8 A64])) policysigned.c:471 -1
     (nil))
(insn 167 166 168 27 (set (reg:DI 5 di)
        (reg:DI 123)) policysigned.c:471 -1
     (nil))
(call_insn 168 167 169 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7fe01ae7a948 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) policysigned.c:471 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 169 168 170 28 82 "" [1 uses])
(note 170 169 171 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 rsaKey+0 S8 A64])
            (const_int 0 [0]))) policysigned.c:473 -1
     (nil))
(jump_insn 172 171 173 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 177)
            (pc))) policysigned.c:473 -1
     (nil)
 -> 177)
(note 173 172 174 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 29 (set (reg:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 rsaKey+0 S8 A64])) policysigned.c:474 -1
     (nil))
(insn 175 174 176 29 (set (reg:DI 5 di)
        (reg:DI 124)) policysigned.c:474 -1
     (nil))
(call_insn 176 175 177 29 (call (mem:QI (symbol_ref:DI ("RSA_free") [flags 0x41]  <function_decl 0x7fe01a799a20 RSA_free>) [0 RSA_free S1 A8])
        (const_int 0 [0])) policysigned.c:474 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 177 176 178 30 83 "" [1 uses])
(note 178 177 179 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 182 30 (set (reg:SI 101 [ D.17235 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 rc+0 S4 A32])) policysigned.c:476 -1
     (nil))
(insn 182 179 186 30 (set (reg:SI 102 [ <retval> ])
        (reg:SI 101 [ D.17235 ])) policysigned.c:476 -1
     (nil))
(insn 186 182 187 30 (set (reg/i:SI 0 ax)
        (reg:SI 102 [ <retval> ])) policysigned.c:477 -1
     (nil))
(insn 187 186 188 30 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.17236+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) policysigned.c:477 -1
     (nil))
(jump_insn 188 187 196 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 191)
            (pc))) policysigned.c:477 -1
     (nil)
 -> 191)
(note 196 188 189 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(call_insn 189 196 190 33 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fe01a48e510 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) policysigned.c:477 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 190 189 191)
(code_label 191 190 197 34 85 "" [1 uses])
(note 197 191 192 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 192 197 0 34 (use (reg/i:SI 0 ax)) policysigned.c:477 -1
     (nil))

;; Function printUsage (printUsage, funcdef_no=4, decl_uid=16766, cgraph_uid=4, symbol_order=5)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policysigned.c:482 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fe01ad93000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policysigned.c:482 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC47") [flags 0x2]  <var_decl 0x7fe01a147c60 *.LC47>)) policysigned.c:483 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:483 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policysigned.c:484 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fe01ad93000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policysigned.c:484 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC48") [flags 0x2]  <var_decl 0x7fe01a15b5a0 *.LC48>)) policysigned.c:485 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:485 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policysigned.c:486 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fe01ad93000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policysigned.c:486 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC49") [flags 0x2]  <var_decl 0x7fe01a15b630 *.LC49>)) policysigned.c:487 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:487 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC50") [flags 0x2]  <var_decl 0x7fe01a15b6c0 *.LC50>)) policysigned.c:488 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:488 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC51") [flags 0x2]  <var_decl 0x7fe01a15b750 *.LC51>)) policysigned.c:489 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:489 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC52") [flags 0x2]  <var_decl 0x7fe01a15b7e0 *.LC52>)) policysigned.c:490 -1
     (nil))
(call_insn 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:490 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC53") [flags 0x2]  <var_decl 0x7fe01a15b870 *.LC53>)) policysigned.c:491 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:491 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC54") [flags 0x2]  <var_decl 0x7fe01a15b900 *.LC54>)) policysigned.c:492 -1
     (nil))
(call_insn 26 25 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:492 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC55") [flags 0x2]  <var_decl 0x7fe01a15b990 *.LC55>)) policysigned.c:493 -1
     (nil))
(call_insn 28 27 29 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:493 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC56") [flags 0x2]  <var_decl 0x7fe01a15ba20 *.LC56>)) policysigned.c:494 -1
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:494 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC57") [flags 0x2]  <var_decl 0x7fe01a15bab0 *.LC57>)) policysigned.c:495 -1
     (nil))
(call_insn 32 31 33 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:495 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 33 32 34 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC58") [flags 0x2]  <var_decl 0x7fe01a15bb40 *.LC58>)) policysigned.c:496 -1
     (nil))
(call_insn 34 33 35 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:496 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC59") [flags 0x2]  <var_decl 0x7fe01a15bbd0 *.LC59>)) policysigned.c:497 -1
     (nil))
(call_insn 36 35 37 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:497 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC60") [flags 0x2]  <var_decl 0x7fe01a15bc60 *.LC60>)) policysigned.c:498 -1
     (nil))
(call_insn 38 37 39 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:498 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 39 38 40 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC61") [flags 0x2]  <var_decl 0x7fe01a15bcf0 *.LC61>)) policysigned.c:499 -1
     (nil))
(call_insn 40 39 41 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:499 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 41 40 42 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC62") [flags 0x2]  <var_decl 0x7fe01a15bd80 *.LC62>)) policysigned.c:500 -1
     (nil))
(call_insn 42 41 43 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe01ad93360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysigned.c:500 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 43 42 44 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) policysigned.c:501 -1
     (nil))
(call_insn 44 43 45 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fe01ada6000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) policysigned.c:501 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 45 44 0)
