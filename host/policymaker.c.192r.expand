
;; Function main (main, funcdef_no=2, decl_uid=10641, cgraph_uid=2, symbol_order=3)

Partition 13: size 256 align 16
	lineString
Partition 12: size 130 align 16
	digest
Partition 14: size 128 align 16
	lineBinary
Partition 11: size 8 align 8
	lineLength_24
Partition 10: size 8 align 8
	outFile_23
Partition 9: size 8 align 8
	inFile_22
Partition 4: size 8 align 8
	outFilename_13
Partition 3: size 8 align 8
	inFilename_10
Partition 2: size 8 align 8
	prc_8
Partition 8: size 4 align 4
	startSizeInBytes_21
Partition 7: size 4 align 4
	sizeInBytes_20
Partition 6: size 4 align 4
	nz_18
Partition 5: size 4 align 4
	pr_16
Partition 1: size 4 align 4
	i_6
Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 55 from 13 to 35.
Redirecting jump 73 from 13 to 35.
Redirecting jump 91 from 13 to 35.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Redirecting jump 100 from 15 to 35.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Redirecting jump 138 from 20 to 35.
Merging block 20 into block 19...
Merged blocks 19 and 20.
Merged 19 and 20 without moving.
Redirecting jump 176 from 25 to 35.
Merging block 25 into block 24...
Merged blocks 24 and 25.
Merged 24 and 25 without moving.
Merging block 78 into block 77...
Merged blocks 77 and 78.
Merged 77 and 78 without moving.
Removing jump 532.
Merging block 79 into block 77...
Merged blocks 77 and 79.
Merged 77 and 79 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -628 [0xfffffffffffffd8c])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) policymaker.c:85 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) policymaker.c:85 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.10900+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:85 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])
        (const_int 0 [0])) policymaker.c:86 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [0 prc+0 S8 A64])
        (const_int 0 [0])) policymaker.c:88 -1
     (nil))
(insn 10 9 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [0 inFilename+0 S8 A64])
        (const_int 0 [0])) policymaker.c:89 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [0 outFilename+0 S8 A64])
        (const_int 0 [0])) policymaker.c:90 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [0 pr+0 S4 A32])
        (const_int 0 [0])) policymaker.c:91 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -604 [0xfffffffffffffda4])) [0 nz+0 S4 A32])
        (const_int 0 [0])) policymaker.c:92 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [0 inFile+0 S8 A64])
        (const_int 0 [0])) policymaker.c:96 -1
     (nil))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [0 outFile+0 S8 A64])
        (const_int 0 [0])) policymaker.c:97 -1
     (nil))
(insn 16 15 17 2 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [0 digest.hashAlg+0 S2 A64])
        (const_int 11 [0xb])) policymaker.c:100 -1
     (nil))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref:DI ("ERR_load_crypto_strings") [flags 0x41]  <function_decl 0x7fad20926798 ERR_load_crypto_strings>) [0 ERR_load_crypto_strings S1 A8])
        (const_int 0 [0])) policymaker.c:102 -1
     (nil)
    (nil))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref:DI ("OPENSSL_add_all_algorithms_noconf") [flags 0x41]  <function_decl 0x7fad20713948 OPENSSL_add_all_algorithms_noconf>) [0 OPENSSL_add_all_algorithms_noconf S1 A8])
        (const_int 0 [0])) policymaker.c:103 -1
     (nil)
    (nil))
(insn 19 18 20 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) policymaker.c:105 -1
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (label_ref 279)) policymaker.c:105 -1
     (nil)
 -> 279)
(barrier 21 20 285)
(code_label 285 21 22 4 22 "" [1 uses])
(note 22 285 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg:SI 164)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])) policymaker.c:106 -1
     (nil))
(insn 24 23 25 4 (set (reg:DI 87 [ D.10894 ])
        (sign_extend:DI (reg:SI 164))) policymaker.c:106 -1
     (nil))
(insn 25 24 26 4 (parallel [
            (set (reg:DI 88 [ D.10894 ])
                (ashift:DI (reg:DI 87 [ D.10894 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:106 -1
     (nil))
(insn 26 25 27 4 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])) policymaker.c:106 -1
     (nil))
(insn 27 26 28 4 (parallel [
            (set (reg/f:DI 89 [ D.10895 ])
                (plus:DI (reg:DI 88 [ D.10894 ])
                    (reg/f:DI 165)))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:106 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])
            (reg:DI 88 [ D.10894 ]))
        (nil)))
(insn 28 27 29 4 (set (reg/f:DI 90 [ D.10896 ])
        (mem/f:DI (reg/f:DI 89 [ D.10895 ]) [0 *_61+0 S8 A64])) policymaker.c:106 -1
     (nil))
(insn 29 28 30 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fad205d9900 *.LC0>)) policymaker.c:106 -1
     (nil))
(insn 30 29 31 4 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.10896 ])) policymaker.c:106 -1
     (nil))
(call_insn/i 31 30 32 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fad20d9c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymaker.c:106 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 32 31 33 4 (set (reg:SI 91 [ D.10897 ])
        (reg:SI 0 ax)) policymaker.c:106 -1
     (nil))
(insn 33 32 34 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.10897 ])
            (const_int 0 [0]))) policymaker.c:106 -1
     (nil))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) policymaker.c:106 -1
     (nil)
 -> 111)
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:107 -1
     (nil))
(insn 37 36 38 5 (set (reg:SI 166)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])) policymaker.c:108 -1
     (nil))
(insn 38 37 39 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 166)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -628 [0xfffffffffffffd8c])) [0 argc+0 S4 A32]))) policymaker.c:108 -1
     (nil))
(jump_insn 39 38 40 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) policymaker.c:108 -1
     (nil)
 -> 102)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])) policymaker.c:109 -1
     (nil))
(insn 42 41 43 6 (set (reg:DI 92 [ D.10894 ])
        (sign_extend:DI (reg:SI 167))) policymaker.c:109 -1
     (nil))
(insn 43 42 44 6 (parallel [
            (set (reg:DI 93 [ D.10894 ])
                (ashift:DI (reg:DI 92 [ D.10894 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:109 -1
     (nil))
(insn 44 43 45 6 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])) policymaker.c:109 -1
     (nil))
(insn 45 44 46 6 (parallel [
            (set (reg/f:DI 94 [ D.10895 ])
                (plus:DI (reg:DI 93 [ D.10894 ])
                    (reg/f:DI 168)))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:109 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])
            (reg:DI 93 [ D.10894 ]))
        (nil)))
(insn 46 45 47 6 (set (reg/f:DI 95 [ D.10896 ])
        (mem/f:DI (reg/f:DI 94 [ D.10895 ]) [0 *_67+0 S8 A64])) policymaker.c:109 -1
     (nil))
(insn 47 46 48 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fad205d9990 *.LC1>)) policymaker.c:109 -1
     (nil))
(insn 48 47 49 6 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.10896 ])) policymaker.c:109 -1
     (nil))
(call_insn/i 49 48 50 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fad20d9c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymaker.c:109 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 50 49 51 6 (set (reg:SI 96 [ D.10897 ])
        (reg:SI 0 ax)) policymaker.c:109 -1
     (nil))
(insn 51 50 52 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.10897 ])
            (const_int 0 [0]))) policymaker.c:109 -1
     (nil))
(jump_insn 52 51 53 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) policymaker.c:109 -1
     (nil)
 -> 57)
(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 7 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [0 digest.hashAlg+0 S2 A64])
        (const_int 4 [0x4])) policymaker.c:110 -1
     (nil))
(jump_insn 55 54 56 7 (set (pc)
        (label_ref:DI 276)) 654 {jump}
     (nil)
 -> 276)
(barrier 56 55 57)
(code_label 57 56 58 8 5 "" [1 uses])
(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 8 (set (reg:SI 169)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])) policymaker.c:112 -1
     (nil))
(insn 60 59 61 8 (set (reg:DI 97 [ D.10894 ])
        (sign_extend:DI (reg:SI 169))) policymaker.c:112 -1
     (nil))
(insn 61 60 62 8 (parallel [
            (set (reg:DI 98 [ D.10894 ])
                (ashift:DI (reg:DI 97 [ D.10894 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:112 -1
     (nil))
(insn 62 61 63 8 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])) policymaker.c:112 -1
     (nil))
(insn 63 62 64 8 (parallel [
            (set (reg/f:DI 99 [ D.10895 ])
                (plus:DI (reg:DI 98 [ D.10894 ])
                    (reg/f:DI 170)))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:112 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])
            (reg:DI 98 [ D.10894 ]))
        (nil)))
(insn 64 63 65 8 (set (reg/f:DI 100 [ D.10896 ])
        (mem/f:DI (reg/f:DI 99 [ D.10895 ]) [0 *_73+0 S8 A64])) policymaker.c:112 -1
     (nil))
(insn 65 64 66 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fad205d9a20 *.LC2>)) policymaker.c:112 -1
     (nil))
(insn 66 65 67 8 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.10896 ])) policymaker.c:112 -1
     (nil))
(call_insn/i 67 66 68 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fad20d9c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymaker.c:112 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 68 67 69 8 (set (reg:SI 101 [ D.10897 ])
        (reg:SI 0 ax)) policymaker.c:112 -1
     (nil))
(insn 69 68 70 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.10897 ])
            (const_int 0 [0]))) policymaker.c:112 -1
     (nil))
(jump_insn 70 69 71 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) policymaker.c:112 -1
     (nil)
 -> 75)
(note 71 70 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 9 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [0 digest.hashAlg+0 S2 A64])
        (const_int 11 [0xb])) policymaker.c:113 -1
     (nil))
(jump_insn 73 72 74 9 (set (pc)
        (label_ref:DI 276)) 654 {jump}
     (nil)
 -> 276)
(barrier 74 73 75)
(code_label 75 74 76 10 7 "" [1 uses])
(note 76 75 77 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 10 (set (reg:SI 171)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])) policymaker.c:115 -1
     (nil))
(insn 78 77 79 10 (set (reg:DI 102 [ D.10894 ])
        (sign_extend:DI (reg:SI 171))) policymaker.c:115 -1
     (nil))
(insn 79 78 80 10 (parallel [
            (set (reg:DI 103 [ D.10894 ])
                (ashift:DI (reg:DI 102 [ D.10894 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:115 -1
     (nil))
(insn 80 79 81 10 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])) policymaker.c:115 -1
     (nil))
(insn 81 80 82 10 (parallel [
            (set (reg/f:DI 104 [ D.10895 ])
                (plus:DI (reg:DI 103 [ D.10894 ])
                    (reg/f:DI 172)))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:115 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])
            (reg:DI 103 [ D.10894 ]))
        (nil)))
(insn 82 81 83 10 (set (reg/f:DI 105 [ D.10896 ])
        (mem/f:DI (reg/f:DI 104 [ D.10895 ]) [0 *_79+0 S8 A64])) policymaker.c:115 -1
     (nil))
(insn 83 82 84 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fad205d9ab0 *.LC3>)) policymaker.c:115 -1
     (nil))
(insn 84 83 85 10 (set (reg:DI 5 di)
        (reg/f:DI 105 [ D.10896 ])) policymaker.c:115 -1
     (nil))
(call_insn/i 85 84 86 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fad20d9c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymaker.c:115 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 86 85 87 10 (set (reg:SI 106 [ D.10897 ])
        (reg:SI 0 ax)) policymaker.c:115 -1
     (nil))
(insn 87 86 88 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 106 [ D.10897 ])
            (const_int 0 [0]))) policymaker.c:115 -1
     (nil))
(jump_insn 88 87 89 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) policymaker.c:115 -1
     (nil)
 -> 93)
(note 89 88 90 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 11 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [0 digest.hashAlg+0 S2 A64])
        (const_int 12 [0xc])) policymaker.c:116 -1
     (nil))
(jump_insn 91 90 92 11 (set (pc)
        (label_ref:DI 276)) 654 {jump}
     (nil)
 -> 276)
(barrier 92 91 93)
(code_label 93 92 94 12 8 "" [1 uses])
(note 94 93 95 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fad205d9b40 *.LC4>)) policymaker.c:119 -1
     (nil))
(call_insn 96 95 97 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fad20da5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymaker.c:119 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 97 96 100 12 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fad205a40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymaker.c:120 -1
     (nil)
    (nil))
(jump_insn 100 97 101 12 (set (pc)
        (label_ref:DI 276)) 654 {jump}
     (nil)
 -> 276)
(barrier 101 100 102)
(code_label 102 101 103 14 4 "" [1 uses])
(note 103 102 104 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fad205d9bd0 *.LC5>)) policymaker.c:124 -1
     (nil))
(call_insn 105 104 106 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fad20da5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymaker.c:124 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 106 105 109 14 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fad205a40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymaker.c:125 -1
     (nil)
    (nil))
(jump_insn 109 106 110 14 (set (pc)
        (label_ref 276)) -1
     (nil)
 -> 276)
(barrier 110 109 111)
(code_label 111 110 112 16 3 "" [1 uses])
(note 112 111 113 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 16 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])) policymaker.c:129 -1
     (nil))
(insn 114 113 115 16 (set (reg:DI 107 [ D.10894 ])
        (sign_extend:DI (reg:SI 173))) policymaker.c:129 -1
     (nil))
(insn 115 114 116 16 (parallel [
            (set (reg:DI 108 [ D.10894 ])
                (ashift:DI (reg:DI 107 [ D.10894 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:129 -1
     (nil))
(insn 116 115 117 16 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])) policymaker.c:129 -1
     (nil))
(insn 117 116 118 16 (parallel [
            (set (reg/f:DI 109 [ D.10895 ])
                (plus:DI (reg:DI 108 [ D.10894 ])
                    (reg/f:DI 174)))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:129 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])
            (reg:DI 108 [ D.10894 ]))
        (nil)))
(insn 118 117 119 16 (set (reg/f:DI 110 [ D.10896 ])
        (mem/f:DI (reg/f:DI 109 [ D.10895 ]) [0 *_89+0 S8 A64])) policymaker.c:129 -1
     (nil))
(insn 119 118 120 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fad205d9c60 *.LC6>)) policymaker.c:129 -1
     (nil))
(insn 120 119 121 16 (set (reg:DI 5 di)
        (reg/f:DI 110 [ D.10896 ])) policymaker.c:129 -1
     (nil))
(call_insn/i 121 120 122 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fad20d9c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymaker.c:129 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 122 121 123 16 (set (reg:SI 111 [ D.10897 ])
        (reg:SI 0 ax)) policymaker.c:129 -1
     (nil))
(insn 123 122 124 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.10897 ])
            (const_int 0 [0]))) policymaker.c:129 -1
     (nil))
(jump_insn 124 123 125 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) policymaker.c:129 -1
     (nil)
 -> 149)
(note 125 124 126 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:130 -1
     (nil))
(insn 127 126 128 17 (set (reg:SI 175)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])) policymaker.c:131 -1
     (nil))
(insn 128 127 129 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 175)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -628 [0xfffffffffffffd8c])) [0 argc+0 S4 A32]))) policymaker.c:131 -1
     (nil))
(jump_insn 129 128 130 17 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) policymaker.c:131 -1
     (nil)
 -> 140)
(note 130 129 131 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 18 (set (reg:SI 176)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])) policymaker.c:132 -1
     (nil))
(insn 132 131 133 18 (set (reg:DI 112 [ D.10894 ])
        (sign_extend:DI (reg:SI 176))) policymaker.c:132 -1
     (nil))
(insn 133 132 134 18 (parallel [
            (set (reg:DI 113 [ D.10894 ])
                (ashift:DI (reg:DI 112 [ D.10894 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:132 -1
     (nil))
(insn 134 133 135 18 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])) policymaker.c:132 -1
     (nil))
(insn 135 134 136 18 (parallel [
            (set (reg/f:DI 114 [ D.10895 ])
                (plus:DI (reg:DI 113 [ D.10894 ])
                    (reg/f:DI 177)))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:132 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])
            (reg:DI 113 [ D.10894 ]))
        (nil)))
(insn 136 135 137 18 (set (reg/f:DI 178)
        (mem/f:DI (reg/f:DI 114 [ D.10895 ]) [0 *_95+0 S8 A64])) policymaker.c:132 -1
     (nil))
(insn 137 136 138 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [0 inFilename+0 S8 A64])
        (reg/f:DI 178)) policymaker.c:132 -1
     (nil))
(jump_insn 138 137 139 18 (set (pc)
        (label_ref:DI 276)) 654 {jump}
     (nil)
 -> 276)
(barrier 139 138 140)
(code_label 140 139 141 19 12 "" [1 uses])
(note 141 140 142 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fad205d9cf0 *.LC7>)) policymaker.c:135 -1
     (nil))
(call_insn 143 142 144 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fad20da5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymaker.c:135 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 144 143 147 19 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fad205a40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymaker.c:136 -1
     (nil)
    (nil))
(jump_insn 147 144 148 19 (set (pc)
        (label_ref 276)) -1
     (nil)
 -> 276)
(barrier 148 147 149)
(code_label 149 148 150 21 11 "" [1 uses])
(note 150 149 151 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 21 (set (reg:SI 179)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])) policymaker.c:139 -1
     (nil))
(insn 152 151 153 21 (set (reg:DI 115 [ D.10894 ])
        (sign_extend:DI (reg:SI 179))) policymaker.c:139 -1
     (nil))
(insn 153 152 154 21 (parallel [
            (set (reg:DI 116 [ D.10894 ])
                (ashift:DI (reg:DI 115 [ D.10894 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:139 -1
     (nil))
(insn 154 153 155 21 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])) policymaker.c:139 -1
     (nil))
(insn 155 154 156 21 (parallel [
            (set (reg/f:DI 117 [ D.10895 ])
                (plus:DI (reg:DI 116 [ D.10894 ])
                    (reg/f:DI 180)))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:139 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])
            (reg:DI 116 [ D.10894 ]))
        (nil)))
(insn 156 155 157 21 (set (reg/f:DI 118 [ D.10896 ])
        (mem/f:DI (reg/f:DI 117 [ D.10895 ]) [0 *_101+0 S8 A64])) policymaker.c:139 -1
     (nil))
(insn 157 156 158 21 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fad205d9d80 *.LC8>)) policymaker.c:139 -1
     (nil))
(insn 158 157 159 21 (set (reg:DI 5 di)
        (reg/f:DI 118 [ D.10896 ])) policymaker.c:139 -1
     (nil))
(call_insn/i 159 158 160 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fad20d9c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymaker.c:139 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 160 159 161 21 (set (reg:SI 119 [ D.10897 ])
        (reg:SI 0 ax)) policymaker.c:139 -1
     (nil))
(insn 161 160 162 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ D.10897 ])
            (const_int 0 [0]))) policymaker.c:139 -1
     (nil))
(jump_insn 162 161 163 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) policymaker.c:139 -1
     (nil)
 -> 187)
(note 163 162 164 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 22 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:140 -1
     (nil))
(insn 165 164 166 22 (set (reg:SI 181)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])) policymaker.c:141 -1
     (nil))
(insn 166 165 167 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 181)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -628 [0xfffffffffffffd8c])) [0 argc+0 S4 A32]))) policymaker.c:141 -1
     (nil))
(jump_insn 167 166 168 22 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) policymaker.c:141 -1
     (nil)
 -> 178)
(note 168 167 169 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 23 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])) policymaker.c:142 -1
     (nil))
(insn 170 169 171 23 (set (reg:DI 120 [ D.10894 ])
        (sign_extend:DI (reg:SI 182))) policymaker.c:142 -1
     (nil))
(insn 171 170 172 23 (parallel [
            (set (reg:DI 121 [ D.10894 ])
                (ashift:DI (reg:DI 120 [ D.10894 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:142 -1
     (nil))
(insn 172 171 173 23 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])) policymaker.c:142 -1
     (nil))
(insn 173 172 174 23 (parallel [
            (set (reg/f:DI 122 [ D.10895 ])
                (plus:DI (reg:DI 121 [ D.10894 ])
                    (reg/f:DI 183)))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:142 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])
            (reg:DI 121 [ D.10894 ]))
        (nil)))
(insn 174 173 175 23 (set (reg/f:DI 184)
        (mem/f:DI (reg/f:DI 122 [ D.10895 ]) [0 *_107+0 S8 A64])) policymaker.c:142 -1
     (nil))
(insn 175 174 176 23 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [0 outFilename+0 S8 A64])
        (reg/f:DI 184)) policymaker.c:142 -1
     (nil))
(jump_insn 176 175 177 23 (set (pc)
        (label_ref:DI 276)) 654 {jump}
     (nil)
 -> 276)
(barrier 177 176 178)
(code_label 178 177 179 24 15 "" [1 uses])
(note 179 178 180 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 24 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fad205d9e10 *.LC9>)) policymaker.c:145 -1
     (nil))
(call_insn 181 180 182 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fad20da5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymaker.c:145 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 182 181 185 24 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fad205a40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymaker.c:146 -1
     (nil)
    (nil))
(jump_insn 185 182 186 24 (set (pc)
        (label_ref 276)) -1
     (nil)
 -> 276)
(barrier 186 185 187)
(code_label 187 186 188 26 14 "" [1 uses])
(note 188 187 189 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 26 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])) policymaker.c:149 -1
     (nil))
(insn 190 189 191 26 (set (reg:DI 123 [ D.10894 ])
        (sign_extend:DI (reg:SI 185))) policymaker.c:149 -1
     (nil))
(insn 191 190 192 26 (parallel [
            (set (reg:DI 124 [ D.10894 ])
                (ashift:DI (reg:DI 123 [ D.10894 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:149 -1
     (nil))
(insn 192 191 193 26 (set (reg/f:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])) policymaker.c:149 -1
     (nil))
(insn 193 192 194 26 (parallel [
            (set (reg/f:DI 125 [ D.10895 ])
                (plus:DI (reg:DI 124 [ D.10894 ])
                    (reg/f:DI 186)))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:149 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])
            (reg:DI 124 [ D.10894 ]))
        (nil)))
(insn 194 193 195 26 (set (reg/f:DI 126 [ D.10896 ])
        (mem/f:DI (reg/f:DI 125 [ D.10895 ]) [0 *_113+0 S8 A64])) policymaker.c:149 -1
     (nil))
(insn 195 194 196 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fad205d9ea0 *.LC10>)) policymaker.c:149 -1
     (nil))
(insn 196 195 197 26 (set (reg:DI 5 di)
        (reg/f:DI 126 [ D.10896 ])) policymaker.c:149 -1
     (nil))
(call_insn/i 197 196 198 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fad20d9c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymaker.c:149 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 198 197 199 26 (set (reg:SI 127 [ D.10897 ])
        (reg:SI 0 ax)) policymaker.c:149 -1
     (nil))
(insn 199 198 200 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 127 [ D.10897 ])
            (const_int 0 [0]))) policymaker.c:149 -1
     (nil))
(jump_insn 200 199 201 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 205)
            (pc))) policymaker.c:149 -1
     (nil)
 -> 205)
(note 201 200 202 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 27 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [0 pr+0 S4 A32])
        (const_int 1 [0x1])) policymaker.c:150 -1
     (nil))
(jump_insn 203 202 204 27 (set (pc)
        (label_ref 276)) -1
     (nil)
 -> 276)
(barrier 204 203 205)
(code_label 205 204 206 28 17 "" [1 uses])
(note 206 205 207 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 28 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])) policymaker.c:152 -1
     (nil))
(insn 208 207 209 28 (set (reg:DI 128 [ D.10894 ])
        (sign_extend:DI (reg:SI 187))) policymaker.c:152 -1
     (nil))
(insn 209 208 210 28 (parallel [
            (set (reg:DI 129 [ D.10894 ])
                (ashift:DI (reg:DI 128 [ D.10894 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:152 -1
     (nil))
(insn 210 209 211 28 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])) policymaker.c:152 -1
     (nil))
(insn 211 210 212 28 (parallel [
            (set (reg/f:DI 130 [ D.10895 ])
                (plus:DI (reg:DI 129 [ D.10894 ])
                    (reg/f:DI 188)))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:152 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])
            (reg:DI 129 [ D.10894 ]))
        (nil)))
(insn 212 211 213 28 (set (reg/f:DI 131 [ D.10896 ])
        (mem/f:DI (reg/f:DI 130 [ D.10895 ]) [0 *_119+0 S8 A64])) policymaker.c:152 -1
     (nil))
(insn 213 212 214 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fad205d9f30 *.LC11>)) policymaker.c:152 -1
     (nil))
(insn 214 213 215 28 (set (reg:DI 5 di)
        (reg/f:DI 131 [ D.10896 ])) policymaker.c:152 -1
     (nil))
(call_insn/i 215 214 216 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fad20d9c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymaker.c:152 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 216 215 217 28 (set (reg:SI 132 [ D.10897 ])
        (reg:SI 0 ax)) policymaker.c:152 -1
     (nil))
(insn 217 216 218 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ D.10897 ])
            (const_int 0 [0]))) policymaker.c:152 -1
     (nil))
(jump_insn 218 217 219 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 223)
            (pc))) policymaker.c:152 -1
     (nil)
 -> 223)
(note 219 218 220 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 29 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -604 [0xfffffffffffffda4])) [0 nz+0 S4 A32])
        (const_int 1 [0x1])) policymaker.c:153 -1
     (nil))
(jump_insn 221 220 222 29 (set (pc)
        (label_ref 276)) -1
     (nil)
 -> 276)
(barrier 222 221 223)
(code_label 223 222 224 30 18 "" [1 uses])
(note 224 223 225 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 225 224 226 30 (set (reg:SI 189)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])) policymaker.c:155 -1
     (nil))
(insn 226 225 227 30 (set (reg:DI 133 [ D.10894 ])
        (sign_extend:DI (reg:SI 189))) policymaker.c:155 -1
     (nil))
(insn 227 226 228 30 (parallel [
            (set (reg:DI 134 [ D.10894 ])
                (ashift:DI (reg:DI 133 [ D.10894 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:155 -1
     (nil))
(insn 228 227 229 30 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])) policymaker.c:155 -1
     (nil))
(insn 229 228 230 30 (parallel [
            (set (reg/f:DI 135 [ D.10895 ])
                (plus:DI (reg:DI 134 [ D.10894 ])
                    (reg/f:DI 190)))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:155 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])
            (reg:DI 134 [ D.10894 ]))
        (nil)))
(insn 230 229 231 30 (set (reg/f:DI 136 [ D.10896 ])
        (mem/f:DI (reg/f:DI 135 [ D.10895 ]) [0 *_125+0 S8 A64])) policymaker.c:155 -1
     (nil))
(insn 231 230 232 30 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fad205d9360 *.LC12>)) policymaker.c:155 -1
     (nil))
(insn 232 231 233 30 (set (reg:DI 5 di)
        (reg/f:DI 136 [ D.10896 ])) policymaker.c:155 -1
     (nil))
(call_insn/i 233 232 234 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fad20d9c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymaker.c:155 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 234 233 235 30 (set (reg:SI 137 [ D.10897 ])
        (reg:SI 0 ax)) policymaker.c:155 -1
     (nil))
(insn 235 234 236 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 137 [ D.10897 ])
            (const_int 0 [0]))) policymaker.c:155 -1
     (nil))
(jump_insn 236 235 237 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 241)
            (pc))) policymaker.c:155 -1
     (nil)
 -> 241)
(note 237 236 238 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(call_insn 238 237 239 31 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fad205a40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymaker.c:156 -1
     (nil)
    (nil))
(jump_insn 239 238 240 31 (set (pc)
        (label_ref 276)) -1
     (nil)
 -> 276)
(barrier 240 239 241)
(code_label 241 240 242 32 19 "" [1 uses])
(note 242 241 243 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 243 242 244 32 (set (reg:SI 191)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])) policymaker.c:158 -1
     (nil))
(insn 244 243 245 32 (set (reg:DI 138 [ D.10894 ])
        (sign_extend:DI (reg:SI 191))) policymaker.c:158 -1
     (nil))
(insn 245 244 246 32 (parallel [
            (set (reg:DI 139 [ D.10894 ])
                (ashift:DI (reg:DI 138 [ D.10894 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:158 -1
     (nil))
(insn 246 245 247 32 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])) policymaker.c:158 -1
     (nil))
(insn 247 246 248 32 (parallel [
            (set (reg/f:DI 140 [ D.10895 ])
                (plus:DI (reg:DI 139 [ D.10894 ])
                    (reg/f:DI 192)))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:158 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])
            (reg:DI 139 [ D.10894 ]))
        (nil)))
(insn 248 247 249 32 (set (reg/f:DI 141 [ D.10896 ])
        (mem/f:DI (reg/f:DI 140 [ D.10895 ]) [0 *_131+0 S8 A64])) policymaker.c:158 -1
     (nil))
(insn 249 248 250 32 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fad205f7000 *.LC13>)) policymaker.c:158 -1
     (nil))
(insn 250 249 251 32 (set (reg:DI 5 di)
        (reg/f:DI 141 [ D.10896 ])) policymaker.c:158 -1
     (nil))
(call_insn/i 251 250 252 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fad20d9c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymaker.c:158 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 252 251 253 32 (set (reg:SI 142 [ D.10897 ])
        (reg:SI 0 ax)) policymaker.c:158 -1
     (nil))
(insn 253 252 254 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 142 [ D.10897 ])
            (const_int 0 [0]))) policymaker.c:158 -1
     (nil))
(jump_insn 254 253 255 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) policymaker.c:158 -1
     (nil)
 -> 263)
(note 255 254 256 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 256 255 257 33 (set (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fad205471b0 verbose>) [0 verbose+0 S4 A32])
        (const_int 1 [0x1])) policymaker.c:159 -1
     (nil))
(insn 257 256 258 33 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fad205f7090 *.LC14>)) policymaker.c:160 -1
     (nil))
(insn 258 257 259 33 (set (reg:SI 4 si)
        (const_int 1 [0x1])) policymaker.c:160 -1
     (nil))
(insn 259 258 260 33 (set (reg:DI 5 di)
        (const_int 0 [0])) policymaker.c:160 -1
     (nil))
(call_insn 260 259 261 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7fad2051cd80 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) policymaker.c:160 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 261 260 262 33 (set (pc)
        (label_ref 276)) -1
     (nil)
 -> 276)
(barrier 262 261 263)
(code_label 263 262 264 34 20 "" [1 uses])
(note 264 263 265 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 34 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])) policymaker.c:163 -1
     (nil))
(insn 266 265 267 34 (set (reg:DI 143 [ D.10894 ])
        (sign_extend:DI (reg:SI 193))) policymaker.c:163 -1
     (nil))
(insn 267 266 268 34 (parallel [
            (set (reg:DI 144 [ D.10894 ])
                (ashift:DI (reg:DI 143 [ D.10894 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:163 -1
     (nil))
(insn 268 267 269 34 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])) policymaker.c:163 -1
     (nil))
(insn 269 268 270 34 (parallel [
            (set (reg/f:DI 145 [ D.10895 ])
                (plus:DI (reg:DI 144 [ D.10894 ])
                    (reg/f:DI 194)))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:163 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -640 [0xfffffffffffffd80])) [0 argv+0 S8 A64])
            (reg:DI 144 [ D.10894 ]))
        (nil)))
(insn 270 269 271 34 (set (reg/f:DI 146 [ D.10896 ])
        (mem/f:DI (reg/f:DI 145 [ D.10895 ]) [0 *_138+0 S8 A64])) policymaker.c:163 -1
     (nil))
(insn 271 270 272 34 (set (reg:DI 4 si)
        (reg/f:DI 146 [ D.10896 ])) policymaker.c:163 -1
     (nil))
(insn 272 271 273 34 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fad205f7120 *.LC15>)) policymaker.c:163 -1
     (nil))
(insn 273 272 274 34 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymaker.c:163 -1
     (nil))
(call_insn 274 273 275 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fad20da2ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policymaker.c:163 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(call_insn 275 274 276 34 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fad205a40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymaker.c:164 -1
     (nil)
    (nil))
(code_label 276 275 277 35 10 "" [13 uses])
(note 277 276 278 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 278 277 279 35 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:105 -1
     (nil))
(code_label 279 278 280 36 2 "" [1 uses])
(note 280 279 281 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 281 280 282 36 (set (reg:SI 195)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -612 [0xfffffffffffffd9c])) [0 i+0 S4 A32])) policymaker.c:105 -1
     (nil))
(insn 282 281 283 36 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 195)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -628 [0xfffffffffffffd8c])) [0 argc+0 S4 A32]))) policymaker.c:105 -1
     (nil))
(jump_insn 283 282 284 36 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 288)
            (pc))) policymaker.c:105 -1
     (nil)
 -> 288)
(note 284 283 286 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 286 284 287 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymaker.c:105 -1
     (nil))
(jump_insn 287 286 288 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) policymaker.c:105 -1
     (nil)
 -> 285)
(code_label 288 287 289 38 21 "" [1 uses])
(note 289 288 290 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -584 [0xfffffffffffffdb8])) [0 inFilename+0 S8 A64])
            (const_int 0 [0]))) policymaker.c:167 -1
     (nil))
(jump_insn 291 290 292 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 296)
            (pc))) policymaker.c:167 -1
     (nil)
 -> 296)
(note 292 291 293 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 39 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fad205f71b0 *.LC16>)) policymaker.c:168 -1
     (nil))
(call_insn 294 293 295 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fad20da5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymaker.c:168 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 295 294 296 39 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fad205a40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymaker.c:169 -1
     (nil)
    (nil))
(code_label 296 295 297 40 23 "" [1 uses])
(note 297 296 298 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 298 297 299 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymaker.c:172 -1
     (nil))
(jump_insn 299 298 300 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 324)
            (pc))) policymaker.c:172 -1
     (nil)
 -> 324)
(note 300 299 301 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 41 (set (reg:DI 196)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [0 inFilename+0 S8 A64])) policymaker.c:173 -1
     (nil))
(insn 302 301 303 41 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fad205f7240 *.LC17>)) policymaker.c:173 -1
     (nil))
(insn 303 302 304 41 (set (reg:DI 5 di)
        (reg:DI 196)) policymaker.c:173 -1
     (nil))
(call_insn 304 303 305 41 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7fad20e8cbd0 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) policymaker.c:173 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 305 304 306 41 (set (reg:DI 197)
        (reg:DI 0 ax)) policymaker.c:173 -1
     (nil))
(insn 306 305 307 41 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [0 inFile+0 S8 A64])
        (reg:DI 197)) policymaker.c:173 -1
     (nil))
(insn 307 306 308 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -568 [0xfffffffffffffdc8])) [0 inFile+0 S8 A64])
            (const_int 0 [0]))) policymaker.c:174 -1
     (nil))
(jump_insn 308 307 309 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 324)
            (pc))) policymaker.c:174 -1
     (nil)
 -> 324)
(note 309 308 310 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 310 309 311 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7fad20b306c0 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) policymaker.c:175 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 311 310 312 42 (set (reg/f:DI 147 [ D.10898 ])
        (reg:DI 0 ax)) policymaker.c:175 -1
     (nil))
(insn 312 311 313 42 (set (reg:SI 148 [ D.10897 ])
        (mem:SI (reg/f:DI 147 [ D.10898 ]) [0 *_147+0 S4 A32])) policymaker.c:175 -1
     (nil))
(insn 313 312 314 42 (set (reg:SI 5 di)
        (reg:SI 148 [ D.10897 ])) policymaker.c:175 -1
     (nil))
(call_insn 314 313 315 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strerror") [flags 0x41]  <function_decl 0x7fad20b165e8 strerror>) [0 strerror S1 A8])
            (const_int 0 [0]))) policymaker.c:175 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 315 314 316 42 (set (reg/f:DI 149 [ D.10896 ])
        (reg:DI 0 ax)) policymaker.c:175 -1
     (nil))
(insn 316 315 317 42 (set (reg:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [0 inFilename+0 S8 A64])) policymaker.c:175 -1
     (nil))
(insn 317 316 318 42 (set (reg:DI 2 cx)
        (reg/f:DI 149 [ D.10896 ])) policymaker.c:175 -1
     (nil))
(insn 318 317 319 42 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fad205f7240 *.LC17>)) policymaker.c:175 -1
     (nil))
(insn 319 318 320 42 (set (reg:DI 4 si)
        (reg:DI 198)) policymaker.c:175 -1
     (nil))
(insn 320 319 321 42 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fad205f72d0 *.LC18>)) policymaker.c:175 -1
     (nil))
(insn 321 320 322 42 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymaker.c:175 -1
     (nil))
(call_insn 322 321 323 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fad20da2ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policymaker.c:175 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 323 322 324 42 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) policymaker.c:176 -1
     (nil))
(code_label 324 323 325 43 24 "" [2 uses])
(note 325 324 326 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymaker.c:179 -1
     (nil))
(jump_insn 327 326 328 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 353)
            (pc))) policymaker.c:179 -1
     (nil)
 -> 353)
(note 328 327 329 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 329 328 330 44 (set (reg:HI 150 [ D.10899 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -544 [0xfffffffffffffde0])) [0 digest.hashAlg+0 S2 A64])) policymaker.c:180 -1
     (nil))
(insn 330 329 331 44 (set (reg:SI 151 [ D.10897 ])
        (zero_extend:SI (reg:HI 150 [ D.10899 ]))) policymaker.c:180 -1
     (nil))
(insn 331 330 332 44 (set (reg:SI 5 di)
        (reg:SI 151 [ D.10897 ])) policymaker.c:180 -1
     (nil))
(call_insn 332 331 333 44 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_GetDigestSize") [flags 0x41]  <function_decl 0x7fad20526ca8 TSS_GetDigestSize>) [0 TSS_GetDigestSize S1 A8])
            (const_int 0 [0]))) policymaker.c:180 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 333 332 334 44 (set (reg:HI 152 [ D.10899 ])
        (reg:HI 0 ax)) policymaker.c:180 -1
     (nil))
(insn 334 333 335 44 (set (reg:SI 199)
        (zero_extend:SI (reg:HI 152 [ D.10899 ]))) policymaker.c:180 -1
     (nil))
(insn 335 334 336 44 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -600 [0xfffffffffffffda8])) [0 sizeInBytes+0 S4 A32])
        (reg:SI 199)) policymaker.c:180 -1
     (nil))
(insn 336 335 337 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -604 [0xfffffffffffffda4])) [0 nz+0 S4 A32])
            (const_int 0 [0]))) policymaker.c:182 -1
     (nil))
(jump_insn 337 336 338 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 350)
            (pc))) policymaker.c:182 -1
     (nil)
 -> 350)
(note 338 337 339 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 45 (set (reg:SI 200)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -600 [0xfffffffffffffda8])) [0 sizeInBytes+0 S4 A32])) policymaker.c:183 -1
     (nil))
(insn 340 339 341 45 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -596 [0xfffffffffffffdac])) [0 startSizeInBytes+0 S4 A32])
        (reg:SI 200)) policymaker.c:183 -1
     (nil))
(insn 341 340 342 45 (set (reg:DI 153 [ D.10894 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -600 [0xfffffffffffffda8])) [0 sizeInBytes+0 S4 A32]))) policymaker.c:184 -1
     (nil))
(insn 342 341 343 45 (parallel [
            (set (reg:DI 201)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -544 [0xfffffffffffffde0])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:184 -1
     (nil))
(insn 343 342 344 45 (parallel [
            (set (reg:DI 202)
                (plus:DI (reg:DI 201)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:184 -1
     (nil))
(insn 344 343 345 45 (set (reg:DI 1 dx)
        (reg:DI 153 [ D.10894 ])) policymaker.c:184 -1
     (nil))
(insn 345 344 346 45 (set (reg:SI 4 si)
        (const_int 0 [0])) policymaker.c:184 -1
     (nil))
(insn 346 345 347 45 (set (reg:DI 5 di)
        (reg:DI 202)) policymaker.c:184 -1
     (nil))
(call_insn 347 346 348 45 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fad20d99438 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) policymaker.c:184 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 348 347 349 45 (set (pc)
        (label_ref 353)) -1
     (nil)
 -> 353)
(barrier 349 348 350)
(code_label 350 349 351 46 26 "" [1 uses])
(note 351 350 352 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 352 351 353 46 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -596 [0xfffffffffffffdac])) [0 startSizeInBytes+0 S4 A32])
        (const_int 0 [0])) policymaker.c:187 -1
     (nil))
(code_label 353 352 354 47 25 "" [3 uses])
(note 354 353 355 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymaker.c:196 -1
     (nil))
(jump_insn 356 355 357 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 366)
            (pc))) policymaker.c:196 -1
     (nil)
 -> 366)
(note 357 356 358 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 48 (set (reg:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [0 inFile+0 S8 A64])) policymaker.c:197 -1
     (nil))
(insn 359 358 360 48 (parallel [
            (set (reg:DI 204)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:197 -1
     (nil))
(insn 360 359 361 48 (set (reg:DI 1 dx)
        (reg:DI 203)) policymaker.c:197 -1
     (nil))
(insn 361 360 362 48 (set (reg:SI 4 si)
        (const_int 256 [0x100])) policymaker.c:197 -1
     (nil))
(insn 362 361 363 48 (set (reg:DI 5 di)
        (reg:DI 204)) policymaker.c:197 -1
     (nil))
(call_insn 363 362 364 48 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7fad20e94e58 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) policymaker.c:197 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 364 363 365 48 (set (reg:DI 205)
        (reg:DI 0 ax)) policymaker.c:197 -1
     (nil))
(insn 365 364 366 48 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [0 prc+0 S8 A64])
        (reg:DI 205)) policymaker.c:197 -1
     (nil))
(code_label 366 365 367 49 27 "" [1 uses])
(note 367 366 368 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymaker.c:200 -1
     (nil))
(jump_insn 369 368 370 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 389)
            (pc))) policymaker.c:200 -1
     (nil)
 -> 389)
(note 370 369 371 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 371 370 372 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -592 [0xfffffffffffffdb0])) [0 prc+0 S8 A64])
            (const_int 0 [0]))) policymaker.c:200 -1
     (nil))
(jump_insn 372 371 373 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 389)
            (pc))) policymaker.c:200 -1
     (nil)
 -> 389)
(note 373 372 374 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 374 373 375 51 (parallel [
            (set (reg:DI 206)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:201 -1
     (nil))
(insn 375 374 376 51 (set (reg:DI 5 di)
        (reg:DI 206)) policymaker.c:201 -1
     (nil))
(call_insn/i 376 375 377 51 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fad20d9c948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) policymaker.c:201 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 377 376 378 51 (set (reg:DI 207)
        (reg:DI 0 ax)) policymaker.c:201 -1
     (nil))
(insn 378 377 379 51 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [0 lineLength+0 S8 A64])
        (reg:DI 207)) policymaker.c:201 -1
     (nil))
(insn 379 378 380 51 (set (reg:DI 208)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [0 lineLength+0 S8 A64])) policymaker.c:202 -1
     (nil))
(insn 380 379 381 51 (parallel [
            (set (reg:DI 154 [ D.10894 ])
                (lshiftrt:DI (reg:DI 208)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:202 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 208)
            (const_int 2 [0x2]))
        (nil)))
(insn 381 380 382 51 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:202 -1
     (nil))
(insn 382 381 383 51 (parallel [
            (set (reg:DI 210)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -400 [0xfffffffffffffe70])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:202 -1
     (nil))
(insn 383 382 384 51 (set (reg:DI 1 dx)
        (reg:DI 154 [ D.10894 ])) policymaker.c:202 -1
     (nil))
(insn 384 383 385 51 (set (reg:DI 4 si)
        (reg:DI 209)) policymaker.c:202 -1
     (nil))
(insn 385 384 386 51 (set (reg:DI 5 di)
        (reg:DI 210)) policymaker.c:202 -1
     (nil))
(call_insn 386 385 387 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Format_FromHexascii") [flags 0x3]  <function_decl 0x7fad205a41b0 Format_FromHexascii>) [0 Format_FromHexascii S1 A8])
            (const_int 0 [0]))) policymaker.c:202 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 387 386 388 51 (set (reg:SI 155 [ D.10897 ])
        (reg:SI 0 ax)) policymaker.c:202 -1
     (nil))
(insn 388 387 389 51 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])
        (reg:SI 155 [ D.10897 ])) policymaker.c:202 -1
     (nil))
(code_label 389 388 390 52 28 "" [2 uses])
(note 390 389 391 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 391 390 392 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymaker.c:206 -1
     (nil))
(jump_insn 392 391 393 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 415)
            (pc))) policymaker.c:206 -1
     (nil)
 -> 415)
(note 393 392 394 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 394 393 395 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -592 [0xfffffffffffffdb0])) [0 prc+0 S8 A64])
            (const_int 0 [0]))) policymaker.c:206 -1
     (nil))
(jump_insn 395 394 396 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 415)
            (pc))) policymaker.c:206 -1
     (nil)
 -> 415)
(note 396 395 397 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 397 396 398 54 (set (reg:DI 211)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -552 [0xfffffffffffffdd8])) [0 lineLength+0 S8 A64])) policymaker.c:207 -1
     (nil))
(insn 398 397 399 54 (parallel [
            (set (reg:DI 156 [ D.10894 ])
                (lshiftrt:DI (reg:DI 211)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:207 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 211)
            (const_int 2 [0x2]))
        (nil)))
(insn 399 398 400 54 (parallel [
            (set (reg:DI 212)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -400 [0xfffffffffffffe70])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:207 -1
     (nil))
(insn 400 399 401 54 (parallel [
            (set (reg:DI 213)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -544 [0xfffffffffffffde0])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:207 -1
     (nil))
(insn 401 400 402 54 (parallel [
            (set (reg:DI 214)
                (plus:DI (reg:DI 213)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:207 -1
     (nil))
(insn 402 401 403 54 (set (reg:SI 215)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -596 [0xfffffffffffffdac])) [0 startSizeInBytes+0 S4 A32])) policymaker.c:207 -1
     (nil))
(insn 403 402 404 54 (parallel [
            (set (reg:DI 216)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -544 [0xfffffffffffffde0])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:207 -1
     (nil))
(insn 404 403 405 54 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:207 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 405 404 406 54 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policymaker.c:207 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 406 405 407 54 (set (reg:SI 38 r9)
        (const_int 0 [0])) policymaker.c:207 -1
     (nil))
(insn 407 406 408 54 (set (reg:DI 37 r8)
        (reg:DI 212)) policymaker.c:207 -1
     (nil))
(insn 408 407 409 54 (set (reg:DI 2 cx)
        (reg:DI 156 [ D.10894 ])) policymaker.c:207 -1
     (nil))
(insn 409 408 410 54 (set (reg:DI 1 dx)
        (reg:DI 214)) policymaker.c:207 -1
     (nil))
(insn 410 409 411 54 (set (reg:SI 4 si)
        (reg:SI 215)) policymaker.c:207 -1
     (nil))
(insn 411 410 412 54 (set (reg:DI 5 di)
        (reg:DI 216)) policymaker.c:207 -1
     (nil))
(insn 412 411 413 54 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymaker.c:207 -1
     (nil))
(call_insn 413 412 414 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Hash_Generate") [flags 0x41]  <function_decl 0x7fad20526e58 TSS_Hash_Generate>) [0 TSS_Hash_Generate S1 A8])
            (const_int 16 [0x10]))) policymaker.c:207 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 414 413 415 54 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:207 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 415 414 416 55 29 "" [2 uses])
(note 416 415 417 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 417 416 418 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymaker.c:212 -1
     (nil))
(jump_insn 418 417 419 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) policymaker.c:212 -1
     (nil)
 -> 434)
(note 419 418 420 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 420 419 421 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -592 [0xfffffffffffffdb0])) [0 prc+0 S8 A64])
            (const_int 0 [0]))) policymaker.c:212 -1
     (nil))
(jump_insn 421 420 422 56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) policymaker.c:212 -1
     (nil)
 -> 434)
(note 422 421 423 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 57 (set (reg:SI 157 [ D.10897 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fad205471b0 verbose>) [0 verbose+0 S4 A32])) policymaker.c:213 -1
     (nil))
(insn 424 423 425 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 157 [ D.10897 ])
            (const_int 0 [0]))) policymaker.c:213 -1
     (nil))
(jump_insn 425 424 426 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) policymaker.c:213 -1
     (nil)
 -> 434)
(note 426 425 427 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 427 426 428 58 (set (reg:SI 217)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -600 [0xfffffffffffffda8])) [0 sizeInBytes+0 S4 A32])) policymaker.c:213 -1
     (nil))
(insn 428 427 429 58 (parallel [
            (set (reg:DI 218)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -544 [0xfffffffffffffde0])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:213 -1
     (nil))
(insn 429 428 430 58 (parallel [
            (set (reg:DI 219)
                (plus:DI (reg:DI 218)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:213 -1
     (nil))
(insn 430 429 431 58 (set (reg:SI 1 dx)
        (reg:SI 217)) policymaker.c:213 -1
     (nil))
(insn 431 430 432 58 (set (reg:DI 4 si)
        (reg:DI 219)) policymaker.c:213 -1
     (nil))
(insn 432 431 433 58 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fad205f7360 *.LC19>)) policymaker.c:213 -1
     (nil))
(call_insn 433 432 434 58 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7fad208ee798 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) policymaker.c:213 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(code_label 434 433 435 59 30 "" [3 uses])
(note 435 434 436 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 436 435 437 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymaker.c:217 -1
     (nil))
(jump_insn 437 436 438 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 441)
            (pc))) policymaker.c:217 -1
     (nil)
 -> 441)
(note 438 437 439 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 439 438 440 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -592 [0xfffffffffffffdb0])) [0 prc+0 S8 A64])
            (const_int 0 [0]))) policymaker.c:217 -1
     (nil))
(jump_insn 440 439 441 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 353)
            (pc))) policymaker.c:217 -1
     (nil)
 -> 353)
(code_label 441 440 442 61 31 "" [1 uses])
(note 442 441 443 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 443 442 444 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymaker.c:219 -1
     (nil))
(jump_insn 444 443 445 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 456)
            (pc))) policymaker.c:219 -1
     (nil)
 -> 456)
(note 445 444 446 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 446 445 447 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -608 [0xfffffffffffffda0])) [0 pr+0 S4 A32])
            (const_int 0 [0]))) policymaker.c:219 -1
     (nil))
(jump_insn 447 446 448 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 456)
            (pc))) policymaker.c:219 -1
     (nil)
 -> 456)
(note 448 447 449 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 449 448 450 63 (set (reg:SI 220)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -600 [0xfffffffffffffda8])) [0 sizeInBytes+0 S4 A32])) policymaker.c:220 -1
     (nil))
(insn 450 449 451 63 (parallel [
            (set (reg:DI 221)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -544 [0xfffffffffffffde0])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:220 -1
     (nil))
(insn 451 450 452 63 (parallel [
            (set (reg:DI 222)
                (plus:DI (reg:DI 221)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:220 -1
     (nil))
(insn 452 451 453 63 (set (reg:SI 1 dx)
        (reg:SI 220)) policymaker.c:220 -1
     (nil))
(insn 453 452 454 63 (set (reg:DI 4 si)
        (reg:DI 222)) policymaker.c:220 -1
     (nil))
(insn 454 453 455 63 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fad205f73f0 *.LC20>)) policymaker.c:220 -1
     (nil))
(call_insn 455 454 456 63 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7fad208ee798 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) policymaker.c:220 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(code_label 456 455 457 64 32 "" [2 uses])
(note 457 456 458 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 458 457 459 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymaker.c:223 -1
     (nil))
(jump_insn 459 458 460 64 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 487)
            (pc))) policymaker.c:223 -1
     (nil)
 -> 487)
(note 460 459 461 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 461 460 462 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -576 [0xfffffffffffffdc0])) [0 outFilename+0 S8 A64])
            (const_int 0 [0]))) policymaker.c:223 -1
     (nil))
(jump_insn 462 461 463 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 487)
            (pc))) policymaker.c:223 -1
     (nil)
 -> 487)
(note 463 462 464 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 464 463 465 66 (set (reg:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [0 outFilename+0 S8 A64])) policymaker.c:224 -1
     (nil))
(insn 465 464 466 66 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fad205f7480 *.LC21>)) policymaker.c:224 -1
     (nil))
(insn 466 465 467 66 (set (reg:DI 5 di)
        (reg:DI 223)) policymaker.c:224 -1
     (nil))
(call_insn 467 466 468 66 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7fad20e8cbd0 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) policymaker.c:224 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 468 467 469 66 (set (reg:DI 224)
        (reg:DI 0 ax)) policymaker.c:224 -1
     (nil))
(insn 469 468 470 66 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [0 outFile+0 S8 A64])
        (reg:DI 224)) policymaker.c:224 -1
     (nil))
(insn 470 469 471 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])) [0 outFile+0 S8 A64])
            (const_int 0 [0]))) policymaker.c:225 -1
     (nil))
(jump_insn 471 470 472 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 487)
            (pc))) policymaker.c:225 -1
     (nil)
 -> 487)
(note 472 471 473 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 473 472 474 67 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7fad20b306c0 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) policymaker.c:226 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 474 473 475 67 (set (reg/f:DI 158 [ D.10898 ])
        (reg:DI 0 ax)) policymaker.c:226 -1
     (nil))
(insn 475 474 476 67 (set (reg:SI 159 [ D.10897 ])
        (mem:SI (reg/f:DI 158 [ D.10898 ]) [0 *_181+0 S4 A32])) policymaker.c:226 -1
     (nil))
(insn 476 475 477 67 (set (reg:SI 5 di)
        (reg:SI 159 [ D.10897 ])) policymaker.c:226 -1
     (nil))
(call_insn 477 476 478 67 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strerror") [flags 0x41]  <function_decl 0x7fad20b165e8 strerror>) [0 strerror S1 A8])
            (const_int 0 [0]))) policymaker.c:226 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 478 477 479 67 (set (reg/f:DI 160 [ D.10896 ])
        (reg:DI 0 ax)) policymaker.c:226 -1
     (nil))
(insn 479 478 480 67 (set (reg:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -576 [0xfffffffffffffdc0])) [0 outFilename+0 S8 A64])) policymaker.c:226 -1
     (nil))
(insn 480 479 481 67 (set (reg:DI 2 cx)
        (reg/f:DI 160 [ D.10896 ])) policymaker.c:226 -1
     (nil))
(insn 481 480 482 67 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fad205f7510 *.LC22>)) policymaker.c:226 -1
     (nil))
(insn 482 481 483 67 (set (reg:DI 4 si)
        (reg:DI 225)) policymaker.c:226 -1
     (nil))
(insn 483 482 484 67 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fad205f72d0 *.LC18>)) policymaker.c:226 -1
     (nil))
(insn 484 483 485 67 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymaker.c:226 -1
     (nil))
(call_insn 485 484 486 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fad20da2ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policymaker.c:226 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 486 485 487 67 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) policymaker.c:227 -1
     (nil))
(code_label 487 486 488 68 33 "" [3 uses])
(note 488 487 489 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 489 488 490 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymaker.c:230 -1
     (nil))
(jump_insn 490 489 491 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 504)
            (pc))) policymaker.c:230 -1
     (nil)
 -> 504)
(note 491 490 492 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -576 [0xfffffffffffffdc0])) [0 outFilename+0 S8 A64])
            (const_int 0 [0]))) policymaker.c:230 -1
     (nil))
(jump_insn 493 492 494 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 504)
            (pc))) policymaker.c:230 -1
     (nil)
 -> 504)
(note 494 493 495 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 495 494 496 70 (set (reg:DI 161 [ D.10894 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -600 [0xfffffffffffffda8])) [0 sizeInBytes+0 S4 A32]))) policymaker.c:231 -1
     (nil))
(insn 496 495 497 70 (set (reg:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [0 outFile+0 S8 A64])) policymaker.c:231 -1
     (nil))
(insn 497 496 498 70 (parallel [
            (set (reg:DI 227)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -544 [0xfffffffffffffde0])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:231 -1
     (nil))
(insn 498 497 499 70 (parallel [
            (set (reg:DI 228)
                (plus:DI (reg:DI 227)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:231 -1
     (nil))
(insn 499 498 500 70 (set (reg:DI 2 cx)
        (reg:DI 226)) policymaker.c:231 -1
     (nil))
(insn 500 499 501 70 (set (reg:DI 1 dx)
        (reg:DI 161 [ D.10894 ])) policymaker.c:231 -1
     (nil))
(insn 501 500 502 70 (set (reg:DI 4 si)
        (const_int 1 [0x1])) policymaker.c:231 -1
     (nil))
(insn 502 501 503 70 (set (reg:DI 5 di)
        (reg:DI 228)) policymaker.c:231 -1
     (nil))
(call_insn 503 502 504 70 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7fad20da2948 fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) policymaker.c:231 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(code_label 504 503 505 71 34 "" [2 uses])
(note 505 504 506 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 506 505 507 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -568 [0xfffffffffffffdc8])) [0 inFile+0 S8 A64])
            (const_int 0 [0]))) policymaker.c:233 -1
     (nil))
(jump_insn 507 506 508 71 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 512)
            (pc))) policymaker.c:233 -1
     (nil)
 -> 512)
(note 508 507 509 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 509 508 510 72 (set (reg:DI 229)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [0 inFile+0 S8 A64])) policymaker.c:234 -1
     (nil))
(insn 510 509 511 72 (set (reg:DI 5 di)
        (reg:DI 229)) policymaker.c:234 -1
     (nil))
(call_insn 511 510 512 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7fad20e8c948 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) policymaker.c:234 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 512 511 513 73 35 "" [1 uses])
(note 513 512 514 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 514 513 515 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])) [0 outFile+0 S8 A64])
            (const_int 0 [0]))) policymaker.c:236 -1
     (nil))
(jump_insn 515 514 516 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 520)
            (pc))) policymaker.c:236 -1
     (nil)
 -> 520)
(note 516 515 517 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 517 516 518 74 (set (reg:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [0 outFile+0 S8 A64])) policymaker.c:237 -1
     (nil))
(insn 518 517 519 74 (set (reg:DI 5 di)
        (reg:DI 230)) policymaker.c:237 -1
     (nil))
(call_insn 519 518 520 74 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7fad20e8c948 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) policymaker.c:237 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 520 519 521 75 36 "" [1 uses])
(note 521 520 522 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 522 521 523 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymaker.c:239 -1
     (nil))
(jump_insn 523 522 524 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 526)
            (pc))) policymaker.c:239 -1
     (nil)
 -> 526)
(note 524 523 525 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 525 524 526 76 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) policymaker.c:240 -1
     (nil))
(code_label 526 525 527 77 37 "" [1 uses])
(note 527 526 528 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 528 527 531 77 (set (reg:SI 162 [ D.10897 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -616 [0xfffffffffffffd98])) [0 rc+0 S4 A32])) policymaker.c:242 -1
     (nil))
(insn 531 528 535 77 (set (reg:SI 163 [ <retval> ])
        (reg:SI 162 [ D.10897 ])) -1
     (nil))
(insn 535 531 536 77 (set (reg/i:SI 0 ax)
        (reg:SI 163 [ <retval> ])) policymaker.c:243 -1
     (nil))
(insn 536 535 537 77 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.10900+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) policymaker.c:243 -1
     (nil))
(jump_insn 537 536 543 77 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 540)
            (pc))) policymaker.c:243 -1
     (nil)
 -> 540)
(note 543 537 538 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(call_insn 538 543 539 80 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fad205e6798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) policymaker.c:243 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 539 538 540)
(code_label 540 539 544 81 39 "" [1 uses])
(note 544 540 541 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 541 544 0 81 (use (reg/i:SI 0 ax)) policymaker.c:243 -1
     (nil))

;; Function Format_FromHexascii (Format_FromHexascii, funcdef_no=3, decl_uid=10634, cgraph_uid=3, symbol_order=4)

Partition 1: size 8 align 8
	i_2
Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Removing jump 41.
Merging block 9 into block 7...
Merged blocks 7 and 9.
Merged 7 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 binary+0 S8 A64])
        (reg:DI 5 di [ binary ])) policymaker.c:253 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 string+0 S8 A64])
        (reg:DI 4 si [ string ])) policymaker.c:253 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 length+0 S8 A64])
        (reg:DI 1 dx [ length ])) policymaker.c:253 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) policymaker.c:254 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
        (const_int 0 [0])) policymaker.c:257 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (label_ref 26)) policymaker.c:257 -1
     (nil)
 -> 26)
(barrier 11 10 31)
(code_label 31 11 12 4 43 "" [1 uses])
(note 12 31 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 92)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])) policymaker.c:259 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg:DI 87 [ D.10926 ])
                (ashift:DI (reg:DI 92)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:259 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 string+0 S8 A64])) policymaker.c:258 -1
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg/f:DI 88 [ D.10927 ])
                (plus:DI (reg:DI 87 [ D.10926 ])
                    (reg/f:DI 93)))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:258 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 string+0 S8 A64])
            (reg:DI 87 [ D.10926 ]))
        (nil)))
(insn 17 16 18 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 binary+0 S8 A64])) policymaker.c:258 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 95)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])) policymaker.c:258 -1
     (nil))
(insn 19 18 20 4 (parallel [
            (set (reg/f:DI 89 [ D.10928 ])
                (plus:DI (reg/f:DI 94)
                    (reg:DI 95)))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:258 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 binary+0 S8 A64])
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64]))
        (nil)))
(insn 20 19 21 4 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.10927 ])) policymaker.c:258 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.10928 ])) policymaker.c:258 -1
     (nil))
(call_insn 22 21 23 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Format_ByteFromHexascii") [flags 0x3]  <function_decl 0x7fad205a4288 Format_ByteFromHexascii>) [0 Format_ByteFromHexascii S1 A8])
            (const_int 0 [0]))) policymaker.c:258 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 23 22 24 4 (set (reg:SI 96)
        (reg:SI 0 ax)) policymaker.c:258 -1
     (nil))
(insn 24 23 25 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 96)) policymaker.c:258 -1
     (nil))
(insn 25 24 26 4 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:257 -1
     (nil))
(code_label 26 25 27 5 41 "" [1 uses])
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymaker.c:257 -1
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) policymaker.c:257 -1
     (nil)
 -> 35)
(note 30 29 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 30 33 6 (set (reg:DI 97)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])) policymaker.c:257 -1
     (nil))
(insn 33 32 34 6 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 97)
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 length+0 S8 A64]))) policymaker.c:257 -1
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) policymaker.c:257 -1
     (nil)
 -> 31)
(code_label 35 34 36 7 42 "" [1 uses])
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 40 7 (set (reg:SI 90 [ D.10929 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) policymaker.c:262 -1
     (nil))
(insn 40 37 44 7 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.10929 ])) policymaker.c:262 -1
     (nil))
(insn 44 40 45 7 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) policymaker.c:263 -1
     (nil))
(insn 45 44 0 7 (use (reg/i:SI 0 ax)) policymaker.c:263 -1
     (nil))

;; Function Format_ByteFromHexascii (Format_ByteFromHexascii, funcdef_no=4, decl_uid=10637, cgraph_uid=4, symbol_order=5)

Partition 1: size 8 align 8
	i_3
Partition 0: size 4 align 4
	rc_1
Partition 2: size 1 align 1
	c_16

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Removing jump 98.
Merging block 19 into block 17...
Merged blocks 17 and 19.
Merged 17 and 19 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])
        (reg:DI 5 di [ byte ])) policymaker.c:270 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 string+0 S8 A64])
        (reg:DI 4 si [ string ])) policymaker.c:270 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) policymaker.c:271 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymaker.c:274 -1
     (nil))
(insn 9 8 10 2 (set (mem:QI (reg/f:DI 105) [0 *byte_8(D)+0 S1 A8])
        (const_int 0 [0])) policymaker.c:274 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
        (const_int 0 [0])) policymaker.c:276 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (label_ref 84)) policymaker.c:276 -1
     (nil)
 -> 84)
(barrier 12 11 89)
(code_label 89 12 13 4 52 "" [1 uses])
(note 13 89 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymaker.c:277 -1
     (nil))
(insn 15 14 16 4 (set (reg:QI 87 [ D.10930 ])
        (mem:QI (reg/f:DI 106) [0 *byte_8(D)+0 S1 A8])) policymaker.c:277 -1
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg:QI 88 [ D.10930 ])
                (ashift:QI (reg:QI 87 [ D.10930 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:277 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymaker.c:277 -1
     (nil))
(insn 18 17 19 4 (set (mem:QI (reg/f:DI 107) [0 *byte_8(D)+0 S1 A8])
        (reg:QI 88 [ D.10930 ])) policymaker.c:277 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 string+0 S8 A64])) policymaker.c:278 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 109)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])) policymaker.c:278 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/f:DI 89 [ D.10931 ])
                (plus:DI (reg/f:DI 108)
                    (reg:DI 109)))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:278 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 string+0 S8 A64])
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64]))
        (nil)))
(insn 22 21 23 4 (set (reg:QI 110)
        (mem:QI (reg/f:DI 89 [ D.10931 ]) [0 *_15+0 S1 A8])) policymaker.c:278 -1
     (nil))
(insn 23 22 24 4 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
        (reg:QI 110)) policymaker.c:278 -1
     (nil))
(insn 24 23 25 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
            (const_int 47 [0x2f]))) policymaker.c:280 -1
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) policymaker.c:280 -1
     (nil)
 -> 39)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
            (const_int 57 [0x39]))) policymaker.c:280 -1
     (nil))
(jump_insn 28 27 29 5 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) policymaker.c:280 -1
     (nil)
 -> 39)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymaker.c:281 -1
     (nil))
(insn 31 30 32 6 (set (reg:QI 90 [ D.10930 ])
        (mem:QI (reg/f:DI 111) [0 *byte_8(D)+0 S1 A8])) policymaker.c:281 -1
     (nil))
(insn 32 31 33 6 (set (reg:QI 91 [ D.10930 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])) policymaker.c:281 -1
     (nil))
(insn 33 32 34 6 (parallel [
            (set (reg:QI 92 [ D.10930 ])
                (plus:QI (reg:QI 90 [ D.10930 ])
                    (reg:QI 91 [ D.10930 ])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:281 -1
     (nil))
(insn 34 33 35 6 (parallel [
            (set (reg:QI 93 [ D.10930 ])
                (plus:QI (reg:QI 92 [ D.10930 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:281 -1
     (nil))
(insn 35 34 36 6 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymaker.c:281 -1
     (nil))
(insn 36 35 37 6 (set (mem:QI (reg/f:DI 112) [0 *byte_8(D)+0 S1 A8])
        (reg:QI 93 [ D.10930 ])) policymaker.c:281 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (label_ref 81)) policymaker.c:281 -1
     (nil)
 -> 81)
(barrier 38 37 39)
(code_label 39 38 40 7 47 "" [2 uses])
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
            (const_int 96 [0x60]))) policymaker.c:283 -1
     (nil))
(jump_insn 42 41 43 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) policymaker.c:283 -1
     (nil)
 -> 56)
(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
            (const_int 102 [0x66]))) policymaker.c:283 -1
     (nil))
(jump_insn 45 44 46 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) policymaker.c:283 -1
     (nil)
 -> 56)
(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 9 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymaker.c:284 -1
     (nil))
(insn 48 47 49 9 (set (reg:QI 94 [ D.10930 ])
        (mem:QI (reg/f:DI 113) [0 *byte_8(D)+0 S1 A8])) policymaker.c:284 -1
     (nil))
(insn 49 48 50 9 (set (reg:QI 95 [ D.10930 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])) policymaker.c:284 -1
     (nil))
(insn 50 49 51 9 (parallel [
            (set (reg:QI 96 [ D.10930 ])
                (plus:QI (reg:QI 94 [ D.10930 ])
                    (reg:QI 95 [ D.10930 ])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:284 -1
     (nil))
(insn 51 50 52 9 (parallel [
            (set (reg:QI 97 [ D.10930 ])
                (plus:QI (reg:QI 96 [ D.10930 ])
                    (const_int -87 [0xffffffffffffffa9])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:284 -1
     (nil))
(insn 52 51 53 9 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymaker.c:284 -1
     (nil))
(insn 53 52 54 9 (set (mem:QI (reg/f:DI 114) [0 *byte_8(D)+0 S1 A8])
        (reg:QI 97 [ D.10930 ])) policymaker.c:284 -1
     (nil))
(jump_insn 54 53 55 9 (set (pc)
        (label_ref 81)) policymaker.c:284 -1
     (nil)
 -> 81)
(barrier 55 54 56)
(code_label 56 55 57 10 49 "" [2 uses])
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
            (const_int 64 [0x40]))) policymaker.c:286 -1
     (nil))
(jump_insn 59 58 60 10 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) policymaker.c:286 -1
     (nil)
 -> 73)
(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
            (const_int 70 [0x46]))) policymaker.c:286 -1
     (nil))
(jump_insn 62 61 63 11 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) policymaker.c:286 -1
     (nil)
 -> 73)
(note 63 62 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 12 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymaker.c:287 -1
     (nil))
(insn 65 64 66 12 (set (reg:QI 98 [ D.10930 ])
        (mem:QI (reg/f:DI 115) [0 *byte_8(D)+0 S1 A8])) policymaker.c:287 -1
     (nil))
(insn 66 65 67 12 (set (reg:QI 99 [ D.10930 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])) policymaker.c:287 -1
     (nil))
(insn 67 66 68 12 (parallel [
            (set (reg:QI 100 [ D.10930 ])
                (plus:QI (reg:QI 98 [ D.10930 ])
                    (reg:QI 99 [ D.10930 ])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:287 -1
     (nil))
(insn 68 67 69 12 (parallel [
            (set (reg:QI 101 [ D.10930 ])
                (plus:QI (reg:QI 100 [ D.10930 ])
                    (const_int -55 [0xffffffffffffffc9])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:287 -1
     (nil))
(insn 69 68 70 12 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymaker.c:287 -1
     (nil))
(insn 70 69 71 12 (set (mem:QI (reg/f:DI 116) [0 *byte_8(D)+0 S1 A8])
        (reg:QI 101 [ D.10930 ])) policymaker.c:287 -1
     (nil))
(jump_insn 71 70 72 12 (set (pc)
        (label_ref 81)) policymaker.c:287 -1
     (nil)
 -> 81)
(barrier 72 71 73)
(code_label 73 72 74 13 50 "" [2 uses])
(note 74 73 75 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 13 (set (reg:SI 102 [ D.10932 ])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8]))) policymaker.c:290 -1
     (nil))
(insn 76 75 77 13 (set (reg:SI 4 si)
        (reg:SI 102 [ D.10932 ])) policymaker.c:290 -1
     (nil))
(insn 77 76 78 13 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fad20614990 *.LC23>)) policymaker.c:290 -1
     (nil))
(insn 78 77 79 13 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymaker.c:290 -1
     (nil))
(call_insn 79 78 80 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fad20da2ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policymaker.c:290 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 80 79 81 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) policymaker.c:292 -1
     (nil))
(code_label 81 80 82 14 48 "" [3 uses])
(note 82 81 83 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 14 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymaker.c:276 -1
     (nil))
(code_label 84 83 85 15 46 "" [1 uses])
(note 85 84 86 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymaker.c:276 -1
     (nil))
(jump_insn 87 86 88 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) policymaker.c:276 -1
     (nil)
 -> 92)
(note 88 87 90 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 90 88 91 16 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
            (const_int 1 [0x1]))) policymaker.c:276 -1
     (nil))
(jump_insn 91 90 92 16 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) policymaker.c:276 -1
     (nil)
 -> 89)
(code_label 92 91 93 17 51 "" [1 uses])
(note 93 92 94 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 97 17 (set (reg:SI 103 [ D.10932 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) policymaker.c:295 -1
     (nil))
(insn 97 94 101 17 (set (reg:SI 104 [ <retval> ])
        (reg:SI 103 [ D.10932 ])) policymaker.c:295 -1
     (nil))
(insn 101 97 102 17 (set (reg/i:SI 0 ax)
        (reg:SI 104 [ <retval> ])) policymaker.c:296 -1
     (nil))
(insn 102 101 0 17 (use (reg/i:SI 0 ax)) policymaker.c:296 -1
     (nil))

;; Function printUsage (printUsage, funcdef_no=5, decl_uid=10630, cgraph_uid=5, symbol_order=6)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fad2061f480 *.LC24>)) policymaker.c:301 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fad20da5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymaker.c:301 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policymaker.c:302 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fad20da5000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policymaker.c:302 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fad2061f510 *.LC25>)) policymaker.c:303 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fad20da5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymaker.c:303 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fad2061f5a0 *.LC26>)) policymaker.c:304 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fad20da5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymaker.c:304 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fad2061f630 *.LC27>)) policymaker.c:305 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fad20da5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymaker.c:305 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fad2061f6c0 *.LC28>)) policymaker.c:306 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fad20da5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymaker.c:306 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fad2061f750 *.LC29>)) policymaker.c:307 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fad20da5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymaker.c:307 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policymaker.c:308 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fad20da5000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policymaker.c:308 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) policymaker.c:309 -1
     (nil))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fad20db8000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) policymaker.c:309 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 23 22 0)
