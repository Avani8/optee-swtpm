
;; Function main (main, funcdef_no=2, decl_uid=7855, cgraph_uid=2, symbol_order=3)

Partition 13: size 2760 align 16
	out
Partition 16: size 2496 align 16
	tpmsAttest
Partition 12: size 168 align 16
	in
Partition 7: size 8 align 8
	qualifyingDataFilename_29
Partition 6: size 8 align 8
	attestInfoFilename_26
Partition 5: size 8 align 8
	signatureFilename_23
Partition 4: size 8 align 8
	keyPassword_20
Partition 27: size 8 align 8
	num	tmpBuffer
Partition 26: size 8 align 8
	submsg	tmpSize
Partition 25: size 8 align 8
	msg
Partition 11: size 8 align 8
	tssContext
Partition 10: size 4 align 4
	match_405
Partition 9: size 4 align 4
	rc1_392
Partition 8: size 4 align 4
	useRsa_32
Partition 1: size 4 align 4
	i_10
Partition 0: size 4 align 4
	rc_1
Partition 22: size 4 align 4
	sessionAttributes2
Partition 21: size 4 align 4
	sessionHandle2
Partition 20: size 4 align 4
	sessionAttributes1
Partition 19: size 4 align 4
	sessionHandle1
Partition 18: size 4 align 4
	sessionAttributes0
Partition 17: size 4 align 4
	sessionHandle0
Partition 15: size 4 align 4
	pcrHandle
Partition 14: size 4 align 4
	signHandle
Partition 3: size 2 align 2
	palg_16
Partition 2: size 2 align 2
	halg_12

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; Generating RTL for gimple basic block 110

;; Generating RTL for gimple basic block 111

;; Generating RTL for gimple basic block 112

;; Generating RTL for gimple basic block 113

;; Generating RTL for gimple basic block 114

;; Generating RTL for gimple basic block 115

;; Generating RTL for gimple basic block 116

;; Generating RTL for gimple basic block 117

;; Generating RTL for gimple basic block 118

;; Generating RTL for gimple basic block 119

;; Generating RTL for gimple basic block 120

;; Generating RTL for gimple basic block 121

;; Generating RTL for gimple basic block 122

;; Generating RTL for gimple basic block 123

;; Generating RTL for gimple basic block 124

;; Generating RTL for gimple basic block 125

;; Generating RTL for gimple basic block 126

;; Generating RTL for gimple basic block 127

;; Generating RTL for gimple basic block 128

;; Generating RTL for gimple basic block 129

;; Generating RTL for gimple basic block 130

;; Generating RTL for gimple basic block 131

;; Generating RTL for gimple basic block 132

;; Generating RTL for gimple basic block 133

;; Generating RTL for gimple basic block 134

;; Generating RTL for gimple basic block 135

;; Generating RTL for gimple basic block 136

;; Generating RTL for gimple basic block 137

;; Generating RTL for gimple basic block 138

;; Generating RTL for gimple basic block 139

;; Generating RTL for gimple basic block 140

;; Generating RTL for gimple basic block 141

;; Generating RTL for gimple basic block 142

;; Generating RTL for gimple basic block 143

;; Generating RTL for gimple basic block 144

;; Generating RTL for gimple basic block 145

;; Generating RTL for gimple basic block 146

;; Generating RTL for gimple basic block 147

;; Generating RTL for gimple basic block 148


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 83 from 9 to 106.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Redirecting jump 103 from 11 to 106.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Redirecting jump 146 from 16 to 106.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.
Redirecting jump 184 from 21 to 106.
Merging block 21 into block 20...
Merged blocks 20 and 21.
Merged 20 and 21 without moving.
Redirecting jump 229 from 31 to 106.
Redirecting jump 247 from 31 to 106.
Redirecting jump 265 from 31 to 106.
Merging block 31 into block 30...
Merged blocks 30 and 31.
Merged 30 and 31 without moving.
Redirecting jump 274 from 33 to 106.
Merging block 33 into block 32...
Merged blocks 32 and 33.
Merged 32 and 33 without moving.
Redirecting jump 319 from 43 to 106.
Redirecting jump 337 from 43 to 106.
Redirecting jump 355 from 43 to 106.
Merging block 43 into block 42...
Merged blocks 42 and 43.
Merged 42 and 43 without moving.
Redirecting jump 364 from 45 to 106.
Merging block 45 into block 44...
Merged blocks 44 and 45.
Merged 44 and 45 without moving.
Redirecting jump 409 from 53 to 106.
Redirecting jump 427 from 53 to 106.
Merging block 53 into block 52...
Merged blocks 52 and 53.
Merged 52 and 53 without moving.
Redirecting jump 436 from 55 to 106.
Merging block 55 into block 54...
Merged blocks 54 and 55.
Merged 54 and 55 without moving.
Redirecting jump 474 from 60 to 106.
Merging block 60 into block 59...
Merged blocks 59 and 60.
Merged 59 and 60 without moving.
Redirecting jump 512 from 65 to 106.
Merging block 65 into block 64...
Merged blocks 64 and 65.
Merged 64 and 65 without moving.
Redirecting jump 550 from 70 to 106.
Merging block 70 into block 69...
Merged blocks 69 and 70.
Merged 69 and 70 without moving.
Edge 76->78 redirected to 106
Merging block 78 into block 77...
Merged blocks 77 and 78.
Merged 77 and 78 without moving.
Redirecting jump 628 from 80 to 106.
Merging block 80 into block 79...
Merged blocks 79 and 80.
Merged 79 and 80 without moving.
Edge 86->88 redirected to 106
Merging block 88 into block 87...
Merged blocks 87 and 88.
Merged 87 and 88 without moving.
Redirecting jump 706 from 90 to 106.
Merging block 90 into block 89...
Merged blocks 89 and 90.
Merged 89 and 90 without moving.
Edge 96->98 redirected to 106
Merging block 98 into block 97...
Merged blocks 97 and 98.
Merged 97 and 98 without moving.
Redirecting jump 784 from 100 to 106.
Merging block 100 into block 99...
Merged blocks 99 and 100.
Merged 99 and 100 without moving.
Edge 129->131 redirected to 132
Merging block 131 into block 130...
Merged blocks 130 and 131.
Merged 130 and 131 without moving.
Edge 144->146 redirected to 148
Merging block 146 into block 145...
Merged blocks 145 and 146.
Merged 145 and 146 without moving.
Merging block 149 into block 148...
Merged blocks 148 and 149.
Merged 148 and 149 without moving.
Removing jump 1127.
Merging block 150 into block 148...
Merged blocks 148 and 150.
Merged 148 and 150 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5572 [0xffffffffffffea3c])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) quote.c:61 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) quote.c:61 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.8275+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) quote.c:61 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
        (const_int 0 [0])) quote.c:62 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5504 [0xffffffffffffea80])) [0 tssContext+0 S8 A64])
        (const_int 0 [0])) quote.c:64 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5556 [0xffffffffffffea4c])) [0 signHandle+0 S4 A32])
        (const_int 0 [0])) quote.c:67 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5560 [0xffffffffffffea48])) [0 halg+0 S2 A16])
        (const_int 11 [0xb])) quote.c:68 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5558 [0xffffffffffffea4a])) [0 palg+0 S2 A16])
        (const_int 11 [0xb])) quote.c:69 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5472 [0xffffffffffffeaa0])) [0 keyPassword+0 S8 A64])
        (const_int 0 [0])) quote.c:70 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5552 [0xffffffffffffea50])) [0 pcrHandle+0 S4 A64])
        (const_int 24 [0x18])) quote.c:71 -1
     (nil))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5464 [0xffffffffffffeaa8])) [0 signatureFilename+0 S8 A64])
        (const_int 0 [0])) quote.c:72 -1
     (nil))
(insn 16 15 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5456 [0xffffffffffffeab0])) [0 attestInfoFilename+0 S8 A64])
        (const_int 0 [0])) quote.c:73 -1
     (nil))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5448 [0xffffffffffffeab8])) [0 qualifyingDataFilename+0 S8 A64])
        (const_int 0 [0])) quote.c:74 -1
     (nil))
(insn 18 17 19 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5516 [0xffffffffffffea74])) [0 useRsa+0 S4 A32])
        (const_int 1 [0x1])) quote.c:75 -1
     (nil))
(insn 19 18 20 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5548 [0xffffffffffffea54])) [0 sessionHandle0+0 S4 A32])
        (const_int 1073741833 [0x40000009])) quote.c:77 -1
     (nil))
(insn 20 19 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5544 [0xffffffffffffea58])) [0 sessionAttributes0+0 S4 A64])
        (const_int 0 [0])) quote.c:78 -1
     (nil))
(insn 21 20 22 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5540 [0xffffffffffffea5c])) [0 sessionHandle1+0 S4 A32])
        (const_int 1073741831 [0x40000007])) quote.c:79 -1
     (nil))
(insn 22 21 23 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5536 [0xffffffffffffea60])) [0 sessionAttributes1+0 S4 A64])
        (const_int 0 [0])) quote.c:80 -1
     (nil))
(insn 23 22 24 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5532 [0xffffffffffffea64])) [0 sessionHandle2+0 S4 A32])
        (const_int 1073741831 [0x40000007])) quote.c:81 -1
     (nil))
(insn 24 23 25 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5528 [0xffffffffffffea68])) [0 sessionAttributes2+0 S4 A64])
        (const_int 0 [0])) quote.c:82 -1
     (nil))
(insn 25 24 26 2 (set (reg/f:DI 87 [ D.8263 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7fa3d87745a0 stdout>) [0 stdout+0 S8 A64])) quote.c:84 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) quote.c:84 -1
     (nil))
(insn 27 26 28 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) quote.c:84 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 4 si)
        (const_int 0 [0])) quote.c:84 -1
     (nil))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.8263 ])) quote.c:84 -1
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("setvbuf") [flags 0x41]  <function_decl 0x7fa3d87b41b0 setvbuf>) [0 setvbuf S1 A8])
            (const_int 0 [0]))) quote.c:84 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 31 30 32 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fa3d83b3240 *.LC0>)) quote.c:85 -1
     (nil))
(insn 32 31 33 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) quote.c:85 -1
     (nil))
(insn 33 32 34 2 (set (reg:DI 5 di)
        (const_int 0 [0])) quote.c:85 -1
     (nil))
(call_insn 34 33 35 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7fa3d8628000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) quote.c:85 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 35 34 36 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5290 [0xffffffffffffeb56])) [0 in.PCRselect.pcrSelections[0].sizeofSelect+0 S1 A16])
        (const_int 3 [0x3])) quote.c:87 -1
     (nil))
(insn 36 35 37 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5289 [0xffffffffffffeb57])) [0 in.PCRselect.pcrSelections[0].pcrSelect+0 S1 A8])
        (const_int 0 [0])) quote.c:88 -1
     (nil))
(insn 37 36 38 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5288 [0xffffffffffffeb58])) [0 in.PCRselect.pcrSelections[0].pcrSelect+1 S1 A64])
        (const_int 0 [0])) quote.c:89 -1
     (nil))
(insn 38 37 39 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5287 [0xffffffffffffeb59])) [0 in.PCRselect.pcrSelections[0].pcrSelect+2 S1 A8])
        (const_int 0 [0])) quote.c:90 -1
     (nil))
(insn 39 38 40 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) quote.c:92 -1
     (nil))
(jump_insn 40 39 41 2 (set (pc)
        (label_ref 851)) quote.c:92 -1
     (nil)
 -> 851)
(barrier 41 40 857)
(code_label 857 41 42 4 65 "" [1 uses])
(note 42 857 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 4 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:93 -1
     (nil))
(insn 44 43 45 4 (set (reg:DI 88 [ D.8264 ])
        (sign_extend:DI (reg:SI 284))) quote.c:93 -1
     (nil))
(insn 45 44 46 4 (parallel [
            (set (reg:DI 89 [ D.8264 ])
                (ashift:DI (reg:DI 88 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:93 -1
     (nil))
(insn 46 45 47 4 (set (reg/f:DI 285)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:93 -1
     (nil))
(insn 47 46 48 4 (parallel [
            (set (reg/f:DI 90 [ D.8265 ])
                (plus:DI (reg:DI 89 [ D.8264 ])
                    (reg/f:DI 285)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:93 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 89 [ D.8264 ]))
        (nil)))
(insn 48 47 49 4 (set (reg/f:DI 91 [ D.8266 ])
        (mem/f:DI (reg/f:DI 90 [ D.8265 ]) [0 *_105+0 S8 A64])) quote.c:93 -1
     (nil))
(insn 49 48 50 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa3d83b32d0 *.LC1>)) quote.c:93 -1
     (nil))
(insn 50 49 51 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.8266 ])) quote.c:93 -1
     (nil))
(call_insn/i 51 50 52 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:93 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 52 51 53 4 (set (reg:SI 92 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:93 -1
     (nil))
(insn 53 52 54 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.8267 ])
            (const_int 0 [0]))) quote.c:93 -1
     (nil))
(jump_insn 54 53 55 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) quote.c:93 -1
     (nil)
 -> 114)
(note 55 54 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:94 -1
     (nil))
(insn 57 56 58 5 (set (reg:SI 286)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:95 -1
     (nil))
(insn 58 57 59 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 286)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5572 [0xffffffffffffea3c])) [0 argc+0 S4 A32]))) quote.c:95 -1
     (nil))
(jump_insn 59 58 60 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) quote.c:95 -1
     (nil)
 -> 105)
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 6 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:96 -1
     (nil))
(insn 62 61 63 6 (set (reg:DI 93 [ D.8264 ])
        (sign_extend:DI (reg:SI 287))) quote.c:96 -1
     (nil))
(insn 63 62 64 6 (parallel [
            (set (reg:DI 94 [ D.8264 ])
                (ashift:DI (reg:DI 93 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:96 -1
     (nil))
(insn 64 63 65 6 (set (reg/f:DI 288)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:96 -1
     (nil))
(insn 65 64 66 6 (parallel [
            (set (reg/f:DI 95 [ D.8265 ])
                (plus:DI (reg:DI 94 [ D.8264 ])
                    (reg/f:DI 288)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:96 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 94 [ D.8264 ]))
        (nil)))
(insn 66 65 67 6 (set (reg/f:DI 96 [ D.8266 ])
        (mem/f:DI (reg/f:DI 95 [ D.8265 ]) [0 *_111+0 S8 A64])) quote.c:96 -1
     (nil))
(insn 67 66 68 6 (parallel [
            (set (reg:DI 289)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5552 [0xffffffffffffea50])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:96 -1
     (nil))
(insn 68 67 69 6 (set (reg:DI 1 dx)
        (reg:DI 289)) quote.c:96 -1
     (nil))
(insn 69 68 70 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa3d83b3360 *.LC2>)) quote.c:96 -1
     (nil))
(insn 70 69 71 6 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.8266 ])) quote.c:96 -1
     (nil))
(insn 71 70 72 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) quote.c:96 -1
     (nil))
(call_insn 72 71 73 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fa3d86c5ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) quote.c:96 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 73 72 74 6 (set (reg:SI 97 [ D.8268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5552 [0xffffffffffffea50])) [0 pcrHandle+0 S4 A64])) quote.c:97 -1
     (nil))
(insn 74 73 75 6 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 97 [ D.8268 ])
            (const_int 23 [0x17]))) quote.c:97 -1
     (nil))
(jump_insn 75 74 76 6 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) quote.c:97 -1
     (nil)
 -> 85)
(note 76 75 77 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 7 (set (reg:SI 98 [ D.8268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5552 [0xffffffffffffea50])) [0 pcrHandle+0 S4 A64])) quote.c:98 -1
     (nil))
(insn 78 77 79 7 (set (reg:SI 4 si)
        (reg:SI 98 [ D.8268 ])) quote.c:98 -1
     (nil))
(insn 79 78 80 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fa3d83b33f0 *.LC3>)) quote.c:98 -1
     (nil))
(insn 80 79 81 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) quote.c:98 -1
     (nil))
(call_insn 81 80 82 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa3d86c2ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) quote.c:98 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(call_insn 82 81 83 7 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:99 -1
     (nil)
    (nil))
(jump_insn 83 82 84 7 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 84 83 85)
(code_label 85 84 86 8 5 "" [1 uses])
(note 86 85 87 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 8 (set (reg:SI 99 [ D.8268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5552 [0xffffffffffffea50])) [0 pcrHandle+0 S4 A64])) quote.c:103 -1
     (nil))
(insn 88 87 89 8 (parallel [
            (set (reg:SI 100 [ D.8268 ])
                (lshiftrt:SI (reg:SI 99 [ D.8268 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:103 -1
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 99 [ D.8268 ])
            (const_int 8 [0x8]))
        (nil)))
(insn 89 88 90 8 (set (reg:DI 290)
        (zero_extend:DI (reg:SI 100 [ D.8268 ]))) quote.c:103 -1
     (nil))
(insn 90 89 91 8 (set (reg:QI 101 [ D.8269 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (reg:DI 290))
                (const_int -5289 [0xffffffffffffeb57])) [0 in.PCRselect.pcrSelections[0].pcrSelect S1 A8])) quote.c:103 -1
     (nil))
(insn 91 90 92 8 (set (reg:QI 102 [ D.8270 ])
        (reg:QI 101 [ D.8269 ])) quote.c:103 -1
     (nil))
(insn 92 91 93 8 (set (reg:SI 103 [ D.8268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5552 [0xffffffffffffea50])) [0 pcrHandle+0 S4 A64])) quote.c:103 -1
     (nil))
(insn 93 92 94 8 (parallel [
            (set (reg:SI 104 [ D.8268 ])
                (and:SI (reg:SI 103 [ D.8268 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:103 -1
     (nil))
(insn 94 93 95 8 (set (reg:SI 291)
        (const_int 1 [0x1])) quote.c:103 -1
     (nil))
(insn 95 94 96 8 (parallel [
            (set (reg:SI 105 [ D.8267 ])
                (ashift:SI (reg:SI 291)
                    (subreg:QI (reg:SI 104 [ D.8268 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:103 -1
     (nil))
(insn 96 95 97 8 (set (reg:QI 106 [ D.8270 ])
        (subreg:QI (reg:SI 105 [ D.8267 ]) 0)) quote.c:103 -1
     (nil))
(insn 97 96 98 8 (parallel [
            (set (reg:QI 107 [ D.8270 ])
                (ior:QI (reg:QI 102 [ D.8270 ])
                    (reg:QI 106 [ D.8270 ])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:103 -1
     (nil))
(insn 98 97 99 8 (set (reg:QI 108 [ D.8269 ])
        (reg:QI 107 [ D.8270 ])) quote.c:103 -1
     (nil))
(insn 99 98 100 8 (set (reg:DI 292)
        (zero_extend:DI (reg:SI 100 [ D.8268 ]))) quote.c:103 -1
     (nil))
(insn 100 99 103 8 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (reg:DI 292))
                (const_int -5289 [0xffffffffffffeb57])) [0 in.PCRselect.pcrSelections[0].pcrSelect S1 A8])
        (reg:QI 108 [ D.8269 ])) quote.c:103 -1
     (nil))
(jump_insn 103 100 104 8 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 104 103 105)
(code_label 105 104 106 10 4 "" [1 uses])
(note 106 105 107 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fa3d83b3480 *.LC4>)) quote.c:107 -1
     (nil))
(call_insn 108 107 109 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:107 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 109 108 112 10 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:108 -1
     (nil)
    (nil))
(jump_insn 112 109 113 10 (set (pc)
        (label_ref 848)) -1
     (nil)
 -> 848)
(barrier 113 112 114)
(code_label 114 113 115 12 3 "" [1 uses])
(note 115 114 116 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 12 (set (reg:SI 293)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:111 -1
     (nil))
(insn 117 116 118 12 (set (reg:DI 109 [ D.8264 ])
        (sign_extend:DI (reg:SI 293))) quote.c:111 -1
     (nil))
(insn 118 117 119 12 (parallel [
            (set (reg:DI 110 [ D.8264 ])
                (ashift:DI (reg:DI 109 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:111 -1
     (nil))
(insn 119 118 120 12 (set (reg/f:DI 294)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:111 -1
     (nil))
(insn 120 119 121 12 (parallel [
            (set (reg/f:DI 111 [ D.8265 ])
                (plus:DI (reg:DI 110 [ D.8264 ])
                    (reg/f:DI 294)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:111 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 110 [ D.8264 ]))
        (nil)))
(insn 121 120 122 12 (set (reg/f:DI 112 [ D.8266 ])
        (mem/f:DI (reg/f:DI 111 [ D.8265 ]) [0 *_133+0 S8 A64])) quote.c:111 -1
     (nil))
(insn 122 121 123 12 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fa3d83b3510 *.LC5>)) quote.c:111 -1
     (nil))
(insn 123 122 124 12 (set (reg:DI 5 di)
        (reg/f:DI 112 [ D.8266 ])) quote.c:111 -1
     (nil))
(call_insn/i 124 123 125 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:111 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 125 124 126 12 (set (reg:SI 113 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:111 -1
     (nil))
(insn 126 125 127 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ D.8267 ])
            (const_int 0 [0]))) quote.c:111 -1
     (nil))
(jump_insn 127 126 128 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) quote.c:111 -1
     (nil)
 -> 157)
(note 128 127 129 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:112 -1
     (nil))
(insn 130 129 131 13 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:113 -1
     (nil))
(insn 131 130 132 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 295)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5572 [0xffffffffffffea3c])) [0 argc+0 S4 A32]))) quote.c:113 -1
     (nil))
(jump_insn 132 131 133 13 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) quote.c:113 -1
     (nil)
 -> 148)
(note 133 132 134 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 14 (set (reg:SI 296)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:114 -1
     (nil))
(insn 135 134 136 14 (set (reg:DI 114 [ D.8264 ])
        (sign_extend:DI (reg:SI 296))) quote.c:114 -1
     (nil))
(insn 136 135 137 14 (parallel [
            (set (reg:DI 115 [ D.8264 ])
                (ashift:DI (reg:DI 114 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:114 -1
     (nil))
(insn 137 136 138 14 (set (reg/f:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:114 -1
     (nil))
(insn 138 137 139 14 (parallel [
            (set (reg/f:DI 116 [ D.8265 ])
                (plus:DI (reg:DI 115 [ D.8264 ])
                    (reg/f:DI 297)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:114 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 115 [ D.8264 ]))
        (nil)))
(insn 139 138 140 14 (set (reg/f:DI 117 [ D.8266 ])
        (mem/f:DI (reg/f:DI 116 [ D.8265 ]) [0 *_139+0 S8 A64])) quote.c:114 -1
     (nil))
(insn 140 139 141 14 (parallel [
            (set (reg:DI 298)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5556 [0xffffffffffffea4c])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:114 -1
     (nil))
(insn 141 140 142 14 (set (reg:DI 1 dx)
        (reg:DI 298)) quote.c:114 -1
     (nil))
(insn 142 141 143 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa3d83b35a0 *.LC6>)) quote.c:114 -1
     (nil))
(insn 143 142 144 14 (set (reg:DI 5 di)
        (reg/f:DI 117 [ D.8266 ])) quote.c:114 -1
     (nil))
(insn 144 143 145 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) quote.c:114 -1
     (nil))
(call_insn 145 144 146 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fa3d86c5ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) quote.c:114 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 146 145 147 14 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 147 146 148)
(code_label 148 147 149 15 10 "" [1 uses])
(note 149 148 150 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fa3d83b3630 *.LC7>)) quote.c:117 -1
     (nil))
(call_insn 151 150 152 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:117 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 152 151 155 15 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:118 -1
     (nil)
    (nil))
(jump_insn 155 152 156 15 (set (pc)
        (label_ref 848)) -1
     (nil)
 -> 848)
(barrier 156 155 157)
(code_label 157 156 158 17 9 "" [1 uses])
(note 158 157 159 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 17 (set (reg:SI 299)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:121 -1
     (nil))
(insn 160 159 161 17 (set (reg:DI 118 [ D.8264 ])
        (sign_extend:DI (reg:SI 299))) quote.c:121 -1
     (nil))
(insn 161 160 162 17 (parallel [
            (set (reg:DI 119 [ D.8264 ])
                (ashift:DI (reg:DI 118 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:121 -1
     (nil))
(insn 162 161 163 17 (set (reg/f:DI 300)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:121 -1
     (nil))
(insn 163 162 164 17 (parallel [
            (set (reg/f:DI 120 [ D.8265 ])
                (plus:DI (reg:DI 119 [ D.8264 ])
                    (reg/f:DI 300)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:121 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 119 [ D.8264 ]))
        (nil)))
(insn 164 163 165 17 (set (reg/f:DI 121 [ D.8266 ])
        (mem/f:DI (reg/f:DI 120 [ D.8265 ]) [0 *_146+0 S8 A64])) quote.c:121 -1
     (nil))
(insn 165 164 166 17 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fa3d83b36c0 *.LC8>)) quote.c:121 -1
     (nil))
(insn 166 165 167 17 (set (reg:DI 5 di)
        (reg/f:DI 121 [ D.8266 ])) quote.c:121 -1
     (nil))
(call_insn/i 167 166 168 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:121 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 168 167 169 17 (set (reg:SI 122 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:121 -1
     (nil))
(insn 169 168 170 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.8267 ])
            (const_int 0 [0]))) quote.c:121 -1
     (nil))
(jump_insn 170 169 171 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 195)
            (pc))) quote.c:121 -1
     (nil)
 -> 195)
(note 171 170 172 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:122 -1
     (nil))
(insn 173 172 174 18 (set (reg:SI 301)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:123 -1
     (nil))
(insn 174 173 175 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 301)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5572 [0xffffffffffffea3c])) [0 argc+0 S4 A32]))) quote.c:123 -1
     (nil))
(jump_insn 175 174 176 18 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 186)
            (pc))) quote.c:123 -1
     (nil)
 -> 186)
(note 176 175 177 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 19 (set (reg:SI 302)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:124 -1
     (nil))
(insn 178 177 179 19 (set (reg:DI 123 [ D.8264 ])
        (sign_extend:DI (reg:SI 302))) quote.c:124 -1
     (nil))
(insn 179 178 180 19 (parallel [
            (set (reg:DI 124 [ D.8264 ])
                (ashift:DI (reg:DI 123 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:124 -1
     (nil))
(insn 180 179 181 19 (set (reg/f:DI 303)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:124 -1
     (nil))
(insn 181 180 182 19 (parallel [
            (set (reg/f:DI 125 [ D.8265 ])
                (plus:DI (reg:DI 124 [ D.8264 ])
                    (reg/f:DI 303)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:124 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 124 [ D.8264 ]))
        (nil)))
(insn 182 181 183 19 (set (reg/f:DI 304)
        (mem/f:DI (reg/f:DI 125 [ D.8265 ]) [0 *_152+0 S8 A64])) quote.c:124 -1
     (nil))
(insn 183 182 184 19 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5472 [0xffffffffffffeaa0])) [0 keyPassword+0 S8 A64])
        (reg/f:DI 304)) quote.c:124 -1
     (nil))
(jump_insn 184 183 185 19 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 185 184 186)
(code_label 186 185 187 20 13 "" [1 uses])
(note 187 186 188 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 20 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fa3d83b3750 *.LC9>)) quote.c:127 -1
     (nil))
(call_insn 189 188 190 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:127 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 190 189 193 20 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:128 -1
     (nil)
    (nil))
(jump_insn 193 190 194 20 (set (pc)
        (label_ref 848)) -1
     (nil)
 -> 848)
(barrier 194 193 195)
(code_label 195 194 196 22 12 "" [1 uses])
(note 196 195 197 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 22 (set (reg:SI 305)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:131 -1
     (nil))
(insn 198 197 199 22 (set (reg:DI 126 [ D.8264 ])
        (sign_extend:DI (reg:SI 305))) quote.c:131 -1
     (nil))
(insn 199 198 200 22 (parallel [
            (set (reg:DI 127 [ D.8264 ])
                (ashift:DI (reg:DI 126 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:131 -1
     (nil))
(insn 200 199 201 22 (set (reg/f:DI 306)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:131 -1
     (nil))
(insn 201 200 202 22 (parallel [
            (set (reg/f:DI 128 [ D.8265 ])
                (plus:DI (reg:DI 127 [ D.8264 ])
                    (reg/f:DI 306)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:131 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 127 [ D.8264 ]))
        (nil)))
(insn 202 201 203 22 (set (reg/f:DI 129 [ D.8266 ])
        (mem/f:DI (reg/f:DI 128 [ D.8265 ]) [0 *_158+0 S8 A64])) quote.c:131 -1
     (nil))
(insn 203 202 204 22 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa3d83b37e0 *.LC10>)) quote.c:131 -1
     (nil))
(insn 204 203 205 22 (set (reg:DI 5 di)
        (reg/f:DI 129 [ D.8266 ])) quote.c:131 -1
     (nil))
(call_insn/i 205 204 206 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:131 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 206 205 207 22 (set (reg:SI 130 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:131 -1
     (nil))
(insn 207 206 208 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ D.8267 ])
            (const_int 0 [0]))) quote.c:131 -1
     (nil))
(jump_insn 208 207 209 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) quote.c:131 -1
     (nil)
 -> 285)
(note 209 208 210 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:132 -1
     (nil))
(insn 211 210 212 23 (set (reg:SI 307)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:133 -1
     (nil))
(insn 212 211 213 23 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 307)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5572 [0xffffffffffffea3c])) [0 argc+0 S4 A32]))) quote.c:133 -1
     (nil))
(jump_insn 213 212 214 23 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 276)
            (pc))) quote.c:133 -1
     (nil)
 -> 276)
(note 214 213 215 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 215 214 216 24 (set (reg:SI 308)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:134 -1
     (nil))
(insn 216 215 217 24 (set (reg:DI 131 [ D.8264 ])
        (sign_extend:DI (reg:SI 308))) quote.c:134 -1
     (nil))
(insn 217 216 218 24 (parallel [
            (set (reg:DI 132 [ D.8264 ])
                (ashift:DI (reg:DI 131 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:134 -1
     (nil))
(insn 218 217 219 24 (set (reg/f:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:134 -1
     (nil))
(insn 219 218 220 24 (parallel [
            (set (reg/f:DI 133 [ D.8265 ])
                (plus:DI (reg:DI 132 [ D.8264 ])
                    (reg/f:DI 309)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:134 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 132 [ D.8264 ]))
        (nil)))
(insn 220 219 221 24 (set (reg/f:DI 134 [ D.8266 ])
        (mem/f:DI (reg/f:DI 133 [ D.8265 ]) [0 *_164+0 S8 A64])) quote.c:134 -1
     (nil))
(insn 221 220 222 24 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fa3d83b3870 *.LC11>)) quote.c:134 -1
     (nil))
(insn 222 221 223 24 (set (reg:DI 5 di)
        (reg/f:DI 134 [ D.8266 ])) quote.c:134 -1
     (nil))
(call_insn/i 223 222 224 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:134 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 224 223 225 24 (set (reg:SI 135 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:134 -1
     (nil))
(insn 225 224 226 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135 [ D.8267 ])
            (const_int 0 [0]))) quote.c:134 -1
     (nil))
(jump_insn 226 225 227 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 231)
            (pc))) quote.c:134 -1
     (nil)
 -> 231)
(note 227 226 228 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 25 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5560 [0xffffffffffffea48])) [0 halg+0 S2 A16])
        (const_int 4 [0x4])) quote.c:135 -1
     (nil))
(jump_insn 229 228 230 25 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 230 229 231)
(code_label 231 230 232 26 17 "" [1 uses])
(note 232 231 233 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 234 26 (set (reg:SI 310)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:137 -1
     (nil))
(insn 234 233 235 26 (set (reg:DI 136 [ D.8264 ])
        (sign_extend:DI (reg:SI 310))) quote.c:137 -1
     (nil))
(insn 235 234 236 26 (parallel [
            (set (reg:DI 137 [ D.8264 ])
                (ashift:DI (reg:DI 136 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:137 -1
     (nil))
(insn 236 235 237 26 (set (reg/f:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:137 -1
     (nil))
(insn 237 236 238 26 (parallel [
            (set (reg/f:DI 138 [ D.8265 ])
                (plus:DI (reg:DI 137 [ D.8264 ])
                    (reg/f:DI 311)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:137 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 137 [ D.8264 ]))
        (nil)))
(insn 238 237 239 26 (set (reg/f:DI 139 [ D.8266 ])
        (mem/f:DI (reg/f:DI 138 [ D.8265 ]) [0 *_170+0 S8 A64])) quote.c:137 -1
     (nil))
(insn 239 238 240 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fa3d83b3900 *.LC12>)) quote.c:137 -1
     (nil))
(insn 240 239 241 26 (set (reg:DI 5 di)
        (reg/f:DI 139 [ D.8266 ])) quote.c:137 -1
     (nil))
(call_insn/i 241 240 242 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:137 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 242 241 243 26 (set (reg:SI 140 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:137 -1
     (nil))
(insn 243 242 244 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 140 [ D.8267 ])
            (const_int 0 [0]))) quote.c:137 -1
     (nil))
(jump_insn 244 243 245 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 249)
            (pc))) quote.c:137 -1
     (nil)
 -> 249)
(note 245 244 246 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 247 27 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5560 [0xffffffffffffea48])) [0 halg+0 S2 A16])
        (const_int 11 [0xb])) quote.c:138 -1
     (nil))
(jump_insn 247 246 248 27 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 248 247 249)
(code_label 249 248 250 28 19 "" [1 uses])
(note 250 249 251 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 252 28 (set (reg:SI 312)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:140 -1
     (nil))
(insn 252 251 253 28 (set (reg:DI 141 [ D.8264 ])
        (sign_extend:DI (reg:SI 312))) quote.c:140 -1
     (nil))
(insn 253 252 254 28 (parallel [
            (set (reg:DI 142 [ D.8264 ])
                (ashift:DI (reg:DI 141 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:140 -1
     (nil))
(insn 254 253 255 28 (set (reg/f:DI 313)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:140 -1
     (nil))
(insn 255 254 256 28 (parallel [
            (set (reg/f:DI 143 [ D.8265 ])
                (plus:DI (reg:DI 142 [ D.8264 ])
                    (reg/f:DI 313)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:140 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 142 [ D.8264 ]))
        (nil)))
(insn 256 255 257 28 (set (reg/f:DI 144 [ D.8266 ])
        (mem/f:DI (reg/f:DI 143 [ D.8265 ]) [0 *_176+0 S8 A64])) quote.c:140 -1
     (nil))
(insn 257 256 258 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fa3d83b3990 *.LC13>)) quote.c:140 -1
     (nil))
(insn 258 257 259 28 (set (reg:DI 5 di)
        (reg/f:DI 144 [ D.8266 ])) quote.c:140 -1
     (nil))
(call_insn/i 259 258 260 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:140 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 260 259 261 28 (set (reg:SI 145 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:140 -1
     (nil))
(insn 261 260 262 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 145 [ D.8267 ])
            (const_int 0 [0]))) quote.c:140 -1
     (nil))
(jump_insn 262 261 263 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 267)
            (pc))) quote.c:140 -1
     (nil)
 -> 267)
(note 263 262 264 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 29 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5560 [0xffffffffffffea48])) [0 halg+0 S2 A16])
        (const_int 12 [0xc])) quote.c:141 -1
     (nil))
(jump_insn 265 264 266 29 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 266 265 267)
(code_label 267 266 268 30 20 "" [1 uses])
(note 268 267 269 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 269 268 270 30 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fa3d83b3a20 *.LC14>)) quote.c:144 -1
     (nil))
(call_insn 270 269 271 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:144 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 271 270 274 30 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:145 -1
     (nil)
    (nil))
(jump_insn 274 271 275 30 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 275 274 276)
(code_label 276 275 277 32 16 "" [1 uses])
(note 277 276 278 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 278 277 279 32 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fa3d83b3ab0 *.LC15>)) quote.c:149 -1
     (nil))
(call_insn 279 278 280 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:149 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 280 279 283 32 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:150 -1
     (nil)
    (nil))
(jump_insn 283 280 284 32 (set (pc)
        (label_ref 848)) -1
     (nil)
 -> 848)
(barrier 284 283 285)
(code_label 285 284 286 34 15 "" [1 uses])
(note 286 285 287 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 34 (set (reg:SI 314)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:153 -1
     (nil))
(insn 288 287 289 34 (set (reg:DI 146 [ D.8264 ])
        (sign_extend:DI (reg:SI 314))) quote.c:153 -1
     (nil))
(insn 289 288 290 34 (parallel [
            (set (reg:DI 147 [ D.8264 ])
                (ashift:DI (reg:DI 146 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:153 -1
     (nil))
(insn 290 289 291 34 (set (reg/f:DI 315)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:153 -1
     (nil))
(insn 291 290 292 34 (parallel [
            (set (reg/f:DI 148 [ D.8265 ])
                (plus:DI (reg:DI 147 [ D.8264 ])
                    (reg/f:DI 315)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:153 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 147 [ D.8264 ]))
        (nil)))
(insn 292 291 293 34 (set (reg/f:DI 149 [ D.8266 ])
        (mem/f:DI (reg/f:DI 148 [ D.8265 ]) [0 *_186+0 S8 A64])) quote.c:153 -1
     (nil))
(insn 293 292 294 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fa3d83b3b40 *.LC16>)) quote.c:153 -1
     (nil))
(insn 294 293 295 34 (set (reg:DI 5 di)
        (reg/f:DI 149 [ D.8266 ])) quote.c:153 -1
     (nil))
(call_insn/i 295 294 296 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:153 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 296 295 297 34 (set (reg:SI 150 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:153 -1
     (nil))
(insn 297 296 298 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 150 [ D.8267 ])
            (const_int 0 [0]))) quote.c:153 -1
     (nil))
(jump_insn 298 297 299 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 375)
            (pc))) quote.c:153 -1
     (nil)
 -> 375)
(note 299 298 300 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 301 35 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:154 -1
     (nil))
(insn 301 300 302 35 (set (reg:SI 316)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:155 -1
     (nil))
(insn 302 301 303 35 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 316)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5572 [0xffffffffffffea3c])) [0 argc+0 S4 A32]))) quote.c:155 -1
     (nil))
(jump_insn 303 302 304 35 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 366)
            (pc))) quote.c:155 -1
     (nil)
 -> 366)
(note 304 303 305 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 36 (set (reg:SI 317)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:156 -1
     (nil))
(insn 306 305 307 36 (set (reg:DI 151 [ D.8264 ])
        (sign_extend:DI (reg:SI 317))) quote.c:156 -1
     (nil))
(insn 307 306 308 36 (parallel [
            (set (reg:DI 152 [ D.8264 ])
                (ashift:DI (reg:DI 151 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:156 -1
     (nil))
(insn 308 307 309 36 (set (reg/f:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:156 -1
     (nil))
(insn 309 308 310 36 (parallel [
            (set (reg/f:DI 153 [ D.8265 ])
                (plus:DI (reg:DI 152 [ D.8264 ])
                    (reg/f:DI 318)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:156 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 152 [ D.8264 ]))
        (nil)))
(insn 310 309 311 36 (set (reg/f:DI 154 [ D.8266 ])
        (mem/f:DI (reg/f:DI 153 [ D.8265 ]) [0 *_192+0 S8 A64])) quote.c:156 -1
     (nil))
(insn 311 310 312 36 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fa3d83b3870 *.LC11>)) quote.c:156 -1
     (nil))
(insn 312 311 313 36 (set (reg:DI 5 di)
        (reg/f:DI 154 [ D.8266 ])) quote.c:156 -1
     (nil))
(call_insn/i 313 312 314 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:156 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 314 313 315 36 (set (reg:SI 155 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:156 -1
     (nil))
(insn 315 314 316 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 155 [ D.8267 ])
            (const_int 0 [0]))) quote.c:156 -1
     (nil))
(jump_insn 316 315 317 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 321)
            (pc))) quote.c:156 -1
     (nil)
 -> 321)
(note 317 316 318 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 318 317 319 37 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5558 [0xffffffffffffea4a])) [0 palg+0 S2 A16])
        (const_int 4 [0x4])) quote.c:157 -1
     (nil))
(jump_insn 319 318 320 37 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 320 319 321)
(code_label 321 320 322 38 24 "" [1 uses])
(note 322 321 323 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 323 322 324 38 (set (reg:SI 319)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:159 -1
     (nil))
(insn 324 323 325 38 (set (reg:DI 156 [ D.8264 ])
        (sign_extend:DI (reg:SI 319))) quote.c:159 -1
     (nil))
(insn 325 324 326 38 (parallel [
            (set (reg:DI 157 [ D.8264 ])
                (ashift:DI (reg:DI 156 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:159 -1
     (nil))
(insn 326 325 327 38 (set (reg/f:DI 320)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:159 -1
     (nil))
(insn 327 326 328 38 (parallel [
            (set (reg/f:DI 158 [ D.8265 ])
                (plus:DI (reg:DI 157 [ D.8264 ])
                    (reg/f:DI 320)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:159 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 157 [ D.8264 ]))
        (nil)))
(insn 328 327 329 38 (set (reg/f:DI 159 [ D.8266 ])
        (mem/f:DI (reg/f:DI 158 [ D.8265 ]) [0 *_198+0 S8 A64])) quote.c:159 -1
     (nil))
(insn 329 328 330 38 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fa3d83b3900 *.LC12>)) quote.c:159 -1
     (nil))
(insn 330 329 331 38 (set (reg:DI 5 di)
        (reg/f:DI 159 [ D.8266 ])) quote.c:159 -1
     (nil))
(call_insn/i 331 330 332 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:159 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 332 331 333 38 (set (reg:SI 160 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:159 -1
     (nil))
(insn 333 332 334 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ D.8267 ])
            (const_int 0 [0]))) quote.c:159 -1
     (nil))
(jump_insn 334 333 335 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 339)
            (pc))) quote.c:159 -1
     (nil)
 -> 339)
(note 335 334 336 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 336 335 337 39 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5558 [0xffffffffffffea4a])) [0 palg+0 S2 A16])
        (const_int 11 [0xb])) quote.c:160 -1
     (nil))
(jump_insn 337 336 338 39 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 338 337 339)
(code_label 339 338 340 40 26 "" [1 uses])
(note 340 339 341 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 341 340 342 40 (set (reg:SI 321)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:162 -1
     (nil))
(insn 342 341 343 40 (set (reg:DI 161 [ D.8264 ])
        (sign_extend:DI (reg:SI 321))) quote.c:162 -1
     (nil))
(insn 343 342 344 40 (parallel [
            (set (reg:DI 162 [ D.8264 ])
                (ashift:DI (reg:DI 161 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:162 -1
     (nil))
(insn 344 343 345 40 (set (reg/f:DI 322)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:162 -1
     (nil))
(insn 345 344 346 40 (parallel [
            (set (reg/f:DI 163 [ D.8265 ])
                (plus:DI (reg:DI 162 [ D.8264 ])
                    (reg/f:DI 322)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:162 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 162 [ D.8264 ]))
        (nil)))
(insn 346 345 347 40 (set (reg/f:DI 164 [ D.8266 ])
        (mem/f:DI (reg/f:DI 163 [ D.8265 ]) [0 *_204+0 S8 A64])) quote.c:162 -1
     (nil))
(insn 347 346 348 40 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fa3d83b3990 *.LC13>)) quote.c:162 -1
     (nil))
(insn 348 347 349 40 (set (reg:DI 5 di)
        (reg/f:DI 164 [ D.8266 ])) quote.c:162 -1
     (nil))
(call_insn/i 349 348 350 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:162 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 350 349 351 40 (set (reg:SI 165 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:162 -1
     (nil))
(insn 351 350 352 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 165 [ D.8267 ])
            (const_int 0 [0]))) quote.c:162 -1
     (nil))
(jump_insn 352 351 353 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 357)
            (pc))) quote.c:162 -1
     (nil)
 -> 357)
(note 353 352 354 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 354 353 355 41 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5558 [0xffffffffffffea4a])) [0 palg+0 S2 A16])
        (const_int 12 [0xc])) quote.c:163 -1
     (nil))
(jump_insn 355 354 356 41 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 356 355 357)
(code_label 357 356 358 42 27 "" [1 uses])
(note 358 357 359 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 359 358 360 42 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fa3d83b3bd0 *.LC17>)) quote.c:166 -1
     (nil))
(call_insn 360 359 361 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:166 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 361 360 364 42 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:167 -1
     (nil)
    (nil))
(jump_insn 364 361 365 42 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 365 364 366)
(code_label 366 365 367 44 23 "" [1 uses])
(note 367 366 368 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 44 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fa3d83b3c60 *.LC18>)) quote.c:171 -1
     (nil))
(call_insn 369 368 370 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:171 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 370 369 373 44 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:172 -1
     (nil)
    (nil))
(jump_insn 373 370 374 44 (set (pc)
        (label_ref 848)) -1
     (nil)
 -> 848)
(barrier 374 373 375)
(code_label 375 374 376 46 22 "" [1 uses])
(note 376 375 377 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 377 376 378 46 (set (reg:SI 323)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:175 -1
     (nil))
(insn 378 377 379 46 (set (reg:DI 166 [ D.8264 ])
        (sign_extend:DI (reg:SI 323))) quote.c:175 -1
     (nil))
(insn 379 378 380 46 (parallel [
            (set (reg:DI 167 [ D.8264 ])
                (ashift:DI (reg:DI 166 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:175 -1
     (nil))
(insn 380 379 381 46 (set (reg/f:DI 324)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:175 -1
     (nil))
(insn 381 380 382 46 (parallel [
            (set (reg/f:DI 168 [ D.8265 ])
                (plus:DI (reg:DI 167 [ D.8264 ])
                    (reg/f:DI 324)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:175 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 167 [ D.8264 ]))
        (nil)))
(insn 382 381 383 46 (set (reg/f:DI 169 [ D.8266 ])
        (mem/f:DI (reg/f:DI 168 [ D.8265 ]) [0 *_214+0 S8 A64])) quote.c:175 -1
     (nil))
(insn 383 382 384 46 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fa3d83b3cf0 *.LC19>)) quote.c:175 -1
     (nil))
(insn 384 383 385 46 (set (reg:DI 5 di)
        (reg/f:DI 169 [ D.8266 ])) quote.c:175 -1
     (nil))
(call_insn/i 385 384 386 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:175 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 386 385 387 46 (set (reg:SI 170 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:175 -1
     (nil))
(insn 387 386 388 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 170 [ D.8267 ])
            (const_int 0 [0]))) quote.c:175 -1
     (nil))
(jump_insn 388 387 389 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 447)
            (pc))) quote.c:175 -1
     (nil)
 -> 447)
(note 389 388 390 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 47 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:176 -1
     (nil))
(insn 391 390 392 47 (set (reg:SI 325)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:177 -1
     (nil))
(insn 392 391 393 47 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 325)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5572 [0xffffffffffffea3c])) [0 argc+0 S4 A32]))) quote.c:177 -1
     (nil))
(jump_insn 393 392 394 47 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 438)
            (pc))) quote.c:177 -1
     (nil)
 -> 438)
(note 394 393 395 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 395 394 396 48 (set (reg:SI 326)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:178 -1
     (nil))
(insn 396 395 397 48 (set (reg:DI 171 [ D.8264 ])
        (sign_extend:DI (reg:SI 326))) quote.c:178 -1
     (nil))
(insn 397 396 398 48 (parallel [
            (set (reg:DI 172 [ D.8264 ])
                (ashift:DI (reg:DI 171 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:178 -1
     (nil))
(insn 398 397 399 48 (set (reg/f:DI 327)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:178 -1
     (nil))
(insn 399 398 400 48 (parallel [
            (set (reg/f:DI 173 [ D.8265 ])
                (plus:DI (reg:DI 172 [ D.8264 ])
                    (reg/f:DI 327)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:178 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 172 [ D.8264 ]))
        (nil)))
(insn 400 399 401 48 (set (reg/f:DI 174 [ D.8266 ])
        (mem/f:DI (reg/f:DI 173 [ D.8265 ]) [0 *_220+0 S8 A64])) quote.c:178 -1
     (nil))
(insn 401 400 402 48 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fa3d83b3d80 *.LC20>)) quote.c:178 -1
     (nil))
(insn 402 401 403 48 (set (reg:DI 5 di)
        (reg/f:DI 174 [ D.8266 ])) quote.c:178 -1
     (nil))
(call_insn/i 403 402 404 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:178 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 404 403 405 48 (set (reg:SI 175 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:178 -1
     (nil))
(insn 405 404 406 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 175 [ D.8267 ])
            (const_int 0 [0]))) quote.c:178 -1
     (nil))
(jump_insn 406 405 407 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 411)
            (pc))) quote.c:178 -1
     (nil)
 -> 411)
(note 407 406 408 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 408 407 409 49 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5516 [0xffffffffffffea74])) [0 useRsa+0 S4 A32])
        (const_int 1 [0x1])) quote.c:179 -1
     (nil))
(jump_insn 409 408 410 49 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 410 409 411)
(code_label 411 410 412 50 31 "" [1 uses])
(note 412 411 413 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 413 412 414 50 (set (reg:SI 328)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:181 -1
     (nil))
(insn 414 413 415 50 (set (reg:DI 176 [ D.8264 ])
        (sign_extend:DI (reg:SI 328))) quote.c:181 -1
     (nil))
(insn 415 414 416 50 (parallel [
            (set (reg:DI 177 [ D.8264 ])
                (ashift:DI (reg:DI 176 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:181 -1
     (nil))
(insn 416 415 417 50 (set (reg/f:DI 329)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:181 -1
     (nil))
(insn 417 416 418 50 (parallel [
            (set (reg/f:DI 178 [ D.8265 ])
                (plus:DI (reg:DI 177 [ D.8264 ])
                    (reg/f:DI 329)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:181 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 177 [ D.8264 ]))
        (nil)))
(insn 418 417 419 50 (set (reg/f:DI 179 [ D.8266 ])
        (mem/f:DI (reg/f:DI 178 [ D.8265 ]) [0 *_226+0 S8 A64])) quote.c:181 -1
     (nil))
(insn 419 418 420 50 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fa3d83b3e10 *.LC21>)) quote.c:181 -1
     (nil))
(insn 420 419 421 50 (set (reg:DI 5 di)
        (reg/f:DI 179 [ D.8266 ])) quote.c:181 -1
     (nil))
(call_insn/i 421 420 422 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:181 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 422 421 423 50 (set (reg:SI 180 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:181 -1
     (nil))
(insn 423 422 424 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 180 [ D.8267 ])
            (const_int 0 [0]))) quote.c:181 -1
     (nil))
(jump_insn 424 423 425 50 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 429)
            (pc))) quote.c:181 -1
     (nil)
 -> 429)
(note 425 424 426 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 426 425 427 51 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5516 [0xffffffffffffea74])) [0 useRsa+0 S4 A32])
        (const_int 0 [0])) quote.c:182 -1
     (nil))
(jump_insn 427 426 428 51 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 428 427 429)
(code_label 429 428 430 52 33 "" [1 uses])
(note 430 429 431 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 431 430 432 52 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa3d83b3ea0 *.LC22>)) quote.c:185 -1
     (nil))
(call_insn 432 431 433 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:185 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 433 432 436 52 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:186 -1
     (nil)
    (nil))
(jump_insn 436 433 437 52 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 437 436 438)
(code_label 438 437 439 54 30 "" [1 uses])
(note 439 438 440 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 440 439 441 54 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa3d83b3f30 *.LC23>)) quote.c:190 -1
     (nil))
(call_insn 441 440 442 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:190 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 442 441 445 54 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:191 -1
     (nil)
    (nil))
(jump_insn 445 442 446 54 (set (pc)
        (label_ref 848)) -1
     (nil)
 -> 848)
(barrier 446 445 447)
(code_label 447 446 448 56 29 "" [1 uses])
(note 448 447 449 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 449 448 450 56 (set (reg:SI 330)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:194 -1
     (nil))
(insn 450 449 451 56 (set (reg:DI 181 [ D.8264 ])
        (sign_extend:DI (reg:SI 330))) quote.c:194 -1
     (nil))
(insn 451 450 452 56 (parallel [
            (set (reg:DI 182 [ D.8264 ])
                (ashift:DI (reg:DI 181 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:194 -1
     (nil))
(insn 452 451 453 56 (set (reg/f:DI 331)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:194 -1
     (nil))
(insn 453 452 454 56 (parallel [
            (set (reg/f:DI 183 [ D.8265 ])
                (plus:DI (reg:DI 182 [ D.8264 ])
                    (reg/f:DI 331)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:194 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 182 [ D.8264 ]))
        (nil)))
(insn 454 453 455 56 (set (reg/f:DI 184 [ D.8266 ])
        (mem/f:DI (reg/f:DI 183 [ D.8265 ]) [0 *_236+0 S8 A64])) quote.c:194 -1
     (nil))
(insn 455 454 456 56 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa3d83c8000 *.LC24>)) quote.c:194 -1
     (nil))
(insn 456 455 457 56 (set (reg:DI 5 di)
        (reg/f:DI 184 [ D.8266 ])) quote.c:194 -1
     (nil))
(call_insn/i 457 456 458 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:194 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 458 457 459 56 (set (reg:SI 185 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:194 -1
     (nil))
(insn 459 458 460 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 185 [ D.8267 ])
            (const_int 0 [0]))) quote.c:194 -1
     (nil))
(jump_insn 460 459 461 56 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 485)
            (pc))) quote.c:194 -1
     (nil)
 -> 485)
(note 461 460 462 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 462 461 463 57 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:195 -1
     (nil))
(insn 463 462 464 57 (set (reg:SI 332)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:196 -1
     (nil))
(insn 464 463 465 57 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 332)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5572 [0xffffffffffffea3c])) [0 argc+0 S4 A32]))) quote.c:196 -1
     (nil))
(jump_insn 465 464 466 57 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 476)
            (pc))) quote.c:196 -1
     (nil)
 -> 476)
(note 466 465 467 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 467 466 468 58 (set (reg:SI 333)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:197 -1
     (nil))
(insn 468 467 469 58 (set (reg:DI 186 [ D.8264 ])
        (sign_extend:DI (reg:SI 333))) quote.c:197 -1
     (nil))
(insn 469 468 470 58 (parallel [
            (set (reg:DI 187 [ D.8264 ])
                (ashift:DI (reg:DI 186 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:197 -1
     (nil))
(insn 470 469 471 58 (set (reg/f:DI 334)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:197 -1
     (nil))
(insn 471 470 472 58 (parallel [
            (set (reg/f:DI 188 [ D.8265 ])
                (plus:DI (reg:DI 187 [ D.8264 ])
                    (reg/f:DI 334)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:197 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 187 [ D.8264 ]))
        (nil)))
(insn 472 471 473 58 (set (reg/f:DI 335)
        (mem/f:DI (reg/f:DI 188 [ D.8265 ]) [0 *_242+0 S8 A64])) quote.c:197 -1
     (nil))
(insn 473 472 474 58 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5464 [0xffffffffffffeaa8])) [0 signatureFilename+0 S8 A64])
        (reg/f:DI 335)) quote.c:197 -1
     (nil))
(jump_insn 474 473 475 58 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 475 474 476)
(code_label 476 475 477 59 36 "" [1 uses])
(note 477 476 478 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 478 477 479 59 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fa3d83c8090 *.LC25>)) quote.c:200 -1
     (nil))
(call_insn 479 478 480 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:200 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 480 479 483 59 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:201 -1
     (nil)
    (nil))
(jump_insn 483 480 484 59 (set (pc)
        (label_ref 848)) -1
     (nil)
 -> 848)
(barrier 484 483 485)
(code_label 485 484 486 61 35 "" [1 uses])
(note 486 485 487 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 487 486 488 61 (set (reg:SI 336)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:204 -1
     (nil))
(insn 488 487 489 61 (set (reg:DI 189 [ D.8264 ])
        (sign_extend:DI (reg:SI 336))) quote.c:204 -1
     (nil))
(insn 489 488 490 61 (parallel [
            (set (reg:DI 190 [ D.8264 ])
                (ashift:DI (reg:DI 189 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:204 -1
     (nil))
(insn 490 489 491 61 (set (reg/f:DI 337)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:204 -1
     (nil))
(insn 491 490 492 61 (parallel [
            (set (reg/f:DI 191 [ D.8265 ])
                (plus:DI (reg:DI 190 [ D.8264 ])
                    (reg/f:DI 337)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:204 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 190 [ D.8264 ]))
        (nil)))
(insn 492 491 493 61 (set (reg/f:DI 192 [ D.8266 ])
        (mem/f:DI (reg/f:DI 191 [ D.8265 ]) [0 *_248+0 S8 A64])) quote.c:204 -1
     (nil))
(insn 493 492 494 61 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa3d83c8120 *.LC26>)) quote.c:204 -1
     (nil))
(insn 494 493 495 61 (set (reg:DI 5 di)
        (reg/f:DI 192 [ D.8266 ])) quote.c:204 -1
     (nil))
(call_insn/i 495 494 496 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:204 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 496 495 497 61 (set (reg:SI 193 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:204 -1
     (nil))
(insn 497 496 498 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 193 [ D.8267 ])
            (const_int 0 [0]))) quote.c:204 -1
     (nil))
(jump_insn 498 497 499 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 523)
            (pc))) quote.c:204 -1
     (nil)
 -> 523)
(note 499 498 500 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 501 62 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:205 -1
     (nil))
(insn 501 500 502 62 (set (reg:SI 338)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:206 -1
     (nil))
(insn 502 501 503 62 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 338)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5572 [0xffffffffffffea3c])) [0 argc+0 S4 A32]))) quote.c:206 -1
     (nil))
(jump_insn 503 502 504 62 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 514)
            (pc))) quote.c:206 -1
     (nil)
 -> 514)
(note 504 503 505 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 505 504 506 63 (set (reg:SI 339)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:207 -1
     (nil))
(insn 506 505 507 63 (set (reg:DI 194 [ D.8264 ])
        (sign_extend:DI (reg:SI 339))) quote.c:207 -1
     (nil))
(insn 507 506 508 63 (parallel [
            (set (reg:DI 195 [ D.8264 ])
                (ashift:DI (reg:DI 194 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:207 -1
     (nil))
(insn 508 507 509 63 (set (reg/f:DI 340)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:207 -1
     (nil))
(insn 509 508 510 63 (parallel [
            (set (reg/f:DI 196 [ D.8265 ])
                (plus:DI (reg:DI 195 [ D.8264 ])
                    (reg/f:DI 340)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:207 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 195 [ D.8264 ]))
        (nil)))
(insn 510 509 511 63 (set (reg/f:DI 341)
        (mem/f:DI (reg/f:DI 196 [ D.8265 ]) [0 *_254+0 S8 A64])) quote.c:207 -1
     (nil))
(insn 511 510 512 63 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5456 [0xffffffffffffeab0])) [0 attestInfoFilename+0 S8 A64])
        (reg/f:DI 341)) quote.c:207 -1
     (nil))
(jump_insn 512 511 513 63 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 513 512 514)
(code_label 514 513 515 64 39 "" [1 uses])
(note 515 514 516 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 64 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa3d83c81b0 *.LC27>)) quote.c:210 -1
     (nil))
(call_insn 517 516 518 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:210 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 518 517 521 64 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:211 -1
     (nil)
    (nil))
(jump_insn 521 518 522 64 (set (pc)
        (label_ref 848)) -1
     (nil)
 -> 848)
(barrier 522 521 523)
(code_label 523 522 524 66 38 "" [1 uses])
(note 524 523 525 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 525 524 526 66 (set (reg:SI 342)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:214 -1
     (nil))
(insn 526 525 527 66 (set (reg:DI 197 [ D.8264 ])
        (sign_extend:DI (reg:SI 342))) quote.c:214 -1
     (nil))
(insn 527 526 528 66 (parallel [
            (set (reg:DI 198 [ D.8264 ])
                (ashift:DI (reg:DI 197 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:214 -1
     (nil))
(insn 528 527 529 66 (set (reg/f:DI 343)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:214 -1
     (nil))
(insn 529 528 530 66 (parallel [
            (set (reg/f:DI 199 [ D.8265 ])
                (plus:DI (reg:DI 198 [ D.8264 ])
                    (reg/f:DI 343)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:214 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 198 [ D.8264 ]))
        (nil)))
(insn 530 529 531 66 (set (reg/f:DI 200 [ D.8266 ])
        (mem/f:DI (reg/f:DI 199 [ D.8265 ]) [0 *_260+0 S8 A64])) quote.c:214 -1
     (nil))
(insn 531 530 532 66 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fa3d83c8240 *.LC28>)) quote.c:214 -1
     (nil))
(insn 532 531 533 66 (set (reg:DI 5 di)
        (reg/f:DI 200 [ D.8266 ])) quote.c:214 -1
     (nil))
(call_insn/i 533 532 534 66 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:214 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 534 533 535 66 (set (reg:SI 201 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:214 -1
     (nil))
(insn 535 534 536 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 201 [ D.8267 ])
            (const_int 0 [0]))) quote.c:214 -1
     (nil))
(jump_insn 536 535 537 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 561)
            (pc))) quote.c:214 -1
     (nil)
 -> 561)
(note 537 536 538 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 538 537 539 67 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:215 -1
     (nil))
(insn 539 538 540 67 (set (reg:SI 344)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:216 -1
     (nil))
(insn 540 539 541 67 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 344)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5572 [0xffffffffffffea3c])) [0 argc+0 S4 A32]))) quote.c:216 -1
     (nil))
(jump_insn 541 540 542 67 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 552)
            (pc))) quote.c:216 -1
     (nil)
 -> 552)
(note 542 541 543 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 543 542 544 68 (set (reg:SI 345)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:217 -1
     (nil))
(insn 544 543 545 68 (set (reg:DI 202 [ D.8264 ])
        (sign_extend:DI (reg:SI 345))) quote.c:217 -1
     (nil))
(insn 545 544 546 68 (parallel [
            (set (reg:DI 203 [ D.8264 ])
                (ashift:DI (reg:DI 202 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:217 -1
     (nil))
(insn 546 545 547 68 (set (reg/f:DI 346)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:217 -1
     (nil))
(insn 547 546 548 68 (parallel [
            (set (reg/f:DI 204 [ D.8265 ])
                (plus:DI (reg:DI 203 [ D.8264 ])
                    (reg/f:DI 346)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:217 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 203 [ D.8264 ]))
        (nil)))
(insn 548 547 549 68 (set (reg/f:DI 347)
        (mem/f:DI (reg/f:DI 204 [ D.8265 ]) [0 *_266+0 S8 A64])) quote.c:217 -1
     (nil))
(insn 549 548 550 68 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5448 [0xffffffffffffeab8])) [0 qualifyingDataFilename+0 S8 A64])
        (reg/f:DI 347)) quote.c:217 -1
     (nil))
(jump_insn 550 549 551 68 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 551 550 552)
(code_label 552 551 553 69 42 "" [1 uses])
(note 553 552 554 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 554 553 555 69 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fa3d83c82d0 *.LC29>)) quote.c:220 -1
     (nil))
(call_insn 555 554 556 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:220 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 556 555 559 69 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:221 -1
     (nil)
    (nil))
(jump_insn 559 556 560 69 (set (pc)
        (label_ref 848)) -1
     (nil)
 -> 848)
(barrier 560 559 561)
(code_label 561 560 562 71 41 "" [1 uses])
(note 562 561 563 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 563 562 564 71 (set (reg:SI 348)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:224 -1
     (nil))
(insn 564 563 565 71 (set (reg:DI 205 [ D.8264 ])
        (sign_extend:DI (reg:SI 348))) quote.c:224 -1
     (nil))
(insn 565 564 566 71 (parallel [
            (set (reg:DI 206 [ D.8264 ])
                (ashift:DI (reg:DI 205 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:224 -1
     (nil))
(insn 566 565 567 71 (set (reg/f:DI 349)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:224 -1
     (nil))
(insn 567 566 568 71 (parallel [
            (set (reg/f:DI 207 [ D.8265 ])
                (plus:DI (reg:DI 206 [ D.8264 ])
                    (reg/f:DI 349)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:224 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 206 [ D.8264 ]))
        (nil)))
(insn 568 567 569 71 (set (reg/f:DI 208 [ D.8266 ])
        (mem/f:DI (reg/f:DI 207 [ D.8265 ]) [0 *_272+0 S8 A64])) quote.c:224 -1
     (nil))
(insn 569 568 570 71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7fa3d83c8360 *.LC30>)) quote.c:224 -1
     (nil))
(insn 570 569 571 71 (set (reg:DI 5 di)
        (reg/f:DI 208 [ D.8266 ])) quote.c:224 -1
     (nil))
(call_insn/i 571 570 572 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:224 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 572 571 573 71 (set (reg:SI 209 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:224 -1
     (nil))
(insn 573 572 574 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 209 [ D.8267 ])
            (const_int 0 [0]))) quote.c:224 -1
     (nil))
(jump_insn 574 573 575 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 639)
            (pc))) quote.c:224 -1
     (nil)
 -> 639)
(note 575 574 576 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 576 575 577 72 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:225 -1
     (nil))
(insn 577 576 578 72 (set (reg:SI 350)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:226 -1
     (nil))
(insn 578 577 579 72 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 350)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5572 [0xffffffffffffea3c])) [0 argc+0 S4 A32]))) quote.c:226 -1
     (nil))
(jump_insn 579 578 580 72 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 595)
            (pc))) quote.c:226 -1
     (nil)
 -> 595)
(note 580 579 581 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 581 580 582 73 (set (reg:SI 351)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:227 -1
     (nil))
(insn 582 581 583 73 (set (reg:DI 210 [ D.8264 ])
        (sign_extend:DI (reg:SI 351))) quote.c:227 -1
     (nil))
(insn 583 582 584 73 (parallel [
            (set (reg:DI 211 [ D.8264 ])
                (ashift:DI (reg:DI 210 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:227 -1
     (nil))
(insn 584 583 585 73 (set (reg/f:DI 352)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:227 -1
     (nil))
(insn 585 584 586 73 (parallel [
            (set (reg/f:DI 212 [ D.8265 ])
                (plus:DI (reg:DI 211 [ D.8264 ])
                    (reg/f:DI 352)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:227 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 211 [ D.8264 ]))
        (nil)))
(insn 586 585 587 73 (set (reg/f:DI 213 [ D.8266 ])
        (mem/f:DI (reg/f:DI 212 [ D.8265 ]) [0 *_278+0 S8 A64])) quote.c:227 -1
     (nil))
(insn 587 586 588 73 (parallel [
            (set (reg:DI 353)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5548 [0xffffffffffffea54])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:227 -1
     (nil))
(insn 588 587 589 73 (set (reg:DI 1 dx)
        (reg:DI 353)) quote.c:227 -1
     (nil))
(insn 589 588 590 73 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa3d83b35a0 *.LC6>)) quote.c:227 -1
     (nil))
(insn 590 589 591 73 (set (reg:DI 5 di)
        (reg/f:DI 213 [ D.8266 ])) quote.c:227 -1
     (nil))
(insn 591 590 592 73 (set (reg:QI 0 ax)
        (const_int 0 [0])) quote.c:227 -1
     (nil))
(call_insn 592 591 593 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fa3d86c5ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) quote.c:227 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 593 592 594 73 (set (pc)
        (label_ref 600)) -1
     (nil)
 -> 600)
(barrier 594 593 595)
(code_label 595 594 596 74 45 "" [1 uses])
(note 596 595 597 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 597 596 598 74 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7fa3d83c83f0 *.LC31>)) quote.c:230 -1
     (nil))
(call_insn 598 597 599 74 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:230 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 599 598 600 74 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:231 -1
     (nil)
    (nil))
(code_label 600 599 601 75 46 "" [1 uses])
(note 601 600 602 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 602 601 603 75 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:233 -1
     (nil))
(insn 603 602 604 75 (set (reg:SI 354)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:234 -1
     (nil))
(insn 604 603 605 75 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 354)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5572 [0xffffffffffffea3c])) [0 argc+0 S4 A32]))) quote.c:234 -1
     (nil))
(jump_insn 605 604 606 75 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 630)
            (pc))) quote.c:234 -1
     (nil)
 -> 630)
(note 606 605 607 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 607 606 608 76 (set (reg:SI 355)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:235 -1
     (nil))
(insn 608 607 609 76 (set (reg:DI 214 [ D.8264 ])
        (sign_extend:DI (reg:SI 355))) quote.c:235 -1
     (nil))
(insn 609 608 610 76 (parallel [
            (set (reg:DI 215 [ D.8264 ])
                (ashift:DI (reg:DI 214 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:235 -1
     (nil))
(insn 610 609 611 76 (set (reg/f:DI 356)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:235 -1
     (nil))
(insn 611 610 612 76 (parallel [
            (set (reg/f:DI 216 [ D.8265 ])
                (plus:DI (reg:DI 215 [ D.8264 ])
                    (reg/f:DI 356)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:235 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 215 [ D.8264 ]))
        (nil)))
(insn 612 611 613 76 (set (reg/f:DI 217 [ D.8266 ])
        (mem/f:DI (reg/f:DI 216 [ D.8265 ]) [0 *_286+0 S8 A64])) quote.c:235 -1
     (nil))
(insn 613 612 614 76 (parallel [
            (set (reg:DI 357)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5544 [0xffffffffffffea58])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:235 -1
     (nil))
(insn 614 613 615 76 (set (reg:DI 1 dx)
        (reg:DI 357)) quote.c:235 -1
     (nil))
(insn 615 614 616 76 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa3d83b35a0 *.LC6>)) quote.c:235 -1
     (nil))
(insn 616 615 617 76 (set (reg:DI 5 di)
        (reg/f:DI 217 [ D.8266 ])) quote.c:235 -1
     (nil))
(insn 617 616 618 76 (set (reg:QI 0 ax)
        (const_int 0 [0])) quote.c:235 -1
     (nil))
(call_insn 618 617 619 76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fa3d86c5ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) quote.c:235 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 619 618 620 76 (set (reg:SI 218 [ D.8268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5544 [0xffffffffffffea58])) [0 sessionAttributes0+0 S4 A64])) quote.c:236 -1
     (nil))
(insn 620 619 621 76 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 218 [ D.8268 ])
            (const_int 255 [0xff]))) quote.c:236 -1
     (nil))
(jump_insn 621 620 622 76 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 848)
            (pc))) quote.c:236 612 {*jcc_1}
     (nil)
 -> 848)
(note 622 621 623 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 623 622 624 77 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7fa3d83c8480 *.LC32>)) quote.c:237 -1
     (nil))
(call_insn 624 623 625 77 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:237 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 625 624 628 77 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:238 -1
     (nil)
    (nil))
(jump_insn 628 625 629 77 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 629 628 630)
(code_label 630 629 631 79 47 "" [1 uses])
(note 631 630 632 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 632 631 633 79 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7fa3d83c83f0 *.LC31>)) quote.c:242 -1
     (nil))
(call_insn 633 632 634 79 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:242 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 634 633 637 79 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:243 -1
     (nil)
    (nil))
(jump_insn 637 634 638 79 (set (pc)
        (label_ref 848)) -1
     (nil)
 -> 848)
(barrier 638 637 639)
(code_label 639 638 640 81 44 "" [1 uses])
(note 640 639 641 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 641 640 642 81 (set (reg:SI 358)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:246 -1
     (nil))
(insn 642 641 643 81 (set (reg:DI 219 [ D.8264 ])
        (sign_extend:DI (reg:SI 358))) quote.c:246 -1
     (nil))
(insn 643 642 644 81 (parallel [
            (set (reg:DI 220 [ D.8264 ])
                (ashift:DI (reg:DI 219 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:246 -1
     (nil))
(insn 644 643 645 81 (set (reg/f:DI 359)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:246 -1
     (nil))
(insn 645 644 646 81 (parallel [
            (set (reg/f:DI 221 [ D.8265 ])
                (plus:DI (reg:DI 220 [ D.8264 ])
                    (reg/f:DI 359)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:246 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 220 [ D.8264 ]))
        (nil)))
(insn 646 645 647 81 (set (reg/f:DI 222 [ D.8266 ])
        (mem/f:DI (reg/f:DI 221 [ D.8265 ]) [0 *_296+0 S8 A64])) quote.c:246 -1
     (nil))
(insn 647 646 648 81 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7fa3d83c8510 *.LC33>)) quote.c:246 -1
     (nil))
(insn 648 647 649 81 (set (reg:DI 5 di)
        (reg/f:DI 222 [ D.8266 ])) quote.c:246 -1
     (nil))
(call_insn/i 649 648 650 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:246 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 650 649 651 81 (set (reg:SI 223 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:246 -1
     (nil))
(insn 651 650 652 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 223 [ D.8267 ])
            (const_int 0 [0]))) quote.c:246 -1
     (nil))
(jump_insn 652 651 653 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 717)
            (pc))) quote.c:246 -1
     (nil)
 -> 717)
(note 653 652 654 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 654 653 655 82 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:247 -1
     (nil))
(insn 655 654 656 82 (set (reg:SI 360)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:248 -1
     (nil))
(insn 656 655 657 82 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 360)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5572 [0xffffffffffffea3c])) [0 argc+0 S4 A32]))) quote.c:248 -1
     (nil))
(jump_insn 657 656 658 82 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 673)
            (pc))) quote.c:248 -1
     (nil)
 -> 673)
(note 658 657 659 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 659 658 660 83 (set (reg:SI 361)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:249 -1
     (nil))
(insn 660 659 661 83 (set (reg:DI 224 [ D.8264 ])
        (sign_extend:DI (reg:SI 361))) quote.c:249 -1
     (nil))
(insn 661 660 662 83 (parallel [
            (set (reg:DI 225 [ D.8264 ])
                (ashift:DI (reg:DI 224 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:249 -1
     (nil))
(insn 662 661 663 83 (set (reg/f:DI 362)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:249 -1
     (nil))
(insn 663 662 664 83 (parallel [
            (set (reg/f:DI 226 [ D.8265 ])
                (plus:DI (reg:DI 225 [ D.8264 ])
                    (reg/f:DI 362)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:249 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 225 [ D.8264 ]))
        (nil)))
(insn 664 663 665 83 (set (reg/f:DI 227 [ D.8266 ])
        (mem/f:DI (reg/f:DI 226 [ D.8265 ]) [0 *_302+0 S8 A64])) quote.c:249 -1
     (nil))
(insn 665 664 666 83 (parallel [
            (set (reg:DI 363)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5540 [0xffffffffffffea5c])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:249 -1
     (nil))
(insn 666 665 667 83 (set (reg:DI 1 dx)
        (reg:DI 363)) quote.c:249 -1
     (nil))
(insn 667 666 668 83 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa3d83b35a0 *.LC6>)) quote.c:249 -1
     (nil))
(insn 668 667 669 83 (set (reg:DI 5 di)
        (reg/f:DI 227 [ D.8266 ])) quote.c:249 -1
     (nil))
(insn 669 668 670 83 (set (reg:QI 0 ax)
        (const_int 0 [0])) quote.c:249 -1
     (nil))
(call_insn 670 669 671 83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fa3d86c5ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) quote.c:249 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 671 670 672 83 (set (pc)
        (label_ref 678)) -1
     (nil)
 -> 678)
(barrier 672 671 673)
(code_label 673 672 674 84 51 "" [1 uses])
(note 674 673 675 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 675 674 676 84 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fa3d83c85a0 *.LC34>)) quote.c:252 -1
     (nil))
(call_insn 676 675 677 84 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:252 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 677 676 678 84 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:253 -1
     (nil)
    (nil))
(code_label 678 677 679 85 52 "" [1 uses])
(note 679 678 680 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 680 679 681 85 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:255 -1
     (nil))
(insn 681 680 682 85 (set (reg:SI 364)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:256 -1
     (nil))
(insn 682 681 683 85 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 364)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5572 [0xffffffffffffea3c])) [0 argc+0 S4 A32]))) quote.c:256 -1
     (nil))
(jump_insn 683 682 684 85 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 708)
            (pc))) quote.c:256 -1
     (nil)
 -> 708)
(note 684 683 685 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 685 684 686 86 (set (reg:SI 365)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:257 -1
     (nil))
(insn 686 685 687 86 (set (reg:DI 228 [ D.8264 ])
        (sign_extend:DI (reg:SI 365))) quote.c:257 -1
     (nil))
(insn 687 686 688 86 (parallel [
            (set (reg:DI 229 [ D.8264 ])
                (ashift:DI (reg:DI 228 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:257 -1
     (nil))
(insn 688 687 689 86 (set (reg/f:DI 366)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:257 -1
     (nil))
(insn 689 688 690 86 (parallel [
            (set (reg/f:DI 230 [ D.8265 ])
                (plus:DI (reg:DI 229 [ D.8264 ])
                    (reg/f:DI 366)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:257 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 229 [ D.8264 ]))
        (nil)))
(insn 690 689 691 86 (set (reg/f:DI 231 [ D.8266 ])
        (mem/f:DI (reg/f:DI 230 [ D.8265 ]) [0 *_310+0 S8 A64])) quote.c:257 -1
     (nil))
(insn 691 690 692 86 (parallel [
            (set (reg:DI 367)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5536 [0xffffffffffffea60])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:257 -1
     (nil))
(insn 692 691 693 86 (set (reg:DI 1 dx)
        (reg:DI 367)) quote.c:257 -1
     (nil))
(insn 693 692 694 86 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa3d83b35a0 *.LC6>)) quote.c:257 -1
     (nil))
(insn 694 693 695 86 (set (reg:DI 5 di)
        (reg/f:DI 231 [ D.8266 ])) quote.c:257 -1
     (nil))
(insn 695 694 696 86 (set (reg:QI 0 ax)
        (const_int 0 [0])) quote.c:257 -1
     (nil))
(call_insn 696 695 697 86 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fa3d86c5ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) quote.c:257 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 697 696 698 86 (set (reg:SI 232 [ D.8268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5536 [0xffffffffffffea60])) [0 sessionAttributes1+0 S4 A64])) quote.c:258 -1
     (nil))
(insn 698 697 699 86 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 232 [ D.8268 ])
            (const_int 255 [0xff]))) quote.c:258 -1
     (nil))
(jump_insn 699 698 700 86 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 848)
            (pc))) quote.c:258 612 {*jcc_1}
     (nil)
 -> 848)
(note 700 699 701 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 701 700 702 87 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7fa3d83c8630 *.LC35>)) quote.c:259 -1
     (nil))
(call_insn 702 701 703 87 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:259 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 703 702 706 87 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:260 -1
     (nil)
    (nil))
(jump_insn 706 703 707 87 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 707 706 708)
(code_label 708 707 709 89 53 "" [1 uses])
(note 709 708 710 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 710 709 711 89 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fa3d83c85a0 *.LC34>)) quote.c:264 -1
     (nil))
(call_insn 711 710 712 89 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:264 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 712 711 715 89 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:265 -1
     (nil)
    (nil))
(jump_insn 715 712 716 89 (set (pc)
        (label_ref 848)) -1
     (nil)
 -> 848)
(barrier 716 715 717)
(code_label 717 716 718 91 50 "" [1 uses])
(note 718 717 719 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 719 718 720 91 (set (reg:SI 368)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:268 -1
     (nil))
(insn 720 719 721 91 (set (reg:DI 233 [ D.8264 ])
        (sign_extend:DI (reg:SI 368))) quote.c:268 -1
     (nil))
(insn 721 720 722 91 (parallel [
            (set (reg:DI 234 [ D.8264 ])
                (ashift:DI (reg:DI 233 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:268 -1
     (nil))
(insn 722 721 723 91 (set (reg/f:DI 369)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:268 -1
     (nil))
(insn 723 722 724 91 (parallel [
            (set (reg/f:DI 235 [ D.8265 ])
                (plus:DI (reg:DI 234 [ D.8264 ])
                    (reg/f:DI 369)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:268 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 234 [ D.8264 ]))
        (nil)))
(insn 724 723 725 91 (set (reg/f:DI 236 [ D.8266 ])
        (mem/f:DI (reg/f:DI 235 [ D.8265 ]) [0 *_320+0 S8 A64])) quote.c:268 -1
     (nil))
(insn 725 724 726 91 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa3d83c86c0 *.LC36>)) quote.c:268 -1
     (nil))
(insn 726 725 727 91 (set (reg:DI 5 di)
        (reg/f:DI 236 [ D.8266 ])) quote.c:268 -1
     (nil))
(call_insn/i 727 726 728 91 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:268 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 728 727 729 91 (set (reg:SI 237 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:268 -1
     (nil))
(insn 729 728 730 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 237 [ D.8267 ])
            (const_int 0 [0]))) quote.c:268 -1
     (nil))
(jump_insn 730 729 731 91 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 795)
            (pc))) quote.c:268 -1
     (nil)
 -> 795)
(note 731 730 732 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 732 731 733 92 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:269 -1
     (nil))
(insn 733 732 734 92 (set (reg:SI 370)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:270 -1
     (nil))
(insn 734 733 735 92 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 370)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5572 [0xffffffffffffea3c])) [0 argc+0 S4 A32]))) quote.c:270 -1
     (nil))
(jump_insn 735 734 736 92 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 751)
            (pc))) quote.c:270 -1
     (nil)
 -> 751)
(note 736 735 737 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 737 736 738 93 (set (reg:SI 371)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:271 -1
     (nil))
(insn 738 737 739 93 (set (reg:DI 238 [ D.8264 ])
        (sign_extend:DI (reg:SI 371))) quote.c:271 -1
     (nil))
(insn 739 738 740 93 (parallel [
            (set (reg:DI 239 [ D.8264 ])
                (ashift:DI (reg:DI 238 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:271 -1
     (nil))
(insn 740 739 741 93 (set (reg/f:DI 372)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:271 -1
     (nil))
(insn 741 740 742 93 (parallel [
            (set (reg/f:DI 240 [ D.8265 ])
                (plus:DI (reg:DI 239 [ D.8264 ])
                    (reg/f:DI 372)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:271 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 239 [ D.8264 ]))
        (nil)))
(insn 742 741 743 93 (set (reg/f:DI 241 [ D.8266 ])
        (mem/f:DI (reg/f:DI 240 [ D.8265 ]) [0 *_326+0 S8 A64])) quote.c:271 -1
     (nil))
(insn 743 742 744 93 (parallel [
            (set (reg:DI 373)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5532 [0xffffffffffffea64])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:271 -1
     (nil))
(insn 744 743 745 93 (set (reg:DI 1 dx)
        (reg:DI 373)) quote.c:271 -1
     (nil))
(insn 745 744 746 93 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa3d83b35a0 *.LC6>)) quote.c:271 -1
     (nil))
(insn 746 745 747 93 (set (reg:DI 5 di)
        (reg/f:DI 241 [ D.8266 ])) quote.c:271 -1
     (nil))
(insn 747 746 748 93 (set (reg:QI 0 ax)
        (const_int 0 [0])) quote.c:271 -1
     (nil))
(call_insn 748 747 749 93 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fa3d86c5ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) quote.c:271 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 749 748 750 93 (set (pc)
        (label_ref 756)) -1
     (nil)
 -> 756)
(barrier 750 749 751)
(code_label 751 750 752 94 57 "" [1 uses])
(note 752 751 753 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 753 752 754 94 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa3d83c8750 *.LC37>)) quote.c:274 -1
     (nil))
(call_insn 754 753 755 94 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:274 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 755 754 756 94 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:275 -1
     (nil)
    (nil))
(code_label 756 755 757 95 58 "" [1 uses])
(note 757 756 758 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 758 757 759 95 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:277 -1
     (nil))
(insn 759 758 760 95 (set (reg:SI 374)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:278 -1
     (nil))
(insn 760 759 761 95 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 374)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5572 [0xffffffffffffea3c])) [0 argc+0 S4 A32]))) quote.c:278 -1
     (nil))
(jump_insn 761 760 762 95 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 786)
            (pc))) quote.c:278 -1
     (nil)
 -> 786)
(note 762 761 763 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 763 762 764 96 (set (reg:SI 375)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:279 -1
     (nil))
(insn 764 763 765 96 (set (reg:DI 242 [ D.8264 ])
        (sign_extend:DI (reg:SI 375))) quote.c:279 -1
     (nil))
(insn 765 764 766 96 (parallel [
            (set (reg:DI 243 [ D.8264 ])
                (ashift:DI (reg:DI 242 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:279 -1
     (nil))
(insn 766 765 767 96 (set (reg/f:DI 376)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:279 -1
     (nil))
(insn 767 766 768 96 (parallel [
            (set (reg/f:DI 244 [ D.8265 ])
                (plus:DI (reg:DI 243 [ D.8264 ])
                    (reg/f:DI 376)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:279 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 243 [ D.8264 ]))
        (nil)))
(insn 768 767 769 96 (set (reg/f:DI 245 [ D.8266 ])
        (mem/f:DI (reg/f:DI 244 [ D.8265 ]) [0 *_334+0 S8 A64])) quote.c:279 -1
     (nil))
(insn 769 768 770 96 (parallel [
            (set (reg:DI 377)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5528 [0xffffffffffffea68])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:279 -1
     (nil))
(insn 770 769 771 96 (set (reg:DI 1 dx)
        (reg:DI 377)) quote.c:279 -1
     (nil))
(insn 771 770 772 96 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa3d83b35a0 *.LC6>)) quote.c:279 -1
     (nil))
(insn 772 771 773 96 (set (reg:DI 5 di)
        (reg/f:DI 245 [ D.8266 ])) quote.c:279 -1
     (nil))
(insn 773 772 774 96 (set (reg:QI 0 ax)
        (const_int 0 [0])) quote.c:279 -1
     (nil))
(call_insn 774 773 775 96 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fa3d86c5ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) quote.c:279 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 775 774 776 96 (set (reg:SI 246 [ D.8268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5528 [0xffffffffffffea68])) [0 sessionAttributes2+0 S4 A64])) quote.c:280 -1
     (nil))
(insn 776 775 777 96 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 246 [ D.8268 ])
            (const_int 255 [0xff]))) quote.c:280 -1
     (nil))
(jump_insn 777 776 778 96 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 848)
            (pc))) quote.c:280 612 {*jcc_1}
     (nil)
 -> 848)
(note 778 777 779 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 779 778 780 97 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7fa3d83c87e0 *.LC38>)) quote.c:281 -1
     (nil))
(call_insn 780 779 781 97 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:281 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 781 780 784 97 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:282 -1
     (nil)
    (nil))
(jump_insn 784 781 785 97 (set (pc)
        (label_ref:DI 848)) 654 {jump}
     (nil)
 -> 848)
(barrier 785 784 786)
(code_label 786 785 787 99 59 "" [1 uses])
(note 787 786 788 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 788 787 789 99 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa3d83c8750 *.LC37>)) quote.c:286 -1
     (nil))
(call_insn 789 788 790 99 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:286 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 790 789 793 99 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:287 -1
     (nil)
    (nil))
(jump_insn 793 790 794 99 (set (pc)
        (label_ref 848)) -1
     (nil)
 -> 848)
(barrier 794 793 795)
(code_label 795 794 796 101 56 "" [1 uses])
(note 796 795 797 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 797 796 798 101 (set (reg:SI 378)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:290 -1
     (nil))
(insn 798 797 799 101 (set (reg:DI 247 [ D.8264 ])
        (sign_extend:DI (reg:SI 378))) quote.c:290 -1
     (nil))
(insn 799 798 800 101 (parallel [
            (set (reg:DI 248 [ D.8264 ])
                (ashift:DI (reg:DI 247 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:290 -1
     (nil))
(insn 800 799 801 101 (set (reg/f:DI 379)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:290 -1
     (nil))
(insn 801 800 802 101 (parallel [
            (set (reg/f:DI 249 [ D.8265 ])
                (plus:DI (reg:DI 248 [ D.8264 ])
                    (reg/f:DI 379)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:290 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 248 [ D.8264 ]))
        (nil)))
(insn 802 801 803 101 (set (reg/f:DI 250 [ D.8266 ])
        (mem/f:DI (reg/f:DI 249 [ D.8265 ]) [0 *_344+0 S8 A64])) quote.c:290 -1
     (nil))
(insn 803 802 804 101 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7fa3d83c8870 *.LC39>)) quote.c:290 -1
     (nil))
(insn 804 803 805 101 (set (reg:DI 5 di)
        (reg/f:DI 250 [ D.8266 ])) quote.c:290 -1
     (nil))
(call_insn/i 805 804 806 101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:290 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 806 805 807 101 (set (reg:SI 251 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:290 -1
     (nil))
(insn 807 806 808 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 251 [ D.8267 ])
            (const_int 0 [0]))) quote.c:290 -1
     (nil))
(jump_insn 808 807 809 101 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 813)
            (pc))) quote.c:290 -1
     (nil)
 -> 813)
(note 809 808 810 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(call_insn 810 809 811 102 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:291 -1
     (nil)
    (nil))
(jump_insn 811 810 812 102 (set (pc)
        (label_ref 848)) -1
     (nil)
 -> 848)
(barrier 812 811 813)
(code_label 813 812 814 103 62 "" [1 uses])
(note 814 813 815 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 815 814 816 103 (set (reg:SI 380)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:293 -1
     (nil))
(insn 816 815 817 103 (set (reg:DI 252 [ D.8264 ])
        (sign_extend:DI (reg:SI 380))) quote.c:293 -1
     (nil))
(insn 817 816 818 103 (parallel [
            (set (reg:DI 253 [ D.8264 ])
                (ashift:DI (reg:DI 252 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:293 -1
     (nil))
(insn 818 817 819 103 (set (reg/f:DI 381)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:293 -1
     (nil))
(insn 819 818 820 103 (parallel [
            (set (reg/f:DI 254 [ D.8265 ])
                (plus:DI (reg:DI 253 [ D.8264 ])
                    (reg/f:DI 381)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:293 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 253 [ D.8264 ]))
        (nil)))
(insn 820 819 821 103 (set (reg/f:DI 255 [ D.8266 ])
        (mem/f:DI (reg/f:DI 254 [ D.8265 ]) [0 *_350+0 S8 A64])) quote.c:293 -1
     (nil))
(insn 821 820 822 103 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC40") [flags 0x2]  <var_decl 0x7fa3d83c8900 *.LC40>)) quote.c:293 -1
     (nil))
(insn 822 821 823 103 (set (reg:DI 5 di)
        (reg/f:DI 255 [ D.8266 ])) quote.c:293 -1
     (nil))
(call_insn/i 823 822 824 103 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa3d86bc0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) quote.c:293 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 824 823 825 103 (set (reg:SI 256 [ D.8267 ])
        (reg:SI 0 ax)) quote.c:293 -1
     (nil))
(insn 825 824 826 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 256 [ D.8267 ])
            (const_int 0 [0]))) quote.c:293 -1
     (nil))
(jump_insn 826 825 827 103 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 835)
            (pc))) quote.c:293 -1
     (nil)
 -> 835)
(note 827 826 828 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 828 827 829 104 (set (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fa3d8484090 verbose>) [0 verbose+0 S4 A32])
        (const_int 1 [0x1])) quote.c:294 -1
     (nil))
(insn 829 828 830 104 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x7fa3d83c8990 *.LC41>)) quote.c:295 -1
     (nil))
(insn 830 829 831 104 (set (reg:SI 4 si)
        (const_int 1 [0x1])) quote.c:295 -1
     (nil))
(insn 831 830 832 104 (set (reg:DI 5 di)
        (const_int 0 [0])) quote.c:295 -1
     (nil))
(call_insn 832 831 833 104 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7fa3d8628000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) quote.c:295 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 833 832 834 104 (set (pc)
        (label_ref 848)) -1
     (nil)
 -> 848)
(barrier 834 833 835)
(code_label 835 834 836 105 63 "" [1 uses])
(note 836 835 837 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 837 836 838 105 (set (reg:SI 382)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:298 -1
     (nil))
(insn 838 837 839 105 (set (reg:DI 257 [ D.8264 ])
        (sign_extend:DI (reg:SI 382))) quote.c:298 -1
     (nil))
(insn 839 838 840 105 (parallel [
            (set (reg:DI 258 [ D.8264 ])
                (ashift:DI (reg:DI 257 [ D.8264 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:298 -1
     (nil))
(insn 840 839 841 105 (set (reg/f:DI 383)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])) quote.c:298 -1
     (nil))
(insn 841 840 842 105 (parallel [
            (set (reg/f:DI 259 [ D.8265 ])
                (plus:DI (reg:DI 258 [ D.8264 ])
                    (reg/f:DI 383)))
            (clobber (reg:CC 17 flags))
        ]) quote.c:298 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5584 [0xffffffffffffea30])) [0 argv+0 S8 A64])
            (reg:DI 258 [ D.8264 ]))
        (nil)))
(insn 842 841 843 105 (set (reg/f:DI 260 [ D.8266 ])
        (mem/f:DI (reg/f:DI 259 [ D.8265 ]) [0 *_357+0 S8 A64])) quote.c:298 -1
     (nil))
(insn 843 842 844 105 (set (reg:DI 4 si)
        (reg/f:DI 260 [ D.8266 ])) quote.c:298 -1
     (nil))
(insn 844 843 845 105 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC42") [flags 0x2]  <var_decl 0x7fa3d83c8a20 *.LC42>)) quote.c:298 -1
     (nil))
(insn 845 844 846 105 (set (reg:QI 0 ax)
        (const_int 0 [0])) quote.c:298 -1
     (nil))
(call_insn 846 845 847 105 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa3d86c2ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) quote.c:298 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(call_insn 847 846 848 105 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:299 -1
     (nil)
    (nil))
(code_label 848 847 849 106 8 "" [38 uses])
(note 849 848 850 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 850 849 851 106 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:92 -1
     (nil))
(code_label 851 850 852 107 2 "" [1 uses])
(note 852 851 853 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 853 852 854 107 (set (reg:SI 384)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 i+0 S4 A32])) quote.c:92 -1
     (nil))
(insn 854 853 855 107 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 384)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5572 [0xffffffffffffea3c])) [0 argc+0 S4 A32]))) quote.c:92 -1
     (nil))
(jump_insn 855 854 856 107 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 860)
            (pc))) quote.c:92 -1
     (nil)
 -> 860)
(note 856 855 858 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 858 856 859 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) quote.c:92 -1
     (nil))
(jump_insn 859 858 860 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 857)
            (pc))) quote.c:92 -1
     (nil)
 -> 857)
(code_label 860 859 861 109 64 "" [1 uses])
(note 861 860 862 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 862 861 863 109 (set (reg:SI 261 [ D.8268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5556 [0xffffffffffffea4c])) [0 signHandle+0 S4 A32])) quote.c:302 -1
     (nil))
(insn 863 862 864 109 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 261 [ D.8268 ])
            (const_int 0 [0]))) quote.c:302 -1
     (nil))
(jump_insn 864 863 865 109 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 869)
            (pc))) quote.c:302 -1
     (nil)
 -> 869)
(note 865 864 866 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 866 865 867 110 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC43") [flags 0x2]  <var_decl 0x7fa3d83c8ab0 *.LC43>)) quote.c:303 -1
     (nil))
(call_insn 867 866 868 110 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:303 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 868 867 869 110 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:304 -1
     (nil)
    (nil))
(code_label 869 868 870 111 66 "" [1 uses])
(note 870 869 871 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 871 870 872 111 (set (reg:SI 262 [ D.8268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5552 [0xffffffffffffea50])) [0 pcrHandle+0 S4 A64])) quote.c:306 -1
     (nil))
(insn 872 871 873 111 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 262 [ D.8268 ])
            (const_int 23 [0x17]))) quote.c:306 -1
     (nil))
(jump_insn 873 872 874 111 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 878)
            (pc))) quote.c:306 -1
     (nil)
 -> 878)
(note 874 873 875 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 875 874 876 112 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC44") [flags 0x2]  <var_decl 0x7fa3d83c8b40 *.LC44>)) quote.c:307 -1
     (nil))
(call_insn 876 875 877 112 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:307 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 877 876 878 112 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa3d8338a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) quote.c:308 -1
     (nil)
    (nil))
(code_label 878 877 879 113 67 "" [1 uses])
(note 879 878 880 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 880 879 881 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) quote.c:310 -1
     (nil))
(jump_insn 881 880 882 113 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 903)
            (pc))) quote.c:310 -1
     (nil)
 -> 903)
(note 882 881 883 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 883 882 884 114 (set (reg:SI 263 [ D.8268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5556 [0xffffffffffffea4c])) [0 signHandle+0 S4 A32])) quote.c:312 -1
     (nil))
(insn 884 883 885 114 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5440 [0xffffffffffffeac0])) [0 in.signHandle+0 S4 A64])
        (reg:SI 263 [ D.8268 ])) quote.c:312 -1
     (nil))
(insn 885 884 886 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5516 [0xffffffffffffea74])) [0 useRsa+0 S4 A32])
            (const_int 0 [0]))) quote.c:314 -1
     (nil))
(jump_insn 886 885 887 114 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 893)
            (pc))) quote.c:314 -1
     (nil)
 -> 893)
(note 887 886 888 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 888 887 889 115 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5304 [0xffffffffffffeb48])) [0 in.inScheme.scheme+0 S2 A64])
        (const_int 20 [0x14])) quote.c:316 -1
     (nil))
(insn 889 888 890 115 (set (reg:HI 385)
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5560 [0xffffffffffffea48])) [0 halg+0 S2 A16])) quote.c:320 -1
     (nil))
(insn 890 889 891 115 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5302 [0xffffffffffffeb4a])) [0 in.inScheme.details.rsassa.hashAlg+0 S2 A16])
        (reg:HI 385)) quote.c:320 -1
     (nil))
(jump_insn 891 890 892 115 (set (pc)
        (label_ref 898)) -1
     (nil)
 -> 898)
(barrier 892 891 893)
(code_label 893 892 894 116 69 "" [1 uses])
(note 894 893 895 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 895 894 896 116 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5304 [0xffffffffffffeb48])) [0 in.inScheme.scheme+0 S2 A64])
        (const_int 24 [0x18])) quote.c:323 -1
     (nil))
(insn 896 895 897 116 (set (reg:HI 386)
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5560 [0xffffffffffffea48])) [0 halg+0 S2 A16])) quote.c:324 -1
     (nil))
(insn 897 896 898 116 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5302 [0xffffffffffffeb4a])) [0 in.inScheme.details.ecdsa.hashAlg+0 S2 A16])
        (reg:HI 386)) quote.c:324 -1
     (nil))
(code_label 898 897 899 117 70 "" [1 uses])
(note 899 898 900 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 900 899 901 117 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5296 [0xffffffffffffeb50])) [0 in.PCRselect.count+0 S4 A64])
        (const_int 1 [0x1])) quote.c:327 -1
     (nil))
(insn 901 900 902 117 (set (reg:HI 387)
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5558 [0xffffffffffffea4a])) [0 palg+0 S2 A16])) quote.c:329 -1
     (nil))
(insn 902 901 903 117 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5292 [0xffffffffffffeb54])) [0 in.PCRselect.pcrSelections[0].hash+0 S2 A32])
        (reg:HI 387)) quote.c:329 -1
     (nil))
(code_label 903 902 904 118 68 "" [1 uses])
(note 904 903 905 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 905 904 906 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) quote.c:331 -1
     (nil))
(jump_insn 906 905 907 118 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 925)
            (pc))) quote.c:331 -1
     (nil)
 -> 925)
(note 907 906 908 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 908 907 909 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5448 [0xffffffffffffeab8])) [0 qualifyingDataFilename+0 S8 A64])
            (const_int 0 [0]))) quote.c:332 -1
     (nil))
(jump_insn 909 908 910 119 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 922)
            (pc))) quote.c:332 -1
     (nil)
 -> 922)
(note 910 909 911 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 911 910 912 120 (set (reg:DI 388)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5448 [0xffffffffffffeab8])) [0 qualifyingDataFilename+0 S8 A64])) quote.c:333 -1
     (nil))
(insn 912 911 913 120 (parallel [
            (set (reg:DI 389)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5440 [0xffffffffffffeac0])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:333 -1
     (nil))
(insn 913 912 914 120 (parallel [
            (set (reg:DI 390)
                (plus:DI (reg:DI 389)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:333 -1
     (nil))
(insn 914 913 915 120 (set (reg:DI 1 dx)
        (reg:DI 388)) quote.c:333 -1
     (nil))
(insn 915 914 916 120 (set (reg:SI 4 si)
        (const_int 130 [0x82])) quote.c:333 -1
     (nil))
(insn 916 915 917 120 (set (reg:DI 5 di)
        (reg:DI 390)) quote.c:333 -1
     (nil))
(call_insn 917 916 918 120 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_Read2B") [flags 0x41]  <function_decl 0x7fa3d8628ca8 TSS_File_Read2B>) [0 TSS_File_Read2B S1 A8])
            (const_int 0 [0]))) quote.c:333 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 918 917 919 120 (set (reg:SI 391)
        (reg:SI 0 ax)) quote.c:333 -1
     (nil))
(insn 919 918 920 120 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
        (reg:SI 391)) quote.c:333 -1
     (nil))
(jump_insn 920 919 921 120 (set (pc)
        (label_ref 925)) -1
     (nil)
 -> 925)
(barrier 921 920 922)
(code_label 922 921 923 121 72 "" [1 uses])
(note 923 922 924 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 924 923 925 121 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5436 [0xffffffffffffeac4])) [0 in.qualifyingData.t.size+0 S2 A32])
        (const_int 0 [0])) quote.c:338 -1
     (nil))
(code_label 925 924 926 122 71 "" [2 uses])
(note 926 925 927 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 927 926 928 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) quote.c:342 -1
     (nil))
(jump_insn 928 927 929 122 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 935)
            (pc))) quote.c:342 -1
     (nil)
 -> 935)
(note 929 928 930 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 930 929 931 123 (parallel [
            (set (reg:DI 392)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5504 [0xffffffffffffea80])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:343 -1
     (nil))
(insn 931 930 932 123 (set (reg:DI 5 di)
        (reg:DI 392)) quote.c:343 -1
     (nil))
(call_insn 932 931 933 123 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Create") [flags 0x41]  <function_decl 0x7fa3d8620ca8 TSS_Create>) [0 TSS_Create S1 A8])
            (const_int 0 [0]))) quote.c:343 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 933 932 934 123 (set (reg:SI 393)
        (reg:SI 0 ax)) quote.c:343 -1
     (nil))
(insn 934 933 935 123 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
        (reg:SI 393)) quote.c:343 -1
     (nil))
(code_label 935 934 936 124 73 "" [1 uses])
(note 936 935 937 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 937 936 938 124 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) quote.c:346 -1
     (nil))
(jump_insn 938 937 939 124 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 972)
            (pc))) quote.c:346 -1
     (nil)
 -> 972)
(note 939 938 940 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 940 939 941 125 (set (reg:SI 264 [ D.8268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5528 [0xffffffffffffea68])) [0 sessionAttributes2+0 S4 A64])) quote.c:347 -1
     (nil))
(insn 941 940 942 125 (set (reg:SI 265 [ D.8268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5532 [0xffffffffffffea64])) [0 sessionHandle2+0 S4 A32])) quote.c:347 -1
     (nil))
(insn 942 941 943 125 (set (reg:SI 266 [ D.8268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5536 [0xffffffffffffea60])) [0 sessionAttributes1+0 S4 A64])) quote.c:347 -1
     (nil))
(insn 943 942 944 125 (set (reg:SI 267 [ D.8268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5540 [0xffffffffffffea5c])) [0 sessionHandle1+0 S4 A32])) quote.c:347 -1
     (nil))
(insn 944 943 945 125 (set (reg:SI 268 [ D.8268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5544 [0xffffffffffffea58])) [0 sessionAttributes0+0 S4 A64])) quote.c:347 -1
     (nil))
(insn 945 944 946 125 (set (reg:SI 269 [ D.8268 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5548 [0xffffffffffffea54])) [0 sessionHandle0+0 S4 A32])) quote.c:347 -1
     (nil))
(insn 946 945 947 125 (set (reg/f:DI 270 [ D.8271 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5504 [0xffffffffffffea80])) [0 tssContext+0 S8 A64])) quote.c:347 -1
     (nil))
(insn 947 946 948 125 (parallel [
            (set (reg:DI 394)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5440 [0xffffffffffffeac0])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:347 -1
     (nil))
(insn 948 947 949 125 (parallel [
            (set (reg:DI 395)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2768 [0xfffffffffffff530])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:347 -1
     (nil))
(insn 949 948 950 125 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:347 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 950 949 951 125 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) quote.c:347 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 951 950 952 125 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) quote.c:347 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 952 951 953 125 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1073741831 [0x40000007])) quote.c:347 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 953 952 954 125 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 264 [ D.8268 ])) quote.c:347 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 954 953 955 125 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) quote.c:347 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 955 954 956 125 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 265 [ D.8268 ])) quote.c:347 -1
     (expr_list:REG_ARGS_SIZE (const_int 56 [0x38])
        (nil)))
(insn 956 955 957 125 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 266 [ D.8268 ])) quote.c:347 -1
     (expr_list:REG_ARGS_SIZE (const_int 64 [0x40])
        (nil)))
(insn 957 956 958 125 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) quote.c:347 -1
     (expr_list:REG_ARGS_SIZE (const_int 72 [0x48])
        (nil)))
(insn 958 957 959 125 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 267 [ D.8268 ])) quote.c:347 -1
     (expr_list:REG_ARGS_SIZE (const_int 80 [0x50])
        (nil)))
(insn 959 958 960 125 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 268 [ D.8268 ])) quote.c:347 -1
     (expr_list:REG_ARGS_SIZE (const_int 88 [0x58])
        (nil)))
(insn 960 959 961 125 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5472 [0xffffffffffffeaa0])) [0 keyPassword+0 S8 A64])) quote.c:347 -1
     (expr_list:REG_ARGS_SIZE (const_int 96 [0x60])
        (nil)))
(insn 961 960 962 125 (set (reg:SI 38 r9)
        (reg:SI 269 [ D.8268 ])) quote.c:347 -1
     (nil))
(insn 962 961 963 125 (set (reg:SI 37 r8)
        (const_int 344 [0x158])) quote.c:347 -1
     (nil))
(insn 963 962 964 125 (set (reg:DI 2 cx)
        (const_int 0 [0])) quote.c:347 -1
     (nil))
(insn 964 963 965 125 (set (reg:DI 1 dx)
        (reg:DI 394)) quote.c:347 -1
     (nil))
(insn 965 964 966 125 (set (reg:DI 4 si)
        (reg:DI 395)) quote.c:347 -1
     (nil))
(insn 966 965 967 125 (set (reg:DI 5 di)
        (reg/f:DI 270 [ D.8271 ])) quote.c:347 -1
     (nil))
(insn 967 966 968 125 (set (reg:QI 0 ax)
        (const_int 0 [0])) quote.c:347 -1
     (nil))
(call_insn 968 967 969 125 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fa3d8620e58 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 96 [0x60]))) quote.c:347 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 969 968 970 125 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:347 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 970 969 971 125 (set (reg:SI 396)
        (reg:SI 0 ax)) quote.c:347 -1
     (nil))
(insn 971 970 972 125 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
        (reg:SI 396)) quote.c:347 -1
     (nil))
(code_label 972 971 973 126 74 "" [1 uses])
(note 973 972 974 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 974 973 975 126 (set (reg/f:DI 271 [ D.8271 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5504 [0xffffffffffffea80])) [0 tssContext+0 S8 A64])) quote.c:358 -1
     (nil))
(insn 975 974 976 126 (set (reg:DI 5 di)
        (reg/f:DI 271 [ D.8271 ])) quote.c:358 -1
     (nil))
(call_insn 976 975 977 126 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Delete") [flags 0x41]  <function_decl 0x7fa3d8620d80 TSS_Delete>) [0 TSS_Delete S1 A8])
            (const_int 0 [0]))) quote.c:358 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 977 976 978 126 (set (reg:SI 397)
        (reg:SI 0 ax)) quote.c:358 -1
     (nil))
(insn 978 977 979 126 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 rc1+0 S4 A32])
        (reg:SI 397)) quote.c:358 -1
     (nil))
(insn 979 978 980 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) quote.c:359 -1
     (nil))
(jump_insn 980 979 981 126 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 984)
            (pc))) quote.c:359 -1
     (nil)
 -> 984)
(note 981 980 982 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 982 981 983 127 (set (reg:SI 398)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 rc1+0 S4 A32])) quote.c:360 -1
     (nil))
(insn 983 982 984 127 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
        (reg:SI 398)) quote.c:360 -1
     (nil))
(code_label 984 983 985 128 75 "" [1 uses])
(note 985 984 986 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 986 985 987 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) quote.c:363 -1
     (nil))
(jump_insn 987 986 988 128 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1014)
            (pc))) quote.c:363 -1
     (nil)
 -> 1014)
(note 988 987 989 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 989 988 990 129 (parallel [
            (set (reg:DI 399)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2768 [0xfffffffffffff530])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:364 -1
     (nil))
(insn 990 989 991 129 (parallel [
            (set (reg:DI 400)
                (plus:DI (reg:DI 399)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:364 -1
     (nil))
(insn 991 990 992 129 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5480 [0xffffffffffffea98])) [0 tmpBuffer+0 S8 A64])
        (reg:DI 400)) quote.c:364 -1
     (nil))
(insn 992 991 993 129 (set (reg:HI 272 [ D.8272 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2768 [0xfffffffffffff530])) [0 out.quoted.t.size+0 S2 A64])) quote.c:365 -1
     (nil))
(insn 993 992 994 129 (set (reg:SI 273 [ D.8267 ])
        (zero_extend:SI (reg:HI 272 [ D.8272 ]))) quote.c:365 -1
     (nil))
(insn 994 993 995 129 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5488 [0xffffffffffffea90])) [0 tmpSize+0 S4 A64])
        (reg:SI 273 [ D.8267 ])) quote.c:365 -1
     (nil))
(insn 995 994 996 129 (parallel [
            (set (reg:DI 401)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5488 [0xffffffffffffea90])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:366 -1
     (nil))
(insn 996 995 997 129 (parallel [
            (set (reg:DI 402)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5480 [0xffffffffffffea98])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:366 -1
     (nil))
(insn 997 996 998 129 (parallel [
            (set (reg:DI 403)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5264 [0xffffffffffffeb70])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:366 -1
     (nil))
(insn 998 997 999 129 (set (reg:DI 1 dx)
        (reg:DI 401)) quote.c:366 -1
     (nil))
(insn 999 998 1000 129 (set (reg:DI 4 si)
        (reg:DI 402)) quote.c:366 -1
     (nil))
(insn 1000 999 1001 129 (set (reg:DI 5 di)
        (reg:DI 403)) quote.c:366 -1
     (nil))
(call_insn 1001 1000 1002 129 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMS_ATTEST_Unmarshal") [flags 0x41]  <function_decl 0x7fa3d83116c0 TPMS_ATTEST_Unmarshal>) [0 TPMS_ATTEST_Unmarshal S1 A8])
            (const_int 0 [0]))) quote.c:366 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1002 1001 1003 129 (set (reg:SI 404)
        (reg:SI 0 ax)) quote.c:366 -1
     (nil))
(insn 1003 1002 1004 129 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
        (reg:SI 404)) quote.c:366 -1
     (nil))
(insn 1004 1003 1005 129 (set (reg:SI 274 [ D.8267 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fa3d8484090 verbose>) [0 verbose+0 S4 A32])) quote.c:367 -1
     (nil))
(insn 1005 1004 1006 129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 274 [ D.8267 ])
            (const_int 0 [0]))) quote.c:367 -1
     (nil))
(jump_insn 1006 1005 1007 129 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1014)
            (pc))) quote.c:367 612 {*jcc_1}
     (nil)
 -> 1014)
(note 1007 1006 1008 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 1008 1007 1009 130 (parallel [
            (set (reg:DI 405)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5264 [0xffffffffffffeb70])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:367 -1
     (nil))
(insn 1009 1008 1010 130 (set (reg:SI 4 si)
        (const_int 0 [0])) quote.c:367 -1
     (nil))
(insn 1010 1009 1011 130 (set (reg:DI 5 di)
        (reg:DI 405)) quote.c:367 -1
     (nil))
(call_insn 1011 1010 1014 130 (call (mem:QI (symbol_ref:DI ("TSS_TPMS_ATTEST_Print") [flags 0x41]  <function_decl 0x7fa3d8619870 TSS_TPMS_ATTEST_Print>) [0 TSS_TPMS_ATTEST_Print S1 A8])
        (const_int 0 [0])) quote.c:367 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(code_label 1014 1011 1015 132 76 "" [2 uses])
(note 1015 1014 1016 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 1016 1015 1017 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) quote.c:369 -1
     (nil))
(jump_insn 1017 1016 1018 132 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1034)
            (pc))) quote.c:369 -1
     (nil)
 -> 1034)
(note 1018 1017 1019 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 1019 1018 1020 133 (parallel [
            (set (reg:DI 406)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5264 [0xffffffffffffeb70])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:371 -1
     (nil))
(insn 1020 1019 1021 133 (parallel [
            (set (reg:DI 407)
                (plus:DI (reg:DI 406)
                    (const_int 140 [0x8c])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:371 -1
     (nil))
(insn 1021 1020 1022 133 (parallel [
            (set (reg:DI 408)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5440 [0xffffffffffffeac0])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:371 -1
     (nil))
(insn 1022 1021 1023 133 (parallel [
            (set (reg:DI 409)
                (plus:DI (reg:DI 408)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:371 -1
     (nil))
(insn 1023 1022 1024 133 (set (reg:DI 4 si)
        (reg:DI 407)) quote.c:371 -1
     (nil))
(insn 1024 1023 1025 133 (set (reg:DI 5 di)
        (reg:DI 409)) quote.c:371 -1
     (nil))
(call_insn 1025 1024 1026 133 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_TPM2B_Compare") [flags 0x41]  <function_decl 0x7fa3d8628798 TSS_TPM2B_Compare>) [0 TSS_TPM2B_Compare S1 A8])
            (const_int 0 [0]))) quote.c:371 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1026 1025 1027 133 (set (reg:SI 410)
        (reg:SI 0 ax)) quote.c:371 -1
     (nil))
(insn 1027 1026 1028 133 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5508 [0xffffffffffffea7c])) [0 match+0 S4 A32])
        (reg:SI 410)) quote.c:371 -1
     (nil))
(insn 1028 1027 1029 133 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5508 [0xffffffffffffea7c])) [0 match+0 S4 A32])
            (const_int 0 [0]))) quote.c:372 -1
     (nil))
(jump_insn 1029 1028 1030 133 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1034)
            (pc))) quote.c:372 -1
     (nil)
 -> 1034)
(note 1030 1029 1031 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 1031 1030 1032 134 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC45") [flags 0x2]  <var_decl 0x7fa3d83c8bd0 *.LC45>)) quote.c:373 -1
     (nil))
(call_insn 1032 1031 1033 134 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:373 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1033 1032 1034 134 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) quote.c:374 -1
     (nil))
(code_label 1034 1033 1035 135 78 "" [2 uses])
(note 1035 1034 1036 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 1036 1035 1037 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) quote.c:377 -1
     (nil))
(jump_insn 1037 1036 1038 135 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1052)
            (pc))) quote.c:377 -1
     (nil)
 -> 1052)
(note 1038 1037 1039 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 1039 1038 1040 136 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5464 [0xffffffffffffeaa8])) [0 signatureFilename+0 S8 A64])
            (const_int 0 [0]))) quote.c:377 -1
     (nil))
(jump_insn 1040 1039 1041 136 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1052)
            (pc))) quote.c:377 -1
     (nil)
 -> 1052)
(note 1041 1040 1042 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 1042 1041 1043 137 (set (reg:DI 411)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5464 [0xffffffffffffeaa8])) [0 signatureFilename+0 S8 A64])) quote.c:378 -1
     (nil))
(insn 1043 1042 1044 137 (parallel [
            (set (reg:DI 412)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2768 [0xfffffffffffff530])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:378 -1
     (nil))
(insn 1044 1043 1045 137 (parallel [
            (set (reg:DI 413)
                (plus:DI (reg:DI 412)
                    (const_int 2498 [0x9c2])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:378 -1
     (nil))
(insn 1045 1044 1046 137 (set (reg:DI 1 dx)
        (reg:DI 411)) quote.c:378 -1
     (nil))
(insn 1046 1045 1047 137 (set (reg:DI 414)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("TSS_TPMT_SIGNATURE_Marshal") [flags 0x41]  <function_decl 0x7fa3d82db288 TSS_TPMT_SIGNATURE_Marshal>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) quote.c:378 -1
     (nil))
(insn 1047 1046 1048 137 (set (reg:DI 4 si)
        (reg:DI 414)) quote.c:378 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("TSS_TPMT_SIGNATURE_Marshal") [flags 0x41]  <function_decl 0x7fa3d82db288 TSS_TPMT_SIGNATURE_Marshal>)
        (nil)))
(insn 1048 1047 1049 137 (set (reg:DI 5 di)
        (reg:DI 413)) quote.c:378 -1
     (nil))
(call_insn 1049 1048 1050 137 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_WriteStructure") [flags 0x41]  <function_decl 0x7fa3d8628bd0 TSS_File_WriteStructure>) [0 TSS_File_WriteStructure S1 A8])
            (const_int 0 [0]))) quote.c:378 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1050 1049 1051 137 (set (reg:SI 415)
        (reg:SI 0 ax)) quote.c:378 -1
     (nil))
(insn 1051 1050 1052 137 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
        (reg:SI 415)) quote.c:378 -1
     (nil))
(code_label 1052 1051 1053 138 79 "" [2 uses])
(note 1053 1052 1054 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 1054 1053 1055 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) quote.c:382 -1
     (nil))
(jump_insn 1055 1054 1056 138 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1071)
            (pc))) quote.c:382 -1
     (nil)
 -> 1071)
(note 1056 1055 1057 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 1057 1056 1058 139 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5456 [0xffffffffffffeab0])) [0 attestInfoFilename+0 S8 A64])
            (const_int 0 [0]))) quote.c:382 -1
     (nil))
(jump_insn 1058 1057 1059 139 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1071)
            (pc))) quote.c:382 -1
     (nil)
 -> 1071)
(note 1059 1058 1060 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 1060 1059 1061 140 (set (reg:HI 275 [ D.8272 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2768 [0xfffffffffffff530])) [0 out.quoted.t.size+0 S2 A64])) quote.c:384 -1
     (nil))
(insn 1061 1060 1062 140 (set (reg:DI 276 [ D.8264 ])
        (zero_extend:DI (reg:HI 275 [ D.8272 ]))) quote.c:383 -1
     (nil))
(insn 1062 1061 1063 140 (set (reg:DI 416)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5456 [0xffffffffffffeab0])) [0 attestInfoFilename+0 S8 A64])) quote.c:383 -1
     (nil))
(insn 1063 1062 1064 140 (parallel [
            (set (reg:DI 417)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2768 [0xfffffffffffff530])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:383 -1
     (nil))
(insn 1064 1063 1065 140 (parallel [
            (set (reg:DI 418)
                (plus:DI (reg:DI 417)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:383 -1
     (nil))
(insn 1065 1064 1066 140 (set (reg:DI 1 dx)
        (reg:DI 416)) quote.c:383 -1
     (nil))
(insn 1066 1065 1067 140 (set (reg:DI 4 si)
        (reg:DI 276 [ D.8264 ])) quote.c:383 -1
     (nil))
(insn 1067 1066 1068 140 (set (reg:DI 5 di)
        (reg:DI 418)) quote.c:383 -1
     (nil))
(call_insn 1068 1067 1069 140 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_WriteBinaryFile") [flags 0x41]  <function_decl 0x7fa3d8628a20 TSS_File_WriteBinaryFile>) [0 TSS_File_WriteBinaryFile S1 A8])
            (const_int 0 [0]))) quote.c:383 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1069 1068 1070 140 (set (reg:SI 419)
        (reg:SI 0 ax)) quote.c:383 -1
     (nil))
(insn 1070 1069 1071 140 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
        (reg:SI 419)) quote.c:383 -1
     (nil))
(code_label 1071 1070 1072 141 80 "" [2 uses])
(note 1072 1071 1073 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 1073 1072 1074 141 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) quote.c:387 -1
     (nil))
(jump_insn 1074 1073 1075 141 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1095)
            (pc))) quote.c:387 -1
     (nil)
 -> 1095)
(note 1075 1074 1076 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 1076 1075 1077 142 (set (reg:SI 277 [ D.8267 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fa3d8484090 verbose>) [0 verbose+0 S4 A32])) quote.c:388 -1
     (nil))
(insn 1077 1076 1078 142 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 277 [ D.8267 ])
            (const_int 0 [0]))) quote.c:388 -1
     (nil))
(jump_insn 1078 1077 1079 142 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1083)
            (pc))) quote.c:388 -1
     (nil)
 -> 1083)
(note 1079 1078 1080 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 1080 1079 1081 143 (parallel [
            (set (reg:DI 420)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2768 [0xfffffffffffff530])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:388 -1
     (nil))
(insn 1081 1080 1082 143 (set (reg:DI 5 di)
        (reg:DI 420)) quote.c:388 -1
     (nil))
(call_insn 1082 1081 1083 143 (call (mem:QI (symbol_ref:DI ("printSignature") [flags 0x3]  <function_decl 0x7fa3d8338af8 printSignature>) [0 printSignature S1 A8])
        (const_int 0 [0])) quote.c:388 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 1083 1082 1084 144 82 "" [1 uses])
(note 1084 1083 1085 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 1085 1084 1086 144 (set (reg:SI 278 [ D.8267 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fa3d8484090 verbose>) [0 verbose+0 S4 A32])) quote.c:389 -1
     (nil))
(insn 1086 1085 1087 144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 278 [ D.8267 ])
            (const_int 0 [0]))) quote.c:389 -1
     (nil))
(jump_insn 1087 1086 1088 144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1121)
            (pc))) quote.c:389 612 {*jcc_1}
     (nil)
 -> 1121)
(note 1088 1087 1089 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 1089 1088 1090 145 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC46") [flags 0x2]  <var_decl 0x7fa3d83c8c60 *.LC46>)) quote.c:389 -1
     (nil))
(call_insn 1090 1089 1093 145 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:389 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1093 1090 1094 145 (set (pc)
        (label_ref 1121)) -1
     (nil)
 -> 1121)
(barrier 1094 1093 1095)
(code_label 1095 1094 1096 147 81 "" [1 uses])
(note 1096 1095 1097 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 1097 1096 1098 147 (set (reg:SI 421)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])) quote.c:395 -1
     (nil))
(insn 1098 1097 1099 147 (set (reg:SI 4 si)
        (reg:SI 421)) quote.c:395 -1
     (nil))
(insn 1099 1098 1100 147 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC47") [flags 0x2]  <var_decl 0x7fa3d83c8cf0 *.LC47>)) quote.c:395 -1
     (nil))
(insn 1100 1099 1101 147 (set (reg:QI 0 ax)
        (const_int 0 [0])) quote.c:395 -1
     (nil))
(call_insn 1101 1100 1102 147 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa3d86c2ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) quote.c:395 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 1102 1101 1103 147 (set (reg:SI 422)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])) quote.c:396 -1
     (nil))
(insn 1103 1102 1104 147 (parallel [
            (set (reg:DI 423)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5480 [0xffffffffffffea98])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:396 -1
     (nil))
(insn 1104 1103 1105 147 (parallel [
            (set (reg:DI 424)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5488 [0xffffffffffffea90])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:396 -1
     (nil))
(insn 1105 1104 1106 147 (parallel [
            (set (reg:DI 425)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5496 [0xffffffffffffea88])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:396 -1
     (nil))
(insn 1106 1105 1107 147 (set (reg:SI 2 cx)
        (reg:SI 422)) quote.c:396 -1
     (nil))
(insn 1107 1106 1108 147 (set (reg:DI 1 dx)
        (reg:DI 423)) quote.c:396 -1
     (nil))
(insn 1108 1107 1109 147 (set (reg:DI 4 si)
        (reg:DI 424)) quote.c:396 -1
     (nil))
(insn 1109 1108 1110 147 (set (reg:DI 5 di)
        (reg:DI 425)) quote.c:396 -1
     (nil))
(call_insn 1110 1109 1111 147 (call (mem:QI (symbol_ref:DI ("TSS_ResponseCode_toString") [flags 0x41]  <function_decl 0x7fa3d8628e58 TSS_ResponseCode_toString>) [0 TSS_ResponseCode_toString S1 A8])
        (const_int 0 [0])) quote.c:396 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 1111 1110 1112 147 (set (reg/f:DI 279 [ D.8273 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5480 [0xffffffffffffea98])) [0 num+0 S8 A64])) quote.c:397 -1
     (nil))
(insn 1112 1111 1113 147 (set (reg/f:DI 280 [ D.8273 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5488 [0xffffffffffffea90])) [0 submsg+0 S8 A64])) quote.c:397 -1
     (nil))
(insn 1113 1112 1114 147 (set (reg/f:DI 281 [ D.8273 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5496 [0xffffffffffffea88])) [0 msg+0 S8 A64])) quote.c:397 -1
     (nil))
(insn 1114 1113 1115 147 (set (reg:DI 2 cx)
        (reg/f:DI 279 [ D.8273 ])) quote.c:397 -1
     (nil))
(insn 1115 1114 1116 147 (set (reg:DI 1 dx)
        (reg/f:DI 280 [ D.8273 ])) quote.c:397 -1
     (nil))
(insn 1116 1115 1117 147 (set (reg:DI 4 si)
        (reg/f:DI 281 [ D.8273 ])) quote.c:397 -1
     (nil))
(insn 1117 1116 1118 147 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC48") [flags 0x2]  <var_decl 0x7fa3d83c8d80 *.LC48>)) quote.c:397 -1
     (nil))
(insn 1118 1117 1119 147 (set (reg:QI 0 ax)
        (const_int 0 [0])) quote.c:397 -1
     (nil))
(call_insn 1119 1118 1120 147 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa3d86c2ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) quote.c:397 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 1120 1119 1121 147 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) quote.c:398 -1
     (nil))
(code_label 1121 1120 1122 148 84 "" [2 uses])
(note 1122 1121 1123 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 1123 1122 1126 148 (set (reg:SI 282 [ D.8267 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5524 [0xffffffffffffea6c])) [0 rc+0 S4 A32])) quote.c:400 -1
     (nil))
(insn 1126 1123 1130 148 (set (reg:SI 283 [ <retval> ])
        (reg:SI 282 [ D.8267 ])) -1
     (nil))
(insn 1130 1126 1131 148 (set (reg/i:SI 0 ax)
        (reg:SI 283 [ <retval> ])) quote.c:401 -1
     (nil))
(insn 1131 1130 1132 148 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.8275+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) quote.c:401 -1
     (nil))
(jump_insn 1132 1131 1138 148 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1135)
            (pc))) quote.c:401 -1
     (nil)
 -> 1135)
(note 1138 1132 1133 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(call_insn 1133 1138 1134 151 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fa3d8394e58 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) quote.c:401 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 1134 1133 1135)
(code_label 1135 1134 1139 152 86 "" [1 uses])
(note 1139 1135 1136 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 1136 1139 0 152 (use (reg/i:SI 0 ax)) quote.c:401 -1
     (nil))

;; Function printSignature (printSignature, funcdef_no=3, decl_uid=7851, cgraph_uid=3, symbol_order=4)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 out+0 S8 A64])
        (reg:DI 5 di [ out ])) quote.c:404 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 out+0 S8 A64])) quote.c:407 -1
     (nil))
(insn 7 6 8 2 (set (reg:HI 87 [ D.8327 ])
        (mem/j:HI (plus:DI (reg/f:DI 90)
                (const_int 2502 [0x9c6])) [0 out_2(D)->signature.signature.rsassa.sig.t.size+0 S2 A16])) quote.c:407 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.8328 ])
        (zero_extend:SI (reg:HI 87 [ D.8327 ]))) quote.c:405 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 out+0 S8 A64])) quote.c:406 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg/f:DI 89 [ D.8329 ])
                (plus:DI (reg/f:DI 91)
                    (const_int 2504 [0x9c8])))
            (clobber (reg:CC 17 flags))
        ]) quote.c:406 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 out+0 S8 A64])
            (const_int 2504 [0x9c8]))
        (nil)))
(insn 11 10 12 2 (set (reg:SI 1 dx)
        (reg:SI 88 [ D.8328 ])) quote.c:405 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg/f:DI 89 [ D.8329 ])) quote.c:405 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC49") [flags 0x2]  <var_decl 0x7fa3d83f9ab0 *.LC49>)) quote.c:405 -1
     (nil))
(call_insn 14 13 17 2 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7fa3d85ef948 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) quote.c:405 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 17 14 0 2 (const_int 0 [0]) quote.c:408 -1
     (nil))

;; Function printUsage (printUsage, funcdef_no=4, decl_uid=7849, cgraph_uid=4, symbol_order=5)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) quote.c:412 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fa3d86c5000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) quote.c:412 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC50") [flags 0x2]  <var_decl 0x7fa3d83f9e10 *.LC50>)) quote.c:413 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:413 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) quote.c:414 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fa3d86c5000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) quote.c:414 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC51") [flags 0x2]  <var_decl 0x7fa3d83f9ea0 *.LC51>)) quote.c:415 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:415 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) quote.c:416 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fa3d86c5000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) quote.c:416 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC52") [flags 0x2]  <var_decl 0x7fa3d83f9f30 *.LC52>)) quote.c:417 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:417 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC53") [flags 0x2]  <var_decl 0x7fa3d8407000 *.LC53>)) quote.c:418 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:418 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC54") [flags 0x2]  <var_decl 0x7fa3d8407090 *.LC54>)) quote.c:419 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:419 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC55") [flags 0x2]  <var_decl 0x7fa3d8407120 *.LC55>)) quote.c:420 -1
     (nil))
(call_insn 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:420 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC56") [flags 0x2]  <var_decl 0x7fa3d84071b0 *.LC56>)) quote.c:421 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:421 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC57") [flags 0x2]  <var_decl 0x7fa3d8407240 *.LC57>)) quote.c:422 -1
     (nil))
(call_insn 26 25 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:422 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC58") [flags 0x2]  <var_decl 0x7fa3d84072d0 *.LC58>)) quote.c:423 -1
     (nil))
(call_insn 28 27 29 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:423 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC59") [flags 0x2]  <var_decl 0x7fa3d8407360 *.LC59>)) quote.c:424 -1
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:424 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC60") [flags 0x2]  <var_decl 0x7fa3d84073f0 *.LC60>)) quote.c:425 -1
     (nil))
(call_insn 32 31 33 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:425 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 33 32 34 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) quote.c:426 -1
     (nil))
(call_insn 34 33 35 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fa3d86c5000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) quote.c:426 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC61") [flags 0x2]  <var_decl 0x7fa3d8407480 *.LC61>)) quote.c:427 -1
     (nil))
(call_insn 36 35 37 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:427 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC62") [flags 0x2]  <var_decl 0x7fa3d8407510 *.LC62>)) quote.c:428 -1
     (nil))
(call_insn 38 37 39 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:428 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 39 38 40 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC63") [flags 0x2]  <var_decl 0x7fa3d84075a0 *.LC63>)) quote.c:429 -1
     (nil))
(call_insn 40 39 41 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:429 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 41 40 42 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC64") [flags 0x2]  <var_decl 0x7fa3d8407630 *.LC64>)) quote.c:430 -1
     (nil))
(call_insn 42 41 43 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa3d86c5360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) quote.c:430 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 43 42 44 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) quote.c:431 -1
     (nil))
(call_insn 44 43 45 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fa3d86d8000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) quote.c:431 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 45 44 0)
