
;; Function TSS_Socket_TransmitPlatform (TSS_Socket_TransmitPlatform, funcdef_no=2, decl_uid=8230, cgraph_uid=2, symbol_order=2)

Partition 0: size 4 align 4
	rc_1
Partition 1: size 4 align 4
	mssim

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 20 into block 19...
Merged blocks 19 and 20.
Merged 19 and 20 without moving.
Removing jump 102.
Merging block 21 into block 19...
Merged blocks 19 and 21.
Merged 19 and 21 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) tsssocket.c:94 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 command+0 S4 A32])
        (reg:SI 4 si [ command ])) tsssocket.c:94 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 message+0 S8 A64])
        (reg:DI 1 dx [ message ])) tsssocket.c:94 -1
     (nil))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 7 2 (set (reg/f:DI 97)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f57862a6090 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:94 -1
     (nil))
(insn 7 6 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.8687+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:94 -1
     (nil))
(insn 10 7 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) tsssocket.c:95 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:100 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 87 [ D.8683 ])
        (mem/j:SI (plus:DI (reg/f:DI 98)
                (const_int 80 [0x50])) [0 tssContext_16(D)->tssFirstTransmit+0 S4 A64])) tsssocket.c:100 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.8683 ])
            (const_int 0 [0]))) tsssocket.c:100 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) tsssocket.c:100 -1
     (nil)
 -> 70)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:102 -1
     (nil))
(jump_insn 17 16 18 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) tsssocket.c:102 -1
     (nil)
 -> 26)
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (parallel [
            (set (reg:DI 99)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:103 -1
     (nil))
(insn 20 19 21 5 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:103 -1
     (nil))
(insn 21 20 22 5 (set (reg:DI 4 si)
        (reg:DI 99)) tsssocket.c:103 -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 5 di)
        (reg:DI 100)) tsssocket.c:103 -1
     (nil))
(call_insn 23 22 24 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_GetServerType") [flags 0x3]  <function_decl 0x7f57862356c0 TSS_Socket_GetServerType>) [0 TSS_Socket_GetServerType S1 A8])
            (const_int 0 [0]))) tsssocket.c:103 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 24 23 25 5 (set (reg:SI 101)
        (reg:SI 0 ax)) tsssocket.c:103 -1
     (nil))
(insn 25 24 26 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 101)) tsssocket.c:103 -1
     (nil))
(code_label 26 25 27 6 3 "" [1 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:106 -1
     (nil))
(jump_insn 29 28 30 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) tsssocket.c:106 -1
     (nil)
 -> 49)
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 7 (set (reg:SI 88 [ D.8683 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 mssim+0 S4 A64])) tsssocket.c:107 -1
     (nil))
(insn 32 31 33 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.8683 ])
            (const_int 0 [0]))) tsssocket.c:107 -1
     (nil))
(jump_insn 33 32 34 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) tsssocket.c:107 -1
     (nil)
 -> 49)
(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 8 (set (reg/f:DI 102)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVerbose") [flags 0x40]  <var_decl 0x7f5786238090 tssVerbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:108 -1
     (nil))
(insn 36 35 37 8 (set (reg:SI 89 [ D.8683 ])
        (mem/c:SI (reg/f:DI 102) [0 tssVerbose+0 S4 A32])) tsssocket.c:108 -1
     (nil))
(insn 37 36 38 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.8683 ])
            (const_int 0 [0]))) tsssocket.c:108 -1
     (nil))
(jump_insn 38 37 39 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) tsssocket.c:108 -1
     (nil)
 -> 46)
(note 39 38 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:108 -1
     (nil))
(insn 41 40 42 9 (set (reg/f:DI 90 [ D.8684 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 103)
                (const_int 56 [0x38])) [0 tssContext_16(D)->tssServerType+0 S8 A64])) tsssocket.c:108 -1
     (nil))
(insn 42 41 43 9 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.8684 ])) tsssocket.c:108 -1
     (nil))
(insn 43 42 44 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f57862a6120 *.LC0>)) tsssocket.c:108 -1
     (nil))
(insn 44 43 45 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) tsssocket.c:108 -1
     (nil))
(call_insn 45 44 46 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5786548ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) tsssocket.c:108 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(code_label 46 45 47 10 5 "" [1 uses])
(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 720903 [0xb0007])) tsssocket.c:110 -1
     (nil))
(code_label 49 48 50 11 4 "" [2 uses])
(note 50 49 51 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:113 -1
     (nil))
(jump_insn 52 51 53 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) tsssocket.c:113 -1
     (nil)
 -> 63)
(note 53 52 54 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 12 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:114 -1
     (nil))
(insn 55 54 56 12 (set (reg:HI 91 [ D.8685 ])
        (mem/j:HI (plus:DI (reg/f:DI 104)
                (const_int 42 [0x2a])) [0 tssContext_16(D)->tssPlatformPort+0 S2 A16])) tsssocket.c:114 -1
     (nil))
(insn 56 55 57 12 (set (reg:SI 92 [ D.8683 ])
        (sign_extend:SI (reg:HI 91 [ D.8685 ]))) tsssocket.c:114 -1
     (nil))
(insn 57 56 58 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:114 -1
     (nil))
(insn 58 57 59 12 (set (reg:SI 4 si)
        (reg:SI 92 [ D.8683 ])) tsssocket.c:114 -1
     (nil))
(insn 59 58 60 12 (set (reg:DI 5 di)
        (reg:DI 105)) tsssocket.c:114 -1
     (nil))
(call_insn 60 59 61 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_Open") [flags 0x3]  <function_decl 0x7f57862350d8 TSS_Socket_Open>) [0 TSS_Socket_Open S1 A8])
            (const_int 0 [0]))) tsssocket.c:114 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 61 60 62 12 (set (reg:SI 106)
        (reg:SI 0 ax)) tsssocket.c:114 -1
     (nil))
(insn 62 61 63 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 106)) tsssocket.c:114 -1
     (nil))
(code_label 63 62 64 13 6 "" [1 uses])
(note 64 63 65 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:116 -1
     (nil))
(jump_insn 66 65 67 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) tsssocket.c:116 -1
     (nil)
 -> 70)
(note 67 66 68 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 14 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:117 -1
     (nil))
(insn 69 68 70 14 (set (mem/j:SI (plus:DI (reg/f:DI 107)
                (const_int 80 [0x50])) [0 tssContext_16(D)->tssFirstTransmit+0 S4 A64])
        (const_int 0 [0])) tsssocket.c:117 -1
     (nil))
(code_label 70 69 71 15 2 "" [2 uses])
(note 71 70 72 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:120 -1
     (nil))
(jump_insn 73 72 74 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) tsssocket.c:120 -1
     (nil)
 -> 85)
(note 74 73 75 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 16 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:121 -1
     (nil))
(insn 76 75 77 16 (set (reg:SI 93 [ D.8683 ])
        (mem/j:SI (plus:DI (reg/f:DI 108)
                (const_int 84 [0x54])) [0 tssContext_16(D)->sock_fd+0 S4 A32])) tsssocket.c:121 -1
     (nil))
(insn 77 76 78 16 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 message+0 S8 A64])) tsssocket.c:121 -1
     (nil))
(insn 78 77 79 16 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 command+0 S4 A32])) tsssocket.c:121 -1
     (nil))
(insn 79 78 80 16 (set (reg:DI 1 dx)
        (reg:DI 109)) tsssocket.c:121 -1
     (nil))
(insn 80 79 81 16 (set (reg:SI 4 si)
        (reg:SI 110)) tsssocket.c:121 -1
     (nil))
(insn 81 80 82 16 (set (reg:SI 5 di)
        (reg:SI 93 [ D.8683 ])) tsssocket.c:121 -1
     (nil))
(call_insn 82 81 83 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_SendPlatform") [flags 0x3]  <function_decl 0x7f5786235288 TSS_Socket_SendPlatform>) [0 TSS_Socket_SendPlatform S1 A8])
            (const_int 0 [0]))) tsssocket.c:121 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 83 82 84 16 (set (reg:SI 111)
        (reg:SI 0 ax)) tsssocket.c:121 -1
     (nil))
(insn 84 83 85 16 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 111)) tsssocket.c:121 -1
     (nil))
(code_label 85 84 86 17 7 "" [1 uses])
(note 86 85 87 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:123 -1
     (nil))
(jump_insn 88 87 89 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) tsssocket.c:123 -1
     (nil)
 -> 96)
(note 89 88 90 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 18 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:124 -1
     (nil))
(insn 91 90 92 18 (set (reg:SI 94 [ D.8683 ])
        (mem/j:SI (plus:DI (reg/f:DI 112)
                (const_int 84 [0x54])) [0 tssContext_16(D)->sock_fd+0 S4 A32])) tsssocket.c:124 -1
     (nil))
(insn 92 91 93 18 (set (reg:SI 5 di)
        (reg:SI 94 [ D.8683 ])) tsssocket.c:124 -1
     (nil))
(call_insn 93 92 94 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_ReceivePlatform") [flags 0x3]  <function_decl 0x7f5786235438 TSS_Socket_ReceivePlatform>) [0 TSS_Socket_ReceivePlatform S1 A8])
            (const_int 0 [0]))) tsssocket.c:124 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 94 93 95 18 (set (reg:SI 113)
        (reg:SI 0 ax)) tsssocket.c:124 -1
     (nil))
(insn 95 94 96 18 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 113)) tsssocket.c:124 -1
     (nil))
(code_label 96 95 97 19 8 "" [1 uses])
(note 97 96 98 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 101 19 (set (reg:SI 95 [ D.8686 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) tsssocket.c:126 -1
     (nil))
(insn 101 98 105 19 (set (reg:SI 96 [ <retval> ])
        (reg:SI 95 [ D.8686 ])) tsssocket.c:126 -1
     (nil))
(insn 105 101 106 19 (set (reg/i:SI 0 ax)
        (reg:SI 96 [ <retval> ])) tsssocket.c:127 -1
     (nil))
(insn 106 105 107 19 (set (reg/f:DI 115)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f57862a6090 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:127 -1
     (nil))
(insn 107 106 108 19 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.8687+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) tsssocket.c:127 -1
     (nil))
(jump_insn 108 107 114 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) tsssocket.c:127 -1
     (nil)
 -> 111)
(note 114 108 109 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(call_insn 109 114 110 22 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f578626fca8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) tsssocket.c:127 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 110 109 111)
(code_label 111 110 115 23 10 "" [1 uses])
(note 115 111 112 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 112 115 0 23 (use (reg/i:SI 0 ax)) tsssocket.c:127 -1
     (nil))

;; Function TSS_Socket_Transmit (TSS_Socket_Transmit, funcdef_no=3, decl_uid=8237, cgraph_uid=3, symbol_order=3)

Partition 0: size 4 align 4
	rc_1
Partition 1: size 4 align 4
	mssim

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 87.
Merging block 16 into block 14...
Merged blocks 14 and 16.
Merged 14 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 11 NOTE_INSN_DELETED)
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) tsssocket.c:140 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 responseBuffer+0 S8 A64])
        (reg:DI 4 si [ responseBuffer ])) tsssocket.c:140 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 read+0 S8 A64])
        (reg:DI 1 dx [ read ])) tsssocket.c:140 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 commandBuffer+0 S8 A64])
        (reg:DI 2 cx [ commandBuffer ])) tsssocket.c:140 -1
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 written+0 S4 A32])
        (reg:SI 37 r8 [ written ])) tsssocket.c:140 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 message+0 S8 A64])
        (reg:DI 38 r9 [ message ])) tsssocket.c:140 -1
     (nil))
(note 8 7 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 8 10 2 (set (reg/f:DI 94)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f57862a6090 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:140 -1
     (nil))
(insn 10 9 13 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.8694+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:140 -1
     (nil))
(insn 13 10 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) tsssocket.c:141 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:146 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 87 [ D.8691 ])
        (mem/j:SI (plus:DI (reg/f:DI 95)
                (const_int 80 [0x50])) [0 tssContext_13(D)->tssFirstTransmit+0 S4 A64])) tsssocket.c:146 -1
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.8691 ])
            (const_int 0 [0]))) tsssocket.c:146 -1
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) tsssocket.c:146 -1
     (nil)
 -> 50)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:148 -1
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) tsssocket.c:148 -1
     (nil)
 -> 29)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:149 -1
     (nil))
(insn 23 22 24 5 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:149 -1
     (nil))
(insn 24 23 25 5 (set (reg:DI 4 si)
        (reg:DI 96)) tsssocket.c:149 -1
     (nil))
(insn 25 24 26 5 (set (reg:DI 5 di)
        (reg:DI 97)) tsssocket.c:149 -1
     (nil))
(call_insn 26 25 27 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_GetServerType") [flags 0x3]  <function_decl 0x7f57862356c0 TSS_Socket_GetServerType>) [0 TSS_Socket_GetServerType S1 A8])
            (const_int 0 [0]))) tsssocket.c:149 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 27 26 28 5 (set (reg:SI 98)
        (reg:SI 0 ax)) tsssocket.c:149 -1
     (nil))
(insn 28 27 29 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 98)) tsssocket.c:149 -1
     (nil))
(code_label 29 28 30 6 13 "" [1 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:151 -1
     (nil))
(jump_insn 32 31 33 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) tsssocket.c:151 -1
     (nil)
 -> 43)
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:152 -1
     (nil))
(insn 35 34 36 7 (set (reg:HI 88 [ D.8692 ])
        (mem/j:HI (plus:DI (reg/f:DI 99)
                (const_int 40 [0x28])) [0 tssContext_13(D)->tssCommandPort+0 S2 A64])) tsssocket.c:152 -1
     (nil))
(insn 36 35 37 7 (set (reg:SI 89 [ D.8691 ])
        (sign_extend:SI (reg:HI 88 [ D.8692 ]))) tsssocket.c:152 -1
     (nil))
(insn 37 36 38 7 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:152 -1
     (nil))
(insn 38 37 39 7 (set (reg:SI 4 si)
        (reg:SI 89 [ D.8691 ])) tsssocket.c:152 -1
     (nil))
(insn 39 38 40 7 (set (reg:DI 5 di)
        (reg:DI 100)) tsssocket.c:152 -1
     (nil))
(call_insn 40 39 41 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_Open") [flags 0x3]  <function_decl 0x7f57862350d8 TSS_Socket_Open>) [0 TSS_Socket_Open S1 A8])
            (const_int 0 [0]))) tsssocket.c:152 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 41 40 42 7 (set (reg:SI 101)
        (reg:SI 0 ax)) tsssocket.c:152 -1
     (nil))
(insn 42 41 43 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 101)) tsssocket.c:152 -1
     (nil))
(code_label 43 42 44 8 14 "" [1 uses])
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:154 -1
     (nil))
(jump_insn 46 45 47 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) tsssocket.c:154 -1
     (nil)
 -> 50)
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 9 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:155 -1
     (nil))
(insn 49 48 50 9 (set (mem/j:SI (plus:DI (reg/f:DI 102)
                (const_int 80 [0x50])) [0 tssContext_13(D)->tssFirstTransmit+0 S4 A64])
        (const_int 0 [0])) tsssocket.c:155 -1
     (nil))
(code_label 50 49 51 10 12 "" [2 uses])
(note 51 50 52 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:159 -1
     (nil))
(jump_insn 53 52 54 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) tsssocket.c:159 -1
     (nil)
 -> 67)
(note 54 53 55 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 11 (set (reg:SI 90 [ D.8691 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 written+0 S4 A32])) tsssocket.c:160 -1
     (nil))
(insn 56 55 57 11 (set (reg:SI 91 [ D.8691 ])
        (zero_extend:SI (subreg:HI (reg:SI 90 [ D.8691 ]) 0))) tsssocket.c:160 -1
     (nil))
(insn 57 56 58 11 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 message+0 S8 A64])) tsssocket.c:160 -1
     (nil))
(insn 58 57 59 11 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 commandBuffer+0 S8 A64])) tsssocket.c:160 -1
     (nil))
(insn 59 58 60 11 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:160 -1
     (nil))
(insn 60 59 61 11 (set (reg:DI 2 cx)
        (reg:DI 103)) tsssocket.c:160 -1
     (nil))
(insn 61 60 62 11 (set (reg:SI 1 dx)
        (reg:SI 91 [ D.8691 ])) tsssocket.c:160 -1
     (nil))
(insn 62 61 63 11 (set (reg:DI 4 si)
        (reg:DI 104)) tsssocket.c:160 -1
     (nil))
(insn 63 62 64 11 (set (reg:DI 5 di)
        (reg:DI 105)) tsssocket.c:160 -1
     (nil))
(call_insn 64 63 65 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_SendCommand") [flags 0x3]  <function_decl 0x7f57862351b0 TSS_Socket_SendCommand>) [0 TSS_Socket_SendCommand S1 A8])
            (const_int 0 [0]))) tsssocket.c:160 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 65 64 66 11 (set (reg:SI 106)
        (reg:SI 0 ax)) tsssocket.c:160 -1
     (nil))
(insn 66 65 67 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 106)) tsssocket.c:160 -1
     (nil))
(code_label 67 66 68 12 15 "" [1 uses])
(note 68 67 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:164 -1
     (nil))
(jump_insn 70 69 71 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) tsssocket.c:164 -1
     (nil)
 -> 81)
(note 71 70 72 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 13 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 read+0 S8 A64])) tsssocket.c:165 -1
     (nil))
(insn 73 72 74 13 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 responseBuffer+0 S8 A64])) tsssocket.c:165 -1
     (nil))
(insn 74 73 75 13 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:165 -1
     (nil))
(insn 75 74 76 13 (set (reg:DI 1 dx)
        (reg:DI 107)) tsssocket.c:165 -1
     (nil))
(insn 76 75 77 13 (set (reg:DI 4 si)
        (reg:DI 108)) tsssocket.c:165 -1
     (nil))
(insn 77 76 78 13 (set (reg:DI 5 di)
        (reg:DI 109)) tsssocket.c:165 -1
     (nil))
(call_insn 78 77 79 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_ReceiveCommand") [flags 0x3]  <function_decl 0x7f5786235360 TSS_Socket_ReceiveCommand>) [0 TSS_Socket_ReceiveCommand S1 A8])
            (const_int 0 [0]))) tsssocket.c:165 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 79 78 80 13 (set (reg:SI 110)
        (reg:SI 0 ax)) tsssocket.c:165 -1
     (nil))
(insn 80 79 81 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 110)) tsssocket.c:165 -1
     (nil))
(code_label 81 80 82 14 16 "" [1 uses])
(note 82 81 83 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 86 14 (set (reg:SI 92 [ D.8693 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) tsssocket.c:167 -1
     (nil))
(insn 86 83 90 14 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.8693 ])) tsssocket.c:167 -1
     (nil))
(insn 90 86 91 14 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) tsssocket.c:168 -1
     (nil))
(insn 91 90 92 14 (set (reg/f:DI 112)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f57862a6090 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:168 -1
     (nil))
(insn 92 91 93 14 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.8694+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) tsssocket.c:168 -1
     (nil))
(jump_insn 93 92 99 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) tsssocket.c:168 -1
     (nil)
 -> 96)
(note 99 93 94 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(call_insn 94 99 95 17 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f578626fca8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) tsssocket.c:168 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 95 94 96)
(code_label 96 95 100 18 18 "" [1 uses])
(note 100 96 97 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 97 100 0 18 (use (reg/i:SI 0 ax)) tsssocket.c:168 -1
     (nil))

;; Function TSS_Socket_GetServerType (TSS_Socket_GetServerType, funcdef_no=4, decl_uid=8268, cgraph_uid=4, symbol_order=4)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 61.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) tsssocket.c:181 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 mssim+0 S8 A64])
        (reg:DI 4 si [ mssim ])) tsssocket.c:181 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) tsssocket.c:182 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:183 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) tsssocket.c:183 -1
     (nil)
 -> 55)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:184 -1
     (nil))
(insn 12 11 13 4 (set (reg/f:DI 87 [ D.8695 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 95)
                (const_int 56 [0x38])) [0 tssContext_6(D)->tssServerType+0 S8 A64])) tsssocket.c:184 -1
     (nil))
(insn 13 12 14 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f57862afcf0 *.LC1>)) tsssocket.c:184 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.8695 ])) tsssocket.c:184 -1
     (nil))
(call_insn/i 15 14 16 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f57865420d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) tsssocket.c:184 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 16 15 17 4 (set (reg:SI 88 [ D.8696 ])
        (reg:SI 0 ax)) tsssocket.c:184 -1
     (nil))
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.8696 ])
            (const_int 0 [0]))) tsssocket.c:184 -1
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) tsssocket.c:184 -1
     (nil)
 -> 24)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 mssim+0 S8 A64])) tsssocket.c:185 -1
     (nil))
(insn 21 20 22 5 (set (mem:SI (reg/f:DI 96) [0 *mssim_9(D)+0 S4 A32])
        (const_int 1 [0x1])) tsssocket.c:185 -1
     (nil))
(jump_insn 22 21 23 5 (set (pc)
        (label_ref 55)) -1
     (nil)
 -> 55)
(barrier 23 22 24)
(code_label 24 23 25 6 21 "" [1 uses])
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:187 -1
     (nil))
(insn 27 26 28 6 (set (reg/f:DI 89 [ D.8695 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 97)
                (const_int 56 [0x38])) [0 tssContext_6(D)->tssServerType+0 S8 A64])) tsssocket.c:187 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f57862afd80 *.LC2>)) tsssocket.c:187 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.8695 ])) tsssocket.c:187 -1
     (nil))
(call_insn/i 30 29 31 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f57865420d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) tsssocket.c:187 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 31 30 32 6 (set (reg:SI 90 [ D.8696 ])
        (reg:SI 0 ax)) tsssocket.c:187 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.8696 ])
            (const_int 0 [0]))) tsssocket.c:187 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) tsssocket.c:187 -1
     (nil)
 -> 39)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 mssim+0 S8 A64])) tsssocket.c:188 -1
     (nil))
(insn 36 35 37 7 (set (mem:SI (reg/f:DI 98) [0 *mssim_9(D)+0 S4 A32])
        (const_int 0 [0])) tsssocket.c:188 -1
     (nil))
(jump_insn 37 36 38 7 (set (pc)
        (label_ref 55)) -1
     (nil)
 -> 55)
(barrier 38 37 39)
(code_label 39 38 40 8 22 "" [1 uses])
(note 40 39 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 8 (set (reg/f:DI 99)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVerbose") [flags 0x40]  <var_decl 0x7f5786238090 tssVerbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:191 -1
     (nil))
(insn 42 41 43 8 (set (reg:SI 91 [ D.8696 ])
        (mem/c:SI (reg/f:DI 99) [0 tssVerbose+0 S4 A32])) tsssocket.c:191 -1
     (nil))
(insn 43 42 44 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.8696 ])
            (const_int 0 [0]))) tsssocket.c:191 -1
     (nil))
(jump_insn 44 43 45 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) tsssocket.c:191 -1
     (nil)
 -> 52)
(note 45 44 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 9 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) tsssocket.c:191 -1
     (nil))
(insn 47 46 48 9 (set (reg/f:DI 92 [ D.8695 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 100)
                (const_int 56 [0x38])) [0 tssContext_6(D)->tssServerType+0 S8 A64])) tsssocket.c:191 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 4 si)
        (reg/f:DI 92 [ D.8695 ])) tsssocket.c:191 -1
     (nil))
(insn 49 48 50 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f57862afe10 *.LC3>)) tsssocket.c:191 -1
     (nil))
(insn 50 49 51 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) tsssocket.c:191 -1
     (nil))
(call_insn 51 50 52 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5786548ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) tsssocket.c:191 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(code_label 52 51 53 10 23 "" [1 uses])
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 720903 [0xb0007])) tsssocket.c:193 -1
     (nil))
(code_label 55 54 56 11 20 "" [3 uses])
(note 56 55 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 60 11 (set (reg:SI 93 [ D.8697 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) tsssocket.c:196 -1
     (nil))
(insn 60 57 64 11 (set (reg:SI 94 [ <retval> ])
        (reg:SI 93 [ D.8697 ])) tsssocket.c:196 -1
     (nil))
(insn 64 60 65 11 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) tsssocket.c:197 -1
     (nil))
(insn 65 64 0 11 (use (reg/i:SI 0 ax)) tsssocket.c:197 -1
     (nil))

;; Function TSS_Socket_Open (TSS_Socket_Open, funcdef_no=5, decl_uid=8242, cgraph_uid=5, symbol_order=5)

Partition 1: size 16 align 16
	serv_addr
Partition 0: size 8 align 8
	host_9

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 63 from 22 to 23.
Redirecting jump 112 from 22 to 23.
Redirecting jump 182 from 22 to 23.
Merging block 22 into block 21...
Merged blocks 21 and 22.
Merged 21 and 22 without moving.
Removing jump 192.
Merging block 24 into block 23...
Merged blocks 23 and 24.
Merged 23 and 24 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) tsssocket.c:204 -1
     (nil))
(insn 3 2 4 2 (set (reg:SI 127)
        (reg:SI 4 si [ port ])) tsssocket.c:204 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [0 port+0 S2 A32])
        (subreg:HI (reg:SI 127) 0)) tsssocket.c:204 -1
     (nil))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 7 2 (set (reg/f:DI 128)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f57862a6090 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:204 -1
     (nil))
(insn 7 6 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.8710+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:204 -1
     (nil))
(insn 10 7 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 host+0 S8 A64])
        (const_int 0 [0])) tsssocket.c:210 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 129)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVverbose") [flags 0x40]  <var_decl 0x7f5786238000 tssVverbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:212 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 88 [ D.8702 ])
        (mem/c:SI (reg/f:DI 129) [0 tssVverbose+0 S4 A32])) tsssocket.c:212 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.8702 ])
            (const_int 0 [0]))) tsssocket.c:212 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) tsssocket.c:212 -1
     (nil)
 -> 27)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 tssContext+0 S8 A64])) tsssocket.c:212 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 89 [ D.8703 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 130)
                (const_int 56 [0x38])) [0 tssContext_12(D)->tssServerType+0 S8 A64])) tsssocket.c:212 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 90 [ D.8702 ])
        (sign_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -60 [0xffffffffffffffc4])) [0 port+0 S2 A32]))) tsssocket.c:212 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 tssContext+0 S8 A64])) tsssocket.c:212 -1
     (nil))
(insn 20 19 21 4 (set (reg/f:DI 91 [ D.8703 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 131)
                (const_int 48 [0x30])) [0 tssContext_12(D)->tssServerName+0 S8 A64])) tsssocket.c:212 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 2 cx)
        (reg/f:DI 89 [ D.8703 ])) tsssocket.c:212 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 1 dx)
        (reg:SI 90 [ D.8702 ])) tsssocket.c:212 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 4 si)
        (reg/f:DI 91 [ D.8703 ])) tsssocket.c:212 -1
     (nil))
(insn 24 23 25 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f5785ebbab0 *.LC4>)) tsssocket.c:212 -1
     (nil))
(insn 25 24 26 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) tsssocket.c:212 -1
     (nil))
(call_insn 26 25 27 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5786548ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) tsssocket.c:212 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(code_label 27 26 28 5 26 "" [1 uses])
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg:SI 1 dx)
        (const_int 0 [0])) tsssocket.c:227 -1
     (nil))
(insn 30 29 31 5 (set (reg:SI 4 si)
        (const_int 1 [0x1])) tsssocket.c:227 -1
     (nil))
(insn 31 30 32 5 (set (reg:SI 5 di)
        (const_int 2 [0x2])) tsssocket.c:227 -1
     (nil))
(call_insn 32 31 33 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("socket") [flags 0x41]  <function_decl 0x7f578634b288 socket>) [0 socket S1 A8])
            (const_int 0 [0]))) tsssocket.c:227 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 33 32 34 5 (set (reg:SI 92 [ D.8702 ])
        (reg:SI 0 ax)) tsssocket.c:227 -1
     (nil))
(insn 34 33 35 5 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 tssContext+0 S8 A64])) tsssocket.c:227 -1
     (nil))
(insn 35 34 36 5 (set (mem/j:SI (plus:DI (reg/f:DI 132)
                (const_int 84 [0x54])) [0 tssContext_12(D)->sock_fd+0 S4 A32])
        (reg:SI 92 [ D.8702 ])) tsssocket.c:227 -1
     (nil))
(insn 36 35 37 5 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 tssContext+0 S8 A64])) tsssocket.c:227 -1
     (nil))
(insn 37 36 38 5 (set (reg:SI 93 [ D.8702 ])
        (mem/j:SI (plus:DI (reg/f:DI 133)
                (const_int 84 [0x54])) [0 tssContext_12(D)->sock_fd+0 S4 A32])) tsssocket.c:227 -1
     (nil))
(insn 38 37 39 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 93 [ D.8702 ])
            (const_int 0 [0]))) tsssocket.c:227 -1
     (nil))
(jump_insn 39 38 40 5 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) tsssocket.c:227 -1
     (nil)
 -> 65)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (reg/f:DI 134)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVerbose") [flags 0x40]  <var_decl 0x7f5786238090 tssVerbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:228 -1
     (nil))
(insn 42 41 43 6 (set (reg:SI 94 [ D.8702 ])
        (mem/c:SI (reg/f:DI 134) [0 tssVerbose+0 S4 A32])) tsssocket.c:228 -1
     (nil))
(insn 43 42 44 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.8702 ])
            (const_int 0 [0]))) tsssocket.c:228 -1
     (nil))
(jump_insn 44 43 45 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) tsssocket.c:228 -1
     (nil)
 -> 60)
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 46 45 47 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f57862d6360 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) tsssocket.c:229 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 47 46 48 7 (set (reg/f:DI 95 [ D.8704 ])
        (reg:DI 0 ax)) tsssocket.c:229 -1
     (nil))
(insn 48 47 49 7 (set (reg:SI 96 [ D.8702 ])
        (mem:SI (reg/f:DI 95 [ D.8704 ]) [0 *_23+0 S4 A32])) tsssocket.c:228 -1
     (nil))
(insn 49 48 50 7 (set (reg:SI 5 di)
        (reg:SI 96 [ D.8702 ])) tsssocket.c:228 -1
     (nil))
(call_insn 50 49 51 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strerror") [flags 0x41]  <function_decl 0x7f57862bc5e8 strerror>) [0 strerror S1 A8])
            (const_int 0 [0]))) tsssocket.c:228 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 51 50 52 7 (set (reg/f:DI 97 [ D.8705 ])
        (reg:DI 0 ax)) tsssocket.c:228 -1
     (nil))
(call_insn/u 52 51 53 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f57862d6360 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) tsssocket.c:229 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 53 52 54 7 (set (reg/f:DI 98 [ D.8704 ])
        (reg:DI 0 ax)) tsssocket.c:229 -1
     (nil))
(insn 54 53 55 7 (set (reg:SI 99 [ D.8702 ])
        (mem:SI (reg/f:DI 98 [ D.8704 ]) [0 *_27+0 S4 A32])) tsssocket.c:228 -1
     (nil))
(insn 55 54 56 7 (set (reg:DI 1 dx)
        (reg/f:DI 97 [ D.8705 ])) tsssocket.c:228 -1
     (nil))
(insn 56 55 57 7 (set (reg:SI 4 si)
        (reg:SI 99 [ D.8702 ])) tsssocket.c:228 -1
     (nil))
(insn 57 56 58 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f5785ebbb40 *.LC5>)) tsssocket.c:228 -1
     (nil))
(insn 58 57 59 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) tsssocket.c:228 -1
     (nil))
(call_insn 59 58 60 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5786548ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) tsssocket.c:228 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 60 59 61 8 28 "" [1 uses])
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 8 (set (reg:SI 87 [ D.8701 ])
        (const_int 720904 [0xb0008])) tsssocket.c:230 -1
     (nil))
(jump_insn 63 62 64 8 (set (pc)
        (label_ref:DI 189)) tsssocket.c:230 654 {jump}
     (nil)
 -> 189)
(barrier 64 63 65)
(code_label 65 64 66 9 27 "" [1 uses])
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 9 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:233 -1
     (nil))
(insn 68 67 69 9 (set (reg:DI 1 dx)
        (const_int 16 [0x10])) tsssocket.c:233 -1
     (nil))
(insn 69 68 70 9 (set (reg:SI 4 si)
        (const_int 0 [0])) tsssocket.c:233 -1
     (nil))
(insn 70 69 71 9 (set (reg:DI 5 di)
        (reg:DI 135)) tsssocket.c:233 -1
     (nil))
(call_insn 71 70 72 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f578653f438 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) tsssocket.c:233 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 72 71 73 9 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 serv_addr.sin_family+0 S2 A64])
        (const_int 2 [0x2])) tsssocket.c:234 -1
     (nil))
(insn 73 72 74 9 (set (reg:HI 100 [ D.8706 ])
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [0 port+0 S2 A32])) tsssocket.c:235 -1
     (nil))
(insn 74 73 75 9 (set (reg:SI 101 [ D.8702 ])
        (zero_extend:SI (reg:HI 100 [ D.8706 ]))) tsssocket.c:235 -1
     (nil))
(insn 75 74 76 9 (set (reg:SI 5 di)
        (reg:SI 101 [ D.8702 ])) tsssocket.c:235 -1
     (nil))
(call_insn/u 76 75 77 9 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("htons") [flags 0x41]  <function_decl 0x7f57863615e8 htons>) [0 htons S1 A8])
            (const_int 0 [0]))) tsssocket.c:235 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 77 76 78 9 (set (reg:HI 102 [ D.8706 ])
        (reg:HI 0 ax)) tsssocket.c:235 -1
     (nil))
(insn 78 77 79 9 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -30 [0xffffffffffffffe2])) [0 serv_addr.sin_port+0 S2 A16])
        (reg:HI 102 [ D.8706 ])) tsssocket.c:235 -1
     (nil))
(insn 79 78 80 9 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 tssContext+0 S8 A64])) tsssocket.c:239 -1
     (nil))
(insn 80 79 81 9 (set (reg/f:DI 103 [ D.8703 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 136)
                (const_int 48 [0x30])) [0 tssContext_12(D)->tssServerName+0 S8 A64])) tsssocket.c:239 -1
     (nil))
(insn 81 80 82 9 (set (reg:DI 5 di)
        (reg/f:DI 103 [ D.8703 ])) tsssocket.c:239 -1
     (nil))
(call_insn 82 81 83 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("inet_addr") [flags 0x41]  <function_decl 0x7f5786361870 inet_addr>) [0 inet_addr S1 A8])
            (const_int 0 [0]))) tsssocket.c:239 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 83 82 84 9 (set (reg:SI 104 [ D.8707 ])
        (reg:SI 0 ax)) tsssocket.c:239 -1
     (nil))
(insn 84 83 85 9 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 serv_addr.sin_addr.s_addr+0 S4 A32])
        (reg:SI 104 [ D.8707 ])) tsssocket.c:239 -1
     (nil))
(insn 85 84 86 9 (set (reg:SI 105 [ D.8707 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 serv_addr.sin_addr.s_addr+0 S4 A32])) tsssocket.c:239 -1
     (nil))
(insn 86 85 87 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 105 [ D.8707 ])
            (const_int -1 [0xffffffffffffffff]))) tsssocket.c:239 -1
     (nil))
(jump_insn 87 86 88 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 132)
            (pc))) tsssocket.c:239 -1
     (nil)
 -> 132)
(note 88 87 89 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 10 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 tssContext+0 S8 A64])) tsssocket.c:242 -1
     (nil))
(insn 90 89 91 10 (set (reg/f:DI 106 [ D.8703 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 137)
                (const_int 48 [0x30])) [0 tssContext_12(D)->tssServerName+0 S8 A64])) tsssocket.c:242 -1
     (nil))
(insn 91 90 92 10 (set (reg:DI 5 di)
        (reg/f:DI 106 [ D.8703 ])) tsssocket.c:242 -1
     (nil))
(call_insn 92 91 93 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("gethostbyname") [flags 0x41]  <function_decl 0x7f5786398288 gethostbyname>) [0 gethostbyname S1 A8])
            (const_int 0 [0]))) tsssocket.c:242 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 93 92 94 10 (set (reg:DI 138)
        (reg:DI 0 ax)) tsssocket.c:242 -1
     (nil))
(insn 94 93 95 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 host+0 S8 A64])
        (reg:DI 138)) tsssocket.c:242 -1
     (nil))
(insn 95 94 96 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 host+0 S8 A64])
            (const_int 0 [0]))) tsssocket.c:242 -1
     (nil))
(jump_insn 96 95 97 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) tsssocket.c:242 -1
     (nil)
 -> 114)
(note 97 96 98 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 11 (set (reg/f:DI 139)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVerbose") [flags 0x40]  <var_decl 0x7f5786238090 tssVerbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:243 -1
     (nil))
(insn 99 98 100 11 (set (reg:SI 107 [ D.8702 ])
        (mem/c:SI (reg/f:DI 139) [0 tssVerbose+0 S4 A32])) tsssocket.c:243 -1
     (nil))
(insn 100 99 101 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ D.8702 ])
            (const_int 0 [0]))) tsssocket.c:243 -1
     (nil))
(jump_insn 101 100 102 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) tsssocket.c:243 -1
     (nil)
 -> 109)
(note 102 101 103 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 12 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 tssContext+0 S8 A64])) tsssocket.c:243 -1
     (nil))
(insn 104 103 105 12 (set (reg/f:DI 108 [ D.8703 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 140)
                (const_int 48 [0x30])) [0 tssContext_12(D)->tssServerName+0 S8 A64])) tsssocket.c:243 -1
     (nil))
(insn 105 104 106 12 (set (reg:DI 4 si)
        (reg/f:DI 108 [ D.8703 ])) tsssocket.c:243 -1
     (nil))
(insn 106 105 107 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f5785ebbbd0 *.LC6>)) tsssocket.c:243 -1
     (nil))
(insn 107 106 108 12 (set (reg:QI 0 ax)
        (const_int 0 [0])) tsssocket.c:243 -1
     (nil))
(call_insn 108 107 109 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5786548ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) tsssocket.c:243 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(code_label 109 108 110 13 32 "" [1 uses])
(note 110 109 111 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 13 (set (reg:SI 87 [ D.8701 ])
        (const_int 720904 [0xb0008])) tsssocket.c:245 -1
     (nil))
(jump_insn 112 111 113 13 (set (pc)
        (label_ref:DI 189)) tsssocket.c:245 654 {jump}
     (nil)
 -> 189)
(barrier 113 112 114)
(code_label 114 113 115 14 31 "" [1 uses])
(note 115 114 116 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 14 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 host+0 S8 A64])) tsssocket.c:247 -1
     (nil))
(insn 117 116 118 14 (set (reg:SI 109 [ D.8702 ])
        (mem/j:SI (plus:DI (reg/f:DI 141)
                (const_int 16 [0x10])) [0 host_44->h_addrtype+0 S4 A64])) tsssocket.c:247 -1
     (nil))
(insn 118 117 119 14 (set (reg:HI 110 [ D.8706 ])
        (subreg:HI (reg:SI 109 [ D.8702 ]) 0)) tsssocket.c:247 -1
     (nil))
(insn 119 118 120 14 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 serv_addr.sin_family+0 S2 A64])
        (reg:HI 110 [ D.8706 ])) tsssocket.c:247 -1
     (nil))
(insn 120 119 121 14 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 host+0 S8 A64])) tsssocket.c:248 -1
     (nil))
(insn 121 120 122 14 (set (reg:SI 111 [ D.8702 ])
        (mem/j:SI (plus:DI (reg/f:DI 142)
                (const_int 20 [0x14])) [0 host_44->h_length+0 S4 A32])) tsssocket.c:248 -1
     (nil))
(insn 122 121 123 14 (set (reg:DI 112 [ D.8708 ])
        (sign_extend:DI (reg:SI 111 [ D.8702 ]))) tsssocket.c:248 -1
     (nil))
(insn 123 122 124 14 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 host+0 S8 A64])) tsssocket.c:248 -1
     (nil))
(insn 124 123 125 14 (set (reg/f:DI 113 [ D.8709 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 143)
                (const_int 24 [0x18])) [0 host_44->h_addr_list+0 S8 A64])) tsssocket.c:248 -1
     (nil))
(insn 125 124 126 14 (set (reg/f:DI 114 [ D.8705 ])
        (mem/f:DI (reg/f:DI 113 [ D.8709 ]) [0 *_54+0 S8 A64])) tsssocket.c:248 -1
     (nil))
(insn 126 125 127 14 (parallel [
            (set (reg:DI 144)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:248 -1
     (nil))
(insn 127 126 128 14 (parallel [
            (set (reg:DI 145)
                (plus:DI (reg:DI 144)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:248 -1
     (nil))
(insn 128 127 129 14 (set (reg:DI 1 dx)
        (reg:DI 112 [ D.8708 ])) tsssocket.c:248 -1
     (nil))
(insn 129 128 130 14 (set (reg:DI 4 si)
        (reg/f:DI 114 [ D.8705 ])) tsssocket.c:248 -1
     (nil))
(insn 130 129 131 14 (set (reg:DI 5 di)
        (reg:DI 145)) tsssocket.c:248 -1
     (nil))
(call_insn 131 130 132 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7f578653ee58 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) tsssocket.c:248 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 132 131 133 15 30 "" [1 uses])
(note 133 132 134 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 15 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 tssContext+0 S8 A64])) tsssocket.c:252 -1
     (nil))
(insn 135 134 136 15 (set (reg:SI 115 [ D.8702 ])
        (mem/j:SI (plus:DI (reg/f:DI 146)
                (const_int 84 [0x54])) [0 tssContext_12(D)->sock_fd+0 S4 A32])) tsssocket.c:252 -1
     (nil))
(insn 136 135 137 15 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:252 -1
     (nil))
(insn 137 136 138 15 (set (reg:SI 1 dx)
        (const_int 16 [0x10])) tsssocket.c:252 -1
     (nil))
(insn 138 137 139 15 (set (reg:DI 4 si)
        (reg:DI 147)) tsssocket.c:252 -1
     (nil))
(insn 139 138 140 15 (set (reg:SI 5 di)
        (reg:SI 115 [ D.8702 ])) tsssocket.c:252 -1
     (nil))
(call_insn 140 139 141 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("connect") [flags 0x41]  <function_decl 0x7f578634b5e8 connect>) [0 connect S1 A8])
            (const_int 0 [0]))) tsssocket.c:252 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 141 140 142 15 (set (reg:SI 116 [ D.8702 ])
        (reg:SI 0 ax)) tsssocket.c:252 -1
     (nil))
(insn 142 141 143 15 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 116 [ D.8702 ])
            (const_int 0 [0]))) tsssocket.c:252 -1
     (nil))
(jump_insn 143 142 144 15 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) tsssocket.c:252 -1
     (nil)
 -> 184)
(note 144 143 145 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 16 (set (reg/f:DI 148)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVerbose") [flags 0x40]  <var_decl 0x7f5786238090 tssVerbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:253 -1
     (nil))
(insn 146 145 147 16 (set (reg:SI 117 [ D.8702 ])
        (mem/c:SI (reg/f:DI 148) [0 tssVerbose+0 S4 A32])) tsssocket.c:253 -1
     (nil))
(insn 147 146 148 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.8702 ])
            (const_int 0 [0]))) tsssocket.c:253 -1
     (nil))
(jump_insn 148 147 149 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 158)
            (pc))) tsssocket.c:253 -1
     (nil)
 -> 158)
(note 149 148 150 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 17 (set (reg:SI 118 [ D.8702 ])
        (sign_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -60 [0xffffffffffffffc4])) [0 port+0 S2 A32]))) tsssocket.c:253 -1
     (nil))
(insn 151 150 152 17 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 tssContext+0 S8 A64])) tsssocket.c:253 -1
     (nil))
(insn 152 151 153 17 (set (reg/f:DI 119 [ D.8703 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 149)
                (const_int 48 [0x30])) [0 tssContext_12(D)->tssServerName+0 S8 A64])) tsssocket.c:253 -1
     (nil))
(insn 153 152 154 17 (set (reg:SI 1 dx)
        (reg:SI 118 [ D.8702 ])) tsssocket.c:253 -1
     (nil))
(insn 154 153 155 17 (set (reg:DI 4 si)
        (reg/f:DI 119 [ D.8703 ])) tsssocket.c:253 -1
     (nil))
(insn 155 154 156 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f5785ebbc60 *.LC7>)) tsssocket.c:253 -1
     (nil))
(insn 156 155 157 17 (set (reg:QI 0 ax)
        (const_int 0 [0])) tsssocket.c:253 -1
     (nil))
(call_insn 157 156 158 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5786548ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) tsssocket.c:253 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(code_label 158 157 159 18 34 "" [1 uses])
(note 159 158 160 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 18 (set (reg/f:DI 150)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVerbose") [flags 0x40]  <var_decl 0x7f5786238090 tssVerbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:255 -1
     (nil))
(insn 161 160 162 18 (set (reg:SI 120 [ D.8702 ])
        (mem/c:SI (reg/f:DI 150) [0 tssVerbose+0 S4 A32])) tsssocket.c:255 -1
     (nil))
(insn 162 161 163 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ D.8702 ])
            (const_int 0 [0]))) tsssocket.c:255 -1
     (nil))
(jump_insn 163 162 164 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) tsssocket.c:255 -1
     (nil)
 -> 179)
(note 164 163 165 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 165 164 166 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f57862d6360 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) tsssocket.c:256 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 166 165 167 19 (set (reg/f:DI 121 [ D.8704 ])
        (reg:DI 0 ax)) tsssocket.c:256 -1
     (nil))
(insn 167 166 168 19 (set (reg:SI 122 [ D.8702 ])
        (mem:SI (reg/f:DI 121 [ D.8704 ]) [0 *_65+0 S4 A32])) tsssocket.c:255 -1
     (nil))
(insn 168 167 169 19 (set (reg:SI 5 di)
        (reg:SI 122 [ D.8702 ])) tsssocket.c:255 -1
     (nil))
(call_insn 169 168 170 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strerror") [flags 0x41]  <function_decl 0x7f57862bc5e8 strerror>) [0 strerror S1 A8])
            (const_int 0 [0]))) tsssocket.c:255 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 170 169 171 19 (set (reg/f:DI 123 [ D.8705 ])
        (reg:DI 0 ax)) tsssocket.c:255 -1
     (nil))
(call_insn/u 171 170 172 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f57862d6360 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) tsssocket.c:256 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 172 171 173 19 (set (reg/f:DI 124 [ D.8704 ])
        (reg:DI 0 ax)) tsssocket.c:256 -1
     (nil))
(insn 173 172 174 19 (set (reg:SI 125 [ D.8702 ])
        (mem:SI (reg/f:DI 124 [ D.8704 ]) [0 *_69+0 S4 A32])) tsssocket.c:255 -1
     (nil))
(insn 174 173 175 19 (set (reg:DI 1 dx)
        (reg/f:DI 123 [ D.8705 ])) tsssocket.c:255 -1
     (nil))
(insn 175 174 176 19 (set (reg:SI 4 si)
        (reg:SI 125 [ D.8702 ])) tsssocket.c:255 -1
     (nil))
(insn 176 175 177 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f5785ebbcf0 *.LC8>)) tsssocket.c:255 -1
     (nil))
(insn 177 176 178 19 (set (reg:QI 0 ax)
        (const_int 0 [0])) tsssocket.c:255 -1
     (nil))
(call_insn 178 177 179 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5786548ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) tsssocket.c:255 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 179 178 180 20 35 "" [1 uses])
(note 180 179 181 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 20 (set (reg:SI 87 [ D.8701 ])
        (const_int 720904 [0xb0008])) tsssocket.c:257 -1
     (nil))
(jump_insn 182 181 183 20 (set (pc)
        (label_ref:DI 189)) tsssocket.c:257 654 {jump}
     (nil)
 -> 189)
(barrier 183 182 184)
(code_label 184 183 185 21 33 "" [1 uses])
(note 185 184 186 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 189 21 (set (reg:SI 87 [ D.8701 ])
        (const_int 0 [0])) tsssocket.c:272 -1
     (nil))
(code_label 189 186 190 23 36 "" [3 uses])
(note 190 189 191 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 195 23 (set (reg:SI 126 [ <retval> ])
        (reg:SI 87 [ D.8701 ])) -1
     (nil))
(insn 195 191 196 23 (set (reg/i:SI 0 ax)
        (reg:SI 126 [ <retval> ])) tsssocket.c:273 -1
     (nil))
(insn 196 195 197 23 (set (reg/f:DI 152)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f57862a6090 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:273 -1
     (nil))
(insn 197 196 198 23 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.8710+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) tsssocket.c:273 -1
     (nil))
(jump_insn 198 197 204 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 201)
            (pc))) tsssocket.c:273 -1
     (nil)
 -> 201)
(note 204 198 199 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(call_insn 199 204 200 25 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f578626fca8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) tsssocket.c:273 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 200 199 201)
(code_label 201 200 205 26 37 "" [1 uses])
(note 205 201 202 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 202 205 0 26 (use (reg/i:SI 0 ax)) tsssocket.c:273 -1
     (nil))

;; Function TSS_Socket_SendCommand (TSS_Socket_SendCommand, funcdef_no=6, decl_uid=8247, cgraph_uid=6, symbol_order=6)

Partition 0: size 4 align 4
	rc_1
Partition 4: size 4 align 4
	lengthNbo	locality	commandType
Partition 1: size 4 align 4
	mssim

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 23 into block 22...
Merged blocks 22 and 23.
Merged 22 and 23 without moving.
Removing jump 139.
Merging block 24 into block 22...
Merged blocks 22 and 24.
Merged 22 and 24 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) tsssocket.c:290 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) tsssocket.c:290 -1
     (nil))
(insn 4 3 6 2 (set (reg:SI 103)
        (reg:SI 1 dx [ length ])) tsssocket.c:290 -1
     (nil))
(insn 6 4 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 message+0 S8 A64])
        (reg:DI 2 cx [ message ])) tsssocket.c:290 -1
     (nil))
(insn 5 6 7 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 length+0 S2 A32])
        (subreg:HI (reg:SI 103) 0)) tsssocket.c:290 -1
     (nil))
(note 7 5 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 7 9 2 (set (reg/f:DI 104)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f57862a6090 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:290 -1
     (nil))
(insn 9 8 12 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.8721+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:290 -1
     (nil))
(insn 12 9 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) tsssocket.c:291 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])) [0 message+0 S8 A64])
            (const_int 0 [0]))) tsssocket.c:295 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) tsssocket.c:295 -1
     (nil)
 -> 26)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/f:DI 105)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVverbose") [flags 0x40]  <var_decl 0x7f5786238000 tssVverbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:296 -1
     (nil))
(insn 17 16 18 4 (set (reg:SI 87 [ D.8716 ])
        (mem/c:SI (reg/f:DI 105) [0 tssVverbose+0 S4 A32])) tsssocket.c:296 -1
     (nil))
(insn 18 17 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.8716 ])
            (const_int 0 [0]))) tsssocket.c:296 -1
     (nil))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) tsssocket.c:296 -1
     (nil)
 -> 26)
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 message+0 S8 A64])) tsssocket.c:296 -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 4 si)
        (reg:DI 106)) tsssocket.c:296 -1
     (nil))
(insn 23 22 24 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f5785ecf000 *.LC9>)) tsssocket.c:296 -1
     (nil))
(insn 24 23 25 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) tsssocket.c:296 -1
     (nil))
(call_insn 25 24 26 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5786548ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) tsssocket.c:296 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(code_label 26 25 27 6 39 "" [2 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:299 -1
     (nil))
(jump_insn 29 28 30 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) tsssocket.c:299 -1
     (nil)
 -> 42)
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 7 (set (reg/f:DI 107)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVverbose") [flags 0x40]  <var_decl 0x7f5786238000 tssVverbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:299 -1
     (nil))
(insn 32 31 33 7 (set (reg:SI 88 [ D.8716 ])
        (mem/c:SI (reg/f:DI 107) [0 tssVverbose+0 S4 A32])) tsssocket.c:299 -1
     (nil))
(insn 33 32 34 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.8716 ])
            (const_int 0 [0]))) tsssocket.c:299 -1
     (nil))
(jump_insn 34 33 35 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) tsssocket.c:299 -1
     (nil)
 -> 42)
(note 35 34 36 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 8 (set (reg:SI 89 [ D.8717 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [0 length+0 S2 A32]))) tsssocket.c:300 -1
     (nil))
(insn 37 36 38 8 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 buffer+0 S8 A64])) tsssocket.c:300 -1
     (nil))
(insn 38 37 39 8 (set (reg:SI 1 dx)
        (reg:SI 89 [ D.8717 ])) tsssocket.c:300 -1
     (nil))
(insn 39 38 40 8 (set (reg:DI 4 si)
        (reg:DI 108)) tsssocket.c:300 -1
     (nil))
(insn 40 39 41 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f5785ecf090 *.LC10>)) tsssocket.c:300 -1
     (nil))
(call_insn 41 40 42 8 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7f57860ec948 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) tsssocket.c:300 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(code_label 42 41 43 9 40 "" [2 uses])
(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:304 -1
     (nil))
(jump_insn 45 44 46 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) tsssocket.c:304 -1
     (nil)
 -> 54)
(note 46 45 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 10 (parallel [
            (set (reg:DI 109)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:305 -1
     (nil))
(insn 48 47 49 10 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 tssContext+0 S8 A64])) tsssocket.c:305 -1
     (nil))
(insn 49 48 50 10 (set (reg:DI 4 si)
        (reg:DI 109)) tsssocket.c:305 -1
     (nil))
(insn 50 49 51 10 (set (reg:DI 5 di)
        (reg:DI 110)) tsssocket.c:305 -1
     (nil))
(call_insn 51 50 52 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_GetServerType") [flags 0x3]  <function_decl 0x7f57862356c0 TSS_Socket_GetServerType>) [0 TSS_Socket_GetServerType S1 A8])
            (const_int 0 [0]))) tsssocket.c:305 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 52 51 53 10 (set (reg:SI 111)
        (reg:SI 0 ax)) tsssocket.c:305 -1
     (nil))
(insn 53 52 54 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 111)) tsssocket.c:305 -1
     (nil))
(code_label 54 53 55 11 41 "" [1 uses])
(note 55 54 56 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:308 -1
     (nil))
(jump_insn 57 56 58 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) tsssocket.c:308 -1
     (nil)
 -> 76)
(note 58 57 59 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 12 (set (reg:SI 90 [ D.8716 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 mssim+0 S4 A32])) tsssocket.c:308 -1
     (nil))
(insn 60 59 61 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.8716 ])
            (const_int 0 [0]))) tsssocket.c:308 -1
     (nil))
(jump_insn 61 60 62 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) tsssocket.c:308 -1
     (nil)
 -> 76)
(note 62 61 63 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 13 (set (reg:SI 5 di)
        (const_int 8 [0x8])) tsssocket.c:309 -1
     (nil))
(call_insn/u 64 63 65 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("htonl") [flags 0x41]  <function_decl 0x7f5786361510 htonl>) [0 htonl S1 A8])
            (const_int 0 [0]))) tsssocket.c:309 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 65 64 66 13 (set (reg:SI 91 [ D.8717 ])
        (reg:SI 0 ax)) tsssocket.c:309 -1
     (nil))
(insn 66 65 67 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 commandType+0 S4 A64])
        (reg:SI 91 [ D.8717 ])) tsssocket.c:309 -1
     (nil))
(insn 67 66 68 13 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 tssContext+0 S8 A64])) tsssocket.c:310 -1
     (nil))
(insn 68 67 69 13 (set (reg:SI 92 [ D.8716 ])
        (mem/j:SI (plus:DI (reg/f:DI 112)
                (const_int 84 [0x54])) [0 tssContext_23(D)->sock_fd+0 S4 A32])) tsssocket.c:310 -1
     (nil))
(insn 69 68 70 13 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:310 -1
     (nil))
(insn 70 69 71 13 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) tsssocket.c:310 -1
     (nil))
(insn 71 70 72 13 (set (reg:DI 4 si)
        (reg:DI 113)) tsssocket.c:310 -1
     (nil))
(insn 72 71 73 13 (set (reg:SI 5 di)
        (reg:SI 92 [ D.8716 ])) tsssocket.c:310 -1
     (nil))
(call_insn 73 72 74 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_SendBytes") [flags 0x3]  <function_decl 0x7f57862355e8 TSS_Socket_SendBytes>) [0 TSS_Socket_SendBytes S1 A8])
            (const_int 0 [0]))) tsssocket.c:310 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 74 73 75 13 (set (reg:SI 114)
        (reg:SI 0 ax)) tsssocket.c:310 -1
     (nil))
(insn 75 74 76 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 114)) tsssocket.c:310 -1
     (nil))
(code_label 76 75 77 14 42 "" [2 uses])
(note 77 76 78 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:312 -1
     (nil))
(jump_insn 79 78 80 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) tsssocket.c:312 -1
     (nil)
 -> 95)
(note 80 79 81 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 15 (set (reg:SI 93 [ D.8716 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 mssim+0 S4 A32])) tsssocket.c:312 -1
     (nil))
(insn 82 81 83 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.8716 ])
            (const_int 0 [0]))) tsssocket.c:312 -1
     (nil))
(jump_insn 83 82 84 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) tsssocket.c:312 -1
     (nil)
 -> 95)
(note 84 83 85 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 16 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 locality+0 S1 A64])
        (const_int 0 [0])) tsssocket.c:313 -1
     (nil))
(insn 86 85 87 16 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 tssContext+0 S8 A64])) tsssocket.c:314 -1
     (nil))
(insn 87 86 88 16 (set (reg:SI 94 [ D.8716 ])
        (mem/j:SI (plus:DI (reg/f:DI 115)
                (const_int 84 [0x54])) [0 tssContext_23(D)->sock_fd+0 S4 A32])) tsssocket.c:314 -1
     (nil))
(insn 88 87 89 16 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:314 -1
     (nil))
(insn 89 88 90 16 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) tsssocket.c:314 -1
     (nil))
(insn 90 89 91 16 (set (reg:DI 4 si)
        (reg:DI 116)) tsssocket.c:314 -1
     (nil))
(insn 91 90 92 16 (set (reg:SI 5 di)
        (reg:SI 94 [ D.8716 ])) tsssocket.c:314 -1
     (nil))
(call_insn 92 91 93 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_SendBytes") [flags 0x3]  <function_decl 0x7f57862355e8 TSS_Socket_SendBytes>) [0 TSS_Socket_SendBytes S1 A8])
            (const_int 0 [0]))) tsssocket.c:314 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 93 92 94 16 (set (reg:SI 117)
        (reg:SI 0 ax)) tsssocket.c:314 -1
     (nil))
(insn 94 93 95 16 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 117)) tsssocket.c:314 -1
     (nil))
(code_label 95 94 96 17 43 "" [2 uses])
(note 96 95 97 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:316 -1
     (nil))
(jump_insn 98 97 99 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) tsssocket.c:316 -1
     (nil)
 -> 118)
(note 99 98 100 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 18 (set (reg:SI 95 [ D.8716 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 mssim+0 S4 A32])) tsssocket.c:316 -1
     (nil))
(insn 101 100 102 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.8716 ])
            (const_int 0 [0]))) tsssocket.c:316 -1
     (nil))
(jump_insn 102 101 103 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) tsssocket.c:316 -1
     (nil)
 -> 118)
(note 103 102 104 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 19 (set (reg:SI 96 [ D.8717 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [0 length+0 S2 A32]))) tsssocket.c:317 -1
     (nil))
(insn 105 104 106 19 (set (reg:SI 5 di)
        (reg:SI 96 [ D.8717 ])) tsssocket.c:317 -1
     (nil))
(call_insn/u 106 105 107 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("htonl") [flags 0x41]  <function_decl 0x7f5786361510 htonl>) [0 htonl S1 A8])
            (const_int 0 [0]))) tsssocket.c:317 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 107 106 108 19 (set (reg:SI 97 [ D.8717 ])
        (reg:SI 0 ax)) tsssocket.c:317 -1
     (nil))
(insn 108 107 109 19 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 lengthNbo+0 S4 A64])
        (reg:SI 97 [ D.8717 ])) tsssocket.c:317 -1
     (nil))
(insn 109 108 110 19 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 tssContext+0 S8 A64])) tsssocket.c:318 -1
     (nil))
(insn 110 109 111 19 (set (reg:SI 98 [ D.8716 ])
        (mem/j:SI (plus:DI (reg/f:DI 118)
                (const_int 84 [0x54])) [0 tssContext_23(D)->sock_fd+0 S4 A32])) tsssocket.c:318 -1
     (nil))
(insn 111 110 112 19 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:318 -1
     (nil))
(insn 112 111 113 19 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) tsssocket.c:318 -1
     (nil))
(insn 113 112 114 19 (set (reg:DI 4 si)
        (reg:DI 119)) tsssocket.c:318 -1
     (nil))
(insn 114 113 115 19 (set (reg:SI 5 di)
        (reg:SI 98 [ D.8716 ])) tsssocket.c:318 -1
     (nil))
(call_insn 115 114 116 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_SendBytes") [flags 0x3]  <function_decl 0x7f57862355e8 TSS_Socket_SendBytes>) [0 TSS_Socket_SendBytes S1 A8])
            (const_int 0 [0]))) tsssocket.c:318 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 116 115 117 19 (set (reg:SI 120)
        (reg:SI 0 ax)) tsssocket.c:318 -1
     (nil))
(insn 117 116 118 19 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 120)) tsssocket.c:318 -1
     (nil))
(code_label 118 117 119 20 44 "" [2 uses])
(note 119 118 120 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:321 -1
     (nil))
(jump_insn 121 120 122 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 133)
            (pc))) tsssocket.c:321 -1
     (nil)
 -> 133)
(note 122 121 123 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 21 (set (reg:DI 99 [ D.8718 ])
        (zero_extend:DI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [0 length+0 S2 A32]))) tsssocket.c:322 -1
     (nil))
(insn 124 123 125 21 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 tssContext+0 S8 A64])) tsssocket.c:322 -1
     (nil))
(insn 125 124 126 21 (set (reg:SI 100 [ D.8716 ])
        (mem/j:SI (plus:DI (reg/f:DI 121)
                (const_int 84 [0x54])) [0 tssContext_23(D)->sock_fd+0 S4 A32])) tsssocket.c:322 -1
     (nil))
(insn 126 125 127 21 (set (reg:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 buffer+0 S8 A64])) tsssocket.c:322 -1
     (nil))
(insn 127 126 128 21 (set (reg:DI 1 dx)
        (reg:DI 99 [ D.8718 ])) tsssocket.c:322 -1
     (nil))
(insn 128 127 129 21 (set (reg:DI 4 si)
        (reg:DI 122)) tsssocket.c:322 -1
     (nil))
(insn 129 128 130 21 (set (reg:SI 5 di)
        (reg:SI 100 [ D.8716 ])) tsssocket.c:322 -1
     (nil))
(call_insn 130 129 131 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_SendBytes") [flags 0x3]  <function_decl 0x7f57862355e8 TSS_Socket_SendBytes>) [0 TSS_Socket_SendBytes S1 A8])
            (const_int 0 [0]))) tsssocket.c:322 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 131 130 132 21 (set (reg:SI 123)
        (reg:SI 0 ax)) tsssocket.c:322 -1
     (nil))
(insn 132 131 133 21 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 123)) tsssocket.c:322 -1
     (nil))
(code_label 133 132 134 22 45 "" [1 uses])
(note 134 133 135 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 138 22 (set (reg:SI 101 [ D.8719 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) tsssocket.c:324 -1
     (nil))
(insn 138 135 142 22 (set (reg:SI 102 [ <retval> ])
        (reg:SI 101 [ D.8719 ])) tsssocket.c:324 -1
     (nil))
(insn 142 138 143 22 (set (reg/i:SI 0 ax)
        (reg:SI 102 [ <retval> ])) tsssocket.c:325 -1
     (nil))
(insn 143 142 144 22 (set (reg/f:DI 125)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f57862a6090 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:325 -1
     (nil))
(insn 144 143 145 22 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.8721+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) tsssocket.c:325 -1
     (nil))
(jump_insn 145 144 151 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) tsssocket.c:325 -1
     (nil)
 -> 148)
(note 151 145 146 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(call_insn 146 151 147 25 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f578626fca8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) tsssocket.c:325 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 147 146 148)
(code_label 148 147 152 26 47 "" [1 uses])
(note 152 148 149 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 149 152 0 26 (use (reg/i:SI 0 ax)) tsssocket.c:325 -1
     (nil))

;; Function TSS_Socket_SendPlatform (TSS_Socket_SendPlatform, funcdef_no=7, decl_uid=8251, cgraph_uid=7, symbol_order=7)

Partition 0: size 4 align 4
	rc_1
Partition 1: size 4 align 4
	commandNbo

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 60.
Merging block 12 into block 10...
Merged blocks 10 and 12.
Merged 10 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 sock_fd+0 S4 A32])
        (reg:SI 5 di [ sock_fd ])) tsssocket.c:335 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 command+0 S4 A32])
        (reg:SI 4 si [ command ])) tsssocket.c:335 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 message+0 S8 A64])
        (reg:DI 1 dx [ message ])) tsssocket.c:335 -1
     (nil))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 7 2 (set (reg/f:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f57862a6090 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:335 -1
     (nil))
(insn 7 6 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.8727+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:335 -1
     (nil))
(insn 10 7 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) tsssocket.c:336 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 message+0 S8 A64])
            (const_int 0 [0]))) tsssocket.c:338 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) tsssocket.c:338 -1
     (nil)
 -> 24)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 93)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVverbose") [flags 0x40]  <var_decl 0x7f5786238000 tssVverbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:339 -1
     (nil))
(insn 15 14 16 4 (set (reg:SI 87 [ D.8724 ])
        (mem/c:SI (reg/f:DI 93) [0 tssVverbose+0 S4 A32])) tsssocket.c:339 -1
     (nil))
(insn 16 15 17 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.8724 ])
            (const_int 0 [0]))) tsssocket.c:339 -1
     (nil))
(jump_insn 17 16 18 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) tsssocket.c:339 -1
     (nil)
 -> 24)
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 message+0 S8 A64])) tsssocket.c:339 -1
     (nil))
(insn 20 19 21 5 (set (reg:DI 4 si)
        (reg:DI 94)) tsssocket.c:339 -1
     (nil))
(insn 21 20 22 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f5785edd000 *.LC11>)) tsssocket.c:339 -1
     (nil))
(insn 22 21 23 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) tsssocket.c:339 -1
     (nil))
(call_insn 23 22 24 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5786548ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) tsssocket.c:339 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(code_label 24 23 25 6 49 "" [2 uses])
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 95)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVverbose") [flags 0x40]  <var_decl 0x7f5786238000 tssVverbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:341 -1
     (nil))
(insn 27 26 28 6 (set (reg:SI 88 [ D.8724 ])
        (mem/c:SI (reg/f:DI 95) [0 tssVverbose+0 S4 A32])) tsssocket.c:341 -1
     (nil))
(insn 28 27 29 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.8724 ])
            (const_int 0 [0]))) tsssocket.c:341 -1
     (nil))
(jump_insn 29 28 30 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) tsssocket.c:341 -1
     (nil)
 -> 36)
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 7 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 command+0 S4 A32])) tsssocket.c:341 -1
     (nil))
(insn 32 31 33 7 (set (reg:SI 4 si)
        (reg:SI 96)) tsssocket.c:341 -1
     (nil))
(insn 33 32 34 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f5785edd090 *.LC12>)) tsssocket.c:341 -1
     (nil))
(insn 34 33 35 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) tsssocket.c:341 -1
     (nil))
(call_insn 35 34 36 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5786548ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) tsssocket.c:341 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 36 35 37 8 50 "" [1 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:343 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) tsssocket.c:343 -1
     (nil)
 -> 54)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 command+0 S4 A32])) tsssocket.c:344 -1
     (nil))
(insn 42 41 43 9 (set (reg:SI 5 di)
        (reg:SI 97)) tsssocket.c:344 -1
     (nil))
(call_insn/u 43 42 44 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("htonl") [flags 0x41]  <function_decl 0x7f5786361510 htonl>) [0 htonl S1 A8])
            (const_int 0 [0]))) tsssocket.c:344 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 44 43 45 9 (set (reg:SI 89 [ D.8725 ])
        (reg:SI 0 ax)) tsssocket.c:344 -1
     (nil))
(insn 45 44 46 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 commandNbo+0 S4 A64])
        (reg:SI 89 [ D.8725 ])) tsssocket.c:344 -1
     (nil))
(insn 46 45 47 9 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:345 -1
     (nil))
(insn 47 46 48 9 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 sock_fd+0 S4 A32])) tsssocket.c:345 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) tsssocket.c:345 -1
     (nil))
(insn 49 48 50 9 (set (reg:DI 4 si)
        (reg:DI 98)) tsssocket.c:345 -1
     (nil))
(insn 50 49 51 9 (set (reg:SI 5 di)
        (reg:SI 99)) tsssocket.c:345 -1
     (nil))
(call_insn 51 50 52 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_SendBytes") [flags 0x3]  <function_decl 0x7f57862355e8 TSS_Socket_SendBytes>) [0 TSS_Socket_SendBytes S1 A8])
            (const_int 0 [0]))) tsssocket.c:345 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 52 51 53 9 (set (reg:SI 100)
        (reg:SI 0 ax)) tsssocket.c:345 -1
     (nil))
(insn 53 52 54 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 100)) tsssocket.c:345 -1
     (nil))
(code_label 54 53 55 10 51 "" [1 uses])
(note 55 54 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 59 10 (set (reg:SI 90 [ D.8726 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) tsssocket.c:347 -1
     (nil))
(insn 59 56 63 10 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.8726 ])) tsssocket.c:347 -1
     (nil))
(insn 63 59 64 10 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) tsssocket.c:348 -1
     (nil))
(insn 64 63 65 10 (set (reg/f:DI 102)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f57862a6090 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:348 -1
     (nil))
(insn 65 64 66 10 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.8727+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) tsssocket.c:348 -1
     (nil))
(jump_insn 66 65 72 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) tsssocket.c:348 -1
     (nil)
 -> 69)
(note 72 66 67 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(call_insn 67 72 68 13 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f578626fca8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) tsssocket.c:348 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 68 67 69)
(code_label 69 68 73 14 53 "" [1 uses])
(note 73 69 70 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 70 73 0 14 (use (reg/i:SI 0 ax)) tsssocket.c:348 -1
     (nil))

;; Function TSS_Socket_SendBytes (TSS_Socket_SendBytes, funcdef_no=8, decl_uid=8265, cgraph_uid=8, symbol_order=8)

Partition 0: size 8 align 8
	nleft_1
Partition 2: size 4 align 4
	nwritten_7
Partition 1: size 4 align 4
	offset_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 62.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 sock_fd+0 S4 A32])
        (reg:SI 5 di [ sock_fd ])) tsssocket.c:357 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) tsssocket.c:357 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 length+0 S8 A64])
        (reg:DI 1 dx [ length ])) tsssocket.c:357 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 nwritten+0 S4 A32])
        (const_int 0 [0])) tsssocket.c:358 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 nleft+0 S8 A64])
        (const_int 0 [0])) tsssocket.c:359 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 offset+0 S4 A32])
        (const_int 0 [0])) tsssocket.c:360 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 95)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 length+0 S8 A64])) tsssocket.c:362 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 nleft+0 S8 A64])
        (reg:DI 95)) tsssocket.c:362 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (label_ref 52)) tsssocket.c:363 -1
     (nil)
 -> 52)
(barrier 14 13 54)
(code_label 54 14 15 4 59 "" [1 uses])
(note 15 54 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:DI 88 [ D.8731 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 offset+0 S4 A32]))) tsssocket.c:365 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) tsssocket.c:365 -1
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg/f:DI 89 [ D.8732 ])
                (plus:DI (reg:DI 88 [ D.8731 ])
                    (reg/f:DI 96)))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:365 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
            (reg:DI 88 [ D.8731 ]))
        (nil)))
(insn 19 18 20 4 (set (reg:DI 97)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 nleft+0 S8 A64])) tsssocket.c:365 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 sock_fd+0 S4 A32])) tsssocket.c:365 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 1 dx)
        (reg:DI 97)) tsssocket.c:365 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 4 si)
        (reg/f:DI 89 [ D.8732 ])) tsssocket.c:365 -1
     (nil))
(insn 23 22 24 4 (set (reg:SI 5 di)
        (reg:SI 98)) tsssocket.c:365 -1
     (nil))
(call_insn 24 23 25 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x7f57862d6870 write>) [0 write S1 A8])
            (const_int 0 [0]))) tsssocket.c:365 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 25 24 26 4 (set (reg:DI 90 [ D.8733 ])
        (reg:DI 0 ax)) tsssocket.c:365 -1
     (nil))
(insn 26 25 27 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 nwritten+0 S4 A32])
        (subreg:SI (reg:DI 90 [ D.8733 ]) 0)) tsssocket.c:365 -1
     (nil))
(insn 27 26 28 4 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 nwritten+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:366 -1
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) tsssocket.c:366 -1
     (nil)
 -> 45)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg/f:DI 99)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVerbose") [flags 0x40]  <var_decl 0x7f5786238090 tssVerbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:367 -1
     (nil))
(insn 31 30 32 5 (set (reg:SI 93 [ D.8736 ])
        (mem/c:SI (reg/f:DI 99) [0 tssVerbose+0 S4 A32])) tsssocket.c:367 -1
     (nil))
(insn 32 31 33 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.8736 ])
            (const_int 0 [0]))) tsssocket.c:367 -1
     (nil))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) tsssocket.c:367 -1
     (nil)
 -> 40)
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 nwritten+0 S4 A32])) tsssocket.c:367 -1
     (nil))
(insn 36 35 37 6 (set (reg:SI 4 si)
        (reg:SI 100)) tsssocket.c:367 -1
     (nil))
(insn 37 36 38 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f5785eddc60 *.LC13>)) tsssocket.c:367 -1
     (nil))
(insn 38 37 39 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) tsssocket.c:367 -1
     (nil))
(call_insn 39 38 40 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5786548ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) tsssocket.c:367 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 40 39 41 7 57 "" [1 uses])
(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 7 (set (reg:SI 87 [ D.8730 ])
        (const_int 720905 [0xb0009])) tsssocket.c:368 -1
     (nil))
(jump_insn 43 42 44 7 (set (pc)
        (label_ref 59)) tsssocket.c:368 -1
     (nil)
 -> 59)
(barrier 44 43 45)
(code_label 45 44 46 8 56 "" [1 uses])
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 8 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 nwritten+0 S4 A32])) tsssocket.c:379 -1
     (nil))
(insn 48 47 49 8 (set (reg:DI 91 [ D.8734 ])
        (sign_extend:DI (reg:SI 101))) tsssocket.c:379 -1
     (nil))
(insn 49 48 50 8 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 nleft+0 S8 A64])
                (minus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 nleft+0 S8 A64])
                    (reg:DI 91 [ D.8734 ])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:379 -1
     (nil))
(insn 50 49 51 8 (set (reg:SI 92 [ D.8735 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 nwritten+0 S4 A32])) tsssocket.c:380 -1
     (nil))
(insn 51 50 52 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 offset+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 offset+0 S4 A32])
                    (reg:SI 92 [ D.8735 ])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:380 -1
     (nil))
(code_label 52 51 53 9 55 "" [1 uses])
(note 53 52 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 55 53 56 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 nleft+0 S8 A64])
            (const_int 0 [0]))) tsssocket.c:363 -1
     (nil))
(jump_insn 56 55 57 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) tsssocket.c:363 -1
     (nil)
 -> 54)
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (set (reg:SI 87 [ D.8730 ])
        (const_int 0 [0])) tsssocket.c:382 -1
     (nil))
(code_label 59 58 60 11 58 "" [1 uses])
(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 65 11 (set (reg:SI 94 [ <retval> ])
        (reg:SI 87 [ D.8730 ])) -1
     (nil))
(insn 65 61 66 11 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) tsssocket.c:383 -1
     (nil))
(insn 66 65 0 11 (use (reg/i:SI 0 ax)) tsssocket.c:383 -1
     (nil))

;; Function TSS_Socket_ReceiveCommand (TSS_Socket_ReceiveCommand, funcdef_no=9, decl_uid=8255, cgraph_uid=9, symbol_order=9)

Partition 3: size 8 align 8
	bufferPtr
Partition 0: size 4 align 4
	rc_1
Partition 7: size 4 align 4
	acknowledgement
Partition 6: size 4 align 4
	mssim
Partition 5: size 4 align 4
	size
Partition 4: size 4 align 4
	responseCode
Partition 2: size 4 align 4
	responseLength
Partition 1: size 4 align 4
	responseSize

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 36 into block 35...
Merged blocks 35 and 36.
Merged 35 and 36 without moving.
Removing jump 222.
Merging block 37 into block 35...
Merged blocks 35 and 37.
Merged 35 and 37 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) tsssocket.c:401 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) tsssocket.c:401 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 length+0 S8 A64])
        (reg:DI 1 dx [ length ])) tsssocket.c:401 -1
     (nil))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 7 2 (set (reg/f:DI 118)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f57862a6090 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:401 -1
     (nil))
(insn 7 6 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.8742+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:401 -1
     (nil))
(insn 10 7 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (const_int 0 [0])) tsssocket.c:402 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 responseSize+0 S4 A32])
        (const_int 0 [0])) tsssocket.c:403 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 responseLength+0 S4 A64])
        (const_int 0 [0])) tsssocket.c:404 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 buffer+0 S8 A64])) tsssocket.c:405 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bufferPtr+0 S8 A64])
        (reg/f:DI 119)) tsssocket.c:405 -1
     (nil))
(insn 15 14 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:412 -1
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) tsssocket.c:412 -1
     (nil)
 -> 25)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (parallel [
            (set (reg:DI 120)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:413 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 tssContext+0 S8 A64])) tsssocket.c:413 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 4 si)
        (reg:DI 120)) tsssocket.c:413 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg:DI 121)) tsssocket.c:413 -1
     (nil))
(call_insn 22 21 23 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_GetServerType") [flags 0x3]  <function_decl 0x7f57862356c0 TSS_Socket_GetServerType>) [0 TSS_Socket_GetServerType S1 A8])
            (const_int 0 [0]))) tsssocket.c:413 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 23 22 24 4 (set (reg:SI 122)
        (reg:SI 0 ax)) tsssocket.c:413 -1
     (nil))
(insn 24 23 25 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (reg:SI 122)) tsssocket.c:413 -1
     (nil))
(code_label 25 24 26 5 61 "" [1 uses])
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:416 -1
     (nil))
(jump_insn 28 27 29 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) tsssocket.c:416 -1
     (nil)
 -> 48)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg:SI 87 [ D.8738 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 mssim+0 S4 A32])) tsssocket.c:416 -1
     (nil))
(insn 31 30 32 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.8738 ])
            (const_int 0 [0]))) tsssocket.c:416 -1
     (nil))
(jump_insn 32 31 33 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) tsssocket.c:416 -1
     (nil)
 -> 48)
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 tssContext+0 S8 A64])) tsssocket.c:417 -1
     (nil))
(insn 35 34 36 7 (set (reg:SI 88 [ D.8738 ])
        (mem/j:SI (plus:DI (reg/f:DI 123)
                (const_int 84 [0x54])) [0 tssContext_28(D)->sock_fd+0 S4 A32])) tsssocket.c:417 -1
     (nil))
(insn 36 35 37 7 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:417 -1
     (nil))
(insn 37 36 38 7 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) tsssocket.c:417 -1
     (nil))
(insn 38 37 39 7 (set (reg:DI 4 si)
        (reg:DI 124)) tsssocket.c:417 -1
     (nil))
(insn 39 38 40 7 (set (reg:SI 5 di)
        (reg:SI 88 [ D.8738 ])) tsssocket.c:417 -1
     (nil))
(call_insn 40 39 41 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_ReceiveBytes") [flags 0x3]  <function_decl 0x7f5786235510 TSS_Socket_ReceiveBytes>) [0 TSS_Socket_ReceiveBytes S1 A8])
            (const_int 0 [0]))) tsssocket.c:417 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 41 40 42 7 (set (reg:SI 125)
        (reg:SI 0 ax)) tsssocket.c:417 -1
     (nil))
(insn 42 41 43 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (reg:SI 125)) tsssocket.c:417 -1
     (nil))
(insn 43 42 44 7 (set (reg:SI 89 [ D.8739 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 responseLength+0 S4 A64])) tsssocket.c:419 -1
     (nil))
(insn 44 43 45 7 (set (reg:SI 5 di)
        (reg:SI 89 [ D.8739 ])) tsssocket.c:419 -1
     (nil))
(call_insn/u 45 44 46 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ntohl") [flags 0x41]  <function_decl 0x7f5786361360 ntohl>) [0 ntohl S1 A8])
            (const_int 0 [0]))) tsssocket.c:419 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 46 45 47 7 (set (reg:SI 90 [ D.8739 ])
        (reg:SI 0 ax)) tsssocket.c:419 -1
     (nil))
(insn 47 46 48 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 responseLength+0 S4 A64])
        (reg:SI 90 [ D.8739 ])) tsssocket.c:419 -1
     (nil))
(code_label 48 47 49 8 62 "" [2 uses])
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:422 -1
     (nil))
(jump_insn 51 50 52 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) tsssocket.c:422 -1
     (nil)
 -> 62)
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 9 (set (reg/f:DI 91 [ D.8740 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bufferPtr+0 S8 A64])) tsssocket.c:423 -1
     (nil))
(insn 54 53 55 9 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 tssContext+0 S8 A64])) tsssocket.c:423 -1
     (nil))
(insn 55 54 56 9 (set (reg:SI 92 [ D.8738 ])
        (mem/j:SI (plus:DI (reg/f:DI 126)
                (const_int 84 [0x54])) [0 tssContext_28(D)->sock_fd+0 S4 A32])) tsssocket.c:423 -1
     (nil))
(insn 56 55 57 9 (set (reg:SI 1 dx)
        (const_int 6 [0x6])) tsssocket.c:423 -1
     (nil))
(insn 57 56 58 9 (set (reg:DI 4 si)
        (reg/f:DI 91 [ D.8740 ])) tsssocket.c:423 -1
     (nil))
(insn 58 57 59 9 (set (reg:SI 5 di)
        (reg:SI 92 [ D.8738 ])) tsssocket.c:423 -1
     (nil))
(call_insn 59 58 60 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_ReceiveBytes") [flags 0x3]  <function_decl 0x7f5786235510 TSS_Socket_ReceiveBytes>) [0 TSS_Socket_ReceiveBytes S1 A8])
            (const_int 0 [0]))) tsssocket.c:423 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 60 59 61 9 (set (reg:SI 127)
        (reg:SI 0 ax)) tsssocket.c:423 -1
     (nil))
(insn 61 60 62 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (reg:SI 127)) tsssocket.c:423 -1
     (nil))
(code_label 62 61 63 10 63 "" [1 uses])
(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:427 -1
     (nil))
(jump_insn 65 64 66 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) tsssocket.c:427 -1
     (nil)
 -> 127)
(note 66 65 67 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 11 (set (reg/f:DI 93 [ D.8740 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bufferPtr+0 S8 A64])) tsssocket.c:429 -1
     (nil))
(insn 68 67 69 11 (parallel [
            (set (reg/f:DI 94 [ D.8740 ])
                (plus:DI (reg/f:DI 93 [ D.8740 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:429 -1
     (nil))
(insn 69 68 70 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bufferPtr+0 S8 A64])
        (reg/f:DI 94 [ D.8740 ])) tsssocket.c:429 -1
     (nil))
(insn 70 69 71 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 size+0 S4 A64])
        (const_int 4 [0x4])) tsssocket.c:431 -1
     (nil))
(insn 71 70 72 11 (parallel [
            (set (reg:DI 128)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:432 -1
     (nil))
(insn 72 71 73 11 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:432 -1
     (nil))
(insn 73 72 74 11 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:432 -1
     (nil))
(insn 74 73 75 11 (set (reg:DI 1 dx)
        (reg:DI 128)) tsssocket.c:432 -1
     (nil))
(insn 75 74 76 11 (set (reg:DI 4 si)
        (reg:DI 129)) tsssocket.c:432 -1
     (nil))
(insn 76 75 77 11 (set (reg:DI 5 di)
        (reg:DI 130)) tsssocket.c:432 -1
     (nil))
(call_insn 77 76 78 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT32_Unmarshal") [flags 0x41]  <function_decl 0x7f57863ee948 UINT32_Unmarshal>) [0 UINT32_Unmarshal S1 A8])
            (const_int 0 [0]))) tsssocket.c:432 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 78 77 79 11 (set (reg:SI 131)
        (reg:SI 0 ax)) tsssocket.c:432 -1
     (nil))
(insn 79 78 80 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (reg:SI 131)) tsssocket.c:432 -1
     (nil))
(insn 80 79 81 11 (set (reg:SI 95 [ D.8739 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 responseSize+0 S4 A32])) tsssocket.c:433 -1
     (nil))
(insn 81 80 82 11 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 length+0 S8 A64])) tsssocket.c:433 -1
     (nil))
(insn 82 81 83 11 (set (mem:SI (reg/f:DI 132) [0 *length_49(D)+0 S4 A32])
        (reg:SI 95 [ D.8739 ])) tsssocket.c:433 -1
     (nil))
(insn 83 82 84 11 (set (reg:SI 96 [ D.8739 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 responseSize+0 S4 A32])) tsssocket.c:436 -1
     (nil))
(insn 84 83 85 11 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 96 [ D.8739 ])
            (const_int 4096 [0x1000]))) tsssocket.c:436 -1
     (nil))
(jump_insn 85 84 86 11 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) tsssocket.c:436 -1
     (nil)
 -> 101)
(note 86 85 87 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 12 (set (reg/f:DI 133)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVerbose") [flags 0x40]  <var_decl 0x7f5786238090 tssVerbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:437 -1
     (nil))
(insn 88 87 89 12 (set (reg:SI 97 [ D.8738 ])
        (mem/c:SI (reg/f:DI 133) [0 tssVerbose+0 S4 A32])) tsssocket.c:437 -1
     (nil))
(insn 89 88 90 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.8738 ])
            (const_int 0 [0]))) tsssocket.c:437 -1
     (nil))
(jump_insn 90 89 91 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) tsssocket.c:437 -1
     (nil)
 -> 98)
(note 91 90 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 13 (set (reg:SI 98 [ D.8739 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 responseSize+0 S4 A32])) tsssocket.c:438 -1
     (nil))
(insn 93 92 94 13 (set (reg:SI 1 dx)
        (const_int 4096 [0x1000])) tsssocket.c:438 -1
     (nil))
(insn 94 93 95 13 (set (reg:SI 4 si)
        (reg:SI 98 [ D.8739 ])) tsssocket.c:438 -1
     (nil))
(insn 95 94 96 13 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f5785ee77e0 *.LC14>)) tsssocket.c:438 -1
     (nil))
(insn 96 95 97 13 (set (reg:QI 0 ax)
        (const_int 0 [0])) tsssocket.c:438 -1
     (nil))
(call_insn 97 96 98 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5786548ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) tsssocket.c:438 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(code_label 98 97 99 14 66 "" [1 uses])
(note 99 98 100 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 14 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (const_int 720905 [0xb0009])) tsssocket.c:440 -1
     (nil))
(code_label 101 100 102 15 65 "" [1 uses])
(note 102 101 103 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 15 (set (reg:SI 99 [ D.8738 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 mssim+0 S4 A32])) tsssocket.c:444 -1
     (nil))
(insn 104 103 105 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.8738 ])
            (const_int 0 [0]))) tsssocket.c:444 -1
     (nil))
(jump_insn 105 104 106 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) tsssocket.c:444 -1
     (nil)
 -> 127)
(note 106 105 107 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 16 (set (reg:SI 100 [ D.8739 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 responseSize+0 S4 A32])) tsssocket.c:444 -1
     (nil))
(insn 108 107 109 16 (set (reg:SI 101 [ D.8739 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 responseLength+0 S4 A64])) tsssocket.c:444 -1
     (nil))
(insn 109 108 110 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.8739 ])
            (reg:SI 101 [ D.8739 ]))) tsssocket.c:444 -1
     (nil))
(jump_insn 110 109 111 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) tsssocket.c:444 -1
     (nil)
 -> 127)
(note 111 110 112 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 17 (set (reg/f:DI 134)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVerbose") [flags 0x40]  <var_decl 0x7f5786238090 tssVerbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:445 -1
     (nil))
(insn 113 112 114 17 (set (reg:SI 102 [ D.8738 ])
        (mem/c:SI (reg/f:DI 134) [0 tssVerbose+0 S4 A32])) tsssocket.c:445 -1
     (nil))
(insn 114 113 115 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.8738 ])
            (const_int 0 [0]))) tsssocket.c:445 -1
     (nil))
(jump_insn 115 114 116 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) tsssocket.c:445 -1
     (nil)
 -> 124)
(note 116 115 117 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 18 (set (reg:SI 103 [ D.8739 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 responseLength+0 S4 A64])) tsssocket.c:445 -1
     (nil))
(insn 118 117 119 18 (set (reg:SI 104 [ D.8739 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 responseSize+0 S4 A32])) tsssocket.c:445 -1
     (nil))
(insn 119 118 120 18 (set (reg:SI 1 dx)
        (reg:SI 103 [ D.8739 ])) tsssocket.c:445 -1
     (nil))
(insn 120 119 121 18 (set (reg:SI 4 si)
        (reg:SI 104 [ D.8739 ])) tsssocket.c:445 -1
     (nil))
(insn 121 120 122 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5785ee7870 *.LC15>)) tsssocket.c:445 -1
     (nil))
(insn 122 121 123 18 (set (reg:QI 0 ax)
        (const_int 0 [0])) tsssocket.c:445 -1
     (nil))
(call_insn 123 122 124 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5786548ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) tsssocket.c:445 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(code_label 124 123 125 19 67 "" [1 uses])
(note 125 124 126 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 19 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (const_int 720905 [0xb0009])) tsssocket.c:448 -1
     (nil))
(code_label 127 126 128 20 64 "" [3 uses])
(note 128 127 129 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:452 -1
     (nil))
(jump_insn 130 129 131 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) tsssocket.c:452 -1
     (nil)
 -> 143)
(note 131 130 132 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 21 (set (reg:SI 105 [ D.8739 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 responseSize+0 S4 A32])) tsssocket.c:453 -1
     (nil))
(insn 133 132 134 21 (parallel [
            (set (reg:SI 106 [ D.8739 ])
                (plus:SI (reg:SI 105 [ D.8739 ])
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:453 -1
     (nil))
(insn 134 133 135 21 (set (reg/f:DI 107 [ D.8740 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bufferPtr+0 S8 A64])) tsssocket.c:453 -1
     (nil))
(insn 135 134 136 21 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 tssContext+0 S8 A64])) tsssocket.c:453 -1
     (nil))
(insn 136 135 137 21 (set (reg:SI 108 [ D.8738 ])
        (mem/j:SI (plus:DI (reg/f:DI 135)
                (const_int 84 [0x54])) [0 tssContext_28(D)->sock_fd+0 S4 A32])) tsssocket.c:453 -1
     (nil))
(insn 137 136 138 21 (set (reg:SI 1 dx)
        (reg:SI 106 [ D.8739 ])) tsssocket.c:453 -1
     (nil))
(insn 138 137 139 21 (set (reg:DI 4 si)
        (reg/f:DI 107 [ D.8740 ])) tsssocket.c:453 -1
     (nil))
(insn 139 138 140 21 (set (reg:SI 5 di)
        (reg:SI 108 [ D.8738 ])) tsssocket.c:453 -1
     (nil))
(call_insn 140 139 141 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_ReceiveBytes") [flags 0x3]  <function_decl 0x7f5786235510 TSS_Socket_ReceiveBytes>) [0 TSS_Socket_ReceiveBytes S1 A8])
            (const_int 0 [0]))) tsssocket.c:453 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 141 140 142 21 (set (reg:SI 136)
        (reg:SI 0 ax)) tsssocket.c:453 -1
     (nil))
(insn 142 141 143 21 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (reg:SI 136)) tsssocket.c:453 -1
     (nil))
(code_label 143 142 144 22 68 "" [1 uses])
(note 144 143 145 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:457 -1
     (nil))
(jump_insn 146 145 147 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) tsssocket.c:457 -1
     (nil)
 -> 159)
(note 147 146 148 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 23 (set (reg/f:DI 137)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVverbose") [flags 0x40]  <var_decl 0x7f5786238000 tssVverbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:457 -1
     (nil))
(insn 149 148 150 23 (set (reg:SI 109 [ D.8738 ])
        (mem/c:SI (reg/f:DI 137) [0 tssVverbose+0 S4 A32])) tsssocket.c:457 -1
     (nil))
(insn 150 149 151 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.8738 ])
            (const_int 0 [0]))) tsssocket.c:457 -1
     (nil))
(jump_insn 151 150 152 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) tsssocket.c:457 -1
     (nil)
 -> 159)
(note 152 151 153 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 24 (set (reg:SI 110 [ D.8739 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 responseSize+0 S4 A32])) tsssocket.c:458 -1
     (nil))
(insn 154 153 155 24 (set (reg:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 buffer+0 S8 A64])) tsssocket.c:458 -1
     (nil))
(insn 155 154 156 24 (set (reg:SI 1 dx)
        (reg:SI 110 [ D.8739 ])) tsssocket.c:458 -1
     (nil))
(insn 156 155 157 24 (set (reg:DI 4 si)
        (reg:DI 138)) tsssocket.c:458 -1
     (nil))
(insn 157 156 158 24 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f5785ee7900 *.LC16>)) tsssocket.c:458 -1
     (nil))
(call_insn 158 157 159 24 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7f57860ec948 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) tsssocket.c:458 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(code_label 159 158 160 25 69 "" [2 uses])
(note 160 159 161 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:463 -1
     (nil))
(jump_insn 162 161 163 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 177)
            (pc))) tsssocket.c:463 -1
     (nil)
 -> 177)
(note 163 162 164 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 26 (set (reg:SI 111 [ D.8738 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 mssim+0 S4 A32])) tsssocket.c:463 -1
     (nil))
(insn 165 164 166 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.8738 ])
            (const_int 0 [0]))) tsssocket.c:463 -1
     (nil))
(jump_insn 166 165 167 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 177)
            (pc))) tsssocket.c:463 -1
     (nil)
 -> 177)
(note 167 166 168 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 27 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 tssContext+0 S8 A64])) tsssocket.c:464 -1
     (nil))
(insn 169 168 170 27 (set (reg:SI 112 [ D.8738 ])
        (mem/j:SI (plus:DI (reg/f:DI 139)
                (const_int 84 [0x54])) [0 tssContext_28(D)->sock_fd+0 S4 A32])) tsssocket.c:464 -1
     (nil))
(insn 170 169 171 27 (parallel [
            (set (reg:DI 140)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:464 -1
     (nil))
(insn 171 170 172 27 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) tsssocket.c:464 -1
     (nil))
(insn 172 171 173 27 (set (reg:DI 4 si)
        (reg:DI 140)) tsssocket.c:464 -1
     (nil))
(insn 173 172 174 27 (set (reg:SI 5 di)
        (reg:SI 112 [ D.8738 ])) tsssocket.c:464 -1
     (nil))
(call_insn 174 173 175 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_ReceiveBytes") [flags 0x3]  <function_decl 0x7f5786235510 TSS_Socket_ReceiveBytes>) [0 TSS_Socket_ReceiveBytes S1 A8])
            (const_int 0 [0]))) tsssocket.c:464 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 175 174 176 27 (set (reg:SI 141)
        (reg:SI 0 ax)) tsssocket.c:464 -1
     (nil))
(insn 176 175 177 27 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (reg:SI 141)) tsssocket.c:464 -1
     (nil))
(code_label 177 176 178 28 70 "" [2 uses])
(note 178 177 179 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:468 -1
     (nil))
(jump_insn 180 179 181 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 195)
            (pc))) tsssocket.c:468 -1
     (nil)
 -> 195)
(note 181 180 182 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 29 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 buffer+0 S8 A64])) tsssocket.c:470 -1
     (nil))
(insn 183 182 184 29 (parallel [
            (set (reg/f:DI 113 [ D.8740 ])
                (plus:DI (reg/f:DI 142)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:470 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])) [0 buffer+0 S8 A64])
            (const_int 6 [0x6]))
        (nil)))
(insn 184 183 185 29 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 bufferPtr+0 S8 A64])
        (reg/f:DI 113 [ D.8740 ])) tsssocket.c:470 -1
     (nil))
(insn 185 184 186 29 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 size+0 S4 A64])
        (const_int 4 [0x4])) tsssocket.c:471 -1
     (nil))
(insn 186 185 187 29 (parallel [
            (set (reg:DI 143)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:472 -1
     (nil))
(insn 187 186 188 29 (parallel [
            (set (reg:DI 144)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:472 -1
     (nil))
(insn 188 187 189 29 (parallel [
            (set (reg:DI 145)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:472 -1
     (nil))
(insn 189 188 190 29 (set (reg:DI 1 dx)
        (reg:DI 143)) tsssocket.c:472 -1
     (nil))
(insn 190 189 191 29 (set (reg:DI 4 si)
        (reg:DI 144)) tsssocket.c:472 -1
     (nil))
(insn 191 190 192 29 (set (reg:DI 5 di)
        (reg:DI 145)) tsssocket.c:472 -1
     (nil))
(call_insn 192 191 193 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT32_Unmarshal") [flags 0x41]  <function_decl 0x7f57863ee948 UINT32_Unmarshal>) [0 UINT32_Unmarshal S1 A8])
            (const_int 0 [0]))) tsssocket.c:472 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 193 192 194 29 (set (reg:SI 146)
        (reg:SI 0 ax)) tsssocket.c:472 -1
     (nil))
(insn 194 193 195 29 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (reg:SI 146)) tsssocket.c:472 -1
     (nil))
(code_label 195 194 196 30 71 "" [1 uses])
(note 196 195 197 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:475 -1
     (nil))
(jump_insn 198 197 199 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 202)
            (pc))) tsssocket.c:475 -1
     (nil)
 -> 202)
(note 199 198 200 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 31 (set (reg:SI 147)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 responseCode+0 S4 A32])) tsssocket.c:476 -1
     (nil))
(insn 201 200 202 31 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (reg:SI 147)) tsssocket.c:476 -1
     (nil))
(code_label 202 201 203 32 72 "" [1 uses])
(note 203 202 204 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 204 203 205 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:479 -1
     (nil))
(jump_insn 205 204 206 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) tsssocket.c:479 -1
     (nil)
 -> 216)
(note 206 205 207 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 33 (set (reg:SI 114 [ D.8738 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 mssim+0 S4 A32])) tsssocket.c:479 -1
     (nil))
(insn 208 207 209 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 114 [ D.8738 ])
            (const_int 0 [0]))) tsssocket.c:479 -1
     (nil))
(jump_insn 209 208 210 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) tsssocket.c:479 -1
     (nil)
 -> 216)
(note 210 209 211 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 34 (set (reg:SI 115 [ D.8739 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 acknowledgement+0 S4 A64])) tsssocket.c:480 -1
     (nil))
(insn 212 211 213 34 (set (reg:SI 5 di)
        (reg:SI 115 [ D.8739 ])) tsssocket.c:480 -1
     (nil))
(call_insn/u 213 212 214 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ntohl") [flags 0x41]  <function_decl 0x7f5786361360 ntohl>) [0 ntohl S1 A8])
            (const_int 0 [0]))) tsssocket.c:480 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 214 213 215 34 (set (reg:SI 148)
        (reg:SI 0 ax)) tsssocket.c:480 -1
     (nil))
(insn 215 214 216 34 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (reg:SI 148)) tsssocket.c:480 -1
     (nil))
(code_label 216 215 217 35 73 "" [2 uses])
(note 217 216 218 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 221 35 (set (reg:SI 116 [ D.8741 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])) tsssocket.c:482 -1
     (nil))
(insn 221 218 225 35 (set (reg:SI 117 [ <retval> ])
        (reg:SI 116 [ D.8741 ])) tsssocket.c:482 -1
     (nil))
(insn 225 221 226 35 (set (reg/i:SI 0 ax)
        (reg:SI 117 [ <retval> ])) tsssocket.c:483 -1
     (nil))
(insn 226 225 227 35 (set (reg/f:DI 150)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f57862a6090 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:483 -1
     (nil))
(insn 227 226 228 35 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.8742+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) tsssocket.c:483 -1
     (nil))
(jump_insn 228 227 234 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 231)
            (pc))) tsssocket.c:483 -1
     (nil)
 -> 231)
(note 234 228 229 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(call_insn 229 234 230 38 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f578626fca8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) tsssocket.c:483 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 230 229 231)
(code_label 231 230 235 39 75 "" [1 uses])
(note 235 231 232 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 232 235 0 39 (use (reg/i:SI 0 ax)) tsssocket.c:483 -1
     (nil))

;; Function TSS_Socket_ReceivePlatform (TSS_Socket_ReceivePlatform, funcdef_no=10, decl_uid=8257, cgraph_uid=10, symbol_order=10)

Partition 0: size 4 align 4
	rc_1
Partition 1: size 4 align 4
	acknowledgement

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Removing jump 36.
Merging block 9 into block 7...
Merged blocks 7 and 9.
Merged 7 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 sock_fd+0 S4 A32])
        (reg:SI 5 di [ sock_fd ])) tsssocket.c:493 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 5 2 (set (reg/f:DI 90)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f57862a6090 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:493 -1
     (nil))
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.8748+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:493 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) tsssocket.c:494 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:498 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) tsssocket.c:498 -1
     (nil)
 -> 20)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:499 -1
     (nil))
(insn 13 12 14 4 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 sock_fd+0 S4 A32])) tsssocket.c:499 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) tsssocket.c:499 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 4 si)
        (reg:DI 91)) tsssocket.c:499 -1
     (nil))
(insn 16 15 17 4 (set (reg:SI 5 di)
        (reg:SI 92)) tsssocket.c:499 -1
     (nil))
(call_insn 17 16 18 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_ReceiveBytes") [flags 0x3]  <function_decl 0x7f5786235510 TSS_Socket_ReceiveBytes>) [0 TSS_Socket_ReceiveBytes S1 A8])
            (const_int 0 [0]))) tsssocket.c:499 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 18 17 19 4 (set (reg:SI 93)
        (reg:SI 0 ax)) tsssocket.c:499 -1
     (nil))
(insn 19 18 20 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 93)) tsssocket.c:499 -1
     (nil))
(code_label 20 19 21 5 77 "" [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:502 -1
     (nil))
(jump_insn 23 22 24 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) tsssocket.c:502 -1
     (nil)
 -> 30)
(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 6 (set (reg:SI 87 [ D.8746 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 acknowledgement+0 S4 A64])) tsssocket.c:503 -1
     (nil))
(insn 26 25 27 6 (set (reg:SI 5 di)
        (reg:SI 87 [ D.8746 ])) tsssocket.c:503 -1
     (nil))
(call_insn/u 27 26 28 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ntohl") [flags 0x41]  <function_decl 0x7f5786361360 ntohl>) [0 ntohl S1 A8])
            (const_int 0 [0]))) tsssocket.c:503 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 28 27 29 6 (set (reg:SI 94)
        (reg:SI 0 ax)) tsssocket.c:503 -1
     (nil))
(insn 29 28 30 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 94)) tsssocket.c:503 -1
     (nil))
(code_label 30 29 31 7 78 "" [1 uses])
(note 31 30 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 35 7 (set (reg:SI 88 [ D.8747 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) tsssocket.c:505 -1
     (nil))
(insn 35 32 39 7 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.8747 ])) tsssocket.c:505 -1
     (nil))
(insn 39 35 40 7 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) tsssocket.c:506 -1
     (nil))
(insn 40 39 41 7 (set (reg/f:DI 96)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f57862a6090 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:506 -1
     (nil))
(insn 41 40 42 7 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.8748+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) tsssocket.c:506 -1
     (nil))
(jump_insn 42 41 48 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) tsssocket.c:506 -1
     (nil)
 -> 45)
(note 48 42 43 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 43 48 44 10 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f578626fca8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) tsssocket.c:506 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 44 43 45)
(code_label 45 44 49 11 80 "" [1 uses])
(note 49 45 46 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 46 49 0 11 (use (reg/i:SI 0 ax)) tsssocket.c:506 -1
     (nil))

;; Function TSS_Socket_ReceiveBytes (TSS_Socket_ReceiveBytes, funcdef_no=11, decl_uid=8261, cgraph_uid=11, symbol_order=11)

Partition 1: size 4 align 4
	nread_8
Partition 0: size 4 align 4
	nleft_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 77.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 sock_fd+0 S4 A32])
        (reg:SI 5 di [ sock_fd ])) tsssocket.c:518 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) tsssocket.c:518 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nbytes+0 S4 A32])
        (reg:SI 1 dx [ nbytes ])) tsssocket.c:518 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 nread+0 S4 A32])
        (const_int 0 [0])) tsssocket.c:519 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 nleft+0 S4 A32])
        (const_int 0 [0])) tsssocket.c:520 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nbytes+0 S4 A32])) tsssocket.c:522 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 nleft+0 S4 A32])
        (reg:SI 94)) tsssocket.c:522 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (label_ref 67)) tsssocket.c:523 -1
     (nil)
 -> 67)
(barrier 13 12 69)
(code_label 69 13 14 4 88 "" [1 uses])
(note 14 69 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 nleft+0 S4 A32])) tsssocket.c:525 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 88 [ D.8750 ])
        (sign_extend:DI (reg:SI 95))) tsssocket.c:525 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) tsssocket.c:525 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 sock_fd+0 S4 A32])) tsssocket.c:525 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 1 dx)
        (reg:DI 88 [ D.8750 ])) tsssocket.c:525 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 4 si)
        (reg:DI 96)) tsssocket.c:525 -1
     (nil))
(insn 21 20 22 4 (set (reg:SI 5 di)
        (reg:SI 97)) tsssocket.c:525 -1
     (nil))
(call_insn 22 21 23 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("read") [flags 0x41]  <function_decl 0x7f57862d6798 read>) [0 read S1 A8])
            (const_int 0 [0]))) tsssocket.c:525 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 23 22 24 4 (set (reg:DI 89 [ D.8751 ])
        (reg:DI 0 ax)) tsssocket.c:525 -1
     (nil))
(insn 24 23 25 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 nread+0 S4 A32])
        (subreg:SI (reg:DI 89 [ D.8751 ]) 0)) tsssocket.c:525 -1
     (nil))
(insn 25 24 26 4 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 nread+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:526 -1
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) tsssocket.c:526 -1
     (nil)
 -> 43)
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:DI 98)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVerbose") [flags 0x40]  <var_decl 0x7f5786238090 tssVerbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:527 -1
     (nil))
(insn 29 28 30 5 (set (reg:SI 92 [ D.8753 ])
        (mem/c:SI (reg/f:DI 98) [0 tssVerbose+0 S4 A32])) tsssocket.c:527 -1
     (nil))
(insn 30 29 31 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.8753 ])
            (const_int 0 [0]))) tsssocket.c:527 -1
     (nil))
(jump_insn 31 30 32 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) tsssocket.c:527 -1
     (nil)
 -> 38)
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 nread+0 S4 A32])) tsssocket.c:527 -1
     (nil))
(insn 34 33 35 6 (set (reg:SI 4 si)
        (reg:SI 99)) tsssocket.c:527 -1
     (nil))
(insn 35 34 36 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f5785efd7e0 *.LC17>)) tsssocket.c:527 -1
     (nil))
(insn 36 35 37 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) tsssocket.c:527 -1
     (nil))
(call_insn 37 36 38 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5786548ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) tsssocket.c:527 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 38 37 39 7 84 "" [1 uses])
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (reg:SI 87 [ D.8749 ])
        (const_int 720905 [0xb0009])) tsssocket.c:528 -1
     (nil))
(jump_insn 41 40 42 7 (set (pc)
        (label_ref 74)) tsssocket.c:528 -1
     (nil)
 -> 74)
(barrier 42 41 43)
(code_label 43 42 44 8 83 "" [1 uses])
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 nread+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:539 -1
     (nil))
(jump_insn 46 45 47 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) tsssocket.c:539 -1
     (nil)
 -> 60)
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 9 (set (reg/f:DI 100)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVerbose") [flags 0x40]  <var_decl 0x7f5786238090 tssVerbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:540 -1
     (nil))
(insn 49 48 50 9 (set (reg:SI 91 [ D.8753 ])
        (mem/c:SI (reg/f:DI 100) [0 tssVerbose+0 S4 A32])) tsssocket.c:540 -1
     (nil))
(insn 50 49 51 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.8753 ])
            (const_int 0 [0]))) tsssocket.c:540 -1
     (nil))
(jump_insn 51 50 52 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) tsssocket.c:540 -1
     (nil)
 -> 55)
(note 52 51 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f5785efd870 *.LC18>)) tsssocket.c:540 -1
     (nil))
(call_insn 54 53 55 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f578654b360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) tsssocket.c:540 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 55 54 56 11 87 "" [1 uses])
(note 56 55 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 11 (set (reg:SI 87 [ D.8749 ])
        (const_int 720905 [0xb0009])) tsssocket.c:541 -1
     (nil))
(jump_insn 58 57 59 11 (set (pc)
        (label_ref 74)) tsssocket.c:541 -1
     (nil)
 -> 74)
(barrier 59 58 60)
(code_label 60 59 61 12 86 "" [1 uses])
(note 61 60 62 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 12 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 nread+0 S4 A32])) tsssocket.c:543 -1
     (nil))
(insn 63 62 64 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 nleft+0 S4 A32])
                (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 nleft+0 S4 A32])
                    (reg:SI 101)))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:543 -1
     (nil))
(insn 64 63 65 12 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 nread+0 S4 A32])) tsssocket.c:544 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 90 [ D.8752 ])
        (sign_extend:DI (reg:SI 102))) tsssocket.c:544 -1
     (nil))
(insn 66 65 67 12 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
                    (reg:DI 90 [ D.8752 ])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:544 -1
     (nil))
(code_label 67 66 68 13 82 "" [1 uses])
(note 68 67 70 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 70 68 71 13 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 nleft+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:523 -1
     (nil))
(jump_insn 71 70 72 13 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) tsssocket.c:523 -1
     (nil)
 -> 69)
(note 72 71 73 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 14 (set (reg:SI 87 [ D.8749 ])
        (const_int 0 [0])) tsssocket.c:546 -1
     (nil))
(code_label 74 73 75 15 85 "" [2 uses])
(note 75 74 76 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 80 15 (set (reg:SI 93 [ <retval> ])
        (reg:SI 87 [ D.8749 ])) -1
     (nil))
(insn 80 76 81 15 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) tsssocket.c:547 -1
     (nil))
(insn 81 80 0 15 (use (reg/i:SI 0 ax)) tsssocket.c:547 -1
     (nil))

;; Function TSS_Socket_Close (TSS_Socket_Close, funcdef_no=12, decl_uid=8239, cgraph_uid=12, symbol_order=12)

Partition 0: size 4 align 4
	rc_1
Partition 2: size 4 align 4
	commandType
Partition 1: size 4 align 4
	mssim

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 83.
Merging block 16 into block 14...
Merged blocks 14 and 16.
Merged 14 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) tsssocket.c:556 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 5 2 (set (reg/f:DI 98)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f57862a6090 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:556 -1
     (nil))
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.8760+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:556 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) tsssocket.c:557 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 99)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVverbose") [flags 0x40]  <var_decl 0x7f5786238000 tssVverbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:561 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 87 [ D.8756 ])
        (mem/c:SI (reg/f:DI 99) [0 tssVverbose+0 S4 A32])) tsssocket.c:561 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.8756 ])
            (const_int 0 [0]))) tsssocket.c:561 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) tsssocket.c:561 -1
     (nil)
 -> 23)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 tssContext+0 S8 A64])) tsssocket.c:561 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 88 [ D.8757 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 100)
                (const_int 56 [0x38])) [0 tssContext_12(D)->tssServerType+0 S8 A64])) tsssocket.c:561 -1
     (nil))
(insn 16 15 17 4 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 tssContext+0 S8 A64])) tsssocket.c:561 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 89 [ D.8757 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 101)
                (const_int 48 [0x30])) [0 tssContext_12(D)->tssServerName+0 S8 A64])) tsssocket.c:561 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 1 dx)
        (reg/f:DI 88 [ D.8757 ])) tsssocket.c:561 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 4 si)
        (reg/f:DI 89 [ D.8757 ])) tsssocket.c:561 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f5785f07630 *.LC19>)) tsssocket.c:561 -1
     (nil))
(insn 21 20 22 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) tsssocket.c:561 -1
     (nil))
(call_insn 22 21 23 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5786548ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) tsssocket.c:561 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 23 22 24 5 90 "" [1 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:564 -1
     (nil))
(jump_insn 26 25 27 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) tsssocket.c:564 -1
     (nil)
 -> 35)
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:565 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 tssContext+0 S8 A64])) tsssocket.c:565 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 4 si)
        (reg:DI 102)) tsssocket.c:565 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 5 di)
        (reg:DI 103)) tsssocket.c:565 -1
     (nil))
(call_insn 32 31 33 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_GetServerType") [flags 0x3]  <function_decl 0x7f57862356c0 TSS_Socket_GetServerType>) [0 TSS_Socket_GetServerType S1 A8])
            (const_int 0 [0]))) tsssocket.c:565 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 33 32 34 6 (set (reg:SI 104)
        (reg:SI 0 ax)) tsssocket.c:565 -1
     (nil))
(insn 34 33 35 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 104)) tsssocket.c:565 -1
     (nil))
(code_label 35 34 36 7 91 "" [1 uses])
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) tsssocket.c:568 -1
     (nil))
(jump_insn 38 37 39 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) tsssocket.c:568 -1
     (nil)
 -> 57)
(note 39 38 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 8 (set (reg:SI 90 [ D.8756 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 mssim+0 S4 A32])) tsssocket.c:568 -1
     (nil))
(insn 41 40 42 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.8756 ])
            (const_int 0 [0]))) tsssocket.c:568 -1
     (nil))
(jump_insn 42 41 43 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) tsssocket.c:568 -1
     (nil)
 -> 57)
(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 9 (set (reg:SI 5 di)
        (const_int 20 [0x14])) tsssocket.c:569 -1
     (nil))
(call_insn/u 45 44 46 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("htonl") [flags 0x41]  <function_decl 0x7f5786361510 htonl>) [0 htonl S1 A8])
            (const_int 0 [0]))) tsssocket.c:569 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 46 45 47 9 (set (reg:SI 91 [ D.8758 ])
        (reg:SI 0 ax)) tsssocket.c:569 -1
     (nil))
(insn 47 46 48 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 commandType+0 S4 A64])
        (reg:SI 91 [ D.8758 ])) tsssocket.c:569 -1
     (nil))
(insn 48 47 49 9 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 tssContext+0 S8 A64])) tsssocket.c:570 -1
     (nil))
(insn 49 48 50 9 (set (reg:SI 92 [ D.8756 ])
        (mem/j:SI (plus:DI (reg/f:DI 105)
                (const_int 84 [0x54])) [0 tssContext_12(D)->sock_fd+0 S4 A32])) tsssocket.c:570 -1
     (nil))
(insn 50 49 51 9 (parallel [
            (set (reg:DI 106)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) tsssocket.c:570 -1
     (nil))
(insn 51 50 52 9 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) tsssocket.c:570 -1
     (nil))
(insn 52 51 53 9 (set (reg:DI 4 si)
        (reg:DI 106)) tsssocket.c:570 -1
     (nil))
(insn 53 52 54 9 (set (reg:SI 5 di)
        (reg:SI 92 [ D.8756 ])) tsssocket.c:570 -1
     (nil))
(call_insn 54 53 55 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Socket_SendBytes") [flags 0x3]  <function_decl 0x7f57862355e8 TSS_Socket_SendBytes>) [0 TSS_Socket_SendBytes S1 A8])
            (const_int 0 [0]))) tsssocket.c:570 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 55 54 56 9 (set (reg:SI 107)
        (reg:SI 0 ax)) tsssocket.c:570 -1
     (nil))
(insn 56 55 57 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 107)) tsssocket.c:570 -1
     (nil))
(code_label 57 56 58 10 92 "" [2 uses])
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 tssContext+0 S8 A64])) tsssocket.c:573 -1
     (nil))
(insn 60 59 61 10 (set (reg:SI 93 [ D.8756 ])
        (mem/j:SI (plus:DI (reg/f:DI 108)
                (const_int 84 [0x54])) [0 tssContext_12(D)->sock_fd+0 S4 A32])) tsssocket.c:573 -1
     (nil))
(insn 61 60 62 10 (set (reg:SI 5 di)
        (reg:SI 93 [ D.8756 ])) tsssocket.c:573 -1
     (nil))
(call_insn 62 61 63 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x7f57862d66c0 close>) [0 close S1 A8])
            (const_int 0 [0]))) tsssocket.c:573 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 63 62 64 10 (set (reg:SI 94 [ D.8756 ])
        (reg:SI 0 ax)) tsssocket.c:573 -1
     (nil))
(insn 64 63 65 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.8756 ])
            (const_int 0 [0]))) tsssocket.c:573 -1
     (nil))
(jump_insn 65 64 66 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) tsssocket.c:573 -1
     (nil)
 -> 77)
(note 66 65 67 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 11 (set (reg/f:DI 109)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("tssVerbose") [flags 0x40]  <var_decl 0x7f5786238090 tssVerbose>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:574 -1
     (nil))
(insn 68 67 69 11 (set (reg:SI 95 [ D.8756 ])
        (mem/c:SI (reg/f:DI 109) [0 tssVerbose+0 S4 A32])) tsssocket.c:574 -1
     (nil))
(insn 69 68 70 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.8756 ])
            (const_int 0 [0]))) tsssocket.c:574 -1
     (nil))
(jump_insn 70 69 71 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) tsssocket.c:574 -1
     (nil)
 -> 74)
(note 71 70 72 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f5785f076c0 *.LC20>)) tsssocket.c:574 -1
     (nil))
(call_insn 73 72 74 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f578654b360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) tsssocket.c:574 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 74 73 75 13 94 "" [1 uses])
(note 75 74 76 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 720905 [0xb0009])) tsssocket.c:575 -1
     (nil))
(code_label 77 76 78 14 93 "" [1 uses])
(note 78 77 79 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 82 14 (set (reg:SI 96 [ D.8759 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) tsssocket.c:591 -1
     (nil))
(insn 82 79 86 14 (set (reg:SI 97 [ <retval> ])
        (reg:SI 96 [ D.8759 ])) tsssocket.c:591 -1
     (nil))
(insn 86 82 87 14 (set (reg/i:SI 0 ax)
        (reg:SI 97 [ <retval> ])) tsssocket.c:592 -1
     (nil))
(insn 87 86 88 14 (set (reg/f:DI 111)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7f57862a6090 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) tsssocket.c:592 -1
     (nil))
(insn 88 87 89 14 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.8760+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) tsssocket.c:592 -1
     (nil))
(jump_insn 89 88 95 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) tsssocket.c:592 -1
     (nil)
 -> 92)
(note 95 89 90 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(call_insn 90 95 91 17 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f578626fca8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) tsssocket.c:592 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 91 90 92)
(code_label 92 91 96 18 96 "" [1 uses])
(note 96 92 93 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 93 96 0 18 (use (reg/i:SI 0 ax)) tsssocket.c:592 -1
     (nil))
