
;; Function Startup_In_Unmarshal (Startup_In_Unmarshal, funcdef_no=0, decl_uid=3692, cgraph_uid=0, symbol_order=2)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 32.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:78 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:78 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:78 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:78 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:79 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:82 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:82 -1
     (nil)
 -> 26)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 87 [ D.7766 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:83 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:83 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:83 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 1 dx)
        (reg:DI 90)) Commands.c:83 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 91)) Commands.c:83 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.7766 ])) Commands.c:83 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM_SU_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c0d510 TPM_SU_Unmarshal>) [0 TPM_SU_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:83 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 4 (set (reg:SI 92)
        (reg:SI 0 ax)) Commands.c:83 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 92)) Commands.c:83 -1
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:84 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:84 -1
     (nil)
 -> 26)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:85 -1
     (nil))
(code_label 26 25 27 6 2 "" [2 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 31 6 (set (reg:SI 88 [ D.7767 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:88 -1
     (nil))
(insn 31 28 35 6 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.7767 ])) Commands.c:88 -1
     (nil))
(insn 35 31 36 6 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:89 -1
     (nil))
(insn 36 35 0 6 (use (reg/i:SI 0 ax)) Commands.c:89 -1
     (nil))

;; Function Shutdown_In_Unmarshal (Shutdown_In_Unmarshal, funcdef_no=1, decl_uid=3697, cgraph_uid=1, symbol_order=3)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 32.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:92 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:92 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:92 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:92 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:93 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:96 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:96 -1
     (nil)
 -> 26)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 87 [ D.7768 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:97 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:97 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:97 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 1 dx)
        (reg:DI 90)) Commands.c:97 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 91)) Commands.c:97 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.7768 ])) Commands.c:97 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM_SU_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c0d510 TPM_SU_Unmarshal>) [0 TPM_SU_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:97 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 4 (set (reg:SI 92)
        (reg:SI 0 ax)) Commands.c:97 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 92)) Commands.c:97 -1
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:98 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:98 -1
     (nil)
 -> 26)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:99 -1
     (nil))
(code_label 26 25 27 6 5 "" [2 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 31 6 (set (reg:SI 88 [ D.7769 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:102 -1
     (nil))
(insn 31 28 35 6 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.7769 ])) Commands.c:102 -1
     (nil))
(insn 35 31 36 6 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:103 -1
     (nil))
(insn 36 35 0 6 (use (reg/i:SI 0 ax)) Commands.c:103 -1
     (nil))

;; Function SelfTest_In_Unmarshal (SelfTest_In_Unmarshal, funcdef_no=2, decl_uid=3702, cgraph_uid=2, symbol_order=4)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 32.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:106 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:106 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:106 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:106 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:107 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:110 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:110 -1
     (nil)
 -> 26)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 87 [ D.7770 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:111 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:111 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:111 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 1 dx)
        (reg:DI 90)) Commands.c:111 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 91)) Commands.c:111 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.7770 ])) Commands.c:111 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_YES_NO_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c0de58 TPMI_YES_NO_Unmarshal>) [0 TPMI_YES_NO_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:111 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 4 (set (reg:SI 92)
        (reg:SI 0 ax)) Commands.c:111 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 92)) Commands.c:111 -1
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:112 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:112 -1
     (nil)
 -> 26)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:113 -1
     (nil))
(code_label 26 25 27 6 8 "" [2 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 31 6 (set (reg:SI 88 [ D.7771 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:116 -1
     (nil))
(insn 31 28 35 6 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.7771 ])) Commands.c:116 -1
     (nil))
(insn 35 31 36 6 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:117 -1
     (nil))
(insn 36 35 0 6 (use (reg/i:SI 0 ax)) Commands.c:117 -1
     (nil))

;; Function IncrementalSelfTest_In_Unmarshal (IncrementalSelfTest_In_Unmarshal, funcdef_no=3, decl_uid=3707, cgraph_uid=3, symbol_order=5)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 32.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:120 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:120 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:120 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:120 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:121 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:124 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:124 -1
     (nil)
 -> 26)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 87 [ D.7772 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:125 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:125 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:125 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 1 dx)
        (reg:DI 90)) Commands.c:125 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 91)) Commands.c:125 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.7772 ])) Commands.c:125 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPML_ALG_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c2a000 TPML_ALG_Unmarshal>) [0 TPML_ALG_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:125 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 4 (set (reg:SI 92)
        (reg:SI 0 ax)) Commands.c:125 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 92)) Commands.c:125 -1
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:126 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:126 -1
     (nil)
 -> 26)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:127 -1
     (nil))
(code_label 26 25 27 6 11 "" [2 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 31 6 (set (reg:SI 88 [ D.7773 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:130 -1
     (nil))
(insn 31 28 35 6 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.7773 ])) Commands.c:130 -1
     (nil))
(insn 35 31 36 6 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:131 -1
     (nil))
(insn 36 35 0 6 (use (reg/i:SI 0 ax)) Commands.c:131 -1
     (nil))

;; Function StartAuthSession_In_Unmarshal (StartAuthSession_In_Unmarshal, funcdef_no=4, decl_uid=3722, cgraph_uid=4, symbol_order=6)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 21 into block 20...
Merged blocks 20 and 21.
Merged 20 and 21 without moving.
Removing jump 124.
Merging block 22 into block 20...
Merged blocks 20 and 22.
Merged 20 and 22 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:134 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:134 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:134 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:134 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:135 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:137 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:137 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:138 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7774 ])
        (mem:SI (reg/f:DI 96) [0 *handles_14(D)+0 S4 A32])) Commands.c:138 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:138 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 97) [0 target_16(D)->tpmKey+0 S4 A32])
        (reg:SI 87 [ D.7774 ])) Commands.c:138 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:139 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.7774 ])
        (mem:SI (plus:DI (reg/f:DI 98)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_14(D) + 4B]+0 S4 A32])) Commands.c:139 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:139 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 99)
                (const_int 4 [0x4])) [0 target_16(D)->bind+0 S4 A32])
        (reg:SI 88 [ D.7774 ])) Commands.c:139 -1
     (nil))
(code_label 21 20 22 5 14 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:141 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:141 -1
     (nil)
 -> 40)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:142 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 89 [ D.7775 ])
                (plus:DI (reg/f:DI 100)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:142 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 28 27 29 6 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:142 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:142 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx)
        (reg:DI 101)) Commands.c:142 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 102)) Commands.c:142 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7775 ])) Commands.c:142 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_NONCE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cd80 TPM2B_NONCE_Unmarshal>) [0 TPM2B_NONCE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:142 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 6 (set (reg:SI 103)
        (reg:SI 0 ax)) Commands.c:142 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 103)) Commands.c:142 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:143 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:143 -1
     (nil)
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:144 -1
     (nil))
(code_label 40 39 41 8 15 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:147 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) Commands.c:147 -1
     (nil)
 -> 59)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:148 -1
     (nil))
(insn 46 45 47 9 (parallel [
            (set (reg/f:DI 90 [ D.7776 ])
                (plus:DI (reg/f:DI 104)
                    (const_int 138 [0x8a])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:148 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 138 [0x8a]))
        (nil)))
(insn 47 46 48 9 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:148 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:148 -1
     (nil))
(insn 49 48 50 9 (set (reg:DI 1 dx)
        (reg:DI 105)) Commands.c:148 -1
     (nil))
(insn 50 49 51 9 (set (reg:DI 4 si)
        (reg:DI 106)) Commands.c:148 -1
     (nil))
(insn 51 50 52 9 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7776 ])) Commands.c:148 -1
     (nil))
(call_insn 52 51 53 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_ENCRYPTED_SECRET_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c48e58 TPM2B_ENCRYPTED_SECRET_Unmarshal>) [0 TPM2B_ENCRYPTED_SECRET_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:148 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 53 52 54 9 (set (reg:SI 107)
        (reg:SI 0 ax)) Commands.c:148 -1
     (nil))
(insn 54 53 55 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 107)) Commands.c:148 -1
     (nil))
(insn 55 54 56 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:149 -1
     (nil))
(jump_insn 56 55 57 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) Commands.c:149 -1
     (nil)
 -> 59)
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:150 -1
     (nil))
(code_label 59 58 60 11 16 "" [2 uses])
(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:153 -1
     (nil))
(jump_insn 62 61 63 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) Commands.c:153 -1
     (nil)
 -> 78)
(note 63 62 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 12 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:154 -1
     (nil))
(insn 65 64 66 12 (parallel [
            (set (reg/f:DI 91 [ D.7777 ])
                (plus:DI (reg/f:DI 108)
                    (const_int 396 [0x18c])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:154 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 396 [0x18c]))
        (nil)))
(insn 66 65 67 12 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:154 -1
     (nil))
(insn 67 66 68 12 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:154 -1
     (nil))
(insn 68 67 69 12 (set (reg:DI 1 dx)
        (reg:DI 109)) Commands.c:154 -1
     (nil))
(insn 69 68 70 12 (set (reg:DI 4 si)
        (reg:DI 110)) Commands.c:154 -1
     (nil))
(insn 70 69 71 12 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.7777 ])) Commands.c:154 -1
     (nil))
(call_insn 71 70 72 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM_SE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c0d5e8 TPM_SE_Unmarshal>) [0 TPM_SE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:154 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 72 71 73 12 (set (reg:SI 111)
        (reg:SI 0 ax)) Commands.c:154 -1
     (nil))
(insn 73 72 74 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 111)) Commands.c:154 -1
     (nil))
(insn 74 73 75 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:155 -1
     (nil))
(jump_insn 75 74 76 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) Commands.c:155 -1
     (nil)
 -> 78)
(note 76 75 77 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:156 -1
     (nil))
(code_label 78 77 79 14 17 "" [2 uses])
(note 79 78 80 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:159 -1
     (nil))
(jump_insn 81 80 82 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) Commands.c:159 -1
     (nil)
 -> 98)
(note 82 81 83 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 15 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:160 -1
     (nil))
(insn 84 83 85 15 (parallel [
            (set (reg/f:DI 92 [ D.7778 ])
                (plus:DI (reg/f:DI 112)
                    (const_int 398 [0x18e])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:160 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 398 [0x18e]))
        (nil)))
(insn 85 84 86 15 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:160 -1
     (nil))
(insn 86 85 87 15 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:160 -1
     (nil))
(insn 87 86 88 15 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:160 -1
     (nil))
(insn 88 87 89 15 (set (reg:DI 1 dx)
        (reg:DI 113)) Commands.c:160 -1
     (nil))
(insn 89 88 90 15 (set (reg:DI 4 si)
        (reg:DI 114)) Commands.c:160 -1
     (nil))
(insn 90 89 91 15 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.7778 ])) Commands.c:160 -1
     (nil))
(call_insn 91 90 92 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_SYM_DEF_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c31948 TPMT_SYM_DEF_Unmarshal>) [0 TPMT_SYM_DEF_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:160 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 92 91 93 15 (set (reg:SI 115)
        (reg:SI 0 ax)) Commands.c:160 -1
     (nil))
(insn 93 92 94 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 115)) Commands.c:160 -1
     (nil))
(insn 94 93 95 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:161 -1
     (nil))
(jump_insn 95 94 96 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) Commands.c:161 -1
     (nil)
 -> 98)
(note 96 95 97 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 1088 [0x440])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:162 -1
     (nil))
(code_label 98 97 99 17 18 "" [2 uses])
(note 99 98 100 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:165 -1
     (nil))
(jump_insn 101 100 102 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) Commands.c:165 -1
     (nil)
 -> 118)
(note 102 101 103 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 18 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:166 -1
     (nil))
(insn 104 103 105 18 (parallel [
            (set (reg/f:DI 93 [ D.7779 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 404 [0x194])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:166 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 404 [0x194]))
        (nil)))
(insn 105 104 106 18 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:166 -1
     (nil))
(insn 106 105 107 18 (set (reg:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:166 -1
     (nil))
(insn 107 106 108 18 (set (reg:SI 2 cx)
        (const_int 0 [0])) Commands.c:166 -1
     (nil))
(insn 108 107 109 18 (set (reg:DI 1 dx)
        (reg:DI 117)) Commands.c:166 -1
     (nil))
(insn 109 108 110 18 (set (reg:DI 4 si)
        (reg:DI 118)) Commands.c:166 -1
     (nil))
(insn 110 109 111 18 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.7779 ])) Commands.c:166 -1
     (nil))
(call_insn 111 110 112 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_ALG_HASH_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1c0d8 TPMI_ALG_HASH_Unmarshal>) [0 TPMI_ALG_HASH_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:166 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 112 111 113 18 (set (reg:SI 119)
        (reg:SI 0 ax)) Commands.c:166 -1
     (nil))
(insn 113 112 114 18 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 119)) Commands.c:166 -1
     (nil))
(insn 114 113 115 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:167 -1
     (nil))
(jump_insn 115 114 116 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) Commands.c:167 -1
     (nil)
 -> 118)
(note 116 115 117 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 1344 [0x540])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:168 -1
     (nil))
(code_label 118 117 119 20 19 "" [2 uses])
(note 119 118 120 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 123 20 (set (reg:SI 94 [ D.7780 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:171 -1
     (nil))
(insn 123 120 127 20 (set (reg:SI 95 [ <retval> ])
        (reg:SI 94 [ D.7780 ])) Commands.c:171 -1
     (nil))
(insn 127 123 128 20 (set (reg/i:SI 0 ax)
        (reg:SI 95 [ <retval> ])) Commands.c:172 -1
     (nil))
(insn 128 127 0 20 (use (reg/i:SI 0 ax)) Commands.c:172 -1
     (nil))

;; Function PolicyRestart_In_Unmarshal (PolicyRestart_In_Unmarshal, funcdef_no=5, decl_uid=3732, cgraph_uid=5, symbol_order=7)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 23.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:175 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:175 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:175 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:175 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:176 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:180 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:180 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:181 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7781 ])
        (mem:SI (reg/f:DI 90) [0 *handles_8(D)+0 S4 A32])) Commands.c:181 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:181 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 91) [0 target_10(D)->sessionHandle+0 S4 A32])
        (reg:SI 87 [ D.7781 ])) Commands.c:181 -1
     (nil))
(code_label 17 16 18 5 22 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 22 5 (set (reg:SI 88 [ D.7782 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:183 -1
     (nil))
(insn 22 19 26 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.7782 ])) Commands.c:183 -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:184 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) Commands.c:184 -1
     (nil))

;; Function Create_In_Unmarshal (Create_In_Unmarshal, funcdef_no=6, decl_uid=3737, cgraph_uid=6, symbol_order=8)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Removing jump 100.
Merging block 19 into block 17...
Merged blocks 17 and 19.
Merged 17 and 19 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:187 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:187 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:187 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:187 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:188 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:190 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:190 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:191 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7783 ])
        (mem:SI (reg/f:DI 94) [0 *handles_12(D)+0 S4 A32])) Commands.c:191 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:191 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 95) [0 target_14(D)->parentHandle+0 S4 A32])
        (reg:SI 87 [ D.7783 ])) Commands.c:191 -1
     (nil))
(code_label 17 16 18 5 25 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:193 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:193 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:194 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7784 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:194 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:194 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:194 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 97)) Commands.c:194 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 98)) Commands.c:194 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7784 ])) Commands.c:194 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_SENSITIVE_CREATE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c39000 TPM2B_SENSITIVE_CREATE_Unmarshal>) [0 TPM2B_SENSITIVE_CREATE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:194 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 99)
        (reg:SI 0 ax)) Commands.c:194 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 99)) Commands.c:194 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:195 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:195 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:196 -1
     (nil))
(code_label 36 35 37 8 26 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:199 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:199 -1
     (nil)
 -> 56)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:200 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7785 ])
                (plus:DI (reg/f:DI 100)
                    (const_int 268 [0x10c])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:200 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 268 [0x10c]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:200 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:200 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 2 cx)
        (const_int 0 [0])) Commands.c:200 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 1 dx)
        (reg:DI 101)) Commands.c:200 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 4 si)
        (reg:DI 102)) Commands.c:200 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7785 ])) Commands.c:200 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_PUBLIC_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c51798 TPM2B_PUBLIC_Unmarshal>) [0 TPM2B_PUBLIC_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:200 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 50 49 51 9 (set (reg:SI 103)
        (reg:SI 0 ax)) Commands.c:200 -1
     (nil))
(insn 51 50 52 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 103)) Commands.c:200 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:201 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:201 -1
     (nil)
 -> 56)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:202 -1
     (nil))
(code_label 56 55 57 11 27 "" [2 uses])
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:205 -1
     (nil))
(jump_insn 59 58 60 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:205 -1
     (nil)
 -> 75)
(note 60 59 61 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 12 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:206 -1
     (nil))
(insn 62 61 63 12 (parallel [
            (set (reg/f:DI 90 [ D.7786 ])
                (plus:DI (reg/f:DI 104)
                    (const_int 692 [0x2b4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:206 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 692 [0x2b4]))
        (nil)))
(insn 63 62 64 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:206 -1
     (nil))
(insn 64 63 65 12 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:206 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 1 dx)
        (reg:DI 105)) Commands.c:206 -1
     (nil))
(insn 66 65 67 12 (set (reg:DI 4 si)
        (reg:DI 106)) Commands.c:206 -1
     (nil))
(insn 67 66 68 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7786 ])) Commands.c:206 -1
     (nil))
(call_insn 68 67 69 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DATA_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cca8 TPM2B_DATA_Unmarshal>) [0 TPM2B_DATA_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:206 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 69 68 70 12 (set (reg:SI 107)
        (reg:SI 0 ax)) Commands.c:206 -1
     (nil))
(insn 70 69 71 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 107)) Commands.c:206 -1
     (nil))
(insn 71 70 72 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:207 -1
     (nil))
(jump_insn 72 71 73 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:207 -1
     (nil)
 -> 75)
(note 73 72 74 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:208 -1
     (nil))
(code_label 75 74 76 14 28 "" [2 uses])
(note 76 75 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:211 -1
     (nil))
(jump_insn 78 77 79 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) Commands.c:211 -1
     (nil)
 -> 94)
(note 79 78 80 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 15 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:212 -1
     (nil))
(insn 81 80 82 15 (parallel [
            (set (reg/f:DI 91 [ D.7787 ])
                (plus:DI (reg/f:DI 108)
                    (const_int 824 [0x338])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:212 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 824 [0x338]))
        (nil)))
(insn 82 81 83 15 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:212 -1
     (nil))
(insn 83 82 84 15 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:212 -1
     (nil))
(insn 84 83 85 15 (set (reg:DI 1 dx)
        (reg:DI 109)) Commands.c:212 -1
     (nil))
(insn 85 84 86 15 (set (reg:DI 4 si)
        (reg:DI 110)) Commands.c:212 -1
     (nil))
(insn 86 85 87 15 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.7787 ])) Commands.c:212 -1
     (nil))
(call_insn 87 86 88 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPML_PCR_SELECTION_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c2a360 TPML_PCR_SELECTION_Unmarshal>) [0 TPML_PCR_SELECTION_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:212 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 88 87 89 15 (set (reg:SI 111)
        (reg:SI 0 ax)) Commands.c:212 -1
     (nil))
(insn 89 88 90 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 111)) Commands.c:212 -1
     (nil))
(insn 90 89 91 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:213 -1
     (nil))
(jump_insn 91 90 92 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) Commands.c:213 -1
     (nil)
 -> 94)
(note 92 91 93 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 1088 [0x440])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:214 -1
     (nil))
(code_label 94 93 95 17 29 "" [2 uses])
(note 95 94 96 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 99 17 (set (reg:SI 92 [ D.7788 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:217 -1
     (nil))
(insn 99 96 103 17 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.7788 ])) Commands.c:217 -1
     (nil))
(insn 103 99 104 17 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) Commands.c:218 -1
     (nil))
(insn 104 103 0 17 (use (reg/i:SI 0 ax)) Commands.c:218 -1
     (nil))

;; Function Load_In_Unmarshal (Load_In_Unmarshal, funcdef_no=7, decl_uid=3747, cgraph_uid=7, symbol_order=9)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 62.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:221 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:221 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:221 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:221 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:222 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:224 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:224 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:225 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7789 ])
        (mem:SI (reg/f:DI 92) [0 *handles_8(D)+0 S4 A32])) Commands.c:225 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:225 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_10(D)->parentHandle+0 S4 A32])
        (reg:SI 87 [ D.7789 ])) Commands.c:225 -1
     (nil))
(code_label 17 16 18 5 32 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:227 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:227 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:228 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7790 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:228 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:228 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:228 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 95)) Commands.c:228 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 96)) Commands.c:228 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7790 ])) Commands.c:228 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_PRIVATE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c51ca8 TPM2B_PRIVATE_Unmarshal>) [0 TPM2B_PRIVATE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:228 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 97)
        (reg:SI 0 ax)) Commands.c:228 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 97)) Commands.c:228 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:229 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:229 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:230 -1
     (nil))
(code_label 36 35 37 8 33 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:233 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:233 -1
     (nil)
 -> 56)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:234 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7791 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 1172 [0x494])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:234 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 1172 [0x494]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:234 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:234 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 2 cx)
        (const_int 0 [0])) Commands.c:234 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 1 dx)
        (reg:DI 99)) Commands.c:234 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 4 si)
        (reg:DI 100)) Commands.c:234 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7791 ])) Commands.c:234 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_PUBLIC_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c51798 TPM2B_PUBLIC_Unmarshal>) [0 TPM2B_PUBLIC_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:234 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 50 49 51 9 (set (reg:SI 101)
        (reg:SI 0 ax)) Commands.c:234 -1
     (nil))
(insn 51 50 52 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 101)) Commands.c:234 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:235 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:235 -1
     (nil)
 -> 56)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:236 -1
     (nil))
(code_label 56 55 57 11 34 "" [2 uses])
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 61 11 (set (reg:SI 90 [ D.7792 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:239 -1
     (nil))
(insn 61 58 65 11 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.7792 ])) Commands.c:239 -1
     (nil))
(insn 65 61 66 11 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:240 -1
     (nil))
(insn 66 65 0 11 (use (reg/i:SI 0 ax)) Commands.c:240 -1
     (nil))

;; Function LoadExternal_In_Unmarshal (LoadExternal_In_Unmarshal, funcdef_no=8, decl_uid=3757, cgraph_uid=8, symbol_order=10)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Removing jump 72.
Merging block 14 into block 12...
Merged blocks 12 and 14.
Merged 12 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:243 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:243 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:243 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:243 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:244 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:247 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:247 -1
     (nil)
 -> 26)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 87 [ D.7793 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:248 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:248 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:248 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 1 dx)
        (reg:DI 92)) Commands.c:248 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 93)) Commands.c:248 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.7793 ])) Commands.c:248 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_SENSITIVE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c51bd0 TPM2B_SENSITIVE_Unmarshal>) [0 TPM2B_SENSITIVE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:248 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 4 (set (reg:SI 94)
        (reg:SI 0 ax)) Commands.c:248 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 94)) Commands.c:248 -1
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:249 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:249 -1
     (nil)
 -> 26)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:250 -1
     (nil))
(code_label 26 25 27 6 37 "" [2 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:253 -1
     (nil))
(jump_insn 29 28 30 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) Commands.c:253 -1
     (nil)
 -> 46)
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 7 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:254 -1
     (nil))
(insn 32 31 33 7 (parallel [
            (set (reg/f:DI 88 [ D.7794 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 908 [0x38c])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:254 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 908 [0x38c]))
        (nil)))
(insn 33 32 34 7 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:254 -1
     (nil))
(insn 34 33 35 7 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:254 -1
     (nil))
(insn 35 34 36 7 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:254 -1
     (nil))
(insn 36 35 37 7 (set (reg:DI 1 dx)
        (reg:DI 96)) Commands.c:254 -1
     (nil))
(insn 37 36 38 7 (set (reg:DI 4 si)
        (reg:DI 97)) Commands.c:254 -1
     (nil))
(insn 38 37 39 7 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7794 ])) Commands.c:254 -1
     (nil))
(call_insn 39 38 40 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_PUBLIC_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c51798 TPM2B_PUBLIC_Unmarshal>) [0 TPM2B_PUBLIC_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:254 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 40 39 41 7 (set (reg:SI 98)
        (reg:SI 0 ax)) Commands.c:254 -1
     (nil))
(insn 41 40 42 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 98)) Commands.c:254 -1
     (nil))
(insn 42 41 43 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:255 -1
     (nil))
(jump_insn 43 42 44 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) Commands.c:255 -1
     (nil)
 -> 46)
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:256 -1
     (nil))
(code_label 46 45 47 9 38 "" [2 uses])
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:259 -1
     (nil))
(jump_insn 49 48 50 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) Commands.c:259 -1
     (nil)
 -> 66)
(note 50 49 51 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 10 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:260 -1
     (nil))
(insn 52 51 53 10 (parallel [
            (set (reg/f:DI 89 [ D.7795 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 1332 [0x534])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:260 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 1332 [0x534]))
        (nil)))
(insn 53 52 54 10 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:260 -1
     (nil))
(insn 54 53 55 10 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:260 -1
     (nil))
(insn 55 54 56 10 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:260 -1
     (nil))
(insn 56 55 57 10 (set (reg:DI 1 dx)
        (reg:DI 100)) Commands.c:260 -1
     (nil))
(insn 57 56 58 10 (set (reg:DI 4 si)
        (reg:DI 101)) Commands.c:260 -1
     (nil))
(insn 58 57 59 10 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7795 ])) Commands.c:260 -1
     (nil))
(call_insn 59 58 60 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_RH_HIERARCHY_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c13798 TPMI_RH_HIERARCHY_Unmarshal>) [0 TPMI_RH_HIERARCHY_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:260 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 60 59 61 10 (set (reg:SI 102)
        (reg:SI 0 ax)) Commands.c:260 -1
     (nil))
(insn 61 60 62 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 102)) Commands.c:260 -1
     (nil))
(insn 62 61 63 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:261 -1
     (nil))
(jump_insn 63 62 64 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) Commands.c:261 -1
     (nil)
 -> 66)
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:262 -1
     (nil))
(code_label 66 65 67 12 39 "" [2 uses])
(note 67 66 68 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 71 12 (set (reg:SI 90 [ D.7796 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:265 -1
     (nil))
(insn 71 68 75 12 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.7796 ])) Commands.c:265 -1
     (nil))
(insn 75 71 76 12 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:266 -1
     (nil))
(insn 76 75 0 12 (use (reg/i:SI 0 ax)) Commands.c:266 -1
     (nil))

;; Function ReadPublic_In_Unmarshal (ReadPublic_In_Unmarshal, funcdef_no=9, decl_uid=3767, cgraph_uid=9, symbol_order=11)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 23.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:270 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:270 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:270 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:270 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:271 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:275 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:275 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:276 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7797 ])
        (mem:SI (reg/f:DI 90) [0 *handles_8(D)+0 S4 A32])) Commands.c:276 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:276 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 91) [0 target_10(D)->objectHandle+0 S4 A32])
        (reg:SI 87 [ D.7797 ])) Commands.c:276 -1
     (nil))
(code_label 17 16 18 5 42 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 22 5 (set (reg:SI 88 [ D.7798 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:278 -1
     (nil))
(insn 22 19 26 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.7798 ])) Commands.c:278 -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:279 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) Commands.c:279 -1
     (nil))

;; Function ActivateCredential_In_Unmarshal (ActivateCredential_In_Unmarshal, funcdef_no=10, decl_uid=3777, cgraph_uid=10, symbol_order=12)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 65.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:282 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:282 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:282 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:282 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:283 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:285 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:285 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:286 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7799 ])
        (mem:SI (reg/f:DI 93) [0 *handles_8(D)+0 S4 A32])) Commands.c:286 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:286 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 94) [0 target_10(D)->activateHandle+0 S4 A32])
        (reg:SI 87 [ D.7799 ])) Commands.c:286 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:287 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.7799 ])
        (mem:SI (plus:DI (reg/f:DI 95)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_8(D) + 4B]+0 S4 A32])) Commands.c:287 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:287 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 96)
                (const_int 4 [0x4])) [0 target_10(D)->keyHandle+0 S4 A32])
        (reg:SI 88 [ D.7799 ])) Commands.c:287 -1
     (nil))
(code_label 21 20 22 5 45 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:289 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:289 -1
     (nil)
 -> 40)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:290 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 89 [ D.7800 ])
                (plus:DI (reg/f:DI 97)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:290 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 28 27 29 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:290 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:290 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx)
        (reg:DI 98)) Commands.c:290 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 99)) Commands.c:290 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7800 ])) Commands.c:290 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_ID_OBJECT_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c51d80 TPM2B_ID_OBJECT_Unmarshal>) [0 TPM2B_ID_OBJECT_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:290 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 6 (set (reg:SI 100)
        (reg:SI 0 ax)) Commands.c:290 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 100)) Commands.c:290 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:291 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:291 -1
     (nil)
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:292 -1
     (nil))
(code_label 40 39 41 8 46 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:295 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) Commands.c:295 -1
     (nil)
 -> 59)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:296 -1
     (nil))
(insn 46 45 47 9 (parallel [
            (set (reg/f:DI 90 [ D.7801 ])
                (plus:DI (reg/f:DI 101)
                    (const_int 270 [0x10e])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:296 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 270 [0x10e]))
        (nil)))
(insn 47 46 48 9 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:296 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:296 -1
     (nil))
(insn 49 48 50 9 (set (reg:DI 1 dx)
        (reg:DI 102)) Commands.c:296 -1
     (nil))
(insn 50 49 51 9 (set (reg:DI 4 si)
        (reg:DI 103)) Commands.c:296 -1
     (nil))
(insn 51 50 52 9 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7801 ])) Commands.c:296 -1
     (nil))
(call_insn 52 51 53 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_ENCRYPTED_SECRET_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c48e58 TPM2B_ENCRYPTED_SECRET_Unmarshal>) [0 TPM2B_ENCRYPTED_SECRET_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:296 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 53 52 54 9 (set (reg:SI 104)
        (reg:SI 0 ax)) Commands.c:296 -1
     (nil))
(insn 54 53 55 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 104)) Commands.c:296 -1
     (nil))
(insn 55 54 56 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:297 -1
     (nil))
(jump_insn 56 55 57 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) Commands.c:297 -1
     (nil)
 -> 59)
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:298 -1
     (nil))
(code_label 59 58 60 11 47 "" [2 uses])
(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 64 11 (set (reg:SI 91 [ D.7802 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:301 -1
     (nil))
(insn 64 61 68 11 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.7802 ])) Commands.c:301 -1
     (nil))
(insn 68 64 69 11 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Commands.c:302 -1
     (nil))
(insn 69 68 0 11 (use (reg/i:SI 0 ax)) Commands.c:302 -1
     (nil))

;; Function MakeCredential_In_Unmarshal (MakeCredential_In_Unmarshal, funcdef_no=11, decl_uid=3787, cgraph_uid=11, symbol_order=13)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 61.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:305 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:305 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:305 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:305 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:306 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:308 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:308 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:309 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7803 ])
        (mem:SI (reg/f:DI 92) [0 *handles_8(D)+0 S4 A32])) Commands.c:309 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:309 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_10(D)->handle+0 S4 A32])
        (reg:SI 87 [ D.7803 ])) Commands.c:309 -1
     (nil))
(code_label 17 16 18 5 50 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:311 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:311 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:312 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7804 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:312 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:312 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:312 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 95)) Commands.c:312 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 96)) Commands.c:312 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7804 ])) Commands.c:312 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DIGEST_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cbd0 TPM2B_DIGEST_Unmarshal>) [0 TPM2B_DIGEST_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:312 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 97)
        (reg:SI 0 ax)) Commands.c:312 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 97)) Commands.c:312 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:313 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:313 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:314 -1
     (nil))
(code_label 36 35 37 8 51 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:317 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:317 -1
     (nil)
 -> 55)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:318 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7805 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 134 [0x86])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:318 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 134 [0x86]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:318 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:318 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 1 dx)
        (reg:DI 99)) Commands.c:318 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 4 si)
        (reg:DI 100)) Commands.c:318 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7805 ])) Commands.c:318 -1
     (nil))
(call_insn 48 47 49 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_NAME_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24510 TPM2B_NAME_Unmarshal>) [0 TPM2B_NAME_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:318 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 49 48 50 9 (set (reg:SI 101)
        (reg:SI 0 ax)) Commands.c:318 -1
     (nil))
(insn 50 49 51 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 101)) Commands.c:318 -1
     (nil))
(insn 51 50 52 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:319 -1
     (nil))
(jump_insn 52 51 53 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:319 -1
     (nil)
 -> 55)
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:320 -1
     (nil))
(code_label 55 54 56 11 52 "" [2 uses])
(note 56 55 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 60 11 (set (reg:SI 90 [ D.7806 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:323 -1
     (nil))
(insn 60 57 64 11 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.7806 ])) Commands.c:323 -1
     (nil))
(insn 64 60 65 11 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:324 -1
     (nil))
(insn 65 64 0 11 (use (reg/i:SI 0 ax)) Commands.c:324 -1
     (nil))

;; Function Unseal_In_Unmarshal (Unseal_In_Unmarshal, funcdef_no=12, decl_uid=3797, cgraph_uid=12, symbol_order=14)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 23.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:327 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:327 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:327 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:327 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:328 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:332 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:332 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:333 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7807 ])
        (mem:SI (reg/f:DI 90) [0 *handles_8(D)+0 S4 A32])) Commands.c:333 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:333 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 91) [0 target_10(D)->itemHandle+0 S4 A32])
        (reg:SI 87 [ D.7807 ])) Commands.c:333 -1
     (nil))
(code_label 17 16 18 5 55 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 22 5 (set (reg:SI 88 [ D.7808 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:335 -1
     (nil))
(insn 22 19 26 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.7808 ])) Commands.c:335 -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:336 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) Commands.c:336 -1
     (nil))

;; Function ObjectChangeAuth_In_Unmarshal (ObjectChangeAuth_In_Unmarshal, funcdef_no=13, decl_uid=3807, cgraph_uid=13, symbol_order=15)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Removing jump 42.
Merging block 9 into block 7...
Merged blocks 7 and 9.
Merged 7 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:339 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:339 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:339 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:339 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:340 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:342 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:342 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:343 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7809 ])
        (mem:SI (reg/f:DI 92) [0 *handles_6(D)+0 S4 A32])) Commands.c:343 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:343 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_8(D)->objectHandle+0 S4 A32])
        (reg:SI 87 [ D.7809 ])) Commands.c:343 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:344 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.7809 ])
        (mem:SI (plus:DI (reg/f:DI 94)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_6(D) + 4B]+0 S4 A32])) Commands.c:344 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:344 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 95)
                (const_int 4 [0x4])) [0 target_8(D)->parentHandle+0 S4 A32])
        (reg:SI 88 [ D.7809 ])) Commands.c:344 -1
     (nil))
(code_label 21 20 22 5 58 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:346 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:346 -1
     (nil)
 -> 36)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:347 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 89 [ D.7810 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:347 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 28 27 29 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:347 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:347 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx)
        (reg:DI 97)) Commands.c:347 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 98)) Commands.c:347 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7810 ])) Commands.c:347 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_AUTH_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1ce58 TPM2B_AUTH_Unmarshal>) [0 TPM2B_AUTH_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:347 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 6 (set (reg:SI 99)
        (reg:SI 0 ax)) Commands.c:347 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 99)) Commands.c:347 -1
     (nil))
(code_label 36 35 37 7 59 "" [1 uses])
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 7 (set (reg:SI 90 [ D.7811 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:349 -1
     (nil))
(insn 41 38 45 7 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.7811 ])) Commands.c:349 -1
     (nil))
(insn 45 41 46 7 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:350 -1
     (nil))
(insn 46 45 0 7 (use (reg/i:SI 0 ax)) Commands.c:350 -1
     (nil))

;; Function CreateLoaded_In_Unmarshal (CreateLoaded_In_Unmarshal, funcdef_no=14, decl_uid=3817, cgraph_uid=14, symbol_order=16)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 61.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:353 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:353 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:353 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:353 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:354 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:356 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:356 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:357 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7812 ])
        (mem:SI (reg/f:DI 92) [0 *handles_8(D)+0 S4 A32])) Commands.c:357 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:357 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_10(D)->parentHandle+0 S4 A32])
        (reg:SI 87 [ D.7812 ])) Commands.c:357 -1
     (nil))
(code_label 17 16 18 5 62 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:359 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:359 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:360 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7813 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:360 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:360 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:360 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 95)) Commands.c:360 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 96)) Commands.c:360 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7813 ])) Commands.c:360 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_SENSITIVE_CREATE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c39000 TPM2B_SENSITIVE_CREATE_Unmarshal>) [0 TPM2B_SENSITIVE_CREATE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:360 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 97)
        (reg:SI 0 ax)) Commands.c:360 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 97)) Commands.c:360 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:361 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:361 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:362 -1
     (nil))
(code_label 36 35 37 8 63 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:365 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:365 -1
     (nil)
 -> 55)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:366 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7814 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 266 [0x10a])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:366 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 266 [0x10a]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:366 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:366 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 1 dx)
        (reg:DI 99)) Commands.c:366 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 4 si)
        (reg:DI 100)) Commands.c:366 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7814 ])) Commands.c:366 -1
     (nil))
(call_insn 48 47 49 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_TEMPLATE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c51870 TPM2B_TEMPLATE_Unmarshal>) [0 TPM2B_TEMPLATE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:366 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 49 48 50 9 (set (reg:SI 101)
        (reg:SI 0 ax)) Commands.c:366 -1
     (nil))
(insn 50 49 51 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 101)) Commands.c:366 -1
     (nil))
(insn 51 50 52 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:367 -1
     (nil))
(jump_insn 52 51 53 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:367 -1
     (nil)
 -> 55)
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:368 -1
     (nil))
(code_label 55 54 56 11 64 "" [2 uses])
(note 56 55 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 60 11 (set (reg:SI 90 [ D.7815 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:371 -1
     (nil))
(insn 60 57 64 11 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.7815 ])) Commands.c:371 -1
     (nil))
(insn 64 60 65 11 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:372 -1
     (nil))
(insn 65 64 0 11 (use (reg/i:SI 0 ax)) Commands.c:372 -1
     (nil))

;; Function Duplicate_In_Unmarshal (Duplicate_In_Unmarshal, funcdef_no=15, decl_uid=3822, cgraph_uid=15, symbol_order=17)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 66.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:375 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:375 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:375 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:375 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:376 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:378 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:378 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:379 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7816 ])
        (mem:SI (reg/f:DI 93) [0 *handles_8(D)+0 S4 A32])) Commands.c:379 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:379 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 94) [0 target_10(D)->objectHandle+0 S4 A32])
        (reg:SI 87 [ D.7816 ])) Commands.c:379 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:380 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.7816 ])
        (mem:SI (plus:DI (reg/f:DI 95)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_8(D) + 4B]+0 S4 A32])) Commands.c:380 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:380 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 96)
                (const_int 4 [0x4])) [0 target_10(D)->newParentHandle+0 S4 A32])
        (reg:SI 88 [ D.7816 ])) Commands.c:380 -1
     (nil))
(code_label 21 20 22 5 67 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:382 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:382 -1
     (nil)
 -> 40)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:383 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 89 [ D.7817 ])
                (plus:DI (reg/f:DI 97)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:383 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 28 27 29 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:383 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:383 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx)
        (reg:DI 98)) Commands.c:383 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 99)) Commands.c:383 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7817 ])) Commands.c:383 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DATA_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cca8 TPM2B_DATA_Unmarshal>) [0 TPM2B_DATA_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:383 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 6 (set (reg:SI 100)
        (reg:SI 0 ax)) Commands.c:383 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 100)) Commands.c:383 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:384 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:384 -1
     (nil)
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:385 -1
     (nil))
(code_label 40 39 41 8 68 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:388 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) Commands.c:388 -1
     (nil)
 -> 60)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:389 -1
     (nil))
(insn 46 45 47 9 (parallel [
            (set (reg/f:DI 90 [ D.7818 ])
                (plus:DI (reg/f:DI 101)
                    (const_int 140 [0x8c])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:389 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 140 [0x8c]))
        (nil)))
(insn 47 46 48 9 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:389 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:389 -1
     (nil))
(insn 49 48 50 9 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:389 -1
     (nil))
(insn 50 49 51 9 (set (reg:DI 1 dx)
        (reg:DI 102)) Commands.c:389 -1
     (nil))
(insn 51 50 52 9 (set (reg:DI 4 si)
        (reg:DI 103)) Commands.c:389 -1
     (nil))
(insn 52 51 53 9 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7818 ])) Commands.c:389 -1
     (nil))
(call_insn 53 52 54 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_SYM_DEF_OBJECT_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c31a20 TPMT_SYM_DEF_OBJECT_Unmarshal>) [0 TPMT_SYM_DEF_OBJECT_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:389 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 54 53 55 9 (set (reg:SI 104)
        (reg:SI 0 ax)) Commands.c:389 -1
     (nil))
(insn 55 54 56 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 104)) Commands.c:389 -1
     (nil))
(insn 56 55 57 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:390 -1
     (nil))
(jump_insn 57 56 58 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) Commands.c:390 -1
     (nil)
 -> 60)
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:391 -1
     (nil))
(code_label 60 59 61 11 69 "" [2 uses])
(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 65 11 (set (reg:SI 91 [ D.7819 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:394 -1
     (nil))
(insn 65 62 69 11 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.7819 ])) Commands.c:394 -1
     (nil))
(insn 69 65 70 11 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Commands.c:395 -1
     (nil))
(insn 70 69 0 11 (use (reg/i:SI 0 ax)) Commands.c:395 -1
     (nil))

;; Function Rewrap_In_Unmarshal (Rewrap_In_Unmarshal, funcdef_no=16, decl_uid=3832, cgraph_uid=16, symbol_order=18)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 84.
Merging block 16 into block 14...
Merged blocks 14 and 16.
Merged 14 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:398 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:398 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:398 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:398 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:399 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:401 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:401 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:402 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7820 ])
        (mem:SI (reg/f:DI 94) [0 *handles_10(D)+0 S4 A32])) Commands.c:402 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:402 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 95) [0 target_12(D)->oldParent+0 S4 A32])
        (reg:SI 87 [ D.7820 ])) Commands.c:402 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:403 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.7820 ])
        (mem:SI (plus:DI (reg/f:DI 96)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_10(D) + 4B]+0 S4 A32])) Commands.c:403 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:403 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 97)
                (const_int 4 [0x4])) [0 target_12(D)->newParent+0 S4 A32])
        (reg:SI 88 [ D.7820 ])) Commands.c:403 -1
     (nil))
(code_label 21 20 22 5 72 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:405 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:405 -1
     (nil)
 -> 40)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:406 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 89 [ D.7821 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:406 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 28 27 29 6 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:406 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:406 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx)
        (reg:DI 99)) Commands.c:406 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 100)) Commands.c:406 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7821 ])) Commands.c:406 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_PRIVATE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c51ca8 TPM2B_PRIVATE_Unmarshal>) [0 TPM2B_PRIVATE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:406 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 6 (set (reg:SI 101)
        (reg:SI 0 ax)) Commands.c:406 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 101)) Commands.c:406 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:407 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:407 -1
     (nil)
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:408 -1
     (nil))
(code_label 40 39 41 8 73 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:411 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) Commands.c:411 -1
     (nil)
 -> 59)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:412 -1
     (nil))
(insn 46 45 47 9 (parallel [
            (set (reg/f:DI 90 [ D.7822 ])
                (plus:DI (reg/f:DI 102)
                    (const_int 1176 [0x498])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:412 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 1176 [0x498]))
        (nil)))
(insn 47 46 48 9 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:412 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:412 -1
     (nil))
(insn 49 48 50 9 (set (reg:DI 1 dx)
        (reg:DI 103)) Commands.c:412 -1
     (nil))
(insn 50 49 51 9 (set (reg:DI 4 si)
        (reg:DI 104)) Commands.c:412 -1
     (nil))
(insn 51 50 52 9 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7822 ])) Commands.c:412 -1
     (nil))
(call_insn 52 51 53 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_NAME_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24510 TPM2B_NAME_Unmarshal>) [0 TPM2B_NAME_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:412 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 53 52 54 9 (set (reg:SI 105)
        (reg:SI 0 ax)) Commands.c:412 -1
     (nil))
(insn 54 53 55 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 105)) Commands.c:412 -1
     (nil))
(insn 55 54 56 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:413 -1
     (nil))
(jump_insn 56 55 57 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) Commands.c:413 -1
     (nil)
 -> 59)
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:414 -1
     (nil))
(code_label 59 58 60 11 74 "" [2 uses])
(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:417 -1
     (nil))
(jump_insn 62 61 63 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) Commands.c:417 -1
     (nil)
 -> 78)
(note 63 62 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 12 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:418 -1
     (nil))
(insn 65 64 66 12 (parallel [
            (set (reg/f:DI 91 [ D.7823 ])
                (plus:DI (reg/f:DI 106)
                    (const_int 1310 [0x51e])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:418 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 1310 [0x51e]))
        (nil)))
(insn 66 65 67 12 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:418 -1
     (nil))
(insn 67 66 68 12 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:418 -1
     (nil))
(insn 68 67 69 12 (set (reg:DI 1 dx)
        (reg:DI 107)) Commands.c:418 -1
     (nil))
(insn 69 68 70 12 (set (reg:DI 4 si)
        (reg:DI 108)) Commands.c:418 -1
     (nil))
(insn 70 69 71 12 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.7823 ])) Commands.c:418 -1
     (nil))
(call_insn 71 70 72 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_ENCRYPTED_SECRET_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c48e58 TPM2B_ENCRYPTED_SECRET_Unmarshal>) [0 TPM2B_ENCRYPTED_SECRET_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:418 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 72 71 73 12 (set (reg:SI 109)
        (reg:SI 0 ax)) Commands.c:418 -1
     (nil))
(insn 73 72 74 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 109)) Commands.c:418 -1
     (nil))
(insn 74 73 75 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:419 -1
     (nil))
(jump_insn 75 74 76 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) Commands.c:419 -1
     (nil)
 -> 78)
(note 76 75 77 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:420 -1
     (nil))
(code_label 78 77 79 14 75 "" [2 uses])
(note 79 78 80 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 83 14 (set (reg:SI 92 [ D.7824 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:423 -1
     (nil))
(insn 83 80 87 14 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.7824 ])) Commands.c:423 -1
     (nil))
(insn 87 83 88 14 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) Commands.c:424 -1
     (nil))
(insn 88 87 0 14 (use (reg/i:SI 0 ax)) Commands.c:424 -1
     (nil))

;; Function Import_In_Unmarshal (Import_In_Unmarshal, funcdef_no=17, decl_uid=3842, cgraph_uid=17, symbol_order=19)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 20 into block 19...
Merged blocks 19 and 20.
Merged 19 and 20 without moving.
Removing jump 116.
Merging block 21 into block 19...
Merged blocks 19 and 21.
Merged 19 and 21 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:427 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:427 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:427 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:427 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:428 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:430 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:430 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:431 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7825 ])
        (mem:SI (reg/f:DI 95) [0 *handles_14(D)+0 S4 A32])) Commands.c:431 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:431 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 96) [0 target_16(D)->parentHandle+0 S4 A32])
        (reg:SI 87 [ D.7825 ])) Commands.c:431 -1
     (nil))
(code_label 17 16 18 5 78 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:433 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) Commands.c:433 -1
     (nil)
 -> 32)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:434 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7826 ])
                (plus:DI (reg/f:DI 97)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:434 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:434 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:434 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 98)) Commands.c:434 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 99)) Commands.c:434 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7826 ])) Commands.c:434 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DATA_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cca8 TPM2B_DATA_Unmarshal>) [0 TPM2B_DATA_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:434 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 100)
        (reg:SI 0 ax)) Commands.c:434 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 100)) Commands.c:434 -1
     (nil))
(code_label 32 31 33 7 79 "" [1 uses])
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:436 -1
     (nil))
(jump_insn 35 34 36 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) Commands.c:436 -1
     (nil)
 -> 52)
(note 36 35 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 8 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:437 -1
     (nil))
(insn 38 37 39 8 (parallel [
            (set (reg/f:DI 89 [ D.7827 ])
                (plus:DI (reg/f:DI 101)
                    (const_int 136 [0x88])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:437 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 136 [0x88]))
        (nil)))
(insn 39 38 40 8 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:437 -1
     (nil))
(insn 40 39 41 8 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:437 -1
     (nil))
(insn 41 40 42 8 (set (reg:SI 2 cx)
        (const_int 0 [0])) Commands.c:437 -1
     (nil))
(insn 42 41 43 8 (set (reg:DI 1 dx)
        (reg:DI 102)) Commands.c:437 -1
     (nil))
(insn 43 42 44 8 (set (reg:DI 4 si)
        (reg:DI 103)) Commands.c:437 -1
     (nil))
(insn 44 43 45 8 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7827 ])) Commands.c:437 -1
     (nil))
(call_insn 45 44 46 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_PUBLIC_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c51798 TPM2B_PUBLIC_Unmarshal>) [0 TPM2B_PUBLIC_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:437 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 46 45 47 8 (set (reg:SI 104)
        (reg:SI 0 ax)) Commands.c:437 -1
     (nil))
(insn 47 46 48 8 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 104)) Commands.c:437 -1
     (nil))
(insn 48 47 49 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:438 -1
     (nil))
(jump_insn 49 48 50 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) Commands.c:438 -1
     (nil)
 -> 52)
(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:439 -1
     (nil))
(code_label 52 51 53 10 80 "" [2 uses])
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:442 -1
     (nil))
(jump_insn 55 54 56 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) Commands.c:442 -1
     (nil)
 -> 71)
(note 56 55 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 11 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:443 -1
     (nil))
(insn 58 57 59 11 (parallel [
            (set (reg/f:DI 90 [ D.7828 ])
                (plus:DI (reg/f:DI 105)
                    (const_int 560 [0x230])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:443 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 560 [0x230]))
        (nil)))
(insn 59 58 60 11 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:443 -1
     (nil))
(insn 60 59 61 11 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:443 -1
     (nil))
(insn 61 60 62 11 (set (reg:DI 1 dx)
        (reg:DI 106)) Commands.c:443 -1
     (nil))
(insn 62 61 63 11 (set (reg:DI 4 si)
        (reg:DI 107)) Commands.c:443 -1
     (nil))
(insn 63 62 64 11 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7828 ])) Commands.c:443 -1
     (nil))
(call_insn 64 63 65 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_PRIVATE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c51ca8 TPM2B_PRIVATE_Unmarshal>) [0 TPM2B_PRIVATE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:443 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 65 64 66 11 (set (reg:SI 108)
        (reg:SI 0 ax)) Commands.c:443 -1
     (nil))
(insn 66 65 67 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 108)) Commands.c:443 -1
     (nil))
(insn 67 66 68 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:444 -1
     (nil))
(jump_insn 68 67 69 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) Commands.c:444 -1
     (nil)
 -> 71)
(note 69 68 70 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:445 -1
     (nil))
(code_label 71 70 72 13 81 "" [2 uses])
(note 72 71 73 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:448 -1
     (nil))
(jump_insn 74 73 75 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) Commands.c:448 -1
     (nil)
 -> 90)
(note 75 74 76 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 14 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:449 -1
     (nil))
(insn 77 76 78 14 (parallel [
            (set (reg/f:DI 91 [ D.7829 ])
                (plus:DI (reg/f:DI 109)
                    (const_int 1728 [0x6c0])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:449 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 1728 [0x6c0]))
        (nil)))
(insn 78 77 79 14 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:449 -1
     (nil))
(insn 79 78 80 14 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:449 -1
     (nil))
(insn 80 79 81 14 (set (reg:DI 1 dx)
        (reg:DI 110)) Commands.c:449 -1
     (nil))
(insn 81 80 82 14 (set (reg:DI 4 si)
        (reg:DI 111)) Commands.c:449 -1
     (nil))
(insn 82 81 83 14 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.7829 ])) Commands.c:449 -1
     (nil))
(call_insn 83 82 84 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_ENCRYPTED_SECRET_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c48e58 TPM2B_ENCRYPTED_SECRET_Unmarshal>) [0 TPM2B_ENCRYPTED_SECRET_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:449 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 84 83 85 14 (set (reg:SI 112)
        (reg:SI 0 ax)) Commands.c:449 -1
     (nil))
(insn 85 84 86 14 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 112)) Commands.c:449 -1
     (nil))
(insn 86 85 87 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:450 -1
     (nil))
(jump_insn 87 86 88 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) Commands.c:450 -1
     (nil)
 -> 90)
(note 88 87 89 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 1088 [0x440])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:451 -1
     (nil))
(code_label 90 89 91 16 82 "" [2 uses])
(note 91 90 92 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:454 -1
     (nil))
(jump_insn 93 92 94 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) Commands.c:454 -1
     (nil)
 -> 110)
(note 94 93 95 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 17 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:455 -1
     (nil))
(insn 96 95 97 17 (parallel [
            (set (reg/f:DI 92 [ D.7830 ])
                (plus:DI (reg/f:DI 113)
                    (const_int 1986 [0x7c2])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:455 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 1986 [0x7c2]))
        (nil)))
(insn 97 96 98 17 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:455 -1
     (nil))
(insn 98 97 99 17 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:455 -1
     (nil))
(insn 99 98 100 17 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:455 -1
     (nil))
(insn 100 99 101 17 (set (reg:DI 1 dx)
        (reg:DI 114)) Commands.c:455 -1
     (nil))
(insn 101 100 102 17 (set (reg:DI 4 si)
        (reg:DI 115)) Commands.c:455 -1
     (nil))
(insn 102 101 103 17 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.7830 ])) Commands.c:455 -1
     (nil))
(call_insn 103 102 104 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_SYM_DEF_OBJECT_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c31a20 TPMT_SYM_DEF_OBJECT_Unmarshal>) [0 TPMT_SYM_DEF_OBJECT_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:455 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 104 103 105 17 (set (reg:SI 116)
        (reg:SI 0 ax)) Commands.c:455 -1
     (nil))
(insn 105 104 106 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 116)) Commands.c:455 -1
     (nil))
(insn 106 105 107 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:456 -1
     (nil))
(jump_insn 107 106 108 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) Commands.c:456 -1
     (nil)
 -> 110)
(note 108 107 109 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 1344 [0x540])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:457 -1
     (nil))
(code_label 110 109 111 19 83 "" [2 uses])
(note 111 110 112 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 115 19 (set (reg:SI 93 [ D.7831 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:460 -1
     (nil))
(insn 115 112 119 19 (set (reg:SI 94 [ <retval> ])
        (reg:SI 93 [ D.7831 ])) Commands.c:460 -1
     (nil))
(insn 119 115 120 19 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) Commands.c:461 -1
     (nil))
(insn 120 119 0 19 (use (reg/i:SI 0 ax)) Commands.c:461 -1
     (nil))

;; Function RSA_Encrypt_In_Unmarshal (RSA_Encrypt_In_Unmarshal, funcdef_no=18, decl_uid=3852, cgraph_uid=18, symbol_order=20)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 81.
Merging block 16 into block 14...
Merged blocks 14 and 16.
Merged 14 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:464 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:464 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:464 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:464 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:465 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:467 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:467 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:468 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7832 ])
        (mem:SI (reg/f:DI 93) [0 *handles_10(D)+0 S4 A32])) Commands.c:468 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:468 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 94) [0 target_12(D)->keyHandle+0 S4 A32])
        (reg:SI 87 [ D.7832 ])) Commands.c:468 -1
     (nil))
(code_label 17 16 18 5 86 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:470 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:470 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:471 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7833 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:471 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:471 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:471 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 96)) Commands.c:471 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 97)) Commands.c:471 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7833 ])) Commands.c:471 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_PUBLIC_KEY_RSA_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c42ca8 TPM2B_PUBLIC_KEY_RSA_Unmarshal>) [0 TPM2B_PUBLIC_KEY_RSA_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:471 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 98)
        (reg:SI 0 ax)) Commands.c:471 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 98)) Commands.c:471 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:472 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:472 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:473 -1
     (nil))
(code_label 36 35 37 8 87 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:476 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:476 -1
     (nil)
 -> 56)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:477 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7834 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 262 [0x106])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:477 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 262 [0x106]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:477 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:477 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:477 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 1 dx)
        (reg:DI 100)) Commands.c:477 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 4 si)
        (reg:DI 101)) Commands.c:477 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7834 ])) Commands.c:477 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_RSA_DECRYPT_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c42bd0 TPMT_RSA_DECRYPT_Unmarshal>) [0 TPMT_RSA_DECRYPT_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:477 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 50 49 51 9 (set (reg:SI 102)
        (reg:SI 0 ax)) Commands.c:477 -1
     (nil))
(insn 51 50 52 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 102)) Commands.c:477 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:478 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:478 -1
     (nil)
 -> 56)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:479 -1
     (nil))
(code_label 56 55 57 11 88 "" [2 uses])
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:482 -1
     (nil))
(jump_insn 59 58 60 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:482 -1
     (nil)
 -> 75)
(note 60 59 61 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 12 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:483 -1
     (nil))
(insn 62 61 63 12 (parallel [
            (set (reg/f:DI 90 [ D.7835 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 268 [0x10c])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:483 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 268 [0x10c]))
        (nil)))
(insn 63 62 64 12 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:483 -1
     (nil))
(insn 64 63 65 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:483 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 1 dx)
        (reg:DI 104)) Commands.c:483 -1
     (nil))
(insn 66 65 67 12 (set (reg:DI 4 si)
        (reg:DI 105)) Commands.c:483 -1
     (nil))
(insn 67 66 68 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7835 ])) Commands.c:483 -1
     (nil))
(call_insn 68 67 69 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DATA_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cca8 TPM2B_DATA_Unmarshal>) [0 TPM2B_DATA_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:483 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 69 68 70 12 (set (reg:SI 106)
        (reg:SI 0 ax)) Commands.c:483 -1
     (nil))
(insn 70 69 71 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 106)) Commands.c:483 -1
     (nil))
(insn 71 70 72 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:484 -1
     (nil))
(jump_insn 72 71 73 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:484 -1
     (nil)
 -> 75)
(note 73 72 74 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:485 -1
     (nil))
(code_label 75 74 76 14 89 "" [2 uses])
(note 76 75 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 80 14 (set (reg:SI 91 [ D.7836 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:488 -1
     (nil))
(insn 80 77 84 14 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.7836 ])) Commands.c:488 -1
     (nil))
(insn 84 80 85 14 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Commands.c:489 -1
     (nil))
(insn 85 84 0 14 (use (reg/i:SI 0 ax)) Commands.c:489 -1
     (nil))

;; Function RSA_Decrypt_In_Unmarshal (RSA_Decrypt_In_Unmarshal, funcdef_no=19, decl_uid=3862, cgraph_uid=19, symbol_order=21)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 81.
Merging block 16 into block 14...
Merged blocks 14 and 16.
Merged 14 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:492 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:492 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:492 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:492 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:493 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:495 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:495 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:496 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7837 ])
        (mem:SI (reg/f:DI 93) [0 *handles_10(D)+0 S4 A32])) Commands.c:496 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:496 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 94) [0 target_12(D)->keyHandle+0 S4 A32])
        (reg:SI 87 [ D.7837 ])) Commands.c:496 -1
     (nil))
(code_label 17 16 18 5 92 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:498 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:498 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:499 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7838 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:499 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:499 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:499 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 96)) Commands.c:499 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 97)) Commands.c:499 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7838 ])) Commands.c:499 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_PUBLIC_KEY_RSA_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c42ca8 TPM2B_PUBLIC_KEY_RSA_Unmarshal>) [0 TPM2B_PUBLIC_KEY_RSA_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:499 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 98)
        (reg:SI 0 ax)) Commands.c:499 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 98)) Commands.c:499 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:500 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:500 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:501 -1
     (nil))
(code_label 36 35 37 8 93 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:504 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:504 -1
     (nil)
 -> 56)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:505 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7839 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 262 [0x106])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:505 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 262 [0x106]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:505 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:505 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:505 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 1 dx)
        (reg:DI 100)) Commands.c:505 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 4 si)
        (reg:DI 101)) Commands.c:505 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7839 ])) Commands.c:505 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_RSA_DECRYPT_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c42bd0 TPMT_RSA_DECRYPT_Unmarshal>) [0 TPMT_RSA_DECRYPT_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:505 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 50 49 51 9 (set (reg:SI 102)
        (reg:SI 0 ax)) Commands.c:505 -1
     (nil))
(insn 51 50 52 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 102)) Commands.c:505 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:506 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:506 -1
     (nil)
 -> 56)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:507 -1
     (nil))
(code_label 56 55 57 11 94 "" [2 uses])
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:510 -1
     (nil))
(jump_insn 59 58 60 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:510 -1
     (nil)
 -> 75)
(note 60 59 61 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 12 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:511 -1
     (nil))
(insn 62 61 63 12 (parallel [
            (set (reg/f:DI 90 [ D.7840 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 268 [0x10c])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:511 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 268 [0x10c]))
        (nil)))
(insn 63 62 64 12 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:511 -1
     (nil))
(insn 64 63 65 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:511 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 1 dx)
        (reg:DI 104)) Commands.c:511 -1
     (nil))
(insn 66 65 67 12 (set (reg:DI 4 si)
        (reg:DI 105)) Commands.c:511 -1
     (nil))
(insn 67 66 68 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7840 ])) Commands.c:511 -1
     (nil))
(call_insn 68 67 69 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DATA_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cca8 TPM2B_DATA_Unmarshal>) [0 TPM2B_DATA_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:511 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 69 68 70 12 (set (reg:SI 106)
        (reg:SI 0 ax)) Commands.c:511 -1
     (nil))
(insn 70 69 71 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 106)) Commands.c:511 -1
     (nil))
(insn 71 70 72 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:512 -1
     (nil))
(jump_insn 72 71 73 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:512 -1
     (nil)
 -> 75)
(note 73 72 74 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:513 -1
     (nil))
(code_label 75 74 76 14 95 "" [2 uses])
(note 76 75 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 80 14 (set (reg:SI 91 [ D.7841 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:516 -1
     (nil))
(insn 80 77 84 14 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.7841 ])) Commands.c:516 -1
     (nil))
(insn 84 80 85 14 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Commands.c:517 -1
     (nil))
(insn 85 84 0 14 (use (reg/i:SI 0 ax)) Commands.c:517 -1
     (nil))

;; Function ECDH_KeyGen_In_Unmarshal (ECDH_KeyGen_In_Unmarshal, funcdef_no=20, decl_uid=3872, cgraph_uid=20, symbol_order=22)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 23.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:520 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:520 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:520 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:520 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:521 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:525 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:525 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:526 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7842 ])
        (mem:SI (reg/f:DI 90) [0 *handles_8(D)+0 S4 A32])) Commands.c:526 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:526 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 91) [0 target_10(D)->keyHandle+0 S4 A32])
        (reg:SI 87 [ D.7842 ])) Commands.c:526 -1
     (nil))
(code_label 17 16 18 5 98 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 22 5 (set (reg:SI 88 [ D.7843 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:528 -1
     (nil))
(insn 22 19 26 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.7843 ])) Commands.c:528 -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:529 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) Commands.c:529 -1
     (nil))

;; Function ECDH_ZGen_In_Unmarshal (ECDH_ZGen_In_Unmarshal, funcdef_no=21, decl_uid=3882, cgraph_uid=21, symbol_order=23)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:532 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:532 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:532 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:532 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:533 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:535 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:535 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:536 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7844 ])
        (mem:SI (reg/f:DI 91) [0 *handles_6(D)+0 S4 A32])) Commands.c:536 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:536 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_8(D)->keyHandle+0 S4 A32])
        (reg:SI 87 [ D.7844 ])) Commands.c:536 -1
     (nil))
(code_label 17 16 18 5 101 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:538 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:538 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:539 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7845 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:539 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:539 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:539 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:539 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:539 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7845 ])) Commands.c:539 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_ECC_POINT_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c481b0 TPM2B_ECC_POINT_Unmarshal>) [0 TPM2B_ECC_POINT_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:539 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:539 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:539 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:540 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:540 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:541 -1
     (nil))
(code_label 36 35 37 8 102 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.7846 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:544 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.7846 ])) Commands.c:544 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:545 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:545 -1
     (nil))

;; Function ECC_Parameters_In_Unmarshal (ECC_Parameters_In_Unmarshal, funcdef_no=22, decl_uid=3892, cgraph_uid=22, symbol_order=24)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 32.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:548 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:548 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:548 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:548 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:549 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:552 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:552 -1
     (nil)
 -> 26)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 87 [ D.7847 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:553 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:553 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:553 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 1 dx)
        (reg:DI 90)) Commands.c:553 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 91)) Commands.c:553 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.7847 ])) Commands.c:553 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_ECC_CURVE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c48360 TPMI_ECC_CURVE_Unmarshal>) [0 TPMI_ECC_CURVE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:553 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 4 (set (reg:SI 92)
        (reg:SI 0 ax)) Commands.c:553 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 92)) Commands.c:553 -1
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:554 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:554 -1
     (nil)
 -> 26)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:555 -1
     (nil))
(code_label 26 25 27 6 105 "" [2 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 31 6 (set (reg:SI 88 [ D.7848 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:558 -1
     (nil))
(insn 31 28 35 6 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.7848 ])) Commands.c:558 -1
     (nil))
(insn 35 31 36 6 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:559 -1
     (nil))
(insn 36 35 0 6 (use (reg/i:SI 0 ax)) Commands.c:559 -1
     (nil))

;; Function ZGen_2Phase_In_Unmarshal (ZGen_2Phase_In_Unmarshal, funcdef_no=23, decl_uid=3902, cgraph_uid=23, symbol_order=25)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Removing jump 100.
Merging block 19 into block 17...
Merged blocks 17 and 19.
Merged 17 and 19 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:562 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:562 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:562 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:562 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:563 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:565 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:565 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:566 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7849 ])
        (mem:SI (reg/f:DI 94) [0 *handles_12(D)+0 S4 A32])) Commands.c:566 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:566 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 95) [0 target_14(D)->keyA+0 S4 A32])
        (reg:SI 87 [ D.7849 ])) Commands.c:566 -1
     (nil))
(code_label 17 16 18 5 108 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:568 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:568 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:569 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7850 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:569 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:569 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:569 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 97)) Commands.c:569 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 98)) Commands.c:569 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7850 ])) Commands.c:569 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_ECC_POINT_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c481b0 TPM2B_ECC_POINT_Unmarshal>) [0 TPM2B_ECC_POINT_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:569 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 99)
        (reg:SI 0 ax)) Commands.c:569 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 99)) Commands.c:569 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:570 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:570 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:571 -1
     (nil))
(code_label 36 35 37 8 109 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:574 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:574 -1
     (nil)
 -> 55)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:575 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7850 ])
                (plus:DI (reg/f:DI 100)
                    (const_int 106 [0x6a])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:575 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 106 [0x6a]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:575 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:575 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 1 dx)
        (reg:DI 101)) Commands.c:575 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 4 si)
        (reg:DI 102)) Commands.c:575 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7850 ])) Commands.c:575 -1
     (nil))
(call_insn 48 47 49 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_ECC_POINT_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c481b0 TPM2B_ECC_POINT_Unmarshal>) [0 TPM2B_ECC_POINT_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:575 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 49 48 50 9 (set (reg:SI 103)
        (reg:SI 0 ax)) Commands.c:575 -1
     (nil))
(insn 50 49 51 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 103)) Commands.c:575 -1
     (nil))
(insn 51 50 52 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:576 -1
     (nil))
(jump_insn 52 51 53 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:576 -1
     (nil)
 -> 55)
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:577 -1
     (nil))
(code_label 55 54 56 11 110 "" [2 uses])
(note 56 55 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:580 -1
     (nil))
(jump_insn 58 57 59 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:580 -1
     (nil)
 -> 75)
(note 59 58 60 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 12 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:581 -1
     (nil))
(insn 61 60 62 12 (parallel [
            (set (reg/f:DI 90 [ D.7851 ])
                (plus:DI (reg/f:DI 104)
                    (const_int 208 [0xd0])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:581 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 208 [0xd0]))
        (nil)))
(insn 62 61 63 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:581 -1
     (nil))
(insn 63 62 64 12 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:581 -1
     (nil))
(insn 64 63 65 12 (set (reg:SI 2 cx)
        (const_int 0 [0])) Commands.c:581 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 1 dx)
        (reg:DI 105)) Commands.c:581 -1
     (nil))
(insn 66 65 67 12 (set (reg:DI 4 si)
        (reg:DI 106)) Commands.c:581 -1
     (nil))
(insn 67 66 68 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7851 ])) Commands.c:581 -1
     (nil))
(call_insn 68 67 69 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_ECC_KEY_EXCHANGE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1c5e8 TPMI_ECC_KEY_EXCHANGE_Unmarshal>) [0 TPMI_ECC_KEY_EXCHANGE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:581 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 69 68 70 12 (set (reg:SI 107)
        (reg:SI 0 ax)) Commands.c:581 -1
     (nil))
(insn 70 69 71 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 107)) Commands.c:581 -1
     (nil))
(insn 71 70 72 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:582 -1
     (nil))
(jump_insn 72 71 73 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:582 -1
     (nil)
 -> 75)
(note 73 72 74 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:583 -1
     (nil))
(code_label 75 74 76 14 111 "" [2 uses])
(note 76 75 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:586 -1
     (nil))
(jump_insn 78 77 79 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) Commands.c:586 -1
     (nil)
 -> 94)
(note 79 78 80 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 15 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:587 -1
     (nil))
(insn 81 80 82 15 (parallel [
            (set (reg/f:DI 91 [ D.7852 ])
                (plus:DI (reg/f:DI 108)
                    (const_int 210 [0xd2])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:587 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 210 [0xd2]))
        (nil)))
(insn 82 81 83 15 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:587 -1
     (nil))
(insn 83 82 84 15 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:587 -1
     (nil))
(insn 84 83 85 15 (set (reg:DI 1 dx)
        (reg:DI 109)) Commands.c:587 -1
     (nil))
(insn 85 84 86 15 (set (reg:DI 4 si)
        (reg:DI 110)) Commands.c:587 -1
     (nil))
(insn 86 85 87 15 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.7852 ])) Commands.c:587 -1
     (nil))
(call_insn 87 86 88 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT16_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1798 UINT16_Unmarshal>) [0 UINT16_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:587 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 88 87 89 15 (set (reg:SI 111)
        (reg:SI 0 ax)) Commands.c:587 -1
     (nil))
(insn 89 88 90 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 111)) Commands.c:587 -1
     (nil))
(insn 90 89 91 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:588 -1
     (nil))
(jump_insn 91 90 92 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) Commands.c:588 -1
     (nil)
 -> 94)
(note 92 91 93 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 1088 [0x440])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:589 -1
     (nil))
(code_label 94 93 95 17 112 "" [2 uses])
(note 95 94 96 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 99 17 (set (reg:SI 92 [ D.7853 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:592 -1
     (nil))
(insn 99 96 103 17 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.7853 ])) Commands.c:592 -1
     (nil))
(insn 103 99 104 17 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) Commands.c:593 -1
     (nil))
(insn 104 103 0 17 (use (reg/i:SI 0 ax)) Commands.c:593 -1
     (nil))

;; Function EncryptDecrypt_In_Unmarshal (EncryptDecrypt_In_Unmarshal, funcdef_no=24, decl_uid=3912, cgraph_uid=24, symbol_order=26)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Removing jump 100.
Merging block 19 into block 17...
Merged blocks 17 and 19.
Merged 17 and 19 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:596 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:596 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:596 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:596 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:597 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:599 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:599 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:600 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7854 ])
        (mem:SI (reg/f:DI 94) [0 *handles_12(D)+0 S4 A32])) Commands.c:600 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:600 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 95) [0 target_14(D)->keyHandle+0 S4 A32])
        (reg:SI 87 [ D.7854 ])) Commands.c:600 -1
     (nil))
(code_label 17 16 18 5 115 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:602 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:602 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:603 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7855 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:603 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:603 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:603 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 97)) Commands.c:603 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 98)) Commands.c:603 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7855 ])) Commands.c:603 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_YES_NO_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c0de58 TPMI_YES_NO_Unmarshal>) [0 TPMI_YES_NO_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:603 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 99)
        (reg:SI 0 ax)) Commands.c:603 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 99)) Commands.c:603 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:604 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:604 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:605 -1
     (nil))
(code_label 36 35 37 8 116 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:608 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:608 -1
     (nil)
 -> 56)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:609 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7856 ])
                (plus:DI (reg/f:DI 100)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:609 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 6 [0x6]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:609 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:609 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:609 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 1 dx)
        (reg:DI 101)) Commands.c:609 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 4 si)
        (reg:DI 102)) Commands.c:609 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7856 ])) Commands.c:609 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_ALG_SYM_MODE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1c360 TPMI_ALG_SYM_MODE_Unmarshal>) [0 TPMI_ALG_SYM_MODE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:609 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 50 49 51 9 (set (reg:SI 103)
        (reg:SI 0 ax)) Commands.c:609 -1
     (nil))
(insn 51 50 52 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 103)) Commands.c:609 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:610 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:610 -1
     (nil)
 -> 56)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:611 -1
     (nil))
(code_label 56 55 57 11 117 "" [2 uses])
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:614 -1
     (nil))
(jump_insn 59 58 60 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:614 -1
     (nil)
 -> 75)
(note 60 59 61 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 12 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:615 -1
     (nil))
(insn 62 61 63 12 (parallel [
            (set (reg/f:DI 90 [ D.7857 ])
                (plus:DI (reg/f:DI 104)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:615 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 63 62 64 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:615 -1
     (nil))
(insn 64 63 65 12 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:615 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 1 dx)
        (reg:DI 105)) Commands.c:615 -1
     (nil))
(insn 66 65 67 12 (set (reg:DI 4 si)
        (reg:DI 106)) Commands.c:615 -1
     (nil))
(insn 67 66 68 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7857 ])) Commands.c:615 -1
     (nil))
(call_insn 68 67 69 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_IV_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24438 TPM2B_IV_Unmarshal>) [0 TPM2B_IV_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:615 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 69 68 70 12 (set (reg:SI 107)
        (reg:SI 0 ax)) Commands.c:615 -1
     (nil))
(insn 70 69 71 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 107)) Commands.c:615 -1
     (nil))
(insn 71 70 72 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:616 -1
     (nil))
(jump_insn 72 71 73 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:616 -1
     (nil)
 -> 75)
(note 73 72 74 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:617 -1
     (nil))
(code_label 75 74 76 14 118 "" [2 uses])
(note 76 75 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:620 -1
     (nil))
(jump_insn 78 77 79 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) Commands.c:620 -1
     (nil)
 -> 94)
(note 79 78 80 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 15 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:621 -1
     (nil))
(insn 81 80 82 15 (parallel [
            (set (reg/f:DI 91 [ D.7858 ])
                (plus:DI (reg/f:DI 108)
                    (const_int 26 [0x1a])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:621 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 26 [0x1a]))
        (nil)))
(insn 82 81 83 15 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:621 -1
     (nil))
(insn 83 82 84 15 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:621 -1
     (nil))
(insn 84 83 85 15 (set (reg:DI 1 dx)
        (reg:DI 109)) Commands.c:621 -1
     (nil))
(insn 85 84 86 15 (set (reg:DI 4 si)
        (reg:DI 110)) Commands.c:621 -1
     (nil))
(insn 86 85 87 15 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.7858 ])) Commands.c:621 -1
     (nil))
(call_insn 87 86 88 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_MAX_BUFFER_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c241b0 TPM2B_MAX_BUFFER_Unmarshal>) [0 TPM2B_MAX_BUFFER_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:621 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 88 87 89 15 (set (reg:SI 111)
        (reg:SI 0 ax)) Commands.c:621 -1
     (nil))
(insn 89 88 90 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 111)) Commands.c:621 -1
     (nil))
(insn 90 89 91 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:622 -1
     (nil))
(jump_insn 91 90 92 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) Commands.c:622 -1
     (nil)
 -> 94)
(note 92 91 93 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 1088 [0x440])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:623 -1
     (nil))
(code_label 94 93 95 17 119 "" [2 uses])
(note 95 94 96 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 99 17 (set (reg:SI 92 [ D.7859 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:626 -1
     (nil))
(insn 99 96 103 17 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.7859 ])) Commands.c:626 -1
     (nil))
(insn 103 99 104 17 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) Commands.c:627 -1
     (nil))
(insn 104 103 0 17 (use (reg/i:SI 0 ax)) Commands.c:627 -1
     (nil))

;; Function EncryptDecrypt2_In_Unmarshal (EncryptDecrypt2_In_Unmarshal, funcdef_no=25, decl_uid=3922, cgraph_uid=25, symbol_order=27)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Removing jump 100.
Merging block 19 into block 17...
Merged blocks 17 and 19.
Merged 17 and 19 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:630 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:630 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:630 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:630 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:631 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:633 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:633 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:634 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7860 ])
        (mem:SI (reg/f:DI 94) [0 *handles_12(D)+0 S4 A32])) Commands.c:634 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:634 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 95) [0 target_14(D)->keyHandle+0 S4 A32])
        (reg:SI 87 [ D.7860 ])) Commands.c:634 -1
     (nil))
(code_label 17 16 18 5 122 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:636 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:636 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:637 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7861 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:637 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:637 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:637 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 97)) Commands.c:637 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 98)) Commands.c:637 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7861 ])) Commands.c:637 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_MAX_BUFFER_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c241b0 TPM2B_MAX_BUFFER_Unmarshal>) [0 TPM2B_MAX_BUFFER_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:637 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 99)
        (reg:SI 0 ax)) Commands.c:637 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 99)) Commands.c:637 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:638 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:638 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:639 -1
     (nil))
(code_label 36 35 37 8 123 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:642 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:642 -1
     (nil)
 -> 55)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:643 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7862 ])
                (plus:DI (reg/f:DI 100)
                    (const_int 2054 [0x806])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:643 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 2054 [0x806]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:643 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:643 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 1 dx)
        (reg:DI 101)) Commands.c:643 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 4 si)
        (reg:DI 102)) Commands.c:643 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7862 ])) Commands.c:643 -1
     (nil))
(call_insn 48 47 49 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_YES_NO_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c0de58 TPMI_YES_NO_Unmarshal>) [0 TPMI_YES_NO_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:643 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 49 48 50 9 (set (reg:SI 103)
        (reg:SI 0 ax)) Commands.c:643 -1
     (nil))
(insn 50 49 51 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 103)) Commands.c:643 -1
     (nil))
(insn 51 50 52 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:644 -1
     (nil))
(jump_insn 52 51 53 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:644 -1
     (nil)
 -> 55)
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:645 -1
     (nil))
(code_label 55 54 56 11 124 "" [2 uses])
(note 56 55 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:648 -1
     (nil))
(jump_insn 58 57 59 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:648 -1
     (nil)
 -> 75)
(note 59 58 60 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 12 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:649 -1
     (nil))
(insn 61 60 62 12 (parallel [
            (set (reg/f:DI 90 [ D.7863 ])
                (plus:DI (reg/f:DI 104)
                    (const_int 2056 [0x808])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:649 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 2056 [0x808]))
        (nil)))
(insn 62 61 63 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:649 -1
     (nil))
(insn 63 62 64 12 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:649 -1
     (nil))
(insn 64 63 65 12 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:649 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 1 dx)
        (reg:DI 105)) Commands.c:649 -1
     (nil))
(insn 66 65 67 12 (set (reg:DI 4 si)
        (reg:DI 106)) Commands.c:649 -1
     (nil))
(insn 67 66 68 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7863 ])) Commands.c:649 -1
     (nil))
(call_insn 68 67 69 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_ALG_SYM_MODE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1c360 TPMI_ALG_SYM_MODE_Unmarshal>) [0 TPMI_ALG_SYM_MODE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:649 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 69 68 70 12 (set (reg:SI 107)
        (reg:SI 0 ax)) Commands.c:649 -1
     (nil))
(insn 70 69 71 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 107)) Commands.c:649 -1
     (nil))
(insn 71 70 72 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:650 -1
     (nil))
(jump_insn 72 71 73 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:650 -1
     (nil)
 -> 75)
(note 73 72 74 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:651 -1
     (nil))
(code_label 75 74 76 14 125 "" [2 uses])
(note 76 75 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:654 -1
     (nil))
(jump_insn 78 77 79 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) Commands.c:654 -1
     (nil)
 -> 94)
(note 79 78 80 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 15 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:655 -1
     (nil))
(insn 81 80 82 15 (parallel [
            (set (reg/f:DI 91 [ D.7864 ])
                (plus:DI (reg/f:DI 108)
                    (const_int 2058 [0x80a])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:655 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 2058 [0x80a]))
        (nil)))
(insn 82 81 83 15 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:655 -1
     (nil))
(insn 83 82 84 15 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:655 -1
     (nil))
(insn 84 83 85 15 (set (reg:DI 1 dx)
        (reg:DI 109)) Commands.c:655 -1
     (nil))
(insn 85 84 86 15 (set (reg:DI 4 si)
        (reg:DI 110)) Commands.c:655 -1
     (nil))
(insn 86 85 87 15 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.7864 ])) Commands.c:655 -1
     (nil))
(call_insn 87 86 88 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_IV_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24438 TPM2B_IV_Unmarshal>) [0 TPM2B_IV_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:655 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 88 87 89 15 (set (reg:SI 111)
        (reg:SI 0 ax)) Commands.c:655 -1
     (nil))
(insn 89 88 90 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 111)) Commands.c:655 -1
     (nil))
(insn 90 89 91 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:656 -1
     (nil))
(jump_insn 91 90 92 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) Commands.c:656 -1
     (nil)
 -> 94)
(note 92 91 93 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 1088 [0x440])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:657 -1
     (nil))
(code_label 94 93 95 17 126 "" [2 uses])
(note 95 94 96 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 99 17 (set (reg:SI 92 [ D.7865 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:660 -1
     (nil))
(insn 99 96 103 17 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.7865 ])) Commands.c:660 -1
     (nil))
(insn 103 99 104 17 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) Commands.c:661 -1
     (nil))
(insn 104 103 0 17 (use (reg/i:SI 0 ax)) Commands.c:661 -1
     (nil))

;; Function Hash_In_Unmarshal (Hash_In_Unmarshal, funcdef_no=26, decl_uid=3927, cgraph_uid=26, symbol_order=28)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Removing jump 72.
Merging block 14 into block 12...
Merged blocks 12 and 14.
Merged 12 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:664 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:664 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:664 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:664 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:665 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:668 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:668 -1
     (nil)
 -> 26)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 87 [ D.7866 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:669 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:669 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:669 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 1 dx)
        (reg:DI 92)) Commands.c:669 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 93)) Commands.c:669 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.7866 ])) Commands.c:669 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_MAX_BUFFER_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c241b0 TPM2B_MAX_BUFFER_Unmarshal>) [0 TPM2B_MAX_BUFFER_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:669 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 4 (set (reg:SI 94)
        (reg:SI 0 ax)) Commands.c:669 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 94)) Commands.c:669 -1
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:670 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:670 -1
     (nil)
 -> 26)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:671 -1
     (nil))
(code_label 26 25 27 6 129 "" [2 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:674 -1
     (nil))
(jump_insn 29 28 30 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) Commands.c:674 -1
     (nil)
 -> 46)
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 7 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:675 -1
     (nil))
(insn 32 31 33 7 (parallel [
            (set (reg/f:DI 88 [ D.7867 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 2050 [0x802])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:675 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 2050 [0x802]))
        (nil)))
(insn 33 32 34 7 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:675 -1
     (nil))
(insn 34 33 35 7 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:675 -1
     (nil))
(insn 35 34 36 7 (set (reg:SI 2 cx)
        (const_int 0 [0])) Commands.c:675 -1
     (nil))
(insn 36 35 37 7 (set (reg:DI 1 dx)
        (reg:DI 96)) Commands.c:675 -1
     (nil))
(insn 37 36 38 7 (set (reg:DI 4 si)
        (reg:DI 97)) Commands.c:675 -1
     (nil))
(insn 38 37 39 7 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7867 ])) Commands.c:675 -1
     (nil))
(call_insn 39 38 40 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_ALG_HASH_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1c0d8 TPMI_ALG_HASH_Unmarshal>) [0 TPMI_ALG_HASH_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:675 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 40 39 41 7 (set (reg:SI 98)
        (reg:SI 0 ax)) Commands.c:675 -1
     (nil))
(insn 41 40 42 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 98)) Commands.c:675 -1
     (nil))
(insn 42 41 43 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:676 -1
     (nil))
(jump_insn 43 42 44 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) Commands.c:676 -1
     (nil)
 -> 46)
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:677 -1
     (nil))
(code_label 46 45 47 9 130 "" [2 uses])
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:680 -1
     (nil))
(jump_insn 49 48 50 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) Commands.c:680 -1
     (nil)
 -> 66)
(note 50 49 51 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 10 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:681 -1
     (nil))
(insn 52 51 53 10 (parallel [
            (set (reg/f:DI 89 [ D.7868 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 2052 [0x804])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:681 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 2052 [0x804]))
        (nil)))
(insn 53 52 54 10 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:681 -1
     (nil))
(insn 54 53 55 10 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:681 -1
     (nil))
(insn 55 54 56 10 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:681 -1
     (nil))
(insn 56 55 57 10 (set (reg:DI 1 dx)
        (reg:DI 100)) Commands.c:681 -1
     (nil))
(insn 57 56 58 10 (set (reg:DI 4 si)
        (reg:DI 101)) Commands.c:681 -1
     (nil))
(insn 58 57 59 10 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7868 ])) Commands.c:681 -1
     (nil))
(call_insn 59 58 60 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_RH_HIERARCHY_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c13798 TPMI_RH_HIERARCHY_Unmarshal>) [0 TPMI_RH_HIERARCHY_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:681 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 60 59 61 10 (set (reg:SI 102)
        (reg:SI 0 ax)) Commands.c:681 -1
     (nil))
(insn 61 60 62 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 102)) Commands.c:681 -1
     (nil))
(insn 62 61 63 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:682 -1
     (nil))
(jump_insn 63 62 64 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) Commands.c:682 -1
     (nil)
 -> 66)
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:683 -1
     (nil))
(code_label 66 65 67 12 131 "" [2 uses])
(note 67 66 68 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 71 12 (set (reg:SI 90 [ D.7869 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:686 -1
     (nil))
(insn 71 68 75 12 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.7869 ])) Commands.c:686 -1
     (nil))
(insn 75 71 76 12 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:687 -1
     (nil))
(insn 76 75 0 12 (use (reg/i:SI 0 ax)) Commands.c:687 -1
     (nil))

;; Function HMAC_In_Unmarshal (HMAC_In_Unmarshal, funcdef_no=27, decl_uid=3937, cgraph_uid=27, symbol_order=29)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 62.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:690 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:690 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:690 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:690 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:691 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:693 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:693 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:694 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7870 ])
        (mem:SI (reg/f:DI 92) [0 *handles_8(D)+0 S4 A32])) Commands.c:694 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:694 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_10(D)->handle+0 S4 A32])
        (reg:SI 87 [ D.7870 ])) Commands.c:694 -1
     (nil))
(code_label 17 16 18 5 134 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:696 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:696 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:697 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7871 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:697 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:697 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:697 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 95)) Commands.c:697 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 96)) Commands.c:697 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7871 ])) Commands.c:697 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_MAX_BUFFER_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c241b0 TPM2B_MAX_BUFFER_Unmarshal>) [0 TPM2B_MAX_BUFFER_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:697 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 97)
        (reg:SI 0 ax)) Commands.c:697 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 97)) Commands.c:697 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:698 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:698 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:699 -1
     (nil))
(code_label 36 35 37 8 135 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:702 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:702 -1
     (nil)
 -> 56)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:703 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7872 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 2054 [0x806])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:703 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 2054 [0x806]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:703 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:703 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:703 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 1 dx)
        (reg:DI 99)) Commands.c:703 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 4 si)
        (reg:DI 100)) Commands.c:703 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7872 ])) Commands.c:703 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_ALG_HASH_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1c0d8 TPMI_ALG_HASH_Unmarshal>) [0 TPMI_ALG_HASH_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:703 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 50 49 51 9 (set (reg:SI 101)
        (reg:SI 0 ax)) Commands.c:703 -1
     (nil))
(insn 51 50 52 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 101)) Commands.c:703 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:704 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:704 -1
     (nil)
 -> 56)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:705 -1
     (nil))
(code_label 56 55 57 11 136 "" [2 uses])
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 61 11 (set (reg:SI 90 [ D.7873 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:708 -1
     (nil))
(insn 61 58 65 11 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.7873 ])) Commands.c:708 -1
     (nil))
(insn 65 61 66 11 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:709 -1
     (nil))
(insn 66 65 0 11 (use (reg/i:SI 0 ax)) Commands.c:709 -1
     (nil))

;; Function GetRandom_In_Unmarshal (GetRandom_In_Unmarshal, funcdef_no=28, decl_uid=3947, cgraph_uid=28, symbol_order=30)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 32.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:712 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:712 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:712 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:712 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:713 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:716 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:716 -1
     (nil)
 -> 26)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 87 [ D.7874 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:717 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:717 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:717 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 1 dx)
        (reg:DI 90)) Commands.c:717 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 91)) Commands.c:717 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.7874 ])) Commands.c:717 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT16_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1798 UINT16_Unmarshal>) [0 UINT16_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:717 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 4 (set (reg:SI 92)
        (reg:SI 0 ax)) Commands.c:717 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 92)) Commands.c:717 -1
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:718 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:718 -1
     (nil)
 -> 26)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:719 -1
     (nil))
(code_label 26 25 27 6 139 "" [2 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 31 6 (set (reg:SI 88 [ D.7875 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:722 -1
     (nil))
(insn 31 28 35 6 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.7875 ])) Commands.c:722 -1
     (nil))
(insn 35 31 36 6 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:723 -1
     (nil))
(insn 36 35 0 6 (use (reg/i:SI 0 ax)) Commands.c:723 -1
     (nil))

;; Function StirRandom_In_Unmarshal (StirRandom_In_Unmarshal, funcdef_no=29, decl_uid=3957, cgraph_uid=29, symbol_order=31)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 32.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:726 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:726 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:726 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:726 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:727 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:730 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:730 -1
     (nil)
 -> 26)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 87 [ D.7876 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:731 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:731 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:731 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 1 dx)
        (reg:DI 90)) Commands.c:731 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 91)) Commands.c:731 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.7876 ])) Commands.c:731 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_SENSITIVE_DATA_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c31d80 TPM2B_SENSITIVE_DATA_Unmarshal>) [0 TPM2B_SENSITIVE_DATA_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:731 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 4 (set (reg:SI 92)
        (reg:SI 0 ax)) Commands.c:731 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 92)) Commands.c:731 -1
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:732 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:732 -1
     (nil)
 -> 26)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:733 -1
     (nil))
(code_label 26 25 27 6 142 "" [2 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 31 6 (set (reg:SI 88 [ D.7877 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:736 -1
     (nil))
(insn 31 28 35 6 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.7877 ])) Commands.c:736 -1
     (nil))
(insn 35 31 36 6 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:737 -1
     (nil))
(insn 36 35 0 6 (use (reg/i:SI 0 ax)) Commands.c:737 -1
     (nil))

;; Function HMAC_Start_In_Unmarshal (HMAC_Start_In_Unmarshal, funcdef_no=30, decl_uid=3962, cgraph_uid=30, symbol_order=32)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 62.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:740 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:740 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:740 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:740 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:741 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:743 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:743 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:744 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7878 ])
        (mem:SI (reg/f:DI 92) [0 *handles_8(D)+0 S4 A32])) Commands.c:744 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:744 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_10(D)->handle+0 S4 A32])
        (reg:SI 87 [ D.7878 ])) Commands.c:744 -1
     (nil))
(code_label 17 16 18 5 145 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:746 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:746 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:747 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7879 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:747 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:747 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:747 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 95)) Commands.c:747 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 96)) Commands.c:747 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7879 ])) Commands.c:747 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_AUTH_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1ce58 TPM2B_AUTH_Unmarshal>) [0 TPM2B_AUTH_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:747 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 97)
        (reg:SI 0 ax)) Commands.c:747 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 97)) Commands.c:747 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:748 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:748 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:749 -1
     (nil))
(code_label 36 35 37 8 146 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:752 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:752 -1
     (nil)
 -> 56)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:753 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7880 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 134 [0x86])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:753 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 134 [0x86]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:753 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:753 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:753 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 1 dx)
        (reg:DI 99)) Commands.c:753 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 4 si)
        (reg:DI 100)) Commands.c:753 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7880 ])) Commands.c:753 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_ALG_HASH_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1c0d8 TPMI_ALG_HASH_Unmarshal>) [0 TPMI_ALG_HASH_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:753 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 50 49 51 9 (set (reg:SI 101)
        (reg:SI 0 ax)) Commands.c:753 -1
     (nil))
(insn 51 50 52 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 101)) Commands.c:753 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:754 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:754 -1
     (nil)
 -> 56)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:755 -1
     (nil))
(code_label 56 55 57 11 147 "" [2 uses])
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 61 11 (set (reg:SI 90 [ D.7881 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:758 -1
     (nil))
(insn 61 58 65 11 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.7881 ])) Commands.c:758 -1
     (nil))
(insn 65 61 66 11 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:759 -1
     (nil))
(insn 66 65 0 11 (use (reg/i:SI 0 ax)) Commands.c:759 -1
     (nil))

;; Function HashSequenceStart_In_Unmarshal (HashSequenceStart_In_Unmarshal, funcdef_no=31, decl_uid=3972, cgraph_uid=31, symbol_order=33)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Removing jump 52.
Merging block 11 into block 9...
Merged blocks 9 and 11.
Merged 9 and 11 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:762 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:762 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:762 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:762 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:763 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:766 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:766 -1
     (nil)
 -> 26)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 87 [ D.7882 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:767 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:767 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:767 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 1 dx)
        (reg:DI 91)) Commands.c:767 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 92)) Commands.c:767 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.7882 ])) Commands.c:767 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_AUTH_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1ce58 TPM2B_AUTH_Unmarshal>) [0 TPM2B_AUTH_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:767 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 4 (set (reg:SI 93)
        (reg:SI 0 ax)) Commands.c:767 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 93)) Commands.c:767 -1
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:768 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:768 -1
     (nil)
 -> 26)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:769 -1
     (nil))
(code_label 26 25 27 6 150 "" [2 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:772 -1
     (nil))
(jump_insn 29 28 30 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) Commands.c:772 -1
     (nil)
 -> 46)
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 7 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:773 -1
     (nil))
(insn 32 31 33 7 (parallel [
            (set (reg/f:DI 88 [ D.7883 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 130 [0x82])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:773 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 130 [0x82]))
        (nil)))
(insn 33 32 34 7 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:773 -1
     (nil))
(insn 34 33 35 7 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:773 -1
     (nil))
(insn 35 34 36 7 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:773 -1
     (nil))
(insn 36 35 37 7 (set (reg:DI 1 dx)
        (reg:DI 95)) Commands.c:773 -1
     (nil))
(insn 37 36 38 7 (set (reg:DI 4 si)
        (reg:DI 96)) Commands.c:773 -1
     (nil))
(insn 38 37 39 7 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7883 ])) Commands.c:773 -1
     (nil))
(call_insn 39 38 40 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_ALG_HASH_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1c0d8 TPMI_ALG_HASH_Unmarshal>) [0 TPMI_ALG_HASH_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:773 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 40 39 41 7 (set (reg:SI 97)
        (reg:SI 0 ax)) Commands.c:773 -1
     (nil))
(insn 41 40 42 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 97)) Commands.c:773 -1
     (nil))
(insn 42 41 43 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:774 -1
     (nil))
(jump_insn 43 42 44 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) Commands.c:774 -1
     (nil)
 -> 46)
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:775 -1
     (nil))
(code_label 46 45 47 9 151 "" [2 uses])
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 51 9 (set (reg:SI 89 [ D.7884 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:778 -1
     (nil))
(insn 51 48 55 9 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.7884 ])) Commands.c:778 -1
     (nil))
(insn 55 51 56 9 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:779 -1
     (nil))
(insn 56 55 0 9 (use (reg/i:SI 0 ax)) Commands.c:779 -1
     (nil))

;; Function SequenceUpdate_In_Unmarshal (SequenceUpdate_In_Unmarshal, funcdef_no=32, decl_uid=3982, cgraph_uid=32, symbol_order=34)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:782 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:782 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:782 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:782 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:783 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:787 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:787 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:788 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7885 ])
        (mem:SI (reg/f:DI 91) [0 *handles_10(D)+0 S4 A32])) Commands.c:788 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:788 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_12(D)->sequenceHandle+0 S4 A32])
        (reg:SI 87 [ D.7885 ])) Commands.c:788 -1
     (nil))
(code_label 17 16 18 5 154 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:790 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:790 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:791 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7886 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:791 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:791 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:791 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:791 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:791 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7886 ])) Commands.c:791 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_MAX_BUFFER_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c241b0 TPM2B_MAX_BUFFER_Unmarshal>) [0 TPM2B_MAX_BUFFER_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:791 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:791 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:791 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:792 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:792 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:793 -1
     (nil))
(code_label 36 35 37 8 155 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.7887 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:796 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.7887 ])) Commands.c:796 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:797 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:797 -1
     (nil))

;; Function SequenceComplete_In_Unmarshal (SequenceComplete_In_Unmarshal, funcdef_no=33, decl_uid=3987, cgraph_uid=33, symbol_order=35)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 62.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:800 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:800 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:800 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:800 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:801 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:803 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:803 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:804 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7888 ])
        (mem:SI (reg/f:DI 92) [0 *handles_8(D)+0 S4 A32])) Commands.c:804 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:804 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_10(D)->sequenceHandle+0 S4 A32])
        (reg:SI 87 [ D.7888 ])) Commands.c:804 -1
     (nil))
(code_label 17 16 18 5 158 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:806 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:806 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:807 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7889 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:807 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:807 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:807 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 95)) Commands.c:807 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 96)) Commands.c:807 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7889 ])) Commands.c:807 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_MAX_BUFFER_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c241b0 TPM2B_MAX_BUFFER_Unmarshal>) [0 TPM2B_MAX_BUFFER_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:807 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 97)
        (reg:SI 0 ax)) Commands.c:807 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 97)) Commands.c:807 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:808 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:808 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:809 -1
     (nil))
(code_label 36 35 37 8 159 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:812 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:812 -1
     (nil)
 -> 56)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:813 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7890 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 2056 [0x808])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:813 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 2056 [0x808]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:813 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:813 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:813 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 1 dx)
        (reg:DI 99)) Commands.c:813 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 4 si)
        (reg:DI 100)) Commands.c:813 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7890 ])) Commands.c:813 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_RH_HIERARCHY_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c13798 TPMI_RH_HIERARCHY_Unmarshal>) [0 TPMI_RH_HIERARCHY_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:813 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 50 49 51 9 (set (reg:SI 101)
        (reg:SI 0 ax)) Commands.c:813 -1
     (nil))
(insn 51 50 52 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 101)) Commands.c:813 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:814 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:814 -1
     (nil)
 -> 56)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:815 -1
     (nil))
(code_label 56 55 57 11 160 "" [2 uses])
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 61 11 (set (reg:SI 90 [ D.7891 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:818 -1
     (nil))
(insn 61 58 65 11 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.7891 ])) Commands.c:818 -1
     (nil))
(insn 65 61 66 11 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:819 -1
     (nil))
(insn 66 65 0 11 (use (reg/i:SI 0 ax)) Commands.c:819 -1
     (nil))

;; Function EventSequenceComplete_In_Unmarshal (EventSequenceComplete_In_Unmarshal, funcdef_no=34, decl_uid=3997, cgraph_uid=34, symbol_order=36)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 46.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:822 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:822 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:822 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:822 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:823 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:825 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:825 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:826 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7892 ])
        (mem:SI (reg/f:DI 92) [0 *handles_6(D)+0 S4 A32])) Commands.c:826 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:826 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_8(D)->pcrHandle+0 S4 A32])
        (reg:SI 87 [ D.7892 ])) Commands.c:826 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:827 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.7892 ])
        (mem:SI (plus:DI (reg/f:DI 94)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_6(D) + 4B]+0 S4 A32])) Commands.c:827 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:827 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 95)
                (const_int 4 [0x4])) [0 target_8(D)->sequenceHandle+0 S4 A32])
        (reg:SI 88 [ D.7892 ])) Commands.c:827 -1
     (nil))
(code_label 21 20 22 5 163 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:829 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:829 -1
     (nil)
 -> 40)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:830 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 89 [ D.7893 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:830 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 28 27 29 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:830 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:830 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx)
        (reg:DI 97)) Commands.c:830 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 98)) Commands.c:830 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7893 ])) Commands.c:830 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_MAX_BUFFER_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c241b0 TPM2B_MAX_BUFFER_Unmarshal>) [0 TPM2B_MAX_BUFFER_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:830 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 6 (set (reg:SI 99)
        (reg:SI 0 ax)) Commands.c:830 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 99)) Commands.c:830 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:831 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:831 -1
     (nil)
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:832 -1
     (nil))
(code_label 40 39 41 8 164 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 45 8 (set (reg:SI 90 [ D.7894 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:835 -1
     (nil))
(insn 45 42 49 8 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.7894 ])) Commands.c:835 -1
     (nil))
(insn 49 45 50 8 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:836 -1
     (nil))
(insn 50 49 0 8 (use (reg/i:SI 0 ax)) Commands.c:836 -1
     (nil))

;; Function Certify_In_Unmarshal (Certify_In_Unmarshal, funcdef_no=35, decl_uid=4007, cgraph_uid=35, symbol_order=37)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 66.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:839 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:839 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:839 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:839 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:840 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:842 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:842 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:843 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7895 ])
        (mem:SI (reg/f:DI 93) [0 *handles_8(D)+0 S4 A32])) Commands.c:843 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:843 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 94) [0 target_10(D)->objectHandle+0 S4 A32])
        (reg:SI 87 [ D.7895 ])) Commands.c:843 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:844 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.7895 ])
        (mem:SI (plus:DI (reg/f:DI 95)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_8(D) + 4B]+0 S4 A32])) Commands.c:844 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:844 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 96)
                (const_int 4 [0x4])) [0 target_10(D)->signHandle+0 S4 A32])
        (reg:SI 88 [ D.7895 ])) Commands.c:844 -1
     (nil))
(code_label 21 20 22 5 167 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:846 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:846 -1
     (nil)
 -> 40)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:847 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 89 [ D.7896 ])
                (plus:DI (reg/f:DI 97)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:847 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 28 27 29 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:847 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:847 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx)
        (reg:DI 98)) Commands.c:847 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 99)) Commands.c:847 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7896 ])) Commands.c:847 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DATA_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cca8 TPM2B_DATA_Unmarshal>) [0 TPM2B_DATA_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:847 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 6 (set (reg:SI 100)
        (reg:SI 0 ax)) Commands.c:847 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 100)) Commands.c:847 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:848 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:848 -1
     (nil)
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:849 -1
     (nil))
(code_label 40 39 41 8 168 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:852 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) Commands.c:852 -1
     (nil)
 -> 60)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:853 -1
     (nil))
(insn 46 45 47 9 (parallel [
            (set (reg/f:DI 90 [ D.7897 ])
                (plus:DI (reg/f:DI 101)
                    (const_int 140 [0x8c])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:853 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 140 [0x8c]))
        (nil)))
(insn 47 46 48 9 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:853 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:853 -1
     (nil))
(insn 49 48 50 9 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:853 -1
     (nil))
(insn 50 49 51 9 (set (reg:DI 1 dx)
        (reg:DI 102)) Commands.c:853 -1
     (nil))
(insn 51 50 52 9 (set (reg:DI 4 si)
        (reg:DI 103)) Commands.c:853 -1
     (nil))
(insn 52 51 53 9 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7897 ])) Commands.c:853 -1
     (nil))
(call_insn 53 52 54 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_SIG_SCHEME_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c39ca8 TPMT_SIG_SCHEME_Unmarshal>) [0 TPMT_SIG_SCHEME_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:853 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 54 53 55 9 (set (reg:SI 104)
        (reg:SI 0 ax)) Commands.c:853 -1
     (nil))
(insn 55 54 56 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 104)) Commands.c:853 -1
     (nil))
(insn 56 55 57 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:854 -1
     (nil))
(jump_insn 57 56 58 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) Commands.c:854 -1
     (nil)
 -> 60)
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:855 -1
     (nil))
(code_label 60 59 61 11 169 "" [2 uses])
(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 65 11 (set (reg:SI 91 [ D.7898 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:858 -1
     (nil))
(insn 65 62 69 11 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.7898 ])) Commands.c:858 -1
     (nil))
(insn 69 65 70 11 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Commands.c:859 -1
     (nil))
(insn 70 69 0 11 (use (reg/i:SI 0 ax)) Commands.c:859 -1
     (nil))

;; Function CertifyCreation_In_Unmarshal (CertifyCreation_In_Unmarshal, funcdef_no=36, decl_uid=4017, cgraph_uid=36, symbol_order=38)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Removing jump 104.
Merging block 19 into block 17...
Merged blocks 17 and 19.
Merged 17 and 19 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:862 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:862 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:862 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:862 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:863 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:865 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:865 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:866 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7899 ])
        (mem:SI (reg/f:DI 95) [0 *handles_12(D)+0 S4 A32])) Commands.c:866 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:866 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 96) [0 target_14(D)->signHandle+0 S4 A32])
        (reg:SI 87 [ D.7899 ])) Commands.c:866 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:867 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.7899 ])
        (mem:SI (plus:DI (reg/f:DI 97)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_12(D) + 4B]+0 S4 A32])) Commands.c:867 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:867 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 98)
                (const_int 4 [0x4])) [0 target_14(D)->objectHandle+0 S4 A32])
        (reg:SI 88 [ D.7899 ])) Commands.c:867 -1
     (nil))
(code_label 21 20 22 5 172 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:869 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:869 -1
     (nil)
 -> 40)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:870 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 89 [ D.7900 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:870 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 28 27 29 6 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:870 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:870 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx)
        (reg:DI 100)) Commands.c:870 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 101)) Commands.c:870 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7900 ])) Commands.c:870 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DATA_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cca8 TPM2B_DATA_Unmarshal>) [0 TPM2B_DATA_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:870 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 6 (set (reg:SI 102)
        (reg:SI 0 ax)) Commands.c:870 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 102)) Commands.c:870 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:871 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:871 -1
     (nil)
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:872 -1
     (nil))
(code_label 40 39 41 8 173 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:875 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) Commands.c:875 -1
     (nil)
 -> 59)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:876 -1
     (nil))
(insn 46 45 47 9 (parallel [
            (set (reg/f:DI 90 [ D.7901 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 140 [0x8c])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:876 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 140 [0x8c]))
        (nil)))
(insn 47 46 48 9 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:876 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:876 -1
     (nil))
(insn 49 48 50 9 (set (reg:DI 1 dx)
        (reg:DI 104)) Commands.c:876 -1
     (nil))
(insn 50 49 51 9 (set (reg:DI 4 si)
        (reg:DI 105)) Commands.c:876 -1
     (nil))
(insn 51 50 52 9 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7901 ])) Commands.c:876 -1
     (nil))
(call_insn 52 51 53 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DIGEST_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cbd0 TPM2B_DIGEST_Unmarshal>) [0 TPM2B_DIGEST_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:876 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 53 52 54 9 (set (reg:SI 106)
        (reg:SI 0 ax)) Commands.c:876 -1
     (nil))
(insn 54 53 55 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 106)) Commands.c:876 -1
     (nil))
(insn 55 54 56 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:877 -1
     (nil))
(jump_insn 56 55 57 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) Commands.c:877 -1
     (nil)
 -> 59)
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:878 -1
     (nil))
(code_label 59 58 60 11 174 "" [2 uses])
(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:881 -1
     (nil))
(jump_insn 62 61 63 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) Commands.c:881 -1
     (nil)
 -> 79)
(note 63 62 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 12 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:882 -1
     (nil))
(insn 65 64 66 12 (parallel [
            (set (reg/f:DI 91 [ D.7902 ])
                (plus:DI (reg/f:DI 107)
                    (const_int 270 [0x10e])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:882 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 270 [0x10e]))
        (nil)))
(insn 66 65 67 12 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:882 -1
     (nil))
(insn 67 66 68 12 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:882 -1
     (nil))
(insn 68 67 69 12 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:882 -1
     (nil))
(insn 69 68 70 12 (set (reg:DI 1 dx)
        (reg:DI 108)) Commands.c:882 -1
     (nil))
(insn 70 69 71 12 (set (reg:DI 4 si)
        (reg:DI 109)) Commands.c:882 -1
     (nil))
(insn 71 70 72 12 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.7902 ])) Commands.c:882 -1
     (nil))
(call_insn 72 71 73 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_SIG_SCHEME_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c39ca8 TPMT_SIG_SCHEME_Unmarshal>) [0 TPMT_SIG_SCHEME_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:882 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 73 72 74 12 (set (reg:SI 110)
        (reg:SI 0 ax)) Commands.c:882 -1
     (nil))
(insn 74 73 75 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 110)) Commands.c:882 -1
     (nil))
(insn 75 74 76 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:883 -1
     (nil))
(jump_insn 76 75 77 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) Commands.c:883 -1
     (nil)
 -> 79)
(note 77 76 78 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:884 -1
     (nil))
(code_label 79 78 80 14 175 "" [2 uses])
(note 80 79 81 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:887 -1
     (nil))
(jump_insn 82 81 83 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) Commands.c:887 -1
     (nil)
 -> 98)
(note 83 82 84 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 15 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:888 -1
     (nil))
(insn 85 84 86 15 (parallel [
            (set (reg/f:DI 92 [ D.7903 ])
                (plus:DI (reg/f:DI 111)
                    (const_int 276 [0x114])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:888 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 276 [0x114]))
        (nil)))
(insn 86 85 87 15 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:888 -1
     (nil))
(insn 87 86 88 15 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:888 -1
     (nil))
(insn 88 87 89 15 (set (reg:DI 1 dx)
        (reg:DI 112)) Commands.c:888 -1
     (nil))
(insn 89 88 90 15 (set (reg:DI 4 si)
        (reg:DI 113)) Commands.c:888 -1
     (nil))
(insn 90 89 91 15 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.7903 ])) Commands.c:888 -1
     (nil))
(call_insn 91 90 92 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_TK_CREATION_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c246c0 TPMT_TK_CREATION_Unmarshal>) [0 TPMT_TK_CREATION_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:888 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 92 91 93 15 (set (reg:SI 114)
        (reg:SI 0 ax)) Commands.c:888 -1
     (nil))
(insn 93 92 94 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 114)) Commands.c:888 -1
     (nil))
(insn 94 93 95 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:889 -1
     (nil))
(jump_insn 95 94 96 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) Commands.c:889 -1
     (nil)
 -> 98)
(note 96 95 97 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 1088 [0x440])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:890 -1
     (nil))
(code_label 98 97 99 17 176 "" [2 uses])
(note 99 98 100 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 103 17 (set (reg:SI 93 [ D.7904 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:893 -1
     (nil))
(insn 103 100 107 17 (set (reg:SI 94 [ <retval> ])
        (reg:SI 93 [ D.7904 ])) Commands.c:893 -1
     (nil))
(insn 107 103 108 17 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) Commands.c:894 -1
     (nil))
(insn 108 107 0 17 (use (reg/i:SI 0 ax)) Commands.c:894 -1
     (nil))

;; Function Quote_In_Unmarshal (Quote_In_Unmarshal, funcdef_no=37, decl_uid=4027, cgraph_uid=37, symbol_order=39)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 81.
Merging block 16 into block 14...
Merged blocks 14 and 16.
Merged 14 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:897 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:897 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:897 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:897 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:898 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:900 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:900 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:901 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7905 ])
        (mem:SI (reg/f:DI 93) [0 *handles_10(D)+0 S4 A32])) Commands.c:901 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:901 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 94) [0 target_12(D)->signHandle+0 S4 A32])
        (reg:SI 87 [ D.7905 ])) Commands.c:901 -1
     (nil))
(code_label 17 16 18 5 179 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:903 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:903 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:904 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7906 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:904 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:904 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:904 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 96)) Commands.c:904 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 97)) Commands.c:904 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7906 ])) Commands.c:904 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DATA_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cca8 TPM2B_DATA_Unmarshal>) [0 TPM2B_DATA_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:904 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 98)
        (reg:SI 0 ax)) Commands.c:904 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 98)) Commands.c:904 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:905 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:905 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:906 -1
     (nil))
(code_label 36 35 37 8 180 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:909 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:909 -1
     (nil)
 -> 56)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:910 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7907 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 136 [0x88])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:910 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 136 [0x88]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:910 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:910 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:910 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 1 dx)
        (reg:DI 100)) Commands.c:910 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 4 si)
        (reg:DI 101)) Commands.c:910 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7907 ])) Commands.c:910 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_SIG_SCHEME_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c39ca8 TPMT_SIG_SCHEME_Unmarshal>) [0 TPMT_SIG_SCHEME_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:910 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 50 49 51 9 (set (reg:SI 102)
        (reg:SI 0 ax)) Commands.c:910 -1
     (nil))
(insn 51 50 52 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 102)) Commands.c:910 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:911 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:911 -1
     (nil)
 -> 56)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:912 -1
     (nil))
(code_label 56 55 57 11 181 "" [2 uses])
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:915 -1
     (nil))
(jump_insn 59 58 60 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:915 -1
     (nil)
 -> 75)
(note 60 59 61 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 12 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:916 -1
     (nil))
(insn 62 61 63 12 (parallel [
            (set (reg/f:DI 90 [ D.7908 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 144 [0x90])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:916 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 144 [0x90]))
        (nil)))
(insn 63 62 64 12 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:916 -1
     (nil))
(insn 64 63 65 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:916 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 1 dx)
        (reg:DI 104)) Commands.c:916 -1
     (nil))
(insn 66 65 67 12 (set (reg:DI 4 si)
        (reg:DI 105)) Commands.c:916 -1
     (nil))
(insn 67 66 68 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7908 ])) Commands.c:916 -1
     (nil))
(call_insn 68 67 69 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPML_PCR_SELECTION_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c2a360 TPML_PCR_SELECTION_Unmarshal>) [0 TPML_PCR_SELECTION_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:916 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 69 68 70 12 (set (reg:SI 106)
        (reg:SI 0 ax)) Commands.c:916 -1
     (nil))
(insn 70 69 71 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 106)) Commands.c:916 -1
     (nil))
(insn 71 70 72 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:917 -1
     (nil))
(jump_insn 72 71 73 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:917 -1
     (nil)
 -> 75)
(note 73 72 74 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:918 -1
     (nil))
(code_label 75 74 76 14 182 "" [2 uses])
(note 76 75 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 80 14 (set (reg:SI 91 [ D.7909 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:921 -1
     (nil))
(insn 80 77 84 14 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.7909 ])) Commands.c:921 -1
     (nil))
(insn 84 80 85 14 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Commands.c:922 -1
     (nil))
(insn 85 84 0 14 (use (reg/i:SI 0 ax)) Commands.c:922 -1
     (nil))

;; Function GetSessionAuditDigest_In_Unmarshal (GetSessionAuditDigest_In_Unmarshal, funcdef_no=38, decl_uid=4037, cgraph_uid=38, symbol_order=40)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 70.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:925 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:925 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:925 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:925 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:926 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:928 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) Commands.c:928 -1
     (nil)
 -> 25)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:929 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7910 ])
        (mem:SI (reg/f:DI 94) [0 *handles_8(D)+0 S4 A32])) Commands.c:929 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:929 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 95) [0 target_10(D)->privacyAdminHandle+0 S4 A32])
        (reg:SI 87 [ D.7910 ])) Commands.c:929 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:930 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.7910 ])
        (mem:SI (plus:DI (reg/f:DI 96)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_8(D) + 4B]+0 S4 A32])) Commands.c:930 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:930 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 97)
                (const_int 4 [0x4])) [0 target_10(D)->signHandle+0 S4 A32])
        (reg:SI 88 [ D.7910 ])) Commands.c:930 -1
     (nil))
(insn 21 20 22 4 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:931 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 89 [ D.7910 ])
        (mem:SI (plus:DI (reg/f:DI 98)
                (const_int 8 [0x8])) [0 MEM[(TPM_HANDLE *)handles_8(D) + 8B]+0 S4 A32])) Commands.c:931 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:931 -1
     (nil))
(insn 24 23 25 4 (set (mem/j:SI (plus:DI (reg/f:DI 99)
                (const_int 8 [0x8])) [0 target_10(D)->sessionHandle+0 S4 A32])
        (reg:SI 89 [ D.7910 ])) Commands.c:931 -1
     (nil))
(code_label 25 24 26 5 185 "" [1 uses])
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:933 -1
     (nil))
(jump_insn 28 27 29 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) Commands.c:933 -1
     (nil)
 -> 44)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:934 -1
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg/f:DI 90 [ D.7911 ])
                (plus:DI (reg/f:DI 100)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:934 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 12 [0xc]))
        (nil)))
(insn 32 31 33 6 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:934 -1
     (nil))
(insn 33 32 34 6 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:934 -1
     (nil))
(insn 34 33 35 6 (set (reg:DI 1 dx)
        (reg:DI 101)) Commands.c:934 -1
     (nil))
(insn 35 34 36 6 (set (reg:DI 4 si)
        (reg:DI 102)) Commands.c:934 -1
     (nil))
(insn 36 35 37 6 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7911 ])) Commands.c:934 -1
     (nil))
(call_insn 37 36 38 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DATA_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cca8 TPM2B_DATA_Unmarshal>) [0 TPM2B_DATA_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:934 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 38 37 39 6 (set (reg:SI 103)
        (reg:SI 0 ax)) Commands.c:934 -1
     (nil))
(insn 39 38 40 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 103)) Commands.c:934 -1
     (nil))
(insn 40 39 41 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:935 -1
     (nil))
(jump_insn 41 40 42 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) Commands.c:935 -1
     (nil)
 -> 44)
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:936 -1
     (nil))
(code_label 44 43 45 8 186 "" [2 uses])
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:939 -1
     (nil))
(jump_insn 47 46 48 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) Commands.c:939 -1
     (nil)
 -> 64)
(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 9 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:940 -1
     (nil))
(insn 50 49 51 9 (parallel [
            (set (reg/f:DI 91 [ D.7912 ])
                (plus:DI (reg/f:DI 104)
                    (const_int 144 [0x90])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:940 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 144 [0x90]))
        (nil)))
(insn 51 50 52 9 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:940 -1
     (nil))
(insn 52 51 53 9 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:940 -1
     (nil))
(insn 53 52 54 9 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:940 -1
     (nil))
(insn 54 53 55 9 (set (reg:DI 1 dx)
        (reg:DI 105)) Commands.c:940 -1
     (nil))
(insn 55 54 56 9 (set (reg:DI 4 si)
        (reg:DI 106)) Commands.c:940 -1
     (nil))
(insn 56 55 57 9 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.7912 ])) Commands.c:940 -1
     (nil))
(call_insn 57 56 58 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_SIG_SCHEME_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c39ca8 TPMT_SIG_SCHEME_Unmarshal>) [0 TPMT_SIG_SCHEME_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:940 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 58 57 59 9 (set (reg:SI 107)
        (reg:SI 0 ax)) Commands.c:940 -1
     (nil))
(insn 59 58 60 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 107)) Commands.c:940 -1
     (nil))
(insn 60 59 61 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:941 -1
     (nil))
(jump_insn 61 60 62 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) Commands.c:941 -1
     (nil)
 -> 64)
(note 62 61 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:942 -1
     (nil))
(code_label 64 63 65 11 187 "" [2 uses])
(note 65 64 66 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 69 11 (set (reg:SI 92 [ D.7913 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:945 -1
     (nil))
(insn 69 66 73 11 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.7913 ])) Commands.c:945 -1
     (nil))
(insn 73 69 74 11 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) Commands.c:946 -1
     (nil))
(insn 74 73 0 11 (use (reg/i:SI 0 ax)) Commands.c:946 -1
     (nil))

;; Function GetCommandAuditDigest_In_Unmarshal (GetCommandAuditDigest_In_Unmarshal, funcdef_no=39, decl_uid=4047, cgraph_uid=39, symbol_order=41)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 66.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:949 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:949 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:949 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:949 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:950 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:952 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:952 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:953 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7914 ])
        (mem:SI (reg/f:DI 93) [0 *handles_8(D)+0 S4 A32])) Commands.c:953 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:953 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 94) [0 target_10(D)->privacyHandle+0 S4 A32])
        (reg:SI 87 [ D.7914 ])) Commands.c:953 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:954 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.7914 ])
        (mem:SI (plus:DI (reg/f:DI 95)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_8(D) + 4B]+0 S4 A32])) Commands.c:954 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:954 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 96)
                (const_int 4 [0x4])) [0 target_10(D)->signHandle+0 S4 A32])
        (reg:SI 88 [ D.7914 ])) Commands.c:954 -1
     (nil))
(code_label 21 20 22 5 190 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:956 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:956 -1
     (nil)
 -> 40)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:957 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 89 [ D.7915 ])
                (plus:DI (reg/f:DI 97)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:957 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 28 27 29 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:957 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:957 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx)
        (reg:DI 98)) Commands.c:957 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 99)) Commands.c:957 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7915 ])) Commands.c:957 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DATA_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cca8 TPM2B_DATA_Unmarshal>) [0 TPM2B_DATA_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:957 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 6 (set (reg:SI 100)
        (reg:SI 0 ax)) Commands.c:957 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 100)) Commands.c:957 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:958 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:958 -1
     (nil)
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:959 -1
     (nil))
(code_label 40 39 41 8 191 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:962 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) Commands.c:962 -1
     (nil)
 -> 60)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:963 -1
     (nil))
(insn 46 45 47 9 (parallel [
            (set (reg/f:DI 90 [ D.7916 ])
                (plus:DI (reg/f:DI 101)
                    (const_int 140 [0x8c])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:963 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 140 [0x8c]))
        (nil)))
(insn 47 46 48 9 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:963 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:963 -1
     (nil))
(insn 49 48 50 9 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:963 -1
     (nil))
(insn 50 49 51 9 (set (reg:DI 1 dx)
        (reg:DI 102)) Commands.c:963 -1
     (nil))
(insn 51 50 52 9 (set (reg:DI 4 si)
        (reg:DI 103)) Commands.c:963 -1
     (nil))
(insn 52 51 53 9 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7916 ])) Commands.c:963 -1
     (nil))
(call_insn 53 52 54 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_SIG_SCHEME_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c39ca8 TPMT_SIG_SCHEME_Unmarshal>) [0 TPMT_SIG_SCHEME_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:963 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 54 53 55 9 (set (reg:SI 104)
        (reg:SI 0 ax)) Commands.c:963 -1
     (nil))
(insn 55 54 56 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 104)) Commands.c:963 -1
     (nil))
(insn 56 55 57 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:964 -1
     (nil))
(jump_insn 57 56 58 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) Commands.c:964 -1
     (nil)
 -> 60)
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:965 -1
     (nil))
(code_label 60 59 61 11 192 "" [2 uses])
(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 65 11 (set (reg:SI 91 [ D.7917 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:968 -1
     (nil))
(insn 65 62 69 11 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.7917 ])) Commands.c:968 -1
     (nil))
(insn 69 65 70 11 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Commands.c:969 -1
     (nil))
(insn 70 69 0 11 (use (reg/i:SI 0 ax)) Commands.c:969 -1
     (nil))

;; Function GetTime_In_Unmarshal (GetTime_In_Unmarshal, funcdef_no=40, decl_uid=4057, cgraph_uid=40, symbol_order=42)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 66.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:972 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:972 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:972 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:972 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:973 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:975 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:975 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:976 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7918 ])
        (mem:SI (reg/f:DI 93) [0 *handles_8(D)+0 S4 A32])) Commands.c:976 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:976 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 94) [0 target_10(D)->privacyAdminHandle+0 S4 A32])
        (reg:SI 87 [ D.7918 ])) Commands.c:976 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:977 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.7918 ])
        (mem:SI (plus:DI (reg/f:DI 95)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_8(D) + 4B]+0 S4 A32])) Commands.c:977 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:977 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 96)
                (const_int 4 [0x4])) [0 target_10(D)->signHandle+0 S4 A32])
        (reg:SI 88 [ D.7918 ])) Commands.c:977 -1
     (nil))
(code_label 21 20 22 5 195 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:979 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:979 -1
     (nil)
 -> 40)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:980 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 89 [ D.7919 ])
                (plus:DI (reg/f:DI 97)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:980 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 28 27 29 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:980 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:980 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx)
        (reg:DI 98)) Commands.c:980 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 99)) Commands.c:980 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7919 ])) Commands.c:980 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DATA_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cca8 TPM2B_DATA_Unmarshal>) [0 TPM2B_DATA_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:980 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 6 (set (reg:SI 100)
        (reg:SI 0 ax)) Commands.c:980 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 100)) Commands.c:980 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:981 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:981 -1
     (nil)
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:982 -1
     (nil))
(code_label 40 39 41 8 196 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:985 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) Commands.c:985 -1
     (nil)
 -> 60)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:986 -1
     (nil))
(insn 46 45 47 9 (parallel [
            (set (reg/f:DI 90 [ D.7920 ])
                (plus:DI (reg/f:DI 101)
                    (const_int 140 [0x8c])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:986 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 140 [0x8c]))
        (nil)))
(insn 47 46 48 9 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:986 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:986 -1
     (nil))
(insn 49 48 50 9 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:986 -1
     (nil))
(insn 50 49 51 9 (set (reg:DI 1 dx)
        (reg:DI 102)) Commands.c:986 -1
     (nil))
(insn 51 50 52 9 (set (reg:DI 4 si)
        (reg:DI 103)) Commands.c:986 -1
     (nil))
(insn 52 51 53 9 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7920 ])) Commands.c:986 -1
     (nil))
(call_insn 53 52 54 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_SIG_SCHEME_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c39ca8 TPMT_SIG_SCHEME_Unmarshal>) [0 TPMT_SIG_SCHEME_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:986 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 54 53 55 9 (set (reg:SI 104)
        (reg:SI 0 ax)) Commands.c:986 -1
     (nil))
(insn 55 54 56 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 104)) Commands.c:986 -1
     (nil))
(insn 56 55 57 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:987 -1
     (nil))
(jump_insn 57 56 58 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) Commands.c:987 -1
     (nil)
 -> 60)
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:988 -1
     (nil))
(code_label 60 59 61 11 197 "" [2 uses])
(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 65 11 (set (reg:SI 91 [ D.7921 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:991 -1
     (nil))
(insn 65 62 69 11 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.7921 ])) Commands.c:991 -1
     (nil))
(insn 69 65 70 11 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Commands.c:992 -1
     (nil))
(insn 70 69 0 11 (use (reg/i:SI 0 ax)) Commands.c:992 -1
     (nil))

;; Function Commit_In_Unmarshal (Commit_In_Unmarshal, funcdef_no=41, decl_uid=4067, cgraph_uid=41, symbol_order=43)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 80.
Merging block 16 into block 14...
Merged blocks 14 and 16.
Merged 14 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:995 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:995 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:995 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:995 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:996 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:998 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:998 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:999 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7922 ])
        (mem:SI (reg/f:DI 93) [0 *handles_10(D)+0 S4 A32])) Commands.c:999 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:999 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 94) [0 target_12(D)->signHandle+0 S4 A32])
        (reg:SI 87 [ D.7922 ])) Commands.c:999 -1
     (nil))
(code_label 17 16 18 5 200 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1001 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1001 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1002 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7923 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1002 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1002 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1002 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 96)) Commands.c:1002 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 97)) Commands.c:1002 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7923 ])) Commands.c:1002 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_ECC_POINT_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c481b0 TPM2B_ECC_POINT_Unmarshal>) [0 TPM2B_ECC_POINT_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1002 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 98)
        (reg:SI 0 ax)) Commands.c:1002 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 98)) Commands.c:1002 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1003 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1003 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1004 -1
     (nil))
(code_label 36 35 37 8 201 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1007 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:1007 -1
     (nil)
 -> 55)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1008 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7924 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 106 [0x6a])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1008 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 106 [0x6a]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1008 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1008 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 1 dx)
        (reg:DI 100)) Commands.c:1008 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 4 si)
        (reg:DI 101)) Commands.c:1008 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7924 ])) Commands.c:1008 -1
     (nil))
(call_insn 48 47 49 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_SENSITIVE_DATA_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c31d80 TPM2B_SENSITIVE_DATA_Unmarshal>) [0 TPM2B_SENSITIVE_DATA_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1008 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 49 48 50 9 (set (reg:SI 102)
        (reg:SI 0 ax)) Commands.c:1008 -1
     (nil))
(insn 50 49 51 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 102)) Commands.c:1008 -1
     (nil))
(insn 51 50 52 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1009 -1
     (nil))
(jump_insn 52 51 53 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:1009 -1
     (nil)
 -> 55)
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1010 -1
     (nil))
(code_label 55 54 56 11 202 "" [2 uses])
(note 56 55 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1013 -1
     (nil))
(jump_insn 58 57 59 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) Commands.c:1013 -1
     (nil)
 -> 74)
(note 59 58 60 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 12 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1014 -1
     (nil))
(insn 61 60 62 12 (parallel [
            (set (reg/f:DI 90 [ D.7925 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 236 [0xec])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1014 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 236 [0xec]))
        (nil)))
(insn 62 61 63 12 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1014 -1
     (nil))
(insn 63 62 64 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1014 -1
     (nil))
(insn 64 63 65 12 (set (reg:DI 1 dx)
        (reg:DI 104)) Commands.c:1014 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 4 si)
        (reg:DI 105)) Commands.c:1014 -1
     (nil))
(insn 66 65 67 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7925 ])) Commands.c:1014 -1
     (nil))
(call_insn 67 66 68 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_ECC_PARAMETER_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c48000 TPM2B_ECC_PARAMETER_Unmarshal>) [0 TPM2B_ECC_PARAMETER_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1014 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 68 67 69 12 (set (reg:SI 106)
        (reg:SI 0 ax)) Commands.c:1014 -1
     (nil))
(insn 69 68 70 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 106)) Commands.c:1014 -1
     (nil))
(insn 70 69 71 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1015 -1
     (nil))
(jump_insn 71 70 72 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) Commands.c:1015 -1
     (nil)
 -> 74)
(note 72 71 73 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1016 -1
     (nil))
(code_label 74 73 75 14 203 "" [2 uses])
(note 75 74 76 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 79 14 (set (reg:SI 91 [ D.7926 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1019 -1
     (nil))
(insn 79 76 83 14 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.7926 ])) Commands.c:1019 -1
     (nil))
(insn 83 79 84 14 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Commands.c:1020 -1
     (nil))
(insn 84 83 0 14 (use (reg/i:SI 0 ax)) Commands.c:1020 -1
     (nil))

;; Function EC_Ephemeral_In_Unmarshal (EC_Ephemeral_In_Unmarshal, funcdef_no=42, decl_uid=4077, cgraph_uid=42, symbol_order=44)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 32.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1023 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1023 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1023 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1023 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1024 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1027 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:1027 -1
     (nil)
 -> 26)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 87 [ D.7927 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1028 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1028 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1028 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 1 dx)
        (reg:DI 90)) Commands.c:1028 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 91)) Commands.c:1028 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.7927 ])) Commands.c:1028 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_ECC_CURVE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c48360 TPMI_ECC_CURVE_Unmarshal>) [0 TPMI_ECC_CURVE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1028 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 4 (set (reg:SI 92)
        (reg:SI 0 ax)) Commands.c:1028 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 92)) Commands.c:1028 -1
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1029 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:1029 -1
     (nil)
 -> 26)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1030 -1
     (nil))
(code_label 26 25 27 6 206 "" [2 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 31 6 (set (reg:SI 88 [ D.7928 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1033 -1
     (nil))
(insn 31 28 35 6 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.7928 ])) Commands.c:1033 -1
     (nil))
(insn 35 31 36 6 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:1034 -1
     (nil))
(insn 36 35 0 6 (use (reg/i:SI 0 ax)) Commands.c:1034 -1
     (nil))

;; Function VerifySignature_In_Unmarshal (VerifySignature_In_Unmarshal, funcdef_no=43, decl_uid=4087, cgraph_uid=43, symbol_order=45)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 62.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1037 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1037 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1037 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1037 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1038 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1040 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1040 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1041 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7929 ])
        (mem:SI (reg/f:DI 92) [0 *handles_8(D)+0 S4 A32])) Commands.c:1041 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1041 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_10(D)->keyHandle+0 S4 A32])
        (reg:SI 87 [ D.7929 ])) Commands.c:1041 -1
     (nil))
(code_label 17 16 18 5 209 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1043 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1043 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1044 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7930 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1044 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1044 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1044 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 95)) Commands.c:1044 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 96)) Commands.c:1044 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7930 ])) Commands.c:1044 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DIGEST_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cbd0 TPM2B_DIGEST_Unmarshal>) [0 TPM2B_DIGEST_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1044 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 97)
        (reg:SI 0 ax)) Commands.c:1044 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 97)) Commands.c:1044 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1045 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1045 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1046 -1
     (nil))
(code_label 36 35 37 8 210 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1049 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:1049 -1
     (nil)
 -> 56)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1050 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7931 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 134 [0x86])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1050 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 134 [0x86]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1050 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1050 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 2 cx)
        (const_int 0 [0])) Commands.c:1050 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 1 dx)
        (reg:DI 99)) Commands.c:1050 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 4 si)
        (reg:DI 100)) Commands.c:1050 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7931 ])) Commands.c:1050 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_SIGNATURE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c48d80 TPMT_SIGNATURE_Unmarshal>) [0 TPMT_SIGNATURE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1050 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 50 49 51 9 (set (reg:SI 101)
        (reg:SI 0 ax)) Commands.c:1050 -1
     (nil))
(insn 51 50 52 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 101)) Commands.c:1050 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1051 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:1051 -1
     (nil)
 -> 56)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1052 -1
     (nil))
(code_label 56 55 57 11 211 "" [2 uses])
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 61 11 (set (reg:SI 90 [ D.7932 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1055 -1
     (nil))
(insn 61 58 65 11 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.7932 ])) Commands.c:1055 -1
     (nil))
(insn 65 61 66 11 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:1056 -1
     (nil))
(insn 66 65 0 11 (use (reg/i:SI 0 ax)) Commands.c:1056 -1
     (nil))

;; Function Sign_In_Unmarshal (Sign_In_Unmarshal, funcdef_no=44, decl_uid=4097, cgraph_uid=44, symbol_order=46)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 81.
Merging block 16 into block 14...
Merged blocks 14 and 16.
Merged 14 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1059 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1059 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1059 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1059 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1060 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1062 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1062 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1063 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7933 ])
        (mem:SI (reg/f:DI 93) [0 *handles_10(D)+0 S4 A32])) Commands.c:1063 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1063 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 94) [0 target_12(D)->keyHandle+0 S4 A32])
        (reg:SI 87 [ D.7933 ])) Commands.c:1063 -1
     (nil))
(code_label 17 16 18 5 214 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1065 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1065 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1066 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7934 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1066 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1066 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1066 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 96)) Commands.c:1066 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 97)) Commands.c:1066 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7934 ])) Commands.c:1066 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DIGEST_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cbd0 TPM2B_DIGEST_Unmarshal>) [0 TPM2B_DIGEST_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1066 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 98)
        (reg:SI 0 ax)) Commands.c:1066 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 98)) Commands.c:1066 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1067 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1067 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1068 -1
     (nil))
(code_label 36 35 37 8 215 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1071 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:1071 -1
     (nil)
 -> 56)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1072 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7935 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 134 [0x86])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1072 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 134 [0x86]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1072 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1072 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:1072 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 1 dx)
        (reg:DI 100)) Commands.c:1072 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 4 si)
        (reg:DI 101)) Commands.c:1072 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7935 ])) Commands.c:1072 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_SIG_SCHEME_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c39ca8 TPMT_SIG_SCHEME_Unmarshal>) [0 TPMT_SIG_SCHEME_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1072 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 50 49 51 9 (set (reg:SI 102)
        (reg:SI 0 ax)) Commands.c:1072 -1
     (nil))
(insn 51 50 52 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 102)) Commands.c:1072 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1073 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:1073 -1
     (nil)
 -> 56)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1074 -1
     (nil))
(code_label 56 55 57 11 216 "" [2 uses])
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1077 -1
     (nil))
(jump_insn 59 58 60 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:1077 -1
     (nil)
 -> 75)
(note 60 59 61 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 12 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1078 -1
     (nil))
(insn 62 61 63 12 (parallel [
            (set (reg/f:DI 90 [ D.7936 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 140 [0x8c])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1078 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 140 [0x8c]))
        (nil)))
(insn 63 62 64 12 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1078 -1
     (nil))
(insn 64 63 65 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1078 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 1 dx)
        (reg:DI 104)) Commands.c:1078 -1
     (nil))
(insn 66 65 67 12 (set (reg:DI 4 si)
        (reg:DI 105)) Commands.c:1078 -1
     (nil))
(insn 67 66 68 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7936 ])) Commands.c:1078 -1
     (nil))
(call_insn 68 67 69 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_TK_HASHCHECK_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24948 TPMT_TK_HASHCHECK_Unmarshal>) [0 TPMT_TK_HASHCHECK_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1078 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 69 68 70 12 (set (reg:SI 106)
        (reg:SI 0 ax)) Commands.c:1078 -1
     (nil))
(insn 70 69 71 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 106)) Commands.c:1078 -1
     (nil))
(insn 71 70 72 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1079 -1
     (nil))
(jump_insn 72 71 73 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:1079 -1
     (nil)
 -> 75)
(note 73 72 74 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1080 -1
     (nil))
(code_label 75 74 76 14 217 "" [2 uses])
(note 76 75 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 80 14 (set (reg:SI 91 [ D.7937 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1083 -1
     (nil))
(insn 80 77 84 14 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.7937 ])) Commands.c:1083 -1
     (nil))
(insn 84 80 85 14 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Commands.c:1084 -1
     (nil))
(insn 85 84 0 14 (use (reg/i:SI 0 ax)) Commands.c:1084 -1
     (nil))

;; Function SetCommandCodeAuditStatus_In_Unmarshal (SetCommandCodeAuditStatus_In_Unmarshal, funcdef_no=45, decl_uid=4107, cgraph_uid=45, symbol_order=47)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 81.
Merging block 16 into block 14...
Merged blocks 14 and 16.
Merged 14 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1087 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1087 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1087 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1087 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1088 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1090 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1090 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1091 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7938 ])
        (mem:SI (reg/f:DI 93) [0 *handles_10(D)+0 S4 A32])) Commands.c:1091 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1091 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 94) [0 target_12(D)->auth+0 S4 A32])
        (reg:SI 87 [ D.7938 ])) Commands.c:1091 -1
     (nil))
(code_label 17 16 18 5 220 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1093 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) Commands.c:1093 -1
     (nil)
 -> 37)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1094 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7939 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1094 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1094 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1094 -1
     (nil))
(insn 26 25 27 6 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:1094 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 1 dx)
        (reg:DI 96)) Commands.c:1094 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 4 si)
        (reg:DI 97)) Commands.c:1094 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7939 ])) Commands.c:1094 -1
     (nil))
(call_insn 30 29 31 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_ALG_HASH_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1c0d8 TPMI_ALG_HASH_Unmarshal>) [0 TPMI_ALG_HASH_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1094 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 31 30 32 6 (set (reg:SI 98)
        (reg:SI 0 ax)) Commands.c:1094 -1
     (nil))
(insn 32 31 33 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 98)) Commands.c:1094 -1
     (nil))
(insn 33 32 34 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1095 -1
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) Commands.c:1095 -1
     (nil)
 -> 37)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1096 -1
     (nil))
(code_label 37 36 38 8 221 "" [2 uses])
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1099 -1
     (nil))
(jump_insn 40 39 41 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:1099 -1
     (nil)
 -> 56)
(note 41 40 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 9 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1100 -1
     (nil))
(insn 43 42 44 9 (parallel [
            (set (reg/f:DI 89 [ D.7940 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1100 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 44 43 45 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1100 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1100 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 1 dx)
        (reg:DI 100)) Commands.c:1100 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 4 si)
        (reg:DI 101)) Commands.c:1100 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7940 ])) Commands.c:1100 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPML_CC_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24ca8 TPML_CC_Unmarshal>) [0 TPML_CC_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1100 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 50 49 51 9 (set (reg:SI 102)
        (reg:SI 0 ax)) Commands.c:1100 -1
     (nil))
(insn 51 50 52 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 102)) Commands.c:1100 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1101 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:1101 -1
     (nil)
 -> 56)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1102 -1
     (nil))
(code_label 56 55 57 11 222 "" [2 uses])
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1105 -1
     (nil))
(jump_insn 59 58 60 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:1105 -1
     (nil)
 -> 75)
(note 60 59 61 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 12 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1106 -1
     (nil))
(insn 62 61 63 12 (parallel [
            (set (reg/f:DI 90 [ D.7940 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 2052 [0x804])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1106 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 2052 [0x804]))
        (nil)))
(insn 63 62 64 12 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1106 -1
     (nil))
(insn 64 63 65 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1106 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 1 dx)
        (reg:DI 104)) Commands.c:1106 -1
     (nil))
(insn 66 65 67 12 (set (reg:DI 4 si)
        (reg:DI 105)) Commands.c:1106 -1
     (nil))
(insn 67 66 68 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7940 ])) Commands.c:1106 -1
     (nil))
(call_insn 68 67 69 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPML_CC_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24ca8 TPML_CC_Unmarshal>) [0 TPML_CC_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1106 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 69 68 70 12 (set (reg:SI 106)
        (reg:SI 0 ax)) Commands.c:1106 -1
     (nil))
(insn 70 69 71 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 106)) Commands.c:1106 -1
     (nil))
(insn 71 70 72 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1107 -1
     (nil))
(jump_insn 72 71 73 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:1107 -1
     (nil)
 -> 75)
(note 73 72 74 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1108 -1
     (nil))
(code_label 75 74 76 14 223 "" [2 uses])
(note 76 75 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 80 14 (set (reg:SI 91 [ D.7941 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1111 -1
     (nil))
(insn 80 77 84 14 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.7941 ])) Commands.c:1111 -1
     (nil))
(insn 84 80 85 14 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Commands.c:1112 -1
     (nil))
(insn 85 84 0 14 (use (reg/i:SI 0 ax)) Commands.c:1112 -1
     (nil))

;; Function PCR_Extend_In_Unmarshal (PCR_Extend_In_Unmarshal, funcdef_no=46, decl_uid=4112, cgraph_uid=46, symbol_order=48)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1115 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1115 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1115 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1115 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1116 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1118 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1118 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1119 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7942 ])
        (mem:SI (reg/f:DI 91) [0 *handles_6(D)+0 S4 A32])) Commands.c:1119 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1119 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_8(D)->pcrHandle+0 S4 A32])
        (reg:SI 87 [ D.7942 ])) Commands.c:1119 -1
     (nil))
(code_label 17 16 18 5 226 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1121 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1121 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1122 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7943 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1122 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1122 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1122 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:1122 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:1122 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7943 ])) Commands.c:1122 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPML_DIGEST_VALUES_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c2a288 TPML_DIGEST_VALUES_Unmarshal>) [0 TPML_DIGEST_VALUES_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1122 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:1122 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:1122 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1123 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1123 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1124 -1
     (nil))
(code_label 36 35 37 8 227 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.7944 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1127 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.7944 ])) Commands.c:1127 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:1128 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:1128 -1
     (nil))

;; Function PCR_Event_In_Unmarshal (PCR_Event_In_Unmarshal, funcdef_no=47, decl_uid=4117, cgraph_uid=47, symbol_order=49)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1131 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1131 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1131 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1131 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1132 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1134 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1134 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1135 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7945 ])
        (mem:SI (reg/f:DI 91) [0 *handles_6(D)+0 S4 A32])) Commands.c:1135 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1135 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_8(D)->pcrHandle+0 S4 A32])
        (reg:SI 87 [ D.7945 ])) Commands.c:1135 -1
     (nil))
(code_label 17 16 18 5 230 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1137 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1137 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1138 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7946 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1138 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1138 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1138 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:1138 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:1138 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7946 ])) Commands.c:1138 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_EVENT_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c240d8 TPM2B_EVENT_Unmarshal>) [0 TPM2B_EVENT_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1138 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:1138 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:1138 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1139 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1139 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1140 -1
     (nil))
(code_label 36 35 37 8 231 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.7947 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1143 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.7947 ])) Commands.c:1143 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:1144 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:1144 -1
     (nil))

;; Function PCR_Read_In_Unmarshal (PCR_Read_In_Unmarshal, funcdef_no=48, decl_uid=4127, cgraph_uid=48, symbol_order=50)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 32.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1147 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1147 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1147 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1147 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1148 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1151 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:1151 -1
     (nil)
 -> 26)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 87 [ D.7948 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1152 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1152 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1152 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 1 dx)
        (reg:DI 90)) Commands.c:1152 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 91)) Commands.c:1152 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.7948 ])) Commands.c:1152 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPML_PCR_SELECTION_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c2a360 TPML_PCR_SELECTION_Unmarshal>) [0 TPML_PCR_SELECTION_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1152 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 4 (set (reg:SI 92)
        (reg:SI 0 ax)) Commands.c:1152 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 92)) Commands.c:1152 -1
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1153 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:1153 -1
     (nil)
 -> 26)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1154 -1
     (nil))
(code_label 26 25 27 6 234 "" [2 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 31 6 (set (reg:SI 88 [ D.7949 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1157 -1
     (nil))
(insn 31 28 35 6 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.7949 ])) Commands.c:1157 -1
     (nil))
(insn 35 31 36 6 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:1158 -1
     (nil))
(insn 36 35 0 6 (use (reg/i:SI 0 ax)) Commands.c:1158 -1
     (nil))

;; Function PCR_Allocate_In_Unmarshal (PCR_Allocate_In_Unmarshal, funcdef_no=49, decl_uid=4137, cgraph_uid=49, symbol_order=51)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1161 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1161 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1161 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1161 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1162 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1164 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1164 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1165 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7950 ])
        (mem:SI (reg/f:DI 91) [0 *handles_6(D)+0 S4 A32])) Commands.c:1165 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1165 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_8(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.7950 ])) Commands.c:1165 -1
     (nil))
(code_label 17 16 18 5 237 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1167 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1167 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1168 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7951 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1168 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1168 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1168 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:1168 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:1168 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7951 ])) Commands.c:1168 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPML_PCR_SELECTION_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c2a360 TPML_PCR_SELECTION_Unmarshal>) [0 TPML_PCR_SELECTION_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1168 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:1168 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:1168 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1169 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1169 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1170 -1
     (nil))
(code_label 36 35 37 8 238 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.7952 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1173 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.7952 ])) Commands.c:1173 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:1174 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:1174 -1
     (nil))

;; Function PCR_SetAuthPolicy_In_Unmarshal (PCR_SetAuthPolicy_In_Unmarshal, funcdef_no=50, decl_uid=4147, cgraph_uid=50, symbol_order=52)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 82.
Merging block 16 into block 14...
Merged blocks 14 and 16.
Merged 14 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1177 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1177 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1177 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1177 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1178 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1180 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1180 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1181 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7953 ])
        (mem:SI (reg/f:DI 93) [0 *handles_10(D)+0 S4 A32])) Commands.c:1181 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1181 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 94) [0 target_12(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.7953 ])) Commands.c:1181 -1
     (nil))
(code_label 17 16 18 5 241 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1183 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1183 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1184 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7954 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1184 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1184 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1184 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 96)) Commands.c:1184 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 97)) Commands.c:1184 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7954 ])) Commands.c:1184 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DIGEST_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cbd0 TPM2B_DIGEST_Unmarshal>) [0 TPM2B_DIGEST_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1184 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 98)
        (reg:SI 0 ax)) Commands.c:1184 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 98)) Commands.c:1184 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1185 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1185 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1186 -1
     (nil))
(code_label 36 35 37 8 242 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1189 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:1189 -1
     (nil)
 -> 56)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1190 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7955 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 134 [0x86])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1190 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 134 [0x86]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1190 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1190 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:1190 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 1 dx)
        (reg:DI 100)) Commands.c:1190 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 4 si)
        (reg:DI 101)) Commands.c:1190 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7955 ])) Commands.c:1190 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_ALG_HASH_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1c0d8 TPMI_ALG_HASH_Unmarshal>) [0 TPMI_ALG_HASH_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1190 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 50 49 51 9 (set (reg:SI 102)
        (reg:SI 0 ax)) Commands.c:1190 -1
     (nil))
(insn 51 50 52 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 102)) Commands.c:1190 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1191 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:1191 -1
     (nil)
 -> 56)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1192 -1
     (nil))
(code_label 56 55 57 11 243 "" [2 uses])
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1195 -1
     (nil))
(jump_insn 59 58 60 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) Commands.c:1195 -1
     (nil)
 -> 76)
(note 60 59 61 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 12 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1196 -1
     (nil))
(insn 62 61 63 12 (parallel [
            (set (reg/f:DI 90 [ D.7956 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 136 [0x88])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1196 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 136 [0x88]))
        (nil)))
(insn 63 62 64 12 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1196 -1
     (nil))
(insn 64 63 65 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1196 -1
     (nil))
(insn 65 64 66 12 (set (reg:SI 2 cx)
        (const_int 0 [0])) Commands.c:1196 -1
     (nil))
(insn 66 65 67 12 (set (reg:DI 1 dx)
        (reg:DI 104)) Commands.c:1196 -1
     (nil))
(insn 67 66 68 12 (set (reg:DI 4 si)
        (reg:DI 105)) Commands.c:1196 -1
     (nil))
(insn 68 67 69 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7956 ])) Commands.c:1196 -1
     (nil))
(call_insn 69 68 70 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_DH_PCR_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c13360 TPMI_DH_PCR_Unmarshal>) [0 TPMI_DH_PCR_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1196 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 70 69 71 12 (set (reg:SI 106)
        (reg:SI 0 ax)) Commands.c:1196 -1
     (nil))
(insn 71 70 72 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 106)) Commands.c:1196 -1
     (nil))
(insn 72 71 73 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1197 -1
     (nil))
(jump_insn 73 72 74 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) Commands.c:1197 -1
     (nil)
 -> 76)
(note 74 73 75 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1198 -1
     (nil))
(code_label 76 75 77 14 244 "" [2 uses])
(note 77 76 78 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 81 14 (set (reg:SI 91 [ D.7957 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1201 -1
     (nil))
(insn 81 78 85 14 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.7957 ])) Commands.c:1201 -1
     (nil))
(insn 85 81 86 14 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Commands.c:1202 -1
     (nil))
(insn 86 85 0 14 (use (reg/i:SI 0 ax)) Commands.c:1202 -1
     (nil))

;; Function PCR_SetAuthValue_In_Unmarshal (PCR_SetAuthValue_In_Unmarshal, funcdef_no=51, decl_uid=4152, cgraph_uid=51, symbol_order=53)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1205 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1205 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1205 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1205 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1206 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1208 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1208 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1209 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7958 ])
        (mem:SI (reg/f:DI 91) [0 *handles_6(D)+0 S4 A32])) Commands.c:1209 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1209 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_8(D)->pcrHandle+0 S4 A32])
        (reg:SI 87 [ D.7958 ])) Commands.c:1209 -1
     (nil))
(code_label 17 16 18 5 247 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1211 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1211 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1212 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7959 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1212 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1212 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1212 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:1212 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:1212 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7959 ])) Commands.c:1212 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DIGEST_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cbd0 TPM2B_DIGEST_Unmarshal>) [0 TPM2B_DIGEST_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1212 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:1212 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:1212 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1213 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1213 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1214 -1
     (nil))
(code_label 36 35 37 8 248 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.7960 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1217 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.7960 ])) Commands.c:1217 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:1218 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:1218 -1
     (nil))

;; Function PCR_Reset_In_Unmarshal (PCR_Reset_In_Unmarshal, funcdef_no=52, decl_uid=4157, cgraph_uid=52, symbol_order=54)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 23.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1221 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1221 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1221 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1221 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1222 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1226 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1226 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1227 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7961 ])
        (mem:SI (reg/f:DI 90) [0 *handles_8(D)+0 S4 A32])) Commands.c:1227 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1227 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 91) [0 target_10(D)->pcrHandle+0 S4 A32])
        (reg:SI 87 [ D.7961 ])) Commands.c:1227 -1
     (nil))
(code_label 17 16 18 5 251 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 22 5 (set (reg:SI 88 [ D.7962 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1229 -1
     (nil))
(insn 22 19 26 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.7962 ])) Commands.c:1229 -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:1230 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) Commands.c:1230 -1
     (nil))

;; Function PolicySigned_In_Unmarshal (PolicySigned_In_Unmarshal, funcdef_no=53, decl_uid=4162, cgraph_uid=53, symbol_order=55)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 21 into block 20...
Merged blocks 20 and 21.
Merged 20 and 21 without moving.
Removing jump 123.
Merging block 22 into block 20...
Merged blocks 20 and 22.
Merged 20 and 22 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1233 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1233 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1233 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1233 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1234 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1236 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:1236 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1237 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7963 ])
        (mem:SI (reg/f:DI 96) [0 *handles_14(D)+0 S4 A32])) Commands.c:1237 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1237 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 97) [0 target_16(D)->authObject+0 S4 A32])
        (reg:SI 87 [ D.7963 ])) Commands.c:1237 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1238 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.7963 ])
        (mem:SI (plus:DI (reg/f:DI 98)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_14(D) + 4B]+0 S4 A32])) Commands.c:1238 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1238 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 99)
                (const_int 4 [0x4])) [0 target_16(D)->policySession+0 S4 A32])
        (reg:SI 88 [ D.7963 ])) Commands.c:1238 -1
     (nil))
(code_label 21 20 22 5 254 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1240 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:1240 -1
     (nil)
 -> 40)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1241 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 89 [ D.7964 ])
                (plus:DI (reg/f:DI 100)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1241 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 28 27 29 6 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1241 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1241 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx)
        (reg:DI 101)) Commands.c:1241 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 102)) Commands.c:1241 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7964 ])) Commands.c:1241 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_NONCE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cd80 TPM2B_NONCE_Unmarshal>) [0 TPM2B_NONCE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1241 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 6 (set (reg:SI 103)
        (reg:SI 0 ax)) Commands.c:1241 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 103)) Commands.c:1241 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1242 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:1242 -1
     (nil)
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1243 -1
     (nil))
(code_label 40 39 41 8 255 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1246 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) Commands.c:1246 -1
     (nil)
 -> 59)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1247 -1
     (nil))
(insn 46 45 47 9 (parallel [
            (set (reg/f:DI 90 [ D.7965 ])
                (plus:DI (reg/f:DI 104)
                    (const_int 138 [0x8a])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1247 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 138 [0x8a]))
        (nil)))
(insn 47 46 48 9 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1247 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1247 -1
     (nil))
(insn 49 48 50 9 (set (reg:DI 1 dx)
        (reg:DI 105)) Commands.c:1247 -1
     (nil))
(insn 50 49 51 9 (set (reg:DI 4 si)
        (reg:DI 106)) Commands.c:1247 -1
     (nil))
(insn 51 50 52 9 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7965 ])) Commands.c:1247 -1
     (nil))
(call_insn 52 51 53 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DIGEST_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cbd0 TPM2B_DIGEST_Unmarshal>) [0 TPM2B_DIGEST_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1247 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 53 52 54 9 (set (reg:SI 107)
        (reg:SI 0 ax)) Commands.c:1247 -1
     (nil))
(insn 54 53 55 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 107)) Commands.c:1247 -1
     (nil))
(insn 55 54 56 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1248 -1
     (nil))
(jump_insn 56 55 57 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) Commands.c:1248 -1
     (nil)
 -> 59)
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1249 -1
     (nil))
(code_label 59 58 60 11 256 "" [2 uses])
(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1252 -1
     (nil))
(jump_insn 62 61 63 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) Commands.c:1252 -1
     (nil)
 -> 78)
(note 63 62 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 12 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1253 -1
     (nil))
(insn 65 64 66 12 (parallel [
            (set (reg/f:DI 91 [ D.7964 ])
                (plus:DI (reg/f:DI 108)
                    (const_int 268 [0x10c])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1253 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 268 [0x10c]))
        (nil)))
(insn 66 65 67 12 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1253 -1
     (nil))
(insn 67 66 68 12 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1253 -1
     (nil))
(insn 68 67 69 12 (set (reg:DI 1 dx)
        (reg:DI 109)) Commands.c:1253 -1
     (nil))
(insn 69 68 70 12 (set (reg:DI 4 si)
        (reg:DI 110)) Commands.c:1253 -1
     (nil))
(insn 70 69 71 12 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.7964 ])) Commands.c:1253 -1
     (nil))
(call_insn 71 70 72 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_NONCE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cd80 TPM2B_NONCE_Unmarshal>) [0 TPM2B_NONCE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1253 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 72 71 73 12 (set (reg:SI 111)
        (reg:SI 0 ax)) Commands.c:1253 -1
     (nil))
(insn 73 72 74 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 111)) Commands.c:1253 -1
     (nil))
(insn 74 73 75 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1254 -1
     (nil))
(jump_insn 75 74 76 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) Commands.c:1254 -1
     (nil)
 -> 78)
(note 76 75 77 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1255 -1
     (nil))
(code_label 78 77 79 14 257 "" [2 uses])
(note 79 78 80 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1258 -1
     (nil))
(jump_insn 81 80 82 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) Commands.c:1258 -1
     (nil)
 -> 97)
(note 82 81 83 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 15 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1259 -1
     (nil))
(insn 84 83 85 15 (parallel [
            (set (reg/f:DI 92 [ D.7966 ])
                (plus:DI (reg/f:DI 112)
                    (const_int 400 [0x190])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1259 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 400 [0x190]))
        (nil)))
(insn 85 84 86 15 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1259 -1
     (nil))
(insn 86 85 87 15 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1259 -1
     (nil))
(insn 87 86 88 15 (set (reg:DI 1 dx)
        (reg:DI 113)) Commands.c:1259 -1
     (nil))
(insn 88 87 89 15 (set (reg:DI 4 si)
        (reg:DI 114)) Commands.c:1259 -1
     (nil))
(insn 89 88 90 15 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.7966 ])) Commands.c:1259 -1
     (nil))
(call_insn 90 89 91 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("INT32_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1948 INT32_Unmarshal>) [0 INT32_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1259 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 91 90 92 15 (set (reg:SI 115)
        (reg:SI 0 ax)) Commands.c:1259 -1
     (nil))
(insn 92 91 93 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 115)) Commands.c:1259 -1
     (nil))
(insn 93 92 94 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1260 -1
     (nil))
(jump_insn 94 93 95 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) Commands.c:1260 -1
     (nil)
 -> 97)
(note 95 94 96 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 1088 [0x440])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1261 -1
     (nil))
(code_label 97 96 98 17 258 "" [2 uses])
(note 98 97 99 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1264 -1
     (nil))
(jump_insn 100 99 101 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) Commands.c:1264 -1
     (nil)
 -> 117)
(note 101 100 102 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 18 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1265 -1
     (nil))
(insn 103 102 104 18 (parallel [
            (set (reg/f:DI 93 [ D.7967 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 404 [0x194])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1265 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 404 [0x194]))
        (nil)))
(insn 104 103 105 18 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1265 -1
     (nil))
(insn 105 104 106 18 (set (reg:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1265 -1
     (nil))
(insn 106 105 107 18 (set (reg:SI 2 cx)
        (const_int 0 [0])) Commands.c:1265 -1
     (nil))
(insn 107 106 108 18 (set (reg:DI 1 dx)
        (reg:DI 117)) Commands.c:1265 -1
     (nil))
(insn 108 107 109 18 (set (reg:DI 4 si)
        (reg:DI 118)) Commands.c:1265 -1
     (nil))
(insn 109 108 110 18 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.7967 ])) Commands.c:1265 -1
     (nil))
(call_insn 110 109 111 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_SIGNATURE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c48d80 TPMT_SIGNATURE_Unmarshal>) [0 TPMT_SIGNATURE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1265 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 111 110 112 18 (set (reg:SI 119)
        (reg:SI 0 ax)) Commands.c:1265 -1
     (nil))
(insn 112 111 113 18 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 119)) Commands.c:1265 -1
     (nil))
(insn 113 112 114 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1266 -1
     (nil))
(jump_insn 114 113 115 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) Commands.c:1266 -1
     (nil)
 -> 117)
(note 115 114 116 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 1344 [0x540])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1267 -1
     (nil))
(code_label 117 116 118 20 259 "" [2 uses])
(note 118 117 119 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 122 20 (set (reg:SI 94 [ D.7968 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1270 -1
     (nil))
(insn 122 119 126 20 (set (reg:SI 95 [ <retval> ])
        (reg:SI 94 [ D.7968 ])) Commands.c:1270 -1
     (nil))
(insn 126 122 127 20 (set (reg/i:SI 0 ax)
        (reg:SI 95 [ <retval> ])) Commands.c:1271 -1
     (nil))
(insn 127 126 0 20 (use (reg/i:SI 0 ax)) Commands.c:1271 -1
     (nil))

;; Function PolicySecret_In_Unmarshal (PolicySecret_In_Unmarshal, funcdef_no=54, decl_uid=4172, cgraph_uid=54, symbol_order=56)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Removing jump 103.
Merging block 19 into block 17...
Merged blocks 17 and 19.
Merged 17 and 19 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1274 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1274 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1274 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1274 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1275 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1277 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:1277 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1278 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7969 ])
        (mem:SI (reg/f:DI 95) [0 *handles_12(D)+0 S4 A32])) Commands.c:1278 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1278 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 96) [0 target_14(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.7969 ])) Commands.c:1278 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1279 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.7969 ])
        (mem:SI (plus:DI (reg/f:DI 97)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_12(D) + 4B]+0 S4 A32])) Commands.c:1279 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1279 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 98)
                (const_int 4 [0x4])) [0 target_14(D)->policySession+0 S4 A32])
        (reg:SI 88 [ D.7969 ])) Commands.c:1279 -1
     (nil))
(code_label 21 20 22 5 262 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1281 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:1281 -1
     (nil)
 -> 40)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1282 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 89 [ D.7970 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1282 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 28 27 29 6 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1282 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1282 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx)
        (reg:DI 100)) Commands.c:1282 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 101)) Commands.c:1282 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7970 ])) Commands.c:1282 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_NONCE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cd80 TPM2B_NONCE_Unmarshal>) [0 TPM2B_NONCE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1282 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 6 (set (reg:SI 102)
        (reg:SI 0 ax)) Commands.c:1282 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 102)) Commands.c:1282 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1283 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:1283 -1
     (nil)
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1284 -1
     (nil))
(code_label 40 39 41 8 263 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1287 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) Commands.c:1287 -1
     (nil)
 -> 59)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1288 -1
     (nil))
(insn 46 45 47 9 (parallel [
            (set (reg/f:DI 90 [ D.7971 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 138 [0x8a])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1288 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 138 [0x8a]))
        (nil)))
(insn 47 46 48 9 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1288 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1288 -1
     (nil))
(insn 49 48 50 9 (set (reg:DI 1 dx)
        (reg:DI 104)) Commands.c:1288 -1
     (nil))
(insn 50 49 51 9 (set (reg:DI 4 si)
        (reg:DI 105)) Commands.c:1288 -1
     (nil))
(insn 51 50 52 9 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7971 ])) Commands.c:1288 -1
     (nil))
(call_insn 52 51 53 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DIGEST_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cbd0 TPM2B_DIGEST_Unmarshal>) [0 TPM2B_DIGEST_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1288 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 53 52 54 9 (set (reg:SI 106)
        (reg:SI 0 ax)) Commands.c:1288 -1
     (nil))
(insn 54 53 55 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 106)) Commands.c:1288 -1
     (nil))
(insn 55 54 56 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1289 -1
     (nil))
(jump_insn 56 55 57 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) Commands.c:1289 -1
     (nil)
 -> 59)
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1290 -1
     (nil))
(code_label 59 58 60 11 264 "" [2 uses])
(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1293 -1
     (nil))
(jump_insn 62 61 63 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) Commands.c:1293 -1
     (nil)
 -> 78)
(note 63 62 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 12 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1294 -1
     (nil))
(insn 65 64 66 12 (parallel [
            (set (reg/f:DI 91 [ D.7970 ])
                (plus:DI (reg/f:DI 107)
                    (const_int 268 [0x10c])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1294 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 268 [0x10c]))
        (nil)))
(insn 66 65 67 12 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1294 -1
     (nil))
(insn 67 66 68 12 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1294 -1
     (nil))
(insn 68 67 69 12 (set (reg:DI 1 dx)
        (reg:DI 108)) Commands.c:1294 -1
     (nil))
(insn 69 68 70 12 (set (reg:DI 4 si)
        (reg:DI 109)) Commands.c:1294 -1
     (nil))
(insn 70 69 71 12 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.7970 ])) Commands.c:1294 -1
     (nil))
(call_insn 71 70 72 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_NONCE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cd80 TPM2B_NONCE_Unmarshal>) [0 TPM2B_NONCE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1294 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 72 71 73 12 (set (reg:SI 110)
        (reg:SI 0 ax)) Commands.c:1294 -1
     (nil))
(insn 73 72 74 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 110)) Commands.c:1294 -1
     (nil))
(insn 74 73 75 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1295 -1
     (nil))
(jump_insn 75 74 76 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) Commands.c:1295 -1
     (nil)
 -> 78)
(note 76 75 77 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1296 -1
     (nil))
(code_label 78 77 79 14 265 "" [2 uses])
(note 79 78 80 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1299 -1
     (nil))
(jump_insn 81 80 82 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) Commands.c:1299 -1
     (nil)
 -> 97)
(note 82 81 83 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 15 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1300 -1
     (nil))
(insn 84 83 85 15 (parallel [
            (set (reg/f:DI 92 [ D.7972 ])
                (plus:DI (reg/f:DI 111)
                    (const_int 400 [0x190])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1300 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 400 [0x190]))
        (nil)))
(insn 85 84 86 15 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1300 -1
     (nil))
(insn 86 85 87 15 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1300 -1
     (nil))
(insn 87 86 88 15 (set (reg:DI 1 dx)
        (reg:DI 112)) Commands.c:1300 -1
     (nil))
(insn 88 87 89 15 (set (reg:DI 4 si)
        (reg:DI 113)) Commands.c:1300 -1
     (nil))
(insn 89 88 90 15 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.7972 ])) Commands.c:1300 -1
     (nil))
(call_insn 90 89 91 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("INT32_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1948 INT32_Unmarshal>) [0 INT32_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1300 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 91 90 92 15 (set (reg:SI 114)
        (reg:SI 0 ax)) Commands.c:1300 -1
     (nil))
(insn 92 91 93 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 114)) Commands.c:1300 -1
     (nil))
(insn 93 92 94 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1301 -1
     (nil))
(jump_insn 94 93 95 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) Commands.c:1301 -1
     (nil)
 -> 97)
(note 95 94 96 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 1088 [0x440])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1302 -1
     (nil))
(code_label 97 96 98 17 266 "" [2 uses])
(note 98 97 99 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 102 17 (set (reg:SI 93 [ D.7973 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1305 -1
     (nil))
(insn 102 99 106 17 (set (reg:SI 94 [ <retval> ])
        (reg:SI 93 [ D.7973 ])) Commands.c:1305 -1
     (nil))
(insn 106 102 107 17 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) Commands.c:1306 -1
     (nil))
(insn 107 106 0 17 (use (reg/i:SI 0 ax)) Commands.c:1306 -1
     (nil))

;; Function PolicyTicket_In_Unmarshal (PolicyTicket_In_Unmarshal, funcdef_no=55, decl_uid=4182, cgraph_uid=55, symbol_order=57)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 21 into block 20...
Merged blocks 20 and 21.
Merged 20 and 21 without moving.
Removing jump 118.
Merging block 22 into block 20...
Merged blocks 20 and 22.
Merged 20 and 22 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1309 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1309 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1309 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1309 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1310 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1312 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1312 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1313 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7974 ])
        (mem:SI (reg/f:DI 95) [0 *handles_14(D)+0 S4 A32])) Commands.c:1313 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1313 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 96) [0 target_16(D)->policySession+0 S4 A32])
        (reg:SI 87 [ D.7974 ])) Commands.c:1313 -1
     (nil))
(code_label 17 16 18 5 269 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1315 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1315 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1316 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7975 ])
                (plus:DI (reg/f:DI 97)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1316 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1316 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1316 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 98)) Commands.c:1316 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 99)) Commands.c:1316 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7975 ])) Commands.c:1316 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_TIMEOUT_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24360 TPM2B_TIMEOUT_Unmarshal>) [0 TPM2B_TIMEOUT_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1316 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 100)
        (reg:SI 0 ax)) Commands.c:1316 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 100)) Commands.c:1316 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1317 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1317 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1318 -1
     (nil))
(code_label 36 35 37 8 270 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1321 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:1321 -1
     (nil)
 -> 55)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1322 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7976 ])
                (plus:DI (reg/f:DI 101)
                    (const_int 134 [0x86])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1322 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 134 [0x86]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1322 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1322 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 1 dx)
        (reg:DI 102)) Commands.c:1322 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 4 si)
        (reg:DI 103)) Commands.c:1322 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7976 ])) Commands.c:1322 -1
     (nil))
(call_insn 48 47 49 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DIGEST_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cbd0 TPM2B_DIGEST_Unmarshal>) [0 TPM2B_DIGEST_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1322 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 49 48 50 9 (set (reg:SI 104)
        (reg:SI 0 ax)) Commands.c:1322 -1
     (nil))
(insn 50 49 51 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 104)) Commands.c:1322 -1
     (nil))
(insn 51 50 52 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1323 -1
     (nil))
(jump_insn 52 51 53 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:1323 -1
     (nil)
 -> 55)
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1324 -1
     (nil))
(code_label 55 54 56 11 271 "" [2 uses])
(note 56 55 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1327 -1
     (nil))
(jump_insn 58 57 59 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) Commands.c:1327 -1
     (nil)
 -> 74)
(note 59 58 60 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 12 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1328 -1
     (nil))
(insn 61 60 62 12 (parallel [
            (set (reg/f:DI 90 [ D.7977 ])
                (plus:DI (reg/f:DI 105)
                    (const_int 264 [0x108])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1328 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 264 [0x108]))
        (nil)))
(insn 62 61 63 12 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1328 -1
     (nil))
(insn 63 62 64 12 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1328 -1
     (nil))
(insn 64 63 65 12 (set (reg:DI 1 dx)
        (reg:DI 106)) Commands.c:1328 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 4 si)
        (reg:DI 107)) Commands.c:1328 -1
     (nil))
(insn 66 65 67 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7977 ])) Commands.c:1328 -1
     (nil))
(call_insn 67 66 68 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_NONCE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cd80 TPM2B_NONCE_Unmarshal>) [0 TPM2B_NONCE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1328 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 68 67 69 12 (set (reg:SI 108)
        (reg:SI 0 ax)) Commands.c:1328 -1
     (nil))
(insn 69 68 70 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 108)) Commands.c:1328 -1
     (nil))
(insn 70 69 71 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1329 -1
     (nil))
(jump_insn 71 70 72 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) Commands.c:1329 -1
     (nil)
 -> 74)
(note 72 71 73 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1330 -1
     (nil))
(code_label 74 73 75 14 272 "" [2 uses])
(note 75 74 76 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1333 -1
     (nil))
(jump_insn 77 76 78 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) Commands.c:1333 -1
     (nil)
 -> 93)
(note 78 77 79 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 15 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1334 -1
     (nil))
(insn 80 79 81 15 (parallel [
            (set (reg/f:DI 91 [ D.7978 ])
                (plus:DI (reg/f:DI 109)
                    (const_int 394 [0x18a])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1334 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 394 [0x18a]))
        (nil)))
(insn 81 80 82 15 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1334 -1
     (nil))
(insn 82 81 83 15 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1334 -1
     (nil))
(insn 83 82 84 15 (set (reg:DI 1 dx)
        (reg:DI 110)) Commands.c:1334 -1
     (nil))
(insn 84 83 85 15 (set (reg:DI 4 si)
        (reg:DI 111)) Commands.c:1334 -1
     (nil))
(insn 85 84 86 15 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.7978 ])) Commands.c:1334 -1
     (nil))
(call_insn 86 85 87 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_NAME_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24510 TPM2B_NAME_Unmarshal>) [0 TPM2B_NAME_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1334 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 87 86 88 15 (set (reg:SI 112)
        (reg:SI 0 ax)) Commands.c:1334 -1
     (nil))
(insn 88 87 89 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 112)) Commands.c:1334 -1
     (nil))
(insn 89 88 90 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1335 -1
     (nil))
(jump_insn 90 89 91 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) Commands.c:1335 -1
     (nil)
 -> 93)
(note 91 90 92 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 1088 [0x440])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1336 -1
     (nil))
(code_label 93 92 94 17 273 "" [2 uses])
(note 94 93 95 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1339 -1
     (nil))
(jump_insn 96 95 97 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) Commands.c:1339 -1
     (nil)
 -> 112)
(note 97 96 98 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 18 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1340 -1
     (nil))
(insn 99 98 100 18 (parallel [
            (set (reg/f:DI 92 [ D.7979 ])
                (plus:DI (reg/f:DI 113)
                    (const_int 528 [0x210])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1340 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 528 [0x210]))
        (nil)))
(insn 100 99 101 18 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1340 -1
     (nil))
(insn 101 100 102 18 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1340 -1
     (nil))
(insn 102 101 103 18 (set (reg:DI 1 dx)
        (reg:DI 114)) Commands.c:1340 -1
     (nil))
(insn 103 102 104 18 (set (reg:DI 4 si)
        (reg:DI 115)) Commands.c:1340 -1
     (nil))
(insn 104 103 105 18 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.7979 ])) Commands.c:1340 -1
     (nil))
(call_insn 105 104 106 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_TK_AUTH_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24870 TPMT_TK_AUTH_Unmarshal>) [0 TPMT_TK_AUTH_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1340 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 106 105 107 18 (set (reg:SI 116)
        (reg:SI 0 ax)) Commands.c:1340 -1
     (nil))
(insn 107 106 108 18 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 116)) Commands.c:1340 -1
     (nil))
(insn 108 107 109 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1341 -1
     (nil))
(jump_insn 109 108 110 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) Commands.c:1341 -1
     (nil)
 -> 112)
(note 110 109 111 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 1344 [0x540])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1342 -1
     (nil))
(code_label 112 111 113 20 274 "" [2 uses])
(note 113 112 114 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 117 20 (set (reg:SI 93 [ D.7980 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1345 -1
     (nil))
(insn 117 114 121 20 (set (reg:SI 94 [ <retval> ])
        (reg:SI 93 [ D.7980 ])) Commands.c:1345 -1
     (nil))
(insn 121 117 122 20 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) Commands.c:1346 -1
     (nil))
(insn 122 121 0 20 (use (reg/i:SI 0 ax)) Commands.c:1346 -1
     (nil))

;; Function PolicyOR_In_Unmarshal (PolicyOR_In_Unmarshal, funcdef_no=56, decl_uid=4187, cgraph_uid=56, symbol_order=58)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 43.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1349 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1349 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1349 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1349 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1350 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1352 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1352 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1353 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7981 ])
        (mem:SI (reg/f:DI 91) [0 *handles_6(D)+0 S4 A32])) Commands.c:1353 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1353 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_8(D)->policySession+0 S4 A32])
        (reg:SI 87 [ D.7981 ])) Commands.c:1353 -1
     (nil))
(code_label 17 16 18 5 277 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1355 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) Commands.c:1355 -1
     (nil)
 -> 37)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1357 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7982 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1357 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1357 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1357 -1
     (nil))
(insn 26 25 27 6 (set (reg:SI 2 cx)
        (const_int 2 [0x2])) Commands.c:1357 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:1357 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:1357 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7982 ])) Commands.c:1357 -1
     (nil))
(call_insn 30 29 31 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPML_DIGEST_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c2a1b0 TPML_DIGEST_Unmarshal>) [0 TPML_DIGEST_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1357 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 31 30 32 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:1357 -1
     (nil))
(insn 32 31 33 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:1357 -1
     (nil))
(insn 33 32 34 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1358 -1
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) Commands.c:1358 -1
     (nil)
 -> 37)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1359 -1
     (nil))
(code_label 37 36 38 8 278 "" [2 uses])
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 42 8 (set (reg:SI 89 [ D.7983 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1362 -1
     (nil))
(insn 42 39 46 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.7983 ])) Commands.c:1362 -1
     (nil))
(insn 46 42 47 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:1363 -1
     (nil))
(insn 47 46 0 8 (use (reg/i:SI 0 ax)) Commands.c:1363 -1
     (nil))

;; Function PolicyPCR_In_Unmarshal (PolicyPCR_In_Unmarshal, funcdef_no=57, decl_uid=4192, cgraph_uid=57, symbol_order=59)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 61.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1366 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1366 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1366 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1366 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1367 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1369 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1369 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1370 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7984 ])
        (mem:SI (reg/f:DI 92) [0 *handles_8(D)+0 S4 A32])) Commands.c:1370 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1370 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_10(D)->policySession+0 S4 A32])
        (reg:SI 87 [ D.7984 ])) Commands.c:1370 -1
     (nil))
(code_label 17 16 18 5 281 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1372 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1372 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1373 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7985 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1373 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1373 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1373 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 95)) Commands.c:1373 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 96)) Commands.c:1373 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7985 ])) Commands.c:1373 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DIGEST_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cbd0 TPM2B_DIGEST_Unmarshal>) [0 TPM2B_DIGEST_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1373 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 97)
        (reg:SI 0 ax)) Commands.c:1373 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 97)) Commands.c:1373 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1374 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1374 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1375 -1
     (nil))
(code_label 36 35 37 8 282 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1378 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:1378 -1
     (nil)
 -> 55)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1379 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.7986 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 136 [0x88])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1379 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 136 [0x88]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1379 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1379 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 1 dx)
        (reg:DI 99)) Commands.c:1379 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 4 si)
        (reg:DI 100)) Commands.c:1379 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.7986 ])) Commands.c:1379 -1
     (nil))
(call_insn 48 47 49 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPML_PCR_SELECTION_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c2a360 TPML_PCR_SELECTION_Unmarshal>) [0 TPML_PCR_SELECTION_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1379 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 49 48 50 9 (set (reg:SI 101)
        (reg:SI 0 ax)) Commands.c:1379 -1
     (nil))
(insn 50 49 51 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 101)) Commands.c:1379 -1
     (nil))
(insn 51 50 52 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1380 -1
     (nil))
(jump_insn 52 51 53 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:1380 -1
     (nil)
 -> 55)
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1381 -1
     (nil))
(code_label 55 54 56 11 283 "" [2 uses])
(note 56 55 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 60 11 (set (reg:SI 90 [ D.7987 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1384 -1
     (nil))
(insn 60 57 64 11 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.7987 ])) Commands.c:1384 -1
     (nil))
(insn 64 60 65 11 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:1385 -1
     (nil))
(insn 65 64 0 11 (use (reg/i:SI 0 ax)) Commands.c:1385 -1
     (nil))

;; Function PolicyLocality_In_Unmarshal (PolicyLocality_In_Unmarshal, funcdef_no=58, decl_uid=4197, cgraph_uid=58, symbol_order=60)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1388 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1388 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1388 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1388 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1389 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1391 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1391 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1392 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7988 ])
        (mem:SI (reg/f:DI 91) [0 *handles_6(D)+0 S4 A32])) Commands.c:1392 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1392 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_8(D)->policySession+0 S4 A32])
        (reg:SI 87 [ D.7988 ])) Commands.c:1392 -1
     (nil))
(code_label 17 16 18 5 286 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1394 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1394 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1395 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7989 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1395 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1395 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1395 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:1395 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:1395 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7989 ])) Commands.c:1395 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMA_LOCALITY_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c0dca8 TPMA_LOCALITY_Unmarshal>) [0 TPMA_LOCALITY_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1395 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:1395 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:1395 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1396 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1396 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1397 -1
     (nil))
(code_label 36 35 37 8 287 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.7990 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1400 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.7990 ])) Commands.c:1400 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:1401 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:1401 -1
     (nil))

;; Function PolicyNV_In_Unmarshal (PolicyNV_In_Unmarshal, funcdef_no=59, decl_uid=4202, cgraph_uid=59, symbol_order=61)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 88.
Merging block 16 into block 14...
Merged blocks 14 and 16.
Merged 14 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1404 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1404 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1404 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1404 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1405 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1407 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) Commands.c:1407 -1
     (nil)
 -> 25)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1408 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7991 ])
        (mem:SI (reg/f:DI 95) [0 *handles_10(D)+0 S4 A32])) Commands.c:1408 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1408 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 96) [0 target_12(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.7991 ])) Commands.c:1408 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1409 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.7991 ])
        (mem:SI (plus:DI (reg/f:DI 97)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_10(D) + 4B]+0 S4 A32])) Commands.c:1409 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1409 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 98)
                (const_int 4 [0x4])) [0 target_12(D)->nvIndex+0 S4 A32])
        (reg:SI 88 [ D.7991 ])) Commands.c:1409 -1
     (nil))
(insn 21 20 22 4 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1410 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 89 [ D.7991 ])
        (mem:SI (plus:DI (reg/f:DI 99)
                (const_int 8 [0x8])) [0 MEM[(TPM_HANDLE *)handles_10(D) + 8B]+0 S4 A32])) Commands.c:1410 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1410 -1
     (nil))
(insn 24 23 25 4 (set (mem/j:SI (plus:DI (reg/f:DI 100)
                (const_int 8 [0x8])) [0 target_12(D)->policySession+0 S4 A32])
        (reg:SI 89 [ D.7991 ])) Commands.c:1410 -1
     (nil))
(code_label 25 24 26 5 290 "" [1 uses])
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1412 -1
     (nil))
(jump_insn 28 27 29 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) Commands.c:1412 -1
     (nil)
 -> 44)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1413 -1
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg/f:DI 90 [ D.7992 ])
                (plus:DI (reg/f:DI 101)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1413 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 12 [0xc]))
        (nil)))
(insn 32 31 33 6 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1413 -1
     (nil))
(insn 33 32 34 6 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1413 -1
     (nil))
(insn 34 33 35 6 (set (reg:DI 1 dx)
        (reg:DI 102)) Commands.c:1413 -1
     (nil))
(insn 35 34 36 6 (set (reg:DI 4 si)
        (reg:DI 103)) Commands.c:1413 -1
     (nil))
(insn 36 35 37 6 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.7992 ])) Commands.c:1413 -1
     (nil))
(call_insn 37 36 38 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_OPERAND_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24000 TPM2B_OPERAND_Unmarshal>) [0 TPM2B_OPERAND_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1413 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 38 37 39 6 (set (reg:SI 104)
        (reg:SI 0 ax)) Commands.c:1413 -1
     (nil))
(insn 39 38 40 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 104)) Commands.c:1413 -1
     (nil))
(insn 40 39 41 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1414 -1
     (nil))
(jump_insn 41 40 42 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) Commands.c:1414 -1
     (nil)
 -> 44)
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1415 -1
     (nil))
(code_label 44 43 45 8 291 "" [2 uses])
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1418 -1
     (nil))
(jump_insn 47 46 48 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) Commands.c:1418 -1
     (nil)
 -> 63)
(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 9 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1419 -1
     (nil))
(insn 50 49 51 9 (parallel [
            (set (reg/f:DI 91 [ D.7993 ])
                (plus:DI (reg/f:DI 105)
                    (const_int 142 [0x8e])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1419 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 142 [0x8e]))
        (nil)))
(insn 51 50 52 9 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1419 -1
     (nil))
(insn 52 51 53 9 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1419 -1
     (nil))
(insn 53 52 54 9 (set (reg:DI 1 dx)
        (reg:DI 106)) Commands.c:1419 -1
     (nil))
(insn 54 53 55 9 (set (reg:DI 4 si)
        (reg:DI 107)) Commands.c:1419 -1
     (nil))
(insn 55 54 56 9 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.7993 ])) Commands.c:1419 -1
     (nil))
(call_insn 56 55 57 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT16_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1798 UINT16_Unmarshal>) [0 UINT16_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1419 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 57 56 58 9 (set (reg:SI 108)
        (reg:SI 0 ax)) Commands.c:1419 -1
     (nil))
(insn 58 57 59 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 108)) Commands.c:1419 -1
     (nil))
(insn 59 58 60 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1420 -1
     (nil))
(jump_insn 60 59 61 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) Commands.c:1420 -1
     (nil)
 -> 63)
(note 61 60 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1421 -1
     (nil))
(code_label 63 62 64 11 292 "" [2 uses])
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1424 -1
     (nil))
(jump_insn 66 65 67 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) Commands.c:1424 -1
     (nil)
 -> 82)
(note 67 66 68 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 12 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1425 -1
     (nil))
(insn 69 68 70 12 (parallel [
            (set (reg/f:DI 92 [ D.7994 ])
                (plus:DI (reg/f:DI 109)
                    (const_int 144 [0x90])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1425 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 144 [0x90]))
        (nil)))
(insn 70 69 71 12 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1425 -1
     (nil))
(insn 71 70 72 12 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1425 -1
     (nil))
(insn 72 71 73 12 (set (reg:DI 1 dx)
        (reg:DI 110)) Commands.c:1425 -1
     (nil))
(insn 73 72 74 12 (set (reg:DI 4 si)
        (reg:DI 111)) Commands.c:1425 -1
     (nil))
(insn 74 73 75 12 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.7994 ])) Commands.c:1425 -1
     (nil))
(call_insn 75 74 76 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM_EO_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c0d360 TPM_EO_Unmarshal>) [0 TPM_EO_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1425 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 76 75 77 12 (set (reg:SI 112)
        (reg:SI 0 ax)) Commands.c:1425 -1
     (nil))
(insn 77 76 78 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 112)) Commands.c:1425 -1
     (nil))
(insn 78 77 79 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1426 -1
     (nil))
(jump_insn 79 78 80 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) Commands.c:1426 -1
     (nil)
 -> 82)
(note 80 79 81 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1427 -1
     (nil))
(code_label 82 81 83 14 293 "" [2 uses])
(note 83 82 84 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 87 14 (set (reg:SI 93 [ D.7995 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1430 -1
     (nil))
(insn 87 84 91 14 (set (reg:SI 94 [ <retval> ])
        (reg:SI 93 [ D.7995 ])) Commands.c:1430 -1
     (nil))
(insn 91 87 92 14 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) Commands.c:1431 -1
     (nil))
(insn 92 91 0 14 (use (reg/i:SI 0 ax)) Commands.c:1431 -1
     (nil))

;; Function PolicyAuthorizeNV_In_Unmarshal (PolicyAuthorizeNV_In_Unmarshal, funcdef_no=60, decl_uid=4207, cgraph_uid=60, symbol_order=62)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 31.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1434 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1434 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1434 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1434 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1435 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1439 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) Commands.c:1439 -1
     (nil)
 -> 25)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1440 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7996 ])
        (mem:SI (reg/f:DI 92) [0 *handles_8(D)+0 S4 A32])) Commands.c:1440 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1440 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_10(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.7996 ])) Commands.c:1440 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1441 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.7996 ])
        (mem:SI (plus:DI (reg/f:DI 94)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_8(D) + 4B]+0 S4 A32])) Commands.c:1441 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1441 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 95)
                (const_int 4 [0x4])) [0 target_10(D)->nvIndex+0 S4 A32])
        (reg:SI 88 [ D.7996 ])) Commands.c:1441 -1
     (nil))
(insn 21 20 22 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1442 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 89 [ D.7996 ])
        (mem:SI (plus:DI (reg/f:DI 96)
                (const_int 8 [0x8])) [0 MEM[(TPM_HANDLE *)handles_8(D) + 8B]+0 S4 A32])) Commands.c:1442 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1442 -1
     (nil))
(insn 24 23 25 4 (set (mem/j:SI (plus:DI (reg/f:DI 97)
                (const_int 8 [0x8])) [0 target_10(D)->policySession+0 S4 A32])
        (reg:SI 89 [ D.7996 ])) Commands.c:1442 -1
     (nil))
(code_label 25 24 26 5 296 "" [1 uses])
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 30 5 (set (reg:SI 90 [ D.7997 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1444 -1
     (nil))
(insn 30 27 34 5 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.7997 ])) Commands.c:1444 -1
     (nil))
(insn 34 30 35 5 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:1445 -1
     (nil))
(insn 35 34 0 5 (use (reg/i:SI 0 ax)) Commands.c:1445 -1
     (nil))

;; Function PolicyCounterTimer_In_Unmarshal (PolicyCounterTimer_In_Unmarshal, funcdef_no=61, decl_uid=4212, cgraph_uid=61, symbol_order=63)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 80.
Merging block 16 into block 14...
Merged blocks 14 and 16.
Merged 14 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1448 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1448 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1448 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1448 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1449 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1451 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1451 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1452 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.7998 ])
        (mem:SI (reg/f:DI 93) [0 *handles_10(D)+0 S4 A32])) Commands.c:1452 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1452 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 94) [0 target_12(D)->policySession+0 S4 A32])
        (reg:SI 87 [ D.7998 ])) Commands.c:1452 -1
     (nil))
(code_label 17 16 18 5 299 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1454 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1454 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1455 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.7999 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1455 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1455 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1455 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 96)) Commands.c:1455 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 97)) Commands.c:1455 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.7999 ])) Commands.c:1455 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_OPERAND_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24000 TPM2B_OPERAND_Unmarshal>) [0 TPM2B_OPERAND_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1455 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 98)
        (reg:SI 0 ax)) Commands.c:1455 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 98)) Commands.c:1455 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1456 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1456 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1457 -1
     (nil))
(code_label 36 35 37 8 300 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1460 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:1460 -1
     (nil)
 -> 55)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1461 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.8000 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 134 [0x86])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1461 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 134 [0x86]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1461 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1461 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 1 dx)
        (reg:DI 100)) Commands.c:1461 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 4 si)
        (reg:DI 101)) Commands.c:1461 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.8000 ])) Commands.c:1461 -1
     (nil))
(call_insn 48 47 49 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT16_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1798 UINT16_Unmarshal>) [0 UINT16_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1461 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 49 48 50 9 (set (reg:SI 102)
        (reg:SI 0 ax)) Commands.c:1461 -1
     (nil))
(insn 50 49 51 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 102)) Commands.c:1461 -1
     (nil))
(insn 51 50 52 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1462 -1
     (nil))
(jump_insn 52 51 53 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:1462 -1
     (nil)
 -> 55)
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1463 -1
     (nil))
(code_label 55 54 56 11 301 "" [2 uses])
(note 56 55 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1466 -1
     (nil))
(jump_insn 58 57 59 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) Commands.c:1466 -1
     (nil)
 -> 74)
(note 59 58 60 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 12 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1467 -1
     (nil))
(insn 61 60 62 12 (parallel [
            (set (reg/f:DI 90 [ D.8001 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 136 [0x88])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1467 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 136 [0x88]))
        (nil)))
(insn 62 61 63 12 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1467 -1
     (nil))
(insn 63 62 64 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1467 -1
     (nil))
(insn 64 63 65 12 (set (reg:DI 1 dx)
        (reg:DI 104)) Commands.c:1467 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 4 si)
        (reg:DI 105)) Commands.c:1467 -1
     (nil))
(insn 66 65 67 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.8001 ])) Commands.c:1467 -1
     (nil))
(call_insn 67 66 68 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM_EO_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c0d360 TPM_EO_Unmarshal>) [0 TPM_EO_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1467 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 68 67 69 12 (set (reg:SI 106)
        (reg:SI 0 ax)) Commands.c:1467 -1
     (nil))
(insn 69 68 70 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 106)) Commands.c:1467 -1
     (nil))
(insn 70 69 71 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1468 -1
     (nil))
(jump_insn 71 70 72 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) Commands.c:1468 -1
     (nil)
 -> 74)
(note 72 71 73 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1469 -1
     (nil))
(code_label 74 73 75 14 302 "" [2 uses])
(note 75 74 76 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 79 14 (set (reg:SI 91 [ D.8002 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1472 -1
     (nil))
(insn 79 76 83 14 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.8002 ])) Commands.c:1472 -1
     (nil))
(insn 83 79 84 14 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Commands.c:1473 -1
     (nil))
(insn 84 83 0 14 (use (reg/i:SI 0 ax)) Commands.c:1473 -1
     (nil))

;; Function PolicyCommandCode_In_Unmarshal (PolicyCommandCode_In_Unmarshal, funcdef_no=62, decl_uid=4217, cgraph_uid=62, symbol_order=64)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1476 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1476 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1476 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1476 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1477 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1479 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1479 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1480 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8003 ])
        (mem:SI (reg/f:DI 91) [0 *handles_6(D)+0 S4 A32])) Commands.c:1480 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1480 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_8(D)->policySession+0 S4 A32])
        (reg:SI 87 [ D.8003 ])) Commands.c:1480 -1
     (nil))
(code_label 17 16 18 5 305 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1482 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1482 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1483 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8004 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1483 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1483 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1483 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:1483 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:1483 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8004 ])) Commands.c:1483 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM_CC_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c0d0d8 TPM_CC_Unmarshal>) [0 TPM_CC_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1483 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:1483 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:1483 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1484 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1484 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1485 -1
     (nil))
(code_label 36 35 37 8 306 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.8005 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1488 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.8005 ])) Commands.c:1488 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:1489 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:1489 -1
     (nil))

;; Function PolicyPhysicalPresence_In_Unmarshal (PolicyPhysicalPresence_In_Unmarshal, funcdef_no=63, decl_uid=4222, cgraph_uid=63, symbol_order=65)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 23.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1492 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1492 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1492 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1492 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1493 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1497 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1497 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1498 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8006 ])
        (mem:SI (reg/f:DI 90) [0 *handles_8(D)+0 S4 A32])) Commands.c:1498 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1498 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 91) [0 target_10(D)->policySession+0 S4 A32])
        (reg:SI 87 [ D.8006 ])) Commands.c:1498 -1
     (nil))
(code_label 17 16 18 5 309 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 22 5 (set (reg:SI 88 [ D.8007 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1500 -1
     (nil))
(insn 22 19 26 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.8007 ])) Commands.c:1500 -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:1501 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) Commands.c:1501 -1
     (nil))

;; Function PolicyCpHash_In_Unmarshal (PolicyCpHash_In_Unmarshal, funcdef_no=64, decl_uid=4227, cgraph_uid=64, symbol_order=66)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1504 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1504 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1504 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1504 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1505 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1507 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1507 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1508 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8008 ])
        (mem:SI (reg/f:DI 91) [0 *handles_6(D)+0 S4 A32])) Commands.c:1508 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1508 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_8(D)->policySession+0 S4 A32])
        (reg:SI 87 [ D.8008 ])) Commands.c:1508 -1
     (nil))
(code_label 17 16 18 5 312 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1510 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1510 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1511 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8009 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1511 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1511 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1511 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:1511 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:1511 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8009 ])) Commands.c:1511 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DIGEST_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cbd0 TPM2B_DIGEST_Unmarshal>) [0 TPM2B_DIGEST_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1511 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:1511 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:1511 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1512 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1512 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1513 -1
     (nil))
(code_label 36 35 37 8 313 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.8010 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1516 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.8010 ])) Commands.c:1516 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:1517 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:1517 -1
     (nil))

;; Function PolicyNameHash_In_Unmarshal (PolicyNameHash_In_Unmarshal, funcdef_no=65, decl_uid=4232, cgraph_uid=65, symbol_order=67)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1520 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1520 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1520 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1520 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1521 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1523 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1523 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1524 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8011 ])
        (mem:SI (reg/f:DI 91) [0 *handles_6(D)+0 S4 A32])) Commands.c:1524 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1524 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_8(D)->policySession+0 S4 A32])
        (reg:SI 87 [ D.8011 ])) Commands.c:1524 -1
     (nil))
(code_label 17 16 18 5 316 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1526 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1526 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1527 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8012 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1527 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1527 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1527 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:1527 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:1527 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8012 ])) Commands.c:1527 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DIGEST_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cbd0 TPM2B_DIGEST_Unmarshal>) [0 TPM2B_DIGEST_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1527 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:1527 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:1527 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1528 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1528 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1529 -1
     (nil))
(code_label 36 35 37 8 317 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.8013 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1532 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.8013 ])) Commands.c:1532 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:1533 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:1533 -1
     (nil))

;; Function PolicyDuplicationSelect_In_Unmarshal (PolicyDuplicationSelect_In_Unmarshal, funcdef_no=66, decl_uid=4237, cgraph_uid=66, symbol_order=68)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 80.
Merging block 16 into block 14...
Merged blocks 14 and 16.
Merged 14 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1536 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1536 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1536 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1536 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1537 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1539 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1539 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1540 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8014 ])
        (mem:SI (reg/f:DI 93) [0 *handles_10(D)+0 S4 A32])) Commands.c:1540 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1540 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 94) [0 target_12(D)->policySession+0 S4 A32])
        (reg:SI 87 [ D.8014 ])) Commands.c:1540 -1
     (nil))
(code_label 17 16 18 5 320 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1542 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1542 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1543 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8015 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1543 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1543 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1543 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 96)) Commands.c:1543 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 97)) Commands.c:1543 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8015 ])) Commands.c:1543 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_NAME_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24510 TPM2B_NAME_Unmarshal>) [0 TPM2B_NAME_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1543 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 98)
        (reg:SI 0 ax)) Commands.c:1543 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 98)) Commands.c:1543 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1544 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1544 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1545 -1
     (nil))
(code_label 36 35 37 8 321 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1548 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:1548 -1
     (nil)
 -> 55)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1549 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.8015 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 138 [0x8a])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1549 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 138 [0x8a]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1549 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1549 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 1 dx)
        (reg:DI 100)) Commands.c:1549 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 4 si)
        (reg:DI 101)) Commands.c:1549 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.8015 ])) Commands.c:1549 -1
     (nil))
(call_insn 48 47 49 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_NAME_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24510 TPM2B_NAME_Unmarshal>) [0 TPM2B_NAME_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1549 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 49 48 50 9 (set (reg:SI 102)
        (reg:SI 0 ax)) Commands.c:1549 -1
     (nil))
(insn 50 49 51 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 102)) Commands.c:1549 -1
     (nil))
(insn 51 50 52 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1550 -1
     (nil))
(jump_insn 52 51 53 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:1550 -1
     (nil)
 -> 55)
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1551 -1
     (nil))
(code_label 55 54 56 11 322 "" [2 uses])
(note 56 55 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1554 -1
     (nil))
(jump_insn 58 57 59 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) Commands.c:1554 -1
     (nil)
 -> 74)
(note 59 58 60 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 12 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1555 -1
     (nil))
(insn 61 60 62 12 (parallel [
            (set (reg/f:DI 90 [ D.8016 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 272 [0x110])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1555 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 272 [0x110]))
        (nil)))
(insn 62 61 63 12 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1555 -1
     (nil))
(insn 63 62 64 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1555 -1
     (nil))
(insn 64 63 65 12 (set (reg:DI 1 dx)
        (reg:DI 104)) Commands.c:1555 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 4 si)
        (reg:DI 105)) Commands.c:1555 -1
     (nil))
(insn 66 65 67 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.8016 ])) Commands.c:1555 -1
     (nil))
(call_insn 67 66 68 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_YES_NO_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c0de58 TPMI_YES_NO_Unmarshal>) [0 TPMI_YES_NO_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1555 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 68 67 69 12 (set (reg:SI 106)
        (reg:SI 0 ax)) Commands.c:1555 -1
     (nil))
(insn 69 68 70 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 106)) Commands.c:1555 -1
     (nil))
(insn 70 69 71 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1556 -1
     (nil))
(jump_insn 71 70 72 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) Commands.c:1556 -1
     (nil)
 -> 74)
(note 72 71 73 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1557 -1
     (nil))
(code_label 74 73 75 14 323 "" [2 uses])
(note 75 74 76 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 79 14 (set (reg:SI 91 [ D.8017 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1560 -1
     (nil))
(insn 79 76 83 14 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.8017 ])) Commands.c:1560 -1
     (nil))
(insn 83 79 84 14 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Commands.c:1561 -1
     (nil))
(insn 84 83 0 14 (use (reg/i:SI 0 ax)) Commands.c:1561 -1
     (nil))

;; Function PolicyAuthorize_In_Unmarshal (PolicyAuthorize_In_Unmarshal, funcdef_no=67, decl_uid=4242, cgraph_uid=67, symbol_order=69)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Removing jump 99.
Merging block 19 into block 17...
Merged blocks 17 and 19.
Merged 17 and 19 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1564 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1564 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1564 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1564 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1565 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1567 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1567 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1568 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8018 ])
        (mem:SI (reg/f:DI 94) [0 *handles_12(D)+0 S4 A32])) Commands.c:1568 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1568 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 95) [0 target_14(D)->policySession+0 S4 A32])
        (reg:SI 87 [ D.8018 ])) Commands.c:1568 -1
     (nil))
(code_label 17 16 18 5 326 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1570 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1570 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1571 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8019 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1571 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1571 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1571 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 97)) Commands.c:1571 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 98)) Commands.c:1571 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8019 ])) Commands.c:1571 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DIGEST_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cbd0 TPM2B_DIGEST_Unmarshal>) [0 TPM2B_DIGEST_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1571 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 99)
        (reg:SI 0 ax)) Commands.c:1571 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 99)) Commands.c:1571 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1572 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1572 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1573 -1
     (nil))
(code_label 36 35 37 8 327 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1576 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:1576 -1
     (nil)
 -> 55)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1577 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.8020 ])
                (plus:DI (reg/f:DI 100)
                    (const_int 134 [0x86])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1577 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 134 [0x86]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1577 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1577 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 1 dx)
        (reg:DI 101)) Commands.c:1577 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 4 si)
        (reg:DI 102)) Commands.c:1577 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.8020 ])) Commands.c:1577 -1
     (nil))
(call_insn 48 47 49 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_NONCE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cd80 TPM2B_NONCE_Unmarshal>) [0 TPM2B_NONCE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1577 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 49 48 50 9 (set (reg:SI 103)
        (reg:SI 0 ax)) Commands.c:1577 -1
     (nil))
(insn 50 49 51 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 103)) Commands.c:1577 -1
     (nil))
(insn 51 50 52 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1578 -1
     (nil))
(jump_insn 52 51 53 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:1578 -1
     (nil)
 -> 55)
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1579 -1
     (nil))
(code_label 55 54 56 11 328 "" [2 uses])
(note 56 55 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1582 -1
     (nil))
(jump_insn 58 57 59 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) Commands.c:1582 -1
     (nil)
 -> 74)
(note 59 58 60 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 12 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1583 -1
     (nil))
(insn 61 60 62 12 (parallel [
            (set (reg/f:DI 90 [ D.8021 ])
                (plus:DI (reg/f:DI 104)
                    (const_int 264 [0x108])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1583 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 264 [0x108]))
        (nil)))
(insn 62 61 63 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1583 -1
     (nil))
(insn 63 62 64 12 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1583 -1
     (nil))
(insn 64 63 65 12 (set (reg:DI 1 dx)
        (reg:DI 105)) Commands.c:1583 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 4 si)
        (reg:DI 106)) Commands.c:1583 -1
     (nil))
(insn 66 65 67 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.8021 ])) Commands.c:1583 -1
     (nil))
(call_insn 67 66 68 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_NAME_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24510 TPM2B_NAME_Unmarshal>) [0 TPM2B_NAME_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1583 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 68 67 69 12 (set (reg:SI 107)
        (reg:SI 0 ax)) Commands.c:1583 -1
     (nil))
(insn 69 68 70 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 107)) Commands.c:1583 -1
     (nil))
(insn 70 69 71 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1584 -1
     (nil))
(jump_insn 71 70 72 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) Commands.c:1584 -1
     (nil)
 -> 74)
(note 72 71 73 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1585 -1
     (nil))
(code_label 74 73 75 14 329 "" [2 uses])
(note 75 74 76 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1588 -1
     (nil))
(jump_insn 77 76 78 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) Commands.c:1588 -1
     (nil)
 -> 93)
(note 78 77 79 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 15 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1589 -1
     (nil))
(insn 80 79 81 15 (parallel [
            (set (reg/f:DI 91 [ D.8022 ])
                (plus:DI (reg/f:DI 108)
                    (const_int 400 [0x190])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1589 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 400 [0x190]))
        (nil)))
(insn 81 80 82 15 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1589 -1
     (nil))
(insn 82 81 83 15 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1589 -1
     (nil))
(insn 83 82 84 15 (set (reg:DI 1 dx)
        (reg:DI 109)) Commands.c:1589 -1
     (nil))
(insn 84 83 85 15 (set (reg:DI 4 si)
        (reg:DI 110)) Commands.c:1589 -1
     (nil))
(insn 85 84 86 15 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.8022 ])) Commands.c:1589 -1
     (nil))
(call_insn 86 85 87 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_TK_VERIFIED_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24798 TPMT_TK_VERIFIED_Unmarshal>) [0 TPMT_TK_VERIFIED_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1589 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 87 86 88 15 (set (reg:SI 111)
        (reg:SI 0 ax)) Commands.c:1589 -1
     (nil))
(insn 88 87 89 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 111)) Commands.c:1589 -1
     (nil))
(insn 89 88 90 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1590 -1
     (nil))
(jump_insn 90 89 91 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) Commands.c:1590 -1
     (nil)
 -> 93)
(note 91 90 92 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 1088 [0x440])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1591 -1
     (nil))
(code_label 93 92 94 17 330 "" [2 uses])
(note 94 93 95 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 98 17 (set (reg:SI 92 [ D.8023 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1594 -1
     (nil))
(insn 98 95 102 17 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.8023 ])) Commands.c:1594 -1
     (nil))
(insn 102 98 103 17 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) Commands.c:1595 -1
     (nil))
(insn 103 102 0 17 (use (reg/i:SI 0 ax)) Commands.c:1595 -1
     (nil))

;; Function PolicyAuthValue_In_Unmarshal (PolicyAuthValue_In_Unmarshal, funcdef_no=68, decl_uid=4247, cgraph_uid=68, symbol_order=70)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 23.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1598 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1598 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1598 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1598 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1599 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1603 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1603 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1604 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8024 ])
        (mem:SI (reg/f:DI 90) [0 *handles_8(D)+0 S4 A32])) Commands.c:1604 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1604 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 91) [0 target_10(D)->policySession+0 S4 A32])
        (reg:SI 87 [ D.8024 ])) Commands.c:1604 -1
     (nil))
(code_label 17 16 18 5 333 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 22 5 (set (reg:SI 88 [ D.8025 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1606 -1
     (nil))
(insn 22 19 26 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.8025 ])) Commands.c:1606 -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:1607 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) Commands.c:1607 -1
     (nil))

;; Function PolicyPassword_In_Unmarshal (PolicyPassword_In_Unmarshal, funcdef_no=69, decl_uid=4252, cgraph_uid=69, symbol_order=71)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 23.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1610 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1610 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1610 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1610 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1611 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1615 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1615 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1616 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8026 ])
        (mem:SI (reg/f:DI 90) [0 *handles_8(D)+0 S4 A32])) Commands.c:1616 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1616 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 91) [0 target_10(D)->policySession+0 S4 A32])
        (reg:SI 87 [ D.8026 ])) Commands.c:1616 -1
     (nil))
(code_label 17 16 18 5 336 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 22 5 (set (reg:SI 88 [ D.8027 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1618 -1
     (nil))
(insn 22 19 26 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.8027 ])) Commands.c:1618 -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:1619 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) Commands.c:1619 -1
     (nil))

;; Function PolicyGetDigest_In_Unmarshal (PolicyGetDigest_In_Unmarshal, funcdef_no=70, decl_uid=4257, cgraph_uid=70, symbol_order=72)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 23.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1622 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1622 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1622 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1622 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1623 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1627 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1627 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1628 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8028 ])
        (mem:SI (reg/f:DI 90) [0 *handles_8(D)+0 S4 A32])) Commands.c:1628 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1628 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 91) [0 target_10(D)->policySession+0 S4 A32])
        (reg:SI 87 [ D.8028 ])) Commands.c:1628 -1
     (nil))
(code_label 17 16 18 5 339 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 22 5 (set (reg:SI 88 [ D.8029 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1630 -1
     (nil))
(insn 22 19 26 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.8029 ])) Commands.c:1630 -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:1631 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) Commands.c:1631 -1
     (nil))

;; Function PolicyNvWritten_In_Unmarshal (PolicyNvWritten_In_Unmarshal, funcdef_no=71, decl_uid=4267, cgraph_uid=71, symbol_order=73)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1634 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1634 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1634 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1634 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1635 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1637 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1637 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1638 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8030 ])
        (mem:SI (reg/f:DI 91) [0 *handles_6(D)+0 S4 A32])) Commands.c:1638 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1638 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_8(D)->policySession+0 S4 A32])
        (reg:SI 87 [ D.8030 ])) Commands.c:1638 -1
     (nil))
(code_label 17 16 18 5 342 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1640 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1640 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1641 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8031 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1641 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1641 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1641 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:1641 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:1641 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8031 ])) Commands.c:1641 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_YES_NO_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c0de58 TPMI_YES_NO_Unmarshal>) [0 TPMI_YES_NO_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1641 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:1641 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:1641 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1642 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1642 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1643 -1
     (nil))
(code_label 36 35 37 8 343 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.8032 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1646 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.8032 ])) Commands.c:1646 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:1647 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:1647 -1
     (nil))

;; Function PolicyTemplate_In_Unmarshal (PolicyTemplate_In_Unmarshal, funcdef_no=72, decl_uid=4272, cgraph_uid=72, symbol_order=74)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1650 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1650 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1650 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1650 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1651 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1655 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1655 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1656 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8033 ])
        (mem:SI (reg/f:DI 91) [0 *handles_10(D)+0 S4 A32])) Commands.c:1656 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1656 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_12(D)->policySession+0 S4 A32])
        (reg:SI 87 [ D.8033 ])) Commands.c:1656 -1
     (nil))
(code_label 17 16 18 5 346 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1658 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1658 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1659 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8034 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1659 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1659 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1659 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:1659 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:1659 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8034 ])) Commands.c:1659 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DIGEST_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cbd0 TPM2B_DIGEST_Unmarshal>) [0 TPM2B_DIGEST_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1659 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:1659 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:1659 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1660 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1660 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1661 -1
     (nil))
(code_label 36 35 37 8 347 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.8035 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1664 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.8035 ])) Commands.c:1664 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:1665 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:1665 -1
     (nil))

;; Function CreatePrimary_In_Unmarshal (CreatePrimary_In_Unmarshal, funcdef_no=73, decl_uid=4277, cgraph_uid=73, symbol_order=75)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Removing jump 100.
Merging block 19 into block 17...
Merged blocks 17 and 19.
Merged 17 and 19 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1668 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1668 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1668 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1668 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1669 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1671 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1671 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1672 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8036 ])
        (mem:SI (reg/f:DI 94) [0 *handles_12(D)+0 S4 A32])) Commands.c:1672 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1672 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 95) [0 target_14(D)->primaryHandle+0 S4 A32])
        (reg:SI 87 [ D.8036 ])) Commands.c:1672 -1
     (nil))
(code_label 17 16 18 5 350 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1674 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1674 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1675 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8037 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1675 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1675 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1675 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 97)) Commands.c:1675 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 98)) Commands.c:1675 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8037 ])) Commands.c:1675 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_SENSITIVE_CREATE_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c39000 TPM2B_SENSITIVE_CREATE_Unmarshal>) [0 TPM2B_SENSITIVE_CREATE_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1675 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 99)
        (reg:SI 0 ax)) Commands.c:1675 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 99)) Commands.c:1675 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1676 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1676 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1677 -1
     (nil))
(code_label 36 35 37 8 351 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1680 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:1680 -1
     (nil)
 -> 56)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1681 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.8038 ])
                (plus:DI (reg/f:DI 100)
                    (const_int 268 [0x10c])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1681 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 268 [0x10c]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1681 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1681 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 2 cx)
        (const_int 0 [0])) Commands.c:1681 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 1 dx)
        (reg:DI 101)) Commands.c:1681 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 4 si)
        (reg:DI 102)) Commands.c:1681 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.8038 ])) Commands.c:1681 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_PUBLIC_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c51798 TPM2B_PUBLIC_Unmarshal>) [0 TPM2B_PUBLIC_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1681 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 50 49 51 9 (set (reg:SI 103)
        (reg:SI 0 ax)) Commands.c:1681 -1
     (nil))
(insn 51 50 52 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 103)) Commands.c:1681 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1682 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:1682 -1
     (nil)
 -> 56)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1683 -1
     (nil))
(code_label 56 55 57 11 352 "" [2 uses])
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1686 -1
     (nil))
(jump_insn 59 58 60 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:1686 -1
     (nil)
 -> 75)
(note 60 59 61 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 12 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1687 -1
     (nil))
(insn 62 61 63 12 (parallel [
            (set (reg/f:DI 90 [ D.8039 ])
                (plus:DI (reg/f:DI 104)
                    (const_int 692 [0x2b4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1687 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 692 [0x2b4]))
        (nil)))
(insn 63 62 64 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1687 -1
     (nil))
(insn 64 63 65 12 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1687 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 1 dx)
        (reg:DI 105)) Commands.c:1687 -1
     (nil))
(insn 66 65 67 12 (set (reg:DI 4 si)
        (reg:DI 106)) Commands.c:1687 -1
     (nil))
(insn 67 66 68 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.8039 ])) Commands.c:1687 -1
     (nil))
(call_insn 68 67 69 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DATA_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cca8 TPM2B_DATA_Unmarshal>) [0 TPM2B_DATA_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1687 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 69 68 70 12 (set (reg:SI 107)
        (reg:SI 0 ax)) Commands.c:1687 -1
     (nil))
(insn 70 69 71 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 107)) Commands.c:1687 -1
     (nil))
(insn 71 70 72 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1688 -1
     (nil))
(jump_insn 72 71 73 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) Commands.c:1688 -1
     (nil)
 -> 75)
(note 73 72 74 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1689 -1
     (nil))
(code_label 75 74 76 14 353 "" [2 uses])
(note 76 75 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1692 -1
     (nil))
(jump_insn 78 77 79 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) Commands.c:1692 -1
     (nil)
 -> 94)
(note 79 78 80 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 15 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1693 -1
     (nil))
(insn 81 80 82 15 (parallel [
            (set (reg/f:DI 91 [ D.8040 ])
                (plus:DI (reg/f:DI 108)
                    (const_int 824 [0x338])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1693 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 824 [0x338]))
        (nil)))
(insn 82 81 83 15 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1693 -1
     (nil))
(insn 83 82 84 15 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1693 -1
     (nil))
(insn 84 83 85 15 (set (reg:DI 1 dx)
        (reg:DI 109)) Commands.c:1693 -1
     (nil))
(insn 85 84 86 15 (set (reg:DI 4 si)
        (reg:DI 110)) Commands.c:1693 -1
     (nil))
(insn 86 85 87 15 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.8040 ])) Commands.c:1693 -1
     (nil))
(call_insn 87 86 88 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPML_PCR_SELECTION_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c2a360 TPML_PCR_SELECTION_Unmarshal>) [0 TPML_PCR_SELECTION_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1693 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 88 87 89 15 (set (reg:SI 111)
        (reg:SI 0 ax)) Commands.c:1693 -1
     (nil))
(insn 89 88 90 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 111)) Commands.c:1693 -1
     (nil))
(insn 90 89 91 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1694 -1
     (nil))
(jump_insn 91 90 92 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) Commands.c:1694 -1
     (nil)
 -> 94)
(note 92 91 93 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 1088 [0x440])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1695 -1
     (nil))
(code_label 94 93 95 17 354 "" [2 uses])
(note 95 94 96 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 99 17 (set (reg:SI 92 [ D.8041 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1698 -1
     (nil))
(insn 99 96 103 17 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.8041 ])) Commands.c:1698 -1
     (nil))
(insn 103 99 104 17 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) Commands.c:1699 -1
     (nil))
(insn 104 103 0 17 (use (reg/i:SI 0 ax)) Commands.c:1699 -1
     (nil))

;; Function HierarchyControl_In_Unmarshal (HierarchyControl_In_Unmarshal, funcdef_no=74, decl_uid=4287, cgraph_uid=74, symbol_order=76)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 62.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1702 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1702 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1702 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1702 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1703 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1705 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1705 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1706 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8042 ])
        (mem:SI (reg/f:DI 92) [0 *handles_8(D)+0 S4 A32])) Commands.c:1706 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1706 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_10(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.8042 ])) Commands.c:1706 -1
     (nil))
(code_label 17 16 18 5 357 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1708 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) Commands.c:1708 -1
     (nil)
 -> 37)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1709 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8043 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1709 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1709 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1709 -1
     (nil))
(insn 26 25 27 6 (set (reg:SI 2 cx)
        (const_int 0 [0])) Commands.c:1709 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 1 dx)
        (reg:DI 95)) Commands.c:1709 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 4 si)
        (reg:DI 96)) Commands.c:1709 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8043 ])) Commands.c:1709 -1
     (nil))
(call_insn 30 29 31 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_RH_ENABLES_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c13870 TPMI_RH_ENABLES_Unmarshal>) [0 TPMI_RH_ENABLES_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1709 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 31 30 32 6 (set (reg:SI 97)
        (reg:SI 0 ax)) Commands.c:1709 -1
     (nil))
(insn 32 31 33 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 97)) Commands.c:1709 -1
     (nil))
(insn 33 32 34 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1710 -1
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) Commands.c:1710 -1
     (nil)
 -> 37)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1711 -1
     (nil))
(code_label 37 36 38 8 358 "" [2 uses])
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1714 -1
     (nil))
(jump_insn 40 39 41 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:1714 -1
     (nil)
 -> 56)
(note 41 40 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 9 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1715 -1
     (nil))
(insn 43 42 44 9 (parallel [
            (set (reg/f:DI 89 [ D.8044 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1715 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 44 43 45 9 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1715 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1715 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 1 dx)
        (reg:DI 99)) Commands.c:1715 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 4 si)
        (reg:DI 100)) Commands.c:1715 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.8044 ])) Commands.c:1715 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_YES_NO_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c0de58 TPMI_YES_NO_Unmarshal>) [0 TPMI_YES_NO_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1715 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 50 49 51 9 (set (reg:SI 101)
        (reg:SI 0 ax)) Commands.c:1715 -1
     (nil))
(insn 51 50 52 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 101)) Commands.c:1715 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1716 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:1716 -1
     (nil)
 -> 56)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1717 -1
     (nil))
(code_label 56 55 57 11 359 "" [2 uses])
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 61 11 (set (reg:SI 90 [ D.8045 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1720 -1
     (nil))
(insn 61 58 65 11 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.8045 ])) Commands.c:1720 -1
     (nil))
(insn 65 61 66 11 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:1721 -1
     (nil))
(insn 66 65 0 11 (use (reg/i:SI 0 ax)) Commands.c:1721 -1
     (nil))

;; Function SetPrimaryPolicy_In_Unmarshal (SetPrimaryPolicy_In_Unmarshal, funcdef_no=75, decl_uid=4292, cgraph_uid=75, symbol_order=77)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 62.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1724 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1724 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1724 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1724 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1725 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1727 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1727 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1728 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8046 ])
        (mem:SI (reg/f:DI 92) [0 *handles_8(D)+0 S4 A32])) Commands.c:1728 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1728 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_10(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.8046 ])) Commands.c:1728 -1
     (nil))
(code_label 17 16 18 5 362 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1730 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1730 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1731 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8047 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1731 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1731 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1731 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 95)) Commands.c:1731 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 96)) Commands.c:1731 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8047 ])) Commands.c:1731 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DIGEST_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cbd0 TPM2B_DIGEST_Unmarshal>) [0 TPM2B_DIGEST_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1731 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 97)
        (reg:SI 0 ax)) Commands.c:1731 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 97)) Commands.c:1731 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1732 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1732 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1733 -1
     (nil))
(code_label 36 35 37 8 363 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1736 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:1736 -1
     (nil)
 -> 56)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1737 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.8048 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 134 [0x86])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1737 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 134 [0x86]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1737 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1737 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:1737 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 1 dx)
        (reg:DI 99)) Commands.c:1737 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 4 si)
        (reg:DI 100)) Commands.c:1737 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.8048 ])) Commands.c:1737 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_ALG_HASH_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1c0d8 TPMI_ALG_HASH_Unmarshal>) [0 TPMI_ALG_HASH_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1737 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 50 49 51 9 (set (reg:SI 101)
        (reg:SI 0 ax)) Commands.c:1737 -1
     (nil))
(insn 51 50 52 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 101)) Commands.c:1737 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1738 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) Commands.c:1738 -1
     (nil)
 -> 56)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1739 -1
     (nil))
(code_label 56 55 57 11 364 "" [2 uses])
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 61 11 (set (reg:SI 90 [ D.8049 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1742 -1
     (nil))
(insn 61 58 65 11 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.8049 ])) Commands.c:1742 -1
     (nil))
(insn 65 61 66 11 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:1743 -1
     (nil))
(insn 66 65 0 11 (use (reg/i:SI 0 ax)) Commands.c:1743 -1
     (nil))

;; Function ChangePPS_In_Unmarshal (ChangePPS_In_Unmarshal, funcdef_no=76, decl_uid=4297, cgraph_uid=76, symbol_order=78)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 23.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1746 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1746 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1746 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1746 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1747 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1751 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1751 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1752 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8050 ])
        (mem:SI (reg/f:DI 90) [0 *handles_8(D)+0 S4 A32])) Commands.c:1752 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1752 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 91) [0 target_10(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.8050 ])) Commands.c:1752 -1
     (nil))
(code_label 17 16 18 5 367 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 22 5 (set (reg:SI 88 [ D.8051 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1754 -1
     (nil))
(insn 22 19 26 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.8051 ])) Commands.c:1754 -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:1755 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) Commands.c:1755 -1
     (nil))

;; Function ChangeEPS_In_Unmarshal (ChangeEPS_In_Unmarshal, funcdef_no=77, decl_uid=4302, cgraph_uid=77, symbol_order=79)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 23.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1758 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1758 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1758 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1758 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1759 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1763 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1763 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1764 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8052 ])
        (mem:SI (reg/f:DI 90) [0 *handles_8(D)+0 S4 A32])) Commands.c:1764 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1764 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 91) [0 target_10(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.8052 ])) Commands.c:1764 -1
     (nil))
(code_label 17 16 18 5 370 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 22 5 (set (reg:SI 88 [ D.8053 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1766 -1
     (nil))
(insn 22 19 26 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.8053 ])) Commands.c:1766 -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:1767 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) Commands.c:1767 -1
     (nil))

;; Function Clear_In_Unmarshal (Clear_In_Unmarshal, funcdef_no=78, decl_uid=4307, cgraph_uid=78, symbol_order=80)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 23.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1770 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1770 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1770 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1770 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1771 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1775 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1775 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1776 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8054 ])
        (mem:SI (reg/f:DI 90) [0 *handles_8(D)+0 S4 A32])) Commands.c:1776 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1776 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 91) [0 target_10(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.8054 ])) Commands.c:1776 -1
     (nil))
(code_label 17 16 18 5 373 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 22 5 (set (reg:SI 88 [ D.8055 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1778 -1
     (nil))
(insn 22 19 26 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.8055 ])) Commands.c:1778 -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:1779 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) Commands.c:1779 -1
     (nil))

;; Function ClearControl_In_Unmarshal (ClearControl_In_Unmarshal, funcdef_no=79, decl_uid=4312, cgraph_uid=79, symbol_order=81)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1782 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1782 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1782 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1782 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1783 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1785 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1785 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1786 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8056 ])
        (mem:SI (reg/f:DI 91) [0 *handles_6(D)+0 S4 A32])) Commands.c:1786 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1786 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_8(D)->auth+0 S4 A32])
        (reg:SI 87 [ D.8056 ])) Commands.c:1786 -1
     (nil))
(code_label 17 16 18 5 376 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1788 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1788 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1789 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8057 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1789 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1789 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1789 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:1789 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:1789 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8057 ])) Commands.c:1789 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_YES_NO_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c0de58 TPMI_YES_NO_Unmarshal>) [0 TPMI_YES_NO_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1789 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:1789 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:1789 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1790 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1790 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1791 -1
     (nil))
(code_label 36 35 37 8 377 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.8058 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1794 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.8058 ])) Commands.c:1794 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:1795 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:1795 -1
     (nil))

;; Function HierarchyChangeAuth_In_Unmarshal (HierarchyChangeAuth_In_Unmarshal, funcdef_no=80, decl_uid=4317, cgraph_uid=80, symbol_order=82)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1798 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1798 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1798 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1798 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1799 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1801 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1801 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1802 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8059 ])
        (mem:SI (reg/f:DI 91) [0 *handles_6(D)+0 S4 A32])) Commands.c:1802 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1802 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_8(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.8059 ])) Commands.c:1802 -1
     (nil))
(code_label 17 16 18 5 380 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1804 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1804 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1805 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8060 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1805 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1805 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1805 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:1805 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:1805 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8060 ])) Commands.c:1805 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_AUTH_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1ce58 TPM2B_AUTH_Unmarshal>) [0 TPM2B_AUTH_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1805 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:1805 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:1805 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1806 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1806 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1807 -1
     (nil))
(code_label 36 35 37 8 381 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.8061 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1810 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.8061 ])) Commands.c:1810 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:1811 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:1811 -1
     (nil))

;; Function DictionaryAttackLockReset_In_Unmarshal (DictionaryAttackLockReset_In_Unmarshal, funcdef_no=81, decl_uid=4322, cgraph_uid=81, symbol_order=83)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 23.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1814 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1814 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1814 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1814 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1815 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1819 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1819 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1820 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8062 ])
        (mem:SI (reg/f:DI 90) [0 *handles_8(D)+0 S4 A32])) Commands.c:1820 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1820 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 91) [0 target_10(D)->lockHandle+0 S4 A32])
        (reg:SI 87 [ D.8062 ])) Commands.c:1820 -1
     (nil))
(code_label 17 16 18 5 384 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 22 5 (set (reg:SI 88 [ D.8063 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1822 -1
     (nil))
(insn 22 19 26 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.8063 ])) Commands.c:1822 -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:1823 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) Commands.c:1823 -1
     (nil))

;; Function DictionaryAttackParameters_In_Unmarshal (DictionaryAttackParameters_In_Unmarshal, funcdef_no=82, decl_uid=4327, cgraph_uid=82, symbol_order=84)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 80.
Merging block 16 into block 14...
Merged blocks 14 and 16.
Merged 14 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1826 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1826 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1826 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1826 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1827 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1829 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1829 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1830 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8064 ])
        (mem:SI (reg/f:DI 93) [0 *handles_10(D)+0 S4 A32])) Commands.c:1830 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1830 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 94) [0 target_12(D)->lockHandle+0 S4 A32])
        (reg:SI 87 [ D.8064 ])) Commands.c:1830 -1
     (nil))
(code_label 17 16 18 5 387 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1832 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1832 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1833 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8065 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1833 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1833 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1833 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 96)) Commands.c:1833 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 97)) Commands.c:1833 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8065 ])) Commands.c:1833 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT32_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1870 UINT32_Unmarshal>) [0 UINT32_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1833 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 98)
        (reg:SI 0 ax)) Commands.c:1833 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 98)) Commands.c:1833 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1834 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1834 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1835 -1
     (nil))
(code_label 36 35 37 8 388 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1838 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:1838 -1
     (nil)
 -> 55)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1839 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.8065 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1839 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1839 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1839 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 1 dx)
        (reg:DI 100)) Commands.c:1839 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 4 si)
        (reg:DI 101)) Commands.c:1839 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.8065 ])) Commands.c:1839 -1
     (nil))
(call_insn 48 47 49 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT32_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1870 UINT32_Unmarshal>) [0 UINT32_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1839 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 49 48 50 9 (set (reg:SI 102)
        (reg:SI 0 ax)) Commands.c:1839 -1
     (nil))
(insn 50 49 51 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 102)) Commands.c:1839 -1
     (nil))
(insn 51 50 52 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1840 -1
     (nil))
(jump_insn 52 51 53 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:1840 -1
     (nil)
 -> 55)
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1841 -1
     (nil))
(code_label 55 54 56 11 389 "" [2 uses])
(note 56 55 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1844 -1
     (nil))
(jump_insn 58 57 59 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) Commands.c:1844 -1
     (nil)
 -> 74)
(note 59 58 60 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 12 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1845 -1
     (nil))
(insn 61 60 62 12 (parallel [
            (set (reg/f:DI 90 [ D.8065 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1845 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 12 [0xc]))
        (nil)))
(insn 62 61 63 12 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1845 -1
     (nil))
(insn 63 62 64 12 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1845 -1
     (nil))
(insn 64 63 65 12 (set (reg:DI 1 dx)
        (reg:DI 104)) Commands.c:1845 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 4 si)
        (reg:DI 105)) Commands.c:1845 -1
     (nil))
(insn 66 65 67 12 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.8065 ])) Commands.c:1845 -1
     (nil))
(call_insn 67 66 68 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT32_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1870 UINT32_Unmarshal>) [0 UINT32_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1845 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 68 67 69 12 (set (reg:SI 106)
        (reg:SI 0 ax)) Commands.c:1845 -1
     (nil))
(insn 69 68 70 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 106)) Commands.c:1845 -1
     (nil))
(insn 70 69 71 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1846 -1
     (nil))
(jump_insn 71 70 72 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) Commands.c:1846 -1
     (nil)
 -> 74)
(note 72 71 73 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1847 -1
     (nil))
(code_label 74 73 75 14 390 "" [2 uses])
(note 75 74 76 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 79 14 (set (reg:SI 91 [ D.8066 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1850 -1
     (nil))
(insn 79 76 83 14 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.8066 ])) Commands.c:1850 -1
     (nil))
(insn 83 79 84 14 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Commands.c:1851 -1
     (nil))
(insn 84 83 0 14 (use (reg/i:SI 0 ax)) Commands.c:1851 -1
     (nil))

;; Function PP_Commands_In_Unmarshal (PP_Commands_In_Unmarshal, funcdef_no=83, decl_uid=4332, cgraph_uid=83, symbol_order=85)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 61.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1854 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1854 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1854 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1854 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1855 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1857 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1857 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1858 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8067 ])
        (mem:SI (reg/f:DI 92) [0 *handles_8(D)+0 S4 A32])) Commands.c:1858 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1858 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_10(D)->auth+0 S4 A32])
        (reg:SI 87 [ D.8067 ])) Commands.c:1858 -1
     (nil))
(code_label 17 16 18 5 393 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1860 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1860 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1861 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8068 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1861 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1861 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1861 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 95)) Commands.c:1861 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 96)) Commands.c:1861 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8068 ])) Commands.c:1861 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPML_CC_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24ca8 TPML_CC_Unmarshal>) [0 TPML_CC_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1861 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 97)
        (reg:SI 0 ax)) Commands.c:1861 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 97)) Commands.c:1861 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1862 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1862 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1863 -1
     (nil))
(code_label 36 35 37 8 394 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1866 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:1866 -1
     (nil)
 -> 55)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1867 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.8068 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1867 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 2048 [0x800]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1867 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1867 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 1 dx)
        (reg:DI 99)) Commands.c:1867 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 4 si)
        (reg:DI 100)) Commands.c:1867 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.8068 ])) Commands.c:1867 -1
     (nil))
(call_insn 48 47 49 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPML_CC_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24ca8 TPML_CC_Unmarshal>) [0 TPML_CC_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1867 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 49 48 50 9 (set (reg:SI 101)
        (reg:SI 0 ax)) Commands.c:1867 -1
     (nil))
(insn 50 49 51 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 101)) Commands.c:1867 -1
     (nil))
(insn 51 50 52 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1868 -1
     (nil))
(jump_insn 52 51 53 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:1868 -1
     (nil)
 -> 55)
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1869 -1
     (nil))
(code_label 55 54 56 11 395 "" [2 uses])
(note 56 55 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 60 11 (set (reg:SI 90 [ D.8069 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1872 -1
     (nil))
(insn 60 57 64 11 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.8069 ])) Commands.c:1872 -1
     (nil))
(insn 64 60 65 11 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:1873 -1
     (nil))
(insn 65 64 0 11 (use (reg/i:SI 0 ax)) Commands.c:1873 -1
     (nil))

;; Function SetAlgorithmSet_In_Unmarshal (SetAlgorithmSet_In_Unmarshal, funcdef_no=84, decl_uid=4337, cgraph_uid=84, symbol_order=86)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1876 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1876 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1876 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1876 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1877 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1879 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1879 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1880 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8070 ])
        (mem:SI (reg/f:DI 91) [0 *handles_6(D)+0 S4 A32])) Commands.c:1880 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1880 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_8(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.8070 ])) Commands.c:1880 -1
     (nil))
(code_label 17 16 18 5 398 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1882 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1882 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1883 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8071 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1883 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1883 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1883 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:1883 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:1883 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8071 ])) Commands.c:1883 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT32_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1870 UINT32_Unmarshal>) [0 UINT32_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1883 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:1883 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:1883 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1884 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1884 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1885 -1
     (nil))
(code_label 36 35 37 8 399 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.8072 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1888 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.8072 ])) Commands.c:1888 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:1889 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:1889 -1
     (nil))

;; Function ContextSave_In_Unmarshal (ContextSave_In_Unmarshal, funcdef_no=85, decl_uid=4342, cgraph_uid=85, symbol_order=87)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 23.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1892 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1892 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1892 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1892 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1893 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1897 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1897 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1898 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8073 ])
        (mem:SI (reg/f:DI 90) [0 *handles_8(D)+0 S4 A32])) Commands.c:1898 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1898 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 91) [0 target_10(D)->saveHandle+0 S4 A32])
        (reg:SI 87 [ D.8073 ])) Commands.c:1898 -1
     (nil))
(code_label 17 16 18 5 402 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 22 5 (set (reg:SI 88 [ D.8074 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1900 -1
     (nil))
(insn 22 19 26 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.8074 ])) Commands.c:1900 -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:1901 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) Commands.c:1901 -1
     (nil))

;; Function ContextLoad_In_Unmarshal (ContextLoad_In_Unmarshal, funcdef_no=86, decl_uid=4352, cgraph_uid=86, symbol_order=88)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 32.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1904 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1904 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1904 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1904 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1905 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1908 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:1908 -1
     (nil)
 -> 26)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 87 [ D.8075 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1909 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1909 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1909 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 1 dx)
        (reg:DI 90)) Commands.c:1909 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 91)) Commands.c:1909 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.8075 ])) Commands.c:1909 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMS_CONTEXT_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c59438 TPMS_CONTEXT_Unmarshal>) [0 TPMS_CONTEXT_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1909 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 4 (set (reg:SI 92)
        (reg:SI 0 ax)) Commands.c:1909 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 92)) Commands.c:1909 -1
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1910 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:1910 -1
     (nil)
 -> 26)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1911 -1
     (nil))
(code_label 26 25 27 6 405 "" [2 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 31 6 (set (reg:SI 88 [ D.8076 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1914 -1
     (nil))
(insn 31 28 35 6 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.8076 ])) Commands.c:1914 -1
     (nil))
(insn 35 31 36 6 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:1915 -1
     (nil))
(insn 36 35 0 6 (use (reg/i:SI 0 ax)) Commands.c:1915 -1
     (nil))

;; Function FlushContext_In_Unmarshal (FlushContext_In_Unmarshal, funcdef_no=87, decl_uid=4362, cgraph_uid=87, symbol_order=89)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 33.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1918 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1918 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1918 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1918 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1919 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1922 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) Commands.c:1922 -1
     (nil)
 -> 27)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 87 [ D.8077 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1923 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1923 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1923 -1
     (nil))
(insn 16 15 17 4 (set (reg:SI 2 cx)
        (const_int 0 [0])) Commands.c:1923 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 1 dx)
        (reg:DI 90)) Commands.c:1923 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 4 si)
        (reg:DI 91)) Commands.c:1923 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.8077 ])) Commands.c:1923 -1
     (nil))
(call_insn 20 19 21 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_DH_CONTEXT_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c136c0 TPMI_DH_CONTEXT_Unmarshal>) [0 TPMI_DH_CONTEXT_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1923 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 21 20 22 4 (set (reg:SI 92)
        (reg:SI 0 ax)) Commands.c:1923 -1
     (nil))
(insn 22 21 23 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 92)) Commands.c:1923 -1
     (nil))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1924 -1
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) Commands.c:1924 -1
     (nil)
 -> 27)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1925 -1
     (nil))
(code_label 27 26 28 6 408 "" [2 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 32 6 (set (reg:SI 88 [ D.8078 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1928 -1
     (nil))
(insn 32 29 36 6 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.8078 ])) Commands.c:1928 -1
     (nil))
(insn 36 32 37 6 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:1929 -1
     (nil))
(insn 37 36 0 6 (use (reg/i:SI 0 ax)) Commands.c:1929 -1
     (nil))

;; Function EvictControl_In_Unmarshal (EvictControl_In_Unmarshal, funcdef_no=88, decl_uid=4367, cgraph_uid=88, symbol_order=90)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 46.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1932 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1932 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1932 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1932 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1933 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1935 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:1935 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1936 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8079 ])
        (mem:SI (reg/f:DI 92) [0 *handles_6(D)+0 S4 A32])) Commands.c:1936 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1936 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_8(D)->auth+0 S4 A32])
        (reg:SI 87 [ D.8079 ])) Commands.c:1936 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1937 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.8079 ])
        (mem:SI (plus:DI (reg/f:DI 94)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_6(D) + 4B]+0 S4 A32])) Commands.c:1937 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1937 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 95)
                (const_int 4 [0x4])) [0 target_8(D)->objectHandle+0 S4 A32])
        (reg:SI 88 [ D.8079 ])) Commands.c:1937 -1
     (nil))
(code_label 21 20 22 5 411 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1939 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:1939 -1
     (nil)
 -> 40)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1940 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 89 [ D.8080 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1940 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 28 27 29 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1940 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1940 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx)
        (reg:DI 97)) Commands.c:1940 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 98)) Commands.c:1940 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.8080 ])) Commands.c:1940 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_DH_PERSISTENT_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c131b0 TPMI_DH_PERSISTENT_Unmarshal>) [0 TPMI_DH_PERSISTENT_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1940 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 6 (set (reg:SI 99)
        (reg:SI 0 ax)) Commands.c:1940 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 99)) Commands.c:1940 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1941 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:1941 -1
     (nil)
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1942 -1
     (nil))
(code_label 40 39 41 8 412 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 45 8 (set (reg:SI 90 [ D.8081 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1945 -1
     (nil))
(insn 45 42 49 8 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.8081 ])) Commands.c:1945 -1
     (nil))
(insn 49 45 50 8 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:1946 -1
     (nil))
(insn 50 49 0 8 (use (reg/i:SI 0 ax)) Commands.c:1946 -1
     (nil))

;; Function ClockSet_In_Unmarshal (ClockSet_In_Unmarshal, funcdef_no=89, decl_uid=4377, cgraph_uid=89, symbol_order=91)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1949 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1949 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1949 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1949 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1950 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1952 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1952 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1953 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8082 ])
        (mem:SI (reg/f:DI 91) [0 *handles_6(D)+0 S4 A32])) Commands.c:1953 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1953 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_8(D)->auth+0 S4 A64])
        (reg:SI 87 [ D.8082 ])) Commands.c:1953 -1
     (nil))
(code_label 17 16 18 5 415 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1955 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1955 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1956 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8083 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1956 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1956 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1956 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:1956 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:1956 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8083 ])) Commands.c:1956 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT64_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1a20 UINT64_Unmarshal>) [0 UINT64_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1956 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:1956 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:1956 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1957 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1957 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1958 -1
     (nil))
(code_label 36 35 37 8 416 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.8084 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1961 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.8084 ])) Commands.c:1961 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:1962 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:1962 -1
     (nil))

;; Function ClockRateAdjust_In_Unmarshal (ClockRateAdjust_In_Unmarshal, funcdef_no=90, decl_uid=4382, cgraph_uid=90, symbol_order=92)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1965 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1965 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1965 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1965 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1966 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1968 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:1968 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:1969 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8085 ])
        (mem:SI (reg/f:DI 91) [0 *handles_6(D)+0 S4 A32])) Commands.c:1969 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1969 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_8(D)->auth+0 S4 A32])
        (reg:SI 87 [ D.8085 ])) Commands.c:1969 -1
     (nil))
(code_label 17 16 18 5 419 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1971 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1971 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1972 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8086 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1972 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1972 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1972 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:1972 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:1972 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8086 ])) Commands.c:1972 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM_CLOCK_ADJUST_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c0d288 TPM_CLOCK_ADJUST_Unmarshal>) [0 TPM_CLOCK_ADJUST_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1972 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:1972 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:1972 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1973 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:1973 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1974 -1
     (nil))
(code_label 36 35 37 8 420 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.8087 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:1977 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.8087 ])) Commands.c:1977 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:1978 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:1978 -1
     (nil))

;; Function GetCapability_In_Unmarshal (GetCapability_In_Unmarshal, funcdef_no=91, decl_uid=4387, cgraph_uid=91, symbol_order=93)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Removing jump 70.
Merging block 14 into block 12...
Merged blocks 12 and 14.
Merged 12 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:1981 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:1981 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:1981 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:1981 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:1982 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1985 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:1985 -1
     (nil)
 -> 26)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 87 [ D.8088 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1986 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1986 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1986 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 1 dx)
        (reg:DI 92)) Commands.c:1986 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 93)) Commands.c:1986 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.8088 ])) Commands.c:1986 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM_CAP_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c0d6c0 TPM_CAP_Unmarshal>) [0 TPM_CAP_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1986 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 4 (set (reg:SI 94)
        (reg:SI 0 ax)) Commands.c:1986 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 94)) Commands.c:1986 -1
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1987 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:1987 -1
     (nil)
 -> 26)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1988 -1
     (nil))
(code_label 26 25 27 6 423 "" [2 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1991 -1
     (nil))
(jump_insn 29 28 30 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) Commands.c:1991 -1
     (nil)
 -> 45)
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 7 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1992 -1
     (nil))
(insn 32 31 33 7 (parallel [
            (set (reg/f:DI 88 [ D.8089 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1992 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 33 32 34 7 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1992 -1
     (nil))
(insn 34 33 35 7 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1992 -1
     (nil))
(insn 35 34 36 7 (set (reg:DI 1 dx)
        (reg:DI 96)) Commands.c:1992 -1
     (nil))
(insn 36 35 37 7 (set (reg:DI 4 si)
        (reg:DI 97)) Commands.c:1992 -1
     (nil))
(insn 37 36 38 7 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8089 ])) Commands.c:1992 -1
     (nil))
(call_insn 38 37 39 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT32_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1870 UINT32_Unmarshal>) [0 UINT32_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1992 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 39 38 40 7 (set (reg:SI 98)
        (reg:SI 0 ax)) Commands.c:1992 -1
     (nil))
(insn 40 39 41 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 98)) Commands.c:1992 -1
     (nil))
(insn 41 40 42 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1993 -1
     (nil))
(jump_insn 42 41 43 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) Commands.c:1993 -1
     (nil)
 -> 45)
(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1994 -1
     (nil))
(code_label 45 44 46 9 424 "" [2 uses])
(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1997 -1
     (nil))
(jump_insn 48 47 49 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) Commands.c:1997 -1
     (nil)
 -> 64)
(note 49 48 50 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 10 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:1998 -1
     (nil))
(insn 51 50 52 10 (parallel [
            (set (reg/f:DI 89 [ D.8089 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:1998 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 52 51 53 10 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:1998 -1
     (nil))
(insn 53 52 54 10 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:1998 -1
     (nil))
(insn 54 53 55 10 (set (reg:DI 1 dx)
        (reg:DI 100)) Commands.c:1998 -1
     (nil))
(insn 55 54 56 10 (set (reg:DI 4 si)
        (reg:DI 101)) Commands.c:1998 -1
     (nil))
(insn 56 55 57 10 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.8089 ])) Commands.c:1998 -1
     (nil))
(call_insn 57 56 58 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT32_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1870 UINT32_Unmarshal>) [0 UINT32_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:1998 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 58 57 59 10 (set (reg:SI 102)
        (reg:SI 0 ax)) Commands.c:1998 -1
     (nil))
(insn 59 58 60 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 102)) Commands.c:1998 -1
     (nil))
(insn 60 59 61 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:1999 -1
     (nil))
(jump_insn 61 60 62 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) Commands.c:1999 -1
     (nil)
 -> 64)
(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2000 -1
     (nil))
(code_label 64 63 65 12 425 "" [2 uses])
(note 65 64 66 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 69 12 (set (reg:SI 90 [ D.8090 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:2003 -1
     (nil))
(insn 69 66 73 12 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.8090 ])) Commands.c:2003 -1
     (nil))
(insn 73 69 74 12 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:2004 -1
     (nil))
(insn 74 73 0 12 (use (reg/i:SI 0 ax)) Commands.c:2004 -1
     (nil))

;; Function TestParms_In_Unmarshal (TestParms_In_Unmarshal, funcdef_no=92, decl_uid=4397, cgraph_uid=92, symbol_order=94)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 32.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:2007 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:2007 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:2007 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:2007 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:2008 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2011 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:2011 -1
     (nil)
 -> 26)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 87 [ D.8091 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2012 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:2012 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:2012 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 1 dx)
        (reg:DI 90)) Commands.c:2012 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 91)) Commands.c:2012 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.8091 ])) Commands.c:2012 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_PUBLIC_PARMS_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c515e8 TPMT_PUBLIC_PARMS_Unmarshal>) [0 TPMT_PUBLIC_PARMS_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:2012 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 4 (set (reg:SI 92)
        (reg:SI 0 ax)) Commands.c:2012 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 92)) Commands.c:2012 -1
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2013 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) Commands.c:2013 -1
     (nil)
 -> 26)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2014 -1
     (nil))
(code_label 26 25 27 6 428 "" [2 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 31 6 (set (reg:SI 88 [ D.8092 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:2017 -1
     (nil))
(insn 31 28 35 6 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.8092 ])) Commands.c:2017 -1
     (nil))
(insn 35 31 36 6 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:2018 -1
     (nil))
(insn 36 35 0 6 (use (reg/i:SI 0 ax)) Commands.c:2018 -1
     (nil))

;; Function NV_DefineSpace_In_Unmarshal (NV_DefineSpace_In_Unmarshal, funcdef_no=93, decl_uid=4402, cgraph_uid=93, symbol_order=95)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 61.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:2021 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:2021 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:2021 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:2021 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:2022 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2024 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:2024 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2025 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8093 ])
        (mem:SI (reg/f:DI 92) [0 *handles_8(D)+0 S4 A32])) Commands.c:2025 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2025 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_10(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.8093 ])) Commands.c:2025 -1
     (nil))
(code_label 17 16 18 5 431 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2027 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:2027 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2028 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8094 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2028 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:2028 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:2028 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 95)) Commands.c:2028 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 96)) Commands.c:2028 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8094 ])) Commands.c:2028 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_AUTH_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1ce58 TPM2B_AUTH_Unmarshal>) [0 TPM2B_AUTH_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:2028 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 97)
        (reg:SI 0 ax)) Commands.c:2028 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 97)) Commands.c:2028 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2029 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:2029 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2030 -1
     (nil))
(code_label 36 35 37 8 432 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2033 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:2033 -1
     (nil)
 -> 55)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2034 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/f:DI 89 [ D.8095 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 136 [0x88])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2034 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 136 [0x88]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:2034 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:2034 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 1 dx)
        (reg:DI 99)) Commands.c:2034 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 4 si)
        (reg:DI 100)) Commands.c:2034 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.8095 ])) Commands.c:2034 -1
     (nil))
(call_insn 48 47 49 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_NV_PUBLIC_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c590d8 TPM2B_NV_PUBLIC_Unmarshal>) [0 TPM2B_NV_PUBLIC_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:2034 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 49 48 50 9 (set (reg:SI 101)
        (reg:SI 0 ax)) Commands.c:2034 -1
     (nil))
(insn 50 49 51 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 101)) Commands.c:2034 -1
     (nil))
(insn 51 50 52 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2035 -1
     (nil))
(jump_insn 52 51 53 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) Commands.c:2035 -1
     (nil)
 -> 55)
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2036 -1
     (nil))
(code_label 55 54 56 11 433 "" [2 uses])
(note 56 55 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 60 11 (set (reg:SI 90 [ D.8096 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:2039 -1
     (nil))
(insn 60 57 64 11 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.8096 ])) Commands.c:2039 -1
     (nil))
(insn 64 60 65 11 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:2040 -1
     (nil))
(insn 65 64 0 11 (use (reg/i:SI 0 ax)) Commands.c:2040 -1
     (nil))

;; Function NV_UndefineSpace_In_Unmarshal (NV_UndefineSpace_In_Unmarshal, funcdef_no=94, decl_uid=4407, cgraph_uid=94, symbol_order=96)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 27.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:2043 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:2043 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:2043 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:2043 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:2044 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2048 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:2048 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2049 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8097 ])
        (mem:SI (reg/f:DI 91) [0 *handles_8(D)+0 S4 A32])) Commands.c:2049 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2049 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_10(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.8097 ])) Commands.c:2049 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2050 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.8097 ])
        (mem:SI (plus:DI (reg/f:DI 93)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_8(D) + 4B]+0 S4 A32])) Commands.c:2050 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2050 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 94)
                (const_int 4 [0x4])) [0 target_10(D)->nvIndex+0 S4 A32])
        (reg:SI 88 [ D.8097 ])) Commands.c:2050 -1
     (nil))
(code_label 21 20 22 5 436 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 26 5 (set (reg:SI 89 [ D.8098 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:2052 -1
     (nil))
(insn 26 23 30 5 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.8098 ])) Commands.c:2052 -1
     (nil))
(insn 30 26 31 5 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:2053 -1
     (nil))
(insn 31 30 0 5 (use (reg/i:SI 0 ax)) Commands.c:2053 -1
     (nil))

;; Function NV_UndefineSpaceSpecial_In_Unmarshal (NV_UndefineSpaceSpecial_In_Unmarshal, funcdef_no=95, decl_uid=4412, cgraph_uid=95, symbol_order=97)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 27.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:2056 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:2056 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:2056 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:2056 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:2057 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2061 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:2061 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2062 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8099 ])
        (mem:SI (reg/f:DI 91) [0 *handles_8(D)+0 S4 A32])) Commands.c:2062 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2062 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_10(D)->nvIndex+0 S4 A32])
        (reg:SI 87 [ D.8099 ])) Commands.c:2062 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2063 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.8099 ])
        (mem:SI (plus:DI (reg/f:DI 93)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_8(D) + 4B]+0 S4 A32])) Commands.c:2063 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2063 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 94)
                (const_int 4 [0x4])) [0 target_10(D)->platform+0 S4 A32])
        (reg:SI 88 [ D.8099 ])) Commands.c:2063 -1
     (nil))
(code_label 21 20 22 5 439 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 26 5 (set (reg:SI 89 [ D.8100 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:2065 -1
     (nil))
(insn 26 23 30 5 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.8100 ])) Commands.c:2065 -1
     (nil))
(insn 30 26 31 5 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:2066 -1
     (nil))
(insn 31 30 0 5 (use (reg/i:SI 0 ax)) Commands.c:2066 -1
     (nil))

;; Function NV_ReadPublic_In_Unmarshal (NV_ReadPublic_In_Unmarshal, funcdef_no=96, decl_uid=4417, cgraph_uid=96, symbol_order=98)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 23.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:2069 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:2069 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:2069 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:2069 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:2070 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2074 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:2074 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2075 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8101 ])
        (mem:SI (reg/f:DI 90) [0 *handles_8(D)+0 S4 A32])) Commands.c:2075 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2075 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 91) [0 target_10(D)->nvIndex+0 S4 A32])
        (reg:SI 87 [ D.8101 ])) Commands.c:2075 -1
     (nil))
(code_label 17 16 18 5 442 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 22 5 (set (reg:SI 88 [ D.8102 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:2077 -1
     (nil))
(insn 22 19 26 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.8102 ])) Commands.c:2077 -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:2078 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) Commands.c:2078 -1
     (nil))

;; Function NV_Write_In_Unmarshal (NV_Write_In_Unmarshal, funcdef_no=97, decl_uid=4427, cgraph_uid=97, symbol_order=99)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 65.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:2081 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:2081 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:2081 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:2081 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:2082 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2084 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:2084 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2085 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8103 ])
        (mem:SI (reg/f:DI 93) [0 *handles_8(D)+0 S4 A32])) Commands.c:2085 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2085 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 94) [0 target_10(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.8103 ])) Commands.c:2085 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2086 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.8103 ])
        (mem:SI (plus:DI (reg/f:DI 95)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_8(D) + 4B]+0 S4 A32])) Commands.c:2086 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2086 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 96)
                (const_int 4 [0x4])) [0 target_10(D)->nvIndex+0 S4 A32])
        (reg:SI 88 [ D.8103 ])) Commands.c:2086 -1
     (nil))
(code_label 21 20 22 5 445 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2088 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:2088 -1
     (nil)
 -> 40)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2089 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 89 [ D.8104 ])
                (plus:DI (reg/f:DI 97)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2089 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 28 27 29 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:2089 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:2089 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx)
        (reg:DI 98)) Commands.c:2089 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 99)) Commands.c:2089 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.8104 ])) Commands.c:2089 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_MAX_NV_BUFFER_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24288 TPM2B_MAX_NV_BUFFER_Unmarshal>) [0 TPM2B_MAX_NV_BUFFER_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:2089 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 6 (set (reg:SI 100)
        (reg:SI 0 ax)) Commands.c:2089 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 100)) Commands.c:2089 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2090 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:2090 -1
     (nil)
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2091 -1
     (nil))
(code_label 40 39 41 8 446 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2094 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) Commands.c:2094 -1
     (nil)
 -> 59)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2095 -1
     (nil))
(insn 46 45 47 9 (parallel [
            (set (reg/f:DI 90 [ D.8105 ])
                (plus:DI (reg/f:DI 101)
                    (const_int 2058 [0x80a])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2095 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 2058 [0x80a]))
        (nil)))
(insn 47 46 48 9 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:2095 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:2095 -1
     (nil))
(insn 49 48 50 9 (set (reg:DI 1 dx)
        (reg:DI 102)) Commands.c:2095 -1
     (nil))
(insn 50 49 51 9 (set (reg:DI 4 si)
        (reg:DI 103)) Commands.c:2095 -1
     (nil))
(insn 51 50 52 9 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.8105 ])) Commands.c:2095 -1
     (nil))
(call_insn 52 51 53 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT16_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1798 UINT16_Unmarshal>) [0 UINT16_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:2095 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 53 52 54 9 (set (reg:SI 104)
        (reg:SI 0 ax)) Commands.c:2095 -1
     (nil))
(insn 54 53 55 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 104)) Commands.c:2095 -1
     (nil))
(insn 55 54 56 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2096 -1
     (nil))
(jump_insn 56 55 57 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) Commands.c:2096 -1
     (nil)
 -> 59)
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2097 -1
     (nil))
(code_label 59 58 60 11 447 "" [2 uses])
(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 64 11 (set (reg:SI 91 [ D.8106 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:2100 -1
     (nil))
(insn 64 61 68 11 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.8106 ])) Commands.c:2100 -1
     (nil))
(insn 68 64 69 11 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Commands.c:2101 -1
     (nil))
(insn 69 68 0 11 (use (reg/i:SI 0 ax)) Commands.c:2101 -1
     (nil))

;; Function NV_Increment_In_Unmarshal (NV_Increment_In_Unmarshal, funcdef_no=98, decl_uid=4432, cgraph_uid=98, symbol_order=100)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 27.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:2104 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:2104 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:2104 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:2104 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:2105 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2109 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:2109 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2110 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8107 ])
        (mem:SI (reg/f:DI 91) [0 *handles_8(D)+0 S4 A32])) Commands.c:2110 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2110 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_10(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.8107 ])) Commands.c:2110 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2111 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.8107 ])
        (mem:SI (plus:DI (reg/f:DI 93)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_8(D) + 4B]+0 S4 A32])) Commands.c:2111 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2111 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 94)
                (const_int 4 [0x4])) [0 target_10(D)->nvIndex+0 S4 A32])
        (reg:SI 88 [ D.8107 ])) Commands.c:2111 -1
     (nil))
(code_label 21 20 22 5 450 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 26 5 (set (reg:SI 89 [ D.8108 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:2113 -1
     (nil))
(insn 26 23 30 5 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.8108 ])) Commands.c:2113 -1
     (nil))
(insn 30 26 31 5 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:2114 -1
     (nil))
(insn 31 30 0 5 (use (reg/i:SI 0 ax)) Commands.c:2114 -1
     (nil))

;; Function NV_Extend_In_Unmarshal (NV_Extend_In_Unmarshal, funcdef_no=99, decl_uid=4437, cgraph_uid=99, symbol_order=101)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 46.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:2117 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:2117 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:2117 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:2117 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:2118 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2120 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:2120 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2121 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8109 ])
        (mem:SI (reg/f:DI 92) [0 *handles_6(D)+0 S4 A32])) Commands.c:2121 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2121 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_8(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.8109 ])) Commands.c:2121 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2122 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.8109 ])
        (mem:SI (plus:DI (reg/f:DI 94)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_6(D) + 4B]+0 S4 A32])) Commands.c:2122 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2122 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 95)
                (const_int 4 [0x4])) [0 target_8(D)->nvIndex+0 S4 A32])
        (reg:SI 88 [ D.8109 ])) Commands.c:2122 -1
     (nil))
(code_label 21 20 22 5 453 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2124 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:2124 -1
     (nil)
 -> 40)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2125 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 89 [ D.8110 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2125 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 28 27 29 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:2125 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:2125 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx)
        (reg:DI 97)) Commands.c:2125 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 98)) Commands.c:2125 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.8110 ])) Commands.c:2125 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_MAX_NV_BUFFER_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c24288 TPM2B_MAX_NV_BUFFER_Unmarshal>) [0 TPM2B_MAX_NV_BUFFER_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:2125 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 6 (set (reg:SI 99)
        (reg:SI 0 ax)) Commands.c:2125 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 99)) Commands.c:2125 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2126 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:2126 -1
     (nil)
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2127 -1
     (nil))
(code_label 40 39 41 8 454 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 45 8 (set (reg:SI 90 [ D.8111 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:2130 -1
     (nil))
(insn 45 42 49 8 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.8111 ])) Commands.c:2130 -1
     (nil))
(insn 49 45 50 8 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:2131 -1
     (nil))
(insn 50 49 0 8 (use (reg/i:SI 0 ax)) Commands.c:2131 -1
     (nil))

;; Function NV_SetBits_In_Unmarshal (NV_SetBits_In_Unmarshal, funcdef_no=100, decl_uid=4442, cgraph_uid=100, symbol_order=102)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 46.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:2134 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:2134 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:2134 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:2134 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:2135 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2137 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:2137 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2138 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8112 ])
        (mem:SI (reg/f:DI 92) [0 *handles_6(D)+0 S4 A32])) Commands.c:2138 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2138 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 93) [0 target_8(D)->authHandle+0 S4 A64])
        (reg:SI 87 [ D.8112 ])) Commands.c:2138 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2139 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.8112 ])
        (mem:SI (plus:DI (reg/f:DI 94)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_6(D) + 4B]+0 S4 A32])) Commands.c:2139 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2139 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 95)
                (const_int 4 [0x4])) [0 target_8(D)->nvIndex+0 S4 A32])
        (reg:SI 88 [ D.8112 ])) Commands.c:2139 -1
     (nil))
(code_label 21 20 22 5 457 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2141 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:2141 -1
     (nil)
 -> 40)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2142 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 89 [ D.8113 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2142 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 28 27 29 6 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:2142 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:2142 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx)
        (reg:DI 97)) Commands.c:2142 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 98)) Commands.c:2142 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.8113 ])) Commands.c:2142 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT64_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1a20 UINT64_Unmarshal>) [0 UINT64_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:2142 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 6 (set (reg:SI 99)
        (reg:SI 0 ax)) Commands.c:2142 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 99)) Commands.c:2142 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2143 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:2143 -1
     (nil)
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2144 -1
     (nil))
(code_label 40 39 41 8 458 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 45 8 (set (reg:SI 90 [ D.8114 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:2147 -1
     (nil))
(insn 45 42 49 8 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.8114 ])) Commands.c:2147 -1
     (nil))
(insn 49 45 50 8 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) Commands.c:2148 -1
     (nil))
(insn 50 49 0 8 (use (reg/i:SI 0 ax)) Commands.c:2148 -1
     (nil))

;; Function NV_WriteLock_In_Unmarshal (NV_WriteLock_In_Unmarshal, funcdef_no=101, decl_uid=4447, cgraph_uid=101, symbol_order=103)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 27.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:2151 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:2151 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:2151 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:2151 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:2152 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2156 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:2156 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2157 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8115 ])
        (mem:SI (reg/f:DI 91) [0 *handles_8(D)+0 S4 A32])) Commands.c:2157 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2157 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_10(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.8115 ])) Commands.c:2157 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2158 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.8115 ])
        (mem:SI (plus:DI (reg/f:DI 93)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_8(D) + 4B]+0 S4 A32])) Commands.c:2158 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2158 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 94)
                (const_int 4 [0x4])) [0 target_10(D)->nvIndex+0 S4 A32])
        (reg:SI 88 [ D.8115 ])) Commands.c:2158 -1
     (nil))
(code_label 21 20 22 5 461 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 26 5 (set (reg:SI 89 [ D.8116 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:2160 -1
     (nil))
(insn 26 23 30 5 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.8116 ])) Commands.c:2160 -1
     (nil))
(insn 30 26 31 5 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:2161 -1
     (nil))
(insn 31 30 0 5 (use (reg/i:SI 0 ax)) Commands.c:2161 -1
     (nil))

;; Function NV_GlobalWriteLock_In_Unmarshal (NV_GlobalWriteLock_In_Unmarshal, funcdef_no=102, decl_uid=4452, cgraph_uid=102, symbol_order=104)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 23.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:2164 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:2164 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:2164 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:2164 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:2165 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2169 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:2169 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2170 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8117 ])
        (mem:SI (reg/f:DI 90) [0 *handles_8(D)+0 S4 A32])) Commands.c:2170 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2170 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 91) [0 target_10(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.8117 ])) Commands.c:2170 -1
     (nil))
(code_label 17 16 18 5 464 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 22 5 (set (reg:SI 88 [ D.8118 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:2172 -1
     (nil))
(insn 22 19 26 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.8118 ])) Commands.c:2172 -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Commands.c:2173 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) Commands.c:2173 -1
     (nil))

;; Function NV_Read_In_Unmarshal (NV_Read_In_Unmarshal, funcdef_no=103, decl_uid=4457, cgraph_uid=103, symbol_order=105)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 65.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:2176 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:2176 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:2176 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:2176 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:2177 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2179 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:2179 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2180 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8119 ])
        (mem:SI (reg/f:DI 93) [0 *handles_8(D)+0 S4 A32])) Commands.c:2180 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2180 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 94) [0 target_10(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.8119 ])) Commands.c:2180 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2181 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.8119 ])
        (mem:SI (plus:DI (reg/f:DI 95)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_8(D) + 4B]+0 S4 A32])) Commands.c:2181 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2181 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 96)
                (const_int 4 [0x4])) [0 target_10(D)->nvIndex+0 S4 A32])
        (reg:SI 88 [ D.8119 ])) Commands.c:2181 -1
     (nil))
(code_label 21 20 22 5 467 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2183 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:2183 -1
     (nil)
 -> 40)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2184 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 89 [ D.8120 ])
                (plus:DI (reg/f:DI 97)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2184 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 28 27 29 6 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:2184 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:2184 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx)
        (reg:DI 98)) Commands.c:2184 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 99)) Commands.c:2184 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.8120 ])) Commands.c:2184 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT16_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1798 UINT16_Unmarshal>) [0 UINT16_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:2184 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 6 (set (reg:SI 100)
        (reg:SI 0 ax)) Commands.c:2184 -1
     (nil))
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 100)) Commands.c:2184 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2185 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) Commands.c:2185 -1
     (nil)
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2186 -1
     (nil))
(code_label 40 39 41 8 468 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2189 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) Commands.c:2189 -1
     (nil)
 -> 59)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2190 -1
     (nil))
(insn 46 45 47 9 (parallel [
            (set (reg/f:DI 90 [ D.8120 ])
                (plus:DI (reg/f:DI 101)
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2190 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 10 [0xa]))
        (nil)))
(insn 47 46 48 9 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:2190 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:2190 -1
     (nil))
(insn 49 48 50 9 (set (reg:DI 1 dx)
        (reg:DI 102)) Commands.c:2190 -1
     (nil))
(insn 50 49 51 9 (set (reg:DI 4 si)
        (reg:DI 103)) Commands.c:2190 -1
     (nil))
(insn 51 50 52 9 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.8120 ])) Commands.c:2190 -1
     (nil))
(call_insn 52 51 53 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT16_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1798 UINT16_Unmarshal>) [0 UINT16_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:2190 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 53 52 54 9 (set (reg:SI 104)
        (reg:SI 0 ax)) Commands.c:2190 -1
     (nil))
(insn 54 53 55 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 104)) Commands.c:2190 -1
     (nil))
(insn 55 54 56 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2191 -1
     (nil))
(jump_insn 56 55 57 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) Commands.c:2191 -1
     (nil)
 -> 59)
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2192 -1
     (nil))
(code_label 59 58 60 11 469 "" [2 uses])
(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 64 11 (set (reg:SI 91 [ D.8121 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:2195 -1
     (nil))
(insn 64 61 68 11 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.8121 ])) Commands.c:2195 -1
     (nil))
(insn 68 64 69 11 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Commands.c:2196 -1
     (nil))
(insn 69 68 0 11 (use (reg/i:SI 0 ax)) Commands.c:2196 -1
     (nil))

;; Function NV_ReadLock_In_Unmarshal (NV_ReadLock_In_Unmarshal, funcdef_no=104, decl_uid=4467, cgraph_uid=104, symbol_order=106)

Partition 0: size 4 align 4
	rc_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 27.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:2199 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:2199 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:2199 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:2199 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:2200 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2204 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) Commands.c:2204 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2205 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8122 ])
        (mem:SI (reg/f:DI 91) [0 *handles_8(D)+0 S4 A32])) Commands.c:2205 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2205 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_10(D)->authHandle+0 S4 A32])
        (reg:SI 87 [ D.8122 ])) Commands.c:2205 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2206 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.8122 ])
        (mem:SI (plus:DI (reg/f:DI 93)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_8(D) + 4B]+0 S4 A32])) Commands.c:2206 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2206 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 94)
                (const_int 4 [0x4])) [0 target_10(D)->nvIndex+0 S4 A32])
        (reg:SI 88 [ D.8122 ])) Commands.c:2206 -1
     (nil))
(code_label 21 20 22 5 472 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 26 5 (set (reg:SI 89 [ D.8123 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:2208 -1
     (nil))
(insn 26 23 30 5 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.8123 ])) Commands.c:2208 -1
     (nil))
(insn 30 26 31 5 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:2209 -1
     (nil))
(insn 31 30 0 5 (use (reg/i:SI 0 ax)) Commands.c:2209 -1
     (nil))

;; Function NV_ChangeAuth_In_Unmarshal (NV_ChangeAuth_In_Unmarshal, funcdef_no=105, decl_uid=4472, cgraph_uid=105, symbol_order=107)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:2212 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:2212 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:2212 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:2212 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:2213 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2215 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Commands.c:2215 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2216 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8124 ])
        (mem:SI (reg/f:DI 91) [0 *handles_6(D)+0 S4 A32])) Commands.c:2216 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2216 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 92) [0 target_8(D)->nvIndex+0 S4 A32])
        (reg:SI 87 [ D.8124 ])) Commands.c:2216 -1
     (nil))
(code_label 17 16 18 5 475 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2218 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:2218 -1
     (nil)
 -> 36)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2219 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 88 [ D.8125 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2219 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 6 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:2219 -1
     (nil))
(insn 25 24 26 6 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:2219 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 1 dx)
        (reg:DI 94)) Commands.c:2219 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 4 si)
        (reg:DI 95)) Commands.c:2219 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.8125 ])) Commands.c:2219 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_AUTH_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1ce58 TPM2B_AUTH_Unmarshal>) [0 TPM2B_AUTH_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:2219 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 6 (set (reg:SI 96)
        (reg:SI 0 ax)) Commands.c:2219 -1
     (nil))
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 96)) Commands.c:2219 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2220 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) Commands.c:2220 -1
     (nil)
 -> 36)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2221 -1
     (nil))
(code_label 36 35 37 8 476 "" [2 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:SI 89 [ D.8126 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:2224 -1
     (nil))
(insn 41 38 45 8 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.8126 ])) Commands.c:2224 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) Commands.c:2225 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:SI 0 ax)) Commands.c:2225 -1
     (nil))

;; Function NV_Certify_In_Unmarshal (NV_Certify_In_Unmarshal, funcdef_no=106, decl_uid=4477, cgraph_uid=106, symbol_order=108)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Removing jump 108.
Merging block 19 into block 17...
Merged blocks 17 and 19.
Merged 17 and 19 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
        (reg:DI 5 di [ target ])) Commands.c:2228 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Commands.c:2228 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) Commands.c:2228 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])
        (reg:DI 2 cx [ handles ])) Commands.c:2228 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) Commands.c:2229 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2231 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) Commands.c:2231 -1
     (nil)
 -> 25)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2232 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 87 [ D.8127 ])
        (mem:SI (reg/f:DI 96) [0 *handles_12(D)+0 S4 A32])) Commands.c:2232 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2232 -1
     (nil))
(insn 16 15 17 4 (set (mem/j:SI (reg/f:DI 97) [0 target_14(D)->signHandle+0 S4 A32])
        (reg:SI 87 [ D.8127 ])) Commands.c:2232 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2233 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 88 [ D.8127 ])
        (mem:SI (plus:DI (reg/f:DI 98)
                (const_int 4 [0x4])) [0 MEM[(TPM_HANDLE *)handles_12(D) + 4B]+0 S4 A32])) Commands.c:2233 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2233 -1
     (nil))
(insn 20 19 21 4 (set (mem/j:SI (plus:DI (reg/f:DI 99)
                (const_int 4 [0x4])) [0 target_14(D)->authHandle+0 S4 A32])
        (reg:SI 88 [ D.8127 ])) Commands.c:2233 -1
     (nil))
(insn 21 20 22 4 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 handles+0 S8 A64])) Commands.c:2234 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 89 [ D.8127 ])
        (mem:SI (plus:DI (reg/f:DI 100)
                (const_int 8 [0x8])) [0 MEM[(TPM_HANDLE *)handles_12(D) + 8B]+0 S4 A32])) Commands.c:2234 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2234 -1
     (nil))
(insn 24 23 25 4 (set (mem/j:SI (plus:DI (reg/f:DI 101)
                (const_int 8 [0x8])) [0 target_14(D)->nvIndex+0 S4 A32])
        (reg:SI 89 [ D.8127 ])) Commands.c:2234 -1
     (nil))
(code_label 25 24 26 5 479 "" [1 uses])
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2236 -1
     (nil))
(jump_insn 28 27 29 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) Commands.c:2236 -1
     (nil)
 -> 44)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2237 -1
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg/f:DI 90 [ D.8128 ])
                (plus:DI (reg/f:DI 102)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2237 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 12 [0xc]))
        (nil)))
(insn 32 31 33 6 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:2237 -1
     (nil))
(insn 33 32 34 6 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:2237 -1
     (nil))
(insn 34 33 35 6 (set (reg:DI 1 dx)
        (reg:DI 103)) Commands.c:2237 -1
     (nil))
(insn 35 34 36 6 (set (reg:DI 4 si)
        (reg:DI 104)) Commands.c:2237 -1
     (nil))
(insn 36 35 37 6 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.8128 ])) Commands.c:2237 -1
     (nil))
(call_insn 37 36 38 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM2B_DATA_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c1cca8 TPM2B_DATA_Unmarshal>) [0 TPM2B_DATA_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:2237 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 38 37 39 6 (set (reg:SI 105)
        (reg:SI 0 ax)) Commands.c:2237 -1
     (nil))
(insn 39 38 40 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 105)) Commands.c:2237 -1
     (nil))
(insn 40 39 41 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2238 -1
     (nil))
(jump_insn 41 40 42 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) Commands.c:2238 -1
     (nil)
 -> 44)
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 320 [0x140])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2239 -1
     (nil))
(code_label 44 43 45 8 480 "" [2 uses])
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2242 -1
     (nil))
(jump_insn 47 46 48 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) Commands.c:2242 -1
     (nil)
 -> 64)
(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 9 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2243 -1
     (nil))
(insn 50 49 51 9 (parallel [
            (set (reg/f:DI 91 [ D.8129 ])
                (plus:DI (reg/f:DI 106)
                    (const_int 144 [0x90])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2243 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 144 [0x90]))
        (nil)))
(insn 51 50 52 9 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:2243 -1
     (nil))
(insn 52 51 53 9 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:2243 -1
     (nil))
(insn 53 52 54 9 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) Commands.c:2243 -1
     (nil))
(insn 54 53 55 9 (set (reg:DI 1 dx)
        (reg:DI 107)) Commands.c:2243 -1
     (nil))
(insn 55 54 56 9 (set (reg:DI 4 si)
        (reg:DI 108)) Commands.c:2243 -1
     (nil))
(insn 56 55 57 9 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.8129 ])) Commands.c:2243 -1
     (nil))
(call_insn 57 56 58 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_SIG_SCHEME_Unmarshal") [flags 0x41]  <function_decl 0x7fea62c39ca8 TPMT_SIG_SCHEME_Unmarshal>) [0 TPMT_SIG_SCHEME_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:2243 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 58 57 59 9 (set (reg:SI 109)
        (reg:SI 0 ax)) Commands.c:2243 -1
     (nil))
(insn 59 58 60 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 109)) Commands.c:2243 -1
     (nil))
(insn 60 59 61 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2244 -1
     (nil))
(jump_insn 61 60 62 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) Commands.c:2244 -1
     (nil)
 -> 64)
(note 62 61 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2245 -1
     (nil))
(code_label 64 63 65 11 481 "" [2 uses])
(note 65 64 66 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2248 -1
     (nil))
(jump_insn 67 66 68 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) Commands.c:2248 -1
     (nil)
 -> 83)
(note 68 67 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 12 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2249 -1
     (nil))
(insn 70 69 71 12 (parallel [
            (set (reg/f:DI 92 [ D.8130 ])
                (plus:DI (reg/f:DI 110)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2249 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 150 [0x96]))
        (nil)))
(insn 71 70 72 12 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:2249 -1
     (nil))
(insn 72 71 73 12 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:2249 -1
     (nil))
(insn 73 72 74 12 (set (reg:DI 1 dx)
        (reg:DI 111)) Commands.c:2249 -1
     (nil))
(insn 74 73 75 12 (set (reg:DI 4 si)
        (reg:DI 112)) Commands.c:2249 -1
     (nil))
(insn 75 74 76 12 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.8130 ])) Commands.c:2249 -1
     (nil))
(call_insn 76 75 77 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT16_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1798 UINT16_Unmarshal>) [0 UINT16_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:2249 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 77 76 78 12 (set (reg:SI 113)
        (reg:SI 0 ax)) Commands.c:2249 -1
     (nil))
(insn 78 77 79 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 113)) Commands.c:2249 -1
     (nil))
(insn 79 78 80 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2250 -1
     (nil))
(jump_insn 80 79 81 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) Commands.c:2250 -1
     (nil)
 -> 83)
(note 81 80 82 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 832 [0x340])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2251 -1
     (nil))
(code_label 83 82 84 14 482 "" [2 uses])
(note 84 83 85 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2254 -1
     (nil))
(jump_insn 86 85 87 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) Commands.c:2254 -1
     (nil)
 -> 102)
(note 87 86 88 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 15 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])) Commands.c:2255 -1
     (nil))
(insn 89 88 90 15 (parallel [
            (set (reg/f:DI 93 [ D.8130 ])
                (plus:DI (reg/f:DI 114)
                    (const_int 152 [0x98])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2255 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 target+0 S8 A64])
            (const_int 152 [0x98]))
        (nil)))
(insn 90 89 91 15 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 size+0 S8 A64])) Commands.c:2255 -1
     (nil))
(insn 91 90 92 15 (set (reg:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])) Commands.c:2255 -1
     (nil))
(insn 92 91 93 15 (set (reg:DI 1 dx)
        (reg:DI 115)) Commands.c:2255 -1
     (nil))
(insn 93 92 94 15 (set (reg:DI 4 si)
        (reg:DI 116)) Commands.c:2255 -1
     (nil))
(insn 94 93 95 15 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.8130 ])) Commands.c:2255 -1
     (nil))
(call_insn 95 94 96 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT16_Unmarshal") [flags 0x41]  <function_decl 0x7fea62bf1798 UINT16_Unmarshal>) [0 UINT16_Unmarshal S1 A8])
            (const_int 0 [0]))) Commands.c:2255 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 96 95 97 15 (set (reg:SI 117)
        (reg:SI 0 ax)) Commands.c:2255 -1
     (nil))
(insn 97 96 98 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 117)) Commands.c:2255 -1
     (nil))
(insn 98 97 99 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) Commands.c:2256 -1
     (nil))
(jump_insn 99 98 100 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) Commands.c:2256 -1
     (nil)
 -> 102)
(note 100 99 101 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
                    (const_int 1088 [0x440])))
            (clobber (reg:CC 17 flags))
        ]) Commands.c:2257 -1
     (nil))
(code_label 102 101 103 17 483 "" [2 uses])
(note 103 102 104 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 107 17 (set (reg:SI 94 [ D.8131 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) Commands.c:2260 -1
     (nil))
(insn 107 104 111 17 (set (reg:SI 95 [ <retval> ])
        (reg:SI 94 [ D.8131 ])) Commands.c:2260 -1
     (nil))
(insn 111 107 112 17 (set (reg/i:SI 0 ax)
        (reg:SI 95 [ <retval> ])) Commands.c:2261 -1
     (nil))
(insn 112 111 0 17 (use (reg/i:SI 0 ax)) Commands.c:2261 -1
     (nil))
