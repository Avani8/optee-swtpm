
;; Function main (main, funcdef_no=2, decl_uid=5217, cgraph_uid=2, symbol_order=3)

Partition 5: size 136 align 16
	in
Partition 2: size 8 align 8
	templateFilename_8
Partition 9: size 8 align 8
	num
Partition 8: size 8 align 8
	submsg
Partition 7: size 8 align 8
	msg
Partition 4: size 8 align 8
	tssContext
Partition 3: size 4 align 4
	rc1_95
Partition 1: size 4 align 4
	i_6
Partition 0: size 4 align 4
	rc_1
Partition 6: size 4 align 4
	policySession

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 56 from 8 to 19.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Redirecting jump 94 from 13 to 19.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Edge 37->39 redirected to 41
Merging block 39 into block 38...
Merged blocks 38 and 39.
Merged 38 and 39 without moving.
Merging block 42 into block 41...
Merged blocks 41 and 42.
Merged 41 and 42 without moving.
Removing jump 297.
Merging block 43 into block 41...
Merged blocks 41 and 43.
Merged 41 and 43 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -212 [0xffffffffffffff2c])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) policytemplate.c:58 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) policytemplate.c:58 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.5327+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:58 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [0 rc+0 S4 A32])
        (const_int 0 [0])) policytemplate.c:59 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [0 tssContext+0 S8 A64])
        (const_int 0 [0])) policytemplate.c:61 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [0 policySession+0 S4 A64])
        (const_int 0 [0])) policytemplate.c:63 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [0 templateFilename+0 S8 A64])
        (const_int 0 [0])) policytemplate.c:64 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 87 [ D.5319 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f79b9cd85a0 stdout>) [0 stdout+0 S8 A64])) policytemplate.c:66 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) policytemplate.c:66 -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) policytemplate.c:66 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (const_int 0 [0])) policytemplate.c:66 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.5319 ])) policytemplate.c:66 -1
     (nil))
(call_insn 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("setvbuf") [flags 0x41]  <function_decl 0x7f79b9d181b0 setvbuf>) [0 setvbuf S1 A8])
            (const_int 0 [0]))) policytemplate.c:66 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 18 17 19 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f79b97ada20 *.LC0>)) policytemplate.c:67 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) policytemplate.c:67 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (const_int 0 [0])) policytemplate.c:67 -1
     (nil))
(call_insn 21 20 22 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7f79b9b8c000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) policytemplate.c:67 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 22 21 23 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) policytemplate.c:71 -1
     (nil))
(jump_insn 23 22 24 2 (set (pc)
        (label_ref 161)) policytemplate.c:71 -1
     (nil)
 -> 161)
(barrier 24 23 167)
(code_label 167 24 25 4 13 "" [1 uses])
(note 25 167 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (set (reg:SI 129)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 i+0 S4 A32])) policytemplate.c:72 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 88 [ D.5320 ])
        (sign_extend:DI (reg:SI 129))) policytemplate.c:72 -1
     (nil))
(insn 28 27 29 4 (parallel [
            (set (reg:DI 89 [ D.5320 ])
                (ashift:DI (reg:DI 88 [ D.5320 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:72 -1
     (nil))
(insn 29 28 30 4 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 argv+0 S8 A64])) policytemplate.c:72 -1
     (nil))
(insn 30 29 31 4 (parallel [
            (set (reg/f:DI 90 [ D.5321 ])
                (plus:DI (reg:DI 89 [ D.5320 ])
                    (reg/f:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:72 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])) [0 argv+0 S8 A64])
            (reg:DI 89 [ D.5320 ]))
        (nil)))
(insn 31 30 32 4 (set (reg/f:DI 91 [ D.5322 ])
        (mem/f:DI (reg/f:DI 90 [ D.5321 ]) [0 *_36+0 S8 A64])) policytemplate.c:72 -1
     (nil))
(insn 32 31 33 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f79b97adab0 *.LC1>)) policytemplate.c:72 -1
     (nil))
(insn 33 32 34 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.5322 ])) policytemplate.c:72 -1
     (nil))
(call_insn/i 34 33 35 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f79b9c200d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policytemplate.c:72 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 35 34 36 4 (set (reg:SI 92 [ D.5323 ])
        (reg:SI 0 ax)) policytemplate.c:72 -1
     (nil))
(insn 36 35 37 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.5323 ])
            (const_int 0 [0]))) policytemplate.c:72 -1
     (nil))
(jump_insn 37 36 38 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) policytemplate.c:72 -1
     (nil)
 -> 67)
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -192 [0xffffffffffffff40])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -192 [0xffffffffffffff40])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:73 -1
     (nil))
(insn 40 39 41 5 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 i+0 S4 A32])) policytemplate.c:74 -1
     (nil))
(insn 41 40 42 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 131)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -212 [0xffffffffffffff2c])) [0 argc+0 S4 A32]))) policytemplate.c:74 -1
     (nil))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) policytemplate.c:74 -1
     (nil)
 -> 58)
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg:SI 132)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 i+0 S4 A32])) policytemplate.c:75 -1
     (nil))
(insn 45 44 46 6 (set (reg:DI 93 [ D.5320 ])
        (sign_extend:DI (reg:SI 132))) policytemplate.c:75 -1
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg:DI 94 [ D.5320 ])
                (ashift:DI (reg:DI 93 [ D.5320 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:75 -1
     (nil))
(insn 47 46 48 6 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 argv+0 S8 A64])) policytemplate.c:75 -1
     (nil))
(insn 48 47 49 6 (parallel [
            (set (reg/f:DI 95 [ D.5321 ])
                (plus:DI (reg:DI 94 [ D.5320 ])
                    (reg/f:DI 133)))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:75 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])) [0 argv+0 S8 A64])
            (reg:DI 94 [ D.5320 ]))
        (nil)))
(insn 49 48 50 6 (set (reg/f:DI 96 [ D.5322 ])
        (mem/f:DI (reg/f:DI 95 [ D.5321 ]) [0 *_42+0 S8 A64])) policytemplate.c:75 -1
     (nil))
(insn 50 49 51 6 (parallel [
            (set (reg:DI 134)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:75 -1
     (nil))
(insn 51 50 52 6 (set (reg:DI 1 dx)
        (reg:DI 134)) policytemplate.c:75 -1
     (nil))
(insn 52 51 53 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f79b97adb40 *.LC2>)) policytemplate.c:75 -1
     (nil))
(insn 53 52 54 6 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.5322 ])) policytemplate.c:75 -1
     (nil))
(insn 54 53 55 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) policytemplate.c:75 -1
     (nil))
(call_insn 55 54 56 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f79b9c29ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policytemplate.c:75 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 56 55 57 6 (set (pc)
        (label_ref:DI 158)) 654 {jump}
     (nil)
 -> 158)
(barrier 57 56 58)
(code_label 58 57 59 7 4 "" [1 uses])
(note 59 58 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f79b97adbd0 *.LC3>)) policytemplate.c:78 -1
     (nil))
(call_insn 61 60 62 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f79b9c29360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policytemplate.c:78 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 62 61 65 7 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f79b9b95000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policytemplate.c:79 -1
     (nil)
    (nil))
(jump_insn 65 62 66 7 (set (pc)
        (label_ref 158)) -1
     (nil)
 -> 158)
(barrier 66 65 67)
(code_label 67 66 68 9 3 "" [1 uses])
(note 68 67 69 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 9 (set (reg:SI 135)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 i+0 S4 A32])) policytemplate.c:82 -1
     (nil))
(insn 70 69 71 9 (set (reg:DI 97 [ D.5320 ])
        (sign_extend:DI (reg:SI 135))) policytemplate.c:82 -1
     (nil))
(insn 71 70 72 9 (parallel [
            (set (reg:DI 98 [ D.5320 ])
                (ashift:DI (reg:DI 97 [ D.5320 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:82 -1
     (nil))
(insn 72 71 73 9 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 argv+0 S8 A64])) policytemplate.c:82 -1
     (nil))
(insn 73 72 74 9 (parallel [
            (set (reg/f:DI 99 [ D.5321 ])
                (plus:DI (reg:DI 98 [ D.5320 ])
                    (reg/f:DI 136)))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:82 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])) [0 argv+0 S8 A64])
            (reg:DI 98 [ D.5320 ]))
        (nil)))
(insn 74 73 75 9 (set (reg/f:DI 100 [ D.5322 ])
        (mem/f:DI (reg/f:DI 99 [ D.5321 ]) [0 *_49+0 S8 A64])) policytemplate.c:82 -1
     (nil))
(insn 75 74 76 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f79b97adc60 *.LC4>)) policytemplate.c:82 -1
     (nil))
(insn 76 75 77 9 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.5322 ])) policytemplate.c:82 -1
     (nil))
(call_insn/i 77 76 78 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f79b9c200d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policytemplate.c:82 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 78 77 79 9 (set (reg:SI 101 [ D.5323 ])
        (reg:SI 0 ax)) policytemplate.c:82 -1
     (nil))
(insn 79 78 80 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.5323 ])
            (const_int 0 [0]))) policytemplate.c:82 -1
     (nil))
(jump_insn 80 79 81 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) policytemplate.c:82 -1
     (nil)
 -> 105)
(note 81 80 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -192 [0xffffffffffffff40])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -192 [0xffffffffffffff40])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:83 -1
     (nil))
(insn 83 82 84 10 (set (reg:SI 137)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 i+0 S4 A32])) policytemplate.c:84 -1
     (nil))
(insn 84 83 85 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 137)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -212 [0xffffffffffffff2c])) [0 argc+0 S4 A32]))) policytemplate.c:84 -1
     (nil))
(jump_insn 85 84 86 10 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) policytemplate.c:84 -1
     (nil)
 -> 96)
(note 86 85 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 11 (set (reg:SI 138)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 i+0 S4 A32])) policytemplate.c:85 -1
     (nil))
(insn 88 87 89 11 (set (reg:DI 102 [ D.5320 ])
        (sign_extend:DI (reg:SI 138))) policytemplate.c:85 -1
     (nil))
(insn 89 88 90 11 (parallel [
            (set (reg:DI 103 [ D.5320 ])
                (ashift:DI (reg:DI 102 [ D.5320 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:85 -1
     (nil))
(insn 90 89 91 11 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 argv+0 S8 A64])) policytemplate.c:85 -1
     (nil))
(insn 91 90 92 11 (parallel [
            (set (reg/f:DI 104 [ D.5321 ])
                (plus:DI (reg:DI 103 [ D.5320 ])
                    (reg/f:DI 139)))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:85 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])) [0 argv+0 S8 A64])
            (reg:DI 103 [ D.5320 ]))
        (nil)))
(insn 92 91 93 11 (set (reg/f:DI 140)
        (mem/f:DI (reg/f:DI 104 [ D.5321 ]) [0 *_55+0 S8 A64])) policytemplate.c:85 -1
     (nil))
(insn 93 92 94 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [0 templateFilename+0 S8 A64])
        (reg/f:DI 140)) policytemplate.c:85 -1
     (nil))
(jump_insn 94 93 95 11 (set (pc)
        (label_ref:DI 158)) 654 {jump}
     (nil)
 -> 158)
(barrier 95 94 96)
(code_label 96 95 97 12 8 "" [1 uses])
(note 97 96 98 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f79b97adcf0 *.LC5>)) policytemplate.c:88 -1
     (nil))
(call_insn 99 98 100 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f79b9c29360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policytemplate.c:88 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 100 99 103 12 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f79b9b95000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policytemplate.c:89 -1
     (nil)
    (nil))
(jump_insn 103 100 104 12 (set (pc)
        (label_ref 158)) -1
     (nil)
 -> 158)
(barrier 104 103 105)
(code_label 105 104 106 14 7 "" [1 uses])
(note 106 105 107 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 14 (set (reg:SI 141)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 i+0 S4 A32])) policytemplate.c:92 -1
     (nil))
(insn 108 107 109 14 (set (reg:DI 105 [ D.5320 ])
        (sign_extend:DI (reg:SI 141))) policytemplate.c:92 -1
     (nil))
(insn 109 108 110 14 (parallel [
            (set (reg:DI 106 [ D.5320 ])
                (ashift:DI (reg:DI 105 [ D.5320 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:92 -1
     (nil))
(insn 110 109 111 14 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 argv+0 S8 A64])) policytemplate.c:92 -1
     (nil))
(insn 111 110 112 14 (parallel [
            (set (reg/f:DI 107 [ D.5321 ])
                (plus:DI (reg:DI 106 [ D.5320 ])
                    (reg/f:DI 142)))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:92 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])) [0 argv+0 S8 A64])
            (reg:DI 106 [ D.5320 ]))
        (nil)))
(insn 112 111 113 14 (set (reg/f:DI 108 [ D.5322 ])
        (mem/f:DI (reg/f:DI 107 [ D.5321 ]) [0 *_61+0 S8 A64])) policytemplate.c:92 -1
     (nil))
(insn 113 112 114 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f79b97add80 *.LC6>)) policytemplate.c:92 -1
     (nil))
(insn 114 113 115 14 (set (reg:DI 5 di)
        (reg/f:DI 108 [ D.5322 ])) policytemplate.c:92 -1
     (nil))
(call_insn/i 115 114 116 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f79b9c200d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policytemplate.c:92 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 116 115 117 14 (set (reg:SI 109 [ D.5323 ])
        (reg:SI 0 ax)) policytemplate.c:92 -1
     (nil))
(insn 117 116 118 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.5323 ])
            (const_int 0 [0]))) policytemplate.c:92 -1
     (nil))
(jump_insn 118 117 119 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) policytemplate.c:92 -1
     (nil)
 -> 123)
(note 119 118 120 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(call_insn 120 119 121 15 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f79b9b95000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policytemplate.c:93 -1
     (nil)
    (nil))
(jump_insn 121 120 122 15 (set (pc)
        (label_ref 158)) -1
     (nil)
 -> 158)
(barrier 122 121 123)
(code_label 123 122 124 16 10 "" [1 uses])
(note 124 123 125 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 16 (set (reg:SI 143)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 i+0 S4 A32])) policytemplate.c:95 -1
     (nil))
(insn 126 125 127 16 (set (reg:DI 110 [ D.5320 ])
        (sign_extend:DI (reg:SI 143))) policytemplate.c:95 -1
     (nil))
(insn 127 126 128 16 (parallel [
            (set (reg:DI 111 [ D.5320 ])
                (ashift:DI (reg:DI 110 [ D.5320 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:95 -1
     (nil))
(insn 128 127 129 16 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 argv+0 S8 A64])) policytemplate.c:95 -1
     (nil))
(insn 129 128 130 16 (parallel [
            (set (reg/f:DI 112 [ D.5321 ])
                (plus:DI (reg:DI 111 [ D.5320 ])
                    (reg/f:DI 144)))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:95 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])) [0 argv+0 S8 A64])
            (reg:DI 111 [ D.5320 ]))
        (nil)))
(insn 130 129 131 16 (set (reg/f:DI 113 [ D.5322 ])
        (mem/f:DI (reg/f:DI 112 [ D.5321 ]) [0 *_67+0 S8 A64])) policytemplate.c:95 -1
     (nil))
(insn 131 130 132 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f79b97ade10 *.LC7>)) policytemplate.c:95 -1
     (nil))
(insn 132 131 133 16 (set (reg:DI 5 di)
        (reg/f:DI 113 [ D.5322 ])) policytemplate.c:95 -1
     (nil))
(call_insn/i 133 132 134 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f79b9c200d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policytemplate.c:95 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 134 133 135 16 (set (reg:SI 114 [ D.5323 ])
        (reg:SI 0 ax)) policytemplate.c:95 -1
     (nil))
(insn 135 134 136 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 114 [ D.5323 ])
            (const_int 0 [0]))) policytemplate.c:95 -1
     (nil))
(jump_insn 136 135 137 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) policytemplate.c:95 -1
     (nil)
 -> 145)
(note 137 136 138 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 17 (set (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f79b99e8090 verbose>) [0 verbose+0 S4 A32])
        (const_int 1 [0x1])) policytemplate.c:96 -1
     (nil))
(insn 139 138 140 17 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f79b97adea0 *.LC8>)) policytemplate.c:97 -1
     (nil))
(insn 140 139 141 17 (set (reg:SI 4 si)
        (const_int 1 [0x1])) policytemplate.c:97 -1
     (nil))
(insn 141 140 142 17 (set (reg:DI 5 di)
        (const_int 0 [0])) policytemplate.c:97 -1
     (nil))
(call_insn 142 141 143 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7f79b9b8c000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) policytemplate.c:97 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 143 142 144 17 (set (pc)
        (label_ref 158)) -1
     (nil)
 -> 158)
(barrier 144 143 145)
(code_label 145 144 146 18 11 "" [1 uses])
(note 146 145 147 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 18 (set (reg:SI 145)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 i+0 S4 A32])) policytemplate.c:100 -1
     (nil))
(insn 148 147 149 18 (set (reg:DI 115 [ D.5320 ])
        (sign_extend:DI (reg:SI 145))) policytemplate.c:100 -1
     (nil))
(insn 149 148 150 18 (parallel [
            (set (reg:DI 116 [ D.5320 ])
                (ashift:DI (reg:DI 115 [ D.5320 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:100 -1
     (nil))
(insn 150 149 151 18 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 argv+0 S8 A64])) policytemplate.c:100 -1
     (nil))
(insn 151 150 152 18 (parallel [
            (set (reg/f:DI 117 [ D.5321 ])
                (plus:DI (reg:DI 116 [ D.5320 ])
                    (reg/f:DI 146)))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:100 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])) [0 argv+0 S8 A64])
            (reg:DI 116 [ D.5320 ]))
        (nil)))
(insn 152 151 153 18 (set (reg/f:DI 118 [ D.5322 ])
        (mem/f:DI (reg/f:DI 117 [ D.5321 ]) [0 *_74+0 S8 A64])) policytemplate.c:100 -1
     (nil))
(insn 153 152 154 18 (set (reg:DI 4 si)
        (reg/f:DI 118 [ D.5322 ])) policytemplate.c:100 -1
     (nil))
(insn 154 153 155 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f79b97adf30 *.LC9>)) policytemplate.c:100 -1
     (nil))
(insn 155 154 156 18 (set (reg:QI 0 ax)
        (const_int 0 [0])) policytemplate.c:100 -1
     (nil))
(call_insn 156 155 157 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f79b9c26ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policytemplate.c:100 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(call_insn 157 156 158 18 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f79b9b95000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policytemplate.c:101 -1
     (nil)
    (nil))
(code_label 158 157 159 19 6 "" [6 uses])
(note 159 158 160 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -192 [0xffffffffffffff40])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -192 [0xffffffffffffff40])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:71 -1
     (nil))
(code_label 161 160 162 20 2 "" [1 uses])
(note 162 161 163 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 20 (set (reg:SI 147)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 i+0 S4 A32])) policytemplate.c:71 -1
     (nil))
(insn 164 163 165 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 147)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -212 [0xffffffffffffff2c])) [0 argc+0 S4 A32]))) policytemplate.c:71 -1
     (nil))
(jump_insn 165 164 166 20 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) policytemplate.c:71 -1
     (nil)
 -> 170)
(note 166 165 168 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 168 166 169 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policytemplate.c:71 -1
     (nil))
(jump_insn 169 168 170 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 167)
            (pc))) policytemplate.c:71 -1
     (nil)
 -> 167)
(code_label 170 169 171 22 12 "" [1 uses])
(note 171 170 172 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 22 (set (reg:SI 119 [ D.5324 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [0 policySession+0 S4 A64])) policytemplate.c:104 -1
     (nil))
(insn 173 172 174 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ D.5324 ])
            (const_int 0 [0]))) policytemplate.c:104 -1
     (nil))
(jump_insn 174 173 175 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) policytemplate.c:104 -1
     (nil)
 -> 179)
(note 175 174 176 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 23 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f79b97c2000 *.LC10>)) policytemplate.c:105 -1
     (nil))
(call_insn 177 176 178 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f79b9c29360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policytemplate.c:105 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 178 177 179 23 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f79b9b95000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policytemplate.c:106 -1
     (nil)
    (nil))
(code_label 179 178 180 24 14 "" [1 uses])
(note 180 179 181 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -152 [0xffffffffffffff68])) [0 templateFilename+0 S8 A64])
            (const_int 0 [0]))) policytemplate.c:108 -1
     (nil))
(jump_insn 182 181 183 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) policytemplate.c:108 -1
     (nil)
 -> 187)
(note 183 182 184 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f79b97c2090 *.LC11>)) policytemplate.c:109 -1
     (nil))
(call_insn 185 184 186 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f79b9c29360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policytemplate.c:109 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 186 185 187 25 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f79b9b95000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policytemplate.c:110 -1
     (nil)
    (nil))
(code_label 187 186 188 26 15 "" [1 uses])
(note 188 187 189 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policytemplate.c:112 -1
     (nil))
(jump_insn 190 189 191 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) policytemplate.c:112 -1
     (nil)
 -> 194)
(note 191 190 192 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 27 (set (reg:SI 120 [ D.5324 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [0 policySession+0 S4 A64])) policytemplate.c:113 -1
     (nil))
(insn 193 192 194 27 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [0 in.policySession+0 S4 A64])
        (reg:SI 120 [ D.5324 ])) policytemplate.c:113 -1
     (nil))
(code_label 194 193 195 28 16 "" [1 uses])
(note 195 194 196 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policytemplate.c:115 -1
     (nil))
(jump_insn 197 196 198 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 208)
            (pc))) policytemplate.c:115 -1
     (nil)
 -> 208)
(note 198 197 199 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 199 198 200 29 (set (reg:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [0 templateFilename+0 S8 A64])) policytemplate.c:116 -1
     (nil))
(insn 200 199 201 29 (parallel [
            (set (reg:DI 149)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:116 -1
     (nil))
(insn 201 200 202 29 (parallel [
            (set (reg:DI 150)
                (plus:DI (reg:DI 149)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:116 -1
     (nil))
(insn 202 201 203 29 (set (reg:DI 1 dx)
        (reg:DI 148)) policytemplate.c:116 -1
     (nil))
(insn 203 202 204 29 (set (reg:SI 4 si)
        (const_int 128 [0x80])) policytemplate.c:116 -1
     (nil))
(insn 204 203 205 29 (set (reg:DI 5 di)
        (reg:DI 150)) policytemplate.c:116 -1
     (nil))
(call_insn 205 204 206 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_Read2B") [flags 0x41]  <function_decl 0x7f79b9b8cca8 TSS_File_Read2B>) [0 TSS_File_Read2B S1 A8])
            (const_int 0 [0]))) policytemplate.c:116 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 206 205 207 29 (set (reg:SI 151)
        (reg:SI 0 ax)) policytemplate.c:116 -1
     (nil))
(insn 207 206 208 29 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [0 rc+0 S4 A32])
        (reg:SI 151)) policytemplate.c:116 -1
     (nil))
(code_label 208 207 209 30 17 "" [1 uses])
(note 209 208 210 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policytemplate.c:121 -1
     (nil))
(jump_insn 211 210 212 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 218)
            (pc))) policytemplate.c:121 -1
     (nil)
 -> 218)
(note 212 211 213 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 213 212 214 31 (parallel [
            (set (reg:DI 152)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -184 [0xffffffffffffff48])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:122 -1
     (nil))
(insn 214 213 215 31 (set (reg:DI 5 di)
        (reg:DI 152)) policytemplate.c:122 -1
     (nil))
(call_insn 215 214 216 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Create") [flags 0x41]  <function_decl 0x7f79b9b84ca8 TSS_Create>) [0 TSS_Create S1 A8])
            (const_int 0 [0]))) policytemplate.c:122 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 216 215 217 31 (set (reg:SI 153)
        (reg:SI 0 ax)) policytemplate.c:122 -1
     (nil))
(insn 217 216 218 31 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [0 rc+0 S4 A32])
        (reg:SI 153)) policytemplate.c:122 -1
     (nil))
(code_label 218 217 219 32 18 "" [1 uses])
(note 219 218 220 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policytemplate.c:125 -1
     (nil))
(jump_insn 221 220 222 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 238)
            (pc))) policytemplate.c:125 -1
     (nil)
 -> 238)
(note 222 221 223 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 33 (set (reg/f:DI 121 [ D.5325 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [0 tssContext+0 S8 A64])) policytemplate.c:126 -1
     (nil))
(insn 224 223 225 33 (parallel [
            (set (reg:DI 154)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:126 -1
     (nil))
(insn 225 224 226 33 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) policytemplate.c:126 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 226 225 227 33 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policytemplate.c:126 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 227 226 228 33 (set (reg:SI 38 r9)
        (const_int 1073741831 [0x40000007])) policytemplate.c:126 -1
     (nil))
(insn 228 227 229 33 (set (reg:SI 37 r8)
        (const_int 400 [0x190])) policytemplate.c:126 -1
     (nil))
(insn 229 228 230 33 (set (reg:DI 2 cx)
        (const_int 0 [0])) policytemplate.c:126 -1
     (nil))
(insn 230 229 231 33 (set (reg:DI 1 dx)
        (reg:DI 154)) policytemplate.c:126 -1
     (nil))
(insn 231 230 232 33 (set (reg:DI 4 si)
        (const_int 0 [0])) policytemplate.c:126 -1
     (nil))
(insn 232 231 233 33 (set (reg:DI 5 di)
        (reg/f:DI 121 [ D.5325 ])) policytemplate.c:126 -1
     (nil))
(insn 233 232 234 33 (set (reg:QI 0 ax)
        (const_int 0 [0])) policytemplate.c:126 -1
     (nil))
(call_insn 234 233 235 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7f79b9b84e58 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 16 [0x10]))) policytemplate.c:126 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 235 234 236 33 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:126 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 236 235 237 33 (set (reg:SI 155)
        (reg:SI 0 ax)) policytemplate.c:126 -1
     (nil))
(insn 237 236 238 33 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [0 rc+0 S4 A32])
        (reg:SI 155)) policytemplate.c:126 -1
     (nil))
(code_label 238 237 239 34 19 "" [1 uses])
(note 239 238 240 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 34 (set (reg/f:DI 122 [ D.5325 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [0 tssContext+0 S8 A64])) policytemplate.c:134 -1
     (nil))
(insn 241 240 242 34 (set (reg:DI 5 di)
        (reg/f:DI 122 [ D.5325 ])) policytemplate.c:134 -1
     (nil))
(call_insn 242 241 243 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Delete") [flags 0x41]  <function_decl 0x7f79b9b84d80 TSS_Delete>) [0 TSS_Delete S1 A8])
            (const_int 0 [0]))) policytemplate.c:134 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 243 242 244 34 (set (reg:SI 156)
        (reg:SI 0 ax)) policytemplate.c:134 -1
     (nil))
(insn 244 243 245 34 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -188 [0xffffffffffffff44])) [0 rc1+0 S4 A32])
        (reg:SI 156)) policytemplate.c:134 -1
     (nil))
(insn 245 244 246 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policytemplate.c:135 -1
     (nil))
(jump_insn 246 245 247 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 250)
            (pc))) policytemplate.c:135 -1
     (nil)
 -> 250)
(note 247 246 248 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 35 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -188 [0xffffffffffffff44])) [0 rc1+0 S4 A32])) policytemplate.c:136 -1
     (nil))
(insn 249 248 250 35 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [0 rc+0 S4 A32])
        (reg:SI 157)) policytemplate.c:136 -1
     (nil))
(code_label 250 249 251 36 20 "" [1 uses])
(note 251 250 252 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 252 251 253 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -196 [0xffffffffffffff3c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policytemplate.c:139 -1
     (nil))
(jump_insn 253 252 254 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 265)
            (pc))) policytemplate.c:139 -1
     (nil)
 -> 265)
(note 254 253 255 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 37 (set (reg:SI 123 [ D.5323 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f79b99e8090 verbose>) [0 verbose+0 S4 A32])) policytemplate.c:140 -1
     (nil))
(insn 256 255 257 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 123 [ D.5323 ])
            (const_int 0 [0]))) policytemplate.c:140 -1
     (nil))
(jump_insn 257 256 258 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 291)
            (pc))) policytemplate.c:140 612 {*jcc_1}
     (nil)
 -> 291)
(note 258 257 259 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 38 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f79b97c2120 *.LC12>)) policytemplate.c:140 -1
     (nil))
(call_insn 260 259 263 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f79b9c29360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policytemplate.c:140 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 263 260 264 38 (set (pc)
        (label_ref 291)) -1
     (nil)
 -> 291)
(barrier 264 263 265)
(code_label 265 264 266 40 21 "" [1 uses])
(note 266 265 267 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 40 (set (reg:SI 158)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [0 rc+0 S4 A32])) policytemplate.c:146 -1
     (nil))
(insn 268 267 269 40 (set (reg:SI 4 si)
        (reg:SI 158)) policytemplate.c:146 -1
     (nil))
(insn 269 268 270 40 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f79b97c21b0 *.LC13>)) policytemplate.c:146 -1
     (nil))
(insn 270 269 271 40 (set (reg:QI 0 ax)
        (const_int 0 [0])) policytemplate.c:146 -1
     (nil))
(call_insn 271 270 272 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f79b9c26ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policytemplate.c:146 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 272 271 273 40 (set (reg:SI 159)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [0 rc+0 S4 A32])) policytemplate.c:147 -1
     (nil))
(insn 273 272 274 40 (parallel [
            (set (reg:DI 160)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:147 -1
     (nil))
(insn 274 273 275 40 (parallel [
            (set (reg:DI 161)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:147 -1
     (nil))
(insn 275 274 276 40 (parallel [
            (set (reg:DI 162)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) policytemplate.c:147 -1
     (nil))
(insn 276 275 277 40 (set (reg:SI 2 cx)
        (reg:SI 159)) policytemplate.c:147 -1
     (nil))
(insn 277 276 278 40 (set (reg:DI 1 dx)
        (reg:DI 160)) policytemplate.c:147 -1
     (nil))
(insn 278 277 279 40 (set (reg:DI 4 si)
        (reg:DI 161)) policytemplate.c:147 -1
     (nil))
(insn 279 278 280 40 (set (reg:DI 5 di)
        (reg:DI 162)) policytemplate.c:147 -1
     (nil))
(call_insn 280 279 281 40 (call (mem:QI (symbol_ref:DI ("TSS_ResponseCode_toString") [flags 0x41]  <function_decl 0x7f79b9b8ce58 TSS_ResponseCode_toString>) [0 TSS_ResponseCode_toString S1 A8])
        (const_int 0 [0])) policytemplate.c:147 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 281 280 282 40 (set (reg/f:DI 124 [ D.5326 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [0 num+0 S8 A64])) policytemplate.c:148 -1
     (nil))
(insn 282 281 283 40 (set (reg/f:DI 125 [ D.5326 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [0 submsg+0 S8 A64])) policytemplate.c:148 -1
     (nil))
(insn 283 282 284 40 (set (reg/f:DI 126 [ D.5326 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [0 msg+0 S8 A64])) policytemplate.c:148 -1
     (nil))
(insn 284 283 285 40 (set (reg:DI 2 cx)
        (reg/f:DI 124 [ D.5326 ])) policytemplate.c:148 -1
     (nil))
(insn 285 284 286 40 (set (reg:DI 1 dx)
        (reg/f:DI 125 [ D.5326 ])) policytemplate.c:148 -1
     (nil))
(insn 286 285 287 40 (set (reg:DI 4 si)
        (reg/f:DI 126 [ D.5326 ])) policytemplate.c:148 -1
     (nil))
(insn 287 286 288 40 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f79b97c2240 *.LC14>)) policytemplate.c:148 -1
     (nil))
(insn 288 287 289 40 (set (reg:QI 0 ax)
        (const_int 0 [0])) policytemplate.c:148 -1
     (nil))
(call_insn 289 288 290 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f79b9c26ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policytemplate.c:148 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 290 289 291 40 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) policytemplate.c:149 -1
     (nil))
(code_label 291 290 292 41 23 "" [2 uses])
(note 292 291 293 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 296 41 (set (reg:SI 127 [ D.5323 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [0 rc+0 S4 A32])) policytemplate.c:151 -1
     (nil))
(insn 296 293 300 41 (set (reg:SI 128 [ <retval> ])
        (reg:SI 127 [ D.5323 ])) -1
     (nil))
(insn 300 296 301 41 (set (reg/i:SI 0 ax)
        (reg:SI 128 [ <retval> ])) policytemplate.c:152 -1
     (nil))
(insn 301 300 302 41 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.5327+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) policytemplate.c:152 -1
     (nil))
(jump_insn 302 301 308 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 305)
            (pc))) policytemplate.c:152 -1
     (nil)
 -> 305)
(note 308 302 303 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(call_insn 303 308 304 44 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f79b9b95bd0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) policytemplate.c:152 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 304 303 305)
(code_label 305 304 309 45 25 "" [1 uses])
(note 309 305 306 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 306 309 0 45 (use (reg/i:SI 0 ax)) policytemplate.c:152 -1
     (nil))

;; Function printUsage (printUsage, funcdef_no=3, decl_uid=5213, cgraph_uid=3, symbol_order=4)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policytemplate.c:158 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f79b9c29000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policytemplate.c:158 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f79b97ad360 *.LC15>)) policytemplate.c:159 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f79b9c29360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policytemplate.c:159 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policytemplate.c:160 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f79b9c29000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policytemplate.c:160 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f79b97cdcf0 *.LC16>)) policytemplate.c:161 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f79b9c29360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policytemplate.c:161 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policytemplate.c:162 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f79b9c29000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policytemplate.c:162 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f79b97cdd80 *.LC17>)) policytemplate.c:163 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f79b9c29360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policytemplate.c:163 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f79b97cde10 *.LC18>)) policytemplate.c:164 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f79b9c29360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policytemplate.c:164 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) policytemplate.c:165 -1
     (nil))
(call_insn 20 19 21 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f79b9c3c000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) policytemplate.c:165 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 21 20 0)
