
;; Function main (main, funcdef_no=2, decl_uid=6074, cgraph_uid=2, symbol_order=3)

Partition 6: size 1048 align 16
	in
Partition 8: size 64 align 16
	pHashListFilename
Partition 17: size 8 align 8
	num
Partition 16: size 8 align 8
	submsg
Partition 15: size 8 align 8
	msg
Partition 5: size 8 align 8
	tssContext
Partition 4: size 4 align 4
	rc1_200
Partition 3: size 4 align 4
	count_9
Partition 2: size 4 align 4
	j_8
Partition 1: size 4 align 4
	i_6
Partition 0: size 4 align 4
	rc_1
Partition 14: size 4 align 4
	sessionAttributes2
Partition 13: size 4 align 4
	sessionHandle2
Partition 12: size 4 align 4
	sessionAttributes1
Partition 11: size 4 align 4
	sessionHandle1
Partition 10: size 4 align 4
	sessionAttributes0
Partition 9: size 4 align 4
	sessionHandle0
Partition 7: size 4 align 4
	policySession

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 62 from 8 to 52.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Redirecting jump 105 from 14 to 52.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.
Redirecting jump 114 from 16 to 52.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.
Edge 22->24 redirected to 52
Merging block 24 into block 23...
Merged blocks 23 and 24.
Merged 23 and 24 without moving.
Redirecting jump 192 from 26 to 52.
Merging block 26 into block 25...
Merged blocks 25 and 26.
Merged 25 and 26 without moving.
Edge 32->34 redirected to 52
Merging block 34 into block 33...
Merged blocks 33 and 34.
Merged 33 and 34 without moving.
Redirecting jump 270 from 36 to 52.
Merging block 36 into block 35...
Merged blocks 35 and 36.
Merged 35 and 36 without moving.
Edge 42->44 redirected to 52
Merging block 44 into block 43...
Merged blocks 43 and 44.
Merged 43 and 44 without moving.
Redirecting jump 348 from 46 to 52.
Merging block 46 into block 45...
Merged blocks 45 and 46.
Merged 45 and 46 without moving.
Edge 72->74 redirected to 76
Merging block 74 into block 73...
Merged blocks 73 and 74.
Merged 73 and 74 without moving.
Merging block 77 into block 76...
Merged blocks 76 and 77.
Merged 76 and 77 without moving.
Removing jump 588.
Merging block 78 into block 76...
Merged blocks 76 and 78.
Merged 76 and 78 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1204 [0xfffffffffffffb4c])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) policyor.c:59 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) policyor.c:59 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.6282+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:59 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1172 [0xfffffffffffffb6c])) [0 rc+0 S4 A32])
        (const_int 0 [0])) policyor.c:60 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1152 [0xfffffffffffffb80])) [0 tssContext+0 S8 A64])
        (const_int 0 [0])) policyor.c:62 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1200 [0xfffffffffffffb50])) [0 policySession+0 S4 A64])
        (const_int 0 [0])) policyor.c:65 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1160 [0xfffffffffffffb78])) [0 count+0 S4 A32])
        (const_int 0 [0])) policyor.c:67 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1196 [0xfffffffffffffb54])) [0 sessionHandle0+0 S4 A32])
        (const_int 1073741831 [0x40000007])) policyor.c:68 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1192 [0xfffffffffffffb58])) [0 sessionAttributes0+0 S4 A64])
        (const_int 0 [0])) policyor.c:69 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1188 [0xfffffffffffffb5c])) [0 sessionHandle1+0 S4 A32])
        (const_int 1073741831 [0x40000007])) policyor.c:70 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1184 [0xfffffffffffffb60])) [0 sessionAttributes1+0 S4 A64])
        (const_int 0 [0])) policyor.c:71 -1
     (nil))
(insn 16 15 17 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1180 [0xfffffffffffffb64])) [0 sessionHandle2+0 S4 A32])
        (const_int 1073741831 [0x40000007])) policyor.c:72 -1
     (nil))
(insn 17 16 18 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1176 [0xfffffffffffffb68])) [0 sessionAttributes2+0 S4 A64])
        (const_int 0 [0])) policyor.c:73 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 87 [ D.6273 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f972b0f85a0 stdout>) [0 stdout+0 S8 A64])) policyor.c:75 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) policyor.c:75 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) policyor.c:75 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (const_int 0 [0])) policyor.c:75 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.6273 ])) policyor.c:75 -1
     (nil))
(call_insn 23 22 24 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("setvbuf") [flags 0x41]  <function_decl 0x7f972b1381b0 setvbuf>) [0 setvbuf S1 A8])
            (const_int 0 [0]))) policyor.c:75 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 24 23 25 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f972ac33a20 *.LC0>)) policyor.c:76 -1
     (nil))
(insn 25 24 26 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) policyor.c:76 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (const_int 0 [0])) policyor.c:76 -1
     (nil))
(call_insn 27 26 28 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7f972afac000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) policyor.c:76 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 28 27 29 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) policyor.c:80 -1
     (nil))
(jump_insn 29 28 30 2 (set (pc)
        (label_ref 415)) policyor.c:80 -1
     (nil)
 -> 415)
(barrier 30 29 421)
(code_label 421 30 31 4 33 "" [1 uses])
(note 31 421 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:81 -1
     (nil))
(insn 33 32 34 4 (set (reg:DI 88 [ D.6274 ])
        (sign_extend:DI (reg:SI 180))) policyor.c:81 -1
     (nil))
(insn 34 33 35 4 (parallel [
            (set (reg:DI 89 [ D.6274 ])
                (ashift:DI (reg:DI 88 [ D.6274 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:81 -1
     (nil))
(insn 35 34 36 4 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])) policyor.c:81 -1
     (nil))
(insn 36 35 37 4 (parallel [
            (set (reg/f:DI 90 [ D.6275 ])
                (plus:DI (reg:DI 89 [ D.6274 ])
                    (reg/f:DI 181)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:81 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])
            (reg:DI 89 [ D.6274 ]))
        (nil)))
(insn 37 36 38 4 (set (reg/f:DI 91 [ D.6276 ])
        (mem/f:DI (reg/f:DI 90 [ D.6275 ]) [0 *_54+0 S8 A64])) policyor.c:81 -1
     (nil))
(insn 38 37 39 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f972ac33ab0 *.LC1>)) policyor.c:81 -1
     (nil))
(insn 39 38 40 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.6276 ])) policyor.c:81 -1
     (nil))
(call_insn/i 40 39 41 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f972b0400d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyor.c:81 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 41 40 42 4 (set (reg:SI 92 [ D.6277 ])
        (reg:SI 0 ax)) policyor.c:81 -1
     (nil))
(insn 42 41 43 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.6277 ])
            (const_int 0 [0]))) policyor.c:81 -1
     (nil))
(jump_insn 43 42 44 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) policyor.c:81 -1
     (nil)
 -> 73)
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:82 -1
     (nil))
(insn 46 45 47 5 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:83 -1
     (nil))
(insn 47 46 48 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 182)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1204 [0xfffffffffffffb4c])) [0 argc+0 S4 A32]))) policyor.c:83 -1
     (nil))
(jump_insn 48 47 49 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) policyor.c:83 -1
     (nil)
 -> 64)
(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 6 (set (reg:SI 183)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:84 -1
     (nil))
(insn 51 50 52 6 (set (reg:DI 93 [ D.6274 ])
        (sign_extend:DI (reg:SI 183))) policyor.c:84 -1
     (nil))
(insn 52 51 53 6 (parallel [
            (set (reg:DI 94 [ D.6274 ])
                (ashift:DI (reg:DI 93 [ D.6274 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:84 -1
     (nil))
(insn 53 52 54 6 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])) policyor.c:84 -1
     (nil))
(insn 54 53 55 6 (parallel [
            (set (reg/f:DI 95 [ D.6275 ])
                (plus:DI (reg:DI 94 [ D.6274 ])
                    (reg/f:DI 184)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:84 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])
            (reg:DI 94 [ D.6274 ]))
        (nil)))
(insn 55 54 56 6 (set (reg/f:DI 96 [ D.6276 ])
        (mem/f:DI (reg/f:DI 95 [ D.6275 ]) [0 *_60+0 S8 A64])) policyor.c:84 -1
     (nil))
(insn 56 55 57 6 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1200 [0xfffffffffffffb50])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:84 -1
     (nil))
(insn 57 56 58 6 (set (reg:DI 1 dx)
        (reg:DI 185)) policyor.c:84 -1
     (nil))
(insn 58 57 59 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f972ac33b40 *.LC2>)) policyor.c:84 -1
     (nil))
(insn 59 58 60 6 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.6276 ])) policyor.c:84 -1
     (nil))
(insn 60 59 61 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyor.c:84 -1
     (nil))
(call_insn 61 60 62 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f972b049ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policyor.c:84 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 62 61 63 6 (set (pc)
        (label_ref:DI 412)) 654 {jump}
     (nil)
 -> 412)
(barrier 63 62 64)
(code_label 64 63 65 7 4 "" [1 uses])
(note 65 64 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f972ac33bd0 *.LC3>)) policyor.c:87 -1
     (nil))
(call_insn 67 66 68 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:87 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 68 67 71 7 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f972ac060d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyor.c:88 -1
     (nil)
    (nil))
(jump_insn 71 68 72 7 (set (pc)
        (label_ref 412)) -1
     (nil)
 -> 412)
(barrier 72 71 73)
(code_label 73 72 74 9 3 "" [1 uses])
(note 74 73 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 9 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:91 -1
     (nil))
(insn 76 75 77 9 (set (reg:DI 97 [ D.6274 ])
        (sign_extend:DI (reg:SI 186))) policyor.c:91 -1
     (nil))
(insn 77 76 78 9 (parallel [
            (set (reg:DI 98 [ D.6274 ])
                (ashift:DI (reg:DI 97 [ D.6274 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:91 -1
     (nil))
(insn 78 77 79 9 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])) policyor.c:91 -1
     (nil))
(insn 79 78 80 9 (parallel [
            (set (reg/f:DI 99 [ D.6275 ])
                (plus:DI (reg:DI 98 [ D.6274 ])
                    (reg/f:DI 187)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:91 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])
            (reg:DI 98 [ D.6274 ]))
        (nil)))
(insn 80 79 81 9 (set (reg/f:DI 100 [ D.6276 ])
        (mem/f:DI (reg/f:DI 99 [ D.6275 ]) [0 *_67+0 S8 A64])) policyor.c:91 -1
     (nil))
(insn 81 80 82 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f972ac33c60 *.LC4>)) policyor.c:91 -1
     (nil))
(insn 82 81 83 9 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.6276 ])) policyor.c:91 -1
     (nil))
(call_insn/i 83 82 84 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f972b0400d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyor.c:91 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 84 83 85 9 (set (reg:SI 101 [ D.6277 ])
        (reg:SI 0 ax)) policyor.c:91 -1
     (nil))
(insn 85 84 86 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.6277 ])
            (const_int 0 [0]))) policyor.c:91 -1
     (nil))
(jump_insn 86 85 87 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) policyor.c:91 -1
     (nil)
 -> 125)
(note 87 86 88 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:92 -1
     (nil))
(insn 89 88 90 10 (set (reg:SI 188)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:93 -1
     (nil))
(insn 90 89 91 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 188)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1204 [0xfffffffffffffb4c])) [0 argc+0 S4 A32]))) policyor.c:93 -1
     (nil))
(jump_insn 91 90 92 10 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) policyor.c:93 -1
     (nil)
 -> 116)
(note 92 91 93 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 11 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1160 [0xfffffffffffffb78])) [0 count+0 S4 A32])
            (const_int 7 [0x7]))) policyor.c:94 -1
     (nil))
(jump_insn 94 93 95 11 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) policyor.c:94 -1
     (nil)
 -> 107)
(note 95 94 96 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 12 (set (reg:SI 189)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:95 -1
     (nil))
(insn 97 96 98 12 (set (reg:DI 102 [ D.6274 ])
        (sign_extend:DI (reg:SI 189))) policyor.c:95 -1
     (nil))
(insn 98 97 99 12 (parallel [
            (set (reg:DI 103 [ D.6274 ])
                (ashift:DI (reg:DI 102 [ D.6274 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:95 -1
     (nil))
(insn 99 98 100 12 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])) policyor.c:95 -1
     (nil))
(insn 100 99 101 12 (parallel [
            (set (reg/f:DI 104 [ D.6275 ])
                (plus:DI (reg:DI 103 [ D.6274 ])
                    (reg/f:DI 190)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:95 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])
            (reg:DI 103 [ D.6274 ]))
        (nil)))
(insn 101 100 102 12 (set (reg/f:DI 105 [ D.6276 ])
        (mem/f:DI (reg/f:DI 104 [ D.6275 ]) [0 *_73+0 S8 A64])) policyor.c:95 -1
     (nil))
(insn 102 101 103 12 (set (reg:DI 191)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1160 [0xfffffffffffffb78])) [0 count+0 S4 A32]))) policyor.c:95 -1
     (nil))
(insn 103 102 104 12 (set (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 191)
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -1120 [0xfffffffffffffba0])) [0 pHashListFilename S8 A64])
        (reg/f:DI 105 [ D.6276 ])) policyor.c:95 -1
     (nil))
(insn 104 103 105 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1160 [0xfffffffffffffb78])) [0 count+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1160 [0xfffffffffffffb78])) [0 count+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:96 -1
     (nil))
(jump_insn 105 104 106 12 (set (pc)
        (label_ref:DI 412)) 654 {jump}
     (nil)
 -> 412)
(barrier 106 105 107)
(code_label 107 106 108 13 9 "" [1 uses])
(note 108 107 109 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 13 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f972ac33cf0 *.LC5>)) policyor.c:99 -1
     (nil))
(call_insn 110 109 111 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:99 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 111 110 114 13 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f972ac060d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyor.c:100 -1
     (nil)
    (nil))
(jump_insn 114 111 115 13 (set (pc)
        (label_ref:DI 412)) 654 {jump}
     (nil)
 -> 412)
(barrier 115 114 116)
(code_label 116 115 117 15 8 "" [1 uses])
(note 117 116 118 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f972ac33d80 *.LC6>)) policyor.c:104 -1
     (nil))
(call_insn 119 118 120 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:104 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 120 119 123 15 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f972ac060d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyor.c:105 -1
     (nil)
    (nil))
(jump_insn 123 120 124 15 (set (pc)
        (label_ref 412)) -1
     (nil)
 -> 412)
(barrier 124 123 125)
(code_label 125 124 126 17 7 "" [1 uses])
(note 126 125 127 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 17 (set (reg:SI 192)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:108 -1
     (nil))
(insn 128 127 129 17 (set (reg:DI 106 [ D.6274 ])
        (sign_extend:DI (reg:SI 192))) policyor.c:108 -1
     (nil))
(insn 129 128 130 17 (parallel [
            (set (reg:DI 107 [ D.6274 ])
                (ashift:DI (reg:DI 106 [ D.6274 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:108 -1
     (nil))
(insn 130 129 131 17 (set (reg/f:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])) policyor.c:108 -1
     (nil))
(insn 131 130 132 17 (parallel [
            (set (reg/f:DI 108 [ D.6275 ])
                (plus:DI (reg:DI 107 [ D.6274 ])
                    (reg/f:DI 193)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:108 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])
            (reg:DI 107 [ D.6274 ]))
        (nil)))
(insn 132 131 133 17 (set (reg/f:DI 109 [ D.6276 ])
        (mem/f:DI (reg/f:DI 108 [ D.6275 ]) [0 *_83+0 S8 A64])) policyor.c:108 -1
     (nil))
(insn 133 132 134 17 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f972ac33e10 *.LC7>)) policyor.c:108 -1
     (nil))
(insn 134 133 135 17 (set (reg:DI 5 di)
        (reg/f:DI 109 [ D.6276 ])) policyor.c:108 -1
     (nil))
(call_insn/i 135 134 136 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f972b0400d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyor.c:108 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 136 135 137 17 (set (reg:SI 110 [ D.6277 ])
        (reg:SI 0 ax)) policyor.c:108 -1
     (nil))
(insn 137 136 138 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 110 [ D.6277 ])
            (const_int 0 [0]))) policyor.c:108 -1
     (nil))
(jump_insn 138 137 139 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 203)
            (pc))) policyor.c:108 -1
     (nil)
 -> 203)
(note 139 138 140 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:109 -1
     (nil))
(insn 141 140 142 18 (set (reg:SI 194)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:110 -1
     (nil))
(insn 142 141 143 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 194)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1204 [0xfffffffffffffb4c])) [0 argc+0 S4 A32]))) policyor.c:110 -1
     (nil))
(jump_insn 143 142 144 18 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) policyor.c:110 -1
     (nil)
 -> 159)
(note 144 143 145 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 19 (set (reg:SI 195)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:111 -1
     (nil))
(insn 146 145 147 19 (set (reg:DI 111 [ D.6274 ])
        (sign_extend:DI (reg:SI 195))) policyor.c:111 -1
     (nil))
(insn 147 146 148 19 (parallel [
            (set (reg:DI 112 [ D.6274 ])
                (ashift:DI (reg:DI 111 [ D.6274 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:111 -1
     (nil))
(insn 148 147 149 19 (set (reg/f:DI 196)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])) policyor.c:111 -1
     (nil))
(insn 149 148 150 19 (parallel [
            (set (reg/f:DI 113 [ D.6275 ])
                (plus:DI (reg:DI 112 [ D.6274 ])
                    (reg/f:DI 196)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:111 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])
            (reg:DI 112 [ D.6274 ]))
        (nil)))
(insn 150 149 151 19 (set (reg/f:DI 114 [ D.6276 ])
        (mem/f:DI (reg/f:DI 113 [ D.6275 ]) [0 *_89+0 S8 A64])) policyor.c:111 -1
     (nil))
(insn 151 150 152 19 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1196 [0xfffffffffffffb54])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:111 -1
     (nil))
(insn 152 151 153 19 (set (reg:DI 1 dx)
        (reg:DI 197)) policyor.c:111 -1
     (nil))
(insn 153 152 154 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f972ac33b40 *.LC2>)) policyor.c:111 -1
     (nil))
(insn 154 153 155 19 (set (reg:DI 5 di)
        (reg/f:DI 114 [ D.6276 ])) policyor.c:111 -1
     (nil))
(insn 155 154 156 19 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyor.c:111 -1
     (nil))
(call_insn 156 155 157 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f972b049ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policyor.c:111 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 157 156 158 19 (set (pc)
        (label_ref 164)) -1
     (nil)
 -> 164)
(barrier 158 157 159)
(code_label 159 158 160 20 13 "" [1 uses])
(note 160 159 161 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 20 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f972ac33ea0 *.LC8>)) policyor.c:114 -1
     (nil))
(call_insn 162 161 163 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:114 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 163 162 164 20 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f972ac060d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyor.c:115 -1
     (nil)
    (nil))
(code_label 164 163 165 21 14 "" [1 uses])
(note 165 164 166 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 21 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:117 -1
     (nil))
(insn 167 166 168 21 (set (reg:SI 198)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:118 -1
     (nil))
(insn 168 167 169 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 198)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1204 [0xfffffffffffffb4c])) [0 argc+0 S4 A32]))) policyor.c:118 -1
     (nil))
(jump_insn 169 168 170 21 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) policyor.c:118 -1
     (nil)
 -> 194)
(note 170 169 171 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 22 (set (reg:SI 199)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:119 -1
     (nil))
(insn 172 171 173 22 (set (reg:DI 115 [ D.6274 ])
        (sign_extend:DI (reg:SI 199))) policyor.c:119 -1
     (nil))
(insn 173 172 174 22 (parallel [
            (set (reg:DI 116 [ D.6274 ])
                (ashift:DI (reg:DI 115 [ D.6274 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:119 -1
     (nil))
(insn 174 173 175 22 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])) policyor.c:119 -1
     (nil))
(insn 175 174 176 22 (parallel [
            (set (reg/f:DI 117 [ D.6275 ])
                (plus:DI (reg:DI 116 [ D.6274 ])
                    (reg/f:DI 200)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:119 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])
            (reg:DI 116 [ D.6274 ]))
        (nil)))
(insn 176 175 177 22 (set (reg/f:DI 118 [ D.6276 ])
        (mem/f:DI (reg/f:DI 117 [ D.6275 ]) [0 *_97+0 S8 A64])) policyor.c:119 -1
     (nil))
(insn 177 176 178 22 (parallel [
            (set (reg:DI 201)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1192 [0xfffffffffffffb58])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:119 -1
     (nil))
(insn 178 177 179 22 (set (reg:DI 1 dx)
        (reg:DI 201)) policyor.c:119 -1
     (nil))
(insn 179 178 180 22 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f972ac33b40 *.LC2>)) policyor.c:119 -1
     (nil))
(insn 180 179 181 22 (set (reg:DI 5 di)
        (reg/f:DI 118 [ D.6276 ])) policyor.c:119 -1
     (nil))
(insn 181 180 182 22 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyor.c:119 -1
     (nil))
(call_insn 182 181 183 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f972b049ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policyor.c:119 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 183 182 184 22 (set (reg:SI 119 [ D.6278 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1192 [0xfffffffffffffb58])) [0 sessionAttributes0+0 S4 A64])) policyor.c:120 -1
     (nil))
(insn 184 183 185 22 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 119 [ D.6278 ])
            (const_int 255 [0xff]))) policyor.c:120 -1
     (nil))
(jump_insn 185 184 186 22 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 412)
            (pc))) policyor.c:120 612 {*jcc_1}
     (nil)
 -> 412)
(note 186 185 187 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 188 23 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f972ac33f30 *.LC9>)) policyor.c:121 -1
     (nil))
(call_insn 188 187 189 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:121 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 189 188 192 23 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f972ac060d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyor.c:122 -1
     (nil)
    (nil))
(jump_insn 192 189 193 23 (set (pc)
        (label_ref:DI 412)) 654 {jump}
     (nil)
 -> 412)
(barrier 193 192 194)
(code_label 194 193 195 25 15 "" [1 uses])
(note 195 194 196 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f972ac33ea0 *.LC8>)) policyor.c:126 -1
     (nil))
(call_insn 197 196 198 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:126 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 198 197 201 25 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f972ac060d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyor.c:127 -1
     (nil)
    (nil))
(jump_insn 201 198 202 25 (set (pc)
        (label_ref 412)) -1
     (nil)
 -> 412)
(barrier 202 201 203)
(code_label 203 202 204 27 12 "" [1 uses])
(note 204 203 205 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 206 27 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:130 -1
     (nil))
(insn 206 205 207 27 (set (reg:DI 120 [ D.6274 ])
        (sign_extend:DI (reg:SI 202))) policyor.c:130 -1
     (nil))
(insn 207 206 208 27 (parallel [
            (set (reg:DI 121 [ D.6274 ])
                (ashift:DI (reg:DI 120 [ D.6274 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:130 -1
     (nil))
(insn 208 207 209 27 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])) policyor.c:130 -1
     (nil))
(insn 209 208 210 27 (parallel [
            (set (reg/f:DI 122 [ D.6275 ])
                (plus:DI (reg:DI 121 [ D.6274 ])
                    (reg/f:DI 203)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:130 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])
            (reg:DI 121 [ D.6274 ]))
        (nil)))
(insn 210 209 211 27 (set (reg/f:DI 123 [ D.6276 ])
        (mem/f:DI (reg/f:DI 122 [ D.6275 ]) [0 *_107+0 S8 A64])) policyor.c:130 -1
     (nil))
(insn 211 210 212 27 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f972ac332d0 *.LC10>)) policyor.c:130 -1
     (nil))
(insn 212 211 213 27 (set (reg:DI 5 di)
        (reg/f:DI 123 [ D.6276 ])) policyor.c:130 -1
     (nil))
(call_insn/i 213 212 214 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f972b0400d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyor.c:130 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 214 213 215 27 (set (reg:SI 124 [ D.6277 ])
        (reg:SI 0 ax)) policyor.c:130 -1
     (nil))
(insn 215 214 216 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 124 [ D.6277 ])
            (const_int 0 [0]))) policyor.c:130 -1
     (nil))
(jump_insn 216 215 217 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 281)
            (pc))) policyor.c:130 -1
     (nil)
 -> 281)
(note 217 216 218 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 28 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:131 -1
     (nil))
(insn 219 218 220 28 (set (reg:SI 204)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:132 -1
     (nil))
(insn 220 219 221 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 204)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1204 [0xfffffffffffffb4c])) [0 argc+0 S4 A32]))) policyor.c:132 -1
     (nil))
(jump_insn 221 220 222 28 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 237)
            (pc))) policyor.c:132 -1
     (nil)
 -> 237)
(note 222 221 223 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 29 (set (reg:SI 205)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:133 -1
     (nil))
(insn 224 223 225 29 (set (reg:DI 125 [ D.6274 ])
        (sign_extend:DI (reg:SI 205))) policyor.c:133 -1
     (nil))
(insn 225 224 226 29 (parallel [
            (set (reg:DI 126 [ D.6274 ])
                (ashift:DI (reg:DI 125 [ D.6274 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:133 -1
     (nil))
(insn 226 225 227 29 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])) policyor.c:133 -1
     (nil))
(insn 227 226 228 29 (parallel [
            (set (reg/f:DI 127 [ D.6275 ])
                (plus:DI (reg:DI 126 [ D.6274 ])
                    (reg/f:DI 206)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:133 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])
            (reg:DI 126 [ D.6274 ]))
        (nil)))
(insn 228 227 229 29 (set (reg/f:DI 128 [ D.6276 ])
        (mem/f:DI (reg/f:DI 127 [ D.6275 ]) [0 *_113+0 S8 A64])) policyor.c:133 -1
     (nil))
(insn 229 228 230 29 (parallel [
            (set (reg:DI 207)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1188 [0xfffffffffffffb5c])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:133 -1
     (nil))
(insn 230 229 231 29 (set (reg:DI 1 dx)
        (reg:DI 207)) policyor.c:133 -1
     (nil))
(insn 231 230 232 29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f972ac33b40 *.LC2>)) policyor.c:133 -1
     (nil))
(insn 232 231 233 29 (set (reg:DI 5 di)
        (reg/f:DI 128 [ D.6276 ])) policyor.c:133 -1
     (nil))
(insn 233 232 234 29 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyor.c:133 -1
     (nil))
(call_insn 234 233 235 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f972b049ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policyor.c:133 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 235 234 236 29 (set (pc)
        (label_ref 242)) -1
     (nil)
 -> 242)
(barrier 236 235 237)
(code_label 237 236 238 30 19 "" [1 uses])
(note 238 237 239 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 239 238 240 30 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f972ac33360 *.LC11>)) policyor.c:136 -1
     (nil))
(call_insn 240 239 241 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:136 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 241 240 242 30 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f972ac060d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyor.c:137 -1
     (nil)
    (nil))
(code_label 242 241 243 31 20 "" [1 uses])
(note 243 242 244 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 31 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:139 -1
     (nil))
(insn 245 244 246 31 (set (reg:SI 208)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:140 -1
     (nil))
(insn 246 245 247 31 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 208)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1204 [0xfffffffffffffb4c])) [0 argc+0 S4 A32]))) policyor.c:140 -1
     (nil))
(jump_insn 247 246 248 31 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 272)
            (pc))) policyor.c:140 -1
     (nil)
 -> 272)
(note 248 247 249 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 32 (set (reg:SI 209)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:141 -1
     (nil))
(insn 250 249 251 32 (set (reg:DI 129 [ D.6274 ])
        (sign_extend:DI (reg:SI 209))) policyor.c:141 -1
     (nil))
(insn 251 250 252 32 (parallel [
            (set (reg:DI 130 [ D.6274 ])
                (ashift:DI (reg:DI 129 [ D.6274 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:141 -1
     (nil))
(insn 252 251 253 32 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])) policyor.c:141 -1
     (nil))
(insn 253 252 254 32 (parallel [
            (set (reg/f:DI 131 [ D.6275 ])
                (plus:DI (reg:DI 130 [ D.6274 ])
                    (reg/f:DI 210)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:141 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])
            (reg:DI 130 [ D.6274 ]))
        (nil)))
(insn 254 253 255 32 (set (reg/f:DI 132 [ D.6276 ])
        (mem/f:DI (reg/f:DI 131 [ D.6275 ]) [0 *_121+0 S8 A64])) policyor.c:141 -1
     (nil))
(insn 255 254 256 32 (parallel [
            (set (reg:DI 211)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1184 [0xfffffffffffffb60])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:141 -1
     (nil))
(insn 256 255 257 32 (set (reg:DI 1 dx)
        (reg:DI 211)) policyor.c:141 -1
     (nil))
(insn 257 256 258 32 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f972ac33b40 *.LC2>)) policyor.c:141 -1
     (nil))
(insn 258 257 259 32 (set (reg:DI 5 di)
        (reg/f:DI 132 [ D.6276 ])) policyor.c:141 -1
     (nil))
(insn 259 258 260 32 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyor.c:141 -1
     (nil))
(call_insn 260 259 261 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f972b049ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policyor.c:141 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 261 260 262 32 (set (reg:SI 133 [ D.6278 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1184 [0xfffffffffffffb60])) [0 sessionAttributes1+0 S4 A64])) policyor.c:142 -1
     (nil))
(insn 262 261 263 32 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 133 [ D.6278 ])
            (const_int 255 [0xff]))) policyor.c:142 -1
     (nil))
(jump_insn 263 262 264 32 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 412)
            (pc))) policyor.c:142 612 {*jcc_1}
     (nil)
 -> 412)
(note 264 263 265 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 33 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f972ac50000 *.LC12>)) policyor.c:143 -1
     (nil))
(call_insn 266 265 267 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:143 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 267 266 270 33 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f972ac060d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyor.c:144 -1
     (nil)
    (nil))
(jump_insn 270 267 271 33 (set (pc)
        (label_ref:DI 412)) 654 {jump}
     (nil)
 -> 412)
(barrier 271 270 272)
(code_label 272 271 273 35 21 "" [1 uses])
(note 273 272 274 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 35 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f972ac33360 *.LC11>)) policyor.c:148 -1
     (nil))
(call_insn 275 274 276 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:148 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 276 275 279 35 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f972ac060d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyor.c:149 -1
     (nil)
    (nil))
(jump_insn 279 276 280 35 (set (pc)
        (label_ref 412)) -1
     (nil)
 -> 412)
(barrier 280 279 281)
(code_label 281 280 282 37 18 "" [1 uses])
(note 282 281 283 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 37 (set (reg:SI 212)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:152 -1
     (nil))
(insn 284 283 285 37 (set (reg:DI 134 [ D.6274 ])
        (sign_extend:DI (reg:SI 212))) policyor.c:152 -1
     (nil))
(insn 285 284 286 37 (parallel [
            (set (reg:DI 135 [ D.6274 ])
                (ashift:DI (reg:DI 134 [ D.6274 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:152 -1
     (nil))
(insn 286 285 287 37 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])) policyor.c:152 -1
     (nil))
(insn 287 286 288 37 (parallel [
            (set (reg/f:DI 136 [ D.6275 ])
                (plus:DI (reg:DI 135 [ D.6274 ])
                    (reg/f:DI 213)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:152 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])
            (reg:DI 135 [ D.6274 ]))
        (nil)))
(insn 288 287 289 37 (set (reg/f:DI 137 [ D.6276 ])
        (mem/f:DI (reg/f:DI 136 [ D.6275 ]) [0 *_131+0 S8 A64])) policyor.c:152 -1
     (nil))
(insn 289 288 290 37 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f972ac50090 *.LC13>)) policyor.c:152 -1
     (nil))
(insn 290 289 291 37 (set (reg:DI 5 di)
        (reg/f:DI 137 [ D.6276 ])) policyor.c:152 -1
     (nil))
(call_insn/i 291 290 292 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f972b0400d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyor.c:152 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 292 291 293 37 (set (reg:SI 138 [ D.6277 ])
        (reg:SI 0 ax)) policyor.c:152 -1
     (nil))
(insn 293 292 294 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138 [ D.6277 ])
            (const_int 0 [0]))) policyor.c:152 -1
     (nil))
(jump_insn 294 293 295 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 359)
            (pc))) policyor.c:152 -1
     (nil)
 -> 359)
(note 295 294 296 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 296 295 297 38 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:153 -1
     (nil))
(insn 297 296 298 38 (set (reg:SI 214)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:154 -1
     (nil))
(insn 298 297 299 38 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 214)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1204 [0xfffffffffffffb4c])) [0 argc+0 S4 A32]))) policyor.c:154 -1
     (nil))
(jump_insn 299 298 300 38 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 315)
            (pc))) policyor.c:154 -1
     (nil)
 -> 315)
(note 300 299 301 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 39 (set (reg:SI 215)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:155 -1
     (nil))
(insn 302 301 303 39 (set (reg:DI 139 [ D.6274 ])
        (sign_extend:DI (reg:SI 215))) policyor.c:155 -1
     (nil))
(insn 303 302 304 39 (parallel [
            (set (reg:DI 140 [ D.6274 ])
                (ashift:DI (reg:DI 139 [ D.6274 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:155 -1
     (nil))
(insn 304 303 305 39 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])) policyor.c:155 -1
     (nil))
(insn 305 304 306 39 (parallel [
            (set (reg/f:DI 141 [ D.6275 ])
                (plus:DI (reg:DI 140 [ D.6274 ])
                    (reg/f:DI 216)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:155 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])
            (reg:DI 140 [ D.6274 ]))
        (nil)))
(insn 306 305 307 39 (set (reg/f:DI 142 [ D.6276 ])
        (mem/f:DI (reg/f:DI 141 [ D.6275 ]) [0 *_137+0 S8 A64])) policyor.c:155 -1
     (nil))
(insn 307 306 308 39 (parallel [
            (set (reg:DI 217)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1180 [0xfffffffffffffb64])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:155 -1
     (nil))
(insn 308 307 309 39 (set (reg:DI 1 dx)
        (reg:DI 217)) policyor.c:155 -1
     (nil))
(insn 309 308 310 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f972ac33b40 *.LC2>)) policyor.c:155 -1
     (nil))
(insn 310 309 311 39 (set (reg:DI 5 di)
        (reg/f:DI 142 [ D.6276 ])) policyor.c:155 -1
     (nil))
(insn 311 310 312 39 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyor.c:155 -1
     (nil))
(call_insn 312 311 313 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f972b049ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policyor.c:155 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 313 312 314 39 (set (pc)
        (label_ref 320)) -1
     (nil)
 -> 320)
(barrier 314 313 315)
(code_label 315 314 316 40 25 "" [1 uses])
(note 316 315 317 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 317 316 318 40 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f972ac50120 *.LC14>)) policyor.c:158 -1
     (nil))
(call_insn 318 317 319 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:158 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 319 318 320 40 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f972ac060d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyor.c:159 -1
     (nil)
    (nil))
(code_label 320 319 321 41 26 "" [1 uses])
(note 321 320 322 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 41 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:161 -1
     (nil))
(insn 323 322 324 41 (set (reg:SI 218)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:162 -1
     (nil))
(insn 324 323 325 41 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 218)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1204 [0xfffffffffffffb4c])) [0 argc+0 S4 A32]))) policyor.c:162 -1
     (nil))
(jump_insn 325 324 326 41 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 350)
            (pc))) policyor.c:162 -1
     (nil)
 -> 350)
(note 326 325 327 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 42 (set (reg:SI 219)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:163 -1
     (nil))
(insn 328 327 329 42 (set (reg:DI 143 [ D.6274 ])
        (sign_extend:DI (reg:SI 219))) policyor.c:163 -1
     (nil))
(insn 329 328 330 42 (parallel [
            (set (reg:DI 144 [ D.6274 ])
                (ashift:DI (reg:DI 143 [ D.6274 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:163 -1
     (nil))
(insn 330 329 331 42 (set (reg/f:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])) policyor.c:163 -1
     (nil))
(insn 331 330 332 42 (parallel [
            (set (reg/f:DI 145 [ D.6275 ])
                (plus:DI (reg:DI 144 [ D.6274 ])
                    (reg/f:DI 220)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:163 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])
            (reg:DI 144 [ D.6274 ]))
        (nil)))
(insn 332 331 333 42 (set (reg/f:DI 146 [ D.6276 ])
        (mem/f:DI (reg/f:DI 145 [ D.6275 ]) [0 *_145+0 S8 A64])) policyor.c:163 -1
     (nil))
(insn 333 332 334 42 (parallel [
            (set (reg:DI 221)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1176 [0xfffffffffffffb68])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:163 -1
     (nil))
(insn 334 333 335 42 (set (reg:DI 1 dx)
        (reg:DI 221)) policyor.c:163 -1
     (nil))
(insn 335 334 336 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f972ac33b40 *.LC2>)) policyor.c:163 -1
     (nil))
(insn 336 335 337 42 (set (reg:DI 5 di)
        (reg/f:DI 146 [ D.6276 ])) policyor.c:163 -1
     (nil))
(insn 337 336 338 42 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyor.c:163 -1
     (nil))
(call_insn 338 337 339 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f972b049ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policyor.c:163 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 339 338 340 42 (set (reg:SI 147 [ D.6278 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1176 [0xfffffffffffffb68])) [0 sessionAttributes2+0 S4 A64])) policyor.c:164 -1
     (nil))
(insn 340 339 341 42 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 147 [ D.6278 ])
            (const_int 255 [0xff]))) policyor.c:164 -1
     (nil))
(jump_insn 341 340 342 42 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 412)
            (pc))) policyor.c:164 612 {*jcc_1}
     (nil)
 -> 412)
(note 342 341 343 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 343 342 344 43 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f972ac501b0 *.LC15>)) policyor.c:165 -1
     (nil))
(call_insn 344 343 345 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:165 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 345 344 348 43 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f972ac060d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyor.c:166 -1
     (nil)
    (nil))
(jump_insn 348 345 349 43 (set (pc)
        (label_ref:DI 412)) 654 {jump}
     (nil)
 -> 412)
(barrier 349 348 350)
(code_label 350 349 351 45 27 "" [1 uses])
(note 351 350 352 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 352 351 353 45 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f972ac50120 *.LC14>)) policyor.c:170 -1
     (nil))
(call_insn 353 352 354 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:170 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 354 353 357 45 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f972ac060d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyor.c:171 -1
     (nil)
    (nil))
(jump_insn 357 354 358 45 (set (pc)
        (label_ref 412)) -1
     (nil)
 -> 412)
(barrier 358 357 359)
(code_label 359 358 360 47 24 "" [1 uses])
(note 360 359 361 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 361 360 362 47 (set (reg:SI 222)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:174 -1
     (nil))
(insn 362 361 363 47 (set (reg:DI 148 [ D.6274 ])
        (sign_extend:DI (reg:SI 222))) policyor.c:174 -1
     (nil))
(insn 363 362 364 47 (parallel [
            (set (reg:DI 149 [ D.6274 ])
                (ashift:DI (reg:DI 148 [ D.6274 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:174 -1
     (nil))
(insn 364 363 365 47 (set (reg/f:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])) policyor.c:174 -1
     (nil))
(insn 365 364 366 47 (parallel [
            (set (reg/f:DI 150 [ D.6275 ])
                (plus:DI (reg:DI 149 [ D.6274 ])
                    (reg/f:DI 223)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:174 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])
            (reg:DI 149 [ D.6274 ]))
        (nil)))
(insn 366 365 367 47 (set (reg/f:DI 151 [ D.6276 ])
        (mem/f:DI (reg/f:DI 150 [ D.6275 ]) [0 *_155+0 S8 A64])) policyor.c:174 -1
     (nil))
(insn 367 366 368 47 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f972ac50240 *.LC16>)) policyor.c:174 -1
     (nil))
(insn 368 367 369 47 (set (reg:DI 5 di)
        (reg/f:DI 151 [ D.6276 ])) policyor.c:174 -1
     (nil))
(call_insn/i 369 368 370 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f972b0400d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyor.c:174 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 370 369 371 47 (set (reg:SI 152 [ D.6277 ])
        (reg:SI 0 ax)) policyor.c:174 -1
     (nil))
(insn 371 370 372 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 152 [ D.6277 ])
            (const_int 0 [0]))) policyor.c:174 -1
     (nil))
(jump_insn 372 371 373 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 377)
            (pc))) policyor.c:174 -1
     (nil)
 -> 377)
(note 373 372 374 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(call_insn 374 373 375 48 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f972ac060d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyor.c:175 -1
     (nil)
    (nil))
(jump_insn 375 374 376 48 (set (pc)
        (label_ref 412)) -1
     (nil)
 -> 412)
(barrier 376 375 377)
(code_label 377 376 378 49 30 "" [1 uses])
(note 378 377 379 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 379 378 380 49 (set (reg:SI 224)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:177 -1
     (nil))
(insn 380 379 381 49 (set (reg:DI 153 [ D.6274 ])
        (sign_extend:DI (reg:SI 224))) policyor.c:177 -1
     (nil))
(insn 381 380 382 49 (parallel [
            (set (reg:DI 154 [ D.6274 ])
                (ashift:DI (reg:DI 153 [ D.6274 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:177 -1
     (nil))
(insn 382 381 383 49 (set (reg/f:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])) policyor.c:177 -1
     (nil))
(insn 383 382 384 49 (parallel [
            (set (reg/f:DI 155 [ D.6275 ])
                (plus:DI (reg:DI 154 [ D.6274 ])
                    (reg/f:DI 225)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:177 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])
            (reg:DI 154 [ D.6274 ]))
        (nil)))
(insn 384 383 385 49 (set (reg/f:DI 156 [ D.6276 ])
        (mem/f:DI (reg/f:DI 155 [ D.6275 ]) [0 *_161+0 S8 A64])) policyor.c:177 -1
     (nil))
(insn 385 384 386 49 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f972ac502d0 *.LC17>)) policyor.c:177 -1
     (nil))
(insn 386 385 387 49 (set (reg:DI 5 di)
        (reg/f:DI 156 [ D.6276 ])) policyor.c:177 -1
     (nil))
(call_insn/i 387 386 388 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f972b0400d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyor.c:177 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 388 387 389 49 (set (reg:SI 157 [ D.6277 ])
        (reg:SI 0 ax)) policyor.c:177 -1
     (nil))
(insn 389 388 390 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 157 [ D.6277 ])
            (const_int 0 [0]))) policyor.c:177 -1
     (nil))
(jump_insn 390 389 391 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 399)
            (pc))) policyor.c:177 -1
     (nil)
 -> 399)
(note 391 390 392 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 392 391 393 50 (set (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f972ae08090 verbose>) [0 verbose+0 S4 A32])
        (const_int 1 [0x1])) policyor.c:178 -1
     (nil))
(insn 393 392 394 50 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f972ac50360 *.LC18>)) policyor.c:179 -1
     (nil))
(insn 394 393 395 50 (set (reg:SI 4 si)
        (const_int 1 [0x1])) policyor.c:179 -1
     (nil))
(insn 395 394 396 50 (set (reg:DI 5 di)
        (const_int 0 [0])) policyor.c:179 -1
     (nil))
(call_insn 396 395 397 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7f972afac000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) policyor.c:179 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 397 396 398 50 (set (pc)
        (label_ref 412)) -1
     (nil)
 -> 412)
(barrier 398 397 399)
(code_label 399 398 400 51 31 "" [1 uses])
(note 400 399 401 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 401 400 402 51 (set (reg:SI 226)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:182 -1
     (nil))
(insn 402 401 403 51 (set (reg:DI 158 [ D.6274 ])
        (sign_extend:DI (reg:SI 226))) policyor.c:182 -1
     (nil))
(insn 403 402 404 51 (parallel [
            (set (reg:DI 159 [ D.6274 ])
                (ashift:DI (reg:DI 158 [ D.6274 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:182 -1
     (nil))
(insn 404 403 405 51 (set (reg/f:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])) policyor.c:182 -1
     (nil))
(insn 405 404 406 51 (parallel [
            (set (reg/f:DI 160 [ D.6275 ])
                (plus:DI (reg:DI 159 [ D.6274 ])
                    (reg/f:DI 227)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:182 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1216 [0xfffffffffffffb40])) [0 argv+0 S8 A64])
            (reg:DI 159 [ D.6274 ]))
        (nil)))
(insn 406 405 407 51 (set (reg/f:DI 161 [ D.6276 ])
        (mem/f:DI (reg/f:DI 160 [ D.6275 ]) [0 *_168+0 S8 A64])) policyor.c:182 -1
     (nil))
(insn 407 406 408 51 (set (reg:DI 4 si)
        (reg/f:DI 161 [ D.6276 ])) policyor.c:182 -1
     (nil))
(insn 408 407 409 51 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f972ac503f0 *.LC19>)) policyor.c:182 -1
     (nil))
(insn 409 408 410 51 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyor.c:182 -1
     (nil))
(call_insn 410 409 411 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f972b046ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policyor.c:182 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(call_insn 411 410 412 51 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f972ac060d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyor.c:183 -1
     (nil)
    (nil))
(code_label 412 411 413 52 6 "" [16 uses])
(note 413 412 414 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 414 413 415 52 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:80 -1
     (nil))
(code_label 415 414 416 53 2 "" [1 uses])
(note 416 415 417 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 417 416 418 53 (set (reg:SI 228)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1168 [0xfffffffffffffb70])) [0 i+0 S4 A32])) policyor.c:80 -1
     (nil))
(insn 418 417 419 53 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 228)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1204 [0xfffffffffffffb4c])) [0 argc+0 S4 A32]))) policyor.c:80 -1
     (nil))
(jump_insn 419 418 420 53 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 424)
            (pc))) policyor.c:80 -1
     (nil)
 -> 424)
(note 420 419 422 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 422 420 423 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1172 [0xfffffffffffffb6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyor.c:80 -1
     (nil))
(jump_insn 423 422 424 54 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 421)
            (pc))) policyor.c:80 -1
     (nil)
 -> 421)
(code_label 424 423 425 55 32 "" [1 uses])
(note 425 424 426 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 426 425 427 55 (set (reg:SI 162 [ D.6278 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1200 [0xfffffffffffffb50])) [0 policySession+0 S4 A64])) policyor.c:186 -1
     (nil))
(insn 427 426 428 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 162 [ D.6278 ])
            (const_int 0 [0]))) policyor.c:186 -1
     (nil))
(jump_insn 428 427 429 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 433)
            (pc))) policyor.c:186 -1
     (nil)
 -> 433)
(note 429 428 430 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 430 429 431 56 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f972ac50480 *.LC20>)) policyor.c:187 -1
     (nil))
(call_insn 431 430 432 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:187 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 432 431 433 56 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f972ac060d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyor.c:188 -1
     (nil)
    (nil))
(code_label 433 432 434 57 34 "" [1 uses])
(note 434 433 435 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 435 434 436 57 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1160 [0xfffffffffffffb78])) [0 count+0 S4 A32])
            (const_int 1 [0x1]))) policyor.c:190 -1
     (nil))
(jump_insn 436 435 437 57 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 441)
            (pc))) policyor.c:190 -1
     (nil)
 -> 441)
(note 437 436 438 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 438 437 439 58 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f972ac50510 *.LC21>)) policyor.c:191 -1
     (nil))
(call_insn 439 438 440 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:191 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 440 439 441 58 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f972ac060d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyor.c:192 -1
     (nil)
    (nil))
(code_label 441 440 442 59 35 "" [1 uses])
(note 442 441 443 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 443 442 444 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1172 [0xfffffffffffffb6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyor.c:194 -1
     (nil))
(jump_insn 444 443 445 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 450)
            (pc))) policyor.c:194 -1
     (nil)
 -> 450)
(note 445 444 446 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 446 445 447 60 (set (reg:SI 163 [ D.6278 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1200 [0xfffffffffffffb50])) [0 policySession+0 S4 A64])) policyor.c:195 -1
     (nil))
(insn 447 446 448 60 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1056 [0xfffffffffffffbe0])) [0 in.policySession+0 S4 A64])
        (reg:SI 163 [ D.6278 ])) policyor.c:195 -1
     (nil))
(insn 448 447 449 60 (set (reg:SI 229)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1160 [0xfffffffffffffb78])) [0 count+0 S4 A32])) policyor.c:196 -1
     (nil))
(insn 449 448 450 60 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1052 [0xfffffffffffffbe4])) [0 in.pHashList.count+0 S4 A32])
        (reg:SI 229)) policyor.c:196 -1
     (nil))
(code_label 450 449 451 61 36 "" [1 uses])
(note 451 450 452 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 452 451 453 61 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1164 [0xfffffffffffffb74])) [0 j+0 S4 A32])
        (const_int 0 [0])) policyor.c:199 -1
     (nil))
(jump_insn 453 452 454 61 (set (pc)
        (label_ref 474)) policyor.c:199 -1
     (nil)
 -> 474)
(barrier 454 453 480)
(code_label 480 454 455 62 39 "" [1 uses])
(note 455 480 456 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 456 455 457 62 (set (reg:DI 230)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1164 [0xfffffffffffffb74])) [0 j+0 S4 A32]))) policyor.c:200 -1
     (nil))
(insn 457 456 458 62 (set (reg/f:DI 164 [ D.6279 ])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 230)
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -1120 [0xfffffffffffffba0])) [0 pHashListFilename S8 A64])) policyor.c:200 -1
     (nil))
(insn 458 457 459 62 (parallel [
            (set (reg:DI 231)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:200 -1
     (nil))
(insn 459 458 460 62 (set (reg:DI 232)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1164 [0xfffffffffffffb74])) [0 j+0 S4 A32]))) policyor.c:200 -1
     (nil))
(insn 460 459 461 62 (set (reg:DI 233)
        (reg:DI 232)) policyor.c:200 -1
     (nil))
(insn 461 460 462 62 (parallel [
            (set (reg:DI 234)
                (ashift:DI (reg:DI 233)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:200 -1
     (nil))
(insn 462 461 463 62 (set (reg:DI 233)
        (reg:DI 234)) policyor.c:200 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 232)
            (const_int 2 [0x2]))
        (nil)))
(insn 463 462 464 62 (parallel [
            (set (reg:DI 235)
                (ashift:DI (reg:DI 233)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:200 -1
     (nil))
(insn 464 463 465 62 (parallel [
            (set (reg:DI 233)
                (plus:DI (reg:DI 233)
                    (reg:DI 235)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:200 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 232)
            (const_int 130 [0x82]))
        (nil)))
(insn 465 464 466 62 (parallel [
            (set (reg:DI 236)
                (plus:DI (reg:DI 231)
                    (reg:DI 233)))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:200 -1
     (nil))
(insn 466 465 467 62 (parallel [
            (set (reg/f:DI 165 [ D.6280 ])
                (plus:DI (reg:DI 236)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:200 -1
     (nil))
(insn 467 466 468 62 (set (reg:DI 1 dx)
        (reg/f:DI 164 [ D.6279 ])) policyor.c:200 -1
     (nil))
(insn 468 467 469 62 (set (reg:SI 4 si)
        (const_int 128 [0x80])) policyor.c:200 -1
     (nil))
(insn 469 468 470 62 (set (reg:DI 5 di)
        (reg/f:DI 165 [ D.6280 ])) policyor.c:200 -1
     (nil))
(call_insn 470 469 471 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_Read2B") [flags 0x41]  <function_decl 0x7f972afacca8 TSS_File_Read2B>) [0 TSS_File_Read2B S1 A8])
            (const_int 0 [0]))) policyor.c:200 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 471 470 472 62 (set (reg:SI 237)
        (reg:SI 0 ax)) policyor.c:200 -1
     (nil))
(insn 472 471 473 62 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1172 [0xfffffffffffffb6c])) [0 rc+0 S4 A32])
        (reg:SI 237)) policyor.c:200 -1
     (nil))
(insn 473 472 474 62 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -1164 [0xfffffffffffffb74])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -1164 [0xfffffffffffffb74])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:199 -1
     (nil))
(code_label 474 473 475 63 37 "" [1 uses])
(note 475 474 476 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 477 63 (set (reg:SI 238)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1164 [0xfffffffffffffb74])) [0 j+0 S4 A32])) policyor.c:199 -1
     (nil))
(insn 477 476 478 63 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 238)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1160 [0xfffffffffffffb78])) [0 count+0 S4 A32]))) policyor.c:199 -1
     (nil))
(jump_insn 478 477 479 63 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 483)
            (pc))) policyor.c:199 -1
     (nil)
 -> 483)
(note 479 478 481 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 481 479 482 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1172 [0xfffffffffffffb6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyor.c:199 -1
     (nil))
(jump_insn 482 481 483 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 480)
            (pc))) policyor.c:199 -1
     (nil)
 -> 480)
(code_label 483 482 484 65 38 "" [1 uses])
(note 484 483 485 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 485 484 486 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1172 [0xfffffffffffffb6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyor.c:205 -1
     (nil))
(jump_insn 486 485 487 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 493)
            (pc))) policyor.c:205 -1
     (nil)
 -> 493)
(note 487 486 488 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 488 487 489 66 (parallel [
            (set (reg:DI 239)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1152 [0xfffffffffffffb80])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:206 -1
     (nil))
(insn 489 488 490 66 (set (reg:DI 5 di)
        (reg:DI 239)) policyor.c:206 -1
     (nil))
(call_insn 490 489 491 66 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Create") [flags 0x41]  <function_decl 0x7f972afa4ca8 TSS_Create>) [0 TSS_Create S1 A8])
            (const_int 0 [0]))) policyor.c:206 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 491 490 492 66 (set (reg:SI 240)
        (reg:SI 0 ax)) policyor.c:206 -1
     (nil))
(insn 492 491 493 66 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1172 [0xfffffffffffffb6c])) [0 rc+0 S4 A32])
        (reg:SI 240)) policyor.c:206 -1
     (nil))
(code_label 493 492 494 67 40 "" [1 uses])
(note 494 493 495 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 495 494 496 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1172 [0xfffffffffffffb6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyor.c:209 -1
     (nil))
(jump_insn 496 495 497 67 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 529)
            (pc))) policyor.c:209 -1
     (nil)
 -> 529)
(note 497 496 498 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 498 497 499 68 (set (reg:SI 166 [ D.6278 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1176 [0xfffffffffffffb68])) [0 sessionAttributes2+0 S4 A64])) policyor.c:210 -1
     (nil))
(insn 499 498 500 68 (set (reg:SI 167 [ D.6278 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1180 [0xfffffffffffffb64])) [0 sessionHandle2+0 S4 A32])) policyor.c:210 -1
     (nil))
(insn 500 499 501 68 (set (reg:SI 168 [ D.6278 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1184 [0xfffffffffffffb60])) [0 sessionAttributes1+0 S4 A64])) policyor.c:210 -1
     (nil))
(insn 501 500 502 68 (set (reg:SI 169 [ D.6278 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1188 [0xfffffffffffffb5c])) [0 sessionHandle1+0 S4 A32])) policyor.c:210 -1
     (nil))
(insn 502 501 503 68 (set (reg:SI 170 [ D.6278 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1192 [0xfffffffffffffb58])) [0 sessionAttributes0+0 S4 A64])) policyor.c:210 -1
     (nil))
(insn 503 502 504 68 (set (reg:SI 171 [ D.6278 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1196 [0xfffffffffffffb54])) [0 sessionHandle0+0 S4 A32])) policyor.c:210 -1
     (nil))
(insn 504 503 505 68 (set (reg/f:DI 172 [ D.6281 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1152 [0xfffffffffffffb80])) [0 tssContext+0 S8 A64])) policyor.c:210 -1
     (nil))
(insn 505 504 506 68 (parallel [
            (set (reg:DI 241)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1056 [0xfffffffffffffbe0])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:210 -1
     (nil))
(insn 506 505 507 68 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:210 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 507 506 508 68 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) policyor.c:210 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 508 507 509 68 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policyor.c:210 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 509 508 510 68 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1073741831 [0x40000007])) policyor.c:210 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 510 509 511 68 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 166 [ D.6278 ])) policyor.c:210 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 511 510 512 68 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policyor.c:210 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 512 511 513 68 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 167 [ D.6278 ])) policyor.c:210 -1
     (expr_list:REG_ARGS_SIZE (const_int 56 [0x38])
        (nil)))
(insn 513 512 514 68 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 168 [ D.6278 ])) policyor.c:210 -1
     (expr_list:REG_ARGS_SIZE (const_int 64 [0x40])
        (nil)))
(insn 514 513 515 68 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policyor.c:210 -1
     (expr_list:REG_ARGS_SIZE (const_int 72 [0x48])
        (nil)))
(insn 515 514 516 68 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 169 [ D.6278 ])) policyor.c:210 -1
     (expr_list:REG_ARGS_SIZE (const_int 80 [0x50])
        (nil)))
(insn 516 515 517 68 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 170 [ D.6278 ])) policyor.c:210 -1
     (expr_list:REG_ARGS_SIZE (const_int 88 [0x58])
        (nil)))
(insn 517 516 518 68 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policyor.c:210 -1
     (expr_list:REG_ARGS_SIZE (const_int 96 [0x60])
        (nil)))
(insn 518 517 519 68 (set (reg:SI 38 r9)
        (reg:SI 171 [ D.6278 ])) policyor.c:210 -1
     (nil))
(insn 519 518 520 68 (set (reg:SI 37 r8)
        (const_int 369 [0x171])) policyor.c:210 -1
     (nil))
(insn 520 519 521 68 (set (reg:DI 2 cx)
        (const_int 0 [0])) policyor.c:210 -1
     (nil))
(insn 521 520 522 68 (set (reg:DI 1 dx)
        (reg:DI 241)) policyor.c:210 -1
     (nil))
(insn 522 521 523 68 (set (reg:DI 4 si)
        (const_int 0 [0])) policyor.c:210 -1
     (nil))
(insn 523 522 524 68 (set (reg:DI 5 di)
        (reg/f:DI 172 [ D.6281 ])) policyor.c:210 -1
     (nil))
(insn 524 523 525 68 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyor.c:210 -1
     (nil))
(call_insn 525 524 526 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7f972afa4e58 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 96 [0x60]))) policyor.c:210 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 526 525 527 68 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:210 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 527 526 528 68 (set (reg:SI 242)
        (reg:SI 0 ax)) policyor.c:210 -1
     (nil))
(insn 528 527 529 68 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1172 [0xfffffffffffffb6c])) [0 rc+0 S4 A32])
        (reg:SI 242)) policyor.c:210 -1
     (nil))
(code_label 529 528 530 69 41 "" [1 uses])
(note 530 529 531 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 531 530 532 69 (set (reg/f:DI 173 [ D.6281 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1152 [0xfffffffffffffb80])) [0 tssContext+0 S8 A64])) policyor.c:221 -1
     (nil))
(insn 532 531 533 69 (set (reg:DI 5 di)
        (reg/f:DI 173 [ D.6281 ])) policyor.c:221 -1
     (nil))
(call_insn 533 532 534 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Delete") [flags 0x41]  <function_decl 0x7f972afa4d80 TSS_Delete>) [0 TSS_Delete S1 A8])
            (const_int 0 [0]))) policyor.c:221 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 534 533 535 69 (set (reg:SI 243)
        (reg:SI 0 ax)) policyor.c:221 -1
     (nil))
(insn 535 534 536 69 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1156 [0xfffffffffffffb7c])) [0 rc1+0 S4 A32])
        (reg:SI 243)) policyor.c:221 -1
     (nil))
(insn 536 535 537 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1172 [0xfffffffffffffb6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyor.c:222 -1
     (nil))
(jump_insn 537 536 538 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 541)
            (pc))) policyor.c:222 -1
     (nil)
 -> 541)
(note 538 537 539 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 539 538 540 70 (set (reg:SI 244)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1156 [0xfffffffffffffb7c])) [0 rc1+0 S4 A32])) policyor.c:223 -1
     (nil))
(insn 540 539 541 70 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1172 [0xfffffffffffffb6c])) [0 rc+0 S4 A32])
        (reg:SI 244)) policyor.c:223 -1
     (nil))
(code_label 541 540 542 71 42 "" [1 uses])
(note 542 541 543 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 543 542 544 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1172 [0xfffffffffffffb6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyor.c:226 -1
     (nil))
(jump_insn 544 543 545 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 556)
            (pc))) policyor.c:226 -1
     (nil)
 -> 556)
(note 545 544 546 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 546 545 547 72 (set (reg:SI 174 [ D.6277 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f972ae08090 verbose>) [0 verbose+0 S4 A32])) policyor.c:227 -1
     (nil))
(insn 547 546 548 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 174 [ D.6277 ])
            (const_int 0 [0]))) policyor.c:227 -1
     (nil))
(jump_insn 548 547 549 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 582)
            (pc))) policyor.c:227 612 {*jcc_1}
     (nil)
 -> 582)
(note 549 548 550 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 550 549 551 73 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f972ac505a0 *.LC22>)) policyor.c:227 -1
     (nil))
(call_insn 551 550 554 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:227 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 554 551 555 73 (set (pc)
        (label_ref 582)) -1
     (nil)
 -> 582)
(barrier 555 554 556)
(code_label 556 555 557 75 43 "" [1 uses])
(note 557 556 558 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 558 557 559 75 (set (reg:SI 245)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1172 [0xfffffffffffffb6c])) [0 rc+0 S4 A32])) policyor.c:233 -1
     (nil))
(insn 559 558 560 75 (set (reg:SI 4 si)
        (reg:SI 245)) policyor.c:233 -1
     (nil))
(insn 560 559 561 75 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f972ac50630 *.LC23>)) policyor.c:233 -1
     (nil))
(insn 561 560 562 75 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyor.c:233 -1
     (nil))
(call_insn 562 561 563 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f972b046ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policyor.c:233 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 563 562 564 75 (set (reg:SI 246)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1172 [0xfffffffffffffb6c])) [0 rc+0 S4 A32])) policyor.c:234 -1
     (nil))
(insn 564 563 565 75 (parallel [
            (set (reg:DI 247)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1128 [0xfffffffffffffb98])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:234 -1
     (nil))
(insn 565 564 566 75 (parallel [
            (set (reg:DI 248)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1136 [0xfffffffffffffb90])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:234 -1
     (nil))
(insn 566 565 567 75 (parallel [
            (set (reg:DI 249)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1144 [0xfffffffffffffb88])))
            (clobber (reg:CC 17 flags))
        ]) policyor.c:234 -1
     (nil))
(insn 567 566 568 75 (set (reg:SI 2 cx)
        (reg:SI 246)) policyor.c:234 -1
     (nil))
(insn 568 567 569 75 (set (reg:DI 1 dx)
        (reg:DI 247)) policyor.c:234 -1
     (nil))
(insn 569 568 570 75 (set (reg:DI 4 si)
        (reg:DI 248)) policyor.c:234 -1
     (nil))
(insn 570 569 571 75 (set (reg:DI 5 di)
        (reg:DI 249)) policyor.c:234 -1
     (nil))
(call_insn 571 570 572 75 (call (mem:QI (symbol_ref:DI ("TSS_ResponseCode_toString") [flags 0x41]  <function_decl 0x7f972aface58 TSS_ResponseCode_toString>) [0 TSS_ResponseCode_toString S1 A8])
        (const_int 0 [0])) policyor.c:234 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 572 571 573 75 (set (reg/f:DI 175 [ D.6279 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1128 [0xfffffffffffffb98])) [0 num+0 S8 A64])) policyor.c:235 -1
     (nil))
(insn 573 572 574 75 (set (reg/f:DI 176 [ D.6279 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1136 [0xfffffffffffffb90])) [0 submsg+0 S8 A64])) policyor.c:235 -1
     (nil))
(insn 574 573 575 75 (set (reg/f:DI 177 [ D.6279 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1144 [0xfffffffffffffb88])) [0 msg+0 S8 A64])) policyor.c:235 -1
     (nil))
(insn 575 574 576 75 (set (reg:DI 2 cx)
        (reg/f:DI 175 [ D.6279 ])) policyor.c:235 -1
     (nil))
(insn 576 575 577 75 (set (reg:DI 1 dx)
        (reg/f:DI 176 [ D.6279 ])) policyor.c:235 -1
     (nil))
(insn 577 576 578 75 (set (reg:DI 4 si)
        (reg/f:DI 177 [ D.6279 ])) policyor.c:235 -1
     (nil))
(insn 578 577 579 75 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f972ac506c0 *.LC24>)) policyor.c:235 -1
     (nil))
(insn 579 578 580 75 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyor.c:235 -1
     (nil))
(call_insn 580 579 581 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f972b046ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policyor.c:235 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 581 580 582 75 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1172 [0xfffffffffffffb6c])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) policyor.c:236 -1
     (nil))
(code_label 582 581 583 76 45 "" [2 uses])
(note 583 582 584 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 584 583 587 76 (set (reg:SI 178 [ D.6277 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1172 [0xfffffffffffffb6c])) [0 rc+0 S4 A32])) policyor.c:238 -1
     (nil))
(insn 587 584 591 76 (set (reg:SI 179 [ <retval> ])
        (reg:SI 178 [ D.6277 ])) -1
     (nil))
(insn 591 587 592 76 (set (reg/i:SI 0 ax)
        (reg:SI 179 [ <retval> ])) policyor.c:239 -1
     (nil))
(insn 592 591 593 76 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.6282+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) policyor.c:239 -1
     (nil))
(jump_insn 593 592 599 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 596)
            (pc))) policyor.c:239 -1
     (nil)
 -> 596)
(note 599 593 594 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(call_insn 594 599 595 79 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f972ac065e8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) policyor.c:239 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 595 594 596)
(code_label 596 595 600 80 47 "" [1 uses])
(note 600 596 597 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 597 600 0 80 (use (reg/i:SI 0 ax)) policyor.c:239 -1
     (nil))

;; Function printUsage (printUsage, funcdef_no=3, decl_uid=6070, cgraph_uid=3, symbol_order=4)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policyor.c:243 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f972b049000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policyor.c:243 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f972ac6b360 *.LC25>)) policyor.c:244 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:244 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policyor.c:245 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f972b049000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policyor.c:245 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f972ac6b3f0 *.LC26>)) policyor.c:246 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:246 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policyor.c:247 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f972b049000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policyor.c:247 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f972ac6b480 *.LC27>)) policyor.c:248 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:248 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f972ac6b510 *.LC28>)) policyor.c:249 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f972b049360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyor.c:249 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) policyor.c:250 -1
     (nil))
(call_insn 20 19 21 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f972b05c000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) policyor.c:250 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 21 20 0)
