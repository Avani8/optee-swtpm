
;; Function main (main, funcdef_no=2, decl_uid=18016, cgraph_uid=2, symbol_order=3)

Partition 12: size 1168 align 16
	outPrivate
Partition 13: size 424 align 16
	outPublic
Partition 15: size 262 align 16
	signature
Partition 8: size 130 align 16
	messageDigest
Partition 3: size 8 align 8
	messageString_26
Partition 18: size 8 align 8
	num
Partition 17: size 8 align 8
	submsg
Partition 16: size 8 align 8
	msg
Partition 7: size 8 align 8
	tssContext
Partition 6: size 4 align 4
	rc1_322
Partition 5: size 4 align 4
	saltHandle_30
Partition 4: size 4 align 4
	sizeInBytes_29
Partition 2: size 4 align 4
	pwSession_24
Partition 1: size 4 align 4
	i_22
Partition 0: size 4 align 4
	rc_1
Partition 14: size 4 align 4
	keyHandle
Partition 11: size 4 align 4
	ekKeyHandle
Partition 10: size 4 align 4
	sessionHandle
Partition 9: size 4 align 4
	policySessionHandle

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; Generating RTL for gimple basic block 110

;; Generating RTL for gimple basic block 111

;; Generating RTL for gimple basic block 112

;; Generating RTL for gimple basic block 113

;; Generating RTL for gimple basic block 114

;; Generating RTL for gimple basic block 115

;; Generating RTL for gimple basic block 116

;; Generating RTL for gimple basic block 117

;; Generating RTL for gimple basic block 118

;; Generating RTL for gimple basic block 119

;; Generating RTL for gimple basic block 120

;; Generating RTL for gimple basic block 121

;; Generating RTL for gimple basic block 122

;; Generating RTL for gimple basic block 123

;; Generating RTL for gimple basic block 124

;; Generating RTL for gimple basic block 125

;; Generating RTL for gimple basic block 126

;; Generating RTL for gimple basic block 127

;; Generating RTL for gimple basic block 128

;; Generating RTL for gimple basic block 129


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 75 from 10 to 16.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Edge 69->71 redirected to 73
Merging block 71 into block 70...
Merged blocks 70 and 71.
Merged 70 and 71 without moving.
Merging block 130 into block 129...
Merged blocks 129 and 130.
Merged 129 and 130 without moving.
Removing jump 876.
Merging block 131 into block 129...
Merged blocks 129 and 131.
Merged 129 and 131 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2116 [0xfffffffffffff7bc])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) signapp.c:138 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2128 [0xfffffffffffff7b0])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) signapp.c:138 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.18560+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:138 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (const_int 0 [0])) signapp.c:139 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])
        (const_int 0 [0])) signapp.c:141 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2088 [0xfffffffffffff7d8])) [0 pwSession+0 S4 A32])
        (const_int 0 [0])) signapp.c:142 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2040 [0xfffffffffffff808])) [0 messageString+0 S8 A64])
        (const_int 0 [0])) signapp.c:143 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])
        (const_int 1073741831 [0x40000007])) signapp.c:146 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2108 [0xfffffffffffff7c4])) [0 sessionHandle+0 S4 A32])
        (const_int 1073741831 [0x40000007])) signapp.c:147 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2104 [0xfffffffffffff7c8])) [0 ekKeyHandle+0 S4 A64])
        (const_int 1073741831 [0x40000007])) signapp.c:148 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2100 [0xfffffffffffff7cc])) [0 keyHandle+0 S4 A32])
        (const_int 1073741831 [0x40000007])) signapp.c:151 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 87 [ D.18551 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7fc11292f5a0 stdout>) [0 stdout+0 S8 A64])) signapp.c:154 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) signapp.c:154 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) signapp.c:154 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (const_int 0 [0])) signapp.c:154 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.18551 ])) signapp.c:154 -1
     (nil))
(call_insn 21 20 22 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("setvbuf") [flags 0x41]  <function_decl 0x7fc11296f1b0 setvbuf>) [0 setvbuf S1 A8])
            (const_int 0 [0]))) signapp.c:154 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref:DI ("ERR_load_crypto_strings") [flags 0x41]  <function_decl 0x7fc112401798 ERR_load_crypto_strings>) [0 ERR_load_crypto_strings S1 A8])
        (const_int 0 [0])) signapp.c:155 -1
     (nil)
    (nil))
(call_insn 23 22 24 2 (call (mem:QI (symbol_ref:DI ("OPENSSL_add_all_algorithms_noconf") [flags 0x41]  <function_decl 0x7fc112148ca8 OPENSSL_add_all_algorithms_noconf>) [0 OPENSSL_add_all_algorithms_noconf S1 A8])
        (const_int 0 [0])) signapp.c:156 -1
     (nil)
    (nil))
(insn 24 23 25 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fc111c60e10 *.LC0>)) signapp.c:157 -1
     (nil))
(insn 25 24 26 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) signapp.c:157 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (const_int 0 [0])) signapp.c:157 -1
     (nil))
(call_insn 27 26 28 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7fc1125cdd80 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) signapp.c:157 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 28 27 29 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2092 [0xfffffffffffff7d4])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) signapp.c:160 -1
     (nil))
(jump_insn 29 28 30 2 (set (pc)
        (label_ref 142)) signapp.c:160 -1
     (nil)
 -> 142)
(barrier 30 29 148)
(code_label 148 30 31 4 11 "" [1 uses])
(note 31 148 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (reg:SI 225)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2092 [0xfffffffffffff7d4])) [0 i+0 S4 A32])) signapp.c:161 -1
     (nil))
(insn 33 32 34 4 (set (reg:DI 88 [ D.18552 ])
        (sign_extend:DI (reg:SI 225))) signapp.c:161 -1
     (nil))
(insn 34 33 35 4 (parallel [
            (set (reg:DI 89 [ D.18552 ])
                (ashift:DI (reg:DI 88 [ D.18552 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:161 -1
     (nil))
(insn 35 34 36 4 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2128 [0xfffffffffffff7b0])) [0 argv+0 S8 A64])) signapp.c:161 -1
     (nil))
(insn 36 35 37 4 (parallel [
            (set (reg/f:DI 90 [ D.18553 ])
                (plus:DI (reg:DI 89 [ D.18552 ])
                    (reg/f:DI 226)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:161 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2128 [0xfffffffffffff7b0])) [0 argv+0 S8 A64])
            (reg:DI 89 [ D.18552 ]))
        (nil)))
(insn 37 36 38 4 (set (reg/f:DI 91 [ D.18554 ])
        (mem/f:DI (reg/f:DI 90 [ D.18553 ]) [0 *_101+0 S8 A64])) signapp.c:161 -1
     (nil))
(insn 38 37 39 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fc111c60ea0 *.LC1>)) signapp.c:161 -1
     (nil))
(insn 39 38 40 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.18554 ])) signapp.c:161 -1
     (nil))
(call_insn/i 40 39 41 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fc1128770d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) signapp.c:161 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 41 40 42 4 (set (reg:SI 92 [ D.18555 ])
        (reg:SI 0 ax)) signapp.c:161 -1
     (nil))
(insn 42 41 43 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:161 -1
     (nil))
(jump_insn 43 42 44 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) signapp.c:161 -1
     (nil)
 -> 48)
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2088 [0xfffffffffffff7d8])) [0 pwSession+0 S4 A32])
        (const_int 1 [0x1])) signapp.c:162 -1
     (nil))
(jump_insn 46 45 47 5 (set (pc)
        (label_ref 139)) -1
     (nil)
 -> 139)
(barrier 47 46 48)
(code_label 48 47 49 6 3 "" [1 uses])
(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 6 (set (reg:SI 227)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2092 [0xfffffffffffff7d4])) [0 i+0 S4 A32])) signapp.c:164 -1
     (nil))
(insn 51 50 52 6 (set (reg:DI 93 [ D.18552 ])
        (sign_extend:DI (reg:SI 227))) signapp.c:164 -1
     (nil))
(insn 52 51 53 6 (parallel [
            (set (reg:DI 94 [ D.18552 ])
                (ashift:DI (reg:DI 93 [ D.18552 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:164 -1
     (nil))
(insn 53 52 54 6 (set (reg/f:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2128 [0xfffffffffffff7b0])) [0 argv+0 S8 A64])) signapp.c:164 -1
     (nil))
(insn 54 53 55 6 (parallel [
            (set (reg/f:DI 95 [ D.18553 ])
                (plus:DI (reg:DI 94 [ D.18552 ])
                    (reg/f:DI 228)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:164 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2128 [0xfffffffffffff7b0])) [0 argv+0 S8 A64])
            (reg:DI 94 [ D.18552 ]))
        (nil)))
(insn 55 54 56 6 (set (reg/f:DI 96 [ D.18554 ])
        (mem/f:DI (reg/f:DI 95 [ D.18553 ]) [0 *_107+0 S8 A64])) signapp.c:164 -1
     (nil))
(insn 56 55 57 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fc111c60f30 *.LC2>)) signapp.c:164 -1
     (nil))
(insn 57 56 58 6 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.18554 ])) signapp.c:164 -1
     (nil))
(call_insn/i 58 57 59 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fc1128770d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) signapp.c:164 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 59 58 60 6 (set (reg:SI 97 [ D.18555 ])
        (reg:SI 0 ax)) signapp.c:164 -1
     (nil))
(insn 60 59 61 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:164 -1
     (nil))
(jump_insn 61 60 62 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) signapp.c:164 -1
     (nil)
 -> 86)
(note 62 61 63 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2092 [0xfffffffffffff7d4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2092 [0xfffffffffffff7d4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:165 -1
     (nil))
(insn 64 63 65 7 (set (reg:SI 229)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2092 [0xfffffffffffff7d4])) [0 i+0 S4 A32])) signapp.c:166 -1
     (nil))
(insn 65 64 66 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 229)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2116 [0xfffffffffffff7bc])) [0 argc+0 S4 A32]))) signapp.c:166 -1
     (nil))
(jump_insn 66 65 67 7 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) signapp.c:166 -1
     (nil)
 -> 77)
(note 67 66 68 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 8 (set (reg:SI 230)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2092 [0xfffffffffffff7d4])) [0 i+0 S4 A32])) signapp.c:167 -1
     (nil))
(insn 69 68 70 8 (set (reg:DI 98 [ D.18552 ])
        (sign_extend:DI (reg:SI 230))) signapp.c:167 -1
     (nil))
(insn 70 69 71 8 (parallel [
            (set (reg:DI 99 [ D.18552 ])
                (ashift:DI (reg:DI 98 [ D.18552 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:167 -1
     (nil))
(insn 71 70 72 8 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2128 [0xfffffffffffff7b0])) [0 argv+0 S8 A64])) signapp.c:167 -1
     (nil))
(insn 72 71 73 8 (parallel [
            (set (reg/f:DI 100 [ D.18553 ])
                (plus:DI (reg:DI 99 [ D.18552 ])
                    (reg/f:DI 231)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:167 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2128 [0xfffffffffffff7b0])) [0 argv+0 S8 A64])
            (reg:DI 99 [ D.18552 ]))
        (nil)))
(insn 73 72 74 8 (set (reg/f:DI 232)
        (mem/f:DI (reg/f:DI 100 [ D.18553 ]) [0 *_113+0 S8 A64])) signapp.c:167 -1
     (nil))
(insn 74 73 75 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2040 [0xfffffffffffff808])) [0 messageString+0 S8 A64])
        (reg/f:DI 232)) signapp.c:167 -1
     (nil))
(jump_insn 75 74 76 8 (set (pc)
        (label_ref:DI 139)) 654 {jump}
     (nil)
 -> 139)
(barrier 76 75 77)
(code_label 77 76 78 9 6 "" [1 uses])
(note 78 77 79 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fc111c606c0 *.LC3>)) signapp.c:170 -1
     (nil))
(call_insn 80 79 81 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fc112880360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) signapp.c:170 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 81 80 84 9 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fc111bee0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) signapp.c:171 -1
     (nil)
    (nil))
(jump_insn 84 81 85 9 (set (pc)
        (label_ref 139)) -1
     (nil)
 -> 139)
(barrier 85 84 86)
(code_label 86 85 87 11 5 "" [1 uses])
(note 87 86 88 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 11 (set (reg:SI 233)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2092 [0xfffffffffffff7d4])) [0 i+0 S4 A32])) signapp.c:174 -1
     (nil))
(insn 89 88 90 11 (set (reg:DI 101 [ D.18552 ])
        (sign_extend:DI (reg:SI 233))) signapp.c:174 -1
     (nil))
(insn 90 89 91 11 (parallel [
            (set (reg:DI 102 [ D.18552 ])
                (ashift:DI (reg:DI 101 [ D.18552 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:174 -1
     (nil))
(insn 91 90 92 11 (set (reg/f:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2128 [0xfffffffffffff7b0])) [0 argv+0 S8 A64])) signapp.c:174 -1
     (nil))
(insn 92 91 93 11 (parallel [
            (set (reg/f:DI 103 [ D.18553 ])
                (plus:DI (reg:DI 102 [ D.18552 ])
                    (reg/f:DI 234)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:174 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2128 [0xfffffffffffff7b0])) [0 argv+0 S8 A64])
            (reg:DI 102 [ D.18552 ]))
        (nil)))
(insn 93 92 94 11 (set (reg/f:DI 104 [ D.18554 ])
        (mem/f:DI (reg/f:DI 103 [ D.18553 ]) [0 *_119+0 S8 A64])) signapp.c:174 -1
     (nil))
(insn 94 93 95 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fc111c60750 *.LC4>)) signapp.c:174 -1
     (nil))
(insn 95 94 96 11 (set (reg:DI 5 di)
        (reg/f:DI 104 [ D.18554 ])) signapp.c:174 -1
     (nil))
(call_insn/i 96 95 97 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fc1128770d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) signapp.c:174 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 97 96 98 11 (set (reg:SI 105 [ D.18555 ])
        (reg:SI 0 ax)) signapp.c:174 -1
     (nil))
(insn 98 97 99 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 105 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:174 -1
     (nil))
(jump_insn 99 98 100 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) signapp.c:174 -1
     (nil)
 -> 104)
(note 100 99 101 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 101 100 102 12 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fc111bee0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) signapp.c:175 -1
     (nil)
    (nil))
(jump_insn 102 101 103 12 (set (pc)
        (label_ref 139)) -1
     (nil)
 -> 139)
(barrier 103 102 104)
(code_label 104 103 105 13 8 "" [1 uses])
(note 105 104 106 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 13 (set (reg:SI 235)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2092 [0xfffffffffffff7d4])) [0 i+0 S4 A32])) signapp.c:177 -1
     (nil))
(insn 107 106 108 13 (set (reg:DI 106 [ D.18552 ])
        (sign_extend:DI (reg:SI 235))) signapp.c:177 -1
     (nil))
(insn 108 107 109 13 (parallel [
            (set (reg:DI 107 [ D.18552 ])
                (ashift:DI (reg:DI 106 [ D.18552 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:177 -1
     (nil))
(insn 109 108 110 13 (set (reg/f:DI 236)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2128 [0xfffffffffffff7b0])) [0 argv+0 S8 A64])) signapp.c:177 -1
     (nil))
(insn 110 109 111 13 (parallel [
            (set (reg/f:DI 108 [ D.18553 ])
                (plus:DI (reg:DI 107 [ D.18552 ])
                    (reg/f:DI 236)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:177 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2128 [0xfffffffffffff7b0])) [0 argv+0 S8 A64])
            (reg:DI 107 [ D.18552 ]))
        (nil)))
(insn 111 110 112 13 (set (reg/f:DI 109 [ D.18554 ])
        (mem/f:DI (reg/f:DI 108 [ D.18553 ]) [0 *_125+0 S8 A64])) signapp.c:177 -1
     (nil))
(insn 112 111 113 13 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fc111c88000 *.LC5>)) signapp.c:177 -1
     (nil))
(insn 113 112 114 13 (set (reg:DI 5 di)
        (reg/f:DI 109 [ D.18554 ])) signapp.c:177 -1
     (nil))
(call_insn/i 114 113 115 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fc1128770d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) signapp.c:177 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 115 114 116 13 (set (reg:SI 110 [ D.18555 ])
        (reg:SI 0 ax)) signapp.c:177 -1
     (nil))
(insn 116 115 117 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 110 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:177 -1
     (nil))
(jump_insn 117 116 118 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 126)
            (pc))) signapp.c:177 -1
     (nil)
 -> 126)
(note 118 117 119 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 14 (set (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])
        (const_int 1 [0x1])) signapp.c:178 -1
     (nil))
(insn 120 119 121 14 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fc111c88090 *.LC6>)) signapp.c:179 -1
     (nil))
(insn 121 120 122 14 (set (reg:SI 4 si)
        (const_int 1 [0x1])) signapp.c:179 -1
     (nil))
(insn 122 121 123 14 (set (reg:DI 5 di)
        (const_int 0 [0])) signapp.c:179 -1
     (nil))
(call_insn 123 122 124 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7fc1125cdd80 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) signapp.c:179 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 124 123 125 14 (set (pc)
        (label_ref 139)) -1
     (nil)
 -> 139)
(barrier 125 124 126)
(code_label 126 125 127 15 9 "" [1 uses])
(note 127 126 128 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 15 (set (reg:SI 237)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2092 [0xfffffffffffff7d4])) [0 i+0 S4 A32])) signapp.c:182 -1
     (nil))
(insn 129 128 130 15 (set (reg:DI 111 [ D.18552 ])
        (sign_extend:DI (reg:SI 237))) signapp.c:182 -1
     (nil))
(insn 130 129 131 15 (parallel [
            (set (reg:DI 112 [ D.18552 ])
                (ashift:DI (reg:DI 111 [ D.18552 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:182 -1
     (nil))
(insn 131 130 132 15 (set (reg/f:DI 238)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2128 [0xfffffffffffff7b0])) [0 argv+0 S8 A64])) signapp.c:182 -1
     (nil))
(insn 132 131 133 15 (parallel [
            (set (reg/f:DI 113 [ D.18553 ])
                (plus:DI (reg:DI 112 [ D.18552 ])
                    (reg/f:DI 238)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:182 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2128 [0xfffffffffffff7b0])) [0 argv+0 S8 A64])
            (reg:DI 112 [ D.18552 ]))
        (nil)))
(insn 133 132 134 15 (set (reg/f:DI 114 [ D.18554 ])
        (mem/f:DI (reg/f:DI 113 [ D.18553 ]) [0 *_132+0 S8 A64])) signapp.c:182 -1
     (nil))
(insn 134 133 135 15 (set (reg:DI 4 si)
        (reg/f:DI 114 [ D.18554 ])) signapp.c:182 -1
     (nil))
(insn 135 134 136 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fc111c88120 *.LC7>)) signapp.c:182 -1
     (nil))
(insn 136 135 137 15 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:182 -1
     (nil))
(call_insn 137 136 138 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:182 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(call_insn 138 137 139 15 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fc111bee0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) signapp.c:183 -1
     (nil)
    (nil))
(code_label 139 138 140 16 4 "" [5 uses])
(note 140 139 141 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2092 [0xfffffffffffff7d4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2092 [0xfffffffffffff7d4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:160 -1
     (nil))
(code_label 142 141 143 17 2 "" [1 uses])
(note 143 142 144 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 17 (set (reg:SI 239)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2092 [0xfffffffffffff7d4])) [0 i+0 S4 A32])) signapp.c:160 -1
     (nil))
(insn 145 144 146 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 239)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2116 [0xfffffffffffff7bc])) [0 argc+0 S4 A32]))) signapp.c:160 -1
     (nil))
(jump_insn 146 145 147 17 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) signapp.c:160 -1
     (nil)
 -> 151)
(note 147 146 149 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 149 147 150 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:160 -1
     (nil))
(jump_insn 150 149 151 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) signapp.c:160 -1
     (nil)
 -> 148)
(code_label 151 150 152 19 10 "" [1 uses])
(note 152 151 153 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2040 [0xfffffffffffff808])) [0 messageString+0 S8 A64])
            (const_int 0 [0]))) signapp.c:186 -1
     (nil))
(jump_insn 154 153 155 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) signapp.c:186 -1
     (nil)
 -> 159)
(note 155 154 156 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 20 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fc111c881b0 *.LC8>)) signapp.c:187 -1
     (nil))
(call_insn 157 156 158 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fc112880360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) signapp.c:187 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 158 157 159 20 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fc111bee0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) signapp.c:188 -1
     (nil)
    (nil))
(code_label 159 158 160 21 12 "" [1 uses])
(note 160 159 161 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:191 -1
     (nil))
(jump_insn 162 161 163 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) signapp.c:191 -1
     (nil)
 -> 187)
(note 163 162 164 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 22 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2032 [0xfffffffffffff810])) [0 messageDigest.hashAlg+0 S2 A64])
        (const_int 11 [0xb])) signapp.c:192 -1
     (nil))
(insn 165 164 166 22 (set (reg:HI 115 [ D.18556 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2032 [0xfffffffffffff810])) [0 messageDigest.hashAlg+0 S2 A64])) signapp.c:194 -1
     (nil))
(insn 166 165 167 22 (set (reg:SI 116 [ D.18555 ])
        (zero_extend:SI (reg:HI 115 [ D.18556 ]))) signapp.c:194 -1
     (nil))
(insn 167 166 168 22 (set (reg:SI 5 di)
        (reg:SI 116 [ D.18555 ])) signapp.c:194 -1
     (nil))
(call_insn 168 167 169 22 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_GetDigestSize") [flags 0x41]  <function_decl 0x7fc11228f798 TSS_GetDigestSize>) [0 TSS_GetDigestSize S1 A8])
            (const_int 0 [0]))) signapp.c:194 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 169 168 170 22 (set (reg:HI 117 [ D.18556 ])
        (reg:HI 0 ax)) signapp.c:194 -1
     (nil))
(insn 170 169 171 22 (set (reg:SI 240)
        (zero_extend:SI (reg:HI 117 [ D.18556 ]))) signapp.c:194 -1
     (nil))
(insn 171 170 172 22 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2084 [0xfffffffffffff7dc])) [0 sizeInBytes+0 S4 A32])
        (reg:SI 240)) signapp.c:194 -1
     (nil))
(insn 172 171 173 22 (set (reg:DI 241)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2040 [0xfffffffffffff808])) [0 messageString+0 S8 A64])) signapp.c:195 -1
     (nil))
(insn 173 172 174 22 (set (reg:DI 5 di)
        (reg:DI 241)) signapp.c:195 -1
     (nil))
(call_insn/i 174 173 175 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fc112877948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) signapp.c:195 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 175 174 176 22 (set (reg:DI 118 [ D.18552 ])
        (reg:DI 0 ax)) signapp.c:195 -1
     (nil))
(insn 176 175 177 22 (set (reg:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2040 [0xfffffffffffff808])) [0 messageString+0 S8 A64])) signapp.c:195 -1
     (nil))
(insn 177 176 178 22 (parallel [
            (set (reg:DI 243)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2032 [0xfffffffffffff810])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:195 -1
     (nil))
(insn 178 177 179 22 (set (reg:DI 37 r8)
        (const_int 0 [0])) signapp.c:195 -1
     (nil))
(insn 179 178 180 22 (set (reg:SI 2 cx)
        (const_int 0 [0])) signapp.c:195 -1
     (nil))
(insn 180 179 181 22 (set (reg:DI 1 dx)
        (reg:DI 242)) signapp.c:195 -1
     (nil))
(insn 181 180 182 22 (set (reg:DI 4 si)
        (reg:DI 118 [ D.18552 ])) signapp.c:195 -1
     (nil))
(insn 182 181 183 22 (set (reg:DI 5 di)
        (reg:DI 243)) signapp.c:195 -1
     (nil))
(insn 183 182 184 22 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:195 -1
     (nil))
(call_insn 184 183 185 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Hash_Generate") [flags 0x41]  <function_decl 0x7fc11228f948 TSS_Hash_Generate>) [0 TSS_Hash_Generate S1 A8])
            (const_int 0 [0]))) signapp.c:195 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 185 184 186 22 (set (reg:SI 244)
        (reg:SI 0 ax)) signapp.c:195 -1
     (nil))
(insn 186 185 187 22 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 244)) signapp.c:195 -1
     (nil))
(code_label 187 186 188 23 13 "" [1 uses])
(note 188 187 189 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:200 -1
     (nil))
(jump_insn 190 189 191 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 205)
            (pc))) signapp.c:200 -1
     (nil)
 -> 205)
(note 191 190 192 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 24 (set (reg:SI 119 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:201 -1
     (nil))
(insn 193 192 194 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:201 -1
     (nil))
(jump_insn 194 193 195 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) signapp.c:201 -1
     (nil)
 -> 198)
(note 195 194 196 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fc111c88240 *.LC9>)) signapp.c:201 -1
     (nil))
(call_insn 197 196 198 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fc112880360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) signapp.c:201 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 198 197 199 26 15 "" [1 uses])
(note 199 198 200 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 26 (parallel [
            (set (reg:DI 245)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2072 [0xfffffffffffff7e8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:202 -1
     (nil))
(insn 201 200 202 26 (set (reg:DI 5 di)
        (reg:DI 245)) signapp.c:202 -1
     (nil))
(call_insn 202 201 203 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Create") [flags 0x41]  <function_decl 0x7fc1125cdaf8 TSS_Create>) [0 TSS_Create S1 A8])
            (const_int 0 [0]))) signapp.c:202 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 203 202 204 26 (set (reg:SI 246)
        (reg:SI 0 ax)) signapp.c:202 -1
     (nil))
(insn 204 203 205 26 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 246)) signapp.c:202 -1
     (nil))
(code_label 205 204 206 27 14 "" [1 uses])
(note 206 205 207 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:206 -1
     (nil))
(jump_insn 208 207 209 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 242)
            (pc))) signapp.c:206 -1
     (nil)
 -> 242)
(note 209 208 210 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 28 (set (reg:SI 120 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:207 -1
     (nil))
(insn 211 210 212 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:207 -1
     (nil))
(jump_insn 212 211 213 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) signapp.c:207 -1
     (nil)
 -> 216)
(note 213 212 214 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 29 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fc111c882d0 *.LC10>)) signapp.c:207 -1
     (nil))
(call_insn 215 214 216 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fc112880360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) signapp.c:207 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 216 215 217 30 17 "" [1 uses])
(note 217 216 218 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 30 (set (reg:SI 121 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:208 -1
     (nil))
(insn 219 218 220 30 (set (reg/f:DI 122 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:208 -1
     (nil))
(insn 220 219 221 30 (parallel [
            (set (reg:DI 247)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2104 [0xfffffffffffff7c8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:208 -1
     (nil))
(insn 221 220 222 30 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:208 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 222 221 223 30 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 121 [ D.18555 ])) signapp.c:208 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 223 222 224 30 (set (reg:SI 38 r9)
        (const_int 1 [0x1])) signapp.c:208 -1
     (nil))
(insn 224 223 225 30 (set (reg:SI 37 r8)
        (const_int 29360132 [0x1c00004])) signapp.c:208 -1
     (nil))
(insn 225 224 226 30 (set (reg:SI 2 cx)
        (const_int 29360131 [0x1c00003])) signapp.c:208 -1
     (nil))
(insn 226 225 227 30 (set (reg:SI 1 dx)
        (const_int 29360130 [0x1c00002])) signapp.c:208 -1
     (nil))
(insn 227 226 228 30 (set (reg:DI 4 si)
        (reg:DI 247)) signapp.c:208 -1
     (nil))
(insn 228 227 229 30 (set (reg:DI 5 di)
        (reg/f:DI 122 [ D.18557 ])) signapp.c:208 -1
     (nil))
(call_insn 229 228 230 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("processPrimary") [flags 0x41]  <function_decl 0x7fc111fdcca8 processPrimary>) [0 processPrimary S1 A8])
            (const_int 16 [0x10]))) signapp.c:208 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 230 229 231 30 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:208 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 231 230 232 30 (set (reg:SI 248)
        (reg:SI 0 ax)) signapp.c:208 -1
     (nil))
(insn 232 231 233 30 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 248)) signapp.c:208 -1
     (nil))
(insn 233 232 234 30 (set (reg:SI 123 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:212 -1
     (nil))
(insn 234 233 235 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 123 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:212 -1
     (nil))
(jump_insn 235 234 236 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 242)
            (pc))) signapp.c:212 -1
     (nil)
 -> 242)
(note 236 235 237 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 238 31 (set (reg:SI 124 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2104 [0xfffffffffffff7c8])) [0 ekKeyHandle+0 S4 A64])) signapp.c:212 -1
     (nil))
(insn 238 237 239 31 (set (reg:SI 4 si)
        (reg:SI 124 [ D.18558 ])) signapp.c:212 -1
     (nil))
(insn 239 238 240 31 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fc111c88360 *.LC11>)) signapp.c:212 -1
     (nil))
(insn 240 239 241 31 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:212 -1
     (nil))
(call_insn 241 240 242 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:212 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 242 241 243 32 16 "" [2 uses])
(note 243 242 244 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:215 -1
     (nil))
(jump_insn 245 244 246 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 288)
            (pc))) signapp.c:215 -1
     (nil)
 -> 288)
(note 246 245 247 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 33 (set (reg:SI 125 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:217 -1
     (nil))
(insn 248 247 249 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 125 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:217 -1
     (nil))
(jump_insn 249 248 250 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 253)
            (pc))) signapp.c:217 -1
     (nil)
 -> 253)
(note 250 249 251 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 252 34 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fc111c883f0 *.LC12>)) signapp.c:217 -1
     (nil))
(call_insn 252 251 253 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fc112880360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) signapp.c:217 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 253 252 254 35 19 "" [1 uses])
(note 254 253 255 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2088 [0xfffffffffffff7d8])) [0 pwSession+0 S4 A32])
            (const_int 0 [0]))) signapp.c:218 -1
     (nil))
(jump_insn 256 255 257 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 262)
            (pc))) signapp.c:218 -1
     (nil)
 -> 262)
(note 257 256 258 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 258 257 259 36 (set (reg:SI 249)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2104 [0xfffffffffffff7c8])) [0 ekKeyHandle+0 S4 A64])) signapp.c:219 -1
     (nil))
(insn 259 258 260 36 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2080 [0xfffffffffffff7e0])) [0 saltHandle+0 S4 A32])
        (reg:SI 249)) signapp.c:219 -1
     (nil))
(jump_insn 260 259 261 36 (set (pc)
        (label_ref 265)) -1
     (nil)
 -> 265)
(barrier 261 260 262)
(code_label 262 261 263 37 20 "" [1 uses])
(note 263 262 264 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 37 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2080 [0xfffffffffffff7e0])) [0 saltHandle+0 S4 A32])
        (const_int 1073741831 [0x40000007])) signapp.c:222 -1
     (nil))
(code_label 265 264 266 38 21 "" [1 uses])
(note 266 265 267 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 38 (set (reg/f:DI 126 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:224 -1
     (nil))
(insn 268 267 269 38 (set (reg:SI 250)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2080 [0xfffffffffffff7e0])) [0 saltHandle+0 S4 A32])) signapp.c:224 -1
     (nil))
(insn 269 268 270 38 (parallel [
            (set (reg:DI 251)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2112 [0xfffffffffffff7c0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:224 -1
     (nil))
(insn 270 269 271 38 (set (reg:DI 38 r9)
        (const_int 0 [0])) signapp.c:224 -1
     (nil))
(insn 271 270 272 38 (set (reg:SI 37 r8)
        (const_int 1073741831 [0x40000007])) signapp.c:224 -1
     (nil))
(insn 272 271 273 38 (set (reg:SI 2 cx)
        (reg:SI 250)) signapp.c:224 -1
     (nil))
(insn 273 272 274 38 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) signapp.c:224 -1
     (nil))
(insn 274 273 275 38 (set (reg:DI 4 si)
        (reg:DI 251)) signapp.c:224 -1
     (nil))
(insn 275 274 276 38 (set (reg:DI 5 di)
        (reg/f:DI 126 [ D.18557 ])) signapp.c:224 -1
     (nil))
(call_insn 276 275 277 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("startSession") [flags 0x3]  <function_decl 0x7fc111fe65e8 startSession>) [0 startSession S1 A8])
            (const_int 0 [0]))) signapp.c:224 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 277 276 278 38 (set (reg:SI 252)
        (reg:SI 0 ax)) signapp.c:224 -1
     (nil))
(insn 278 277 279 38 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 252)) signapp.c:224 -1
     (nil))
(insn 279 278 280 38 (set (reg:SI 127 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:229 -1
     (nil))
(insn 280 279 281 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 127 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:229 -1
     (nil))
(jump_insn 281 280 282 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 288)
            (pc))) signapp.c:229 -1
     (nil)
 -> 288)
(note 282 281 283 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 39 (set (reg:SI 128 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:229 -1
     (nil))
(insn 284 283 285 39 (set (reg:SI 4 si)
        (reg:SI 128 [ D.18558 ])) signapp.c:229 -1
     (nil))
(insn 285 284 286 39 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fc111c88480 *.LC13>)) signapp.c:229 -1
     (nil))
(insn 286 285 287 39 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:229 -1
     (nil))
(call_insn 287 286 288 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:229 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 288 287 289 40 18 "" [2 uses])
(note 289 288 290 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:232 -1
     (nil))
(jump_insn 291 290 292 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 312)
            (pc))) signapp.c:232 -1
     (nil)
 -> 312)
(note 292 291 293 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 41 (set (reg:SI 129 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:233 -1
     (nil))
(insn 294 293 295 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 129 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:233 -1
     (nil))
(jump_insn 295 294 296 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) signapp.c:233 -1
     (nil)
 -> 302)
(note 296 295 297 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 298 42 (set (reg:SI 130 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:233 -1
     (nil))
(insn 298 297 299 42 (set (reg:SI 4 si)
        (reg:SI 130 [ D.18558 ])) signapp.c:233 -1
     (nil))
(insn 299 298 300 42 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fc111c88510 *.LC14>)) signapp.c:233 -1
     (nil))
(insn 300 299 301 42 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:233 -1
     (nil))
(call_insn 301 300 302 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:233 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 302 301 303 43 23 "" [1 uses])
(note 303 302 304 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 43 (set (reg:SI 131 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:234 -1
     (nil))
(insn 305 304 306 43 (set (reg/f:DI 132 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:234 -1
     (nil))
(insn 306 305 307 43 (set (reg:SI 1 dx)
        (reg:SI 131 [ D.18558 ])) signapp.c:234 -1
     (nil))
(insn 307 306 308 43 (set (reg:SI 4 si)
        (const_int 1073741835 [0x4000000b])) signapp.c:234 -1
     (nil))
(insn 308 307 309 43 (set (reg:DI 5 di)
        (reg/f:DI 132 [ D.18557 ])) signapp.c:234 -1
     (nil))
(call_insn 309 308 310 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("policySecret") [flags 0x3]  <function_decl 0x7fc111fe6a20 policySecret>) [0 policySecret S1 A8])
            (const_int 0 [0]))) signapp.c:234 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 310 309 311 43 (set (reg:SI 253)
        (reg:SI 0 ax)) signapp.c:234 -1
     (nil))
(insn 311 310 312 43 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 253)) signapp.c:234 -1
     (nil))
(code_label 312 311 313 44 22 "" [1 uses])
(note 313 312 314 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 314 313 315 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:238 -1
     (nil))
(jump_insn 315 314 316 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 335)
            (pc))) signapp.c:238 -1
     (nil)
 -> 335)
(note 316 315 317 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 317 316 318 45 (set (reg:SI 133 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:239 -1
     (nil))
(insn 318 317 319 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 133 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:239 -1
     (nil))
(jump_insn 319 318 320 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 326)
            (pc))) signapp.c:239 -1
     (nil)
 -> 326)
(note 320 319 321 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 46 (set (reg:SI 134 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:239 -1
     (nil))
(insn 322 321 323 46 (set (reg:SI 4 si)
        (reg:SI 134 [ D.18558 ])) signapp.c:239 -1
     (nil))
(insn 323 322 324 46 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fc111c885a0 *.LC15>)) signapp.c:239 -1
     (nil))
(insn 324 323 325 46 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:239 -1
     (nil))
(call_insn 325 324 326 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:239 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 326 325 327 47 25 "" [1 uses])
(note 327 326 328 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 328 327 329 47 (set (reg:SI 135 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:240 -1
     (nil))
(insn 329 328 330 47 (set (reg/f:DI 136 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:240 -1
     (nil))
(insn 330 329 331 47 (set (reg:SI 4 si)
        (reg:SI 135 [ D.18558 ])) signapp.c:240 -1
     (nil))
(insn 331 330 332 47 (set (reg:DI 5 di)
        (reg/f:DI 136 [ D.18557 ])) signapp.c:240 -1
     (nil))
(call_insn 332 331 333 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("policyGetDigest") [flags 0x3]  <function_decl 0x7fc111fe6af8 policyGetDigest>) [0 policyGetDigest S1 A8])
            (const_int 0 [0]))) signapp.c:240 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 333 332 334 47 (set (reg:SI 254)
        (reg:SI 0 ax)) signapp.c:240 -1
     (nil))
(insn 334 333 335 47 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 254)) signapp.c:240 -1
     (nil))
(code_label 335 334 336 48 24 "" [1 uses])
(note 336 335 337 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 337 336 338 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:244 -1
     (nil))
(jump_insn 338 337 339 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 369)
            (pc))) signapp.c:244 -1
     (nil)
 -> 369)
(note 339 338 340 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 340 339 341 49 (set (reg:SI 137 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:245 -1
     (nil))
(insn 341 340 342 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 137 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:245 -1
     (nil))
(jump_insn 342 341 343 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 349)
            (pc))) signapp.c:245 -1
     (nil)
 -> 349)
(note 343 342 344 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 345 50 (set (reg:SI 138 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2104 [0xfffffffffffff7c8])) [0 ekKeyHandle+0 S4 A64])) signapp.c:245 -1
     (nil))
(insn 345 344 346 50 (set (reg:SI 4 si)
        (reg:SI 138 [ D.18558 ])) signapp.c:245 -1
     (nil))
(insn 346 345 347 50 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fc111c88630 *.LC16>)) signapp.c:245 -1
     (nil))
(insn 347 346 348 50 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:245 -1
     (nil))
(call_insn 348 347 349 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:245 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 349 348 350 51 27 "" [1 uses])
(note 350 349 351 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 351 350 352 51 (set (reg:SI 139 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2104 [0xfffffffffffff7c8])) [0 ekKeyHandle+0 S4 A64])) signapp.c:246 -1
     (nil))
(insn 352 351 353 51 (set (reg:SI 140 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:246 -1
     (nil))
(insn 353 352 354 51 (set (reg/f:DI 141 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:246 -1
     (nil))
(insn 354 353 355 51 (parallel [
            (set (reg:DI 255)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1616 [0xfffffffffffff9b0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:246 -1
     (nil))
(insn 355 354 356 51 (parallel [
            (set (reg:DI 256)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1184 [0xfffffffffffffb60])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:246 -1
     (nil))
(insn 356 355 357 51 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:246 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 357 356 358 51 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2088 [0xfffffffffffff7d8])) [0 pwSession+0 S4 A32])) signapp.c:246 -1
     (nil))
(insn 358 357 359 51 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 257)) signapp.c:246 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 359 358 360 51 (set (reg:DI 38 r9)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fc111c886c0 *.LC17>)) signapp.c:246 -1
     (nil))
(insn 360 359 361 51 (set (reg:SI 37 r8)
        (reg:SI 139 [ D.18558 ])) signapp.c:246 -1
     (nil))
(insn 361 360 362 51 (set (reg:SI 2 cx)
        (reg:SI 140 [ D.18558 ])) signapp.c:246 -1
     (nil))
(insn 362 361 363 51 (set (reg:DI 1 dx)
        (reg:DI 255)) signapp.c:246 -1
     (nil))
(insn 363 362 364 51 (set (reg:DI 4 si)
        (reg:DI 256)) signapp.c:246 -1
     (nil))
(insn 364 363 365 51 (set (reg:DI 5 di)
        (reg/f:DI 141 [ D.18557 ])) signapp.c:246 -1
     (nil))
(call_insn 365 364 366 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("createKey") [flags 0x3]  <function_decl 0x7fc111fe6bd0 createKey>) [0 createKey S1 A8])
            (const_int 16 [0x10]))) signapp.c:246 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 366 365 367 51 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:246 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 367 366 368 51 (set (reg:SI 258)
        (reg:SI 0 ax)) signapp.c:246 -1
     (nil))
(insn 368 367 369 51 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 258)) signapp.c:246 -1
     (nil))
(code_label 369 368 370 52 26 "" [1 uses])
(note 370 369 371 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 371 370 372 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:255 -1
     (nil))
(jump_insn 372 371 373 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 392)
            (pc))) signapp.c:255 -1
     (nil)
 -> 392)
(note 373 372 374 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 374 373 375 53 (set (reg:SI 142 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:256 -1
     (nil))
(insn 375 374 376 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 142 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:256 -1
     (nil))
(jump_insn 376 375 377 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 383)
            (pc))) signapp.c:256 -1
     (nil)
 -> 383)
(note 377 376 378 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 378 377 379 54 (set (reg:SI 143 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:256 -1
     (nil))
(insn 379 378 380 54 (set (reg:SI 4 si)
        (reg:SI 143 [ D.18558 ])) signapp.c:256 -1
     (nil))
(insn 380 379 381 54 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fc111c88750 *.LC18>)) signapp.c:256 -1
     (nil))
(insn 381 380 382 54 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:256 -1
     (nil))
(call_insn 382 381 383 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:256 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 383 382 384 55 29 "" [1 uses])
(note 384 383 385 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 385 384 386 55 (set (reg:SI 144 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:257 -1
     (nil))
(insn 386 385 387 55 (set (reg/f:DI 145 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:257 -1
     (nil))
(insn 387 386 388 55 (set (reg:SI 4 si)
        (reg:SI 144 [ D.18558 ])) signapp.c:257 -1
     (nil))
(insn 388 387 389 55 (set (reg:DI 5 di)
        (reg/f:DI 145 [ D.18557 ])) signapp.c:257 -1
     (nil))
(call_insn 389 388 390 55 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("policyRestart") [flags 0x3]  <function_decl 0x7fc111fe66c0 policyRestart>) [0 policyRestart S1 A8])
            (const_int 0 [0]))) signapp.c:257 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 390 389 391 55 (set (reg:SI 259)
        (reg:SI 0 ax)) signapp.c:257 -1
     (nil))
(insn 391 390 392 55 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 259)) signapp.c:257 -1
     (nil))
(code_label 392 391 393 56 28 "" [1 uses])
(note 393 392 394 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 394 393 395 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:261 -1
     (nil))
(jump_insn 395 394 396 56 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 416)
            (pc))) signapp.c:261 -1
     (nil)
 -> 416)
(note 396 395 397 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 397 396 398 57 (set (reg:SI 146 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:262 -1
     (nil))
(insn 398 397 399 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 146 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:262 -1
     (nil))
(jump_insn 399 398 400 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 406)
            (pc))) signapp.c:262 -1
     (nil)
 -> 406)
(note 400 399 401 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 401 400 402 58 (set (reg:SI 147 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:262 -1
     (nil))
(insn 402 401 403 58 (set (reg:SI 4 si)
        (reg:SI 147 [ D.18558 ])) signapp.c:262 -1
     (nil))
(insn 403 402 404 58 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fc111c88510 *.LC14>)) signapp.c:262 -1
     (nil))
(insn 404 403 405 58 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:262 -1
     (nil))
(call_insn 405 404 406 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:262 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 406 405 407 59 31 "" [1 uses])
(note 407 406 408 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 408 407 409 59 (set (reg:SI 148 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:263 -1
     (nil))
(insn 409 408 410 59 (set (reg/f:DI 149 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:263 -1
     (nil))
(insn 410 409 411 59 (set (reg:SI 1 dx)
        (reg:SI 148 [ D.18558 ])) signapp.c:263 -1
     (nil))
(insn 411 410 412 59 (set (reg:SI 4 si)
        (const_int 1073741835 [0x4000000b])) signapp.c:263 -1
     (nil))
(insn 412 411 413 59 (set (reg:DI 5 di)
        (reg/f:DI 149 [ D.18557 ])) signapp.c:263 -1
     (nil))
(call_insn 413 412 414 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("policySecret") [flags 0x3]  <function_decl 0x7fc111fe6a20 policySecret>) [0 policySecret S1 A8])
            (const_int 0 [0]))) signapp.c:263 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 414 413 415 59 (set (reg:SI 260)
        (reg:SI 0 ax)) signapp.c:263 -1
     (nil))
(insn 415 414 416 59 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 260)) signapp.c:263 -1
     (nil))
(code_label 416 415 417 60 30 "" [1 uses])
(note 417 416 418 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 418 417 419 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:268 -1
     (nil))
(jump_insn 419 418 420 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 460)
            (pc))) signapp.c:268 -1
     (nil)
 -> 460)
(note 420 419 421 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 421 420 422 61 (set (reg:SI 150 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:269 -1
     (nil))
(insn 422 421 423 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 150 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:269 -1
     (nil))
(jump_insn 423 422 424 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 430)
            (pc))) signapp.c:269 -1
     (nil)
 -> 430)
(note 424 423 425 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 425 424 426 62 (set (reg:SI 151 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2104 [0xfffffffffffff7c8])) [0 ekKeyHandle+0 S4 A64])) signapp.c:269 -1
     (nil))
(insn 426 425 427 62 (set (reg:SI 4 si)
        (reg:SI 151 [ D.18558 ])) signapp.c:269 -1
     (nil))
(insn 427 426 428 62 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fc111c887e0 *.LC19>)) signapp.c:269 -1
     (nil))
(insn 428 427 429 62 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:269 -1
     (nil))
(call_insn 429 428 430 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:269 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 430 429 431 63 33 "" [1 uses])
(note 431 430 432 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 432 431 433 63 (set (reg:SI 152 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:270 -1
     (nil))
(insn 433 432 434 63 (set (reg:SI 153 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2104 [0xfffffffffffff7c8])) [0 ekKeyHandle+0 S4 A64])) signapp.c:270 -1
     (nil))
(insn 434 433 435 63 (set (reg/f:DI 154 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:270 -1
     (nil))
(insn 435 434 436 63 (parallel [
            (set (reg:DI 261)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1616 [0xfffffffffffff9b0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:270 -1
     (nil))
(insn 436 435 437 63 (parallel [
            (set (reg:DI 262)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1184 [0xfffffffffffffb60])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:270 -1
     (nil))
(insn 437 436 438 63 (parallel [
            (set (reg:DI 263)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2100 [0xfffffffffffff7cc])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:270 -1
     (nil))
(insn 438 437 439 63 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:270 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 439 438 440 63 (set (reg:SI 264)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2088 [0xfffffffffffff7d8])) [0 pwSession+0 S4 A32])) signapp.c:270 -1
     (nil))
(insn 440 439 441 63 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 264)) signapp.c:270 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 441 440 442 63 (set (reg:DI 38 r9)
        (reg:DI 261)) signapp.c:270 -1
     (nil))
(insn 442 441 443 63 (set (reg:DI 37 r8)
        (reg:DI 262)) signapp.c:270 -1
     (nil))
(insn 443 442 444 63 (set (reg:SI 2 cx)
        (reg:SI 152 [ D.18558 ])) signapp.c:270 -1
     (nil))
(insn 444 443 445 63 (set (reg:SI 1 dx)
        (reg:SI 153 [ D.18558 ])) signapp.c:270 -1
     (nil))
(insn 445 444 446 63 (set (reg:DI 4 si)
        (reg:DI 263)) signapp.c:270 -1
     (nil))
(insn 446 445 447 63 (set (reg:DI 5 di)
        (reg/f:DI 154 [ D.18557 ])) signapp.c:270 -1
     (nil))
(call_insn 447 446 448 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("loadKey") [flags 0x3]  <function_decl 0x7fc111fe6ca8 loadKey>) [0 loadKey S1 A8])
            (const_int 16 [0x10]))) signapp.c:270 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 448 447 449 63 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:270 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 449 448 450 63 (set (reg:SI 265)
        (reg:SI 0 ax)) signapp.c:270 -1
     (nil))
(insn 450 449 451 63 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 265)) signapp.c:270 -1
     (nil))
(insn 451 450 452 63 (set (reg:SI 155 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:277 -1
     (nil))
(insn 452 451 453 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 155 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:277 -1
     (nil))
(jump_insn 453 452 454 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 460)
            (pc))) signapp.c:277 -1
     (nil)
 -> 460)
(note 454 453 455 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 455 454 456 64 (set (reg:SI 156 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2100 [0xfffffffffffff7cc])) [0 keyHandle+0 S4 A32])) signapp.c:277 -1
     (nil))
(insn 456 455 457 64 (set (reg:SI 4 si)
        (reg:SI 156 [ D.18558 ])) signapp.c:277 -1
     (nil))
(insn 457 456 458 64 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fc111c88870 *.LC20>)) signapp.c:277 -1
     (nil))
(insn 458 457 459 64 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:277 -1
     (nil))
(call_insn 459 458 460 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:277 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 460 459 461 65 32 "" [2 uses])
(note 461 460 462 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 462 461 463 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:280 -1
     (nil))
(jump_insn 463 462 464 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 505)
            (pc))) signapp.c:280 -1
     (nil)
 -> 505)
(note 464 463 465 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 465 464 466 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2088 [0xfffffffffffff7d8])) [0 pwSession+0 S4 A32])
            (const_int 0 [0]))) signapp.c:281 -1
     (nil))
(jump_insn 466 465 467 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 502)
            (pc))) signapp.c:281 -1
     (nil)
 -> 502)
(note 467 466 468 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 469 67 (set (reg:SI 157 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:282 -1
     (nil))
(insn 469 468 470 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 157 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:282 -1
     (nil))
(jump_insn 470 469 471 67 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 474)
            (pc))) signapp.c:282 -1
     (nil)
 -> 474)
(note 471 470 472 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 472 471 473 68 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fc111c88900 *.LC21>)) signapp.c:282 -1
     (nil))
(call_insn 473 472 474 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fc112880360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) signapp.c:282 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 474 473 475 69 36 "" [1 uses])
(note 475 474 476 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 477 69 (set (reg:SI 158 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2100 [0xfffffffffffff7cc])) [0 keyHandle+0 S4 A32])) signapp.c:283 -1
     (nil))
(insn 477 476 478 69 (set (reg:SI 159 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2104 [0xfffffffffffff7c8])) [0 ekKeyHandle+0 S4 A64])) signapp.c:283 -1
     (nil))
(insn 478 477 479 69 (set (reg/f:DI 160 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:283 -1
     (nil))
(insn 479 478 480 69 (parallel [
            (set (reg:DI 266)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2108 [0xfffffffffffff7c4])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:283 -1
     (nil))
(insn 480 479 481 69 (set (reg:DI 38 r9)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fc111c886c0 *.LC17>)) signapp.c:283 -1
     (nil))
(insn 481 480 482 69 (set (reg:SI 37 r8)
        (reg:SI 158 [ D.18558 ])) signapp.c:283 -1
     (nil))
(insn 482 481 483 69 (set (reg:SI 2 cx)
        (reg:SI 159 [ D.18558 ])) signapp.c:283 -1
     (nil))
(insn 483 482 484 69 (set (reg:SI 1 dx)
        (const_int 0 [0])) signapp.c:283 -1
     (nil))
(insn 484 483 485 69 (set (reg:DI 4 si)
        (reg:DI 266)) signapp.c:283 -1
     (nil))
(insn 485 484 486 69 (set (reg:DI 5 di)
        (reg/f:DI 160 [ D.18557 ])) signapp.c:283 -1
     (nil))
(call_insn 486 485 487 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("startSession") [flags 0x3]  <function_decl 0x7fc111fe65e8 startSession>) [0 startSession S1 A8])
            (const_int 0 [0]))) signapp.c:283 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 487 486 488 69 (set (reg:SI 267)
        (reg:SI 0 ax)) signapp.c:283 -1
     (nil))
(insn 488 487 489 69 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 267)) signapp.c:283 -1
     (nil))
(insn 489 488 490 69 (set (reg:SI 161 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:290 -1
     (nil))
(insn 490 489 491 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 161 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:290 -1
     (nil))
(jump_insn 491 490 492 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 505)
            (pc))) signapp.c:290 612 {*jcc_1}
     (nil)
 -> 505)
(note 492 491 493 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 493 492 494 70 (set (reg:SI 162 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2108 [0xfffffffffffff7c4])) [0 sessionHandle+0 S4 A32])) signapp.c:290 -1
     (nil))
(insn 494 493 495 70 (set (reg:SI 4 si)
        (reg:SI 162 [ D.18558 ])) signapp.c:290 -1
     (nil))
(insn 495 494 496 70 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fc111c88990 *.LC22>)) signapp.c:290 -1
     (nil))
(insn 496 495 497 70 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:290 -1
     (nil))
(call_insn 497 496 500 70 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:290 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(jump_insn 500 497 501 70 (set (pc)
        (label_ref 505)) -1
     (nil)
 -> 505)
(barrier 501 500 502)
(code_label 502 501 503 72 35 "" [1 uses])
(note 503 502 504 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 504 503 505 72 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2108 [0xfffffffffffff7c4])) [0 sessionHandle+0 S4 A32])
        (const_int 1073741833 [0x40000009])) signapp.c:293 -1
     (nil))
(code_label 505 504 506 73 34 "" [3 uses])
(note 506 505 507 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 507 506 508 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:300 -1
     (nil))
(jump_insn 508 507 509 73 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 536)
            (pc))) signapp.c:300 -1
     (nil)
 -> 536)
(note 509 508 510 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 510 509 511 74 (set (reg:SI 163 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:301 -1
     (nil))
(insn 511 510 512 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 163 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:301 -1
     (nil))
(jump_insn 512 511 513 74 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 519)
            (pc))) signapp.c:301 -1
     (nil)
 -> 519)
(note 513 512 514 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 514 513 515 75 (set (reg:SI 164 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2100 [0xfffffffffffff7cc])) [0 keyHandle+0 S4 A32])) signapp.c:301 -1
     (nil))
(insn 515 514 516 75 (set (reg:SI 4 si)
        (reg:SI 164 [ D.18558 ])) signapp.c:301 -1
     (nil))
(insn 516 515 517 75 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fc111c88a20 *.LC23>)) signapp.c:301 -1
     (nil))
(insn 517 516 518 75 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:301 -1
     (nil))
(call_insn 518 517 519 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:301 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 519 518 520 76 39 "" [1 uses])
(note 520 519 521 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 521 520 522 76 (set (reg:SI 165 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2108 [0xfffffffffffff7c4])) [0 sessionHandle+0 S4 A32])) signapp.c:302 -1
     (nil))
(insn 522 521 523 76 (set (reg:SI 166 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2100 [0xfffffffffffff7cc])) [0 keyHandle+0 S4 A32])) signapp.c:302 -1
     (nil))
(insn 523 522 524 76 (set (reg/f:DI 167 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:302 -1
     (nil))
(insn 524 523 525 76 (parallel [
            (set (reg:DI 268)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2032 [0xfffffffffffff810])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:302 -1
     (nil))
(insn 525 524 526 76 (set (reg:SI 269)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2084 [0xfffffffffffff7dc])) [0 sizeInBytes+0 S4 A32])) signapp.c:302 -1
     (nil))
(insn 526 525 527 76 (parallel [
            (set (reg:DI 270)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1888 [0xfffffffffffff8a0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:302 -1
     (nil))
(insn 527 526 528 76 (set (reg:DI 38 r9)
        (reg:DI 268)) signapp.c:302 -1
     (nil))
(insn 528 527 529 76 (set (reg:SI 37 r8)
        (reg:SI 269)) signapp.c:302 -1
     (nil))
(insn 529 528 530 76 (set (reg:SI 2 cx)
        (reg:SI 165 [ D.18558 ])) signapp.c:302 -1
     (nil))
(insn 530 529 531 76 (set (reg:SI 1 dx)
        (reg:SI 166 [ D.18558 ])) signapp.c:302 -1
     (nil))
(insn 531 530 532 76 (set (reg:DI 4 si)
        (reg:DI 270)) signapp.c:302 -1
     (nil))
(insn 532 531 533 76 (set (reg:DI 5 di)
        (reg/f:DI 167 [ D.18557 ])) signapp.c:302 -1
     (nil))
(call_insn 533 532 534 76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sign") [flags 0x3]  <function_decl 0x7fc111fe6d80 sign>) [0 sign S1 A8])
            (const_int 0 [0]))) signapp.c:302 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 534 533 535 76 (set (reg:SI 271)
        (reg:SI 0 ax)) signapp.c:302 -1
     (nil))
(insn 535 534 536 76 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 271)) signapp.c:302 -1
     (nil))
(code_label 536 535 537 77 38 "" [1 uses])
(note 537 536 538 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 538 537 539 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:310 -1
     (nil))
(jump_insn 539 538 540 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 565)
            (pc))) signapp.c:310 -1
     (nil)
 -> 565)
(note 540 539 541 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 541 540 542 78 (set (reg:SI 168 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:311 -1
     (nil))
(insn 542 541 543 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 168 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:311 -1
     (nil))
(jump_insn 543 542 544 78 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 550)
            (pc))) signapp.c:311 -1
     (nil)
 -> 550)
(note 544 543 545 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 545 544 546 79 (set (reg:SI 169 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2100 [0xfffffffffffff7cc])) [0 keyHandle+0 S4 A32])) signapp.c:311 -1
     (nil))
(insn 546 545 547 79 (set (reg:SI 4 si)
        (reg:SI 169 [ D.18558 ])) signapp.c:311 -1
     (nil))
(insn 547 546 548 79 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fc111c88ab0 *.LC24>)) signapp.c:311 -1
     (nil))
(insn 548 547 549 79 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:311 -1
     (nil))
(call_insn 549 548 550 79 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:311 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 550 549 551 80 41 "" [1 uses])
(note 551 550 552 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 552 551 553 80 (set (reg:SI 170 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2100 [0xfffffffffffff7cc])) [0 keyHandle+0 S4 A32])) signapp.c:312 -1
     (nil))
(insn 553 552 554 80 (set (reg/f:DI 171 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:312 -1
     (nil))
(insn 554 553 555 80 (parallel [
            (set (reg:DI 272)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1888 [0xfffffffffffff8a0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:312 -1
     (nil))
(insn 555 554 556 80 (parallel [
            (set (reg:DI 273)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2032 [0xfffffffffffff810])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:312 -1
     (nil))
(insn 556 555 557 80 (set (reg:SI 274)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2084 [0xfffffffffffff7dc])) [0 sizeInBytes+0 S4 A32])) signapp.c:312 -1
     (nil))
(insn 557 556 558 80 (set (reg:DI 37 r8)
        (reg:DI 272)) signapp.c:312 -1
     (nil))
(insn 558 557 559 80 (set (reg:DI 2 cx)
        (reg:DI 273)) signapp.c:312 -1
     (nil))
(insn 559 558 560 80 (set (reg:SI 1 dx)
        (reg:SI 274)) signapp.c:312 -1
     (nil))
(insn 560 559 561 80 (set (reg:SI 4 si)
        (reg:SI 170 [ D.18558 ])) signapp.c:312 -1
     (nil))
(insn 561 560 562 80 (set (reg:DI 5 di)
        (reg/f:DI 171 [ D.18557 ])) signapp.c:312 -1
     (nil))
(call_insn 562 561 563 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("verify") [flags 0x3]  <function_decl 0x7fc111fe6e58 verify>) [0 verify S1 A8])
            (const_int 0 [0]))) signapp.c:312 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 563 562 564 80 (set (reg:SI 275)
        (reg:SI 0 ax)) signapp.c:312 -1
     (nil))
(insn 564 563 565 80 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 275)) signapp.c:312 -1
     (nil))
(code_label 565 564 566 81 40 "" [1 uses])
(note 566 565 567 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 567 566 568 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:321 -1
     (nil))
(jump_insn 568 567 569 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 588)
            (pc))) signapp.c:321 -1
     (nil)
 -> 588)
(note 569 568 570 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 570 569 571 82 (set (reg:SI 172 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:322 -1
     (nil))
(insn 571 570 572 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 172 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:322 -1
     (nil))
(jump_insn 572 571 573 82 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 579)
            (pc))) signapp.c:322 -1
     (nil)
 -> 579)
(note 573 572 574 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 574 573 575 83 (set (reg:SI 173 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:322 -1
     (nil))
(insn 575 574 576 83 (set (reg:SI 4 si)
        (reg:SI 173 [ D.18558 ])) signapp.c:322 -1
     (nil))
(insn 576 575 577 83 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fc111c88750 *.LC18>)) signapp.c:322 -1
     (nil))
(insn 577 576 578 83 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:322 -1
     (nil))
(call_insn 578 577 579 83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:322 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 579 578 580 84 43 "" [1 uses])
(note 580 579 581 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 581 580 582 84 (set (reg:SI 174 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:323 -1
     (nil))
(insn 582 581 583 84 (set (reg/f:DI 175 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:323 -1
     (nil))
(insn 583 582 584 84 (set (reg:SI 4 si)
        (reg:SI 174 [ D.18558 ])) signapp.c:323 -1
     (nil))
(insn 584 583 585 84 (set (reg:DI 5 di)
        (reg/f:DI 175 [ D.18557 ])) signapp.c:323 -1
     (nil))
(call_insn 585 584 586 84 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("policyRestart") [flags 0x3]  <function_decl 0x7fc111fe66c0 policyRestart>) [0 policyRestart S1 A8])
            (const_int 0 [0]))) signapp.c:323 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 586 585 587 84 (set (reg:SI 276)
        (reg:SI 0 ax)) signapp.c:323 -1
     (nil))
(insn 587 586 588 84 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 276)) signapp.c:323 -1
     (nil))
(code_label 588 587 589 85 42 "" [1 uses])
(note 589 588 590 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 590 589 591 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:327 -1
     (nil))
(jump_insn 591 590 592 85 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 612)
            (pc))) signapp.c:327 -1
     (nil)
 -> 612)
(note 592 591 593 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 593 592 594 86 (set (reg:SI 176 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:328 -1
     (nil))
(insn 594 593 595 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 176 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:328 -1
     (nil))
(jump_insn 595 594 596 86 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 602)
            (pc))) signapp.c:328 -1
     (nil)
 -> 602)
(note 596 595 597 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 597 596 598 87 (set (reg:SI 177 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:328 -1
     (nil))
(insn 598 597 599 87 (set (reg:SI 4 si)
        (reg:SI 177 [ D.18558 ])) signapp.c:328 -1
     (nil))
(insn 599 598 600 87 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fc111c88510 *.LC14>)) signapp.c:328 -1
     (nil))
(insn 600 599 601 87 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:328 -1
     (nil))
(call_insn 601 600 602 87 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:328 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 602 601 603 88 45 "" [1 uses])
(note 603 602 604 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 604 603 605 88 (set (reg:SI 178 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:329 -1
     (nil))
(insn 605 604 606 88 (set (reg/f:DI 179 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:329 -1
     (nil))
(insn 606 605 607 88 (set (reg:SI 1 dx)
        (reg:SI 178 [ D.18558 ])) signapp.c:329 -1
     (nil))
(insn 607 606 608 88 (set (reg:SI 4 si)
        (const_int 349 [0x15d])) signapp.c:329 -1
     (nil))
(insn 608 607 609 88 (set (reg:DI 5 di)
        (reg/f:DI 179 [ D.18557 ])) signapp.c:329 -1
     (nil))
(call_insn 609 608 610 88 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("policyCommandCode") [flags 0x3]  <function_decl 0x7fc111fe6798 policyCommandCode>) [0 policyCommandCode S1 A8])
            (const_int 0 [0]))) signapp.c:329 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 610 609 611 88 (set (reg:SI 277)
        (reg:SI 0 ax)) signapp.c:329 -1
     (nil))
(insn 611 610 612 88 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 277)) signapp.c:329 -1
     (nil))
(code_label 612 611 613 89 44 "" [1 uses])
(note 613 612 614 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 614 613 615 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:334 -1
     (nil))
(jump_insn 615 614 616 89 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 649)
            (pc))) signapp.c:334 -1
     (nil)
 -> 649)
(note 616 615 617 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 617 616 618 90 (set (reg:SI 180 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:335 -1
     (nil))
(insn 618 617 619 90 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 180 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:335 -1
     (nil))
(jump_insn 619 618 620 90 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 626)
            (pc))) signapp.c:335 -1
     (nil)
 -> 626)
(note 620 619 621 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 621 620 622 91 (set (reg:SI 181 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:335 -1
     (nil))
(insn 622 621 623 91 (set (reg:SI 4 si)
        (reg:SI 181 [ D.18558 ])) signapp.c:335 -1
     (nil))
(insn 623 622 624 91 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fc111c88510 *.LC14>)) signapp.c:335 -1
     (nil))
(insn 624 623 625 91 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:335 -1
     (nil))
(call_insn 625 624 626 91 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:335 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 626 625 627 92 47 "" [1 uses])
(note 627 626 628 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 628 627 629 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2088 [0xfffffffffffff7d8])) [0 pwSession+0 S4 A32])
            (const_int 0 [0]))) signapp.c:336 -1
     (nil))
(jump_insn 629 628 630 92 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 640)
            (pc))) signapp.c:336 -1
     (nil)
 -> 640)
(note 630 629 631 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 631 630 632 93 (set (reg:SI 182 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:337 -1
     (nil))
(insn 632 631 633 93 (set (reg/f:DI 183 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:337 -1
     (nil))
(insn 633 632 634 93 (set (reg:SI 4 si)
        (reg:SI 182 [ D.18558 ])) signapp.c:337 -1
     (nil))
(insn 634 633 635 93 (set (reg:DI 5 di)
        (reg/f:DI 183 [ D.18557 ])) signapp.c:337 -1
     (nil))
(call_insn 635 634 636 93 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("policyAuthValue") [flags 0x3]  <function_decl 0x7fc111fe6870 policyAuthValue>) [0 policyAuthValue S1 A8])
            (const_int 0 [0]))) signapp.c:337 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 636 635 637 93 (set (reg:SI 278)
        (reg:SI 0 ax)) signapp.c:337 -1
     (nil))
(insn 637 636 638 93 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 278)) signapp.c:337 -1
     (nil))
(jump_insn 638 637 639 93 (set (pc)
        (label_ref 649)) -1
     (nil)
 -> 649)
(barrier 639 638 640)
(code_label 640 639 641 94 48 "" [1 uses])
(note 641 640 642 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 642 641 643 94 (set (reg:SI 184 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:341 -1
     (nil))
(insn 643 642 644 94 (set (reg/f:DI 185 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:341 -1
     (nil))
(insn 644 643 645 94 (set (reg:SI 4 si)
        (reg:SI 184 [ D.18558 ])) signapp.c:341 -1
     (nil))
(insn 645 644 646 94 (set (reg:DI 5 di)
        (reg/f:DI 185 [ D.18557 ])) signapp.c:341 -1
     (nil))
(call_insn 646 645 647 94 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("policyPassword") [flags 0x3]  <function_decl 0x7fc111fe6948 policyPassword>) [0 policyPassword S1 A8])
            (const_int 0 [0]))) signapp.c:341 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 647 646 648 94 (set (reg:SI 279)
        (reg:SI 0 ax)) signapp.c:341 -1
     (nil))
(insn 648 647 649 94 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 279)) signapp.c:341 -1
     (nil))
(code_label 649 648 650 95 46 "" [2 uses])
(note 650 649 651 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 651 650 652 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:345 -1
     (nil))
(jump_insn 652 651 653 95 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 672)
            (pc))) signapp.c:345 -1
     (nil)
 -> 672)
(note 653 652 654 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 654 653 655 96 (set (reg:SI 186 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:346 -1
     (nil))
(insn 655 654 656 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:346 -1
     (nil))
(jump_insn 656 655 657 96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 663)
            (pc))) signapp.c:346 -1
     (nil)
 -> 663)
(note 657 656 658 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 658 657 659 97 (set (reg:SI 187 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:346 -1
     (nil))
(insn 659 658 660 97 (set (reg:SI 4 si)
        (reg:SI 187 [ D.18558 ])) signapp.c:346 -1
     (nil))
(insn 660 659 661 97 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fc111c885a0 *.LC15>)) signapp.c:346 -1
     (nil))
(insn 661 660 662 97 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:346 -1
     (nil))
(call_insn 662 661 663 97 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:346 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 663 662 664 98 50 "" [1 uses])
(note 664 663 665 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 665 664 666 98 (set (reg:SI 188 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:347 -1
     (nil))
(insn 666 665 667 98 (set (reg/f:DI 189 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:347 -1
     (nil))
(insn 667 666 668 98 (set (reg:SI 4 si)
        (reg:SI 188 [ D.18558 ])) signapp.c:347 -1
     (nil))
(insn 668 667 669 98 (set (reg:DI 5 di)
        (reg/f:DI 189 [ D.18557 ])) signapp.c:347 -1
     (nil))
(call_insn 669 668 670 98 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("policyGetDigest") [flags 0x3]  <function_decl 0x7fc111fe6af8 policyGetDigest>) [0 policyGetDigest S1 A8])
            (const_int 0 [0]))) signapp.c:347 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 670 669 671 98 (set (reg:SI 280)
        (reg:SI 0 ax)) signapp.c:347 -1
     (nil))
(insn 671 670 672 98 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 280)) signapp.c:347 -1
     (nil))
(code_label 672 671 673 99 49 "" [1 uses])
(note 673 672 674 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 674 673 675 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:351 -1
     (nil))
(jump_insn 675 674 676 99 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 703)
            (pc))) signapp.c:351 -1
     (nil)
 -> 703)
(note 676 675 677 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 677 676 678 100 (set (reg:SI 190 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:352 -1
     (nil))
(insn 678 677 679 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 190 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:352 -1
     (nil))
(jump_insn 679 678 680 100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 686)
            (pc))) signapp.c:352 -1
     (nil)
 -> 686)
(note 680 679 681 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 681 680 682 101 (set (reg:SI 191 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2100 [0xfffffffffffff7cc])) [0 keyHandle+0 S4 A32])) signapp.c:352 -1
     (nil))
(insn 682 681 683 101 (set (reg:SI 4 si)
        (reg:SI 191 [ D.18558 ])) signapp.c:352 -1
     (nil))
(insn 683 682 684 101 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fc111c88a20 *.LC23>)) signapp.c:352 -1
     (nil))
(insn 684 683 685 101 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:352 -1
     (nil))
(call_insn 685 684 686 101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:352 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 686 685 687 102 52 "" [1 uses])
(note 687 686 688 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 688 687 689 102 (set (reg:SI 192 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:353 -1
     (nil))
(insn 689 688 690 102 (set (reg:SI 193 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2100 [0xfffffffffffff7cc])) [0 keyHandle+0 S4 A32])) signapp.c:353 -1
     (nil))
(insn 690 689 691 102 (set (reg/f:DI 194 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:353 -1
     (nil))
(insn 691 690 692 102 (parallel [
            (set (reg:DI 281)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2032 [0xfffffffffffff810])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:353 -1
     (nil))
(insn 692 691 693 102 (set (reg:SI 282)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2084 [0xfffffffffffff7dc])) [0 sizeInBytes+0 S4 A32])) signapp.c:353 -1
     (nil))
(insn 693 692 694 102 (parallel [
            (set (reg:DI 283)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1888 [0xfffffffffffff8a0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:353 -1
     (nil))
(insn 694 693 695 102 (set (reg:DI 38 r9)
        (reg:DI 281)) signapp.c:353 -1
     (nil))
(insn 695 694 696 102 (set (reg:SI 37 r8)
        (reg:SI 282)) signapp.c:353 -1
     (nil))
(insn 696 695 697 102 (set (reg:SI 2 cx)
        (reg:SI 192 [ D.18558 ])) signapp.c:353 -1
     (nil))
(insn 697 696 698 102 (set (reg:SI 1 dx)
        (reg:SI 193 [ D.18558 ])) signapp.c:353 -1
     (nil))
(insn 698 697 699 102 (set (reg:DI 4 si)
        (reg:DI 283)) signapp.c:353 -1
     (nil))
(insn 699 698 700 102 (set (reg:DI 5 di)
        (reg/f:DI 194 [ D.18557 ])) signapp.c:353 -1
     (nil))
(call_insn 700 699 701 102 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sign") [flags 0x3]  <function_decl 0x7fc111fe6d80 sign>) [0 sign S1 A8])
            (const_int 0 [0]))) signapp.c:353 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 701 700 702 102 (set (reg:SI 284)
        (reg:SI 0 ax)) signapp.c:353 -1
     (nil))
(insn 702 701 703 102 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 284)) signapp.c:353 -1
     (nil))
(code_label 703 702 704 103 51 "" [1 uses])
(note 704 703 705 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 705 704 706 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:361 -1
     (nil))
(jump_insn 706 705 707 103 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 732)
            (pc))) signapp.c:361 -1
     (nil)
 -> 732)
(note 707 706 708 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 708 707 709 104 (set (reg:SI 195 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:362 -1
     (nil))
(insn 709 708 710 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 195 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:362 -1
     (nil))
(jump_insn 710 709 711 104 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 717)
            (pc))) signapp.c:362 -1
     (nil)
 -> 717)
(note 711 710 712 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 712 711 713 105 (set (reg:SI 196 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2100 [0xfffffffffffff7cc])) [0 keyHandle+0 S4 A32])) signapp.c:362 -1
     (nil))
(insn 713 712 714 105 (set (reg:SI 4 si)
        (reg:SI 196 [ D.18558 ])) signapp.c:362 -1
     (nil))
(insn 714 713 715 105 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fc111c88ab0 *.LC24>)) signapp.c:362 -1
     (nil))
(insn 715 714 716 105 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:362 -1
     (nil))
(call_insn 716 715 717 105 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:362 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 717 716 718 106 54 "" [1 uses])
(note 718 717 719 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 719 718 720 106 (set (reg:SI 197 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2100 [0xfffffffffffff7cc])) [0 keyHandle+0 S4 A32])) signapp.c:363 -1
     (nil))
(insn 720 719 721 106 (set (reg/f:DI 198 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:363 -1
     (nil))
(insn 721 720 722 106 (parallel [
            (set (reg:DI 285)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1888 [0xfffffffffffff8a0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:363 -1
     (nil))
(insn 722 721 723 106 (parallel [
            (set (reg:DI 286)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2032 [0xfffffffffffff810])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:363 -1
     (nil))
(insn 723 722 724 106 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2084 [0xfffffffffffff7dc])) [0 sizeInBytes+0 S4 A32])) signapp.c:363 -1
     (nil))
(insn 724 723 725 106 (set (reg:DI 37 r8)
        (reg:DI 285)) signapp.c:363 -1
     (nil))
(insn 725 724 726 106 (set (reg:DI 2 cx)
        (reg:DI 286)) signapp.c:363 -1
     (nil))
(insn 726 725 727 106 (set (reg:SI 1 dx)
        (reg:SI 287)) signapp.c:363 -1
     (nil))
(insn 727 726 728 106 (set (reg:SI 4 si)
        (reg:SI 197 [ D.18558 ])) signapp.c:363 -1
     (nil))
(insn 728 727 729 106 (set (reg:DI 5 di)
        (reg/f:DI 198 [ D.18557 ])) signapp.c:363 -1
     (nil))
(call_insn 729 728 730 106 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("verify") [flags 0x3]  <function_decl 0x7fc111fe6e58 verify>) [0 verify S1 A8])
            (const_int 0 [0]))) signapp.c:363 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 730 729 731 106 (set (reg:SI 288)
        (reg:SI 0 ax)) signapp.c:363 -1
     (nil))
(insn 731 730 732 106 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 288)) signapp.c:363 -1
     (nil))
(code_label 732 731 733 107 53 "" [1 uses])
(note 733 732 734 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 734 733 735 107 (set (reg:SI 199 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:370 -1
     (nil))
(insn 735 734 736 107 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 199 [ D.18558 ])
            (const_int 1073741831 [0x40000007]))) signapp.c:370 -1
     (nil))
(jump_insn 736 735 737 107 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 754)
            (pc))) signapp.c:370 -1
     (nil)
 -> 754)
(note 737 736 738 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 738 737 739 108 (set (reg:SI 200 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:371 -1
     (nil))
(insn 739 738 740 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 200 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:371 -1
     (nil))
(jump_insn 740 739 741 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 747)
            (pc))) signapp.c:371 -1
     (nil)
 -> 747)
(note 741 740 742 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 742 741 743 109 (set (reg:SI 201 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:371 -1
     (nil))
(insn 743 742 744 109 (set (reg:SI 4 si)
        (reg:SI 201 [ D.18558 ])) signapp.c:371 -1
     (nil))
(insn 744 743 745 109 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fc111c88b40 *.LC25>)) signapp.c:371 -1
     (nil))
(insn 745 744 746 109 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:371 -1
     (nil))
(call_insn 746 745 747 109 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:371 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 747 746 748 110 56 "" [1 uses])
(note 748 747 749 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 749 748 750 110 (set (reg:SI 202 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 policySessionHandle+0 S4 A64])) signapp.c:372 -1
     (nil))
(insn 750 749 751 110 (set (reg/f:DI 203 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:372 -1
     (nil))
(insn 751 750 752 110 (set (reg:SI 4 si)
        (reg:SI 202 [ D.18558 ])) signapp.c:372 -1
     (nil))
(insn 752 751 753 110 (set (reg:DI 5 di)
        (reg/f:DI 203 [ D.18557 ])) signapp.c:372 -1
     (nil))
(call_insn 753 752 754 110 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("flush") [flags 0x3]  <function_decl 0x7fc111bee000 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) signapp.c:372 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(code_label 754 753 755 111 55 "" [1 uses])
(note 755 754 756 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 756 755 757 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2088 [0xfffffffffffff7d8])) [0 pwSession+0 S4 A32])
            (const_int 0 [0]))) signapp.c:375 -1
     (nil))
(jump_insn 757 756 758 111 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 779)
            (pc))) signapp.c:375 -1
     (nil)
 -> 779)
(note 758 757 759 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 759 758 760 112 (set (reg:SI 204 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2108 [0xfffffffffffff7c4])) [0 sessionHandle+0 S4 A32])) signapp.c:376 -1
     (nil))
(insn 760 759 761 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 204 [ D.18558 ])
            (const_int 1073741831 [0x40000007]))) signapp.c:376 -1
     (nil))
(jump_insn 761 760 762 112 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 779)
            (pc))) signapp.c:376 -1
     (nil)
 -> 779)
(note 762 761 763 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 763 762 764 113 (set (reg:SI 205 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:377 -1
     (nil))
(insn 764 763 765 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 205 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:377 -1
     (nil))
(jump_insn 765 764 766 113 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 772)
            (pc))) signapp.c:377 -1
     (nil)
 -> 772)
(note 766 765 767 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 767 766 768 114 (set (reg:SI 206 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2108 [0xfffffffffffff7c4])) [0 sessionHandle+0 S4 A32])) signapp.c:377 -1
     (nil))
(insn 768 767 769 114 (set (reg:SI 4 si)
        (reg:SI 206 [ D.18558 ])) signapp.c:377 -1
     (nil))
(insn 769 768 770 114 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fc111c88bd0 *.LC26>)) signapp.c:377 -1
     (nil))
(insn 770 769 771 114 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:377 -1
     (nil))
(call_insn 771 770 772 114 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:377 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 772 771 773 115 58 "" [1 uses])
(note 773 772 774 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 774 773 775 115 (set (reg:SI 207 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2108 [0xfffffffffffff7c4])) [0 sessionHandle+0 S4 A32])) signapp.c:378 -1
     (nil))
(insn 775 774 776 115 (set (reg/f:DI 208 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:378 -1
     (nil))
(insn 776 775 777 115 (set (reg:SI 4 si)
        (reg:SI 207 [ D.18558 ])) signapp.c:378 -1
     (nil))
(insn 777 776 778 115 (set (reg:DI 5 di)
        (reg/f:DI 208 [ D.18557 ])) signapp.c:378 -1
     (nil))
(call_insn 778 777 779 115 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("flush") [flags 0x3]  <function_decl 0x7fc111bee000 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) signapp.c:378 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(code_label 779 778 780 116 57 "" [2 uses])
(note 780 779 781 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 781 780 782 116 (set (reg:SI 209 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2104 [0xfffffffffffff7c8])) [0 ekKeyHandle+0 S4 A64])) signapp.c:382 -1
     (nil))
(insn 782 781 783 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 209 [ D.18558 ])
            (const_int 1073741831 [0x40000007]))) signapp.c:382 -1
     (nil))
(jump_insn 783 782 784 116 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 801)
            (pc))) signapp.c:382 -1
     (nil)
 -> 801)
(note 784 783 785 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 785 784 786 117 (set (reg:SI 210 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:383 -1
     (nil))
(insn 786 785 787 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 210 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:383 -1
     (nil))
(jump_insn 787 786 788 117 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 794)
            (pc))) signapp.c:383 -1
     (nil)
 -> 794)
(note 788 787 789 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 789 788 790 118 (set (reg:SI 211 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2104 [0xfffffffffffff7c8])) [0 ekKeyHandle+0 S4 A64])) signapp.c:383 -1
     (nil))
(insn 790 789 791 118 (set (reg:SI 4 si)
        (reg:SI 211 [ D.18558 ])) signapp.c:383 -1
     (nil))
(insn 791 790 792 118 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fc111c88c60 *.LC27>)) signapp.c:383 -1
     (nil))
(insn 792 791 793 118 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:383 -1
     (nil))
(call_insn 793 792 794 118 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:383 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 794 793 795 119 60 "" [1 uses])
(note 795 794 796 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 796 795 797 119 (set (reg:SI 212 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2104 [0xfffffffffffff7c8])) [0 ekKeyHandle+0 S4 A64])) signapp.c:384 -1
     (nil))
(insn 797 796 798 119 (set (reg/f:DI 213 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:384 -1
     (nil))
(insn 798 797 799 119 (set (reg:SI 4 si)
        (reg:SI 212 [ D.18558 ])) signapp.c:384 -1
     (nil))
(insn 799 798 800 119 (set (reg:DI 5 di)
        (reg/f:DI 213 [ D.18557 ])) signapp.c:384 -1
     (nil))
(call_insn 800 799 801 119 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("flush") [flags 0x3]  <function_decl 0x7fc111bee000 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) signapp.c:384 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(code_label 801 800 802 120 59 "" [1 uses])
(note 802 801 803 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 803 802 804 120 (set (reg:SI 214 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2100 [0xfffffffffffff7cc])) [0 keyHandle+0 S4 A32])) signapp.c:387 -1
     (nil))
(insn 804 803 805 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 214 [ D.18558 ])
            (const_int 1073741831 [0x40000007]))) signapp.c:387 -1
     (nil))
(jump_insn 805 804 806 120 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 823)
            (pc))) signapp.c:387 -1
     (nil)
 -> 823)
(note 806 805 807 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 807 806 808 121 (set (reg:SI 215 [ D.18555 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:388 -1
     (nil))
(insn 808 807 809 121 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 215 [ D.18555 ])
            (const_int 0 [0]))) signapp.c:388 -1
     (nil))
(jump_insn 809 808 810 121 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 816)
            (pc))) signapp.c:388 -1
     (nil)
 -> 816)
(note 810 809 811 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 811 810 812 122 (set (reg:SI 216 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2100 [0xfffffffffffff7cc])) [0 keyHandle+0 S4 A32])) signapp.c:388 -1
     (nil))
(insn 812 811 813 122 (set (reg:SI 4 si)
        (reg:SI 216 [ D.18558 ])) signapp.c:388 -1
     (nil))
(insn 813 812 814 122 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fc111c88cf0 *.LC28>)) signapp.c:388 -1
     (nil))
(insn 814 813 815 122 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:388 -1
     (nil))
(call_insn 815 814 816 122 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:388 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 816 815 817 123 62 "" [1 uses])
(note 817 816 818 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 818 817 819 123 (set (reg:SI 217 [ D.18558 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2100 [0xfffffffffffff7cc])) [0 keyHandle+0 S4 A32])) signapp.c:389 -1
     (nil))
(insn 819 818 820 123 (set (reg/f:DI 218 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:389 -1
     (nil))
(insn 820 819 821 123 (set (reg:SI 4 si)
        (reg:SI 217 [ D.18558 ])) signapp.c:389 -1
     (nil))
(insn 821 820 822 123 (set (reg:DI 5 di)
        (reg/f:DI 218 [ D.18557 ])) signapp.c:389 -1
     (nil))
(call_insn 822 821 823 123 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("flush") [flags 0x3]  <function_decl 0x7fc111bee000 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) signapp.c:389 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(code_label 823 822 824 124 61 "" [1 uses])
(note 824 823 825 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 825 824 826 124 (set (reg/f:DI 219 [ D.18557 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 tssContext+0 S8 A64])) signapp.c:392 -1
     (nil))
(insn 826 825 827 124 (set (reg:DI 5 di)
        (reg/f:DI 219 [ D.18557 ])) signapp.c:392 -1
     (nil))
(call_insn 827 826 828 124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Delete") [flags 0x41]  <function_decl 0x7fc1125cdbd0 TSS_Delete>) [0 TSS_Delete S1 A8])
            (const_int 0 [0]))) signapp.c:392 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 828 827 829 124 (set (reg:SI 289)
        (reg:SI 0 ax)) signapp.c:392 -1
     (nil))
(insn 829 828 830 124 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2076 [0xfffffffffffff7e4])) [0 rc1+0 S4 A32])
        (reg:SI 289)) signapp.c:392 -1
     (nil))
(insn 830 829 831 124 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:393 -1
     (nil))
(jump_insn 831 830 832 124 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 835)
            (pc))) signapp.c:393 -1
     (nil)
 -> 835)
(note 832 831 833 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 833 832 834 125 (set (reg:SI 290)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2076 [0xfffffffffffff7e4])) [0 rc1+0 S4 A32])) signapp.c:394 -1
     (nil))
(insn 834 833 835 125 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (reg:SI 290)) signapp.c:394 -1
     (nil))
(code_label 835 834 836 126 63 "" [1 uses])
(note 836 835 837 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 837 836 838 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:397 -1
     (nil))
(jump_insn 838 837 839 126 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 844)
            (pc))) signapp.c:397 -1
     (nil)
 -> 844)
(note 839 838 840 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 840 839 841 127 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fc111c88d80 *.LC29>)) signapp.c:398 -1
     (nil))
(call_insn 841 840 842 127 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fc112880360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) signapp.c:398 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 842 841 843 127 (set (pc)
        (label_ref 870)) -1
     (nil)
 -> 870)
(barrier 843 842 844)
(code_label 844 843 845 128 64 "" [1 uses])
(note 845 844 846 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 846 845 847 128 (set (reg:SI 291)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])) signapp.c:404 -1
     (nil))
(insn 847 846 848 128 (set (reg:SI 4 si)
        (reg:SI 291)) signapp.c:404 -1
     (nil))
(insn 848 847 849 128 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7fc111c88e10 *.LC30>)) signapp.c:404 -1
     (nil))
(insn 849 848 850 128 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:404 -1
     (nil))
(call_insn 850 849 851 128 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:404 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 851 850 852 128 (set (reg:SI 292)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])) signapp.c:405 -1
     (nil))
(insn 852 851 853 128 (parallel [
            (set (reg:DI 293)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2048 [0xfffffffffffff800])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:405 -1
     (nil))
(insn 853 852 854 128 (parallel [
            (set (reg:DI 294)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2056 [0xfffffffffffff7f8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:405 -1
     (nil))
(insn 854 853 855 128 (parallel [
            (set (reg:DI 295)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2064 [0xfffffffffffff7f0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:405 -1
     (nil))
(insn 855 854 856 128 (set (reg:SI 2 cx)
        (reg:SI 292)) signapp.c:405 -1
     (nil))
(insn 856 855 857 128 (set (reg:DI 1 dx)
        (reg:DI 293)) signapp.c:405 -1
     (nil))
(insn 857 856 858 128 (set (reg:DI 4 si)
        (reg:DI 294)) signapp.c:405 -1
     (nil))
(insn 858 857 859 128 (set (reg:DI 5 di)
        (reg:DI 295)) signapp.c:405 -1
     (nil))
(call_insn 859 858 860 128 (call (mem:QI (symbol_ref:DI ("TSS_ResponseCode_toString") [flags 0x41]  <function_decl 0x7fc1125d5ca8 TSS_ResponseCode_toString>) [0 TSS_ResponseCode_toString S1 A8])
        (const_int 0 [0])) signapp.c:405 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 860 859 861 128 (set (reg/f:DI 220 [ D.18559 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2048 [0xfffffffffffff800])) [0 num+0 S8 A64])) signapp.c:406 -1
     (nil))
(insn 861 860 862 128 (set (reg/f:DI 221 [ D.18559 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2056 [0xfffffffffffff7f8])) [0 submsg+0 S8 A64])) signapp.c:406 -1
     (nil))
(insn 862 861 863 128 (set (reg/f:DI 222 [ D.18559 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2064 [0xfffffffffffff7f0])) [0 msg+0 S8 A64])) signapp.c:406 -1
     (nil))
(insn 863 862 864 128 (set (reg:DI 2 cx)
        (reg/f:DI 220 [ D.18559 ])) signapp.c:406 -1
     (nil))
(insn 864 863 865 128 (set (reg:DI 1 dx)
        (reg/f:DI 221 [ D.18559 ])) signapp.c:406 -1
     (nil))
(insn 865 864 866 128 (set (reg:DI 4 si)
        (reg/f:DI 222 [ D.18559 ])) signapp.c:406 -1
     (nil))
(insn 866 865 867 128 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7fc111c88ea0 *.LC31>)) signapp.c:406 -1
     (nil))
(insn 867 866 868 128 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:406 -1
     (nil))
(call_insn 868 867 869 128 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fc11287dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) signapp.c:406 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 869 868 870 128 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) signapp.c:407 -1
     (nil))
(code_label 870 869 871 129 65 "" [1 uses])
(note 871 870 872 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 872 871 875 129 (set (reg:SI 223 [ D.18555 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 rc+0 S4 A32])) signapp.c:409 -1
     (nil))
(insn 875 872 879 129 (set (reg:SI 224 [ <retval> ])
        (reg:SI 223 [ D.18555 ])) -1
     (nil))
(insn 879 875 880 129 (set (reg/i:SI 0 ax)
        (reg:SI 224 [ <retval> ])) signapp.c:410 -1
     (nil))
(insn 880 879 881 129 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.18560+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) signapp.c:410 -1
     (nil))
(jump_insn 881 880 887 129 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 884)
            (pc))) signapp.c:410 -1
     (nil)
 -> 884)
(note 887 881 882 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(call_insn 882 887 883 132 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fc111c5ad80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) signapp.c:410 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 883 882 884)
(code_label 884 883 888 133 67 "" [1 uses])
(note 888 884 885 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 885 888 0 133 (use (reg/i:SI 0 ax)) signapp.c:410 -1
     (nil))

;; Function startSession (startSession, funcdef_no=3, decl_uid=17958, cgraph_uid=3, symbol_order=4)

Partition 1: size 408 align 16
	startAuthSessionIn
Partition 3: size 144 align 16
	startAuthSessionExtra
Partition 2: size 136 align 16
	startAuthSessionOut
Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 55.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 11 NOTE_INSN_DELETED)
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -728 [0xfffffffffffffd28])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) signapp.c:425 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -736 [0xfffffffffffffd20])) [0 sessionHandle+0 S8 A64])
        (reg:DI 4 si [ sessionHandle ])) signapp.c:425 -1
     (nil))
(insn 4 3 6 2 (set (reg:SI 90)
        (reg:SI 1 dx [ sessionType ])) signapp.c:425 -1
     (nil))
(insn 6 4 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -744 [0xfffffffffffffd18])) [0 tpmKey+0 S4 A32])
        (reg:SI 2 cx [ tpmKey ])) signapp.c:425 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -748 [0xfffffffffffffd14])) [0 bind+0 S4 A32])
        (reg:SI 37 r8 [ bind ])) signapp.c:425 -1
     (nil))
(insn 8 7 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -760 [0xfffffffffffffd08])) [0 bindPassword+0 S8 A64])
        (reg:DI 38 r9 [ bindPassword ])) signapp.c:425 -1
     (nil))
(insn 5 8 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -740 [0xfffffffffffffd1c])) [0 sessionType+0 S1 A32])
        (subreg:QI (reg:SI 90) 0)) signapp.c:425 -1
     (nil))
(note 9 5 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 9 13 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.18597+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:425 -1
     (nil))
(insn 13 10 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -708 [0xfffffffffffffd3c])) [0 rc+0 S4 A32])
        (const_int 0 [0])) signapp.c:426 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -708 [0xfffffffffffffd3c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:432 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) signapp.c:432 -1
     (nil)
 -> 49)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -744 [0xfffffffffffffd18])) [0 tpmKey+0 S4 A32])) signapp.c:433 -1
     (nil))
(insn 18 17 19 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [0 startAuthSessionIn.tpmKey+0 S4 A64])
        (reg:SI 91)) signapp.c:433 -1
     (nil))
(insn 19 18 20 4 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -748 [0xfffffffffffffd14])) [0 bind+0 S4 A32])) signapp.c:434 -1
     (nil))
(insn 20 19 21 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -412 [0xfffffffffffffe64])) [0 startAuthSessionIn.bind+0 S4 A32])
        (reg:SI 92)) signapp.c:434 -1
     (nil))
(insn 21 20 22 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -760 [0xfffffffffffffd08])) [0 bindPassword+0 S8 A64])) signapp.c:435 -1
     (nil))
(insn 22 21 23 4 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -560 [0xfffffffffffffdd0])) [0 startAuthSessionExtra.bindPassword+0 S8 A64])
        (reg/f:DI 93)) signapp.c:435 -1
     (nil))
(insn 23 22 24 4 (set (reg:QI 94)
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -740 [0xfffffffffffffd1c])) [0 sessionType+0 S1 A32])) signapp.c:436 -1
     (nil))
(insn 24 23 25 4 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 startAuthSessionIn.sessionType+0 S1 A32])
        (reg:QI 94)) signapp.c:436 -1
     (nil))
(insn 25 24 26 4 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 startAuthSessionIn.authHash+0 S2 A32])
        (const_int 11 [0xb])) signapp.c:437 -1
     (nil))
(insn 26 25 27 4 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -18 [0xffffffffffffffee])) [0 startAuthSessionIn.symmetric.algorithm+0 S2 A16])
        (const_int 6 [0x6])) signapp.c:438 -1
     (nil))
(insn 27 26 28 4 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 startAuthSessionIn.symmetric.keyBits.aes+0 S2 A64])
        (const_int 128 [0x80])) signapp.c:439 -1
     (nil))
(insn 28 27 29 4 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -14 [0xfffffffffffffff2])) [0 startAuthSessionIn.symmetric.mode.aes+0 S2 A16])
        (const_int 67 [0x43])) signapp.c:440 -1
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:441 -1
     (nil))
(insn 30 29 31 4 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:441 -1
     (nil))
(insn 31 30 32 4 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -704 [0xfffffffffffffd40])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:441 -1
     (nil))
(insn 32 31 33 4 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -728 [0xfffffffffffffd28])) [0 tssContext+0 S8 A64])) signapp.c:441 -1
     (nil))
(insn 33 32 34 4 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) signapp.c:441 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 34 33 35 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) signapp.c:441 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 35 34 36 4 (set (reg:SI 38 r9)
        (const_int 1073741831 [0x40000007])) signapp.c:441 -1
     (nil))
(insn 36 35 37 4 (set (reg:SI 37 r8)
        (const_int 374 [0x176])) signapp.c:441 -1
     (nil))
(insn 37 36 38 4 (set (reg:DI 2 cx)
        (reg:DI 95)) signapp.c:441 -1
     (nil))
(insn 38 37 39 4 (set (reg:DI 1 dx)
        (reg:DI 96)) signapp.c:441 -1
     (nil))
(insn 39 38 40 4 (set (reg:DI 4 si)
        (reg:DI 97)) signapp.c:441 -1
     (nil))
(insn 40 39 41 4 (set (reg:DI 5 di)
        (reg:DI 98)) signapp.c:441 -1
     (nil))
(insn 41 40 42 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:441 -1
     (nil))
(call_insn 42 41 43 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fc1125cdca8 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 16 [0x10]))) signapp.c:441 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 43 42 44 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:441 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 44 43 45 4 (set (reg:SI 99)
        (reg:SI 0 ax)) signapp.c:441 -1
     (nil))
(insn 45 44 46 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -708 [0xfffffffffffffd3c])) [0 rc+0 S4 A32])
        (reg:SI 99)) signapp.c:441 -1
     (nil))
(insn 46 45 47 4 (set (reg:SI 87 [ D.18595 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -704 [0xfffffffffffffd40])) [0 startAuthSessionOut.sessionHandle+0 S4 A64])) signapp.c:447 -1
     (nil))
(insn 47 46 48 4 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -736 [0xfffffffffffffd20])) [0 sessionHandle+0 S8 A64])) signapp.c:447 -1
     (nil))
(insn 48 47 49 4 (set (mem:SI (reg/f:DI 100) [0 *sessionHandle_21(D)+0 S4 A32])
        (reg:SI 87 [ D.18595 ])) signapp.c:447 -1
     (nil))
(code_label 49 48 50 5 69 "" [1 uses])
(note 50 49 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 54 5 (set (reg:SI 88 [ D.18596 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -708 [0xfffffffffffffd3c])) [0 rc+0 S4 A32])) signapp.c:449 -1
     (nil))
(insn 54 51 58 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.18596 ])) signapp.c:449 -1
     (nil))
(insn 58 54 59 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) signapp.c:450 -1
     (nil))
(insn 59 58 60 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.18597+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) signapp.c:450 -1
     (nil))
(jump_insn 60 59 66 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) signapp.c:450 -1
     (nil)
 -> 63)
(note 66 60 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 61 66 62 8 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fc111c5ad80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) signapp.c:450 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 62 61 63)
(code_label 63 62 67 9 71 "" [1 uses])
(note 67 63 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 67 0 9 (use (reg/i:SI 0 ax)) signapp.c:450 -1
     (nil))

;; Function policyRestart (policyRestart, funcdef_no=4, decl_uid=17961, cgraph_uid=4, symbol_order=5)

Partition 0: size 4 align 4
	rc_1
Partition 1: size 4 align 16
	policyRestartIn

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 35.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) signapp.c:454 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 sessionHandle+0 S4 A32])
        (reg:SI 4 si [ sessionHandle ])) signapp.c:454 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.18599+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:454 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) signapp.c:455 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:458 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) signapp.c:458 -1
     (nil)
 -> 29)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 sessionHandle+0 S4 A32])) signapp.c:459 -1
     (nil))
(insn 13 12 14 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 policyRestartIn.sessionHandle+0 S4 A64])
        (reg:SI 89)) signapp.c:459 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:460 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) signapp.c:460 -1
     (nil))
(insn 16 15 17 4 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) signapp.c:460 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 17 16 18 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) signapp.c:460 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 18 17 19 4 (set (reg:SI 38 r9)
        (const_int 1073741831 [0x40000007])) signapp.c:460 -1
     (nil))
(insn 19 18 20 4 (set (reg:SI 37 r8)
        (const_int 384 [0x180])) signapp.c:460 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 2 cx)
        (const_int 0 [0])) signapp.c:460 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 1 dx)
        (reg:DI 90)) signapp.c:460 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 4 si)
        (const_int 0 [0])) signapp.c:460 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 5 di)
        (reg:DI 91)) signapp.c:460 -1
     (nil))
(insn 24 23 25 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:460 -1
     (nil))
(call_insn 25 24 26 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fc1125cdca8 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 16 [0x10]))) signapp.c:460 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 26 25 27 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:460 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 27 26 28 4 (set (reg:SI 92)
        (reg:SI 0 ax)) signapp.c:460 -1
     (nil))
(insn 28 27 29 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 92)) signapp.c:460 -1
     (nil))
(code_label 29 28 30 5 73 "" [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 34 5 (set (reg:SI 87 [ D.18598 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) signapp.c:467 -1
     (nil))
(insn 34 31 38 5 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.18598 ])) signapp.c:467 -1
     (nil))
(insn 38 34 39 5 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) signapp.c:468 -1
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.18599+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) signapp.c:468 -1
     (nil))
(jump_insn 40 39 46 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) signapp.c:468 -1
     (nil)
 -> 43)
(note 46 40 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 41 46 42 8 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fc111c5ad80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) signapp.c:468 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 42 41 43)
(code_label 43 42 47 9 75 "" [1 uses])
(note 47 43 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 47 0 9 (use (reg/i:SI 0 ax)) signapp.c:468 -1
     (nil))

;; Function policyCommandCode (policyCommandCode, funcdef_no=5, decl_uid=17965, cgraph_uid=5, symbol_order=6)

Partition 1: size 8 align 16
	policyCommandCodeIn
Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 38.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) signapp.c:473 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 commandCode+0 S4 A32])
        (reg:SI 4 si [ commandCode ])) signapp.c:473 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 sessionHandle+0 S4 A32])
        (reg:SI 1 dx [ sessionHandle ])) signapp.c:473 -1
     (nil))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.18601+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:473 -1
     (nil))
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (const_int 0 [0])) signapp.c:474 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:477 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) signapp.c:477 -1
     (nil)
 -> 32)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 sessionHandle+0 S4 A32])) signapp.c:478 -1
     (nil))
(insn 14 13 15 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 policyCommandCodeIn.policySession+0 S4 A64])
        (reg:SI 89)) signapp.c:478 -1
     (nil))
(insn 15 14 16 4 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 commandCode+0 S4 A32])) signapp.c:479 -1
     (nil))
(insn 16 15 17 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 policyCommandCodeIn.code+0 S4 A32])
        (reg:SI 90)) signapp.c:479 -1
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:480 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 tssContext+0 S8 A64])) signapp.c:480 -1
     (nil))
(insn 19 18 20 4 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) signapp.c:480 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 20 19 21 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) signapp.c:480 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 21 20 22 4 (set (reg:SI 38 r9)
        (const_int 1073741831 [0x40000007])) signapp.c:480 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 37 r8)
        (const_int 364 [0x16c])) signapp.c:480 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 2 cx)
        (const_int 0 [0])) signapp.c:480 -1
     (nil))
(insn 24 23 25 4 (set (reg:DI 1 dx)
        (reg:DI 91)) signapp.c:480 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 4 si)
        (const_int 0 [0])) signapp.c:480 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 5 di)
        (reg:DI 92)) signapp.c:480 -1
     (nil))
(insn 27 26 28 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:480 -1
     (nil))
(call_insn 28 27 29 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fc1125cdca8 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 16 [0x10]))) signapp.c:480 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 29 28 30 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:480 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 30 29 31 4 (set (reg:SI 93)
        (reg:SI 0 ax)) signapp.c:480 -1
     (nil))
(insn 31 30 32 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (reg:SI 93)) signapp.c:480 -1
     (nil))
(code_label 32 31 33 5 77 "" [1 uses])
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 37 5 (set (reg:SI 87 [ D.18600 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])) signapp.c:487 -1
     (nil))
(insn 37 34 41 5 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.18600 ])) signapp.c:487 -1
     (nil))
(insn 41 37 42 5 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) signapp.c:488 -1
     (nil))
(insn 42 41 43 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.18601+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) signapp.c:488 -1
     (nil))
(jump_insn 43 42 49 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) signapp.c:488 -1
     (nil)
 -> 46)
(note 49 43 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 44 49 45 8 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fc111c5ad80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) signapp.c:488 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 45 44 46)
(code_label 46 45 50 9 79 "" [1 uses])
(note 50 46 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 50 0 9 (use (reg/i:SI 0 ax)) signapp.c:488 -1
     (nil))

;; Function policyAuthValue (policyAuthValue, funcdef_no=6, decl_uid=17968, cgraph_uid=6, symbol_order=7)

Partition 0: size 4 align 4
	rc_1
Partition 1: size 4 align 16
	policyAuthValueIn

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 35.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) signapp.c:492 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 sessionHandle+0 S4 A32])
        (reg:SI 4 si [ sessionHandle ])) signapp.c:492 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.18603+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:492 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) signapp.c:493 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:496 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) signapp.c:496 -1
     (nil)
 -> 29)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 sessionHandle+0 S4 A32])) signapp.c:497 -1
     (nil))
(insn 13 12 14 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 policyAuthValueIn.policySession+0 S4 A64])
        (reg:SI 89)) signapp.c:497 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:498 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) signapp.c:498 -1
     (nil))
(insn 16 15 17 4 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) signapp.c:498 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 17 16 18 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) signapp.c:498 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 18 17 19 4 (set (reg:SI 38 r9)
        (const_int 1073741831 [0x40000007])) signapp.c:498 -1
     (nil))
(insn 19 18 20 4 (set (reg:SI 37 r8)
        (const_int 363 [0x16b])) signapp.c:498 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 2 cx)
        (const_int 0 [0])) signapp.c:498 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 1 dx)
        (reg:DI 90)) signapp.c:498 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 4 si)
        (const_int 0 [0])) signapp.c:498 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 5 di)
        (reg:DI 91)) signapp.c:498 -1
     (nil))
(insn 24 23 25 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:498 -1
     (nil))
(call_insn 25 24 26 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fc1125cdca8 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 16 [0x10]))) signapp.c:498 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 26 25 27 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:498 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 27 26 28 4 (set (reg:SI 92)
        (reg:SI 0 ax)) signapp.c:498 -1
     (nil))
(insn 28 27 29 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 92)) signapp.c:498 -1
     (nil))
(code_label 29 28 30 5 81 "" [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 34 5 (set (reg:SI 87 [ D.18602 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) signapp.c:505 -1
     (nil))
(insn 34 31 38 5 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.18602 ])) signapp.c:505 -1
     (nil))
(insn 38 34 39 5 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) signapp.c:506 -1
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.18603+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) signapp.c:506 -1
     (nil))
(jump_insn 40 39 46 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) signapp.c:506 -1
     (nil)
 -> 43)
(note 46 40 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 41 46 42 8 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fc111c5ad80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) signapp.c:506 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 42 41 43)
(code_label 43 42 47 9 83 "" [1 uses])
(note 47 43 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 47 0 9 (use (reg/i:SI 0 ax)) signapp.c:506 -1
     (nil))

;; Function policyPassword (policyPassword, funcdef_no=7, decl_uid=17971, cgraph_uid=7, symbol_order=8)

Partition 0: size 4 align 4
	rc_1
Partition 1: size 4 align 16
	policyPasswordIn

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 35.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) signapp.c:510 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 sessionHandle+0 S4 A32])
        (reg:SI 4 si [ sessionHandle ])) signapp.c:510 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.18605+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:510 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) signapp.c:511 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:514 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) signapp.c:514 -1
     (nil)
 -> 29)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 sessionHandle+0 S4 A32])) signapp.c:515 -1
     (nil))
(insn 13 12 14 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 policyPasswordIn.policySession+0 S4 A64])
        (reg:SI 89)) signapp.c:515 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:516 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) signapp.c:516 -1
     (nil))
(insn 16 15 17 4 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) signapp.c:516 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 17 16 18 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) signapp.c:516 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 18 17 19 4 (set (reg:SI 38 r9)
        (const_int 1073741831 [0x40000007])) signapp.c:516 -1
     (nil))
(insn 19 18 20 4 (set (reg:SI 37 r8)
        (const_int 396 [0x18c])) signapp.c:516 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 2 cx)
        (const_int 0 [0])) signapp.c:516 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 1 dx)
        (reg:DI 90)) signapp.c:516 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 4 si)
        (const_int 0 [0])) signapp.c:516 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 5 di)
        (reg:DI 91)) signapp.c:516 -1
     (nil))
(insn 24 23 25 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:516 -1
     (nil))
(call_insn 25 24 26 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fc1125cdca8 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 16 [0x10]))) signapp.c:516 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 26 25 27 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:516 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 27 26 28 4 (set (reg:SI 92)
        (reg:SI 0 ax)) signapp.c:516 -1
     (nil))
(insn 28 27 29 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 92)) signapp.c:516 -1
     (nil))
(code_label 29 28 30 5 85 "" [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 34 5 (set (reg:SI 87 [ D.18604 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) signapp.c:523 -1
     (nil))
(insn 34 31 38 5 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.18604 ])) signapp.c:523 -1
     (nil))
(insn 38 34 39 5 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) signapp.c:524 -1
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.18605+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) signapp.c:524 -1
     (nil))
(jump_insn 40 39 46 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) signapp.c:524 -1
     (nil)
 -> 43)
(note 46 40 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 41 46 42 8 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fc111c5ad80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) signapp.c:524 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 42 41 43)
(code_label 43 42 47 9 87 "" [1 uses])
(note 47 43 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 47 0 9 (use (reg/i:SI 0 ax)) signapp.c:524 -1
     (nil))

;; Function policySecret (policySecret, funcdef_no=8, decl_uid=17975, cgraph_uid=8, symbol_order=9)

Partition 1: size 404 align 16
	policySecretIn
Partition 2: size 272 align 16
	policySecretOut
Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Removing jump 52.
Merging block 9 into block 7...
Merged blocks 7 and 9.
Merged 7 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -712 [0xfffffffffffffd38])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) signapp.c:534 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -716 [0xfffffffffffffd34])) [0 authHandle+0 S4 A32])
        (reg:SI 4 si [ authHandle ])) signapp.c:534 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -720 [0xfffffffffffffd30])) [0 sessionHandle+0 S4 A32])
        (reg:SI 1 dx [ sessionHandle ])) signapp.c:534 -1
     (nil))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.18607+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:534 -1
     (nil))
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -692 [0xfffffffffffffd4c])) [0 rc+0 S4 A32])
        (const_int 0 [0])) signapp.c:535 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -692 [0xfffffffffffffd4c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:539 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) signapp.c:539 -1
     (nil)
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -716 [0xfffffffffffffd34])) [0 authHandle+0 S4 A32])) signapp.c:540 -1
     (nil))
(insn 14 13 15 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [0 policySecretIn.authHandle+0 S4 A64])
        (reg:SI 89)) signapp.c:540 -1
     (nil))
(insn 15 14 16 4 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -720 [0xfffffffffffffd30])) [0 sessionHandle+0 S4 A32])) signapp.c:541 -1
     (nil))
(insn 16 15 17 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -412 [0xfffffffffffffe64])) [0 policySecretIn.policySession+0 S4 A32])
        (reg:SI 90)) signapp.c:541 -1
     (nil))
(insn 17 16 18 4 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 policySecretIn.nonceTPM.b.size+0 S2 A64])
        (const_int 0 [0])) signapp.c:542 -1
     (nil))
(insn 18 17 19 4 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -278 [0xfffffffffffffeea])) [0 policySecretIn.cpHashA.b.size+0 S2 A16])
        (const_int 0 [0])) signapp.c:543 -1
     (nil))
(insn 19 18 20 4 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -148 [0xffffffffffffff6c])) [0 policySecretIn.policyRef.b.size+0 S2 A32])
        (const_int 0 [0])) signapp.c:544 -1
     (nil))
(insn 20 19 21 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 policySecretIn.expiration+0 S4 A64])
        (const_int 0 [0])) signapp.c:545 -1
     (nil))
(code_label 21 20 22 5 89 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -692 [0xfffffffffffffd4c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:548 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) signapp.c:548 -1
     (nil)
 -> 46)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:549 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:549 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -712 [0xfffffffffffffd38])) [0 tssContext+0 S8 A64])) signapp.c:549 -1
     (nil))
(insn 29 28 30 6 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:549 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 30 29 31 6 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) signapp.c:549 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 31 30 32 6 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) signapp.c:549 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 32 31 33 6 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1073741831 [0x40000007])) signapp.c:549 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 33 32 34 6 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) signapp.c:549 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 34 33 35 6 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) signapp.c:549 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 35 34 36 6 (set (reg:SI 38 r9)
        (const_int 1073741833 [0x40000009])) signapp.c:549 -1
     (nil))
(insn 36 35 37 6 (set (reg:SI 37 r8)
        (const_int 337 [0x151])) signapp.c:549 -1
     (nil))
(insn 37 36 38 6 (set (reg:DI 2 cx)
        (const_int 0 [0])) signapp.c:549 -1
     (nil))
(insn 38 37 39 6 (set (reg:DI 1 dx)
        (reg:DI 91)) signapp.c:549 -1
     (nil))
(insn 39 38 40 6 (set (reg:DI 4 si)
        (reg:DI 92)) signapp.c:549 -1
     (nil))
(insn 40 39 41 6 (set (reg:DI 5 di)
        (reg:DI 93)) signapp.c:549 -1
     (nil))
(insn 41 40 42 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:549 -1
     (nil))
(call_insn 42 41 43 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fc1125cdca8 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 48 [0x30]))) signapp.c:549 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 43 42 44 6 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:549 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 44 43 45 6 (set (reg:SI 94)
        (reg:SI 0 ax)) signapp.c:549 -1
     (nil))
(insn 45 44 46 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -692 [0xfffffffffffffd4c])) [0 rc+0 S4 A32])
        (reg:SI 94)) signapp.c:549 -1
     (nil))
(code_label 46 45 47 7 90 "" [1 uses])
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 51 7 (set (reg:SI 87 [ D.18606 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -692 [0xfffffffffffffd4c])) [0 rc+0 S4 A32])) signapp.c:557 -1
     (nil))
(insn 51 48 55 7 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.18606 ])) signapp.c:557 -1
     (nil))
(insn 55 51 56 7 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) signapp.c:558 -1
     (nil))
(insn 56 55 57 7 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.18607+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) signapp.c:558 -1
     (nil))
(jump_insn 57 56 63 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) signapp.c:558 -1
     (nil)
 -> 60)
(note 63 57 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 58 63 59 10 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fc111c5ad80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) signapp.c:558 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 59 58 60)
(code_label 60 59 64 11 92 "" [1 uses])
(note 64 60 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 61 64 0 11 (use (reg/i:SI 0 ax)) signapp.c:558 -1
     (nil))

;; Function policyGetDigest (policyGetDigest, funcdef_no=9, decl_uid=17978, cgraph_uid=9, symbol_order=10)

Partition 2: size 130 align 16
	policyGetDigestOut
Partition 0: size 4 align 4
	rc_1
Partition 1: size 4 align 16
	policyGetDigestIn

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Removing jump 50.
Merging block 9 into block 7...
Merged blocks 7 and 9.
Merged 7 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) signapp.c:567 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -172 [0xffffffffffffff54])) [0 sessionHandle+0 S4 A32])
        (reg:SI 4 si [ sessionHandle ])) signapp.c:567 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.18612+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:567 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -148 [0xffffffffffffff6c])) [0 rc+0 S4 A32])
        (const_int 0 [0])) signapp.c:568 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -148 [0xffffffffffffff6c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:572 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) signapp.c:572 -1
     (nil)
 -> 30)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -172 [0xffffffffffffff54])) [0 sessionHandle+0 S4 A32])) signapp.c:573 -1
     (nil))
(insn 13 12 14 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [0 policyGetDigestIn.policySession+0 S4 A64])
        (reg:SI 92)) signapp.c:573 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg:DI 93)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:574 -1
     (nil))
(insn 15 14 16 4 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:574 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [0 tssContext+0 S8 A64])) signapp.c:574 -1
     (nil))
(insn 17 16 18 4 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) signapp.c:574 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 18 17 19 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) signapp.c:574 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 19 18 20 4 (set (reg:SI 38 r9)
        (const_int 1073741831 [0x40000007])) signapp.c:574 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 37 r8)
        (const_int 393 [0x189])) signapp.c:574 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 2 cx)
        (const_int 0 [0])) signapp.c:574 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 1 dx)
        (reg:DI 93)) signapp.c:574 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 4 si)
        (reg:DI 94)) signapp.c:574 -1
     (nil))
(insn 24 23 25 4 (set (reg:DI 5 di)
        (reg:DI 95)) signapp.c:574 -1
     (nil))
(insn 25 24 26 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:574 -1
     (nil))
(call_insn 26 25 27 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fc1125cdca8 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 16 [0x10]))) signapp.c:574 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 27 26 28 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:574 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 28 27 29 4 (set (reg:SI 96)
        (reg:SI 0 ax)) signapp.c:574 -1
     (nil))
(insn 29 28 30 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -148 [0xffffffffffffff6c])) [0 rc+0 S4 A32])
        (reg:SI 96)) signapp.c:574 -1
     (nil))
(code_label 30 29 31 5 94 "" [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg:SI 87 [ D.18608 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fc111f9d900 verbose>) [0 verbose+0 S4 A32])) signapp.c:581 -1
     (nil))
(insn 33 32 34 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.18608 ])
            (const_int 0 [0]))) signapp.c:581 -1
     (nil))
(jump_insn 34 33 35 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) signapp.c:581 -1
     (nil)
 -> 44)
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg:HI 88 [ D.18609 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [0 policyGetDigestOut.policyDigest.t.size+0 S2 A64])) signapp.c:583 -1
     (nil))
(insn 37 36 38 6 (set (reg:SI 89 [ D.18610 ])
        (zero_extend:SI (reg:HI 88 [ D.18609 ]))) signapp.c:581 -1
     (nil))
(insn 38 37 39 6 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:581 -1
     (nil))
(insn 39 38 40 6 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg:DI 97)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:581 -1
     (nil))
(insn 40 39 41 6 (set (reg:SI 1 dx)
        (reg:SI 89 [ D.18610 ])) signapp.c:581 -1
     (nil))
(insn 41 40 42 6 (set (reg:DI 4 si)
        (reg:DI 98)) signapp.c:581 -1
     (nil))
(insn 42 41 43 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7fc111cdd630 *.LC32>)) signapp.c:581 -1
     (nil))
(call_insn 43 42 44 6 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7fc1125a0798 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) signapp.c:581 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(code_label 44 43 45 7 95 "" [1 uses])
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 49 7 (set (reg:SI 90 [ D.18611 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -148 [0xffffffffffffff6c])) [0 rc+0 S4 A32])) signapp.c:584 -1
     (nil))
(insn 49 46 53 7 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.18611 ])) signapp.c:584 -1
     (nil))
(insn 53 49 54 7 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) signapp.c:585 -1
     (nil))
(insn 54 53 55 7 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.18612+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) signapp.c:585 -1
     (nil))
(jump_insn 55 54 61 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) signapp.c:585 -1
     (nil)
 -> 58)
(note 61 55 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 56 61 57 10 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fc111c5ad80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) signapp.c:585 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 57 56 58)
(code_label 58 57 62 11 97 "" [1 uses])
(note 62 58 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 59 62 0 11 (use (reg/i:SI 0 ax)) signapp.c:585 -1
     (nil))

;; Function createKey (createKey, funcdef_no=10, decl_uid=17986, cgraph_uid=10, symbol_order=11)

Partition 3: size 2428 align 16
	createOut
Partition 2: size 848 align 16
	createIn
Partition 4: size 32 align 16
	policy
Partition 1: size 4 align 4
	attributes_3
Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 200.
Merging block 16 into block 14...
Merged blocks 14 and 16.
Merged 14 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3352 [0xfffffffffffff2e8])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) signapp.c:603 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3360 [0xfffffffffffff2e0])) [0 outPrivate+0 S8 A64])
        (reg:DI 4 si [ outPrivate ])) signapp.c:603 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3368 [0xfffffffffffff2d8])) [0 outPublic+0 S8 A64])
        (reg:DI 1 dx [ outPublic ])) signapp.c:603 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3372 [0xfffffffffffff2d4])) [0 policySessionHandle+0 S4 A32])
        (reg:SI 2 cx [ policySessionHandle ])) signapp.c:603 -1
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3376 [0xfffffffffffff2d0])) [0 parentHandle+0 S4 A32])
        (reg:SI 37 r8 [ parentHandle ])) signapp.c:603 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3384 [0xfffffffffffff2c8])) [0 keyPassword+0 S8 A64])
        (reg:DI 38 r9 [ keyPassword ])) signapp.c:603 -1
     (nil))
(note 8 7 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 8 12 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.18616+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:603 -1
     (nil))
(insn 12 9 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3336 [0xfffffffffffff2f8])) [0 rc+0 S4 A32])
        (const_int 0 [0])) signapp.c:604 -1
     (nil))
(insn 13 12 14 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 policy+0 S1 A64])
        (const_int 126 [0x7e])) signapp.c:609 -1
     (nil))
(insn 14 13 15 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -47 [0xffffffffffffffd1])) [0 policy+1 S1 A8])
        (const_int -95 [0xffffffffffffffa1])) signapp.c:609 -1
     (nil))
(insn 15 14 16 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -46 [0xffffffffffffffd2])) [0 policy+2 S1 A16])
        (const_int 13 [0xd])) signapp.c:609 -1
     (nil))
(insn 16 15 17 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -45 [0xffffffffffffffd3])) [0 policy+3 S1 A8])
        (const_int -32 [0xffffffffffffffe0])) signapp.c:609 -1
     (nil))
(insn 17 16 18 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 policy+4 S1 A32])
        (const_int 5 [0x5])) signapp.c:609 -1
     (nil))
(insn 18 17 19 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -43 [0xffffffffffffffd5])) [0 policy+5 S1 A8])
        (const_int -4 [0xfffffffffffffffc])) signapp.c:609 -1
     (nil))
(insn 19 18 20 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -42 [0xffffffffffffffd6])) [0 policy+6 S1 A16])
        (const_int -78 [0xffffffffffffffb2])) signapp.c:609 -1
     (nil))
(insn 20 19 21 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -41 [0xffffffffffffffd7])) [0 policy+7 S1 A8])
        (const_int 29 [0x1d])) signapp.c:609 -1
     (nil))
(insn 21 20 22 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 policy+8 S1 A64])
        (const_int 68 [0x44])) signapp.c:609 -1
     (nil))
(insn 22 21 23 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -39 [0xffffffffffffffd9])) [0 policy+9 S1 A8])
        (const_int -14 [0xfffffffffffffff2])) signapp.c:609 -1
     (nil))
(insn 23 22 24 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -38 [0xffffffffffffffda])) [0 policy+10 S1 A16])
        (const_int 75 [0x4b])) signapp.c:609 -1
     (nil))
(insn 24 23 25 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -37 [0xffffffffffffffdb])) [0 policy+11 S1 A8])
        (const_int -56 [0xffffffffffffffc8])) signapp.c:609 -1
     (nil))
(insn 25 24 26 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 policy+12 S1 A32])
        (const_int -9 [0xfffffffffffffff7])) signapp.c:609 -1
     (nil))
(insn 26 25 27 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -35 [0xffffffffffffffdd])) [0 policy+13 S1 A8])
        (const_int 76 [0x4c])) signapp.c:609 -1
     (nil))
(insn 27 26 28 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -34 [0xffffffffffffffde])) [0 policy+14 S1 A16])
        (const_int 40 [0x28])) signapp.c:609 -1
     (nil))
(insn 28 27 29 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -33 [0xffffffffffffffdf])) [0 policy+15 S1 A8])
        (const_int -88 [0xffffffffffffffa8])) signapp.c:609 -1
     (nil))
(insn 29 28 30 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 policy+16 S1 A64])
        (const_int -71 [0xffffffffffffffb9])) signapp.c:609 -1
     (nil))
(insn 30 29 31 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -31 [0xffffffffffffffe1])) [0 policy+17 S1 A8])
        (const_int -19 [0xffffffffffffffed])) signapp.c:609 -1
     (nil))
(insn 31 30 32 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -30 [0xffffffffffffffe2])) [0 policy+18 S1 A16])
        (const_int -15 [0xfffffffffffffff1])) signapp.c:609 -1
     (nil))
(insn 32 31 33 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -29 [0xffffffffffffffe3])) [0 policy+19 S1 A8])
        (const_int 75 [0x4b])) signapp.c:609 -1
     (nil))
(insn 33 32 34 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 policy+20 S1 A32])
        (const_int 28 [0x1c])) signapp.c:609 -1
     (nil))
(insn 34 33 35 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -27 [0xffffffffffffffe5])) [0 policy+21 S1 A8])
        (const_int 83 [0x53])) signapp.c:609 -1
     (nil))
(insn 35 34 36 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -26 [0xffffffffffffffe6])) [0 policy+22 S1 A16])
        (const_int -22 [0xffffffffffffffea])) signapp.c:609 -1
     (nil))
(insn 36 35 37 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -25 [0xffffffffffffffe7])) [0 policy+23 S1 A8])
        (const_int 76 [0x4c])) signapp.c:609 -1
     (nil))
(insn 37 36 38 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 policy+24 S1 A64])
        (const_int -49 [0xffffffffffffffcf])) signapp.c:609 -1
     (nil))
(insn 38 37 39 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -23 [0xffffffffffffffe9])) [0 policy+25 S1 A8])
        (const_int 60 [0x3c])) signapp.c:609 -1
     (nil))
(insn 39 38 40 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -22 [0xffffffffffffffea])) [0 policy+26 S1 A16])
        (const_int 90 [0x5a])) signapp.c:609 -1
     (nil))
(insn 40 39 41 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -21 [0xffffffffffffffeb])) [0 policy+27 S1 A8])
        (const_int 76 [0x4c])) signapp.c:609 -1
     (nil))
(insn 41 40 42 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 policy+28 S1 A32])
        (const_int -29 [0xffffffffffffffe3])) signapp.c:609 -1
     (nil))
(insn 42 41 43 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -19 [0xffffffffffffffed])) [0 policy+29 S1 A8])
        (const_int -116 [0xffffffffffffff8c])) signapp.c:609 -1
     (nil))
(insn 43 42 44 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -18 [0xffffffffffffffee])) [0 policy+30 S1 A16])
        (const_int 117 [0x75])) signapp.c:609 -1
     (nil))
(insn 44 43 45 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -17 [0xffffffffffffffef])) [0 policy+31 S1 A8])
        (const_int 110 [0x6e])) signapp.c:609 -1
     (nil))
(insn 45 44 46 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -3336 [0xfffffffffffff2f8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:613 -1
     (nil))
(jump_insn 46 45 47 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) signapp.c:613 -1
     (nil)
 -> 59)
(note 47 46 48 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 4 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3376 [0xfffffffffffff2d0])) [0 parentHandle+0 S4 A32])) signapp.c:614 -1
     (nil))
(insn 49 48 50 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3328 [0xfffffffffffff300])) [0 createIn.parentHandle+0 S4 A64])
        (reg:SI 103)) signapp.c:614 -1
     (nil))
(insn 50 49 51 4 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3384 [0xfffffffffffff2c8])) [0 keyPassword+0 S8 A64])) signapp.c:615 -1
     (nil))
(insn 51 50 52 4 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -3328 [0xfffffffffffff300])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:615 -1
     (nil))
(insn 52 51 53 4 (parallel [
            (set (reg:DI 106)
                (plus:DI (reg:DI 105)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:615 -1
     (nil))
(insn 53 52 54 4 (set (reg:SI 1 dx)
        (const_int 128 [0x80])) signapp.c:615 -1
     (nil))
(insn 54 53 55 4 (set (reg:DI 4 si)
        (reg:DI 104)) signapp.c:615 -1
     (nil))
(insn 55 54 56 4 (set (reg:DI 5 di)
        (reg:DI 106)) signapp.c:615 -1
     (nil))
(call_insn 56 55 57 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_TPM2B_StringCopy") [flags 0x41]  <function_decl 0x7fc1125d5510 TSS_TPM2B_StringCopy>) [0 TSS_TPM2B_StringCopy S1 A8])
            (const_int 0 [0]))) signapp.c:615 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 57 56 58 4 (set (reg:SI 107)
        (reg:SI 0 ax)) signapp.c:615 -1
     (nil))
(insn 58 57 59 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3336 [0xfffffffffffff2f8])) [0 rc+0 S4 A32])
        (reg:SI 107)) signapp.c:615 -1
     (nil))
(code_label 59 58 60 5 99 "" [1 uses])
(note 60 59 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -3336 [0xfffffffffffff2f8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:619 -1
     (nil))
(jump_insn 62 61 63 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) signapp.c:619 -1
     (nil)
 -> 73)
(note 63 62 64 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 6 (set (reg:DI 108)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 MEM[(char * {ref-all})&policy]+0 S8 A64])) signapp.c:620 -1
     (nil))
(insn 65 64 66 6 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3046 [0xfffffffffffff41a])) [0 MEM[(char * {ref-all})&createIn + 282B]+0 S8 A16])
        (reg:DI 108)) signapp.c:620 -1
     (nil))
(insn 66 65 67 6 (set (reg:DI 109)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 MEM[(char * {ref-all})&policy]+8 S8 A64])) signapp.c:620 -1
     (nil))
(insn 67 66 68 6 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3038 [0xfffffffffffff422])) [0 MEM[(char * {ref-all})&createIn + 282B]+8 S8 A16])
        (reg:DI 109)) signapp.c:620 -1
     (nil))
(insn 68 67 69 6 (set (reg:DI 110)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 MEM[(char * {ref-all})&policy]+16 S8 A64])) signapp.c:620 -1
     (nil))
(insn 69 68 70 6 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3030 [0xfffffffffffff42a])) [0 MEM[(char * {ref-all})&createIn + 282B]+16 S8 A16])
        (reg:DI 110)) signapp.c:620 -1
     (nil))
(insn 70 69 71 6 (set (reg:DI 111)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 MEM[(char * {ref-all})&policy]+24 S8 A64])) signapp.c:620 -1
     (nil))
(insn 71 70 72 6 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3022 [0xfffffffffffff432])) [0 MEM[(char * {ref-all})&createIn + 282B]+24 S8 A16])
        (reg:DI 111)) signapp.c:620 -1
     (nil))
(insn 72 71 73 6 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3048 [0xfffffffffffff418])) [0 createIn.inPublic.publicArea.authPolicy.b.size+0 S2 A64])
        (const_int 32 [0x20])) signapp.c:621 -1
     (nil))
(code_label 73 72 74 7 100 "" [1 uses])
(note 74 73 75 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -3336 [0xfffffffffffff2f8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:623 -1
     (nil))
(jump_insn 76 75 77 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) signapp.c:623 -1
     (nil)
 -> 143)
(note 77 76 78 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 8 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3192 [0xfffffffffffff388])) [0 createIn.inSensitive.sensitive.data.t.size+0 S2 A64])
        (const_int 0 [0])) signapp.c:624 -1
     (nil))
(insn 79 78 80 8 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3054 [0xfffffffffffff412])) [0 createIn.inPublic.publicArea.nameAlg+0 S2 A16])
        (const_int 11 [0xb])) signapp.c:625 -1
     (nil))
(insn 80 79 81 8 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3056 [0xfffffffffffff410])) [0 createIn.inPublic.publicArea.type+0 S2 A64])
        (const_int 1 [0x1])) signapp.c:626 -1
     (nil))
(insn 81 80 82 8 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3052 [0xfffffffffffff414])) [0 createIn.inPublic.publicArea.objectAttributes.val+0 S4 A32])
        (const_int 0 [0])) signapp.c:627 -1
     (nil))
(insn 82 81 83 8 (set (reg:SI 87 [ D.18614 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3052 [0xfffffffffffff414])) [0 createIn.inPublic.publicArea.objectAttributes.val+0 S4 A32])) signapp.c:628 -1
     (nil))
(insn 83 82 84 8 (parallel [
            (set (reg:SI 88 [ D.18614 ])
                (ior:SI (reg:SI 87 [ D.18614 ])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:628 -1
     (nil))
(insn 84 83 85 8 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3052 [0xfffffffffffff414])) [0 createIn.inPublic.publicArea.objectAttributes.val+0 S4 A32])
        (reg:SI 88 [ D.18614 ])) signapp.c:628 -1
     (nil))
(insn 85 84 86 8 (set (reg:SI 89 [ D.18614 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3052 [0xfffffffffffff414])) [0 createIn.inPublic.publicArea.objectAttributes.val+0 S4 A32])) signapp.c:629 -1
     (nil))
(insn 86 85 87 8 (parallel [
            (set (reg:SI 90 [ D.18614 ])
                (ior:SI (reg:SI 89 [ D.18614 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:629 -1
     (nil))
(insn 87 86 88 8 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3052 [0xfffffffffffff414])) [0 createIn.inPublic.publicArea.objectAttributes.val+0 S4 A32])
        (reg:SI 90 [ D.18614 ])) signapp.c:629 -1
     (nil))
(insn 88 87 89 8 (set (reg:SI 91 [ D.18614 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3052 [0xfffffffffffff414])) [0 createIn.inPublic.publicArea.objectAttributes.val+0 S4 A32])) signapp.c:630 -1
     (nil))
(insn 89 88 90 8 (parallel [
            (set (reg:SI 92 [ D.18614 ])
                (ior:SI (reg:SI 91 [ D.18614 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:630 -1
     (nil))
(insn 90 89 91 8 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3052 [0xfffffffffffff414])) [0 createIn.inPublic.publicArea.objectAttributes.val+0 S4 A32])
        (reg:SI 92 [ D.18614 ])) signapp.c:630 -1
     (nil))
(insn 91 90 92 8 (set (reg:SI 93 [ D.18614 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3052 [0xfffffffffffff414])) [0 createIn.inPublic.publicArea.objectAttributes.val+0 S4 A32])) signapp.c:631 -1
     (nil))
(insn 92 91 93 8 (parallel [
            (set (reg:SI 94 [ D.18614 ])
                (and:SI (reg:SI 93 [ D.18614 ])
                    (const_int -129 [0xffffffffffffff7f])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:631 -1
     (nil))
(insn 93 92 94 8 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3052 [0xfffffffffffff414])) [0 createIn.inPublic.publicArea.objectAttributes.val+0 S4 A32])
        (reg:SI 94 [ D.18614 ])) signapp.c:631 -1
     (nil))
(insn 94 93 95 8 (set (reg:SI 95 [ D.18614 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3052 [0xfffffffffffff414])) [0 createIn.inPublic.publicArea.objectAttributes.val+0 S4 A32])) signapp.c:632 -1
     (nil))
(insn 95 94 96 8 (parallel [
            (set (reg:SI 96 [ D.18614 ])
                (ior:SI (reg:SI 95 [ D.18614 ])
                    (const_int 262144 [0x40000])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:632 -1
     (nil))
(insn 96 95 97 8 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3052 [0xfffffffffffff414])) [0 createIn.inPublic.publicArea.objectAttributes.val+0 S4 A32])
        (reg:SI 96 [ D.18614 ])) signapp.c:632 -1
     (nil))
(insn 97 96 98 8 (set (reg:SI 97 [ D.18614 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3052 [0xfffffffffffff414])) [0 createIn.inPublic.publicArea.objectAttributes.val+0 S4 A32])) signapp.c:633 -1
     (nil))
(insn 98 97 99 8 (parallel [
            (set (reg:SI 98 [ D.18614 ])
                (and:SI (reg:SI 97 [ D.18614 ])
                    (const_int -131073 [0xfffffffffffdffff])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:633 -1
     (nil))
(insn 99 98 100 8 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3052 [0xfffffffffffff414])) [0 createIn.inPublic.publicArea.objectAttributes.val+0 S4 A32])
        (reg:SI 98 [ D.18614 ])) signapp.c:633 -1
     (nil))
(insn 100 99 101 8 (set (reg:SI 99 [ D.18614 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3052 [0xfffffffffffff414])) [0 createIn.inPublic.publicArea.objectAttributes.val+0 S4 A32])) signapp.c:634 -1
     (nil))
(insn 101 100 102 8 (parallel [
            (set (reg:SI 100 [ D.18614 ])
                (and:SI (reg:SI 99 [ D.18614 ])
                    (const_int -65537 [0xfffffffffffeffff])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:634 -1
     (nil))
(insn 102 101 103 8 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3052 [0xfffffffffffff414])) [0 createIn.inPublic.publicArea.objectAttributes.val+0 S4 A32])
        (reg:SI 100 [ D.18614 ])) signapp.c:634 -1
     (nil))
(insn 103 102 104 8 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2916 [0xfffffffffffff49c])) [0 createIn.inPublic.publicArea.parameters.rsaDetail.symmetric.algorithm+0 S2 A32])
        (const_int 16 [0x10])) signapp.c:635 -1
     (nil))
(insn 104 103 105 8 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2910 [0xfffffffffffff4a2])) [0 createIn.inPublic.publicArea.parameters.rsaDetail.scheme.scheme+0 S2 A16])
        (const_int 16 [0x10])) signapp.c:636 -1
     (nil))
(insn 105 104 106 8 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2904 [0xfffffffffffff4a8])) [0 createIn.inPublic.publicArea.parameters.rsaDetail.keyBits+0 S2 A64])
        (const_int 2048 [0x800])) signapp.c:637 -1
     (nil))
(insn 106 105 107 8 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2900 [0xfffffffffffff4ac])) [0 createIn.inPublic.publicArea.parameters.rsaDetail.exponent+0 S4 A32])
        (const_int 0 [0])) signapp.c:638 -1
     (nil))
(insn 107 106 108 8 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2896 [0xfffffffffffff4b0])) [0 createIn.inPublic.publicArea.unique.rsa.t.size+0 S2 A64])
        (const_int 0 [0])) signapp.c:639 -1
     (nil))
(insn 108 107 109 8 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2636 [0xfffffffffffff5b4])) [0 createIn.outsideInfo.t.size+0 S2 A32])
        (const_int 0 [0])) signapp.c:640 -1
     (nil))
(insn 109 108 110 8 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2504 [0xfffffffffffff638])) [0 createIn.creationPCR.count+0 S4 A64])
        (const_int 0 [0])) signapp.c:641 -1
     (nil))
(insn 110 109 111 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [0 pwSession+0 S4 A64])
            (const_int 0 [0]))) signapp.c:642 -1
     (nil))
(jump_insn 111 110 112 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) signapp.c:642 -1
     (nil)
 -> 116)
(note 112 111 113 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3332 [0xfffffffffffff2fc])) [0 attributes+0 S4 A32])
        (const_int 1 [0x1])) signapp.c:643 -1
     (nil))
(jump_insn 114 113 115 9 (set (pc)
        (label_ref 119)) -1
     (nil)
 -> 119)
(barrier 115 114 116)
(code_label 116 115 117 10 102 "" [1 uses])
(note 117 116 118 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3332 [0xfffffffffffff2fc])) [0 attributes+0 S4 A32])
        (const_int 97 [0x61])) signapp.c:646 -1
     (nil))
(code_label 119 118 120 11 103 "" [1 uses])
(note 120 119 121 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 11 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3372 [0xfffffffffffff2d4])) [0 policySessionHandle+0 S4 A32])) signapp.c:648 -1
     (nil))
(insn 122 121 123 11 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -3328 [0xfffffffffffff300])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:648 -1
     (nil))
(insn 123 122 124 11 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2480 [0xfffffffffffff650])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:648 -1
     (nil))
(insn 124 123 125 11 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3352 [0xfffffffffffff2e8])) [0 tssContext+0 S8 A64])) signapp.c:648 -1
     (nil))
(insn 125 124 126 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:648 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 126 125 127 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) signapp.c:648 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 127 126 128 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) signapp.c:648 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 128 127 129 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1073741831 [0x40000007])) signapp.c:648 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 129 128 130 11 (set (reg:SI 116)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3332 [0xfffffffffffff2fc])) [0 attributes+0 S4 A32])) signapp.c:648 -1
     (nil))
(insn 130 129 131 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 116)) signapp.c:648 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 131 130 132 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) signapp.c:648 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 132 131 133 11 (set (reg:SI 38 r9)
        (reg:SI 112)) signapp.c:648 -1
     (nil))
(insn 133 132 134 11 (set (reg:SI 37 r8)
        (const_int 339 [0x153])) signapp.c:648 -1
     (nil))
(insn 134 133 135 11 (set (reg:DI 2 cx)
        (const_int 0 [0])) signapp.c:648 -1
     (nil))
(insn 135 134 136 11 (set (reg:DI 1 dx)
        (reg:DI 113)) signapp.c:648 -1
     (nil))
(insn 136 135 137 11 (set (reg:DI 4 si)
        (reg:DI 114)) signapp.c:648 -1
     (nil))
(insn 137 136 138 11 (set (reg:DI 5 di)
        (reg:DI 115)) signapp.c:648 -1
     (nil))
(insn 138 137 139 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:648 -1
     (nil))
(call_insn 139 138 140 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fc1125cdca8 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 48 [0x30]))) signapp.c:648 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 140 139 141 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:648 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 141 140 142 11 (set (reg:SI 117)
        (reg:SI 0 ax)) signapp.c:648 -1
     (nil))
(insn 142 141 143 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3336 [0xfffffffffffff2f8])) [0 rc+0 S4 A32])
        (reg:SI 117)) signapp.c:648 -1
     (nil))
(code_label 143 142 144 12 101 "" [1 uses])
(note 144 143 145 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -3336 [0xfffffffffffff2f8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:656 -1
     (nil))
(jump_insn 146 145 147 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) signapp.c:656 -1
     (nil)
 -> 194)
(note 147 146 148 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 13 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3360 [0xfffffffffffff2e0])) [0 outPrivate+0 S8 A64])) signapp.c:657 -1
     (nil))
(insn 149 148 150 13 (set (reg/f:DI 119)
        (reg/f:DI 118)) signapp.c:657 -1
     (nil))
(insn 150 149 151 13 (parallel [
            (set (reg/f:DI 120)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2480 [0xfffffffffffff650])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:657 -1
     (nil))
(insn 151 150 152 13 (set (reg:SI 121)
        (const_int 1168 [0x490])) signapp.c:657 -1
     (nil))
(insn 152 151 153 13 (set (reg:DI 122)
        (mem/j/c:DI (reg/f:DI 120) [0  S8 A8])) signapp.c:657 -1
     (nil))
(insn 153 152 154 13 (set (mem:DI (reg/f:DI 119) [0  S8 A8])
        (reg:DI 122)) signapp.c:657 -1
     (nil))
(insn 154 153 155 13 (set (reg:DI 123)
        (zero_extend:DI (reg:SI 121))) signapp.c:657 -1
     (nil))
(insn 155 154 156 13 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg/f:DI 119)
                    (reg:DI 123)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:657 -1
     (nil))
(insn 156 155 157 13 (parallel [
            (set (reg/f:DI 125)
                (plus:DI (reg:DI 124)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:657 -1
     (nil))
(insn 157 156 158 13 (set (reg:DI 126)
        (zero_extend:DI (reg:SI 121))) signapp.c:657 -1
     (nil))
(insn 158 157 159 13 (parallel [
            (set (reg:DI 127)
                (plus:DI (reg/f:DI 120)
                    (reg:DI 126)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:657 -1
     (nil))
(insn 159 158 160 13 (parallel [
            (set (reg/f:DI 128)
                (plus:DI (reg:DI 127)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:657 -1
     (nil))
(insn 160 159 161 13 (set (reg:DI 129)
        (mem/j/c:DI (plus:DI (reg/f:DI 128)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])) signapp.c:657 -1
     (nil))
(insn 161 160 162 13 (set (mem:DI (plus:DI (reg/f:DI 125)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
        (reg:DI 129)) signapp.c:657 -1
     (nil))
(insn 162 161 163 13 (parallel [
            (set (reg/f:DI 130)
                (plus:DI (reg/f:DI 119)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:657 -1
     (nil))
(insn 163 162 164 13 (parallel [
            (set (reg/f:DI 130)
                (and:DI (reg/f:DI 130)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:657 -1
     (nil))
(insn 164 163 165 13 (parallel [
            (set (reg/f:DI 119)
                (minus:DI (reg/f:DI 119)
                    (reg/f:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:657 -1
     (nil))
(insn 165 164 166 13 (parallel [
            (set (reg/f:DI 120)
                (minus:DI (reg/f:DI 120)
                    (reg/f:DI 119)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:657 -1
     (nil))
(insn 166 165 167 13 (parallel [
            (set (reg:SI 121)
                (plus:SI (reg:SI 121)
                    (subreg:SI (reg/f:DI 119) 0)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:657 -1
     (nil))
(insn 167 166 168 13 (parallel [
            (set (reg:SI 121)
                (and:SI (reg:SI 121)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:657 -1
     (nil))
(insn 168 167 169 13 (parallel [
            (set (reg:SI 131)
                (lshiftrt:SI (reg:SI 121)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:657 -1
     (nil))
(insn 169 168 170 13 (set (reg:DI 132)
        (zero_extend:DI (reg:SI 131))) signapp.c:657 -1
     (nil))
(insn 170 169 171 13 (parallel [
            (set (reg:DI 132)
                (const_int 0 [0]))
            (set (reg/f:DI 130)
                (plus:DI (ashift:DI (reg:DI 132)
                        (const_int 3 [0x3]))
                    (reg/f:DI 130)))
            (set (reg/f:DI 120)
                (plus:DI (ashift:DI (reg:DI 132)
                        (const_int 3 [0x3]))
                    (reg/f:DI 120)))
            (set (mem:BLK (reg/f:DI 130) [0  A64])
                (mem/j/c:BLK (reg/f:DI 120) [0  A8]))
            (use (reg:DI 132))
        ]) signapp.c:657 -1
     (nil))
(insn 171 170 172 13 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3368 [0xfffffffffffff2d8])) [0 outPublic+0 S8 A64])) signapp.c:658 -1
     (nil))
(insn 172 171 173 13 (set (reg/f:DI 134)
        (reg/f:DI 133)) signapp.c:658 -1
     (nil))
(insn 173 172 174 13 (parallel [
            (set (reg/f:DI 135)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1312 [0xfffffffffffffae0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:658 -1
     (nil))
(insn 174 173 175 13 (set (reg:SI 136)
        (const_int 424 [0x1a8])) signapp.c:658 -1
     (nil))
(insn 175 174 176 13 (set (reg:DI 137)
        (mem/j/c:DI (reg/f:DI 135) [0  S8 A8])) signapp.c:658 -1
     (nil))
(insn 176 175 177 13 (set (mem:DI (reg/f:DI 134) [0  S8 A8])
        (reg:DI 137)) signapp.c:658 -1
     (nil))
(insn 177 176 178 13 (set (reg:DI 138)
        (zero_extend:DI (reg:SI 136))) signapp.c:658 -1
     (nil))
(insn 178 177 179 13 (parallel [
            (set (reg:DI 139)
                (plus:DI (reg/f:DI 134)
                    (reg:DI 138)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:658 -1
     (nil))
(insn 179 178 180 13 (parallel [
            (set (reg/f:DI 140)
                (plus:DI (reg:DI 139)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:658 -1
     (nil))
(insn 180 179 181 13 (set (reg:DI 141)
        (zero_extend:DI (reg:SI 136))) signapp.c:658 -1
     (nil))
(insn 181 180 182 13 (parallel [
            (set (reg:DI 142)
                (plus:DI (reg/f:DI 135)
                    (reg:DI 141)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:658 -1
     (nil))
(insn 182 181 183 13 (parallel [
            (set (reg/f:DI 143)
                (plus:DI (reg:DI 142)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:658 -1
     (nil))
(insn 183 182 184 13 (set (reg:DI 144)
        (mem/j/c:DI (plus:DI (reg/f:DI 143)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])) signapp.c:658 -1
     (nil))
(insn 184 183 185 13 (set (mem:DI (plus:DI (reg/f:DI 140)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
        (reg:DI 144)) signapp.c:658 -1
     (nil))
(insn 185 184 186 13 (parallel [
            (set (reg/f:DI 145)
                (plus:DI (reg/f:DI 134)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:658 -1
     (nil))
(insn 186 185 187 13 (parallel [
            (set (reg/f:DI 145)
                (and:DI (reg/f:DI 145)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:658 -1
     (nil))
(insn 187 186 188 13 (parallel [
            (set (reg/f:DI 134)
                (minus:DI (reg/f:DI 134)
                    (reg/f:DI 145)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:658 -1
     (nil))
(insn 188 187 189 13 (parallel [
            (set (reg/f:DI 135)
                (minus:DI (reg/f:DI 135)
                    (reg/f:DI 134)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:658 -1
     (nil))
(insn 189 188 190 13 (parallel [
            (set (reg:SI 136)
                (plus:SI (reg:SI 136)
                    (subreg:SI (reg/f:DI 134) 0)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:658 -1
     (nil))
(insn 190 189 191 13 (parallel [
            (set (reg:SI 136)
                (and:SI (reg:SI 136)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:658 -1
     (nil))
(insn 191 190 192 13 (parallel [
            (set (reg:SI 146)
                (lshiftrt:SI (reg:SI 136)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:658 -1
     (nil))
(insn 192 191 193 13 (set (reg:DI 147)
        (zero_extend:DI (reg:SI 146))) signapp.c:658 -1
     (nil))
(insn 193 192 194 13 (parallel [
            (set (reg:DI 147)
                (const_int 0 [0]))
            (set (reg/f:DI 145)
                (plus:DI (ashift:DI (reg:DI 147)
                        (const_int 3 [0x3]))
                    (reg/f:DI 145)))
            (set (reg/f:DI 135)
                (plus:DI (ashift:DI (reg:DI 147)
                        (const_int 3 [0x3]))
                    (reg/f:DI 135)))
            (set (mem:BLK (reg/f:DI 145) [0  A64])
                (mem/j/c:BLK (reg/f:DI 135) [0  A8]))
            (use (reg:DI 147))
        ]) signapp.c:658 -1
     (nil))
(code_label 194 193 195 14 104 "" [1 uses])
(note 195 194 196 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 199 14 (set (reg:SI 101 [ D.18615 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3336 [0xfffffffffffff2f8])) [0 rc+0 S4 A32])) signapp.c:660 -1
     (nil))
(insn 199 196 203 14 (set (reg:SI 102 [ <retval> ])
        (reg:SI 101 [ D.18615 ])) signapp.c:660 -1
     (nil))
(insn 203 199 204 14 (set (reg/i:SI 0 ax)
        (reg:SI 102 [ <retval> ])) signapp.c:661 -1
     (nil))
(insn 204 203 205 14 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.18616+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) signapp.c:661 -1
     (nil))
(jump_insn 205 204 211 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 208)
            (pc))) signapp.c:661 -1
     (nil)
 -> 208)
(note 211 205 206 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(call_insn 206 211 207 17 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fc111c5ad80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) signapp.c:661 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 207 206 208)
(code_label 208 207 212 18 106 "" [1 uses])
(note 212 208 209 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 209 212 0 18 (use (reg/i:SI 0 ax)) signapp.c:661 -1
     (nil))

;; Function loadKey (loadKey, funcdef_no=11, decl_uid=17994, cgraph_uid=11, symbol_order=12)

Partition 2: size 1596 align 16
	loadIn
Partition 3: size 140 align 16
	loadOut
Partition 1: size 4 align 4
	attributes_2
Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 91.
Merging block 12 into block 10...
Merged blocks 10 and 12.
Merged 10 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1784 [0xfffffffffffff908])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) signapp.c:677 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1792 [0xfffffffffffff900])) [0 keyHandle+0 S8 A64])
        (reg:DI 4 si [ keyHandle ])) signapp.c:677 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1796 [0xfffffffffffff8fc])) [0 parentHandle+0 S4 A32])
        (reg:SI 1 dx [ parentHandle ])) signapp.c:677 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1800 [0xfffffffffffff8f8])) [0 policySessionHandle+0 S4 A32])
        (reg:SI 2 cx [ policySessionHandle ])) signapp.c:677 -1
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1808 [0xfffffffffffff8f0])) [0 outPrivate+0 S8 A64])
        (reg:DI 37 r8 [ outPrivate ])) signapp.c:677 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1816 [0xfffffffffffff8e8])) [0 outPublic+0 S8 A64])
        (reg:DI 38 r9 [ outPublic ])) signapp.c:677 -1
     (nil))
(note 8 7 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 8 12 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.18619+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:677 -1
     (nil))
(insn 12 9 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1768 [0xfffffffffffff918])) [0 rc+0 S4 A32])
        (const_int 0 [0])) signapp.c:678 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1768 [0xfffffffffffff918])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:683 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) signapp.c:683 -1
     (nil)
 -> 77)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1796 [0xfffffffffffff8fc])) [0 parentHandle+0 S4 A32])) signapp.c:684 -1
     (nil))
(insn 17 16 18 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1616 [0xfffffffffffff9b0])) [0 loadIn.parentHandle+0 S4 A64])
        (reg:SI 90)) signapp.c:684 -1
     (nil))
(insn 18 17 19 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1808 [0xfffffffffffff8f0])) [0 outPrivate+0 S8 A64])) signapp.c:685 -1
     (nil))
(insn 19 18 20 4 (parallel [
            (set (reg/f:DI 92)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1612 [0xfffffffffffff9b4])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:685 -1
     (nil))
(insn 20 19 21 4 (set (reg/f:DI 93)
        (reg/f:DI 91)) signapp.c:685 -1
     (nil))
(insn 21 20 22 4 (set (reg:SI 94)
        (mem:SI (reg/f:DI 93) [0 *outPrivate_9(D)+0 S4 A16])) signapp.c:685 -1
     (nil))
(insn 22 21 23 4 (set (mem/j/c:SI (reg/f:DI 92) [0 loadIn.inPrivate+0 S4 A32])
        (reg:SI 94)) signapp.c:685 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 92)
        (plus:DI (reg/f:DI 92)
            (const_int 4 [0x4]))) signapp.c:685 -1
     (nil))
(insn 24 23 25 4 (set (reg/f:DI 93)
        (plus:DI (reg/f:DI 93)
            (const_int 4 [0x4]))) signapp.c:685 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 95)
        (const_int 145 [0x91])) signapp.c:685 -1
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg:DI 95)
                (const_int 0 [0]))
            (set (reg/f:DI 92)
                (plus:DI (ashift:DI (reg:DI 95)
                        (const_int 3 [0x3]))
                    (reg/f:DI 92)))
            (set (reg/f:DI 93)
                (plus:DI (ashift:DI (reg:DI 95)
                        (const_int 3 [0x3]))
                    (reg/f:DI 93)))
            (set (mem/j/c:BLK (reg/f:DI 92) [0 loadIn.inPrivate+4 S1160 A64])
                (mem:BLK (reg/f:DI 93) [0 *outPrivate_9(D)+4 S1160 A16]))
            (use (reg:DI 95))
        ]) signapp.c:685 -1
     (nil))
(insn 27 26 28 4 (set (reg:SI 96)
        (mem:SI (reg/f:DI 93) [0 *outPrivate_9(D)+1164 S4 A16])) signapp.c:685 -1
     (nil))
(insn 28 27 29 4 (set (mem/j/c:SI (reg/f:DI 92) [0 loadIn.inPrivate+1164 S4 A64])
        (reg:SI 96)) signapp.c:685 -1
     (nil))
(insn 29 28 30 4 (set (reg/f:DI 92)
        (plus:DI (reg/f:DI 92)
            (const_int 4 [0x4]))) signapp.c:685 -1
     (nil))
(insn 30 29 31 4 (set (reg/f:DI 93)
        (plus:DI (reg/f:DI 93)
            (const_int 4 [0x4]))) signapp.c:685 -1
     (nil))
(insn 31 30 32 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1816 [0xfffffffffffff8e8])) [0 outPublic+0 S8 A64])) signapp.c:686 -1
     (nil))
(insn 32 31 33 4 (parallel [
            (set (reg/f:DI 98)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -444 [0xfffffffffffffe44])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:686 -1
     (nil))
(insn 33 32 34 4 (set (reg/f:DI 99)
        (reg/f:DI 97)) signapp.c:686 -1
     (nil))
(insn 34 33 35 4 (set (reg:SI 100)
        (mem:SI (reg/f:DI 99) [0 *outPublic_11(D)+0 S4 A32])) signapp.c:686 -1
     (nil))
(insn 35 34 36 4 (set (mem/j/c:SI (reg/f:DI 98) [0 loadIn.inPublic+0 S4 A32])
        (reg:SI 100)) signapp.c:686 -1
     (nil))
(insn 36 35 37 4 (set (reg/f:DI 98)
        (plus:DI (reg/f:DI 98)
            (const_int 4 [0x4]))) signapp.c:686 -1
     (nil))
(insn 37 36 38 4 (set (reg/f:DI 99)
        (plus:DI (reg/f:DI 99)
            (const_int 4 [0x4]))) signapp.c:686 -1
     (nil))
(insn 38 37 39 4 (set (reg:DI 101)
        (const_int 52 [0x34])) signapp.c:686 -1
     (nil))
(insn 39 38 40 4 (parallel [
            (set (reg:DI 101)
                (const_int 0 [0]))
            (set (reg/f:DI 98)
                (plus:DI (ashift:DI (reg:DI 101)
                        (const_int 3 [0x3]))
                    (reg/f:DI 98)))
            (set (reg/f:DI 99)
                (plus:DI (ashift:DI (reg:DI 101)
                        (const_int 3 [0x3]))
                    (reg/f:DI 99)))
            (set (mem/j/c:BLK (reg/f:DI 98) [0 loadIn.inPublic+4 S416 A64])
                (mem:BLK (reg/f:DI 99) [0 *outPublic_11(D)+4 S416 A32]))
            (use (reg:DI 101))
        ]) signapp.c:686 -1
     (nil))
(insn 40 39 41 4 (set (reg:SI 102)
        (mem:SI (reg/f:DI 99) [0 *outPublic_11(D)+420 S4 A32])) signapp.c:686 -1
     (nil))
(insn 41 40 42 4 (set (mem/j/c:SI (reg/f:DI 98) [0 loadIn.inPublic+420 S4 A64])
        (reg:SI 102)) signapp.c:686 -1
     (nil))
(insn 42 41 43 4 (set (reg/f:DI 98)
        (plus:DI (reg/f:DI 98)
            (const_int 4 [0x4]))) signapp.c:686 -1
     (nil))
(insn 43 42 44 4 (set (reg/f:DI 99)
        (plus:DI (reg/f:DI 99)
            (const_int 4 [0x4]))) signapp.c:686 -1
     (nil))
(insn 44 43 45 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [0 pwSession+0 S4 A64])
            (const_int 0 [0]))) signapp.c:687 -1
     (nil))
(jump_insn 45 44 46 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) signapp.c:687 -1
     (nil)
 -> 50)
(note 46 45 47 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1764 [0xfffffffffffff91c])) [0 attributes+0 S4 A32])
        (const_int 1 [0x1])) signapp.c:688 -1
     (nil))
(jump_insn 48 47 49 5 (set (pc)
        (label_ref 53)) -1
     (nil)
 -> 53)
(barrier 49 48 50)
(code_label 50 49 51 6 109 "" [1 uses])
(note 51 50 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1764 [0xfffffffffffff91c])) [0 attributes+0 S4 A32])
        (const_int 33 [0x21])) signapp.c:691 -1
     (nil))
(code_label 53 52 54 7 110 "" [1 uses])
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 7 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1800 [0xfffffffffffff8f8])) [0 policySessionHandle+0 S4 A32])) signapp.c:693 -1
     (nil))
(insn 56 55 57 7 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1616 [0xfffffffffffff9b0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:693 -1
     (nil))
(insn 57 56 58 7 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1760 [0xfffffffffffff920])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:693 -1
     (nil))
(insn 58 57 59 7 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1784 [0xfffffffffffff908])) [0 tssContext+0 S8 A64])) signapp.c:693 -1
     (nil))
(insn 59 58 60 7 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:693 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 60 59 61 7 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) signapp.c:693 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 61 60 62 7 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) signapp.c:693 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 62 61 63 7 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1073741831 [0x40000007])) signapp.c:693 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 63 62 64 7 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1764 [0xfffffffffffff91c])) [0 attributes+0 S4 A32])) signapp.c:693 -1
     (nil))
(insn 64 63 65 7 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 107)) signapp.c:693 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 65 64 66 7 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) signapp.c:693 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 66 65 67 7 (set (reg:SI 38 r9)
        (reg:SI 103)) signapp.c:693 -1
     (nil))
(insn 67 66 68 7 (set (reg:SI 37 r8)
        (const_int 343 [0x157])) signapp.c:693 -1
     (nil))
(insn 68 67 69 7 (set (reg:DI 2 cx)
        (const_int 0 [0])) signapp.c:693 -1
     (nil))
(insn 69 68 70 7 (set (reg:DI 1 dx)
        (reg:DI 104)) signapp.c:693 -1
     (nil))
(insn 70 69 71 7 (set (reg:DI 4 si)
        (reg:DI 105)) signapp.c:693 -1
     (nil))
(insn 71 70 72 7 (set (reg:DI 5 di)
        (reg:DI 106)) signapp.c:693 -1
     (nil))
(insn 72 71 73 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:693 -1
     (nil))
(call_insn 73 72 74 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fc1125cdca8 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 48 [0x30]))) signapp.c:693 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 74 73 75 7 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:693 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 75 74 76 7 (set (reg:SI 108)
        (reg:SI 0 ax)) signapp.c:693 -1
     (nil))
(insn 76 75 77 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1768 [0xfffffffffffff918])) [0 rc+0 S4 A32])
        (reg:SI 108)) signapp.c:693 -1
     (nil))
(code_label 77 76 78 8 108 "" [1 uses])
(note 78 77 79 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1768 [0xfffffffffffff918])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:701 -1
     (nil))
(jump_insn 80 79 81 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) signapp.c:701 -1
     (nil)
 -> 85)
(note 81 80 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 9 (set (reg:SI 87 [ D.18617 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1760 [0xfffffffffffff920])) [0 loadOut.objectHandle+0 S4 A64])) signapp.c:702 -1
     (nil))
(insn 83 82 84 9 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1792 [0xfffffffffffff900])) [0 keyHandle+0 S8 A64])) signapp.c:702 -1
     (nil))
(insn 84 83 85 9 (set (mem:SI (reg/f:DI 109) [0 *keyHandle_21(D)+0 S4 A32])
        (reg:SI 87 [ D.18617 ])) signapp.c:702 -1
     (nil))
(code_label 85 84 86 10 111 "" [1 uses])
(note 86 85 87 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 90 10 (set (reg:SI 88 [ D.18618 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1768 [0xfffffffffffff918])) [0 rc+0 S4 A32])) signapp.c:704 -1
     (nil))
(insn 90 87 94 10 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.18618 ])) signapp.c:704 -1
     (nil))
(insn 94 90 95 10 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) signapp.c:705 -1
     (nil))
(insn 95 94 96 10 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.18619+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) signapp.c:705 -1
     (nil))
(jump_insn 96 95 102 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) signapp.c:705 -1
     (nil)
 -> 99)
(note 102 96 97 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(call_insn 97 102 98 13 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fc111c5ad80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) signapp.c:705 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 98 97 99)
(code_label 99 98 103 14 113 "" [1 uses])
(note 103 99 100 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 100 103 0 14 (use (reg/i:SI 0 ax)) signapp.c:705 -1
     (nil))

;; Function sign (sign, funcdef_no=12, decl_uid=18001, cgraph_uid=12, symbol_order=13)

Partition 3: size 280 align 16
	signIn
Partition 4: size 262 align 16
	signOut
Partition 1: size 8 align 8
	pwd_2
Partition 0: size 4 align 4
	rc_1
Partition 2: size 1 align 1
	handleType_8

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Removing jump 114.
Merging block 14 into block 12...
Merged blocks 12 and 14.
Merged 12 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) signapp.c:722 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [0 signature+0 S8 A64])
        (reg:DI 4 si [ signature ])) signapp.c:722 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -596 [0xfffffffffffffdac])) [0 keyHandle+0 S4 A32])
        (reg:SI 1 dx [ keyHandle ])) signapp.c:722 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -600 [0xfffffffffffffda8])) [0 sessionHandle+0 S4 A32])
        (reg:SI 2 cx [ sessionHandle ])) signapp.c:722 -1
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -604 [0xfffffffffffffda4])) [0 sizeInBytes+0 S4 A32])
        (reg:SI 37 r8 [ sizeInBytes ])) signapp.c:722 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -616 [0xfffffffffffffd98])) [0 messageDigest+0 S8 A64])
        (reg:DI 38 r9 [ messageDigest ])) signapp.c:722 -1
     (nil))
(note 8 7 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 8 12 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.18625+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:722 -1
     (nil))
(insn 12 9 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -572 [0xfffffffffffffdc4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) signapp.c:723 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -600 [0xfffffffffffffda8])) [0 sessionHandle+0 S4 A32])) signapp.c:727 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:SI 87 [ D.18620 ])
                (lshiftrt:SI (reg:SI 93)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:727 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -600 [0xfffffffffffffda8])) [0 sessionHandle+0 S4 A32])
            (const_int 24 [0x18]))
        (nil)))
(insn 15 14 16 2 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -573 [0xfffffffffffffdc3])) [0 handleType+0 S1 A8])
        (subreg:QI (reg:SI 87 [ D.18620 ]) 0)) signapp.c:727 -1
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -572 [0xfffffffffffffdc4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:729 -1
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) signapp.c:729 -1
     (nil)
 -> 80)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -596 [0xfffffffffffffdac])) [0 keyHandle+0 S4 A32])) signapp.c:730 -1
     (nil))
(insn 20 19 21 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 signIn.keyHandle+0 S4 A64])
        (reg:SI 94)) signapp.c:730 -1
     (nil))
(insn 21 20 22 4 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -604 [0xfffffffffffffda4])) [0 sizeInBytes+0 S4 A32])) signapp.c:731 -1
     (nil))
(insn 22 21 23 4 (set (reg:HI 88 [ D.18621 ])
        (subreg:HI (reg:SI 95) 0)) signapp.c:731 -1
     (nil))
(insn 23 22 24 4 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -284 [0xfffffffffffffee4])) [0 signIn.digest.t.size+0 S2 A32])
        (reg:HI 88 [ D.18621 ])) signapp.c:731 -1
     (nil))
(insn 24 23 25 4 (set (reg:DI 89 [ D.18622 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -604 [0xfffffffffffffda4])) [0 sizeInBytes+0 S4 A32]))) signapp.c:732 -1
     (nil))
(insn 25 24 26 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -616 [0xfffffffffffffd98])) [0 messageDigest+0 S8 A64])) signapp.c:732 -1
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg/f:DI 90 [ D.18623 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:732 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -616 [0xfffffffffffffd98])) [0 messageDigest+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 27 26 28 4 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:732 -1
     (nil))
(insn 28 27 29 4 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg:DI 97)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:732 -1
     (nil))
(insn 29 28 30 4 (set (reg:DI 1 dx)
        (reg:DI 89 [ D.18622 ])) signapp.c:732 -1
     (nil))
(insn 30 29 31 4 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.18623 ])) signapp.c:732 -1
     (nil))
(insn 31 30 32 4 (set (reg:DI 5 di)
        (reg:DI 98)) signapp.c:732 -1
     (nil))
(call_insn 32 31 33 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fc112873e58 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) signapp.c:732 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 33 32 34 4 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -154 [0xffffffffffffff66])) [0 signIn.inScheme.scheme+0 S2 A16])
        (const_int 20 [0x14])) signapp.c:733 -1
     (nil))
(insn 34 33 35 4 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [0 signIn.inScheme.details.rsassa.hashAlg+0 S2 A64])
        (const_int 11 [0xb])) signapp.c:734 -1
     (nil))
(insn 35 34 36 4 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -148 [0xffffffffffffff6c])) [0 signIn.validation.tag+0 S2 A32])
        (const_int -32732 [0xffffffffffff8024])) signapp.c:735 -1
     (nil))
(insn 36 35 37 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [0 signIn.validation.hierarchy+0 S4 A64])
        (const_int 1073741831 [0x40000007])) signapp.c:736 -1
     (nil))
(insn 37 36 38 4 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -140 [0xffffffffffffff74])) [0 signIn.validation.digest.t.size+0 S2 A32])
        (const_int 0 [0])) signapp.c:737 -1
     (nil))
(insn 38 37 39 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -600 [0xfffffffffffffda8])) [0 sessionHandle+0 S4 A32])
            (const_int 1073741833 [0x40000009]))) signapp.c:739 -1
     (nil))
(jump_insn 39 38 40 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) signapp.c:739 -1
     (nil)
 -> 45)
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 5 (set (reg/f:DI 99)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fc111c886c0 *.LC17>)) signapp.c:740 -1
     (nil))
(insn 42 41 43 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [0 pwd+0 S8 A64])
        (reg/f:DI 99)) signapp.c:740 -1
     (nil))
(jump_insn 43 42 44 5 (set (pc)
        (label_ref 57)) -1
     (nil)
 -> 57)
(barrier 44 43 45)
(code_label 45 44 46 6 116 "" [1 uses])
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -573 [0xfffffffffffffdc3])) [0 handleType+0 S1 A8])
            (const_int 3 [0x3]))) signapp.c:743 -1
     (nil))
(jump_insn 48 47 49 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) signapp.c:743 -1
     (nil)
 -> 54)
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 7 (set (reg/f:DI 100)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fc111c886c0 *.LC17>)) signapp.c:744 -1
     (nil))
(insn 51 50 52 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [0 pwd+0 S8 A64])
        (reg/f:DI 100)) signapp.c:744 -1
     (nil))
(jump_insn 52 51 53 7 (set (pc)
        (label_ref 57)) -1
     (nil)
 -> 57)
(barrier 53 52 54)
(code_label 54 53 55 8 118 "" [1 uses])
(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [0 pwd+0 S8 A64])
        (const_int 0 [0])) signapp.c:748 -1
     (nil))
(code_label 57 56 58 9 117 "" [2 uses])
(note 58 57 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 9 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -600 [0xfffffffffffffda8])) [0 sessionHandle+0 S4 A32])) signapp.c:750 -1
     (nil))
(insn 60 59 61 9 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:750 -1
     (nil))
(insn 61 60 62 9 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:750 -1
     (nil))
(insn 62 61 63 9 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [0 tssContext+0 S8 A64])) signapp.c:750 -1
     (nil))
(insn 63 62 64 9 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:750 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 64 63 65 9 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) signapp.c:750 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 65 64 66 9 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) signapp.c:750 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 66 65 67 9 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1073741831 [0x40000007])) signapp.c:750 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 67 66 68 9 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1 [0x1])) signapp.c:750 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 68 67 69 9 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -568 [0xfffffffffffffdc8])) [0 pwd+0 S8 A64])) signapp.c:750 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 69 68 70 9 (set (reg:SI 38 r9)
        (reg:SI 101)) signapp.c:750 -1
     (nil))
(insn 70 69 71 9 (set (reg:SI 37 r8)
        (const_int 349 [0x15d])) signapp.c:750 -1
     (nil))
(insn 71 70 72 9 (set (reg:DI 2 cx)
        (const_int 0 [0])) signapp.c:750 -1
     (nil))
(insn 72 71 73 9 (set (reg:DI 1 dx)
        (reg:DI 102)) signapp.c:750 -1
     (nil))
(insn 73 72 74 9 (set (reg:DI 4 si)
        (reg:DI 103)) signapp.c:750 -1
     (nil))
(insn 74 73 75 9 (set (reg:DI 5 di)
        (reg:DI 104)) signapp.c:750 -1
     (nil))
(insn 75 74 76 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:750 -1
     (nil))
(call_insn 76 75 77 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fc1125cdca8 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 48 [0x30]))) signapp.c:750 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 77 76 78 9 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:750 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 78 77 79 9 (set (reg:SI 105)
        (reg:SI 0 ax)) signapp.c:750 -1
     (nil))
(insn 79 78 80 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -572 [0xfffffffffffffdc4])) [0 rc+0 S4 A32])
        (reg:SI 105)) signapp.c:750 -1
     (nil))
(code_label 80 79 81 10 115 "" [1 uses])
(note 81 80 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -572 [0xfffffffffffffdc4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:759 -1
     (nil))
(jump_insn 83 82 84 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) signapp.c:759 -1
     (nil)
 -> 108)
(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 11 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [0 signature+0 S8 A64])) signapp.c:760 -1
     (nil))
(insn 86 85 87 11 (set (reg/f:DI 107)
        (reg/f:DI 106)) signapp.c:760 -1
     (nil))
(insn 87 86 88 11 (parallel [
            (set (reg/f:DI 108)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:760 -1
     (nil))
(insn 88 87 89 11 (set (reg:SI 109)
        (const_int 262 [0x106])) signapp.c:760 -1
     (nil))
(insn 89 88 90 11 (set (reg:DI 110)
        (mem/j/c:DI (reg/f:DI 108) [0  S8 A8])) signapp.c:760 -1
     (nil))
(insn 90 89 91 11 (set (mem:DI (reg/f:DI 107) [0  S8 A8])
        (reg:DI 110)) signapp.c:760 -1
     (nil))
(insn 91 90 92 11 (set (reg:DI 111)
        (zero_extend:DI (reg:SI 109))) signapp.c:760 -1
     (nil))
(insn 92 91 93 11 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg/f:DI 107)
                    (reg:DI 111)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:760 -1
     (nil))
(insn 93 92 94 11 (parallel [
            (set (reg/f:DI 113)
                (plus:DI (reg:DI 112)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:760 -1
     (nil))
(insn 94 93 95 11 (set (reg:DI 114)
        (zero_extend:DI (reg:SI 109))) signapp.c:760 -1
     (nil))
(insn 95 94 96 11 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg/f:DI 108)
                    (reg:DI 114)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:760 -1
     (nil))
(insn 96 95 97 11 (parallel [
            (set (reg/f:DI 116)
                (plus:DI (reg:DI 115)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:760 -1
     (nil))
(insn 97 96 98 11 (set (reg:DI 117)
        (mem/j/c:DI (plus:DI (reg/f:DI 116)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])) signapp.c:760 -1
     (nil))
(insn 98 97 99 11 (set (mem:DI (plus:DI (reg/f:DI 113)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
        (reg:DI 117)) signapp.c:760 -1
     (nil))
(insn 99 98 100 11 (parallel [
            (set (reg/f:DI 118)
                (plus:DI (reg/f:DI 107)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:760 -1
     (nil))
(insn 100 99 101 11 (parallel [
            (set (reg/f:DI 118)
                (and:DI (reg/f:DI 118)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:760 -1
     (nil))
(insn 101 100 102 11 (parallel [
            (set (reg/f:DI 107)
                (minus:DI (reg/f:DI 107)
                    (reg/f:DI 118)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:760 -1
     (nil))
(insn 102 101 103 11 (parallel [
            (set (reg/f:DI 108)
                (minus:DI (reg/f:DI 108)
                    (reg/f:DI 107)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:760 -1
     (nil))
(insn 103 102 104 11 (parallel [
            (set (reg:SI 109)
                (plus:SI (reg:SI 109)
                    (subreg:SI (reg/f:DI 107) 0)))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:760 -1
     (nil))
(insn 104 103 105 11 (parallel [
            (set (reg:SI 109)
                (and:SI (reg:SI 109)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:760 -1
     (nil))
(insn 105 104 106 11 (parallel [
            (set (reg:SI 119)
                (lshiftrt:SI (reg:SI 109)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:760 -1
     (nil))
(insn 106 105 107 11 (set (reg:DI 120)
        (zero_extend:DI (reg:SI 119))) signapp.c:760 -1
     (nil))
(insn 107 106 108 11 (parallel [
            (set (reg:DI 120)
                (const_int 0 [0]))
            (set (reg/f:DI 118)
                (plus:DI (ashift:DI (reg:DI 120)
                        (const_int 3 [0x3]))
                    (reg/f:DI 118)))
            (set (reg/f:DI 108)
                (plus:DI (ashift:DI (reg:DI 120)
                        (const_int 3 [0x3]))
                    (reg/f:DI 108)))
            (set (mem:BLK (reg/f:DI 118) [0  A64])
                (mem/j/c:BLK (reg/f:DI 108) [0  A8]))
            (use (reg:DI 120))
        ]) signapp.c:760 -1
     (nil))
(code_label 108 107 109 12 119 "" [1 uses])
(note 109 108 110 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 113 12 (set (reg:SI 91 [ D.18624 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -572 [0xfffffffffffffdc4])) [0 rc+0 S4 A32])) signapp.c:762 -1
     (nil))
(insn 113 110 117 12 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.18624 ])) signapp.c:762 -1
     (nil))
(insn 117 113 118 12 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) signapp.c:763 -1
     (nil))
(insn 118 117 119 12 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.18625+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) signapp.c:763 -1
     (nil))
(jump_insn 119 118 125 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) signapp.c:763 -1
     (nil)
 -> 122)
(note 125 119 120 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(call_insn 120 125 121 15 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fc111c5ad80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) signapp.c:763 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 121 120 122)
(code_label 122 121 126 16 121 "" [1 uses])
(note 126 122 123 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 123 126 0 16 (use (reg/i:SI 0 ax)) signapp.c:763 -1
     (nil))

;; Function verify (verify, funcdef_no=13, decl_uid=18007, cgraph_uid=13, symbol_order=14)

Partition 1: size 396 align 16
	verifySignatureIn
Partition 2: size 140 align 16
	verifySignatureOut
Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Removing jump 69.
Merging block 9 into block 7...
Merged blocks 7 and 9.
Merged 7 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) signapp.c:775 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -588 [0xfffffffffffffdb4])) [0 keyHandle+0 S4 A32])
        (reg:SI 4 si [ keyHandle ])) signapp.c:775 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [0 sizeInBytes+0 S4 A32])
        (reg:SI 1 dx [ sizeInBytes ])) signapp.c:775 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -600 [0xfffffffffffffda8])) [0 messageDigest+0 S8 A64])
        (reg:DI 2 cx [ messageDigest ])) signapp.c:775 -1
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [0 signature+0 S8 A64])
        (reg:DI 37 r8 [ signature ])) signapp.c:775 -1
     (nil))
(note 7 6 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 7 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.18630+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:775 -1
     (nil))
(insn 11 8 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -564 [0xfffffffffffffdcc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) signapp.c:776 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -564 [0xfffffffffffffdcc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:780 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) signapp.c:780 -1
     (nil)
 -> 42)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -588 [0xfffffffffffffdb4])) [0 keyHandle+0 S4 A32])) signapp.c:781 -1
     (nil))
(insn 16 15 17 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [0 verifySignatureIn.keyHandle+0 S4 A64])
        (reg:SI 92)) signapp.c:781 -1
     (nil))
(insn 17 16 18 4 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -592 [0xfffffffffffffdb0])) [0 sizeInBytes+0 S4 A32])) signapp.c:782 -1
     (nil))
(insn 18 17 19 4 (set (reg:HI 87 [ D.18626 ])
        (subreg:HI (reg:SI 93) 0)) signapp.c:782 -1
     (nil))
(insn 19 18 20 4 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -412 [0xfffffffffffffe64])) [0 verifySignatureIn.digest.t.size+0 S2 A32])
        (reg:HI 87 [ D.18626 ])) signapp.c:782 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 88 [ D.18627 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -592 [0xfffffffffffffdb0])) [0 sizeInBytes+0 S4 A32]))) signapp.c:783 -1
     (nil))
(insn 21 20 22 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -600 [0xfffffffffffffda8])) [0 messageDigest+0 S8 A64])) signapp.c:783 -1
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg/f:DI 89 [ D.18628 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:783 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -600 [0xfffffffffffffda8])) [0 messageDigest+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 23 22 24 4 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:783 -1
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg:DI 95)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:783 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 1 dx)
        (reg:DI 88 [ D.18627 ])) signapp.c:783 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 4 si)
        (reg/f:DI 89 [ D.18628 ])) signapp.c:783 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg:DI 96)) signapp.c:783 -1
     (nil))
(call_insn 28 27 29 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fc112873e58 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) signapp.c:783 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 29 28 30 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -608 [0xfffffffffffffda0])) [0 signature+0 S8 A64])) signapp.c:784 -1
     (nil))
(insn 30 29 31 4 (parallel [
            (set (reg/f:DI 98)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -282 [0xfffffffffffffee6])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:784 -1
     (nil))
(insn 31 30 32 4 (set (reg/f:DI 99)
        (reg/f:DI 97)) signapp.c:784 -1
     (nil))
(insn 32 31 33 4 (set (reg:HI 100)
        (mem:HI (reg/f:DI 99) [0 *signature_15(D)+0 S2 A16])) signapp.c:784 -1
     (nil))
(insn 33 32 34 4 (set (mem/j/c:HI (reg/f:DI 98) [0 verifySignatureIn.signature+0 S2 A16])
        (reg:HI 100)) signapp.c:784 -1
     (nil))
(insn 34 33 35 4 (set (reg/f:DI 98)
        (plus:DI (reg/f:DI 98)
            (const_int 2 [0x2]))) signapp.c:784 -1
     (nil))
(insn 35 34 36 4 (set (reg/f:DI 99)
        (plus:DI (reg/f:DI 99)
            (const_int 2 [0x2]))) signapp.c:784 -1
     (nil))
(insn 36 35 37 4 (set (reg:DI 101)
        (const_int 32 [0x20])) signapp.c:784 -1
     (nil))
(insn 37 36 38 4 (parallel [
            (set (reg:DI 101)
                (const_int 0 [0]))
            (set (reg/f:DI 98)
                (plus:DI (ashift:DI (reg:DI 101)
                        (const_int 3 [0x3]))
                    (reg/f:DI 98)))
            (set (reg/f:DI 99)
                (plus:DI (ashift:DI (reg:DI 101)
                        (const_int 3 [0x3]))
                    (reg/f:DI 99)))
            (set (mem/j/c:BLK (reg/f:DI 98) [0 verifySignatureIn.signature+2 S256 A64])
                (mem:BLK (reg/f:DI 99) [0 *signature_15(D)+2 S256 A16]))
            (use (reg:DI 101))
        ]) signapp.c:784 -1
     (nil))
(insn 38 37 39 4 (set (reg:SI 102)
        (mem:SI (reg/f:DI 99) [0 *signature_15(D)+258 S4 A16])) signapp.c:784 -1
     (nil))
(insn 39 38 40 4 (set (mem/j/c:SI (reg/f:DI 98) [0 verifySignatureIn.signature+258 S4 A64])
        (reg:SI 102)) signapp.c:784 -1
     (nil))
(insn 40 39 41 4 (set (reg/f:DI 98)
        (plus:DI (reg/f:DI 98)
            (const_int 4 [0x4]))) signapp.c:784 -1
     (nil))
(insn 41 40 42 4 (set (reg/f:DI 99)
        (plus:DI (reg/f:DI 99)
            (const_int 4 [0x4]))) signapp.c:784 -1
     (nil))
(code_label 42 41 43 5 123 "" [1 uses])
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -564 [0xfffffffffffffdcc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:786 -1
     (nil))
(jump_insn 45 44 46 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) signapp.c:786 -1
     (nil)
 -> 63)
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 6 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:787 -1
     (nil))
(insn 48 47 49 6 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:787 -1
     (nil))
(insn 49 48 50 6 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -584 [0xfffffffffffffdb8])) [0 tssContext+0 S8 A64])) signapp.c:787 -1
     (nil))
(insn 50 49 51 6 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) signapp.c:787 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 51 50 52 6 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) signapp.c:787 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 52 51 53 6 (set (reg:SI 38 r9)
        (const_int 1073741831 [0x40000007])) signapp.c:787 -1
     (nil))
(insn 53 52 54 6 (set (reg:SI 37 r8)
        (const_int 375 [0x177])) signapp.c:787 -1
     (nil))
(insn 54 53 55 6 (set (reg:DI 2 cx)
        (const_int 0 [0])) signapp.c:787 -1
     (nil))
(insn 55 54 56 6 (set (reg:DI 1 dx)
        (reg:DI 103)) signapp.c:787 -1
     (nil))
(insn 56 55 57 6 (set (reg:DI 4 si)
        (reg:DI 104)) signapp.c:787 -1
     (nil))
(insn 57 56 58 6 (set (reg:DI 5 di)
        (reg:DI 105)) signapp.c:787 -1
     (nil))
(insn 58 57 59 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:787 -1
     (nil))
(call_insn 59 58 60 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fc1125cdca8 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 16 [0x10]))) signapp.c:787 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 60 59 61 6 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:787 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 61 60 62 6 (set (reg:SI 106)
        (reg:SI 0 ax)) signapp.c:787 -1
     (nil))
(insn 62 61 63 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -564 [0xfffffffffffffdcc])) [0 rc+0 S4 A32])
        (reg:SI 106)) signapp.c:787 -1
     (nil))
(code_label 63 62 64 7 124 "" [1 uses])
(note 64 63 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 68 7 (set (reg:SI 90 [ D.18629 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -564 [0xfffffffffffffdcc])) [0 rc+0 S4 A32])) signapp.c:794 -1
     (nil))
(insn 68 65 72 7 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.18629 ])) signapp.c:794 -1
     (nil))
(insn 72 68 73 7 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) signapp.c:795 -1
     (nil))
(insn 73 72 74 7 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.18630+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) signapp.c:795 -1
     (nil))
(jump_insn 74 73 80 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) signapp.c:795 -1
     (nil)
 -> 77)
(note 80 74 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 75 80 76 10 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fc111c5ad80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) signapp.c:795 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 76 75 77)
(code_label 77 76 81 11 126 "" [1 uses])
(note 81 77 78 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 78 81 0 11 (use (reg/i:SI 0 ax)) signapp.c:795 -1
     (nil))

;; Function flush (flush, funcdef_no=14, decl_uid=18010, cgraph_uid=14, symbol_order=15)

Partition 0: size 4 align 4
	rc_1
Partition 1: size 4 align 16
	in

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 35.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) signapp.c:803 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 flushHandle+0 S4 A32])
        (reg:SI 4 si [ flushHandle ])) signapp.c:803 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.18632+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:803 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) signapp.c:804 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) signapp.c:807 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) signapp.c:807 -1
     (nil)
 -> 29)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 flushHandle+0 S4 A32])) signapp.c:808 -1
     (nil))
(insn 13 12 14 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 in.flushHandle+0 S4 A64])
        (reg:SI 89)) signapp.c:808 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:809 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 tssContext+0 S8 A64])) signapp.c:809 -1
     (nil))
(insn 16 15 17 4 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) signapp.c:809 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 17 16 18 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) signapp.c:809 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 18 17 19 4 (set (reg:SI 38 r9)
        (const_int 1073741831 [0x40000007])) signapp.c:809 -1
     (nil))
(insn 19 18 20 4 (set (reg:SI 37 r8)
        (const_int 357 [0x165])) signapp.c:809 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 2 cx)
        (const_int 0 [0])) signapp.c:809 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 1 dx)
        (reg:DI 90)) signapp.c:809 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 4 si)
        (const_int 0 [0])) signapp.c:809 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 5 di)
        (reg:DI 91)) signapp.c:809 -1
     (nil))
(insn 24 23 25 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) signapp.c:809 -1
     (nil))
(call_insn 25 24 26 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fc1125cdca8 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 16 [0x10]))) signapp.c:809 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 26 25 27 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) signapp.c:809 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 27 26 28 4 (set (reg:SI 92)
        (reg:SI 0 ax)) signapp.c:809 -1
     (nil))
(insn 28 27 29 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 92)) signapp.c:809 -1
     (nil))
(code_label 29 28 30 5 128 "" [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 34 5 (set (reg:SI 87 [ D.18631 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) signapp.c:816 -1
     (nil))
(insn 34 31 38 5 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.18631 ])) signapp.c:816 -1
     (nil))
(insn 38 34 39 5 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) signapp.c:817 -1
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.18632+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) signapp.c:817 -1
     (nil))
(jump_insn 40 39 46 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) signapp.c:817 -1
     (nil)
 -> 43)
(note 46 40 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 41 46 42 8 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fc111c5ad80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) signapp.c:817 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 42 41 43)
(code_label 43 42 47 9 130 "" [1 uses])
(note 47 43 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 47 0 9 (use (reg/i:SI 0 ax)) signapp.c:817 -1
     (nil))

;; Function printUsage (printUsage, funcdef_no=15, decl_uid=18012, cgraph_uid=15, symbol_order=16)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) signapp.c:821 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fc112880000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) signapp.c:821 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7fc111d191b0 *.LC33>)) signapp.c:822 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fc112880360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) signapp.c:822 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) signapp.c:823 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fc112880000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) signapp.c:823 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fc111d19240 *.LC34>)) signapp.c:824 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fc112880360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) signapp.c:824 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7fc111d192d0 *.LC35>)) signapp.c:825 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fc112880360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) signapp.c:825 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) signapp.c:826 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fc112880000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) signapp.c:826 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fc111d19360 *.LC36>)) signapp.c:827 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fc112880360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) signapp.c:827 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) signapp.c:828 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fc112880000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) signapp.c:828 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fc111d193f0 *.LC37>)) signapp.c:829 -1
     (nil))
(call_insn 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fc112880360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) signapp.c:829 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) signapp.c:830 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fc112880000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) signapp.c:830 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 25 24 26 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) signapp.c:831 -1
     (nil))
(call_insn 26 25 27 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fc112893000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) signapp.c:831 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 27 26 0)
