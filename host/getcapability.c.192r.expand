
;; Function main (main, funcdef_no=2, decl_uid=5220, cgraph_uid=2, symbol_order=3)

Partition 8: size 2052 align 16
	out
Partition 7: size 12 align 16
	in
Partition 17: size 8 align 8
	num
Partition 16: size 8 align 8
	submsg
Partition 15: size 8 align 8
	msg
Partition 3: size 8 align 8
	tssContext
Partition 2: size 4 align 4
	rc1_216
Partition 1: size 4 align 4
	i_6
Partition 0: size 4 align 4
	rc_1
Partition 14: size 4 align 4
	sessionAttributes2
Partition 13: size 4 align 4
	sessionHandle2
Partition 12: size 4 align 4
	sessionAttributes1
Partition 11: size 4 align 4
	sessionHandle1
Partition 10: size 4 align 4
	sessionAttributes0
Partition 9: size 4 align 4
	sessionHandle0
Partition 6: size 4 align 4
	propertyCount
Partition 5: size 4 align 4
	property
Partition 4: size 4 align 4
	capability

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 63 from 8 to 54.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Redirecting jump 108 from 13 to 54.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Redirecting jump 153 from 18 to 54.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Edge 24->26 redirected to 54
Merging block 26 into block 25...
Merged blocks 25 and 26.
Merged 25 and 26 without moving.
Redirecting jump 237 from 28 to 54.
Merging block 28 into block 27...
Merged blocks 27 and 28.
Merged 27 and 28 without moving.
Edge 34->36 redirected to 54
Merging block 36 into block 35...
Merged blocks 35 and 36.
Merged 35 and 36 without moving.
Redirecting jump 321 from 38 to 54.
Merging block 38 into block 37...
Merged blocks 37 and 38.
Merged 37 and 38 without moving.
Edge 44->46 redirected to 54
Merging block 46 into block 45...
Merged blocks 45 and 46.
Merged 45 and 46 without moving.
Redirecting jump 405 from 48 to 54.
Merging block 48 into block 47...
Merged blocks 47 and 48.
Merged 47 and 48 without moving.
Edge 72->74 redirected to 76
Merging block 74 into block 73...
Merged blocks 73 and 74.
Merged 73 and 74 without moving.
Merging block 77 into block 76...
Merged blocks 76 and 77.
Merged 76 and 77 without moving.
Removing jump 640.
Merging block 78 into block 76...
Merged blocks 76 and 78.
Merged 76 and 78 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2164 [0xfffffffffffff78c])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) getcapability.c:59 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) getcapability.c:59 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.5787+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:59 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2124 [0xfffffffffffff7b4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) getcapability.c:60 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 tssContext+0 S8 A64])
        (const_int 0 [0])) getcapability.c:62 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])
        (const_int 9 [0x9])) getcapability.c:63 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2156 [0xfffffffffffff794])) [0 property+0 S4 A32])
        (const_int 0 [0])) getcapability.c:64 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2152 [0xfffffffffffff798])) [0 propertyCount+0 S4 A64])
        (const_int 64 [0x40])) getcapability.c:65 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2148 [0xfffffffffffff79c])) [0 sessionHandle0+0 S4 A32])
        (const_int 1073741831 [0x40000007])) getcapability.c:68 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2144 [0xfffffffffffff7a0])) [0 sessionAttributes0+0 S4 A64])
        (const_int 0 [0])) getcapability.c:69 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2140 [0xfffffffffffff7a4])) [0 sessionHandle1+0 S4 A32])
        (const_int 1073741831 [0x40000007])) getcapability.c:70 -1
     (nil))
(insn 16 15 17 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 sessionAttributes1+0 S4 A64])
        (const_int 0 [0])) getcapability.c:71 -1
     (nil))
(insn 17 16 18 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2132 [0xfffffffffffff7ac])) [0 sessionHandle2+0 S4 A32])
        (const_int 1073741831 [0x40000007])) getcapability.c:72 -1
     (nil))
(insn 18 17 19 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2128 [0xfffffffffffff7b0])) [0 sessionAttributes2+0 S4 A64])
        (const_int 0 [0])) getcapability.c:73 -1
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 87 [ D.5778 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7fd88f2045a0 stdout>) [0 stdout+0 S8 A64])) getcapability.c:75 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) getcapability.c:75 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) getcapability.c:75 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 4 si)
        (const_int 0 [0])) getcapability.c:75 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.5778 ])) getcapability.c:75 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("setvbuf") [flags 0x41]  <function_decl 0x7fd88f2441b0 setvbuf>) [0 setvbuf S1 A8])
            (const_int 0 [0]))) getcapability.c:75 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 25 24 26 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fd88ed54cf0 *.LC0>)) getcapability.c:76 -1
     (nil))
(insn 26 25 27 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) getcapability.c:76 -1
     (nil))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (const_int 0 [0])) getcapability.c:76 -1
     (nil))
(call_insn 28 27 29 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7fd88f0b8000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) getcapability.c:76 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 29 28 30 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) getcapability.c:79 -1
     (nil))
(jump_insn 30 29 31 2 (set (pc)
        (label_ref 478)) getcapability.c:79 -1
     (nil)
 -> 478)
(barrier 31 30 484)
(code_label 484 31 32 4 34 "" [1 uses])
(note 32 484 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 4 (set (reg:SI 208)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:80 -1
     (nil))
(insn 34 33 35 4 (set (reg:DI 88 [ D.5779 ])
        (sign_extend:DI (reg:SI 208))) getcapability.c:80 -1
     (nil))
(insn 35 34 36 4 (parallel [
            (set (reg:DI 89 [ D.5779 ])
                (ashift:DI (reg:DI 88 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:80 -1
     (nil))
(insn 36 35 37 4 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:80 -1
     (nil))
(insn 37 36 38 4 (parallel [
            (set (reg/f:DI 90 [ D.5780 ])
                (plus:DI (reg:DI 89 [ D.5779 ])
                    (reg/f:DI 209)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:80 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 89 [ D.5779 ]))
        (nil)))
(insn 38 37 39 4 (set (reg/f:DI 91 [ D.5781 ])
        (mem/f:DI (reg/f:DI 90 [ D.5780 ]) [0 *_50+0 S8 A64])) getcapability.c:80 -1
     (nil))
(insn 39 38 40 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fd88ed54d80 *.LC1>)) getcapability.c:80 -1
     (nil))
(insn 40 39 41 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.5781 ])) getcapability.c:80 -1
     (nil))
(call_insn/i 41 40 42 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fd88f14c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) getcapability.c:80 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 42 41 43 4 (set (reg:SI 92 [ D.5782 ])
        (reg:SI 0 ax)) getcapability.c:80 -1
     (nil))
(insn 43 42 44 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.5782 ])
            (const_int 0 [0]))) getcapability.c:80 -1
     (nil))
(jump_insn 44 43 45 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) getcapability.c:80 -1
     (nil)
 -> 76)
(note 45 44 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:81 -1
     (nil))
(insn 47 46 48 5 (set (reg:SI 210)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:82 -1
     (nil))
(insn 48 47 49 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 210)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2164 [0xfffffffffffff78c])) [0 argc+0 S4 A32]))) getcapability.c:82 -1
     (nil))
(jump_insn 49 48 50 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) getcapability.c:82 -1
     (nil)
 -> 65)
(note 50 49 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 6 (set (reg:SI 211)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:83 -1
     (nil))
(insn 52 51 53 6 (set (reg:DI 93 [ D.5779 ])
        (sign_extend:DI (reg:SI 211))) getcapability.c:83 -1
     (nil))
(insn 53 52 54 6 (parallel [
            (set (reg:DI 94 [ D.5779 ])
                (ashift:DI (reg:DI 93 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:83 -1
     (nil))
(insn 54 53 55 6 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:83 -1
     (nil))
(insn 55 54 56 6 (parallel [
            (set (reg/f:DI 95 [ D.5780 ])
                (plus:DI (reg:DI 94 [ D.5779 ])
                    (reg/f:DI 212)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:83 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 94 [ D.5779 ]))
        (nil)))
(insn 56 55 57 6 (set (reg/f:DI 96 [ D.5781 ])
        (mem/f:DI (reg/f:DI 95 [ D.5780 ]) [0 *_56+0 S8 A64])) getcapability.c:83 -1
     (nil))
(insn 57 56 58 6 (parallel [
            (set (reg:DI 213)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2160 [0xfffffffffffff790])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:83 -1
     (nil))
(insn 58 57 59 6 (set (reg:DI 1 dx)
        (reg:DI 213)) getcapability.c:83 -1
     (nil))
(insn 59 58 60 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fd88ed54e10 *.LC2>)) getcapability.c:83 -1
     (nil))
(insn 60 59 61 6 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.5781 ])) getcapability.c:83 -1
     (nil))
(insn 61 60 62 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:83 -1
     (nil))
(call_insn 62 61 63 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fd88f155ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) getcapability.c:83 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 63 62 64 6 (set (pc)
        (label_ref:DI 475)) 654 {jump}
     (nil)
 -> 475)
(barrier 64 63 65)
(code_label 65 64 66 7 4 "" [1 uses])
(note 66 65 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fd88ed54ea0 *.LC3>)) getcapability.c:86 -1
     (nil))
(call_insn 68 67 69 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:86 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 69 68 70 7 (set (reg:SI 97 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])) getcapability.c:87 -1
     (nil))
(insn 70 69 71 7 (set (reg:SI 5 di)
        (reg:SI 97 [ D.5783 ])) getcapability.c:87 -1
     (nil))
(call_insn 71 70 74 7 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fd88f0c1000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getcapability.c:87 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(jump_insn 74 71 75 7 (set (pc)
        (label_ref 475)) -1
     (nil)
 -> 475)
(barrier 75 74 76)
(code_label 76 75 77 9 3 "" [1 uses])
(note 77 76 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 9 (set (reg:SI 214)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:91 -1
     (nil))
(insn 79 78 80 9 (set (reg:DI 98 [ D.5779 ])
        (sign_extend:DI (reg:SI 214))) getcapability.c:91 -1
     (nil))
(insn 80 79 81 9 (parallel [
            (set (reg:DI 99 [ D.5779 ])
                (ashift:DI (reg:DI 98 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:91 -1
     (nil))
(insn 81 80 82 9 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:91 -1
     (nil))
(insn 82 81 83 9 (parallel [
            (set (reg/f:DI 100 [ D.5780 ])
                (plus:DI (reg:DI 99 [ D.5779 ])
                    (reg/f:DI 215)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:91 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 99 [ D.5779 ]))
        (nil)))
(insn 83 82 84 9 (set (reg/f:DI 101 [ D.5781 ])
        (mem/f:DI (reg/f:DI 100 [ D.5780 ]) [0 *_64+0 S8 A64])) getcapability.c:91 -1
     (nil))
(insn 84 83 85 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fd88ed54f30 *.LC4>)) getcapability.c:91 -1
     (nil))
(insn 85 84 86 9 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.5781 ])) getcapability.c:91 -1
     (nil))
(call_insn/i 86 85 87 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fd88f14c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) getcapability.c:91 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 87 86 88 9 (set (reg:SI 102 [ D.5782 ])
        (reg:SI 0 ax)) getcapability.c:91 -1
     (nil))
(insn 88 87 89 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.5782 ])
            (const_int 0 [0]))) getcapability.c:91 -1
     (nil))
(jump_insn 89 88 90 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) getcapability.c:91 -1
     (nil)
 -> 121)
(note 90 89 91 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:92 -1
     (nil))
(insn 92 91 93 10 (set (reg:SI 216)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:93 -1
     (nil))
(insn 93 92 94 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 216)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2164 [0xfffffffffffff78c])) [0 argc+0 S4 A32]))) getcapability.c:93 -1
     (nil))
(jump_insn 94 93 95 10 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) getcapability.c:93 -1
     (nil)
 -> 110)
(note 95 94 96 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 11 (set (reg:SI 217)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:94 -1
     (nil))
(insn 97 96 98 11 (set (reg:DI 103 [ D.5779 ])
        (sign_extend:DI (reg:SI 217))) getcapability.c:94 -1
     (nil))
(insn 98 97 99 11 (parallel [
            (set (reg:DI 104 [ D.5779 ])
                (ashift:DI (reg:DI 103 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:94 -1
     (nil))
(insn 99 98 100 11 (set (reg/f:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:94 -1
     (nil))
(insn 100 99 101 11 (parallel [
            (set (reg/f:DI 105 [ D.5780 ])
                (plus:DI (reg:DI 104 [ D.5779 ])
                    (reg/f:DI 218)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:94 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 104 [ D.5779 ]))
        (nil)))
(insn 101 100 102 11 (set (reg/f:DI 106 [ D.5781 ])
        (mem/f:DI (reg/f:DI 105 [ D.5780 ]) [0 *_70+0 S8 A64])) getcapability.c:94 -1
     (nil))
(insn 102 101 103 11 (parallel [
            (set (reg:DI 219)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2156 [0xfffffffffffff794])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:94 -1
     (nil))
(insn 103 102 104 11 (set (reg:DI 1 dx)
        (reg:DI 219)) getcapability.c:94 -1
     (nil))
(insn 104 103 105 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fd88ed54e10 *.LC2>)) getcapability.c:94 -1
     (nil))
(insn 105 104 106 11 (set (reg:DI 5 di)
        (reg/f:DI 106 [ D.5781 ])) getcapability.c:94 -1
     (nil))
(insn 106 105 107 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:94 -1
     (nil))
(call_insn 107 106 108 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fd88f155ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) getcapability.c:94 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 108 107 109 11 (set (pc)
        (label_ref:DI 475)) 654 {jump}
     (nil)
 -> 475)
(barrier 109 108 110)
(code_label 110 109 111 12 8 "" [1 uses])
(note 111 110 112 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fd88ed545a0 *.LC5>)) getcapability.c:97 -1
     (nil))
(call_insn 113 112 114 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:97 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 114 113 115 12 (set (reg:SI 107 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])) getcapability.c:98 -1
     (nil))
(insn 115 114 116 12 (set (reg:SI 5 di)
        (reg:SI 107 [ D.5783 ])) getcapability.c:98 -1
     (nil))
(call_insn 116 115 119 12 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fd88f0c1000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getcapability.c:98 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(jump_insn 119 116 120 12 (set (pc)
        (label_ref 475)) -1
     (nil)
 -> 475)
(barrier 120 119 121)
(code_label 121 120 122 14 7 "" [1 uses])
(note 122 121 123 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 14 (set (reg:SI 220)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:102 -1
     (nil))
(insn 124 123 125 14 (set (reg:DI 108 [ D.5779 ])
        (sign_extend:DI (reg:SI 220))) getcapability.c:102 -1
     (nil))
(insn 125 124 126 14 (parallel [
            (set (reg:DI 109 [ D.5779 ])
                (ashift:DI (reg:DI 108 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:102 -1
     (nil))
(insn 126 125 127 14 (set (reg/f:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:102 -1
     (nil))
(insn 127 126 128 14 (parallel [
            (set (reg/f:DI 110 [ D.5780 ])
                (plus:DI (reg:DI 109 [ D.5779 ])
                    (reg/f:DI 221)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:102 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 109 [ D.5779 ]))
        (nil)))
(insn 128 127 129 14 (set (reg/f:DI 111 [ D.5781 ])
        (mem/f:DI (reg/f:DI 110 [ D.5780 ]) [0 *_78+0 S8 A64])) getcapability.c:102 -1
     (nil))
(insn 129 128 130 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fd88ed54630 *.LC6>)) getcapability.c:102 -1
     (nil))
(insn 130 129 131 14 (set (reg:DI 5 di)
        (reg/f:DI 111 [ D.5781 ])) getcapability.c:102 -1
     (nil))
(call_insn/i 131 130 132 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fd88f14c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) getcapability.c:102 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 132 131 133 14 (set (reg:SI 112 [ D.5782 ])
        (reg:SI 0 ax)) getcapability.c:102 -1
     (nil))
(insn 133 132 134 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.5782 ])
            (const_int 0 [0]))) getcapability.c:102 -1
     (nil))
(jump_insn 134 133 135 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 166)
            (pc))) getcapability.c:102 -1
     (nil)
 -> 166)
(note 135 134 136 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:103 -1
     (nil))
(insn 137 136 138 15 (set (reg:SI 222)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:104 -1
     (nil))
(insn 138 137 139 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 222)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2164 [0xfffffffffffff78c])) [0 argc+0 S4 A32]))) getcapability.c:104 -1
     (nil))
(jump_insn 139 138 140 15 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 155)
            (pc))) getcapability.c:104 -1
     (nil)
 -> 155)
(note 140 139 141 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 16 (set (reg:SI 223)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:105 -1
     (nil))
(insn 142 141 143 16 (set (reg:DI 113 [ D.5779 ])
        (sign_extend:DI (reg:SI 223))) getcapability.c:105 -1
     (nil))
(insn 143 142 144 16 (parallel [
            (set (reg:DI 114 [ D.5779 ])
                (ashift:DI (reg:DI 113 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:105 -1
     (nil))
(insn 144 143 145 16 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:105 -1
     (nil))
(insn 145 144 146 16 (parallel [
            (set (reg/f:DI 115 [ D.5780 ])
                (plus:DI (reg:DI 114 [ D.5779 ])
                    (reg/f:DI 224)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:105 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 114 [ D.5779 ]))
        (nil)))
(insn 146 145 147 16 (set (reg/f:DI 116 [ D.5781 ])
        (mem/f:DI (reg/f:DI 115 [ D.5780 ]) [0 *_84+0 S8 A64])) getcapability.c:105 -1
     (nil))
(insn 147 146 148 16 (parallel [
            (set (reg:DI 225)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2152 [0xfffffffffffff798])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:105 -1
     (nil))
(insn 148 147 149 16 (set (reg:DI 1 dx)
        (reg:DI 225)) getcapability.c:105 -1
     (nil))
(insn 149 148 150 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fd88ed78000 *.LC7>)) getcapability.c:105 -1
     (nil))
(insn 150 149 151 16 (set (reg:DI 5 di)
        (reg/f:DI 116 [ D.5781 ])) getcapability.c:105 -1
     (nil))
(insn 151 150 152 16 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:105 -1
     (nil))
(call_insn 152 151 153 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fd88f155ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) getcapability.c:105 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 153 152 154 16 (set (pc)
        (label_ref:DI 475)) 654 {jump}
     (nil)
 -> 475)
(barrier 154 153 155)
(code_label 155 154 156 17 11 "" [1 uses])
(note 156 155 157 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fd88ed78090 *.LC8>)) getcapability.c:108 -1
     (nil))
(call_insn 158 157 159 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:108 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 159 158 160 17 (set (reg:SI 117 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])) getcapability.c:109 -1
     (nil))
(insn 160 159 161 17 (set (reg:SI 5 di)
        (reg:SI 117 [ D.5783 ])) getcapability.c:109 -1
     (nil))
(call_insn 161 160 164 17 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fd88f0c1000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getcapability.c:109 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(jump_insn 164 161 165 17 (set (pc)
        (label_ref 475)) -1
     (nil)
 -> 475)
(barrier 165 164 166)
(code_label 166 165 167 19 10 "" [1 uses])
(note 167 166 168 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 19 (set (reg:SI 226)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:113 -1
     (nil))
(insn 169 168 170 19 (set (reg:DI 118 [ D.5779 ])
        (sign_extend:DI (reg:SI 226))) getcapability.c:113 -1
     (nil))
(insn 170 169 171 19 (parallel [
            (set (reg:DI 119 [ D.5779 ])
                (ashift:DI (reg:DI 118 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:113 -1
     (nil))
(insn 171 170 172 19 (set (reg/f:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:113 -1
     (nil))
(insn 172 171 173 19 (parallel [
            (set (reg/f:DI 120 [ D.5780 ])
                (plus:DI (reg:DI 119 [ D.5779 ])
                    (reg/f:DI 227)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:113 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 119 [ D.5779 ]))
        (nil)))
(insn 173 172 174 19 (set (reg/f:DI 121 [ D.5781 ])
        (mem/f:DI (reg/f:DI 120 [ D.5780 ]) [0 *_92+0 S8 A64])) getcapability.c:113 -1
     (nil))
(insn 174 173 175 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fd88ed78120 *.LC9>)) getcapability.c:113 -1
     (nil))
(insn 175 174 176 19 (set (reg:DI 5 di)
        (reg/f:DI 121 [ D.5781 ])) getcapability.c:113 -1
     (nil))
(call_insn/i 176 175 177 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fd88f14c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) getcapability.c:113 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 177 176 178 19 (set (reg:SI 122 [ D.5782 ])
        (reg:SI 0 ax)) getcapability.c:113 -1
     (nil))
(insn 178 177 179 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.5782 ])
            (const_int 0 [0]))) getcapability.c:113 -1
     (nil))
(jump_insn 179 178 180 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 250)
            (pc))) getcapability.c:113 -1
     (nil)
 -> 250)
(note 180 179 181 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:114 -1
     (nil))
(insn 182 181 183 20 (set (reg:SI 228)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:115 -1
     (nil))
(insn 183 182 184 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 228)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2164 [0xfffffffffffff78c])) [0 argc+0 S4 A32]))) getcapability.c:115 -1
     (nil))
(jump_insn 184 183 185 20 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 200)
            (pc))) getcapability.c:115 -1
     (nil)
 -> 200)
(note 185 184 186 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 21 (set (reg:SI 229)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:116 -1
     (nil))
(insn 187 186 188 21 (set (reg:DI 123 [ D.5779 ])
        (sign_extend:DI (reg:SI 229))) getcapability.c:116 -1
     (nil))
(insn 188 187 189 21 (parallel [
            (set (reg:DI 124 [ D.5779 ])
                (ashift:DI (reg:DI 123 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:116 -1
     (nil))
(insn 189 188 190 21 (set (reg/f:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:116 -1
     (nil))
(insn 190 189 191 21 (parallel [
            (set (reg/f:DI 125 [ D.5780 ])
                (plus:DI (reg:DI 124 [ D.5779 ])
                    (reg/f:DI 230)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:116 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 124 [ D.5779 ]))
        (nil)))
(insn 191 190 192 21 (set (reg/f:DI 126 [ D.5781 ])
        (mem/f:DI (reg/f:DI 125 [ D.5780 ]) [0 *_98+0 S8 A64])) getcapability.c:116 -1
     (nil))
(insn 192 191 193 21 (parallel [
            (set (reg:DI 231)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2148 [0xfffffffffffff79c])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:116 -1
     (nil))
(insn 193 192 194 21 (set (reg:DI 1 dx)
        (reg:DI 231)) getcapability.c:116 -1
     (nil))
(insn 194 193 195 21 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fd88ed54e10 *.LC2>)) getcapability.c:116 -1
     (nil))
(insn 195 194 196 21 (set (reg:DI 5 di)
        (reg/f:DI 126 [ D.5781 ])) getcapability.c:116 -1
     (nil))
(insn 196 195 197 21 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:116 -1
     (nil))
(call_insn 197 196 198 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fd88f155ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) getcapability.c:116 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 198 197 199 21 (set (pc)
        (label_ref 207)) -1
     (nil)
 -> 207)
(barrier 199 198 200)
(code_label 200 199 201 22 14 "" [1 uses])
(note 201 200 202 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fd88ed781b0 *.LC10>)) getcapability.c:119 -1
     (nil))
(call_insn 203 202 204 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:119 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 204 203 205 22 (set (reg:SI 127 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])) getcapability.c:120 -1
     (nil))
(insn 205 204 206 22 (set (reg:SI 5 di)
        (reg:SI 127 [ D.5783 ])) getcapability.c:120 -1
     (nil))
(call_insn 206 205 207 22 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fd88f0c1000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getcapability.c:120 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(code_label 207 206 208 23 15 "" [1 uses])
(note 208 207 209 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 209 208 210 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:122 -1
     (nil))
(insn 210 209 211 23 (set (reg:SI 232)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:123 -1
     (nil))
(insn 211 210 212 23 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 232)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2164 [0xfffffffffffff78c])) [0 argc+0 S4 A32]))) getcapability.c:123 -1
     (nil))
(jump_insn 212 211 213 23 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 239)
            (pc))) getcapability.c:123 -1
     (nil)
 -> 239)
(note 213 212 214 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 24 (set (reg:SI 233)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:124 -1
     (nil))
(insn 215 214 216 24 (set (reg:DI 128 [ D.5779 ])
        (sign_extend:DI (reg:SI 233))) getcapability.c:124 -1
     (nil))
(insn 216 215 217 24 (parallel [
            (set (reg:DI 129 [ D.5779 ])
                (ashift:DI (reg:DI 128 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:124 -1
     (nil))
(insn 217 216 218 24 (set (reg/f:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:124 -1
     (nil))
(insn 218 217 219 24 (parallel [
            (set (reg/f:DI 130 [ D.5780 ])
                (plus:DI (reg:DI 129 [ D.5779 ])
                    (reg/f:DI 234)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:124 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 129 [ D.5779 ]))
        (nil)))
(insn 219 218 220 24 (set (reg/f:DI 131 [ D.5781 ])
        (mem/f:DI (reg/f:DI 130 [ D.5780 ]) [0 *_107+0 S8 A64])) getcapability.c:124 -1
     (nil))
(insn 220 219 221 24 (parallel [
            (set (reg:DI 235)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2144 [0xfffffffffffff7a0])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:124 -1
     (nil))
(insn 221 220 222 24 (set (reg:DI 1 dx)
        (reg:DI 235)) getcapability.c:124 -1
     (nil))
(insn 222 221 223 24 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fd88ed54e10 *.LC2>)) getcapability.c:124 -1
     (nil))
(insn 223 222 224 24 (set (reg:DI 5 di)
        (reg/f:DI 131 [ D.5781 ])) getcapability.c:124 -1
     (nil))
(insn 224 223 225 24 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:124 -1
     (nil))
(call_insn 225 224 226 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fd88f155ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) getcapability.c:124 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 226 225 227 24 (set (reg:SI 132 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2144 [0xfffffffffffff7a0])) [0 sessionAttributes0+0 S4 A64])) getcapability.c:125 -1
     (nil))
(insn 227 226 228 24 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 132 [ D.5783 ])
            (const_int 255 [0xff]))) getcapability.c:125 -1
     (nil))
(jump_insn 228 227 229 24 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 475)
            (pc))) getcapability.c:125 612 {*jcc_1}
     (nil)
 -> 475)
(note 229 228 230 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 231 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fd88ed78240 *.LC11>)) getcapability.c:126 -1
     (nil))
(call_insn 231 230 232 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:126 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 232 231 233 25 (set (reg:SI 133 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])) getcapability.c:127 -1
     (nil))
(insn 233 232 234 25 (set (reg:SI 5 di)
        (reg:SI 133 [ D.5783 ])) getcapability.c:127 -1
     (nil))
(call_insn 234 233 237 25 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fd88f0c1000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getcapability.c:127 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(jump_insn 237 234 238 25 (set (pc)
        (label_ref:DI 475)) 654 {jump}
     (nil)
 -> 475)
(barrier 238 237 239)
(code_label 239 238 240 27 16 "" [1 uses])
(note 240 239 241 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fd88ed781b0 *.LC10>)) getcapability.c:131 -1
     (nil))
(call_insn 242 241 243 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:131 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 243 242 244 27 (set (reg:SI 134 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])) getcapability.c:132 -1
     (nil))
(insn 244 243 245 27 (set (reg:SI 5 di)
        (reg:SI 134 [ D.5783 ])) getcapability.c:132 -1
     (nil))
(call_insn 245 244 248 27 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fd88f0c1000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getcapability.c:132 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(jump_insn 248 245 249 27 (set (pc)
        (label_ref 475)) -1
     (nil)
 -> 475)
(barrier 249 248 250)
(code_label 250 249 251 29 13 "" [1 uses])
(note 251 250 252 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 252 251 253 29 (set (reg:SI 236)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:135 -1
     (nil))
(insn 253 252 254 29 (set (reg:DI 135 [ D.5779 ])
        (sign_extend:DI (reg:SI 236))) getcapability.c:135 -1
     (nil))
(insn 254 253 255 29 (parallel [
            (set (reg:DI 136 [ D.5779 ])
                (ashift:DI (reg:DI 135 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:135 -1
     (nil))
(insn 255 254 256 29 (set (reg/f:DI 237)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:135 -1
     (nil))
(insn 256 255 257 29 (parallel [
            (set (reg/f:DI 137 [ D.5780 ])
                (plus:DI (reg:DI 136 [ D.5779 ])
                    (reg/f:DI 237)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:135 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 136 [ D.5779 ]))
        (nil)))
(insn 257 256 258 29 (set (reg/f:DI 138 [ D.5781 ])
        (mem/f:DI (reg/f:DI 137 [ D.5780 ]) [0 *_119+0 S8 A64])) getcapability.c:135 -1
     (nil))
(insn 258 257 259 29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fd88ed782d0 *.LC12>)) getcapability.c:135 -1
     (nil))
(insn 259 258 260 29 (set (reg:DI 5 di)
        (reg/f:DI 138 [ D.5781 ])) getcapability.c:135 -1
     (nil))
(call_insn/i 260 259 261 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fd88f14c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) getcapability.c:135 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 261 260 262 29 (set (reg:SI 139 [ D.5782 ])
        (reg:SI 0 ax)) getcapability.c:135 -1
     (nil))
(insn 262 261 263 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 139 [ D.5782 ])
            (const_int 0 [0]))) getcapability.c:135 -1
     (nil))
(jump_insn 263 262 264 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 334)
            (pc))) getcapability.c:135 -1
     (nil)
 -> 334)
(note 264 263 265 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 30 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:136 -1
     (nil))
(insn 266 265 267 30 (set (reg:SI 238)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:137 -1
     (nil))
(insn 267 266 268 30 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 238)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2164 [0xfffffffffffff78c])) [0 argc+0 S4 A32]))) getcapability.c:137 -1
     (nil))
(jump_insn 268 267 269 30 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) getcapability.c:137 -1
     (nil)
 -> 284)
(note 269 268 270 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 270 269 271 31 (set (reg:SI 239)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:138 -1
     (nil))
(insn 271 270 272 31 (set (reg:DI 140 [ D.5779 ])
        (sign_extend:DI (reg:SI 239))) getcapability.c:138 -1
     (nil))
(insn 272 271 273 31 (parallel [
            (set (reg:DI 141 [ D.5779 ])
                (ashift:DI (reg:DI 140 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:138 -1
     (nil))
(insn 273 272 274 31 (set (reg/f:DI 240)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:138 -1
     (nil))
(insn 274 273 275 31 (parallel [
            (set (reg/f:DI 142 [ D.5780 ])
                (plus:DI (reg:DI 141 [ D.5779 ])
                    (reg/f:DI 240)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:138 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 141 [ D.5779 ]))
        (nil)))
(insn 275 274 276 31 (set (reg/f:DI 143 [ D.5781 ])
        (mem/f:DI (reg/f:DI 142 [ D.5780 ]) [0 *_125+0 S8 A64])) getcapability.c:138 -1
     (nil))
(insn 276 275 277 31 (parallel [
            (set (reg:DI 241)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2140 [0xfffffffffffff7a4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:138 -1
     (nil))
(insn 277 276 278 31 (set (reg:DI 1 dx)
        (reg:DI 241)) getcapability.c:138 -1
     (nil))
(insn 278 277 279 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fd88ed54e10 *.LC2>)) getcapability.c:138 -1
     (nil))
(insn 279 278 280 31 (set (reg:DI 5 di)
        (reg/f:DI 143 [ D.5781 ])) getcapability.c:138 -1
     (nil))
(insn 280 279 281 31 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:138 -1
     (nil))
(call_insn 281 280 282 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fd88f155ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) getcapability.c:138 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 282 281 283 31 (set (pc)
        (label_ref 291)) -1
     (nil)
 -> 291)
(barrier 283 282 284)
(code_label 284 283 285 32 20 "" [1 uses])
(note 285 284 286 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 32 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fd88ed78360 *.LC13>)) getcapability.c:141 -1
     (nil))
(call_insn 287 286 288 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:141 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 288 287 289 32 (set (reg:SI 144 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])) getcapability.c:142 -1
     (nil))
(insn 289 288 290 32 (set (reg:SI 5 di)
        (reg:SI 144 [ D.5783 ])) getcapability.c:142 -1
     (nil))
(call_insn 290 289 291 32 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fd88f0c1000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getcapability.c:142 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(code_label 291 290 292 33 21 "" [1 uses])
(note 292 291 293 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 33 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:144 -1
     (nil))
(insn 294 293 295 33 (set (reg:SI 242)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:145 -1
     (nil))
(insn 295 294 296 33 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 242)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2164 [0xfffffffffffff78c])) [0 argc+0 S4 A32]))) getcapability.c:145 -1
     (nil))
(jump_insn 296 295 297 33 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 323)
            (pc))) getcapability.c:145 -1
     (nil)
 -> 323)
(note 297 296 298 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 298 297 299 34 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:146 -1
     (nil))
(insn 299 298 300 34 (set (reg:DI 145 [ D.5779 ])
        (sign_extend:DI (reg:SI 243))) getcapability.c:146 -1
     (nil))
(insn 300 299 301 34 (parallel [
            (set (reg:DI 146 [ D.5779 ])
                (ashift:DI (reg:DI 145 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:146 -1
     (nil))
(insn 301 300 302 34 (set (reg/f:DI 244)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:146 -1
     (nil))
(insn 302 301 303 34 (parallel [
            (set (reg/f:DI 147 [ D.5780 ])
                (plus:DI (reg:DI 146 [ D.5779 ])
                    (reg/f:DI 244)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:146 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 146 [ D.5779 ]))
        (nil)))
(insn 303 302 304 34 (set (reg/f:DI 148 [ D.5781 ])
        (mem/f:DI (reg/f:DI 147 [ D.5780 ]) [0 *_134+0 S8 A64])) getcapability.c:146 -1
     (nil))
(insn 304 303 305 34 (parallel [
            (set (reg:DI 245)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2136 [0xfffffffffffff7a8])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:146 -1
     (nil))
(insn 305 304 306 34 (set (reg:DI 1 dx)
        (reg:DI 245)) getcapability.c:146 -1
     (nil))
(insn 306 305 307 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fd88ed54e10 *.LC2>)) getcapability.c:146 -1
     (nil))
(insn 307 306 308 34 (set (reg:DI 5 di)
        (reg/f:DI 148 [ D.5781 ])) getcapability.c:146 -1
     (nil))
(insn 308 307 309 34 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:146 -1
     (nil))
(call_insn 309 308 310 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fd88f155ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) getcapability.c:146 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 310 309 311 34 (set (reg:SI 149 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 sessionAttributes1+0 S4 A64])) getcapability.c:147 -1
     (nil))
(insn 311 310 312 34 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 149 [ D.5783 ])
            (const_int 255 [0xff]))) getcapability.c:147 -1
     (nil))
(jump_insn 312 311 313 34 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 475)
            (pc))) getcapability.c:147 612 {*jcc_1}
     (nil)
 -> 475)
(note 313 312 314 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 314 313 315 35 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fd88ed783f0 *.LC14>)) getcapability.c:148 -1
     (nil))
(call_insn 315 314 316 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:148 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 316 315 317 35 (set (reg:SI 150 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])) getcapability.c:149 -1
     (nil))
(insn 317 316 318 35 (set (reg:SI 5 di)
        (reg:SI 150 [ D.5783 ])) getcapability.c:149 -1
     (nil))
(call_insn 318 317 321 35 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fd88f0c1000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getcapability.c:149 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(jump_insn 321 318 322 35 (set (pc)
        (label_ref:DI 475)) 654 {jump}
     (nil)
 -> 475)
(barrier 322 321 323)
(code_label 323 322 324 37 22 "" [1 uses])
(note 324 323 325 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 325 324 326 37 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fd88ed78360 *.LC13>)) getcapability.c:153 -1
     (nil))
(call_insn 326 325 327 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:153 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 327 326 328 37 (set (reg:SI 151 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])) getcapability.c:154 -1
     (nil))
(insn 328 327 329 37 (set (reg:SI 5 di)
        (reg:SI 151 [ D.5783 ])) getcapability.c:154 -1
     (nil))
(call_insn 329 328 332 37 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fd88f0c1000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getcapability.c:154 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(jump_insn 332 329 333 37 (set (pc)
        (label_ref 475)) -1
     (nil)
 -> 475)
(barrier 333 332 334)
(code_label 334 333 335 39 19 "" [1 uses])
(note 335 334 336 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 336 335 337 39 (set (reg:SI 246)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:157 -1
     (nil))
(insn 337 336 338 39 (set (reg:DI 152 [ D.5779 ])
        (sign_extend:DI (reg:SI 246))) getcapability.c:157 -1
     (nil))
(insn 338 337 339 39 (parallel [
            (set (reg:DI 153 [ D.5779 ])
                (ashift:DI (reg:DI 152 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:157 -1
     (nil))
(insn 339 338 340 39 (set (reg/f:DI 247)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:157 -1
     (nil))
(insn 340 339 341 39 (parallel [
            (set (reg/f:DI 154 [ D.5780 ])
                (plus:DI (reg:DI 153 [ D.5779 ])
                    (reg/f:DI 247)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:157 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 153 [ D.5779 ]))
        (nil)))
(insn 341 340 342 39 (set (reg/f:DI 155 [ D.5781 ])
        (mem/f:DI (reg/f:DI 154 [ D.5780 ]) [0 *_146+0 S8 A64])) getcapability.c:157 -1
     (nil))
(insn 342 341 343 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fd88ed78480 *.LC15>)) getcapability.c:157 -1
     (nil))
(insn 343 342 344 39 (set (reg:DI 5 di)
        (reg/f:DI 155 [ D.5781 ])) getcapability.c:157 -1
     (nil))
(call_insn/i 344 343 345 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fd88f14c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) getcapability.c:157 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 345 344 346 39 (set (reg:SI 156 [ D.5782 ])
        (reg:SI 0 ax)) getcapability.c:157 -1
     (nil))
(insn 346 345 347 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 156 [ D.5782 ])
            (const_int 0 [0]))) getcapability.c:157 -1
     (nil))
(jump_insn 347 346 348 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 418)
            (pc))) getcapability.c:157 -1
     (nil)
 -> 418)
(note 348 347 349 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 350 40 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:158 -1
     (nil))
(insn 350 349 351 40 (set (reg:SI 248)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:159 -1
     (nil))
(insn 351 350 352 40 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 248)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2164 [0xfffffffffffff78c])) [0 argc+0 S4 A32]))) getcapability.c:159 -1
     (nil))
(jump_insn 352 351 353 40 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 368)
            (pc))) getcapability.c:159 -1
     (nil)
 -> 368)
(note 353 352 354 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 354 353 355 41 (set (reg:SI 249)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:160 -1
     (nil))
(insn 355 354 356 41 (set (reg:DI 157 [ D.5779 ])
        (sign_extend:DI (reg:SI 249))) getcapability.c:160 -1
     (nil))
(insn 356 355 357 41 (parallel [
            (set (reg:DI 158 [ D.5779 ])
                (ashift:DI (reg:DI 157 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:160 -1
     (nil))
(insn 357 356 358 41 (set (reg/f:DI 250)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:160 -1
     (nil))
(insn 358 357 359 41 (parallel [
            (set (reg/f:DI 159 [ D.5780 ])
                (plus:DI (reg:DI 158 [ D.5779 ])
                    (reg/f:DI 250)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:160 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 158 [ D.5779 ]))
        (nil)))
(insn 359 358 360 41 (set (reg/f:DI 160 [ D.5781 ])
        (mem/f:DI (reg/f:DI 159 [ D.5780 ]) [0 *_152+0 S8 A64])) getcapability.c:160 -1
     (nil))
(insn 360 359 361 41 (parallel [
            (set (reg:DI 251)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2132 [0xfffffffffffff7ac])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:160 -1
     (nil))
(insn 361 360 362 41 (set (reg:DI 1 dx)
        (reg:DI 251)) getcapability.c:160 -1
     (nil))
(insn 362 361 363 41 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fd88ed54e10 *.LC2>)) getcapability.c:160 -1
     (nil))
(insn 363 362 364 41 (set (reg:DI 5 di)
        (reg/f:DI 160 [ D.5781 ])) getcapability.c:160 -1
     (nil))
(insn 364 363 365 41 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:160 -1
     (nil))
(call_insn 365 364 366 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fd88f155ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) getcapability.c:160 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 366 365 367 41 (set (pc)
        (label_ref 375)) -1
     (nil)
 -> 375)
(barrier 367 366 368)
(code_label 368 367 369 42 26 "" [1 uses])
(note 369 368 370 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 370 369 371 42 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fd88ed78510 *.LC16>)) getcapability.c:163 -1
     (nil))
(call_insn 371 370 372 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:163 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 372 371 373 42 (set (reg:SI 161 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])) getcapability.c:164 -1
     (nil))
(insn 373 372 374 42 (set (reg:SI 5 di)
        (reg:SI 161 [ D.5783 ])) getcapability.c:164 -1
     (nil))
(call_insn 374 373 375 42 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fd88f0c1000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getcapability.c:164 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(code_label 375 374 376 43 27 "" [1 uses])
(note 376 375 377 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 377 376 378 43 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:166 -1
     (nil))
(insn 378 377 379 43 (set (reg:SI 252)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:167 -1
     (nil))
(insn 379 378 380 43 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 252)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2164 [0xfffffffffffff78c])) [0 argc+0 S4 A32]))) getcapability.c:167 -1
     (nil))
(jump_insn 380 379 381 43 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) getcapability.c:167 -1
     (nil)
 -> 407)
(note 381 380 382 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 382 381 383 44 (set (reg:SI 253)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:168 -1
     (nil))
(insn 383 382 384 44 (set (reg:DI 162 [ D.5779 ])
        (sign_extend:DI (reg:SI 253))) getcapability.c:168 -1
     (nil))
(insn 384 383 385 44 (parallel [
            (set (reg:DI 163 [ D.5779 ])
                (ashift:DI (reg:DI 162 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:168 -1
     (nil))
(insn 385 384 386 44 (set (reg/f:DI 254)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:168 -1
     (nil))
(insn 386 385 387 44 (parallel [
            (set (reg/f:DI 164 [ D.5780 ])
                (plus:DI (reg:DI 163 [ D.5779 ])
                    (reg/f:DI 254)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:168 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 163 [ D.5779 ]))
        (nil)))
(insn 387 386 388 44 (set (reg/f:DI 165 [ D.5781 ])
        (mem/f:DI (reg/f:DI 164 [ D.5780 ]) [0 *_161+0 S8 A64])) getcapability.c:168 -1
     (nil))
(insn 388 387 389 44 (parallel [
            (set (reg:DI 255)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2128 [0xfffffffffffff7b0])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:168 -1
     (nil))
(insn 389 388 390 44 (set (reg:DI 1 dx)
        (reg:DI 255)) getcapability.c:168 -1
     (nil))
(insn 390 389 391 44 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fd88ed54e10 *.LC2>)) getcapability.c:168 -1
     (nil))
(insn 391 390 392 44 (set (reg:DI 5 di)
        (reg/f:DI 165 [ D.5781 ])) getcapability.c:168 -1
     (nil))
(insn 392 391 393 44 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:168 -1
     (nil))
(call_insn 393 392 394 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fd88f155ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) getcapability.c:168 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 394 393 395 44 (set (reg:SI 166 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2128 [0xfffffffffffff7b0])) [0 sessionAttributes2+0 S4 A64])) getcapability.c:169 -1
     (nil))
(insn 395 394 396 44 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 166 [ D.5783 ])
            (const_int 255 [0xff]))) getcapability.c:169 -1
     (nil))
(jump_insn 396 395 397 44 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 475)
            (pc))) getcapability.c:169 612 {*jcc_1}
     (nil)
 -> 475)
(note 397 396 398 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 398 397 399 45 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fd88ed785a0 *.LC17>)) getcapability.c:170 -1
     (nil))
(call_insn 399 398 400 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:170 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 400 399 401 45 (set (reg:SI 167 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])) getcapability.c:171 -1
     (nil))
(insn 401 400 402 45 (set (reg:SI 5 di)
        (reg:SI 167 [ D.5783 ])) getcapability.c:171 -1
     (nil))
(call_insn 402 401 405 45 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fd88f0c1000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getcapability.c:171 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(jump_insn 405 402 406 45 (set (pc)
        (label_ref:DI 475)) 654 {jump}
     (nil)
 -> 475)
(barrier 406 405 407)
(code_label 407 406 408 47 28 "" [1 uses])
(note 408 407 409 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 47 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fd88ed78510 *.LC16>)) getcapability.c:175 -1
     (nil))
(call_insn 410 409 411 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:175 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 411 410 412 47 (set (reg:SI 168 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])) getcapability.c:176 -1
     (nil))
(insn 412 411 413 47 (set (reg:SI 5 di)
        (reg:SI 168 [ D.5783 ])) getcapability.c:176 -1
     (nil))
(call_insn 413 412 416 47 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fd88f0c1000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getcapability.c:176 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(jump_insn 416 413 417 47 (set (pc)
        (label_ref 475)) -1
     (nil)
 -> 475)
(barrier 417 416 418)
(code_label 418 417 419 49 25 "" [1 uses])
(note 419 418 420 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 420 419 421 49 (set (reg:SI 256)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:179 -1
     (nil))
(insn 421 420 422 49 (set (reg:DI 169 [ D.5779 ])
        (sign_extend:DI (reg:SI 256))) getcapability.c:179 -1
     (nil))
(insn 422 421 423 49 (parallel [
            (set (reg:DI 170 [ D.5779 ])
                (ashift:DI (reg:DI 169 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:179 -1
     (nil))
(insn 423 422 424 49 (set (reg/f:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:179 -1
     (nil))
(insn 424 423 425 49 (parallel [
            (set (reg/f:DI 171 [ D.5780 ])
                (plus:DI (reg:DI 170 [ D.5779 ])
                    (reg/f:DI 257)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:179 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 170 [ D.5779 ]))
        (nil)))
(insn 425 424 426 49 (set (reg/f:DI 172 [ D.5781 ])
        (mem/f:DI (reg/f:DI 171 [ D.5780 ]) [0 *_173+0 S8 A64])) getcapability.c:179 -1
     (nil))
(insn 426 425 427 49 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fd88ed78630 *.LC18>)) getcapability.c:179 -1
     (nil))
(insn 427 426 428 49 (set (reg:DI 5 di)
        (reg/f:DI 172 [ D.5781 ])) getcapability.c:179 -1
     (nil))
(call_insn/i 428 427 429 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fd88f14c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) getcapability.c:179 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 429 428 430 49 (set (reg:SI 173 [ D.5782 ])
        (reg:SI 0 ax)) getcapability.c:179 -1
     (nil))
(insn 430 429 431 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 173 [ D.5782 ])
            (const_int 0 [0]))) getcapability.c:179 -1
     (nil))
(jump_insn 431 430 432 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 438)
            (pc))) getcapability.c:179 -1
     (nil)
 -> 438)
(note 432 431 433 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 433 432 434 50 (set (reg:SI 174 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])) getcapability.c:180 -1
     (nil))
(insn 434 433 435 50 (set (reg:SI 5 di)
        (reg:SI 174 [ D.5783 ])) getcapability.c:180 -1
     (nil))
(call_insn 435 434 436 50 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fd88f0c1000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getcapability.c:180 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(jump_insn 436 435 437 50 (set (pc)
        (label_ref 475)) -1
     (nil)
 -> 475)
(barrier 437 436 438)
(code_label 438 437 439 51 31 "" [1 uses])
(note 439 438 440 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 440 439 441 51 (set (reg:SI 258)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:182 -1
     (nil))
(insn 441 440 442 51 (set (reg:DI 175 [ D.5779 ])
        (sign_extend:DI (reg:SI 258))) getcapability.c:182 -1
     (nil))
(insn 442 441 443 51 (parallel [
            (set (reg:DI 176 [ D.5779 ])
                (ashift:DI (reg:DI 175 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:182 -1
     (nil))
(insn 443 442 444 51 (set (reg/f:DI 259)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:182 -1
     (nil))
(insn 444 443 445 51 (parallel [
            (set (reg/f:DI 177 [ D.5780 ])
                (plus:DI (reg:DI 176 [ D.5779 ])
                    (reg/f:DI 259)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:182 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 176 [ D.5779 ]))
        (nil)))
(insn 445 444 446 51 (set (reg/f:DI 178 [ D.5781 ])
        (mem/f:DI (reg/f:DI 177 [ D.5780 ]) [0 *_180+0 S8 A64])) getcapability.c:182 -1
     (nil))
(insn 446 445 447 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fd88ed786c0 *.LC19>)) getcapability.c:182 -1
     (nil))
(insn 447 446 448 51 (set (reg:DI 5 di)
        (reg/f:DI 178 [ D.5781 ])) getcapability.c:182 -1
     (nil))
(call_insn/i 448 447 449 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fd88f14c0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) getcapability.c:182 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 449 448 450 51 (set (reg:SI 179 [ D.5782 ])
        (reg:SI 0 ax)) getcapability.c:182 -1
     (nil))
(insn 450 449 451 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 179 [ D.5782 ])
            (const_int 0 [0]))) getcapability.c:182 -1
     (nil))
(jump_insn 451 450 452 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 460)
            (pc))) getcapability.c:182 -1
     (nil)
 -> 460)
(note 452 451 453 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 454 52 (set (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fd88ef14090 verbose>) [0 verbose+0 S4 A32])
        (const_int 1 [0x1])) getcapability.c:183 -1
     (nil))
(insn 454 453 455 52 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fd88ed78750 *.LC20>)) getcapability.c:184 -1
     (nil))
(insn 455 454 456 52 (set (reg:SI 4 si)
        (const_int 1 [0x1])) getcapability.c:184 -1
     (nil))
(insn 456 455 457 52 (set (reg:DI 5 di)
        (const_int 0 [0])) getcapability.c:184 -1
     (nil))
(call_insn 457 456 458 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7fd88f0b8000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) getcapability.c:184 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 458 457 459 52 (set (pc)
        (label_ref 475)) -1
     (nil)
 -> 475)
(barrier 459 458 460)
(code_label 460 459 461 53 32 "" [1 uses])
(note 461 460 462 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 462 461 463 53 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:187 -1
     (nil))
(insn 463 462 464 53 (set (reg:DI 180 [ D.5779 ])
        (sign_extend:DI (reg:SI 260))) getcapability.c:187 -1
     (nil))
(insn 464 463 465 53 (parallel [
            (set (reg:DI 181 [ D.5779 ])
                (ashift:DI (reg:DI 180 [ D.5779 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:187 -1
     (nil))
(insn 465 464 466 53 (set (reg/f:DI 261)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])) getcapability.c:187 -1
     (nil))
(insn 466 465 467 53 (parallel [
            (set (reg/f:DI 182 [ D.5780 ])
                (plus:DI (reg:DI 181 [ D.5779 ])
                    (reg/f:DI 261)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:187 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2176 [0xfffffffffffff780])) [0 argv+0 S8 A64])
            (reg:DI 181 [ D.5779 ]))
        (nil)))
(insn 467 466 468 53 (set (reg/f:DI 183 [ D.5781 ])
        (mem/f:DI (reg/f:DI 182 [ D.5780 ]) [0 *_187+0 S8 A64])) getcapability.c:187 -1
     (nil))
(insn 468 467 469 53 (set (reg:DI 4 si)
        (reg/f:DI 183 [ D.5781 ])) getcapability.c:187 -1
     (nil))
(insn 469 468 470 53 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fd88ed787e0 *.LC21>)) getcapability.c:187 -1
     (nil))
(insn 470 469 471 53 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:187 -1
     (nil))
(call_insn 471 470 472 53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:187 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 472 471 473 53 (set (reg:SI 184 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])) getcapability.c:188 -1
     (nil))
(insn 473 472 474 53 (set (reg:SI 5 di)
        (reg:SI 184 [ D.5783 ])) getcapability.c:188 -1
     (nil))
(call_insn 474 473 475 53 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fd88f0c1000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getcapability.c:188 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(code_label 475 474 476 54 6 "" [17 uses])
(note 476 475 477 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 477 476 478 54 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:79 -1
     (nil))
(code_label 478 477 479 55 2 "" [1 uses])
(note 479 478 480 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 480 479 481 55 (set (reg:SI 262)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 i+0 S4 A32])) getcapability.c:79 -1
     (nil))
(insn 481 480 482 55 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 262)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2164 [0xfffffffffffff78c])) [0 argc+0 S4 A32]))) getcapability.c:79 -1
     (nil))
(jump_insn 482 481 483 55 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 487)
            (pc))) getcapability.c:79 -1
     (nil)
 -> 487)
(note 483 482 485 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 485 483 486 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2124 [0xfffffffffffff7b4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getcapability.c:79 -1
     (nil))
(jump_insn 486 485 487 56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 484)
            (pc))) getcapability.c:79 -1
     (nil)
 -> 484)
(code_label 487 486 488 57 33 "" [1 uses])
(note 488 487 489 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 489 488 490 57 (set (reg:SI 185 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])) getcapability.c:191 -1
     (nil))
(insn 490 489 491 57 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 185 [ D.5783 ])
            (const_int 8 [0x8]))) getcapability.c:191 -1
     (nil))
(jump_insn 491 490 492 57 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 498)
            (pc))) getcapability.c:191 -1
     (nil)
 -> 498)
(note 492 491 493 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 493 492 494 58 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fd88ed78870 *.LC22>)) getcapability.c:192 -1
     (nil))
(call_insn 494 493 495 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:192 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 495 494 496 58 (set (reg:SI 186 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])) getcapability.c:193 -1
     (nil))
(insn 496 495 497 58 (set (reg:SI 5 di)
        (reg:SI 186 [ D.5783 ])) getcapability.c:193 -1
     (nil))
(call_insn 497 496 498 58 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fd88f0c1000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getcapability.c:193 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(code_label 498 497 499 59 35 "" [1 uses])
(note 499 498 500 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 501 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2124 [0xfffffffffffff7b4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getcapability.c:195 -1
     (nil))
(jump_insn 501 500 502 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 509)
            (pc))) getcapability.c:195 -1
     (nil)
 -> 509)
(note 502 501 503 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 503 502 504 60 (set (reg:SI 187 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 capability+0 S4 A64])) getcapability.c:196 -1
     (nil))
(insn 504 503 505 60 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2080 [0xfffffffffffff7e0])) [0 in.capability+0 S4 A64])
        (reg:SI 187 [ D.5783 ])) getcapability.c:196 -1
     (nil))
(insn 505 504 506 60 (set (reg:SI 188 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2156 [0xfffffffffffff794])) [0 property+0 S4 A32])) getcapability.c:197 -1
     (nil))
(insn 506 505 507 60 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2076 [0xfffffffffffff7e4])) [0 in.property+0 S4 A32])
        (reg:SI 188 [ D.5783 ])) getcapability.c:197 -1
     (nil))
(insn 507 506 508 60 (set (reg:SI 189 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2152 [0xfffffffffffff798])) [0 propertyCount+0 S4 A64])) getcapability.c:198 -1
     (nil))
(insn 508 507 509 60 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 in.propertyCount+0 S4 A64])
        (reg:SI 189 [ D.5783 ])) getcapability.c:198 -1
     (nil))
(code_label 509 508 510 61 36 "" [1 uses])
(note 510 509 511 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 511 510 512 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2124 [0xfffffffffffff7b4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getcapability.c:201 -1
     (nil))
(jump_insn 512 511 513 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 519)
            (pc))) getcapability.c:201 -1
     (nil)
 -> 519)
(note 513 512 514 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 514 513 515 62 (parallel [
            (set (reg:DI 263)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2112 [0xfffffffffffff7c0])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:202 -1
     (nil))
(insn 515 514 516 62 (set (reg:DI 5 di)
        (reg:DI 263)) getcapability.c:202 -1
     (nil))
(call_insn 516 515 517 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Create") [flags 0x41]  <function_decl 0x7fd88f0b0ca8 TSS_Create>) [0 TSS_Create S1 A8])
            (const_int 0 [0]))) getcapability.c:202 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 517 516 518 62 (set (reg:SI 264)
        (reg:SI 0 ax)) getcapability.c:202 -1
     (nil))
(insn 518 517 519 62 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2124 [0xfffffffffffff7b4])) [0 rc+0 S4 A32])
        (reg:SI 264)) getcapability.c:202 -1
     (nil))
(code_label 519 518 520 63 37 "" [1 uses])
(note 520 519 521 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 521 520 522 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2124 [0xfffffffffffff7b4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getcapability.c:205 -1
     (nil))
(jump_insn 522 521 523 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 556)
            (pc))) getcapability.c:205 -1
     (nil)
 -> 556)
(note 523 522 524 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 524 523 525 64 (set (reg:SI 190 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2128 [0xfffffffffffff7b0])) [0 sessionAttributes2+0 S4 A64])) getcapability.c:206 -1
     (nil))
(insn 525 524 526 64 (set (reg:SI 191 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2132 [0xfffffffffffff7ac])) [0 sessionHandle2+0 S4 A32])) getcapability.c:206 -1
     (nil))
(insn 526 525 527 64 (set (reg:SI 192 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 sessionAttributes1+0 S4 A64])) getcapability.c:206 -1
     (nil))
(insn 527 526 528 64 (set (reg:SI 193 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2140 [0xfffffffffffff7a4])) [0 sessionHandle1+0 S4 A32])) getcapability.c:206 -1
     (nil))
(insn 528 527 529 64 (set (reg:SI 194 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2144 [0xfffffffffffff7a0])) [0 sessionAttributes0+0 S4 A64])) getcapability.c:206 -1
     (nil))
(insn 529 528 530 64 (set (reg:SI 195 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2148 [0xfffffffffffff79c])) [0 sessionHandle0+0 S4 A32])) getcapability.c:206 -1
     (nil))
(insn 530 529 531 64 (set (reg/f:DI 196 [ D.5784 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 tssContext+0 S8 A64])) getcapability.c:206 -1
     (nil))
(insn 531 530 532 64 (parallel [
            (set (reg:DI 265)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2080 [0xfffffffffffff7e0])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:206 -1
     (nil))
(insn 532 531 533 64 (parallel [
            (set (reg:DI 266)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2064 [0xfffffffffffff7f0])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:206 -1
     (nil))
(insn 533 532 534 64 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:206 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 534 533 535 64 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) getcapability.c:206 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 535 534 536 64 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) getcapability.c:206 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 536 535 537 64 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1073741831 [0x40000007])) getcapability.c:206 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 537 536 538 64 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 190 [ D.5783 ])) getcapability.c:206 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 538 537 539 64 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) getcapability.c:206 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 539 538 540 64 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 191 [ D.5783 ])) getcapability.c:206 -1
     (expr_list:REG_ARGS_SIZE (const_int 56 [0x38])
        (nil)))
(insn 540 539 541 64 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 192 [ D.5783 ])) getcapability.c:206 -1
     (expr_list:REG_ARGS_SIZE (const_int 64 [0x40])
        (nil)))
(insn 541 540 542 64 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) getcapability.c:206 -1
     (expr_list:REG_ARGS_SIZE (const_int 72 [0x48])
        (nil)))
(insn 542 541 543 64 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 193 [ D.5783 ])) getcapability.c:206 -1
     (expr_list:REG_ARGS_SIZE (const_int 80 [0x50])
        (nil)))
(insn 543 542 544 64 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 194 [ D.5783 ])) getcapability.c:206 -1
     (expr_list:REG_ARGS_SIZE (const_int 88 [0x58])
        (nil)))
(insn 544 543 545 64 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) getcapability.c:206 -1
     (expr_list:REG_ARGS_SIZE (const_int 96 [0x60])
        (nil)))
(insn 545 544 546 64 (set (reg:SI 38 r9)
        (reg:SI 195 [ D.5783 ])) getcapability.c:206 -1
     (nil))
(insn 546 545 547 64 (set (reg:SI 37 r8)
        (const_int 378 [0x17a])) getcapability.c:206 -1
     (nil))
(insn 547 546 548 64 (set (reg:DI 2 cx)
        (const_int 0 [0])) getcapability.c:206 -1
     (nil))
(insn 548 547 549 64 (set (reg:DI 1 dx)
        (reg:DI 265)) getcapability.c:206 -1
     (nil))
(insn 549 548 550 64 (set (reg:DI 4 si)
        (reg:DI 266)) getcapability.c:206 -1
     (nil))
(insn 550 549 551 64 (set (reg:DI 5 di)
        (reg/f:DI 196 [ D.5784 ])) getcapability.c:206 -1
     (nil))
(insn 551 550 552 64 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:206 -1
     (nil))
(call_insn 552 551 553 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fd88f0b0e58 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 96 [0x60]))) getcapability.c:206 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 553 552 554 64 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:206 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 554 553 555 64 (set (reg:SI 267)
        (reg:SI 0 ax)) getcapability.c:206 -1
     (nil))
(insn 555 554 556 64 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2124 [0xfffffffffffff7b4])) [0 rc+0 S4 A32])
        (reg:SI 267)) getcapability.c:206 -1
     (nil))
(code_label 556 555 557 65 38 "" [1 uses])
(note 557 556 558 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 558 557 559 65 (set (reg/f:DI 197 [ D.5784 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 tssContext+0 S8 A64])) getcapability.c:217 -1
     (nil))
(insn 559 558 560 65 (set (reg:DI 5 di)
        (reg/f:DI 197 [ D.5784 ])) getcapability.c:217 -1
     (nil))
(call_insn 560 559 561 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Delete") [flags 0x41]  <function_decl 0x7fd88f0b0d80 TSS_Delete>) [0 TSS_Delete S1 A8])
            (const_int 0 [0]))) getcapability.c:217 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 561 560 562 65 (set (reg:SI 268)
        (reg:SI 0 ax)) getcapability.c:217 -1
     (nil))
(insn 562 561 563 65 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2116 [0xfffffffffffff7bc])) [0 rc1+0 S4 A32])
        (reg:SI 268)) getcapability.c:217 -1
     (nil))
(insn 563 562 564 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2124 [0xfffffffffffff7b4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getcapability.c:218 -1
     (nil))
(jump_insn 564 563 565 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 568)
            (pc))) getcapability.c:218 -1
     (nil)
 -> 568)
(note 565 564 566 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 566 565 567 66 (set (reg:SI 269)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2116 [0xfffffffffffff7bc])) [0 rc1+0 S4 A32])) getcapability.c:219 -1
     (nil))
(insn 567 566 568 66 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2124 [0xfffffffffffff7b4])) [0 rc+0 S4 A32])
        (reg:SI 269)) getcapability.c:219 -1
     (nil))
(code_label 568 567 569 67 39 "" [1 uses])
(note 569 568 570 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 570 569 571 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2124 [0xfffffffffffff7b4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getcapability.c:222 -1
     (nil))
(jump_insn 571 570 572 67 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 593)
            (pc))) getcapability.c:222 -1
     (nil)
 -> 593)
(note 572 571 573 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 573 572 574 68 (set (reg:QI 198 [ D.5785 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2064 [0xfffffffffffff7f0])) [0 out.moreData+0 S1 A64])) getcapability.c:223 -1
     (nil))
(insn 574 573 575 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 198 [ D.5785 ])
            (const_int 0 [0]))) getcapability.c:223 -1
     (nil))
(jump_insn 575 574 576 68 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 583)
            (pc))) getcapability.c:223 -1
     (nil)
 -> 583)
(note 576 575 577 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 577 576 578 69 (set (reg:QI 199 [ D.5785 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2064 [0xfffffffffffff7f0])) [0 out.moreData+0 S1 A64])) getcapability.c:224 -1
     (nil))
(insn 578 577 579 69 (set (reg:SI 200 [ D.5782 ])
        (zero_extend:SI (reg:QI 199 [ D.5785 ]))) getcapability.c:224 -1
     (nil))
(insn 579 578 580 69 (set (reg:SI 4 si)
        (reg:SI 200 [ D.5782 ])) getcapability.c:224 -1
     (nil))
(insn 580 579 581 69 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fd88ed78900 *.LC23>)) getcapability.c:224 -1
     (nil))
(insn 581 580 582 69 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:224 -1
     (nil))
(call_insn 582 581 583 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:224 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 583 582 584 70 41 "" [1 uses])
(note 584 583 585 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 585 584 586 70 (set (reg:SI 201 [ D.5783 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2156 [0xfffffffffffff794])) [0 property+0 S4 A32])) getcapability.c:226 -1
     (nil))
(insn 586 585 587 70 (parallel [
            (set (reg:DI 270)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2064 [0xfffffffffffff7f0])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:226 -1
     (nil))
(insn 587 586 588 70 (parallel [
            (set (reg:DI 271)
                (plus:DI (reg:DI 270)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:226 -1
     (nil))
(insn 588 587 589 70 (set (reg:SI 4 si)
        (reg:SI 201 [ D.5783 ])) getcapability.c:226 -1
     (nil))
(insn 589 588 590 70 (set (reg:DI 5 di)
        (reg:DI 271)) getcapability.c:226 -1
     (nil))
(call_insn 590 589 591 70 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printResponse") [flags 0x3]  <function_decl 0x7fd88f0c10d8 printResponse>) [0 printResponse S1 A8])
            (const_int 0 [0]))) getcapability.c:226 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 591 590 592 70 (set (reg:SI 272)
        (reg:SI 0 ax)) getcapability.c:226 -1
     (nil))
(insn 592 591 593 70 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2124 [0xfffffffffffff7b4])) [0 rc+0 S4 A32])
        (reg:SI 272)) getcapability.c:226 -1
     (nil))
(code_label 593 592 594 71 40 "" [1 uses])
(note 594 593 595 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 595 594 596 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2124 [0xfffffffffffff7b4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getcapability.c:228 -1
     (nil))
(jump_insn 596 595 597 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 608)
            (pc))) getcapability.c:228 -1
     (nil)
 -> 608)
(note 597 596 598 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 598 597 599 72 (set (reg:SI 202 [ D.5782 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fd88ef14090 verbose>) [0 verbose+0 S4 A32])) getcapability.c:229 -1
     (nil))
(insn 599 598 600 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 202 [ D.5782 ])
            (const_int 0 [0]))) getcapability.c:229 -1
     (nil))
(jump_insn 600 599 601 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 634)
            (pc))) getcapability.c:229 612 {*jcc_1}
     (nil)
 -> 634)
(note 601 600 602 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 602 601 603 73 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fd88ed78990 *.LC24>)) getcapability.c:229 -1
     (nil))
(call_insn 603 602 606 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:229 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 606 603 607 73 (set (pc)
        (label_ref 634)) -1
     (nil)
 -> 634)
(barrier 607 606 608)
(code_label 608 607 609 75 42 "" [1 uses])
(note 609 608 610 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 610 609 611 75 (set (reg:SI 273)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2124 [0xfffffffffffff7b4])) [0 rc+0 S4 A32])) getcapability.c:235 -1
     (nil))
(insn 611 610 612 75 (set (reg:SI 4 si)
        (reg:SI 273)) getcapability.c:235 -1
     (nil))
(insn 612 611 613 75 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fd88ed78a20 *.LC25>)) getcapability.c:235 -1
     (nil))
(insn 613 612 614 75 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:235 -1
     (nil))
(call_insn 614 613 615 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:235 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 615 614 616 75 (set (reg:SI 274)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2124 [0xfffffffffffff7b4])) [0 rc+0 S4 A32])) getcapability.c:236 -1
     (nil))
(insn 616 615 617 75 (parallel [
            (set (reg:DI 275)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2088 [0xfffffffffffff7d8])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:236 -1
     (nil))
(insn 617 616 618 75 (parallel [
            (set (reg:DI 276)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:236 -1
     (nil))
(insn 618 617 619 75 (parallel [
            (set (reg:DI 277)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2104 [0xfffffffffffff7c8])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:236 -1
     (nil))
(insn 619 618 620 75 (set (reg:SI 2 cx)
        (reg:SI 274)) getcapability.c:236 -1
     (nil))
(insn 620 619 621 75 (set (reg:DI 1 dx)
        (reg:DI 275)) getcapability.c:236 -1
     (nil))
(insn 621 620 622 75 (set (reg:DI 4 si)
        (reg:DI 276)) getcapability.c:236 -1
     (nil))
(insn 622 621 623 75 (set (reg:DI 5 di)
        (reg:DI 277)) getcapability.c:236 -1
     (nil))
(call_insn 623 622 624 75 (call (mem:QI (symbol_ref:DI ("TSS_ResponseCode_toString") [flags 0x41]  <function_decl 0x7fd88f0b8e58 TSS_ResponseCode_toString>) [0 TSS_ResponseCode_toString S1 A8])
        (const_int 0 [0])) getcapability.c:236 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 624 623 625 75 (set (reg/f:DI 203 [ D.5786 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2088 [0xfffffffffffff7d8])) [0 num+0 S8 A64])) getcapability.c:237 -1
     (nil))
(insn 625 624 626 75 (set (reg/f:DI 204 [ D.5786 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 submsg+0 S8 A64])) getcapability.c:237 -1
     (nil))
(insn 626 625 627 75 (set (reg/f:DI 205 [ D.5786 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2104 [0xfffffffffffff7c8])) [0 msg+0 S8 A64])) getcapability.c:237 -1
     (nil))
(insn 627 626 628 75 (set (reg:DI 2 cx)
        (reg/f:DI 203 [ D.5786 ])) getcapability.c:237 -1
     (nil))
(insn 628 627 629 75 (set (reg:DI 1 dx)
        (reg/f:DI 204 [ D.5786 ])) getcapability.c:237 -1
     (nil))
(insn 629 628 630 75 (set (reg:DI 4 si)
        (reg/f:DI 205 [ D.5786 ])) getcapability.c:237 -1
     (nil))
(insn 630 629 631 75 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fd88ed78ab0 *.LC26>)) getcapability.c:237 -1
     (nil))
(insn 631 630 632 75 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:237 -1
     (nil))
(call_insn 632 631 633 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:237 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 633 632 634 75 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2124 [0xfffffffffffff7b4])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) getcapability.c:238 -1
     (nil))
(code_label 634 633 635 76 44 "" [2 uses])
(note 635 634 636 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 636 635 639 76 (set (reg:SI 206 [ D.5782 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2124 [0xfffffffffffff7b4])) [0 rc+0 S4 A32])) getcapability.c:240 -1
     (nil))
(insn 639 636 643 76 (set (reg:SI 207 [ <retval> ])
        (reg:SI 206 [ D.5782 ])) -1
     (nil))
(insn 643 639 644 76 (set (reg/i:SI 0 ax)
        (reg:SI 207 [ <retval> ])) getcapability.c:241 -1
     (nil))
(insn 644 643 645 76 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.5787+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) getcapability.c:241 -1
     (nil))
(jump_insn 645 644 651 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 648)
            (pc))) getcapability.c:241 -1
     (nil)
 -> 648)
(note 651 645 646 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(call_insn 646 651 647 79 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fd88ed69d80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) getcapability.c:241 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 647 646 648)
(code_label 648 647 652 80 46 "" [1 uses])
(note 652 648 649 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 649 652 0 80 (use (reg/i:SI 0 ax)) getcapability.c:241 -1
     (nil))

;; Function printResponse (printResponse, funcdef_no=3, decl_uid=5216, cgraph_uid=3, symbol_order=5)

Partition 1: size 8 align 8
	i_3
Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 55.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])
        (reg:DI 5 di [ capabilityData ])) getcapability.c:288 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 property+0 S4 A32])
        (reg:SI 4 si [ property ])) getcapability.c:288 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) getcapability.c:289 -1
     (nil))
(insn 8 7 9 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
        (const_int 0 [0])) getcapability.c:293 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (label_ref 45)) getcapability.c:293 -1
     (nil)
 -> 45)
(barrier 10 9 47)
(code_label 47 10 11 4 50 "" [1 uses])
(note 11 47 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:DI 92)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])) getcapability.c:294 -1
     (nil))
(insn 13 12 14 4 (set (reg:DI 94)
        (reg:DI 92)) getcapability.c:294 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg:DI 94)
                (ashift:DI (reg:DI 94)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:294 -1
     (nil))
(insn 15 14 16 4 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg:DI 94)
                    (reg:DI 92)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:294 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 92)
            (const_int 3 [0x3]))
        (nil)))
(insn 16 15 17 4 (parallel [
            (set (reg:DI 95)
                (ashift:DI (reg:DI 94)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:294 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 94)
        (reg:DI 95)) getcapability.c:294 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 92)
            (const_int 24 [0x18]))
        (nil)))
(insn 18 17 19 4 (set (reg:DI 93)
        (reg:DI 94)) getcapability.c:294 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 96)
        (symbol_ref:DI ("capabilityTable") [flags 0x2]  <var_decl 0x7fd88ef14d80 capabilityTable>)) getcapability.c:294 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 87 [ D.5817 ])
        (mem/u/j:SI (plus:DI (reg:DI 93)
                (reg:DI 96)) [0 capabilityTable[i_3].capability+0 S4 A64])) getcapability.c:294 -1
     (nil))
(insn 21 20 22 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])) getcapability.c:294 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 88 [ D.5817 ])
        (mem/j:SI (reg/f:DI 97) [0 capabilityData_10(D)->capability+0 S4 A32])) getcapability.c:294 -1
     (nil))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.5817 ])
            (reg:SI 88 [ D.5817 ]))) getcapability.c:294 -1
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) getcapability.c:294 -1
     (nil)
 -> 42)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:DI 98)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])) getcapability.c:295 -1
     (nil))
(insn 27 26 28 5 (set (reg:DI 100)
        (reg:DI 98)) getcapability.c:295 -1
     (nil))
(insn 28 27 29 5 (parallel [
            (set (reg:DI 100)
                (ashift:DI (reg:DI 100)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:295 -1
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg:DI 100)
                    (reg:DI 98)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:295 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 98)
            (const_int 3 [0x3]))
        (nil)))
(insn 30 29 31 5 (parallel [
            (set (reg:DI 101)
                (ashift:DI (reg:DI 100)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:295 -1
     (nil))
(insn 31 30 32 5 (set (reg:DI 100)
        (reg:DI 101)) getcapability.c:295 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 98)
            (const_int 24 [0x18]))
        (nil)))
(insn 32 31 33 5 (set (reg:DI 99)
        (reg:DI 100)) getcapability.c:295 -1
     (nil))
(insn 33 32 34 5 (set (reg:DI 102)
        (const:DI (plus:DI (symbol_ref:DI ("capabilityTable") [flags 0x2]  <var_decl 0x7fd88ef14d80 capabilityTable>)
                (const_int 16 [0x10])))) getcapability.c:295 -1
     (nil))
(insn 34 33 35 5 (set (reg/f:DI 89 [ D.5818 ])
        (mem/u/f/j:DI (plus:DI (reg:DI 99)
                (reg:DI 102)) [0 capabilityTable[i_3].responseFunction+0 S8 A64])) getcapability.c:295 -1
     (nil))
(insn 35 34 36 5 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 property+0 S4 A32])) getcapability.c:295 -1
     (nil))
(insn 36 35 37 5 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])) getcapability.c:295 -1
     (nil))
(insn 37 36 38 5 (set (reg:SI 4 si)
        (reg:SI 103)) getcapability.c:295 -1
     (nil))
(insn 38 37 39 5 (set (reg:DI 5 di)
        (reg:DI 104)) getcapability.c:295 -1
     (nil))
(call_insn 39 38 40 5 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 89 [ D.5818 ]) [0 *_12 S1 A8])
            (const_int 0 [0]))) getcapability.c:295 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 40 39 41 5 (set (reg:SI 105)
        (reg:SI 0 ax)) getcapability.c:295 -1
     (nil))
(insn 41 40 42 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 105)) getcapability.c:295 -1
     (nil))
(code_label 42 41 43 6 49 "" [1 uses])
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:293 -1
     (nil))
(code_label 45 44 46 7 48 "" [1 uses])
(note 46 45 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 46 49 7 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
            (const_int 9 [0x9]))) getcapability.c:293 -1
     (nil))
(jump_insn 49 48 50 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) getcapability.c:293 -1
     (nil)
 -> 47)
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 54 8 (set (reg:SI 90 [ D.5819 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) getcapability.c:298 -1
     (nil))
(insn 54 51 58 8 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.5819 ])) getcapability.c:298 -1
     (nil))
(insn 58 54 59 8 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) getcapability.c:299 -1
     (nil))
(insn 59 58 0 8 (use (reg/i:SI 0 ax)) getcapability.c:299 -1
     (nil))

;; Function responseCapability (responseCapability, funcdef_no=4, decl_uid=5275, cgraph_uid=4, symbol_order=6)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 19.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])
        (reg:DI 5 di [ capabilityData ])) getcapability.c:302 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 property+0 S4 A32])
        (reg:SI 4 si [ property ])) getcapability.c:302 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) getcapability.c:303 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])) getcapability.c:305 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 87 [ D.5820 ])
        (mem/j:SI (reg/f:DI 90) [0 capabilityData_5(D)->capability+0 S4 A32])) getcapability.c:305 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (reg:SI 87 [ D.5820 ])) getcapability.c:305 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fd88ed99ea0 *.LC27>)) getcapability.c:305 -1
     (nil))
(insn 12 11 13 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:305 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:305 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 132 [0x84])) getcapability.c:306 -1
     (nil))
(insn 15 14 18 2 (set (reg:SI 88 [ D.5821 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) getcapability.c:307 -1
     (nil))
(insn 18 15 22 2 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.5821 ])) getcapability.c:307 -1
     (nil))
(insn 22 18 23 2 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) getcapability.c:308 -1
     (nil))
(insn 23 22 0 2 (use (reg/i:SI 0 ax)) getcapability.c:308 -1
     (nil))

;; Function responseAlgs (responseAlgs, funcdef_no=5, decl_uid=5278, cgraph_uid=5, symbol_order=7)

Partition 3: size 8 align 8
	algProperties_13
Partition 2: size 8 align 8
	algorithms_5
Partition 1: size 4 align 4
	rc_3
Partition 0: size 4 align 4
	count_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 54.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 capabilityData+0 S8 A64])
        (reg:DI 5 di [ capabilityData ])) getcapability.c:311 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 property+0 S4 A32])
        (reg:SI 4 si [ property ])) getcapability.c:311 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (const_int 0 [0])) getcapability.c:312 -1
     (nil))
(insn 11 7 12 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 capabilityData+0 S8 A64])) getcapability.c:314 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 96)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:314 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 capabilityData+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 algorithms+0 S8 A64])
        (reg:DI 95)) getcapability.c:314 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 algorithms+0 S8 A64])) getcapability.c:317 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 87 [ D.5823 ])
        (mem/j:SI (reg/f:DI 97) [0 algorithms_5->count+0 S4 A32])) getcapability.c:317 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 4 si)
        (reg:SI 87 [ D.5823 ])) getcapability.c:317 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fd88eda73f0 *.LC28>)) getcapability.c:317 -1
     (nil))
(insn 18 17 19 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:317 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:317 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 20 19 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 count+0 S4 A32])
        (const_int 0 [0])) getcapability.c:318 -1
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (label_ref 42)) getcapability.c:318 -1
     (nil)
 -> 42)
(barrier 22 21 46)
(code_label 46 22 23 4 56 "" [1 uses])
(note 23 46 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:DI 98)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 count+0 S4 A32]))) getcapability.c:319 -1
     (nil))
(insn 25 24 26 4 (parallel [
            (set (reg:DI 99)
                (ashift:DI (reg:DI 98)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:319 -1
     (nil))
(insn 26 25 27 4 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 algorithms+0 S8 A64])) getcapability.c:319 -1
     (nil))
(insn 27 26 28 4 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg:DI 99)
                    (reg/f:DI 101)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:319 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 algorithms+0 S8 A64])
            (reg:DI 99))
        (nil)))
(insn 28 27 29 4 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg:DI 100)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:319 -1
     (nil))
(insn 29 28 30 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 algProperties+0 S8 A64])
        (reg:DI 102)) getcapability.c:319 -1
     (nil))
(insn 30 29 31 4 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 algProperties+0 S8 A64])) getcapability.c:320 -1
     (nil))
(insn 31 30 32 4 (set (reg:HI 89 [ D.5824 ])
        (mem/j:HI (reg/f:DI 103) [0 algProperties_13->alg+0 S2 A32])) getcapability.c:320 -1
     (nil))
(insn 32 31 33 4 (set (reg:SI 90 [ D.5825 ])
        (zero_extend:SI (reg:HI 89 [ D.5824 ]))) getcapability.c:320 -1
     (nil))
(insn 33 32 34 4 (set (reg:SI 4 si)
        (const_int 2 [0x2])) getcapability.c:320 -1
     (nil))
(insn 34 33 35 4 (set (reg:SI 5 di)
        (reg:SI 90 [ D.5825 ])) getcapability.c:320 -1
     (nil))
(call_insn 35 34 36 4 (call (mem:QI (symbol_ref:DI ("TSS_TPM_ALG_ID_Print") [flags 0x41]  <function_decl 0x7fd88f07faf8 TSS_TPM_ALG_ID_Print>) [0 TSS_TPM_ALG_ID_Print S1 A8])
        (const_int 0 [0])) getcapability.c:320 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 36 35 37 4 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 algProperties+0 S8 A64])) getcapability.c:321 -1
     (nil))
(insn 37 36 38 4 (set (reg:SI 105)
        (mem/j:SI (plus:DI (reg/f:DI 104)
                (const_int 4 [0x4])) [0 algProperties_13->algProperties+0 S4 A32])) getcapability.c:321 -1
     (nil))
(insn 38 37 39 4 (set (reg:SI 4 si)
        (const_int 4 [0x4])) getcapability.c:321 -1
     (nil))
(insn 39 38 40 4 (set (reg:SI 5 di)
        (reg:SI 105)) getcapability.c:321 -1
     (nil))
(call_insn 40 39 41 4 (call (mem:QI (symbol_ref:DI ("TSS_TPM_TPMA_ALGORITHM_Print") [flags 0x41]  <function_decl 0x7fd88f07fbd0 TSS_TPM_TPMA_ALGORITHM_Print>) [0 TSS_TPM_TPMA_ALGORITHM_Print S1 A8])
        (const_int 0 [0])) getcapability.c:321 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 41 40 42 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 count+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 count+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:318 -1
     (nil))
(code_label 42 41 43 5 55 "" [1 uses])
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 algorithms+0 S8 A64])) getcapability.c:318 -1
     (nil))
(insn 45 44 47 5 (set (reg:SI 88 [ D.5823 ])
        (mem/j:SI (reg/f:DI 106) [0 algorithms_5->count+0 S4 A32])) getcapability.c:318 -1
     (nil))
(insn 47 45 48 5 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 88 [ D.5823 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 count+0 S4 A32]))) getcapability.c:318 -1
     (nil))
(jump_insn 48 47 49 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) getcapability.c:318 -1
     (nil)
 -> 46)
(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 53 6 (set (reg:SI 91 [ D.5826 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])) getcapability.c:323 -1
     (nil))
(insn 53 50 57 6 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ D.5826 ])) getcapability.c:323 -1
     (nil))
(insn 57 53 58 6 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) getcapability.c:324 -1
     (nil))
(insn 58 57 0 6 (use (reg/i:SI 0 ax)) getcapability.c:324 -1
     (nil))

;; Function responseHandles (responseHandles, funcdef_no=6, decl_uid=5281, cgraph_uid=6, symbol_order=8)

Partition 2: size 8 align 8
	handles_5
Partition 1: size 4 align 4
	rc_3
Partition 0: size 4 align 4
	count_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 44.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])
        (reg:DI 5 di [ capabilityData ])) getcapability.c:327 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 property+0 S4 A32])
        (reg:SI 4 si [ property ])) getcapability.c:327 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) getcapability.c:328 -1
     (nil))
(insn 11 7 12 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])) getcapability.c:330 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:330 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 handles+0 S8 A64])
        (reg:DI 94)) getcapability.c:330 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 handles+0 S8 A64])) getcapability.c:333 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 87 [ D.5828 ])
        (mem/j:SI (reg/f:DI 96) [0 handles_5->count+0 S4 A32])) getcapability.c:333 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 4 si)
        (reg:SI 87 [ D.5828 ])) getcapability.c:333 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fd88eda7ab0 *.LC29>)) getcapability.c:333 -1
     (nil))
(insn 18 17 19 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:333 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:333 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 20 19 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32])
        (const_int 0 [0])) getcapability.c:334 -1
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (label_ref 32)) getcapability.c:334 -1
     (nil)
 -> 32)
(barrier 22 21 36)
(code_label 36 22 23 4 60 "" [1 uses])
(note 23 36 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 handles+0 S8 A64])) getcapability.c:335 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 98)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32]))) getcapability.c:335 -1
     (nil))
(insn 26 25 27 4 (set (reg:SI 89 [ D.5828 ])
        (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 98)
                        (const_int 4 [0x4]))
                    (reg/f:DI 97))
                (const_int 4 [0x4])) [0 handles_5->handle S4 A32])) getcapability.c:335 -1
     (nil))
(insn 27 26 28 4 (set (reg:SI 4 si)
        (reg:SI 89 [ D.5828 ])) getcapability.c:335 -1
     (nil))
(insn 28 27 29 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7fd88eda7b40 *.LC30>)) getcapability.c:335 -1
     (nil))
(insn 29 28 30 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:335 -1
     (nil))
(call_insn 30 29 31 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:335 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 31 30 32 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:334 -1
     (nil))
(code_label 32 31 33 5 59 "" [1 uses])
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 handles+0 S8 A64])) getcapability.c:334 -1
     (nil))
(insn 35 34 37 5 (set (reg:SI 88 [ D.5828 ])
        (mem/j:SI (reg/f:DI 99) [0 handles_5->count+0 S4 A32])) getcapability.c:334 -1
     (nil))
(insn 37 35 38 5 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 88 [ D.5828 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32]))) getcapability.c:334 -1
     (nil))
(jump_insn 38 37 39 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) getcapability.c:334 -1
     (nil)
 -> 36)
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 43 6 (set (reg:SI 90 [ D.5829 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) getcapability.c:337 -1
     (nil))
(insn 43 40 47 6 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.5829 ])) getcapability.c:337 -1
     (nil))
(insn 47 43 48 6 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) getcapability.c:338 -1
     (nil))
(insn 48 47 0 6 (use (reg/i:SI 0 ax)) getcapability.c:338 -1
     (nil))

;; Function responseCommands (responseCommands, funcdef_no=7, decl_uid=5284, cgraph_uid=7, symbol_order=9)

Partition 2: size 8 align 8
	command_5
Partition 1: size 4 align 4
	rc_3
Partition 0: size 4 align 4
	count_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 44.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])
        (reg:DI 5 di [ capabilityData ])) getcapability.c:341 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 property+0 S4 A32])
        (reg:SI 4 si [ property ])) getcapability.c:341 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) getcapability.c:342 -1
     (nil))
(insn 11 7 12 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])) getcapability.c:344 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:344 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 command+0 S8 A64])
        (reg:DI 94)) getcapability.c:344 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 command+0 S8 A64])) getcapability.c:347 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 87 [ D.5832 ])
        (mem/j:SI (reg/f:DI 96) [0 command_5->count+0 S4 A32])) getcapability.c:347 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 4 si)
        (reg:SI 87 [ D.5832 ])) getcapability.c:347 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7fd88edb3240 *.LC31>)) getcapability.c:347 -1
     (nil))
(insn 18 17 19 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:347 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:347 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 20 19 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32])
        (const_int 0 [0])) getcapability.c:348 -1
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (label_ref 32)) getcapability.c:348 -1
     (nil)
 -> 32)
(barrier 22 21 36)
(code_label 36 22 23 4 64 "" [1 uses])
(note 23 36 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 command+0 S8 A64])) getcapability.c:349 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 98)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32]))) getcapability.c:349 -1
     (nil))
(insn 26 25 27 4 (set (reg:SI 89 [ D.5832 ])
        (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 98)
                        (const_int 4 [0x4]))
                    (reg/f:DI 97))
                (const_int 4 [0x4])) [0 command_5->commandAttributes[count_1].D.3072.val+0 S4 A32])) getcapability.c:349 -1
     (nil))
(insn 27 26 28 4 (set (reg:SI 4 si)
        (reg:SI 89 [ D.5832 ])) getcapability.c:349 -1
     (nil))
(insn 28 27 29 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7fd88edb32d0 *.LC32>)) getcapability.c:349 -1
     (nil))
(insn 29 28 30 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:349 -1
     (nil))
(call_insn 30 29 31 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:349 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 31 30 32 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:348 -1
     (nil))
(code_label 32 31 33 5 63 "" [1 uses])
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 command+0 S8 A64])) getcapability.c:348 -1
     (nil))
(insn 35 34 37 5 (set (reg:SI 88 [ D.5832 ])
        (mem/j:SI (reg/f:DI 99) [0 command_5->count+0 S4 A32])) getcapability.c:348 -1
     (nil))
(insn 37 35 38 5 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 88 [ D.5832 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32]))) getcapability.c:348 -1
     (nil))
(jump_insn 38 37 39 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) getcapability.c:348 -1
     (nil)
 -> 36)
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 43 6 (set (reg:SI 90 [ D.5833 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) getcapability.c:351 -1
     (nil))
(insn 43 40 47 6 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.5833 ])) getcapability.c:351 -1
     (nil))
(insn 47 43 48 6 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) getcapability.c:352 -1
     (nil))
(insn 48 47 0 6 (use (reg/i:SI 0 ax)) getcapability.c:352 -1
     (nil))

;; Function responsePpCommands (responsePpCommands, funcdef_no=8, decl_uid=5287, cgraph_uid=8, symbol_order=10)

Partition 2: size 8 align 8
	command_5
Partition 1: size 4 align 4
	rc_3
Partition 0: size 4 align 4
	count_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 44.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])
        (reg:DI 5 di [ capabilityData ])) getcapability.c:355 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 property+0 S4 A32])
        (reg:SI 4 si [ property ])) getcapability.c:355 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) getcapability.c:356 -1
     (nil))
(insn 11 7 12 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])) getcapability.c:358 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:358 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 command+0 S8 A64])
        (reg:DI 94)) getcapability.c:358 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 command+0 S8 A64])) getcapability.c:361 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 87 [ D.5836 ])
        (mem/j:SI (reg/f:DI 96) [0 command_5->count+0 S4 A32])) getcapability.c:361 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 4 si)
        (reg:SI 87 [ D.5836 ])) getcapability.c:361 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7fd88edb3240 *.LC31>)) getcapability.c:361 -1
     (nil))
(insn 18 17 19 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:361 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:361 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 20 19 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32])
        (const_int 0 [0])) getcapability.c:362 -1
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (label_ref 32)) getcapability.c:362 -1
     (nil)
 -> 32)
(barrier 22 21 36)
(code_label 36 22 23 4 68 "" [1 uses])
(note 23 36 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 command+0 S8 A64])) getcapability.c:363 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 98)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32]))) getcapability.c:363 -1
     (nil))
(insn 26 25 27 4 (set (reg:SI 89 [ D.5836 ])
        (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 98)
                        (const_int 4 [0x4]))
                    (reg/f:DI 97))
                (const_int 4 [0x4])) [0 command_5->commandCodes S4 A32])) getcapability.c:363 -1
     (nil))
(insn 27 26 28 4 (set (reg:SI 4 si)
        (reg:SI 89 [ D.5836 ])) getcapability.c:363 -1
     (nil))
(insn 28 27 29 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7fd88edb3a20 *.LC33>)) getcapability.c:363 -1
     (nil))
(insn 29 28 30 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:363 -1
     (nil))
(call_insn 30 29 31 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:363 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 31 30 32 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:362 -1
     (nil))
(code_label 32 31 33 5 67 "" [1 uses])
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 command+0 S8 A64])) getcapability.c:362 -1
     (nil))
(insn 35 34 37 5 (set (reg:SI 88 [ D.5836 ])
        (mem/j:SI (reg/f:DI 99) [0 command_5->count+0 S4 A32])) getcapability.c:362 -1
     (nil))
(insn 37 35 38 5 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 88 [ D.5836 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32]))) getcapability.c:362 -1
     (nil))
(jump_insn 38 37 39 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) getcapability.c:362 -1
     (nil)
 -> 36)
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 43 6 (set (reg:SI 90 [ D.5837 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) getcapability.c:365 -1
     (nil))
(insn 43 40 47 6 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.5837 ])) getcapability.c:365 -1
     (nil))
(insn 47 43 48 6 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) getcapability.c:366 -1
     (nil))
(insn 48 47 0 6 (use (reg/i:SI 0 ax)) getcapability.c:366 -1
     (nil))

;; Function responseAuditCommands (responseAuditCommands, funcdef_no=9, decl_uid=5290, cgraph_uid=9, symbol_order=11)

Partition 2: size 8 align 8
	command_5
Partition 1: size 4 align 4
	rc_3
Partition 0: size 4 align 4
	count_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 44.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])
        (reg:DI 5 di [ capabilityData ])) getcapability.c:369 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 property+0 S4 A32])
        (reg:SI 4 si [ property ])) getcapability.c:369 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) getcapability.c:370 -1
     (nil))
(insn 11 7 12 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])) getcapability.c:372 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:372 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 command+0 S8 A64])
        (reg:DI 94)) getcapability.c:372 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 command+0 S8 A64])) getcapability.c:375 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 87 [ D.5839 ])
        (mem/j:SI (reg/f:DI 96) [0 command_5->count+0 S4 A32])) getcapability.c:375 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 4 si)
        (reg:SI 87 [ D.5839 ])) getcapability.c:375 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7fd88edb3240 *.LC31>)) getcapability.c:375 -1
     (nil))
(insn 18 17 19 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:375 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:375 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 20 19 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32])
        (const_int 0 [0])) getcapability.c:376 -1
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (label_ref 32)) getcapability.c:376 -1
     (nil)
 -> 32)
(barrier 22 21 36)
(code_label 36 22 23 4 72 "" [1 uses])
(note 23 36 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 command+0 S8 A64])) getcapability.c:377 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 98)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32]))) getcapability.c:377 -1
     (nil))
(insn 26 25 27 4 (set (reg:SI 89 [ D.5839 ])
        (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 98)
                        (const_int 4 [0x4]))
                    (reg/f:DI 97))
                (const_int 4 [0x4])) [0 command_5->commandCodes S4 A32])) getcapability.c:377 -1
     (nil))
(insn 27 26 28 4 (set (reg:SI 4 si)
        (reg:SI 89 [ D.5839 ])) getcapability.c:377 -1
     (nil))
(insn 28 27 29 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fd88edc0090 *.LC34>)) getcapability.c:377 -1
     (nil))
(insn 29 28 30 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:377 -1
     (nil))
(call_insn 30 29 31 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:377 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 31 30 32 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:376 -1
     (nil))
(code_label 32 31 33 5 71 "" [1 uses])
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 command+0 S8 A64])) getcapability.c:376 -1
     (nil))
(insn 35 34 37 5 (set (reg:SI 88 [ D.5839 ])
        (mem/j:SI (reg/f:DI 99) [0 command_5->count+0 S4 A32])) getcapability.c:376 -1
     (nil))
(insn 37 35 38 5 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 88 [ D.5839 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32]))) getcapability.c:376 -1
     (nil))
(jump_insn 38 37 39 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) getcapability.c:376 -1
     (nil)
 -> 36)
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 43 6 (set (reg:SI 90 [ D.5840 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) getcapability.c:379 -1
     (nil))
(insn 43 40 47 6 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.5840 ])) getcapability.c:379 -1
     (nil))
(insn 47 43 48 6 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) getcapability.c:380 -1
     (nil))
(insn 48 47 0 6 (use (reg/i:SI 0 ax)) getcapability.c:380 -1
     (nil))

;; Function responsePcrs (responsePcrs, funcdef_no=10, decl_uid=5293, cgraph_uid=10, symbol_order=12)

Partition 2: size 8 align 8
	pcrSelection_5
Partition 1: size 4 align 4
	rc_3
Partition 0: size 4 align 4
	count_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 49.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])
        (reg:DI 5 di [ capabilityData ])) getcapability.c:383 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 property+0 S4 A32])
        (reg:SI 4 si [ property ])) getcapability.c:383 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) getcapability.c:384 -1
     (nil))
(insn 11 7 12 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])) getcapability.c:386 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:386 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 pcrSelection+0 S8 A64])
        (reg:DI 94)) getcapability.c:386 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 pcrSelection+0 S8 A64])) getcapability.c:389 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 87 [ D.5842 ])
        (mem/j:SI (reg/f:DI 96) [0 pcrSelection_5->count+0 S4 A32])) getcapability.c:389 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 4 si)
        (reg:SI 87 [ D.5842 ])) getcapability.c:389 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7fd88edc0870 *.LC35>)) getcapability.c:389 -1
     (nil))
(insn 18 17 19 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:389 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:389 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 20 19 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32])
        (const_int 0 [0])) getcapability.c:390 -1
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (label_ref 37)) getcapability.c:390 -1
     (nil)
 -> 37)
(barrier 22 21 41)
(code_label 41 22 23 4 76 "" [1 uses])
(note 23 41 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:DI 97)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32]))) getcapability.c:391 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 98)
        (reg:DI 97)) getcapability.c:391 -1
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg:DI 98)
                (ashift:DI (reg:DI 98)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:391 -1
     (nil))
(insn 27 26 28 4 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg:DI 98)
                    (reg:DI 97)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:391 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 97)
            (const_int 3 [0x3]))
        (nil)))
(insn 28 27 29 4 (parallel [
            (set (reg:DI 99)
                (ashift:DI (reg:DI 98)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:391 -1
     (nil))
(insn 29 28 30 4 (set (reg:DI 98)
        (reg:DI 99)) getcapability.c:391 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 97)
            (const_int 6 [0x6]))
        (nil)))
(insn 30 29 31 4 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 pcrSelection+0 S8 A64])) getcapability.c:391 -1
     (nil))
(insn 31 30 32 4 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg:DI 98)
                    (reg/f:DI 101)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:391 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 pcrSelection+0 S8 A64])
            (reg:DI 98))
        (nil)))
(insn 32 31 33 4 (parallel [
            (set (reg/f:DI 89 [ D.5843 ])
                (plus:DI (reg:DI 100)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:391 -1
     (nil))
(insn 33 32 34 4 (set (reg:SI 4 si)
        (const_int 2 [0x2])) getcapability.c:391 -1
     (nil))
(insn 34 33 35 4 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.5843 ])) getcapability.c:391 -1
     (nil))
(call_insn 35 34 36 4 (call (mem:QI (symbol_ref:DI ("TSS_TPMS_PCR_SELECTION_Print") [flags 0x41]  <function_decl 0x7fd88f07fd80 TSS_TPMS_PCR_SELECTION_Print>) [0 TSS_TPMS_PCR_SELECTION_Print S1 A8])
        (const_int 0 [0])) getcapability.c:391 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 36 35 37 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:390 -1
     (nil))
(code_label 37 36 38 5 75 "" [1 uses])
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 5 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 pcrSelection+0 S8 A64])) getcapability.c:390 -1
     (nil))
(insn 40 39 42 5 (set (reg:SI 88 [ D.5842 ])
        (mem/j:SI (reg/f:DI 102) [0 pcrSelection_5->count+0 S4 A32])) getcapability.c:390 -1
     (nil))
(insn 42 40 43 5 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 88 [ D.5842 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 count+0 S4 A32]))) getcapability.c:390 -1
     (nil))
(jump_insn 43 42 44 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) getcapability.c:390 -1
     (nil)
 -> 41)
(note 44 43 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 48 6 (set (reg:SI 90 [ D.5844 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) getcapability.c:393 -1
     (nil))
(insn 48 45 52 6 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.5844 ])) getcapability.c:393 -1
     (nil))
(insn 52 48 53 6 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) getcapability.c:394 -1
     (nil))
(insn 53 52 0 6 (use (reg/i:SI 0 ax)) getcapability.c:394 -1
     (nil))

;; Function responseTpmProperties (responseTpmProperties, funcdef_no=11, decl_uid=5296, cgraph_uid=11, symbol_order=14)

Partition 5: size 8 align 8
	tpmProperty_16
Partition 4: size 8 align 8
	tpmProperties_8
Partition 2: size 8 align 8
	i_4
Partition 1: size 8 align 8
	ptText_2
Partition 3: size 4 align 4
	rc_6
Partition 0: size 4 align 4
	count_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.
Removing jump 92.
Merging block 15 into block 13...
Merged blocks 13 and 15.
Merged 13 and 15 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 capabilityData+0 S8 A64])
        (reg:DI 5 di [ capabilityData ])) getcapability.c:472 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [0 property+0 S4 A32])
        (reg:SI 4 si [ property ])) getcapability.c:472 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) getcapability.c:473 -1
     (nil))
(insn 11 7 12 2 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 capabilityData+0 S8 A64])) getcapability.c:475 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 98)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:475 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 capabilityData+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 tpmProperties+0 S8 A64])
        (reg:DI 97)) getcapability.c:475 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 tpmProperties+0 S8 A64])) getcapability.c:478 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 87 [ D.5913 ])
        (mem/j:SI (reg/f:DI 99) [0 tpmProperties_8->count+0 S4 A32])) getcapability.c:478 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 4 si)
        (reg:SI 87 [ D.5913 ])) getcapability.c:478 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC103") [flags 0x2]  <var_decl 0x7fd88edd1510 *.LC103>)) getcapability.c:478 -1
     (nil))
(insn 18 17 19 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:478 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:478 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 20 19 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 count+0 S4 A32])
        (const_int 0 [0])) getcapability.c:479 -1
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (label_ref 80)) getcapability.c:479 -1
     (nil)
 -> 80)
(barrier 22 21 84)
(code_label 84 22 23 4 85 "" [1 uses])
(note 23 84 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:DI 100)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 count+0 S4 A32]))) getcapability.c:480 -1
     (nil))
(insn 25 24 26 4 (parallel [
            (set (reg:DI 101)
                (ashift:DI (reg:DI 100)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:480 -1
     (nil))
(insn 26 25 27 4 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 tpmProperties+0 S8 A64])) getcapability.c:480 -1
     (nil))
(insn 27 26 28 4 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg:DI 101)
                    (reg/f:DI 103)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:480 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 tpmProperties+0 S8 A64])
            (reg:DI 101))
        (nil)))
(insn 28 27 29 4 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg:DI 102)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:480 -1
     (nil))
(insn 29 28 30 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 tpmProperty+0 S8 A64])
        (reg:DI 104)) getcapability.c:480 -1
     (nil))
(insn 30 29 31 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 ptText+0 S8 A64])
        (const_int 0 [0])) getcapability.c:481 -1
     (nil))
(insn 31 30 32 4 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])
        (const_int 0 [0])) getcapability.c:483 -1
     (nil))
(jump_insn 32 31 33 4 (set (pc)
        (label_ref 54)) getcapability.c:483 -1
     (nil)
 -> 54)
(barrier 33 32 56)
(code_label 56 33 34 5 83 "" [1 uses])
(note 34 56 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 tpmProperty+0 S8 A64])) getcapability.c:484 -1
     (nil))
(insn 36 35 37 5 (set (reg:SI 89 [ D.5913 ])
        (mem/j:SI (reg/f:DI 105) [0 tpmProperty_16->property+0 S4 A32])) getcapability.c:484 -1
     (nil))
(insn 37 36 38 5 (set (reg:DI 106)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])) getcapability.c:484 -1
     (nil))
(insn 38 37 39 5 (parallel [
            (set (reg:DI 107)
                (ashift:DI (reg:DI 106)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:484 -1
     (nil))
(insn 39 38 40 5 (set (reg:DI 108)
        (symbol_ref:DI ("ptTable") [flags 0x2]  <var_decl 0x7fd88ecdc990 ptTable>)) getcapability.c:484 -1
     (nil))
(insn 40 39 41 5 (set (reg:SI 90 [ D.5913 ])
        (mem/j:SI (plus:DI (reg:DI 107)
                (reg:DI 108)) [0 ptTable[i_4].pt+0 S4 A128])) getcapability.c:484 -1
     (nil))
(insn 41 40 42 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.5913 ])
            (reg:SI 90 [ D.5913 ]))) getcapability.c:484 -1
     (nil))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) getcapability.c:484 -1
     (nil)
 -> 51)
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg:DI 109)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])) getcapability.c:485 -1
     (nil))
(insn 45 44 46 6 (parallel [
            (set (reg:DI 110)
                (ashift:DI (reg:DI 109)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:485 -1
     (nil))
(insn 46 45 47 6 (set (reg:DI 111)
        (const:DI (plus:DI (symbol_ref:DI ("ptTable") [flags 0x2]  <var_decl 0x7fd88ecdc990 ptTable>)
                (const_int 8 [0x8])))) getcapability.c:485 -1
     (nil))
(insn 47 46 48 6 (set (reg/f:DI 112)
        (mem/f/j:DI (plus:DI (reg:DI 110)
                (reg:DI 111)) [0 ptTable[i_4].ptText+0 S8 A64])) getcapability.c:485 -1
     (nil))
(insn 48 47 49 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 ptText+0 S8 A64])
        (reg/f:DI 112)) getcapability.c:485 -1
     (nil))
(jump_insn 49 48 50 6 (set (pc)
        (label_ref 59)) getcapability.c:486 -1
     (nil)
 -> 59)
(barrier 50 49 51)
(code_label 51 50 52 7 81 "" [1 uses])
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 7 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:483 -1
     (nil))
(code_label 54 53 55 8 80 "" [1 uses])
(note 55 54 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 55 58 8 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])
            (const_int 66 [0x42]))) getcapability.c:483 -1
     (nil))
(jump_insn 58 57 59 8 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) getcapability.c:483 -1
     (nil)
 -> 56)
(code_label 59 58 60 9 82 "" [1 uses])
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 ptText+0 S8 A64])
            (const_int 0 [0]))) getcapability.c:489 -1
     (nil))
(jump_insn 62 61 63 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) getcapability.c:489 -1
     (nil)
 -> 66)
(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 10 (set (reg/f:DI 113)
        (symbol_ref/f:DI ("*.LC104") [flags 0x2]  <var_decl 0x7fd88edd15a0 *.LC104>)) getcapability.c:490 -1
     (nil))
(insn 65 64 66 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 ptText+0 S8 A64])
        (reg/f:DI 113)) getcapability.c:490 -1
     (nil))
(code_label 66 65 67 11 84 "" [1 uses])
(note 67 66 68 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 11 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 tpmProperty+0 S8 A64])) getcapability.c:492 -1
     (nil))
(insn 69 68 70 11 (set (reg:SI 91 [ D.5913 ])
        (mem/j:SI (plus:DI (reg/f:DI 114)
                (const_int 4 [0x4])) [0 tpmProperty_16->value+0 S4 A32])) getcapability.c:492 -1
     (nil))
(insn 70 69 71 11 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 tpmProperty+0 S8 A64])) getcapability.c:492 -1
     (nil))
(insn 71 70 72 11 (set (reg:SI 92 [ D.5913 ])
        (mem/j:SI (reg/f:DI 115) [0 tpmProperty_16->property+0 S4 A32])) getcapability.c:492 -1
     (nil))
(insn 72 71 73 11 (set (reg:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 ptText+0 S8 A64])) getcapability.c:492 -1
     (nil))
(insn 73 72 74 11 (set (reg:DI 2 cx)
        (reg:DI 116)) getcapability.c:492 -1
     (nil))
(insn 74 73 75 11 (set (reg:SI 1 dx)
        (reg:SI 91 [ D.5913 ])) getcapability.c:492 -1
     (nil))
(insn 75 74 76 11 (set (reg:SI 4 si)
        (reg:SI 92 [ D.5913 ])) getcapability.c:492 -1
     (nil))
(insn 76 75 77 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC105") [flags 0x2]  <var_decl 0x7fd88edd1630 *.LC105>)) getcapability.c:492 -1
     (nil))
(insn 77 76 78 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:492 -1
     (nil))
(call_insn 78 77 79 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:492 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 79 78 80 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -40 [0xffffffffffffffd8])) [0 count+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -40 [0xffffffffffffffd8])) [0 count+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:479 -1
     (nil))
(code_label 80 79 81 12 79 "" [1 uses])
(note 81 80 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 12 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 tpmProperties+0 S8 A64])) getcapability.c:479 -1
     (nil))
(insn 83 82 85 12 (set (reg:SI 88 [ D.5913 ])
        (mem/j:SI (reg/f:DI 117) [0 tpmProperties_8->count+0 S4 A32])) getcapability.c:479 -1
     (nil))
(insn 85 83 86 12 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 88 [ D.5913 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 count+0 S4 A32]))) getcapability.c:479 -1
     (nil))
(jump_insn 86 85 87 12 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) getcapability.c:479 -1
     (nil)
 -> 84)
(note 87 86 88 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 91 13 (set (reg:SI 93 [ D.5914 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])) getcapability.c:494 -1
     (nil))
(insn 91 88 95 13 (set (reg:SI 94 [ <retval> ])
        (reg:SI 93 [ D.5914 ])) getcapability.c:494 -1
     (nil))
(insn 95 91 96 13 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) getcapability.c:495 -1
     (nil))
(insn 96 95 0 13 (use (reg/i:SI 0 ax)) getcapability.c:495 -1
     (nil))

;; Function responsePcrProperties (responsePcrProperties, funcdef_no=12, decl_uid=5299, cgraph_uid=12, symbol_order=16)

Partition 5: size 8 align 8
	pcrProperty_18
Partition 4: size 8 align 8
	pcrProperties_10
Partition 2: size 8 align 8
	i_4
Partition 1: size 8 align 8
	ptPcrText_2
Partition 3: size 4 align 4
	rc_8
Partition 0: size 4 align 4
	count_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.
Removing jump 122.
Merging block 18 into block 16...
Merged blocks 16 and 18.
Merged 16 and 18 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 capabilityData+0 S8 A64])
        (reg:DI 5 di [ capabilityData ])) getcapability.c:522 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [0 property+0 S4 A32])
        (reg:SI 4 si [ property ])) getcapability.c:522 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) getcapability.c:523 -1
     (nil))
(insn 11 7 12 2 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 capabilityData+0 S8 A64])) getcapability.c:525 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg/f:DI 106)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:525 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 capabilityData+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 pcrProperties+0 S8 A64])
        (reg:DI 105)) getcapability.c:525 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 pcrProperties+0 S8 A64])) getcapability.c:528 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 87 [ D.5933 ])
        (mem/j:SI (reg/f:DI 107) [0 pcrProperties_10->count+0 S4 A32])) getcapability.c:528 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 4 si)
        (reg:SI 87 [ D.5933 ])) getcapability.c:528 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC103") [flags 0x2]  <var_decl 0x7fd88edd1510 *.LC103>)) getcapability.c:528 -1
     (nil))
(insn 18 17 19 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:528 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:528 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 20 19 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 count+0 S4 A32])
        (const_int 0 [0])) getcapability.c:529 -1
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (label_ref 110)) getcapability.c:529 -1
     (nil)
 -> 110)
(barrier 22 21 114)
(code_label 114 22 23 4 96 "" [1 uses])
(note 23 114 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:DI 108)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 count+0 S4 A32]))) getcapability.c:532 -1
     (nil))
(insn 25 24 26 4 (parallel [
            (set (reg:DI 109)
                (ashift:DI (reg:DI 108)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:532 -1
     (nil))
(insn 26 25 27 4 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 pcrProperties+0 S8 A64])) getcapability.c:532 -1
     (nil))
(insn 27 26 28 4 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg:DI 109)
                    (reg/f:DI 111)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:532 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 pcrProperties+0 S8 A64])
            (reg:DI 109))
        (nil)))
(insn 28 27 29 4 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg:DI 110)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:532 -1
     (nil))
(insn 29 28 30 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 pcrProperty+0 S8 A64])
        (reg:DI 112)) getcapability.c:532 -1
     (nil))
(insn 30 29 31 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 ptPcrText+0 S8 A64])
        (const_int 0 [0])) getcapability.c:533 -1
     (nil))
(insn 31 30 32 4 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])
        (const_int 0 [0])) getcapability.c:535 -1
     (nil))
(jump_insn 32 31 33 4 (set (pc)
        (label_ref 54)) getcapability.c:535 -1
     (nil)
 -> 54)
(barrier 33 32 56)
(code_label 56 33 34 5 92 "" [1 uses])
(note 34 56 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 pcrProperty+0 S8 A64])) getcapability.c:536 -1
     (nil))
(insn 36 35 37 5 (set (reg:SI 89 [ D.5933 ])
        (mem/j:SI (reg/f:DI 113) [0 pcrProperty_18->tag+0 S4 A32])) getcapability.c:536 -1
     (nil))
(insn 37 36 38 5 (set (reg:DI 114)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])) getcapability.c:536 -1
     (nil))
(insn 38 37 39 5 (parallel [
            (set (reg:DI 115)
                (ashift:DI (reg:DI 114)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:536 -1
     (nil))
(insn 39 38 40 5 (set (reg:DI 116)
        (symbol_ref:DI ("ptPcrTable") [flags 0x2]  <var_decl 0x7fd88ecf63f0 ptPcrTable>)) getcapability.c:536 -1
     (nil))
(insn 40 39 41 5 (set (reg:SI 90 [ D.5933 ])
        (mem/j:SI (plus:DI (reg:DI 115)
                (reg:DI 116)) [0 ptPcrTable[i_4].ptPcr+0 S4 A128])) getcapability.c:536 -1
     (nil))
(insn 41 40 42 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.5933 ])
            (reg:SI 90 [ D.5933 ]))) getcapability.c:536 -1
     (nil))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) getcapability.c:536 -1
     (nil)
 -> 51)
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg:DI 117)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])) getcapability.c:537 -1
     (nil))
(insn 45 44 46 6 (parallel [
            (set (reg:DI 118)
                (ashift:DI (reg:DI 117)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:537 -1
     (nil))
(insn 46 45 47 6 (set (reg:DI 119)
        (const:DI (plus:DI (symbol_ref:DI ("ptPcrTable") [flags 0x2]  <var_decl 0x7fd88ecf63f0 ptPcrTable>)
                (const_int 8 [0x8])))) getcapability.c:537 -1
     (nil))
(insn 47 46 48 6 (set (reg/f:DI 120)
        (mem/f/j:DI (plus:DI (reg:DI 118)
                (reg:DI 119)) [0 ptPcrTable[i_4].ptPcrText+0 S8 A64])) getcapability.c:537 -1
     (nil))
(insn 48 47 49 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 ptPcrText+0 S8 A64])
        (reg/f:DI 120)) getcapability.c:537 -1
     (nil))
(jump_insn 49 48 50 6 (set (pc)
        (label_ref 59)) getcapability.c:538 -1
     (nil)
 -> 59)
(barrier 50 49 51)
(code_label 51 50 52 7 90 "" [1 uses])
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 7 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:535 -1
     (nil))
(code_label 54 53 55 8 89 "" [1 uses])
(note 55 54 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 55 58 8 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])
            (const_int 15 [0xf]))) getcapability.c:535 -1
     (nil))
(jump_insn 58 57 59 8 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) getcapability.c:535 -1
     (nil)
 -> 56)
(code_label 59 58 60 9 91 "" [1 uses])
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 ptPcrText+0 S8 A64])
            (const_int 0 [0]))) getcapability.c:541 -1
     (nil))
(jump_insn 62 61 63 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) getcapability.c:541 -1
     (nil)
 -> 66)
(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 10 (set (reg/f:DI 121)
        (symbol_ref/f:DI ("*.LC104") [flags 0x2]  <var_decl 0x7fd88edd15a0 *.LC104>)) getcapability.c:542 -1
     (nil))
(insn 65 64 66 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 ptPcrText+0 S8 A64])
        (reg/f:DI 121)) getcapability.c:542 -1
     (nil))
(code_label 66 65 67 11 93 "" [1 uses])
(note 67 66 68 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 11 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 pcrProperty+0 S8 A64])) getcapability.c:544 -1
     (nil))
(insn 69 68 70 11 (set (reg:SI 91 [ D.5933 ])
        (mem/j:SI (reg/f:DI 122) [0 pcrProperty_18->tag+0 S4 A32])) getcapability.c:544 -1
     (nil))
(insn 70 69 71 11 (set (reg:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 ptPcrText+0 S8 A64])) getcapability.c:544 -1
     (nil))
(insn 71 70 72 11 (set (reg:DI 1 dx)
        (reg:DI 123)) getcapability.c:544 -1
     (nil))
(insn 72 71 73 11 (set (reg:SI 4 si)
        (reg:SI 91 [ D.5933 ])) getcapability.c:544 -1
     (nil))
(insn 73 72 74 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC121") [flags 0x2]  <var_decl 0x7fd88edd7c60 *.LC121>)) getcapability.c:544 -1
     (nil))
(insn 74 73 75 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:544 -1
     (nil))
(call_insn 75 74 76 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:544 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 76 75 77 11 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])
        (const_int 0 [0])) getcapability.c:545 -1
     (nil))
(jump_insn 77 76 78 11 (set (pc)
        (label_ref 100)) getcapability.c:545 -1
     (nil)
 -> 100)
(barrier 78 77 105)
(code_label 105 78 79 12 95 "" [1 uses])
(note 79 105 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 12 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 pcrProperty+0 S8 A64])) getcapability.c:548 -1
     (nil))
(insn 81 80 82 12 (set (reg:DI 126)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])) getcapability.c:548 -1
     (nil))
(insn 82 81 83 12 (parallel [
            (set (reg:DI 125)
                (plus:DI (reg/f:DI 124)
                    (reg:DI 126)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:548 -1
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 124)
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64]))
        (nil)))
(insn 83 82 84 12 (parallel [
            (set (reg/f:DI 127)
                (plus:DI (reg:DI 125)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:548 -1
     (nil))
(insn 84 83 85 12 (set (reg:QI 94 [ D.5934 ])
        (mem/j:QI (reg/f:DI 127) [0 pcrProperty_18->pcrSelect S1 A8])) getcapability.c:548 -1
     (nil))
(insn 85 84 86 12 (set (reg:SI 95 [ D.5936 ])
        (zero_extend:SI (reg:QI 94 [ D.5934 ]))) getcapability.c:546 -1
     (nil))
(insn 86 85 87 12 (set (reg:DI 128)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])) getcapability.c:547 -1
     (nil))
(insn 87 86 88 12 (set (reg:SI 96 [ D.5933 ])
        (subreg:SI (reg:DI 128) 0)) getcapability.c:547 -1
     (nil))
(insn 88 87 89 12 (parallel [
            (set (reg:SI 97 [ D.5933 ])
                (ashift:SI (reg:SI 96 [ D.5933 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:547 -1
     (nil))
(insn 89 88 90 12 (parallel [
            (set (reg:SI 98 [ D.5933 ])
                (plus:SI (reg:SI 97 [ D.5933 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:546 -1
     (nil))
(insn 90 89 91 12 (set (reg:DI 129)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])) getcapability.c:547 -1
     (nil))
(insn 91 90 92 12 (set (reg:SI 99 [ D.5933 ])
        (subreg:SI (reg:DI 129) 0)) getcapability.c:547 -1
     (nil))
(insn 92 91 93 12 (parallel [
            (set (reg:SI 100 [ D.5933 ])
                (ashift:SI (reg:SI 99 [ D.5933 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:546 -1
     (nil))
(insn 93 92 94 12 (set (reg:SI 2 cx)
        (reg:SI 95 [ D.5936 ])) getcapability.c:546 -1
     (nil))
(insn 94 93 95 12 (set (reg:SI 1 dx)
        (reg:SI 98 [ D.5933 ])) getcapability.c:546 -1
     (nil))
(insn 95 94 96 12 (set (reg:SI 4 si)
        (reg:SI 100 [ D.5933 ])) getcapability.c:546 -1
     (nil))
(insn 96 95 97 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC122") [flags 0x2]  <var_decl 0x7fd88edd7cf0 *.LC122>)) getcapability.c:546 -1
     (nil))
(insn 97 96 98 12 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:546 -1
     (nil))
(call_insn 98 97 99 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:546 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 99 98 100 12 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:545 -1
     (nil))
(code_label 100 99 101 13 94 "" [1 uses])
(note 101 100 102 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 13 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 pcrProperty+0 S8 A64])) getcapability.c:545 -1
     (nil))
(insn 103 102 104 13 (set (reg:QI 92 [ D.5934 ])
        (mem/j:QI (plus:DI (reg/f:DI 130)
                (const_int 4 [0x4])) [0 pcrProperty_18->sizeofSelect+0 S1 A32])) getcapability.c:545 -1
     (nil))
(insn 104 103 106 13 (set (reg:DI 93 [ D.5935 ])
        (zero_extend:DI (reg:QI 92 [ D.5934 ]))) getcapability.c:545 -1
     (nil))
(insn 106 104 107 13 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 93 [ D.5935 ])
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 i+0 S8 A64]))) getcapability.c:545 -1
     (nil))
(jump_insn 107 106 108 13 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) getcapability.c:545 -1
     (nil)
 -> 105)
(note 108 107 109 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -40 [0xffffffffffffffd8])) [0 count+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -40 [0xffffffffffffffd8])) [0 count+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:529 -1
     (nil))
(code_label 110 109 111 15 88 "" [1 uses])
(note 111 110 112 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 15 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 pcrProperties+0 S8 A64])) getcapability.c:529 -1
     (nil))
(insn 113 112 115 15 (set (reg:SI 88 [ D.5933 ])
        (mem/j:SI (reg/f:DI 131) [0 pcrProperties_10->count+0 S4 A32])) getcapability.c:529 -1
     (nil))
(insn 115 113 116 15 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 88 [ D.5933 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 count+0 S4 A32]))) getcapability.c:529 -1
     (nil))
(jump_insn 116 115 117 15 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) getcapability.c:529 -1
     (nil)
 -> 114)
(note 117 116 118 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 121 16 (set (reg:SI 101 [ D.5937 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])) getcapability.c:551 -1
     (nil))
(insn 121 118 125 16 (set (reg:SI 102 [ <retval> ])
        (reg:SI 101 [ D.5937 ])) getcapability.c:551 -1
     (nil))
(insn 125 121 126 16 (set (reg/i:SI 0 ax)
        (reg:SI 102 [ <retval> ])) getcapability.c:552 -1
     (nil))
(insn 126 125 0 16 (use (reg/i:SI 0 ax)) getcapability.c:552 -1
     (nil))

;; Function responseEccCurves (responseEccCurves, funcdef_no=13, decl_uid=5302, cgraph_uid=13, symbol_order=17)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 14.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 capabilityData+0 S8 A64])
        (reg:DI 5 di [ capabilityData ])) getcapability.c:555 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 property+0 S4 A32])
        (reg:SI 4 si [ property ])) getcapability.c:555 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) getcapability.c:556 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC123") [flags 0x2]  <var_decl 0x7fd88ede3b40 *.LC123>)) getcapability.c:559 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:559 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 13 2 (set (reg:SI 87 [ D.5940 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) getcapability.c:560 -1
     (nil))
(insn 13 10 17 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.5940 ])) getcapability.c:560 -1
     (nil))
(insn 17 13 18 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) getcapability.c:561 -1
     (nil))
(insn 18 17 0 2 (use (reg/i:SI 0 ax)) getcapability.c:561 -1
     (nil))

;; Function printUsage (printUsage, funcdef_no=14, decl_uid=5213, cgraph_uid=14, symbol_order=18)

Partition 0: size 8 align 8
	i_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7
deleting block 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 capability+0 S4 A32])
        (reg:SI 5 di [ capability ])) getcapability.c:564 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) getcapability.c:567 -1
     (nil))
(call_insn 7 6 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fd88f155000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) getcapability.c:567 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC124") [flags 0x2]  <var_decl 0x7fd88edeb000 *.LC124>)) getcapability.c:568 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:568 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) getcapability.c:569 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fd88f155000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) getcapability.c:569 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC125") [flags 0x2]  <var_decl 0x7fd88edeb090 *.LC125>)) getcapability.c:570 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:570 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 14 13 15 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) getcapability.c:571 -1
     (nil))
(call_insn 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fd88f155000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) getcapability.c:571 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC126") [flags 0x2]  <var_decl 0x7fd88edeb120 *.LC126>)) getcapability.c:572 -1
     (nil))
(call_insn 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:572 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fd88edeb1b0 *.LC127>)) getcapability.c:573 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:573 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC128") [flags 0x2]  <var_decl 0x7fd88edeb240 *.LC128>)) getcapability.c:574 -1
     (nil))
(call_insn 21 20 22 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:574 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 22 21 23 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) getcapability.c:575 -1
     (nil))
(call_insn 23 22 24 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fd88f155000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) getcapability.c:575 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC129") [flags 0x2]  <var_decl 0x7fd88edeb2d0 *.LC129>)) getcapability.c:576 -1
     (nil))
(call_insn 25 24 26 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:576 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC130") [flags 0x2]  <var_decl 0x7fd88edeb360 *.LC130>)) getcapability.c:577 -1
     (nil))
(call_insn 27 26 28 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:577 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC131") [flags 0x2]  <var_decl 0x7fd88edeb3f0 *.LC131>)) getcapability.c:578 -1
     (nil))
(call_insn 29 28 30 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:578 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 30 29 31 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) getcapability.c:579 -1
     (nil))
(call_insn 31 30 32 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fd88f155000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) getcapability.c:579 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 32 31 33 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
        (const_int 0 [0])) getcapability.c:582 -1
     (nil))
(jump_insn 33 32 34 2 (set (pc)
        (label_ref 64)) getcapability.c:582 -1
     (nil)
 -> 64)
(barrier 34 33 66)
(code_label 66 34 35 4 103 "" [1 uses])
(note 35 66 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 4 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])) getcapability.c:583 -1
     (nil))
(insn 37 36 38 4 (set (reg:DI 91)
        (reg:DI 89)) getcapability.c:583 -1
     (nil))
(insn 38 37 39 4 (parallel [
            (set (reg:DI 91)
                (ashift:DI (reg:DI 91)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:583 -1
     (nil))
(insn 39 38 40 4 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg:DI 91)
                    (reg:DI 89)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:583 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89)
            (const_int 3 [0x3]))
        (nil)))
(insn 40 39 41 4 (parallel [
            (set (reg:DI 92)
                (ashift:DI (reg:DI 91)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:583 -1
     (nil))
(insn 41 40 42 4 (set (reg:DI 91)
        (reg:DI 92)) getcapability.c:583 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 89)
            (const_int 24 [0x18]))
        (nil)))
(insn 42 41 43 4 (set (reg:DI 90)
        (reg:DI 91)) getcapability.c:583 -1
     (nil))
(insn 43 42 44 4 (set (reg:DI 93)
        (symbol_ref:DI ("capabilityTable") [flags 0x2]  <var_decl 0x7fd88ef14d80 capabilityTable>)) getcapability.c:583 -1
     (nil))
(insn 44 43 45 4 (set (reg:SI 87 [ D.5942 ])
        (mem/u/j:SI (plus:DI (reg:DI 90)
                (reg:DI 93)) [0 capabilityTable[i_1].capability+0 S4 A64])) getcapability.c:583 -1
     (nil))
(insn 45 44 46 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.5942 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 capability+0 S4 A32]))) getcapability.c:583 -1
     (nil))
(jump_insn 46 45 47 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) getcapability.c:583 -1
     (nil)
 -> 61)
(note 47 46 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 5 (set (reg:DI 94)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])) getcapability.c:584 -1
     (nil))
(insn 49 48 50 5 (set (reg:DI 96)
        (reg:DI 94)) getcapability.c:584 -1
     (nil))
(insn 50 49 51 5 (parallel [
            (set (reg:DI 96)
                (ashift:DI (reg:DI 96)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:584 -1
     (nil))
(insn 51 50 52 5 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg:DI 96)
                    (reg:DI 94)))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:584 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 94)
            (const_int 3 [0x3]))
        (nil)))
(insn 52 51 53 5 (parallel [
            (set (reg:DI 97)
                (ashift:DI (reg:DI 96)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:584 -1
     (nil))
(insn 53 52 54 5 (set (reg:DI 96)
        (reg:DI 97)) getcapability.c:584 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 94)
            (const_int 24 [0x18]))
        (nil)))
(insn 54 53 55 5 (set (reg:DI 95)
        (reg:DI 96)) getcapability.c:584 -1
     (nil))
(insn 55 54 56 5 (set (reg:DI 98)
        (const:DI (plus:DI (symbol_ref:DI ("capabilityTable") [flags 0x2]  <var_decl 0x7fd88ef14d80 capabilityTable>)
                (const_int 8 [0x8])))) getcapability.c:584 -1
     (nil))
(insn 56 55 57 5 (set (reg/f:DI 88 [ D.5943 ])
        (mem/u/f/j:DI (plus:DI (reg:DI 95)
                (reg:DI 98)) [0 capabilityTable[i_1].usageFunction+0 S8 A64])) getcapability.c:584 -1
     (nil))
(call_insn 57 56 58 5 (call (mem:QI (reg/f:DI 88 [ D.5943 ]) [0 *_20 S1 A8])
        (const_int 0 [0])) getcapability.c:584 -1
     (nil)
    (nil))
(insn 58 57 59 5 (set (reg:SI 5 di)
        (const_int 1 [0x1])) getcapability.c:585 -1
     (nil))
(call_insn 59 58 60 5 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fd88f168000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) getcapability.c:585 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 60 59 61)
(code_label 61 60 62 6 102 "" [1 uses])
(note 62 61 63 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 6 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getcapability.c:582 -1
     (nil))
(code_label 64 63 65 7 101 "" [1 uses])
(note 65 64 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 67 65 68 7 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
            (const_int 9 [0x9]))) getcapability.c:582 -1
     (nil))
(jump_insn 68 67 69 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) getcapability.c:582 -1
     (nil)
 -> 66)
(note 69 68 70 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 8 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 capability+0 S4 A32])) getcapability.c:588 -1
     (nil))
(insn 71 70 72 8 (set (reg:SI 4 si)
        (reg:SI 99)) getcapability.c:588 -1
     (nil))
(insn 72 71 73 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC132") [flags 0x2]  <var_decl 0x7fd88edeb480 *.LC132>)) getcapability.c:588 -1
     (nil))
(insn 73 72 74 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:588 -1
     (nil))
(call_insn 74 73 75 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:588 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(call_insn 75 74 76 8 (call (mem:QI (symbol_ref:DI ("usageCapability") [flags 0x3]  <function_decl 0x7fd88f0c1510 usageCapability>) [0 usageCapability S1 A8])
        (const_int 0 [0])) getcapability.c:589 -1
     (nil)
    (nil))
(insn 76 75 77 8 (set (reg:SI 5 di)
        (const_int 1 [0x1])) getcapability.c:590 -1
     (nil))
(call_insn 77 76 78 8 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fd88f168000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) getcapability.c:590 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 78 77 0)

;; Function usageCapability (usageCapability, funcdef_no=15, decl_uid=5254, cgraph_uid=15, symbol_order=19)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 5 failed.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC133") [flags 0x2]  <var_decl 0x7fd88edeba20 *.LC133>)) getcapability.c:595 -1
     (nil))
(call_insn 6 5 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:595 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 6 0 2 (const_int 0 [0]) getcapability.c:607 -1
     (nil))

;; Function usageAlgs (usageAlgs, funcdef_no=16, decl_uid=5256, cgraph_uid=16, symbol_order=20)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 5 failed.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC134") [flags 0x2]  <var_decl 0x7fd88edebd80 *.LC134>)) getcapability.c:612 -1
     (nil))
(call_insn 6 5 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:612 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 6 0 2 (const_int 0 [0]) getcapability.c:613 -1
     (nil))

;; Function usageHandles (usageHandles, funcdef_no=17, decl_uid=5258, cgraph_uid=17, symbol_order=21)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 5 failed.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC135") [flags 0x2]  <var_decl 0x7fd88edf2120 *.LC135>)) getcapability.c:618 -1
     (nil))
(call_insn 6 5 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:618 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 6 0 2 (const_int 0 [0]) getcapability.c:628 -1
     (nil))

;; Function usageCommands (usageCommands, funcdef_no=18, decl_uid=5260, cgraph_uid=18, symbol_order=22)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 5 failed.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC136") [flags 0x2]  <var_decl 0x7fd88edf2480 *.LC136>)) getcapability.c:633 -1
     (nil))
(call_insn 6 5 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:633 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 6 0 2 (const_int 0 [0]) getcapability.c:634 -1
     (nil))

;; Function usagePpCommands (usagePpCommands, funcdef_no=19, decl_uid=5262, cgraph_uid=19, symbol_order=23)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 5 failed.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC137") [flags 0x2]  <var_decl 0x7fd88edf27e0 *.LC137>)) getcapability.c:640 -1
     (nil))
(call_insn 6 5 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:640 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 6 0 2 (const_int 0 [0]) getcapability.c:641 -1
     (nil))

;; Function usageAuditCommands (usageAuditCommands, funcdef_no=20, decl_uid=5264, cgraph_uid=20, symbol_order=24)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 5 failed.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC138") [flags 0x2]  <var_decl 0x7fd88edf2ab0 *.LC138>)) getcapability.c:646 -1
     (nil))
(call_insn 6 5 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:646 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 6 0 2 (const_int 0 [0]) getcapability.c:647 -1
     (nil))

;; Function usagePcrs (usagePcrs, funcdef_no=21, decl_uid=5266, cgraph_uid=21, symbol_order=25)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 5 failed.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC139") [flags 0x2]  <var_decl 0x7fd88edf2e10 *.LC139>)) getcapability.c:652 -1
     (nil))
(call_insn 6 5 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:652 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 6 0 2 (const_int 0 [0]) getcapability.c:653 -1
     (nil))

;; Function usageTpmProperties (usageTpmProperties, funcdef_no=22, decl_uid=5268, cgraph_uid=22, symbol_order=26)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 5 failed.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC140") [flags 0x2]  <var_decl 0x7fd88edfc1b0 *.LC140>)) getcapability.c:658 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:658 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:SI 4 si)
        (const_int 256 [0x100])) getcapability.c:659 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC141") [flags 0x2]  <var_decl 0x7fd88edfc240 *.LC141>)) getcapability.c:659 -1
     (nil))
(insn 9 8 10 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:659 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:659 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 11 10 12 2 (set (reg:SI 4 si)
        (const_int 512 [0x200])) getcapability.c:660 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC142") [flags 0x2]  <var_decl 0x7fd88edfc2d0 *.LC142>)) getcapability.c:660 -1
     (nil))
(insn 13 12 14 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) getcapability.c:660 -1
     (nil))
(call_insn 14 13 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd88f152ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getcapability.c:660 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 19 14 0 2 (const_int 0 [0]) getcapability.c:661 -1
     (nil))

;; Function usagePcrProperties (usagePcrProperties, funcdef_no=23, decl_uid=5270, cgraph_uid=23, symbol_order=27)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 5 failed.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC143") [flags 0x2]  <var_decl 0x7fd88edfc630 *.LC143>)) getcapability.c:666 -1
     (nil))
(call_insn 6 5 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:666 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 6 0 2 (const_int 0 [0]) getcapability.c:667 -1
     (nil))

;; Function usageEccCurves (usageEccCurves, funcdef_no=24, decl_uid=5272, cgraph_uid=24, symbol_order=28)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 5 failed.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC123") [flags 0x2]  <var_decl 0x7fd88ede3b40 *.LC123>)) getcapability.c:672 -1
     (nil))
(call_insn 6 5 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd88f155360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getcapability.c:672 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 6 0 2 (const_int 0 [0]) getcapability.c:673 -1
     (nil))
