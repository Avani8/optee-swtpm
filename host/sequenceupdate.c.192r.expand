
;; Function main (main, funcdef_no=2, decl_uid=5217, cgraph_uid=2, symbol_order=3)

Partition 6: size 2056 align 16
	in
Partition 3: size 8 align 8
	sequencePassword_12
Partition 2: size 8 align 8
	inFilename_9
Partition 18: size 8 align 8
	num
Partition 17: size 8 align 8
	submsg
Partition 16: size 8 align 8
	msg
Partition 15: size 8 align 8
	buffer
Partition 14: size 8 align 8
	length
Partition 5: size 8 align 8
	tssContext
Partition 4: size 4 align 4
	rc1_220
Partition 1: size 4 align 4
	i_7
Partition 0: size 4 align 4
	rc_1
Partition 13: size 4 align 4
	sessionAttributes2
Partition 12: size 4 align 4
	sessionHandle2
Partition 11: size 4 align 4
	sessionAttributes1
Partition 10: size 4 align 4
	sessionHandle1
Partition 9: size 4 align 4
	sessionAttributes0
Partition 8: size 4 align 4
	sessionHandle0
Partition 7: size 4 align 4
	sequenceHandle

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 65 from 8 to 54.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Redirecting jump 103 from 13 to 54.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Redirecting jump 141 from 18 to 54.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Edge 24->26 redirected to 54
Merging block 26 into block 25...
Merged blocks 25 and 26.
Merged 25 and 26 without moving.
Redirecting jump 219 from 28 to 54.
Merging block 28 into block 27...
Merged blocks 27 and 28.
Merged 27 and 28 without moving.
Edge 34->36 redirected to 54
Merging block 36 into block 35...
Merged blocks 35 and 36.
Merged 35 and 36 without moving.
Redirecting jump 297 from 38 to 54.
Merging block 38 into block 37...
Merged blocks 37 and 38.
Merged 37 and 38 without moving.
Edge 44->46 redirected to 54
Merging block 46 into block 45...
Merged blocks 45 and 46.
Merged 45 and 46 without moving.
Redirecting jump 375 from 48 to 54.
Merging block 48 into block 47...
Merged blocks 47 and 48.
Merged 47 and 48 without moving.
Edge 75->77 redirected to 79
Merging block 77 into block 76...
Merged blocks 76 and 77.
Merged 76 and 77 without moving.
Merging block 80 into block 79...
Merged blocks 79 and 80.
Merged 79 and 80 without moving.
Removing jump 624.
Merging block 81 into block 79...
Merged blocks 79 and 81.
Merged 79 and 81 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2180 [0xfffffffffffff77c])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) sequenceupdate.c:58 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) sequenceupdate.c:58 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.5445+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:58 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) sequenceupdate.c:59 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2128 [0xfffffffffffff7b0])) [0 tssContext+0 S8 A64])
        (const_int 0 [0])) sequenceupdate.c:61 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2168 [0xfffffffffffff788])) [0 sequenceHandle+0 S4 A64])
        (const_int 0 [0])) sequenceupdate.c:63 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2080 [0xfffffffffffff7e0])) [0 inFilename+0 S8 A64])
        (const_int 0 [0])) sequenceupdate.c:64 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 sequencePassword+0 S8 A64])
        (const_int 0 [0])) sequenceupdate.c:65 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2164 [0xfffffffffffff78c])) [0 sessionHandle0+0 S4 A32])
        (const_int 1073741833 [0x40000009])) sequenceupdate.c:66 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 sessionAttributes0+0 S4 A64])
        (const_int 0 [0])) sequenceupdate.c:67 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2156 [0xfffffffffffff794])) [0 sessionHandle1+0 S4 A32])
        (const_int 1073741831 [0x40000007])) sequenceupdate.c:68 -1
     (nil))
(insn 16 15 17 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2152 [0xfffffffffffff798])) [0 sessionAttributes1+0 S4 A64])
        (const_int 0 [0])) sequenceupdate.c:69 -1
     (nil))
(insn 17 16 18 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2148 [0xfffffffffffff79c])) [0 sessionHandle2+0 S4 A32])
        (const_int 1073741831 [0x40000007])) sequenceupdate.c:70 -1
     (nil))
(insn 18 17 19 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2144 [0xfffffffffffff7a0])) [0 sessionAttributes2+0 S4 A64])
        (const_int 0 [0])) sequenceupdate.c:71 -1
     (nil))
(insn 19 18 20 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 length+0 S8 A64])
        (const_int 0 [0])) sequenceupdate.c:73 -1
     (nil))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 buffer+0 S8 A64])
        (const_int 0 [0])) sequenceupdate.c:74 -1
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 87 [ D.5435 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7fede38415a0 stdout>) [0 stdout+0 S8 A64])) sequenceupdate.c:76 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) sequenceupdate.c:76 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) sequenceupdate.c:76 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 4 si)
        (const_int 0 [0])) sequenceupdate.c:76 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.5435 ])) sequenceupdate.c:76 -1
     (nil))
(call_insn 26 25 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("setvbuf") [flags 0x41]  <function_decl 0x7fede38811b0 setvbuf>) [0 setvbuf S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:76 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 27 26 28 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fede3331b40 *.LC0>)) sequenceupdate.c:77 -1
     (nil))
(insn 28 27 29 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) sequenceupdate.c:77 -1
     (nil))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (const_int 0 [0])) sequenceupdate.c:77 -1
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7fede36f5000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:77 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 31 30 32 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) sequenceupdate.c:79 -1
     (nil))
(jump_insn 32 31 33 2 (set (pc)
        (label_ref 442)) sequenceupdate.c:79 -1
     (nil)
 -> 442)
(barrier 33 32 448)
(code_label 448 33 34 4 34 "" [1 uses])
(note 34 448 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 4 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:80 -1
     (nil))
(insn 36 35 37 4 (set (reg:DI 88 [ D.5436 ])
        (sign_extend:DI (reg:SI 193))) sequenceupdate.c:80 -1
     (nil))
(insn 37 36 38 4 (parallel [
            (set (reg:DI 89 [ D.5436 ])
                (ashift:DI (reg:DI 88 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:80 -1
     (nil))
(insn 38 37 39 4 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:80 -1
     (nil))
(insn 39 38 40 4 (parallel [
            (set (reg/f:DI 90 [ D.5437 ])
                (plus:DI (reg:DI 89 [ D.5436 ])
                    (reg/f:DI 194)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:80 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 89 [ D.5436 ]))
        (nil)))
(insn 40 39 41 4 (set (reg/f:DI 91 [ D.5438 ])
        (mem/f:DI (reg/f:DI 90 [ D.5437 ]) [0 *_60+0 S8 A64])) sequenceupdate.c:80 -1
     (nil))
(insn 41 40 42 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fede3331bd0 *.LC1>)) sequenceupdate.c:80 -1
     (nil))
(insn 42 41 43 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.5438 ])) sequenceupdate.c:80 -1
     (nil))
(call_insn/i 43 42 44 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fede37890d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:80 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 44 43 45 4 (set (reg:SI 92 [ D.5439 ])
        (reg:SI 0 ax)) sequenceupdate.c:80 -1
     (nil))
(insn 45 44 46 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.5439 ])
            (const_int 0 [0]))) sequenceupdate.c:80 -1
     (nil))
(jump_insn 46 45 47 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) sequenceupdate.c:80 -1
     (nil)
 -> 76)
(note 47 46 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:81 -1
     (nil))
(insn 49 48 50 5 (set (reg:SI 195)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:82 -1
     (nil))
(insn 50 49 51 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 195)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2180 [0xfffffffffffff77c])) [0 argc+0 S4 A32]))) sequenceupdate.c:82 -1
     (nil))
(jump_insn 51 50 52 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) sequenceupdate.c:82 -1
     (nil)
 -> 67)
(note 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 6 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:83 -1
     (nil))
(insn 54 53 55 6 (set (reg:DI 93 [ D.5436 ])
        (sign_extend:DI (reg:SI 196))) sequenceupdate.c:83 -1
     (nil))
(insn 55 54 56 6 (parallel [
            (set (reg:DI 94 [ D.5436 ])
                (ashift:DI (reg:DI 93 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:83 -1
     (nil))
(insn 56 55 57 6 (set (reg/f:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:83 -1
     (nil))
(insn 57 56 58 6 (parallel [
            (set (reg/f:DI 95 [ D.5437 ])
                (plus:DI (reg:DI 94 [ D.5436 ])
                    (reg/f:DI 197)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:83 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 94 [ D.5436 ]))
        (nil)))
(insn 58 57 59 6 (set (reg/f:DI 96 [ D.5438 ])
        (mem/f:DI (reg/f:DI 95 [ D.5437 ]) [0 *_66+0 S8 A64])) sequenceupdate.c:83 -1
     (nil))
(insn 59 58 60 6 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2168 [0xfffffffffffff788])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:83 -1
     (nil))
(insn 60 59 61 6 (set (reg:DI 1 dx)
        (reg:DI 198)) sequenceupdate.c:83 -1
     (nil))
(insn 61 60 62 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fede3331c60 *.LC2>)) sequenceupdate.c:83 -1
     (nil))
(insn 62 61 63 6 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.5438 ])) sequenceupdate.c:83 -1
     (nil))
(insn 63 62 64 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) sequenceupdate.c:83 -1
     (nil))
(call_insn 64 63 65 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fede3792ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:83 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 65 64 66 6 (set (pc)
        (label_ref:DI 439)) 654 {jump}
     (nil)
 -> 439)
(barrier 66 65 67)
(code_label 67 66 68 7 4 "" [1 uses])
(note 68 67 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fede3331cf0 *.LC3>)) sequenceupdate.c:86 -1
     (nil))
(call_insn 70 69 71 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:86 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 71 70 74 7 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fede36fe000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) sequenceupdate.c:87 -1
     (nil)
    (nil))
(jump_insn 74 71 75 7 (set (pc)
        (label_ref 439)) -1
     (nil)
 -> 439)
(barrier 75 74 76)
(code_label 76 75 77 9 3 "" [1 uses])
(note 77 76 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 9 (set (reg:SI 199)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:90 -1
     (nil))
(insn 79 78 80 9 (set (reg:DI 97 [ D.5436 ])
        (sign_extend:DI (reg:SI 199))) sequenceupdate.c:90 -1
     (nil))
(insn 80 79 81 9 (parallel [
            (set (reg:DI 98 [ D.5436 ])
                (ashift:DI (reg:DI 97 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:90 -1
     (nil))
(insn 81 80 82 9 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:90 -1
     (nil))
(insn 82 81 83 9 (parallel [
            (set (reg/f:DI 99 [ D.5437 ])
                (plus:DI (reg:DI 98 [ D.5436 ])
                    (reg/f:DI 200)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:90 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 98 [ D.5436 ]))
        (nil)))
(insn 83 82 84 9 (set (reg/f:DI 100 [ D.5438 ])
        (mem/f:DI (reg/f:DI 99 [ D.5437 ]) [0 *_73+0 S8 A64])) sequenceupdate.c:90 -1
     (nil))
(insn 84 83 85 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fede3331d80 *.LC4>)) sequenceupdate.c:90 -1
     (nil))
(insn 85 84 86 9 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.5438 ])) sequenceupdate.c:90 -1
     (nil))
(call_insn/i 86 85 87 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fede37890d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:90 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 87 86 88 9 (set (reg:SI 101 [ D.5439 ])
        (reg:SI 0 ax)) sequenceupdate.c:90 -1
     (nil))
(insn 88 87 89 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.5439 ])
            (const_int 0 [0]))) sequenceupdate.c:90 -1
     (nil))
(jump_insn 89 88 90 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) sequenceupdate.c:90 -1
     (nil)
 -> 114)
(note 90 89 91 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:91 -1
     (nil))
(insn 92 91 93 10 (set (reg:SI 201)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:92 -1
     (nil))
(insn 93 92 94 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 201)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2180 [0xfffffffffffff77c])) [0 argc+0 S4 A32]))) sequenceupdate.c:92 -1
     (nil))
(jump_insn 94 93 95 10 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) sequenceupdate.c:92 -1
     (nil)
 -> 105)
(note 95 94 96 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 11 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:93 -1
     (nil))
(insn 97 96 98 11 (set (reg:DI 102 [ D.5436 ])
        (sign_extend:DI (reg:SI 202))) sequenceupdate.c:93 -1
     (nil))
(insn 98 97 99 11 (parallel [
            (set (reg:DI 103 [ D.5436 ])
                (ashift:DI (reg:DI 102 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:93 -1
     (nil))
(insn 99 98 100 11 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:93 -1
     (nil))
(insn 100 99 101 11 (parallel [
            (set (reg/f:DI 104 [ D.5437 ])
                (plus:DI (reg:DI 103 [ D.5436 ])
                    (reg/f:DI 203)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:93 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 103 [ D.5436 ]))
        (nil)))
(insn 101 100 102 11 (set (reg/f:DI 204)
        (mem/f:DI (reg/f:DI 104 [ D.5437 ]) [0 *_79+0 S8 A64])) sequenceupdate.c:93 -1
     (nil))
(insn 102 101 103 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 sequencePassword+0 S8 A64])
        (reg/f:DI 204)) sequenceupdate.c:93 -1
     (nil))
(jump_insn 103 102 104 11 (set (pc)
        (label_ref:DI 439)) 654 {jump}
     (nil)
 -> 439)
(barrier 104 103 105)
(code_label 105 104 106 12 8 "" [1 uses])
(note 106 105 107 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fede3331e10 *.LC5>)) sequenceupdate.c:96 -1
     (nil))
(call_insn 108 107 109 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:96 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 109 108 112 12 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fede36fe000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) sequenceupdate.c:97 -1
     (nil)
    (nil))
(jump_insn 112 109 113 12 (set (pc)
        (label_ref 439)) -1
     (nil)
 -> 439)
(barrier 113 112 114)
(code_label 114 113 115 14 7 "" [1 uses])
(note 115 114 116 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 14 (set (reg:SI 205)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:100 -1
     (nil))
(insn 117 116 118 14 (set (reg:DI 105 [ D.5436 ])
        (sign_extend:DI (reg:SI 205))) sequenceupdate.c:100 -1
     (nil))
(insn 118 117 119 14 (parallel [
            (set (reg:DI 106 [ D.5436 ])
                (ashift:DI (reg:DI 105 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:100 -1
     (nil))
(insn 119 118 120 14 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:100 -1
     (nil))
(insn 120 119 121 14 (parallel [
            (set (reg/f:DI 107 [ D.5437 ])
                (plus:DI (reg:DI 106 [ D.5436 ])
                    (reg/f:DI 206)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:100 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 106 [ D.5436 ]))
        (nil)))
(insn 121 120 122 14 (set (reg/f:DI 108 [ D.5438 ])
        (mem/f:DI (reg/f:DI 107 [ D.5437 ]) [0 *_85+0 S8 A64])) sequenceupdate.c:100 -1
     (nil))
(insn 122 121 123 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fede3331ea0 *.LC6>)) sequenceupdate.c:100 -1
     (nil))
(insn 123 122 124 14 (set (reg:DI 5 di)
        (reg/f:DI 108 [ D.5438 ])) sequenceupdate.c:100 -1
     (nil))
(call_insn/i 124 123 125 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fede37890d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:100 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 125 124 126 14 (set (reg:SI 109 [ D.5439 ])
        (reg:SI 0 ax)) sequenceupdate.c:100 -1
     (nil))
(insn 126 125 127 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.5439 ])
            (const_int 0 [0]))) sequenceupdate.c:100 -1
     (nil))
(jump_insn 127 126 128 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 152)
            (pc))) sequenceupdate.c:100 -1
     (nil)
 -> 152)
(note 128 127 129 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:101 -1
     (nil))
(insn 130 129 131 15 (set (reg:SI 207)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:102 -1
     (nil))
(insn 131 130 132 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 207)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2180 [0xfffffffffffff77c])) [0 argc+0 S4 A32]))) sequenceupdate.c:102 -1
     (nil))
(jump_insn 132 131 133 15 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) sequenceupdate.c:102 -1
     (nil)
 -> 143)
(note 133 132 134 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 16 (set (reg:SI 208)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:103 -1
     (nil))
(insn 135 134 136 16 (set (reg:DI 110 [ D.5436 ])
        (sign_extend:DI (reg:SI 208))) sequenceupdate.c:103 -1
     (nil))
(insn 136 135 137 16 (parallel [
            (set (reg:DI 111 [ D.5436 ])
                (ashift:DI (reg:DI 110 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:103 -1
     (nil))
(insn 137 136 138 16 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:103 -1
     (nil))
(insn 138 137 139 16 (parallel [
            (set (reg/f:DI 112 [ D.5437 ])
                (plus:DI (reg:DI 111 [ D.5436 ])
                    (reg/f:DI 209)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:103 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 111 [ D.5436 ]))
        (nil)))
(insn 139 138 140 16 (set (reg/f:DI 210)
        (mem/f:DI (reg/f:DI 112 [ D.5437 ]) [0 *_91+0 S8 A64])) sequenceupdate.c:103 -1
     (nil))
(insn 140 139 141 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2080 [0xfffffffffffff7e0])) [0 inFilename+0 S8 A64])
        (reg/f:DI 210)) sequenceupdate.c:103 -1
     (nil))
(jump_insn 141 140 142 16 (set (pc)
        (label_ref:DI 439)) 654 {jump}
     (nil)
 -> 439)
(barrier 142 141 143)
(code_label 143 142 144 17 11 "" [1 uses])
(note 144 143 145 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fede3331f30 *.LC7>)) sequenceupdate.c:106 -1
     (nil))
(call_insn 146 145 147 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:106 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 147 146 150 17 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fede36fe000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) sequenceupdate.c:107 -1
     (nil)
    (nil))
(jump_insn 150 147 151 17 (set (pc)
        (label_ref 439)) -1
     (nil)
 -> 439)
(barrier 151 150 152)
(code_label 152 151 153 19 10 "" [1 uses])
(note 153 152 154 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 19 (set (reg:SI 211)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:110 -1
     (nil))
(insn 155 154 156 19 (set (reg:DI 113 [ D.5436 ])
        (sign_extend:DI (reg:SI 211))) sequenceupdate.c:110 -1
     (nil))
(insn 156 155 157 19 (parallel [
            (set (reg:DI 114 [ D.5436 ])
                (ashift:DI (reg:DI 113 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:110 -1
     (nil))
(insn 157 156 158 19 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:110 -1
     (nil))
(insn 158 157 159 19 (parallel [
            (set (reg/f:DI 115 [ D.5437 ])
                (plus:DI (reg:DI 114 [ D.5436 ])
                    (reg/f:DI 212)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:110 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 114 [ D.5436 ]))
        (nil)))
(insn 159 158 160 19 (set (reg/f:DI 116 [ D.5438 ])
        (mem/f:DI (reg/f:DI 115 [ D.5437 ]) [0 *_97+0 S8 A64])) sequenceupdate.c:110 -1
     (nil))
(insn 160 159 161 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fede3331120 *.LC8>)) sequenceupdate.c:110 -1
     (nil))
(insn 161 160 162 19 (set (reg:DI 5 di)
        (reg/f:DI 116 [ D.5438 ])) sequenceupdate.c:110 -1
     (nil))
(call_insn/i 162 161 163 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fede37890d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:110 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 163 162 164 19 (set (reg:SI 117 [ D.5439 ])
        (reg:SI 0 ax)) sequenceupdate.c:110 -1
     (nil))
(insn 164 163 165 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.5439 ])
            (const_int 0 [0]))) sequenceupdate.c:110 -1
     (nil))
(jump_insn 165 164 166 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 230)
            (pc))) sequenceupdate.c:110 -1
     (nil)
 -> 230)
(note 166 165 167 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:111 -1
     (nil))
(insn 168 167 169 20 (set (reg:SI 213)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:112 -1
     (nil))
(insn 169 168 170 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 213)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2180 [0xfffffffffffff77c])) [0 argc+0 S4 A32]))) sequenceupdate.c:112 -1
     (nil))
(jump_insn 170 169 171 20 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 186)
            (pc))) sequenceupdate.c:112 -1
     (nil)
 -> 186)
(note 171 170 172 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 21 (set (reg:SI 214)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:113 -1
     (nil))
(insn 173 172 174 21 (set (reg:DI 118 [ D.5436 ])
        (sign_extend:DI (reg:SI 214))) sequenceupdate.c:113 -1
     (nil))
(insn 174 173 175 21 (parallel [
            (set (reg:DI 119 [ D.5436 ])
                (ashift:DI (reg:DI 118 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:113 -1
     (nil))
(insn 175 174 176 21 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:113 -1
     (nil))
(insn 176 175 177 21 (parallel [
            (set (reg/f:DI 120 [ D.5437 ])
                (plus:DI (reg:DI 119 [ D.5436 ])
                    (reg/f:DI 215)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:113 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 119 [ D.5436 ]))
        (nil)))
(insn 177 176 178 21 (set (reg/f:DI 121 [ D.5438 ])
        (mem/f:DI (reg/f:DI 120 [ D.5437 ]) [0 *_103+0 S8 A64])) sequenceupdate.c:113 -1
     (nil))
(insn 178 177 179 21 (parallel [
            (set (reg:DI 216)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2164 [0xfffffffffffff78c])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:113 -1
     (nil))
(insn 179 178 180 21 (set (reg:DI 1 dx)
        (reg:DI 216)) sequenceupdate.c:113 -1
     (nil))
(insn 180 179 181 21 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fede3331c60 *.LC2>)) sequenceupdate.c:113 -1
     (nil))
(insn 181 180 182 21 (set (reg:DI 5 di)
        (reg/f:DI 121 [ D.5438 ])) sequenceupdate.c:113 -1
     (nil))
(insn 182 181 183 21 (set (reg:QI 0 ax)
        (const_int 0 [0])) sequenceupdate.c:113 -1
     (nil))
(call_insn 183 182 184 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fede3792ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:113 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 184 183 185 21 (set (pc)
        (label_ref 191)) -1
     (nil)
 -> 191)
(barrier 185 184 186)
(code_label 186 185 187 22 14 "" [1 uses])
(note 187 186 188 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fede33312d0 *.LC9>)) sequenceupdate.c:116 -1
     (nil))
(call_insn 189 188 190 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:116 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 190 189 191 22 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fede36fe000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) sequenceupdate.c:117 -1
     (nil)
    (nil))
(code_label 191 190 192 23 15 "" [1 uses])
(note 192 191 193 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 193 192 194 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:119 -1
     (nil))
(insn 194 193 195 23 (set (reg:SI 217)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:120 -1
     (nil))
(insn 195 194 196 23 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 217)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2180 [0xfffffffffffff77c])) [0 argc+0 S4 A32]))) sequenceupdate.c:120 -1
     (nil))
(jump_insn 196 195 197 23 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 221)
            (pc))) sequenceupdate.c:120 -1
     (nil)
 -> 221)
(note 197 196 198 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 24 (set (reg:SI 218)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:121 -1
     (nil))
(insn 199 198 200 24 (set (reg:DI 122 [ D.5436 ])
        (sign_extend:DI (reg:SI 218))) sequenceupdate.c:121 -1
     (nil))
(insn 200 199 201 24 (parallel [
            (set (reg:DI 123 [ D.5436 ])
                (ashift:DI (reg:DI 122 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:121 -1
     (nil))
(insn 201 200 202 24 (set (reg/f:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:121 -1
     (nil))
(insn 202 201 203 24 (parallel [
            (set (reg/f:DI 124 [ D.5437 ])
                (plus:DI (reg:DI 123 [ D.5436 ])
                    (reg/f:DI 219)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:121 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 123 [ D.5436 ]))
        (nil)))
(insn 203 202 204 24 (set (reg/f:DI 125 [ D.5438 ])
        (mem/f:DI (reg/f:DI 124 [ D.5437 ]) [0 *_111+0 S8 A64])) sequenceupdate.c:121 -1
     (nil))
(insn 204 203 205 24 (parallel [
            (set (reg:DI 220)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2160 [0xfffffffffffff790])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:121 -1
     (nil))
(insn 205 204 206 24 (set (reg:DI 1 dx)
        (reg:DI 220)) sequenceupdate.c:121 -1
     (nil))
(insn 206 205 207 24 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fede3331c60 *.LC2>)) sequenceupdate.c:121 -1
     (nil))
(insn 207 206 208 24 (set (reg:DI 5 di)
        (reg/f:DI 125 [ D.5438 ])) sequenceupdate.c:121 -1
     (nil))
(insn 208 207 209 24 (set (reg:QI 0 ax)
        (const_int 0 [0])) sequenceupdate.c:121 -1
     (nil))
(call_insn 209 208 210 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fede3792ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:121 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 210 209 211 24 (set (reg:SI 126 [ D.5440 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 sessionAttributes0+0 S4 A64])) sequenceupdate.c:122 -1
     (nil))
(insn 211 210 212 24 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 126 [ D.5440 ])
            (const_int 255 [0xff]))) sequenceupdate.c:122 -1
     (nil))
(jump_insn 212 211 213 24 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 439)
            (pc))) sequenceupdate.c:122 612 {*jcc_1}
     (nil)
 -> 439)
(note 213 212 214 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fede3331360 *.LC10>)) sequenceupdate.c:123 -1
     (nil))
(call_insn 215 214 216 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:123 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 216 215 219 25 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fede36fe000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) sequenceupdate.c:124 -1
     (nil)
    (nil))
(jump_insn 219 216 220 25 (set (pc)
        (label_ref:DI 439)) 654 {jump}
     (nil)
 -> 439)
(barrier 220 219 221)
(code_label 221 220 222 27 16 "" [1 uses])
(note 222 221 223 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fede33312d0 *.LC9>)) sequenceupdate.c:128 -1
     (nil))
(call_insn 224 223 225 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:128 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 225 224 228 27 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fede36fe000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) sequenceupdate.c:129 -1
     (nil)
    (nil))
(jump_insn 228 225 229 27 (set (pc)
        (label_ref 439)) -1
     (nil)
 -> 439)
(barrier 229 228 230)
(code_label 230 229 231 29 13 "" [1 uses])
(note 231 230 232 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 29 (set (reg:SI 221)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:132 -1
     (nil))
(insn 233 232 234 29 (set (reg:DI 127 [ D.5436 ])
        (sign_extend:DI (reg:SI 221))) sequenceupdate.c:132 -1
     (nil))
(insn 234 233 235 29 (parallel [
            (set (reg:DI 128 [ D.5436 ])
                (ashift:DI (reg:DI 127 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:132 -1
     (nil))
(insn 235 234 236 29 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:132 -1
     (nil))
(insn 236 235 237 29 (parallel [
            (set (reg/f:DI 129 [ D.5437 ])
                (plus:DI (reg:DI 128 [ D.5436 ])
                    (reg/f:DI 222)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:132 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 128 [ D.5436 ]))
        (nil)))
(insn 237 236 238 29 (set (reg/f:DI 130 [ D.5438 ])
        (mem/f:DI (reg/f:DI 129 [ D.5437 ]) [0 *_121+0 S8 A64])) sequenceupdate.c:132 -1
     (nil))
(insn 238 237 239 29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fede33313f0 *.LC11>)) sequenceupdate.c:132 -1
     (nil))
(insn 239 238 240 29 (set (reg:DI 5 di)
        (reg/f:DI 130 [ D.5438 ])) sequenceupdate.c:132 -1
     (nil))
(call_insn/i 240 239 241 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fede37890d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:132 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 241 240 242 29 (set (reg:SI 131 [ D.5439 ])
        (reg:SI 0 ax)) sequenceupdate.c:132 -1
     (nil))
(insn 242 241 243 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 131 [ D.5439 ])
            (const_int 0 [0]))) sequenceupdate.c:132 -1
     (nil))
(jump_insn 243 242 244 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) sequenceupdate.c:132 -1
     (nil)
 -> 308)
(note 244 243 245 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 246 30 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:133 -1
     (nil))
(insn 246 245 247 30 (set (reg:SI 223)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:134 -1
     (nil))
(insn 247 246 248 30 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 223)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2180 [0xfffffffffffff77c])) [0 argc+0 S4 A32]))) sequenceupdate.c:134 -1
     (nil))
(jump_insn 248 247 249 30 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) sequenceupdate.c:134 -1
     (nil)
 -> 264)
(note 249 248 250 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 31 (set (reg:SI 224)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:135 -1
     (nil))
(insn 251 250 252 31 (set (reg:DI 132 [ D.5436 ])
        (sign_extend:DI (reg:SI 224))) sequenceupdate.c:135 -1
     (nil))
(insn 252 251 253 31 (parallel [
            (set (reg:DI 133 [ D.5436 ])
                (ashift:DI (reg:DI 132 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:135 -1
     (nil))
(insn 253 252 254 31 (set (reg/f:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:135 -1
     (nil))
(insn 254 253 255 31 (parallel [
            (set (reg/f:DI 134 [ D.5437 ])
                (plus:DI (reg:DI 133 [ D.5436 ])
                    (reg/f:DI 225)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:135 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 133 [ D.5436 ]))
        (nil)))
(insn 255 254 256 31 (set (reg/f:DI 135 [ D.5438 ])
        (mem/f:DI (reg/f:DI 134 [ D.5437 ]) [0 *_127+0 S8 A64])) sequenceupdate.c:135 -1
     (nil))
(insn 256 255 257 31 (parallel [
            (set (reg:DI 226)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2156 [0xfffffffffffff794])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:135 -1
     (nil))
(insn 257 256 258 31 (set (reg:DI 1 dx)
        (reg:DI 226)) sequenceupdate.c:135 -1
     (nil))
(insn 258 257 259 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fede3331c60 *.LC2>)) sequenceupdate.c:135 -1
     (nil))
(insn 259 258 260 31 (set (reg:DI 5 di)
        (reg/f:DI 135 [ D.5438 ])) sequenceupdate.c:135 -1
     (nil))
(insn 260 259 261 31 (set (reg:QI 0 ax)
        (const_int 0 [0])) sequenceupdate.c:135 -1
     (nil))
(call_insn 261 260 262 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fede3792ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:135 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 262 261 263 31 (set (pc)
        (label_ref 269)) -1
     (nil)
 -> 269)
(barrier 263 262 264)
(code_label 264 263 265 32 20 "" [1 uses])
(note 265 264 266 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 32 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fede334c000 *.LC12>)) sequenceupdate.c:138 -1
     (nil))
(call_insn 267 266 268 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:138 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 268 267 269 32 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fede36fe000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) sequenceupdate.c:139 -1
     (nil)
    (nil))
(code_label 269 268 270 33 21 "" [1 uses])
(note 270 269 271 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 271 270 272 33 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:141 -1
     (nil))
(insn 272 271 273 33 (set (reg:SI 227)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:142 -1
     (nil))
(insn 273 272 274 33 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 227)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2180 [0xfffffffffffff77c])) [0 argc+0 S4 A32]))) sequenceupdate.c:142 -1
     (nil))
(jump_insn 274 273 275 33 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 299)
            (pc))) sequenceupdate.c:142 -1
     (nil)
 -> 299)
(note 275 274 276 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 34 (set (reg:SI 228)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:143 -1
     (nil))
(insn 277 276 278 34 (set (reg:DI 136 [ D.5436 ])
        (sign_extend:DI (reg:SI 228))) sequenceupdate.c:143 -1
     (nil))
(insn 278 277 279 34 (parallel [
            (set (reg:DI 137 [ D.5436 ])
                (ashift:DI (reg:DI 136 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:143 -1
     (nil))
(insn 279 278 280 34 (set (reg/f:DI 229)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:143 -1
     (nil))
(insn 280 279 281 34 (parallel [
            (set (reg/f:DI 138 [ D.5437 ])
                (plus:DI (reg:DI 137 [ D.5436 ])
                    (reg/f:DI 229)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:143 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 137 [ D.5436 ]))
        (nil)))
(insn 281 280 282 34 (set (reg/f:DI 139 [ D.5438 ])
        (mem/f:DI (reg/f:DI 138 [ D.5437 ]) [0 *_135+0 S8 A64])) sequenceupdate.c:143 -1
     (nil))
(insn 282 281 283 34 (parallel [
            (set (reg:DI 230)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2152 [0xfffffffffffff798])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:143 -1
     (nil))
(insn 283 282 284 34 (set (reg:DI 1 dx)
        (reg:DI 230)) sequenceupdate.c:143 -1
     (nil))
(insn 284 283 285 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fede3331c60 *.LC2>)) sequenceupdate.c:143 -1
     (nil))
(insn 285 284 286 34 (set (reg:DI 5 di)
        (reg/f:DI 139 [ D.5438 ])) sequenceupdate.c:143 -1
     (nil))
(insn 286 285 287 34 (set (reg:QI 0 ax)
        (const_int 0 [0])) sequenceupdate.c:143 -1
     (nil))
(call_insn 287 286 288 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fede3792ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:143 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 288 287 289 34 (set (reg:SI 140 [ D.5440 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2152 [0xfffffffffffff798])) [0 sessionAttributes1+0 S4 A64])) sequenceupdate.c:144 -1
     (nil))
(insn 289 288 290 34 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 140 [ D.5440 ])
            (const_int 255 [0xff]))) sequenceupdate.c:144 -1
     (nil))
(jump_insn 290 289 291 34 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 439)
            (pc))) sequenceupdate.c:144 612 {*jcc_1}
     (nil)
 -> 439)
(note 291 290 292 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 292 291 293 35 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fede334c090 *.LC13>)) sequenceupdate.c:145 -1
     (nil))
(call_insn 293 292 294 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:145 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 294 293 297 35 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fede36fe000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) sequenceupdate.c:146 -1
     (nil)
    (nil))
(jump_insn 297 294 298 35 (set (pc)
        (label_ref:DI 439)) 654 {jump}
     (nil)
 -> 439)
(barrier 298 297 299)
(code_label 299 298 300 37 22 "" [1 uses])
(note 300 299 301 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 37 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fede334c000 *.LC12>)) sequenceupdate.c:150 -1
     (nil))
(call_insn 302 301 303 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:150 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 303 302 306 37 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fede36fe000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) sequenceupdate.c:151 -1
     (nil)
    (nil))
(jump_insn 306 303 307 37 (set (pc)
        (label_ref 439)) -1
     (nil)
 -> 439)
(barrier 307 306 308)
(code_label 308 307 309 39 19 "" [1 uses])
(note 309 308 310 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 310 309 311 39 (set (reg:SI 231)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:154 -1
     (nil))
(insn 311 310 312 39 (set (reg:DI 141 [ D.5436 ])
        (sign_extend:DI (reg:SI 231))) sequenceupdate.c:154 -1
     (nil))
(insn 312 311 313 39 (parallel [
            (set (reg:DI 142 [ D.5436 ])
                (ashift:DI (reg:DI 141 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:154 -1
     (nil))
(insn 313 312 314 39 (set (reg/f:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:154 -1
     (nil))
(insn 314 313 315 39 (parallel [
            (set (reg/f:DI 143 [ D.5437 ])
                (plus:DI (reg:DI 142 [ D.5436 ])
                    (reg/f:DI 232)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:154 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 142 [ D.5436 ]))
        (nil)))
(insn 315 314 316 39 (set (reg/f:DI 144 [ D.5438 ])
        (mem/f:DI (reg/f:DI 143 [ D.5437 ]) [0 *_145+0 S8 A64])) sequenceupdate.c:154 -1
     (nil))
(insn 316 315 317 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fede334c120 *.LC14>)) sequenceupdate.c:154 -1
     (nil))
(insn 317 316 318 39 (set (reg:DI 5 di)
        (reg/f:DI 144 [ D.5438 ])) sequenceupdate.c:154 -1
     (nil))
(call_insn/i 318 317 319 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fede37890d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:154 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 319 318 320 39 (set (reg:SI 145 [ D.5439 ])
        (reg:SI 0 ax)) sequenceupdate.c:154 -1
     (nil))
(insn 320 319 321 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 145 [ D.5439 ])
            (const_int 0 [0]))) sequenceupdate.c:154 -1
     (nil))
(jump_insn 321 320 322 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 386)
            (pc))) sequenceupdate.c:154 -1
     (nil)
 -> 386)
(note 322 321 323 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 323 322 324 40 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:155 -1
     (nil))
(insn 324 323 325 40 (set (reg:SI 233)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:156 -1
     (nil))
(insn 325 324 326 40 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 233)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2180 [0xfffffffffffff77c])) [0 argc+0 S4 A32]))) sequenceupdate.c:156 -1
     (nil))
(jump_insn 326 325 327 40 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 342)
            (pc))) sequenceupdate.c:156 -1
     (nil)
 -> 342)
(note 327 326 328 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 328 327 329 41 (set (reg:SI 234)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:157 -1
     (nil))
(insn 329 328 330 41 (set (reg:DI 146 [ D.5436 ])
        (sign_extend:DI (reg:SI 234))) sequenceupdate.c:157 -1
     (nil))
(insn 330 329 331 41 (parallel [
            (set (reg:DI 147 [ D.5436 ])
                (ashift:DI (reg:DI 146 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:157 -1
     (nil))
(insn 331 330 332 41 (set (reg/f:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:157 -1
     (nil))
(insn 332 331 333 41 (parallel [
            (set (reg/f:DI 148 [ D.5437 ])
                (plus:DI (reg:DI 147 [ D.5436 ])
                    (reg/f:DI 235)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:157 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 147 [ D.5436 ]))
        (nil)))
(insn 333 332 334 41 (set (reg/f:DI 149 [ D.5438 ])
        (mem/f:DI (reg/f:DI 148 [ D.5437 ]) [0 *_151+0 S8 A64])) sequenceupdate.c:157 -1
     (nil))
(insn 334 333 335 41 (parallel [
            (set (reg:DI 236)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2148 [0xfffffffffffff79c])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:157 -1
     (nil))
(insn 335 334 336 41 (set (reg:DI 1 dx)
        (reg:DI 236)) sequenceupdate.c:157 -1
     (nil))
(insn 336 335 337 41 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fede3331c60 *.LC2>)) sequenceupdate.c:157 -1
     (nil))
(insn 337 336 338 41 (set (reg:DI 5 di)
        (reg/f:DI 149 [ D.5438 ])) sequenceupdate.c:157 -1
     (nil))
(insn 338 337 339 41 (set (reg:QI 0 ax)
        (const_int 0 [0])) sequenceupdate.c:157 -1
     (nil))
(call_insn 339 338 340 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fede3792ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:157 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 340 339 341 41 (set (pc)
        (label_ref 347)) -1
     (nil)
 -> 347)
(barrier 341 340 342)
(code_label 342 341 343 42 26 "" [1 uses])
(note 343 342 344 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 345 42 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fede334c1b0 *.LC15>)) sequenceupdate.c:160 -1
     (nil))
(call_insn 345 344 346 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:160 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 346 345 347 42 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fede36fe000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) sequenceupdate.c:161 -1
     (nil)
    (nil))
(code_label 347 346 348 43 27 "" [1 uses])
(note 348 347 349 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 350 43 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:163 -1
     (nil))
(insn 350 349 351 43 (set (reg:SI 237)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:164 -1
     (nil))
(insn 351 350 352 43 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 237)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2180 [0xfffffffffffff77c])) [0 argc+0 S4 A32]))) sequenceupdate.c:164 -1
     (nil))
(jump_insn 352 351 353 43 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 377)
            (pc))) sequenceupdate.c:164 -1
     (nil)
 -> 377)
(note 353 352 354 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 354 353 355 44 (set (reg:SI 238)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:165 -1
     (nil))
(insn 355 354 356 44 (set (reg:DI 150 [ D.5436 ])
        (sign_extend:DI (reg:SI 238))) sequenceupdate.c:165 -1
     (nil))
(insn 356 355 357 44 (parallel [
            (set (reg:DI 151 [ D.5436 ])
                (ashift:DI (reg:DI 150 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:165 -1
     (nil))
(insn 357 356 358 44 (set (reg/f:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:165 -1
     (nil))
(insn 358 357 359 44 (parallel [
            (set (reg/f:DI 152 [ D.5437 ])
                (plus:DI (reg:DI 151 [ D.5436 ])
                    (reg/f:DI 239)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:165 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 151 [ D.5436 ]))
        (nil)))
(insn 359 358 360 44 (set (reg/f:DI 153 [ D.5438 ])
        (mem/f:DI (reg/f:DI 152 [ D.5437 ]) [0 *_159+0 S8 A64])) sequenceupdate.c:165 -1
     (nil))
(insn 360 359 361 44 (parallel [
            (set (reg:DI 240)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2144 [0xfffffffffffff7a0])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:165 -1
     (nil))
(insn 361 360 362 44 (set (reg:DI 1 dx)
        (reg:DI 240)) sequenceupdate.c:165 -1
     (nil))
(insn 362 361 363 44 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fede3331c60 *.LC2>)) sequenceupdate.c:165 -1
     (nil))
(insn 363 362 364 44 (set (reg:DI 5 di)
        (reg/f:DI 153 [ D.5438 ])) sequenceupdate.c:165 -1
     (nil))
(insn 364 363 365 44 (set (reg:QI 0 ax)
        (const_int 0 [0])) sequenceupdate.c:165 -1
     (nil))
(call_insn 365 364 366 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fede3792ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:165 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 366 365 367 44 (set (reg:SI 154 [ D.5440 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2144 [0xfffffffffffff7a0])) [0 sessionAttributes2+0 S4 A64])) sequenceupdate.c:166 -1
     (nil))
(insn 367 366 368 44 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 154 [ D.5440 ])
            (const_int 255 [0xff]))) sequenceupdate.c:166 -1
     (nil))
(jump_insn 368 367 369 44 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 439)
            (pc))) sequenceupdate.c:166 612 {*jcc_1}
     (nil)
 -> 439)
(note 369 368 370 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 370 369 371 45 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fede334c240 *.LC16>)) sequenceupdate.c:167 -1
     (nil))
(call_insn 371 370 372 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:167 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 372 371 375 45 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fede36fe000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) sequenceupdate.c:168 -1
     (nil)
    (nil))
(jump_insn 375 372 376 45 (set (pc)
        (label_ref:DI 439)) 654 {jump}
     (nil)
 -> 439)
(barrier 376 375 377)
(code_label 377 376 378 47 28 "" [1 uses])
(note 378 377 379 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 379 378 380 47 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fede334c1b0 *.LC15>)) sequenceupdate.c:172 -1
     (nil))
(call_insn 380 379 381 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:172 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 381 380 384 47 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fede36fe000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) sequenceupdate.c:173 -1
     (nil)
    (nil))
(jump_insn 384 381 385 47 (set (pc)
        (label_ref 439)) -1
     (nil)
 -> 439)
(barrier 385 384 386)
(code_label 386 385 387 49 25 "" [1 uses])
(note 387 386 388 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 388 387 389 49 (set (reg:SI 241)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:176 -1
     (nil))
(insn 389 388 390 49 (set (reg:DI 155 [ D.5436 ])
        (sign_extend:DI (reg:SI 241))) sequenceupdate.c:176 -1
     (nil))
(insn 390 389 391 49 (parallel [
            (set (reg:DI 156 [ D.5436 ])
                (ashift:DI (reg:DI 155 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:176 -1
     (nil))
(insn 391 390 392 49 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:176 -1
     (nil))
(insn 392 391 393 49 (parallel [
            (set (reg/f:DI 157 [ D.5437 ])
                (plus:DI (reg:DI 156 [ D.5436 ])
                    (reg/f:DI 242)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:176 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 156 [ D.5436 ]))
        (nil)))
(insn 393 392 394 49 (set (reg/f:DI 158 [ D.5438 ])
        (mem/f:DI (reg/f:DI 157 [ D.5437 ]) [0 *_169+0 S8 A64])) sequenceupdate.c:176 -1
     (nil))
(insn 394 393 395 49 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fede334c2d0 *.LC17>)) sequenceupdate.c:176 -1
     (nil))
(insn 395 394 396 49 (set (reg:DI 5 di)
        (reg/f:DI 158 [ D.5438 ])) sequenceupdate.c:176 -1
     (nil))
(call_insn/i 396 395 397 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fede37890d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:176 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 397 396 398 49 (set (reg:SI 159 [ D.5439 ])
        (reg:SI 0 ax)) sequenceupdate.c:176 -1
     (nil))
(insn 398 397 399 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 159 [ D.5439 ])
            (const_int 0 [0]))) sequenceupdate.c:176 -1
     (nil))
(jump_insn 399 398 400 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 404)
            (pc))) sequenceupdate.c:176 -1
     (nil)
 -> 404)
(note 400 399 401 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(call_insn 401 400 402 50 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fede36fe000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) sequenceupdate.c:177 -1
     (nil)
    (nil))
(jump_insn 402 401 403 50 (set (pc)
        (label_ref 439)) -1
     (nil)
 -> 439)
(barrier 403 402 404)
(code_label 404 403 405 51 31 "" [1 uses])
(note 405 404 406 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 406 405 407 51 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:179 -1
     (nil))
(insn 407 406 408 51 (set (reg:DI 160 [ D.5436 ])
        (sign_extend:DI (reg:SI 243))) sequenceupdate.c:179 -1
     (nil))
(insn 408 407 409 51 (parallel [
            (set (reg:DI 161 [ D.5436 ])
                (ashift:DI (reg:DI 160 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:179 -1
     (nil))
(insn 409 408 410 51 (set (reg/f:DI 244)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:179 -1
     (nil))
(insn 410 409 411 51 (parallel [
            (set (reg/f:DI 162 [ D.5437 ])
                (plus:DI (reg:DI 161 [ D.5436 ])
                    (reg/f:DI 244)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:179 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 161 [ D.5436 ]))
        (nil)))
(insn 411 410 412 51 (set (reg/f:DI 163 [ D.5438 ])
        (mem/f:DI (reg/f:DI 162 [ D.5437 ]) [0 *_175+0 S8 A64])) sequenceupdate.c:179 -1
     (nil))
(insn 412 411 413 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fede334c360 *.LC18>)) sequenceupdate.c:179 -1
     (nil))
(insn 413 412 414 51 (set (reg:DI 5 di)
        (reg/f:DI 163 [ D.5438 ])) sequenceupdate.c:179 -1
     (nil))
(call_insn/i 414 413 415 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fede37890d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:179 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 415 414 416 51 (set (reg:SI 164 [ D.5439 ])
        (reg:SI 0 ax)) sequenceupdate.c:179 -1
     (nil))
(insn 416 415 417 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 164 [ D.5439 ])
            (const_int 0 [0]))) sequenceupdate.c:179 -1
     (nil))
(jump_insn 417 416 418 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 426)
            (pc))) sequenceupdate.c:179 -1
     (nil)
 -> 426)
(note 418 417 419 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 419 418 420 52 (set (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fede3551090 verbose>) [0 verbose+0 S4 A32])
        (const_int 1 [0x1])) sequenceupdate.c:180 -1
     (nil))
(insn 420 419 421 52 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fede334c3f0 *.LC19>)) sequenceupdate.c:181 -1
     (nil))
(insn 421 420 422 52 (set (reg:SI 4 si)
        (const_int 1 [0x1])) sequenceupdate.c:181 -1
     (nil))
(insn 422 421 423 52 (set (reg:DI 5 di)
        (const_int 0 [0])) sequenceupdate.c:181 -1
     (nil))
(call_insn 423 422 424 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7fede36f5000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:181 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 424 423 425 52 (set (pc)
        (label_ref 439)) -1
     (nil)
 -> 439)
(barrier 425 424 426)
(code_label 426 425 427 53 32 "" [1 uses])
(note 427 426 428 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 428 427 429 53 (set (reg:SI 245)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:184 -1
     (nil))
(insn 429 428 430 53 (set (reg:DI 165 [ D.5436 ])
        (sign_extend:DI (reg:SI 245))) sequenceupdate.c:184 -1
     (nil))
(insn 430 429 431 53 (parallel [
            (set (reg:DI 166 [ D.5436 ])
                (ashift:DI (reg:DI 165 [ D.5436 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:184 -1
     (nil))
(insn 431 430 432 53 (set (reg/f:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])) sequenceupdate.c:184 -1
     (nil))
(insn 432 431 433 53 (parallel [
            (set (reg/f:DI 167 [ D.5437 ])
                (plus:DI (reg:DI 166 [ D.5436 ])
                    (reg/f:DI 246)))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:184 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2192 [0xfffffffffffff770])) [0 argv+0 S8 A64])
            (reg:DI 166 [ D.5436 ]))
        (nil)))
(insn 433 432 434 53 (set (reg/f:DI 168 [ D.5438 ])
        (mem/f:DI (reg/f:DI 167 [ D.5437 ]) [0 *_182+0 S8 A64])) sequenceupdate.c:184 -1
     (nil))
(insn 434 433 435 53 (set (reg:DI 4 si)
        (reg/f:DI 168 [ D.5438 ])) sequenceupdate.c:184 -1
     (nil))
(insn 435 434 436 53 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fede334c480 *.LC20>)) sequenceupdate.c:184 -1
     (nil))
(insn 436 435 437 53 (set (reg:QI 0 ax)
        (const_int 0 [0])) sequenceupdate.c:184 -1
     (nil))
(call_insn 437 436 438 53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fede378fca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:184 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(call_insn 438 437 439 53 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fede36fe000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) sequenceupdate.c:185 -1
     (nil)
    (nil))
(code_label 439 438 440 54 6 "" [17 uses])
(note 440 439 441 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 441 440 442 54 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:79 -1
     (nil))
(code_label 442 441 443 55 2 "" [1 uses])
(note 443 442 444 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 444 443 445 55 (set (reg:SI 247)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2136 [0xfffffffffffff7a8])) [0 i+0 S4 A32])) sequenceupdate.c:79 -1
     (nil))
(insn 445 444 446 55 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 247)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2180 [0xfffffffffffff77c])) [0 argc+0 S4 A32]))) sequenceupdate.c:79 -1
     (nil))
(jump_insn 446 445 447 55 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 451)
            (pc))) sequenceupdate.c:79 -1
     (nil)
 -> 451)
(note 447 446 449 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 449 447 450 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) sequenceupdate.c:79 -1
     (nil))
(jump_insn 450 449 451 56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 448)
            (pc))) sequenceupdate.c:79 -1
     (nil)
 -> 448)
(code_label 451 450 452 57 33 "" [1 uses])
(note 452 451 453 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 454 57 (set (reg:SI 169 [ D.5440 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2168 [0xfffffffffffff788])) [0 sequenceHandle+0 S4 A64])) sequenceupdate.c:188 -1
     (nil))
(insn 454 453 455 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 169 [ D.5440 ])
            (const_int 0 [0]))) sequenceupdate.c:188 -1
     (nil))
(jump_insn 455 454 456 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 460)
            (pc))) sequenceupdate.c:188 -1
     (nil)
 -> 460)
(note 456 455 457 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 457 456 458 58 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fede334c510 *.LC21>)) sequenceupdate.c:189 -1
     (nil))
(call_insn 458 457 459 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:189 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 459 458 460 58 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fede36fe000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) sequenceupdate.c:190 -1
     (nil)
    (nil))
(code_label 460 459 461 59 35 "" [1 uses])
(note 461 460 462 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 462 461 463 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2080 [0xfffffffffffff7e0])) [0 inFilename+0 S8 A64])
            (const_int 0 [0]))) sequenceupdate.c:192 -1
     (nil))
(jump_insn 463 462 464 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 468)
            (pc))) sequenceupdate.c:192 -1
     (nil)
 -> 468)
(note 464 463 465 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 465 464 466 60 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fede334c5a0 *.LC22>)) sequenceupdate.c:193 -1
     (nil))
(call_insn 466 465 467 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:193 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 467 466 468 60 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fede36fe000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) sequenceupdate.c:194 -1
     (nil)
    (nil))
(code_label 468 467 469 61 36 "" [1 uses])
(note 469 468 470 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 470 469 471 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) sequenceupdate.c:196 -1
     (nil))
(jump_insn 471 470 472 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 482)
            (pc))) sequenceupdate.c:196 -1
     (nil)
 -> 482)
(note 472 471 473 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 473 472 474 62 (set (reg:DI 248)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2080 [0xfffffffffffff7e0])) [0 inFilename+0 S8 A64])) sequenceupdate.c:197 -1
     (nil))
(insn 474 473 475 62 (parallel [
            (set (reg:DI 249)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2120 [0xfffffffffffff7b8])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:197 -1
     (nil))
(insn 475 474 476 62 (parallel [
            (set (reg:DI 250)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2112 [0xfffffffffffff7c0])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:197 -1
     (nil))
(insn 476 475 477 62 (set (reg:DI 1 dx)
        (reg:DI 248)) sequenceupdate.c:197 -1
     (nil))
(insn 477 476 478 62 (set (reg:DI 4 si)
        (reg:DI 249)) sequenceupdate.c:197 -1
     (nil))
(insn 478 477 479 62 (set (reg:DI 5 di)
        (reg:DI 250)) sequenceupdate.c:197 -1
     (nil))
(call_insn 479 478 480 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_ReadBinaryFile") [flags 0x41]  <function_decl 0x7fede36f5948 TSS_File_ReadBinaryFile>) [0 TSS_File_ReadBinaryFile S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:197 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 480 479 481 62 (set (reg:SI 251)
        (reg:SI 0 ax)) sequenceupdate.c:197 -1
     (nil))
(insn 481 480 482 62 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])
        (reg:SI 251)) sequenceupdate.c:197 -1
     (nil))
(code_label 482 481 483 63 37 "" [1 uses])
(note 483 482 484 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 484 483 485 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) sequenceupdate.c:201 -1
     (nil))
(jump_insn 485 484 486 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 498)
            (pc))) sequenceupdate.c:201 -1
     (nil)
 -> 498)
(note 486 485 487 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 487 486 488 64 (set (reg:DI 170 [ D.5436 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 length+0 S8 A64])) sequenceupdate.c:202 -1
     (nil))
(insn 488 487 489 64 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 170 [ D.5436 ])
            (const_int 2048 [0x800]))) sequenceupdate.c:202 -1
     (nil))
(jump_insn 489 488 490 64 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 498)
            (pc))) sequenceupdate.c:202 -1
     (nil)
 -> 498)
(note 490 489 491 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 491 490 492 65 (set (reg:DI 171 [ D.5436 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 length+0 S8 A64])) sequenceupdate.c:203 -1
     (nil))
(insn 492 491 493 65 (set (reg:SI 172 [ D.5440 ])
        (subreg:SI (reg:DI 171 [ D.5436 ]) 0)) sequenceupdate.c:203 -1
     (nil))
(insn 493 492 494 65 (set (reg:SI 4 si)
        (reg:SI 172 [ D.5440 ])) sequenceupdate.c:203 -1
     (nil))
(insn 494 493 495 65 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fede334c630 *.LC23>)) sequenceupdate.c:203 -1
     (nil))
(insn 495 494 496 65 (set (reg:QI 0 ax)
        (const_int 0 [0])) sequenceupdate.c:203 -1
     (nil))
(call_insn 496 495 497 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fede378fca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:203 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 497 496 498 65 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])
        (const_int 720900 [0xb0004])) sequenceupdate.c:204 -1
     (nil))
(code_label 498 497 499 66 38 "" [2 uses])
(note 499 498 500 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 501 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) sequenceupdate.c:207 -1
     (nil))
(jump_insn 501 500 502 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 516)
            (pc))) sequenceupdate.c:207 -1
     (nil)
 -> 516)
(note 502 501 503 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 503 502 504 67 (set (reg:SI 173 [ D.5440 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2168 [0xfffffffffffff788])) [0 sequenceHandle+0 S4 A64])) sequenceupdate.c:209 -1
     (nil))
(insn 504 503 505 67 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2064 [0xfffffffffffff7f0])) [0 in.sequenceHandle+0 S4 A64])
        (reg:SI 173 [ D.5440 ])) sequenceupdate.c:209 -1
     (nil))
(insn 505 504 506 67 (set (reg:DI 174 [ D.5436 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 length+0 S8 A64])) sequenceupdate.c:212 -1
     (nil))
(insn 506 505 507 67 (set (reg:HI 175 [ D.5441 ])
        (subreg:HI (reg:DI 174 [ D.5436 ]) 0)) sequenceupdate.c:212 -1
     (nil))
(insn 507 506 508 67 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2060 [0xfffffffffffff7f4])) [0 in.buffer.t.size+0 S2 A32])
        (reg:HI 175 [ D.5441 ])) sequenceupdate.c:212 -1
     (nil))
(insn 508 507 509 67 (set (reg:DI 176 [ D.5436 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2120 [0xfffffffffffff7b8])) [0 length+0 S8 A64])) sequenceupdate.c:213 -1
     (nil))
(insn 509 508 510 67 (set (reg/f:DI 177 [ D.5442 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 buffer+0 S8 A64])) sequenceupdate.c:213 -1
     (nil))
(insn 510 509 511 67 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2064 [0xfffffffffffff7f0])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:213 -1
     (nil))
(insn 511 510 512 67 (parallel [
            (set (reg:DI 253)
                (plus:DI (reg:DI 252)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:213 -1
     (nil))
(insn 512 511 513 67 (set (reg:DI 1 dx)
        (reg:DI 176 [ D.5436 ])) sequenceupdate.c:213 -1
     (nil))
(insn 513 512 514 67 (set (reg:DI 4 si)
        (reg/f:DI 177 [ D.5442 ])) sequenceupdate.c:213 -1
     (nil))
(insn 514 513 515 67 (set (reg:DI 5 di)
        (reg:DI 253)) sequenceupdate.c:213 -1
     (nil))
(call_insn 515 514 516 67 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fede3785e58 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:213 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 516 515 517 68 39 "" [1 uses])
(note 517 516 518 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 518 517 519 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) sequenceupdate.c:216 -1
     (nil))
(jump_insn 519 518 520 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 526)
            (pc))) sequenceupdate.c:216 -1
     (nil)
 -> 526)
(note 520 519 521 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 521 520 522 69 (parallel [
            (set (reg:DI 254)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2128 [0xfffffffffffff7b0])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:217 -1
     (nil))
(insn 522 521 523 69 (set (reg:DI 5 di)
        (reg:DI 254)) sequenceupdate.c:217 -1
     (nil))
(call_insn 523 522 524 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Create") [flags 0x41]  <function_decl 0x7fede36edca8 TSS_Create>) [0 TSS_Create S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:217 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 524 523 525 69 (set (reg:SI 255)
        (reg:SI 0 ax)) sequenceupdate.c:217 -1
     (nil))
(insn 525 524 526 69 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])
        (reg:SI 255)) sequenceupdate.c:217 -1
     (nil))
(code_label 526 525 527 70 40 "" [1 uses])
(note 527 526 528 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 528 527 529 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) sequenceupdate.c:220 -1
     (nil))
(jump_insn 529 528 530 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 562)
            (pc))) sequenceupdate.c:220 -1
     (nil)
 -> 562)
(note 530 529 531 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 531 530 532 71 (set (reg:SI 178 [ D.5440 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2144 [0xfffffffffffff7a0])) [0 sessionAttributes2+0 S4 A64])) sequenceupdate.c:221 -1
     (nil))
(insn 532 531 533 71 (set (reg:SI 179 [ D.5440 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2148 [0xfffffffffffff79c])) [0 sessionHandle2+0 S4 A32])) sequenceupdate.c:221 -1
     (nil))
(insn 533 532 534 71 (set (reg:SI 180 [ D.5440 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2152 [0xfffffffffffff798])) [0 sessionAttributes1+0 S4 A64])) sequenceupdate.c:221 -1
     (nil))
(insn 534 533 535 71 (set (reg:SI 181 [ D.5440 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2156 [0xfffffffffffff794])) [0 sessionHandle1+0 S4 A32])) sequenceupdate.c:221 -1
     (nil))
(insn 535 534 536 71 (set (reg:SI 182 [ D.5440 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2160 [0xfffffffffffff790])) [0 sessionAttributes0+0 S4 A64])) sequenceupdate.c:221 -1
     (nil))
(insn 536 535 537 71 (set (reg:SI 183 [ D.5440 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2164 [0xfffffffffffff78c])) [0 sessionHandle0+0 S4 A32])) sequenceupdate.c:221 -1
     (nil))
(insn 537 536 538 71 (set (reg/f:DI 184 [ D.5443 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2128 [0xfffffffffffff7b0])) [0 tssContext+0 S8 A64])) sequenceupdate.c:221 -1
     (nil))
(insn 538 537 539 71 (parallel [
            (set (reg:DI 256)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2064 [0xfffffffffffff7f0])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:221 -1
     (nil))
(insn 539 538 540 71 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:221 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 540 539 541 71 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) sequenceupdate.c:221 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 541 540 542 71 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) sequenceupdate.c:221 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 542 541 543 71 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1073741831 [0x40000007])) sequenceupdate.c:221 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 543 542 544 71 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 178 [ D.5440 ])) sequenceupdate.c:221 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 544 543 545 71 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) sequenceupdate.c:221 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 545 544 546 71 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 179 [ D.5440 ])) sequenceupdate.c:221 -1
     (expr_list:REG_ARGS_SIZE (const_int 56 [0x38])
        (nil)))
(insn 546 545 547 71 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 180 [ D.5440 ])) sequenceupdate.c:221 -1
     (expr_list:REG_ARGS_SIZE (const_int 64 [0x40])
        (nil)))
(insn 547 546 548 71 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) sequenceupdate.c:221 -1
     (expr_list:REG_ARGS_SIZE (const_int 72 [0x48])
        (nil)))
(insn 548 547 549 71 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 181 [ D.5440 ])) sequenceupdate.c:221 -1
     (expr_list:REG_ARGS_SIZE (const_int 80 [0x50])
        (nil)))
(insn 549 548 550 71 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 182 [ D.5440 ])) sequenceupdate.c:221 -1
     (expr_list:REG_ARGS_SIZE (const_int 88 [0x58])
        (nil)))
(insn 550 549 551 71 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [0 sequencePassword+0 S8 A64])) sequenceupdate.c:221 -1
     (expr_list:REG_ARGS_SIZE (const_int 96 [0x60])
        (nil)))
(insn 551 550 552 71 (set (reg:SI 38 r9)
        (reg:SI 183 [ D.5440 ])) sequenceupdate.c:221 -1
     (nil))
(insn 552 551 553 71 (set (reg:SI 37 r8)
        (const_int 348 [0x15c])) sequenceupdate.c:221 -1
     (nil))
(insn 553 552 554 71 (set (reg:DI 2 cx)
        (const_int 0 [0])) sequenceupdate.c:221 -1
     (nil))
(insn 554 553 555 71 (set (reg:DI 1 dx)
        (reg:DI 256)) sequenceupdate.c:221 -1
     (nil))
(insn 555 554 556 71 (set (reg:DI 4 si)
        (const_int 0 [0])) sequenceupdate.c:221 -1
     (nil))
(insn 556 555 557 71 (set (reg:DI 5 di)
        (reg/f:DI 184 [ D.5443 ])) sequenceupdate.c:221 -1
     (nil))
(insn 557 556 558 71 (set (reg:QI 0 ax)
        (const_int 0 [0])) sequenceupdate.c:221 -1
     (nil))
(call_insn 558 557 559 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fede36ede58 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 96 [0x60]))) sequenceupdate.c:221 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 559 558 560 71 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:221 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 560 559 561 71 (set (reg:SI 257)
        (reg:SI 0 ax)) sequenceupdate.c:221 -1
     (nil))
(insn 561 560 562 71 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])
        (reg:SI 257)) sequenceupdate.c:221 -1
     (nil))
(code_label 562 561 563 72 41 "" [1 uses])
(note 563 562 564 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 564 563 565 72 (set (reg/f:DI 185 [ D.5443 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2128 [0xfffffffffffff7b0])) [0 tssContext+0 S8 A64])) sequenceupdate.c:232 -1
     (nil))
(insn 565 564 566 72 (set (reg:DI 5 di)
        (reg/f:DI 185 [ D.5443 ])) sequenceupdate.c:232 -1
     (nil))
(call_insn 566 565 567 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Delete") [flags 0x41]  <function_decl 0x7fede36edd80 TSS_Delete>) [0 TSS_Delete S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:232 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 567 566 568 72 (set (reg:SI 258)
        (reg:SI 0 ax)) sequenceupdate.c:232 -1
     (nil))
(insn 568 567 569 72 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2132 [0xfffffffffffff7ac])) [0 rc1+0 S4 A32])
        (reg:SI 258)) sequenceupdate.c:232 -1
     (nil))
(insn 569 568 570 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) sequenceupdate.c:233 -1
     (nil))
(jump_insn 570 569 571 72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 574)
            (pc))) sequenceupdate.c:233 -1
     (nil)
 -> 574)
(note 571 570 572 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 572 571 573 73 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2132 [0xfffffffffffff7ac])) [0 rc1+0 S4 A32])) sequenceupdate.c:234 -1
     (nil))
(insn 573 572 574 73 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])
        (reg:SI 259)) sequenceupdate.c:234 -1
     (nil))
(code_label 574 573 575 74 42 "" [1 uses])
(note 575 574 576 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 576 575 577 74 (set (reg/f:DI 186 [ D.5442 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2112 [0xfffffffffffff7c0])) [0 buffer+0 S8 A64])) sequenceupdate.c:237 -1
     (nil))
(insn 577 576 578 74 (set (reg:DI 5 di)
        (reg/f:DI 186 [ D.5442 ])) sequenceupdate.c:237 -1
     (nil))
(call_insn 578 577 579 74 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fede37a5e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sequenceupdate.c:237 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 579 578 580 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) sequenceupdate.c:238 -1
     (nil))
(jump_insn 580 579 581 74 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 592)
            (pc))) sequenceupdate.c:238 -1
     (nil)
 -> 592)
(note 581 580 582 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 582 581 583 75 (set (reg:SI 187 [ D.5439 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fede3551090 verbose>) [0 verbose+0 S4 A32])) sequenceupdate.c:239 -1
     (nil))
(insn 583 582 584 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 187 [ D.5439 ])
            (const_int 0 [0]))) sequenceupdate.c:239 -1
     (nil))
(jump_insn 584 583 585 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 618)
            (pc))) sequenceupdate.c:239 612 {*jcc_1}
     (nil)
 -> 618)
(note 585 584 586 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 586 585 587 76 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fede334c6c0 *.LC24>)) sequenceupdate.c:239 -1
     (nil))
(call_insn 587 586 590 76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:239 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 590 587 591 76 (set (pc)
        (label_ref 618)) -1
     (nil)
 -> 618)
(barrier 591 590 592)
(code_label 592 591 593 78 43 "" [1 uses])
(note 593 592 594 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 594 593 595 78 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])) sequenceupdate.c:245 -1
     (nil))
(insn 595 594 596 78 (set (reg:SI 4 si)
        (reg:SI 260)) sequenceupdate.c:245 -1
     (nil))
(insn 596 595 597 78 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fede334c750 *.LC25>)) sequenceupdate.c:245 -1
     (nil))
(insn 597 596 598 78 (set (reg:QI 0 ax)
        (const_int 0 [0])) sequenceupdate.c:245 -1
     (nil))
(call_insn 598 597 599 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fede378fca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:245 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 599 598 600 78 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])) sequenceupdate.c:246 -1
     (nil))
(insn 600 599 601 78 (parallel [
            (set (reg:DI 262)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2088 [0xfffffffffffff7d8])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:246 -1
     (nil))
(insn 601 600 602 78 (parallel [
            (set (reg:DI 263)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:246 -1
     (nil))
(insn 602 601 603 78 (parallel [
            (set (reg:DI 264)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2104 [0xfffffffffffff7c8])))
            (clobber (reg:CC 17 flags))
        ]) sequenceupdate.c:246 -1
     (nil))
(insn 603 602 604 78 (set (reg:SI 2 cx)
        (reg:SI 261)) sequenceupdate.c:246 -1
     (nil))
(insn 604 603 605 78 (set (reg:DI 1 dx)
        (reg:DI 262)) sequenceupdate.c:246 -1
     (nil))
(insn 605 604 606 78 (set (reg:DI 4 si)
        (reg:DI 263)) sequenceupdate.c:246 -1
     (nil))
(insn 606 605 607 78 (set (reg:DI 5 di)
        (reg:DI 264)) sequenceupdate.c:246 -1
     (nil))
(call_insn 607 606 608 78 (call (mem:QI (symbol_ref:DI ("TSS_ResponseCode_toString") [flags 0x41]  <function_decl 0x7fede36f5e58 TSS_ResponseCode_toString>) [0 TSS_ResponseCode_toString S1 A8])
        (const_int 0 [0])) sequenceupdate.c:246 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 608 607 609 78 (set (reg/f:DI 188 [ D.5444 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2088 [0xfffffffffffff7d8])) [0 num+0 S8 A64])) sequenceupdate.c:247 -1
     (nil))
(insn 609 608 610 78 (set (reg/f:DI 189 [ D.5444 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [0 submsg+0 S8 A64])) sequenceupdate.c:247 -1
     (nil))
(insn 610 609 611 78 (set (reg/f:DI 190 [ D.5444 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2104 [0xfffffffffffff7c8])) [0 msg+0 S8 A64])) sequenceupdate.c:247 -1
     (nil))
(insn 611 610 612 78 (set (reg:DI 2 cx)
        (reg/f:DI 188 [ D.5444 ])) sequenceupdate.c:247 -1
     (nil))
(insn 612 611 613 78 (set (reg:DI 1 dx)
        (reg/f:DI 189 [ D.5444 ])) sequenceupdate.c:247 -1
     (nil))
(insn 613 612 614 78 (set (reg:DI 4 si)
        (reg/f:DI 190 [ D.5444 ])) sequenceupdate.c:247 -1
     (nil))
(insn 614 613 615 78 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fede334c7e0 *.LC26>)) sequenceupdate.c:247 -1
     (nil))
(insn 615 614 616 78 (set (reg:QI 0 ax)
        (const_int 0 [0])) sequenceupdate.c:247 -1
     (nil))
(call_insn 616 615 617 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fede378fca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:247 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 617 616 618 78 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) sequenceupdate.c:248 -1
     (nil))
(code_label 618 617 619 79 45 "" [2 uses])
(note 619 618 620 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 620 619 623 79 (set (reg:SI 191 [ D.5439 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2140 [0xfffffffffffff7a4])) [0 rc+0 S4 A32])) sequenceupdate.c:250 -1
     (nil))
(insn 623 620 627 79 (set (reg:SI 192 [ <retval> ])
        (reg:SI 191 [ D.5439 ])) -1
     (nil))
(insn 627 623 628 79 (set (reg/i:SI 0 ax)
        (reg:SI 192 [ <retval> ])) sequenceupdate.c:251 -1
     (nil))
(insn 628 627 629 79 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.5445+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) sequenceupdate.c:251 -1
     (nil))
(jump_insn 629 628 635 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 632)
            (pc))) sequenceupdate.c:251 -1
     (nil)
 -> 632)
(note 635 629 630 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(call_insn 630 635 631 82 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fede36fe510 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) sequenceupdate.c:251 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 631 630 632)
(code_label 632 631 636 83 47 "" [1 uses])
(note 636 632 633 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 633 636 0 83 (use (reg/i:SI 0 ax)) sequenceupdate.c:251 -1
     (nil))

;; Function printUsage (printUsage, funcdef_no=3, decl_uid=5213, cgraph_uid=3, symbol_order=4)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) sequenceupdate.c:255 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fede3792000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:255 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fede3369360 *.LC27>)) sequenceupdate.c:256 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:256 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) sequenceupdate.c:257 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fede3792000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:257 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fede33693f0 *.LC28>)) sequenceupdate.c:258 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:258 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) sequenceupdate.c:259 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fede3792000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:259 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fede3369480 *.LC29>)) sequenceupdate.c:260 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:260 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7fede3369510 *.LC30>)) sequenceupdate.c:261 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:261 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7fede33695a0 *.LC31>)) sequenceupdate.c:262 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:262 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) sequenceupdate.c:263 -1
     (nil))
(call_insn 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fede3792000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:263 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7fede3369630 *.LC32>)) sequenceupdate.c:264 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:264 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7fede33696c0 *.LC33>)) sequenceupdate.c:265 -1
     (nil))
(call_insn 26 25 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:265 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fede3369750 *.LC34>)) sequenceupdate.c:266 -1
     (nil))
(call_insn 28 27 29 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fede3792360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sequenceupdate.c:266 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) sequenceupdate.c:267 -1
     (nil))
(call_insn 30 29 31 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fede37a5000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) sequenceupdate.c:267 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 31 30 0)
