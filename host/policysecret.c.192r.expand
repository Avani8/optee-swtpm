
;; Function main (main, funcdef_no=2, decl_uid=6996, cgraph_uid=2, symbol_order=3)

Partition 11: size 404 align 16
	in
Partition 12: size 272 align 16
	out
Partition 8: size 8 align 8
	entityPassword_30
Partition 7: size 8 align 8
	timeoutFilename_27
Partition 6: size 8 align 8
	ticketFilename_24
Partition 4: size 8 align 8
	policyRefFilename_18
Partition 3: size 8 align 8
	cpHashAFilename_15
Partition 2: size 8 align 8
	nonceTPMFilename_12
Partition 23: size 8 align 8
	num
Partition 22: size 8 align 8
	submsg
Partition 21: size 8 align 8
	msg
Partition 10: size 8 align 8
	tssContext
Partition 9: size 4 align 4
	rc1_326
Partition 5: size 4 align 4
	expiration_21
Partition 1: size 4 align 4
	i_10
Partition 0: size 4 align 4
	rc_1
Partition 20: size 4 align 4
	sessionAttributes2
Partition 19: size 4 align 4
	sessionHandle2
Partition 18: size 4 align 4
	sessionAttributes1
Partition 17: size 4 align 4
	sessionHandle1
Partition 16: size 4 align 4
	sessionAttributes0
Partition 15: size 4 align 4
	sessionHandle0
Partition 14: size 4 align 4
	policySession
Partition 13: size 4 align 4
	authHandle

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; Generating RTL for gimple basic block 110

;; Generating RTL for gimple basic block 111

;; Generating RTL for gimple basic block 112

;; Generating RTL for gimple basic block 113

;; Generating RTL for gimple basic block 114

;; Generating RTL for gimple basic block 115

;; Generating RTL for gimple basic block 116

;; Generating RTL for gimple basic block 117

;; Generating RTL for gimple basic block 118

;; Generating RTL for gimple basic block 119

;; Generating RTL for gimple basic block 120

;; Generating RTL for gimple basic block 121


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 72 from 8 to 84.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Redirecting jump 115 from 13 to 84.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Redirecting jump 153 from 18 to 84.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Redirecting jump 191 from 23 to 84.
Merging block 23 into block 22...
Merged blocks 22 and 23.
Merged 22 and 23 without moving.
Redirecting jump 229 from 28 to 84.
Merging block 28 into block 27...
Merged blocks 27 and 28.
Merged 27 and 28 without moving.
Redirecting jump 270 from 33 to 84.
Merging block 33 into block 32...
Merged blocks 32 and 33.
Merged 32 and 33 without moving.
Redirecting jump 308 from 38 to 84.
Merging block 38 into block 37...
Merged blocks 37 and 38.
Merged 37 and 38 without moving.
Redirecting jump 346 from 43 to 84.
Merging block 43 into block 42...
Merged blocks 42 and 43.
Merged 42 and 43 without moving.
Redirecting jump 384 from 48 to 84.
Merging block 48 into block 47...
Merged blocks 47 and 48.
Merged 47 and 48 without moving.
Edge 54->56 redirected to 84
Merging block 56 into block 55...
Merged blocks 55 and 56.
Merged 55 and 56 without moving.
Redirecting jump 462 from 58 to 84.
Merging block 58 into block 57...
Merged blocks 57 and 58.
Merged 57 and 58 without moving.
Edge 64->66 redirected to 84
Merging block 66 into block 65...
Merged blocks 65 and 66.
Merged 65 and 66 without moving.
Redirecting jump 540 from 68 to 84.
Merging block 68 into block 67...
Merged blocks 67 and 68.
Merged 67 and 68 without moving.
Edge 74->76 redirected to 84
Merging block 76 into block 75...
Merged blocks 75 and 76.
Merged 75 and 76 without moving.
Redirecting jump 618 from 78 to 84.
Merging block 78 into block 77...
Merged blocks 77 and 78.
Merged 77 and 78 without moving.
Edge 117->119 redirected to 121
Merging block 119 into block 118...
Merged blocks 118 and 119.
Merged 118 and 119 without moving.
Merging block 122 into block 121...
Merged blocks 121 and 122.
Merged 121 and 122 without moving.
Removing jump 922.
Merging block 123 into block 121...
Merged blocks 121 and 123.
Merged 121 and 123 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) policysecret.c:59 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) policysecret.c:59 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.7326+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:59 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
        (const_int 0 [0])) policysecret.c:60 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -768 [0xfffffffffffffd00])) [0 tssContext+0 S8 A64])
        (const_int 0 [0])) policysecret.c:62 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -816 [0xfffffffffffffcd0])) [0 authHandle+0 S4 A64])
        (const_int 0 [0])) policysecret.c:65 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -812 [0xfffffffffffffcd4])) [0 policySession+0 S4 A32])
        (const_int 0 [0])) policysecret.c:66 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -736 [0xfffffffffffffd20])) [0 nonceTPMFilename+0 S8 A64])
        (const_int 0 [0])) policysecret.c:67 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -728 [0xfffffffffffffd28])) [0 cpHashAFilename+0 S8 A64])
        (const_int 0 [0])) policysecret.c:68 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -720 [0xfffffffffffffd30])) [0 policyRefFilename+0 S8 A64])
        (const_int 0 [0])) policysecret.c:69 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -776 [0xfffffffffffffcf8])) [0 expiration+0 S4 A32])
        (const_int 0 [0])) policysecret.c:70 -1
     (nil))
(insn 16 15 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -712 [0xfffffffffffffd38])) [0 ticketFilename+0 S8 A64])
        (const_int 0 [0])) policysecret.c:71 -1
     (nil))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -704 [0xfffffffffffffd40])) [0 timeoutFilename+0 S8 A64])
        (const_int 0 [0])) policysecret.c:72 -1
     (nil))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -696 [0xfffffffffffffd48])) [0 entityPassword+0 S8 A64])
        (const_int 0 [0])) policysecret.c:73 -1
     (nil))
(insn 19 18 20 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -808 [0xfffffffffffffcd8])) [0 sessionHandle0+0 S4 A64])
        (const_int 1073741833 [0x40000009])) policysecret.c:74 -1
     (nil))
(insn 20 19 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -804 [0xfffffffffffffcdc])) [0 sessionAttributes0+0 S4 A32])
        (const_int 0 [0])) policysecret.c:75 -1
     (nil))
(insn 21 20 22 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -800 [0xfffffffffffffce0])) [0 sessionHandle1+0 S4 A64])
        (const_int 1073741831 [0x40000007])) policysecret.c:76 -1
     (nil))
(insn 22 21 23 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -796 [0xfffffffffffffce4])) [0 sessionAttributes1+0 S4 A32])
        (const_int 0 [0])) policysecret.c:77 -1
     (nil))
(insn 23 22 24 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -792 [0xfffffffffffffce8])) [0 sessionHandle2+0 S4 A64])
        (const_int 1073741831 [0x40000007])) policysecret.c:78 -1
     (nil))
(insn 24 23 25 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -788 [0xfffffffffffffcec])) [0 sessionAttributes2+0 S4 A32])
        (const_int 0 [0])) policysecret.c:79 -1
     (nil))
(insn 25 24 26 2 (set (reg/f:DI 87 [ D.7317 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7fbac55355a0 stdout>) [0 stdout+0 S8 A64])) policysecret.c:81 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) policysecret.c:81 -1
     (nil))
(insn 27 26 28 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) policysecret.c:81 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 4 si)
        (const_int 0 [0])) policysecret.c:81 -1
     (nil))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.7317 ])) policysecret.c:81 -1
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("setvbuf") [flags 0x41]  <function_decl 0x7fbac55751b0 setvbuf>) [0 setvbuf S1 A8])
            (const_int 0 [0]))) policysecret.c:81 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 31 30 32 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fbac50f2870 *.LC0>)) policysecret.c:82 -1
     (nil))
(insn 32 31 33 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) policysecret.c:82 -1
     (nil))
(insn 33 32 34 2 (set (reg:DI 5 di)
        (const_int 0 [0])) policysecret.c:82 -1
     (nil))
(call_insn 34 33 35 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7fbac53e9000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) policysecret.c:82 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 35 34 36 2 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in.nonceTPM.b.size+0 S2 A64])
        (const_int 0 [0])) policysecret.c:86 -1
     (nil))
(insn 36 35 37 2 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -278 [0xfffffffffffffeea])) [0 in.cpHashA.b.size+0 S2 A16])
        (const_int 0 [0])) policysecret.c:87 -1
     (nil))
(insn 37 36 38 2 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -148 [0xffffffffffffff6c])) [0 in.policyRef.b.size+0 S2 A32])
        (const_int 0 [0])) policysecret.c:88 -1
     (nil))
(insn 38 37 39 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) policysecret.c:90 -1
     (nil))
(jump_insn 39 38 40 2 (set (pc)
        (label_ref 685)) policysecret.c:90 -1
     (nil)
 -> 685)
(barrier 40 39 691)
(code_label 691 40 41 4 52 "" [1 uses])
(note 41 691 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 4 (set (reg:SI 239)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:91 -1
     (nil))
(insn 43 42 44 4 (set (reg:DI 88 [ D.7318 ])
        (sign_extend:DI (reg:SI 239))) policysecret.c:91 -1
     (nil))
(insn 44 43 45 4 (parallel [
            (set (reg:DI 89 [ D.7318 ])
                (ashift:DI (reg:DI 88 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:91 -1
     (nil))
(insn 45 44 46 4 (set (reg/f:DI 240)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:91 -1
     (nil))
(insn 46 45 47 4 (parallel [
            (set (reg/f:DI 90 [ D.7319 ])
                (plus:DI (reg:DI 89 [ D.7318 ])
                    (reg/f:DI 240)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:91 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 89 [ D.7318 ]))
        (nil)))
(insn 47 46 48 4 (set (reg/f:DI 91 [ D.7320 ])
        (mem/f:DI (reg/f:DI 90 [ D.7319 ]) [0 *_95+0 S8 A64])) policysecret.c:91 -1
     (nil))
(insn 48 47 49 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fbac50f2900 *.LC1>)) policysecret.c:91 -1
     (nil))
(insn 49 48 50 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.7320 ])) policysecret.c:91 -1
     (nil))
(call_insn/i 50 49 51 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fbac547d0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysecret.c:91 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 51 50 52 4 (set (reg:SI 92 [ D.7321 ])
        (reg:SI 0 ax)) policysecret.c:91 -1
     (nil))
(insn 52 51 53 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.7321 ])
            (const_int 0 [0]))) policysecret.c:91 -1
     (nil))
(jump_insn 53 52 54 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) policysecret.c:91 -1
     (nil)
 -> 83)
(note 54 53 55 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:92 -1
     (nil))
(insn 56 55 57 5 (set (reg:SI 241)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:93 -1
     (nil))
(insn 57 56 58 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 241)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policysecret.c:93 -1
     (nil))
(jump_insn 58 57 59 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) policysecret.c:93 -1
     (nil)
 -> 74)
(note 59 58 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 6 (set (reg:SI 242)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:94 -1
     (nil))
(insn 61 60 62 6 (set (reg:DI 93 [ D.7318 ])
        (sign_extend:DI (reg:SI 242))) policysecret.c:94 -1
     (nil))
(insn 62 61 63 6 (parallel [
            (set (reg:DI 94 [ D.7318 ])
                (ashift:DI (reg:DI 93 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:94 -1
     (nil))
(insn 63 62 64 6 (set (reg/f:DI 243)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:94 -1
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg/f:DI 95 [ D.7319 ])
                (plus:DI (reg:DI 94 [ D.7318 ])
                    (reg/f:DI 243)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:94 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 94 [ D.7318 ]))
        (nil)))
(insn 65 64 66 6 (set (reg/f:DI 96 [ D.7320 ])
        (mem/f:DI (reg/f:DI 95 [ D.7319 ]) [0 *_101+0 S8 A64])) policysecret.c:94 -1
     (nil))
(insn 66 65 67 6 (parallel [
            (set (reg:DI 244)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:94 -1
     (nil))
(insn 67 66 68 6 (set (reg:DI 1 dx)
        (reg:DI 244)) policysecret.c:94 -1
     (nil))
(insn 68 67 69 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fbac50f2990 *.LC2>)) policysecret.c:94 -1
     (nil))
(insn 69 68 70 6 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.7320 ])) policysecret.c:94 -1
     (nil))
(insn 70 69 71 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysecret.c:94 -1
     (nil))
(call_insn 71 70 72 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fbac5486ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policysecret.c:94 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 72 71 73 6 (set (pc)
        (label_ref:DI 682)) 654 {jump}
     (nil)
 -> 682)
(barrier 73 72 74)
(code_label 74 73 75 7 4 "" [1 uses])
(note 75 74 76 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fbac50f2a20 *.LC3>)) policysecret.c:97 -1
     (nil))
(call_insn 77 76 78 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:97 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 78 77 81 7 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:98 -1
     (nil)
    (nil))
(jump_insn 81 78 82 7 (set (pc)
        (label_ref 682)) -1
     (nil)
 -> 682)
(barrier 82 81 83)
(code_label 83 82 84 9 3 "" [1 uses])
(note 84 83 85 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 9 (set (reg:SI 245)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:101 -1
     (nil))
(insn 86 85 87 9 (set (reg:DI 97 [ D.7318 ])
        (sign_extend:DI (reg:SI 245))) policysecret.c:101 -1
     (nil))
(insn 87 86 88 9 (parallel [
            (set (reg:DI 98 [ D.7318 ])
                (ashift:DI (reg:DI 97 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:101 -1
     (nil))
(insn 88 87 89 9 (set (reg/f:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:101 -1
     (nil))
(insn 89 88 90 9 (parallel [
            (set (reg/f:DI 99 [ D.7319 ])
                (plus:DI (reg:DI 98 [ D.7318 ])
                    (reg/f:DI 246)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:101 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 98 [ D.7318 ]))
        (nil)))
(insn 90 89 91 9 (set (reg/f:DI 100 [ D.7320 ])
        (mem/f:DI (reg/f:DI 99 [ D.7319 ]) [0 *_108+0 S8 A64])) policysecret.c:101 -1
     (nil))
(insn 91 90 92 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fbac50f2ab0 *.LC4>)) policysecret.c:101 -1
     (nil))
(insn 92 91 93 9 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.7320 ])) policysecret.c:101 -1
     (nil))
(call_insn/i 93 92 94 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fbac547d0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysecret.c:101 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 94 93 95 9 (set (reg:SI 101 [ D.7321 ])
        (reg:SI 0 ax)) policysecret.c:101 -1
     (nil))
(insn 95 94 96 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.7321 ])
            (const_int 0 [0]))) policysecret.c:101 -1
     (nil))
(jump_insn 96 95 97 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 126)
            (pc))) policysecret.c:101 -1
     (nil)
 -> 126)
(note 97 96 98 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:102 -1
     (nil))
(insn 99 98 100 10 (set (reg:SI 247)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:103 -1
     (nil))
(insn 100 99 101 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 247)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policysecret.c:103 -1
     (nil))
(jump_insn 101 100 102 10 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) policysecret.c:103 -1
     (nil)
 -> 117)
(note 102 101 103 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 11 (set (reg:SI 248)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:104 -1
     (nil))
(insn 104 103 105 11 (set (reg:DI 102 [ D.7318 ])
        (sign_extend:DI (reg:SI 248))) policysecret.c:104 -1
     (nil))
(insn 105 104 106 11 (parallel [
            (set (reg:DI 103 [ D.7318 ])
                (ashift:DI (reg:DI 102 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:104 -1
     (nil))
(insn 106 105 107 11 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:104 -1
     (nil))
(insn 107 106 108 11 (parallel [
            (set (reg/f:DI 104 [ D.7319 ])
                (plus:DI (reg:DI 103 [ D.7318 ])
                    (reg/f:DI 249)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:104 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 103 [ D.7318 ]))
        (nil)))
(insn 108 107 109 11 (set (reg/f:DI 105 [ D.7320 ])
        (mem/f:DI (reg/f:DI 104 [ D.7319 ]) [0 *_114+0 S8 A64])) policysecret.c:104 -1
     (nil))
(insn 109 108 110 11 (parallel [
            (set (reg:DI 250)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -812 [0xfffffffffffffcd4])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:104 -1
     (nil))
(insn 110 109 111 11 (set (reg:DI 1 dx)
        (reg:DI 250)) policysecret.c:104 -1
     (nil))
(insn 111 110 112 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fbac50f2990 *.LC2>)) policysecret.c:104 -1
     (nil))
(insn 112 111 113 11 (set (reg:DI 5 di)
        (reg/f:DI 105 [ D.7320 ])) policysecret.c:104 -1
     (nil))
(insn 113 112 114 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysecret.c:104 -1
     (nil))
(call_insn 114 113 115 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fbac5486ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policysecret.c:104 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 115 114 116 11 (set (pc)
        (label_ref:DI 682)) 654 {jump}
     (nil)
 -> 682)
(barrier 116 115 117)
(code_label 117 116 118 12 8 "" [1 uses])
(note 118 117 119 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fbac50f2b40 *.LC5>)) policysecret.c:107 -1
     (nil))
(call_insn 120 119 121 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:107 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 121 120 124 12 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:108 -1
     (nil)
    (nil))
(jump_insn 124 121 125 12 (set (pc)
        (label_ref 682)) -1
     (nil)
 -> 682)
(barrier 125 124 126)
(code_label 126 125 127 14 7 "" [1 uses])
(note 127 126 128 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 14 (set (reg:SI 251)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:111 -1
     (nil))
(insn 129 128 130 14 (set (reg:DI 106 [ D.7318 ])
        (sign_extend:DI (reg:SI 251))) policysecret.c:111 -1
     (nil))
(insn 130 129 131 14 (parallel [
            (set (reg:DI 107 [ D.7318 ])
                (ashift:DI (reg:DI 106 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:111 -1
     (nil))
(insn 131 130 132 14 (set (reg/f:DI 252)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:111 -1
     (nil))
(insn 132 131 133 14 (parallel [
            (set (reg/f:DI 108 [ D.7319 ])
                (plus:DI (reg:DI 107 [ D.7318 ])
                    (reg/f:DI 252)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:111 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 107 [ D.7318 ]))
        (nil)))
(insn 133 132 134 14 (set (reg/f:DI 109 [ D.7320 ])
        (mem/f:DI (reg/f:DI 108 [ D.7319 ]) [0 *_121+0 S8 A64])) policysecret.c:111 -1
     (nil))
(insn 134 133 135 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fbac50f2bd0 *.LC6>)) policysecret.c:111 -1
     (nil))
(insn 135 134 136 14 (set (reg:DI 5 di)
        (reg/f:DI 109 [ D.7320 ])) policysecret.c:111 -1
     (nil))
(call_insn/i 136 135 137 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fbac547d0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysecret.c:111 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 137 136 138 14 (set (reg:SI 110 [ D.7321 ])
        (reg:SI 0 ax)) policysecret.c:111 -1
     (nil))
(insn 138 137 139 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 110 [ D.7321 ])
            (const_int 0 [0]))) policysecret.c:111 -1
     (nil))
(jump_insn 139 138 140 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 164)
            (pc))) policysecret.c:111 -1
     (nil)
 -> 164)
(note 140 139 141 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:112 -1
     (nil))
(insn 142 141 143 15 (set (reg:SI 253)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:113 -1
     (nil))
(insn 143 142 144 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 253)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policysecret.c:113 -1
     (nil))
(jump_insn 144 143 145 15 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 155)
            (pc))) policysecret.c:113 -1
     (nil)
 -> 155)
(note 145 144 146 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 16 (set (reg:SI 254)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:114 -1
     (nil))
(insn 147 146 148 16 (set (reg:DI 111 [ D.7318 ])
        (sign_extend:DI (reg:SI 254))) policysecret.c:114 -1
     (nil))
(insn 148 147 149 16 (parallel [
            (set (reg:DI 112 [ D.7318 ])
                (ashift:DI (reg:DI 111 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:114 -1
     (nil))
(insn 149 148 150 16 (set (reg/f:DI 255)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:114 -1
     (nil))
(insn 150 149 151 16 (parallel [
            (set (reg/f:DI 113 [ D.7319 ])
                (plus:DI (reg:DI 112 [ D.7318 ])
                    (reg/f:DI 255)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:114 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 112 [ D.7318 ]))
        (nil)))
(insn 151 150 152 16 (set (reg/f:DI 256)
        (mem/f:DI (reg/f:DI 113 [ D.7319 ]) [0 *_127+0 S8 A64])) policysecret.c:114 -1
     (nil))
(insn 152 151 153 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -736 [0xfffffffffffffd20])) [0 nonceTPMFilename+0 S8 A64])
        (reg/f:DI 256)) policysecret.c:114 -1
     (nil))
(jump_insn 153 152 154 16 (set (pc)
        (label_ref:DI 682)) 654 {jump}
     (nil)
 -> 682)
(barrier 154 153 155)
(code_label 155 154 156 17 11 "" [1 uses])
(note 156 155 157 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fbac50f2c60 *.LC7>)) policysecret.c:117 -1
     (nil))
(call_insn 158 157 159 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:117 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 159 158 162 17 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:118 -1
     (nil)
    (nil))
(jump_insn 162 159 163 17 (set (pc)
        (label_ref 682)) -1
     (nil)
 -> 682)
(barrier 163 162 164)
(code_label 164 163 165 19 10 "" [1 uses])
(note 165 164 166 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 19 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:121 -1
     (nil))
(insn 167 166 168 19 (set (reg:DI 114 [ D.7318 ])
        (sign_extend:DI (reg:SI 257))) policysecret.c:121 -1
     (nil))
(insn 168 167 169 19 (parallel [
            (set (reg:DI 115 [ D.7318 ])
                (ashift:DI (reg:DI 114 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:121 -1
     (nil))
(insn 169 168 170 19 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:121 -1
     (nil))
(insn 170 169 171 19 (parallel [
            (set (reg/f:DI 116 [ D.7319 ])
                (plus:DI (reg:DI 115 [ D.7318 ])
                    (reg/f:DI 258)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:121 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 115 [ D.7318 ]))
        (nil)))
(insn 171 170 172 19 (set (reg/f:DI 117 [ D.7320 ])
        (mem/f:DI (reg/f:DI 116 [ D.7319 ]) [0 *_133+0 S8 A64])) policysecret.c:121 -1
     (nil))
(insn 172 171 173 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fbac50f2cf0 *.LC8>)) policysecret.c:121 -1
     (nil))
(insn 173 172 174 19 (set (reg:DI 5 di)
        (reg/f:DI 117 [ D.7320 ])) policysecret.c:121 -1
     (nil))
(call_insn/i 174 173 175 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fbac547d0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysecret.c:121 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 175 174 176 19 (set (reg:SI 118 [ D.7321 ])
        (reg:SI 0 ax)) policysecret.c:121 -1
     (nil))
(insn 176 175 177 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ D.7321 ])
            (const_int 0 [0]))) policysecret.c:121 -1
     (nil))
(jump_insn 177 176 178 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 202)
            (pc))) policysecret.c:121 -1
     (nil)
 -> 202)
(note 178 177 179 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:122 -1
     (nil))
(insn 180 179 181 20 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:123 -1
     (nil))
(insn 181 180 182 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 259)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policysecret.c:123 -1
     (nil))
(jump_insn 182 181 183 20 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 193)
            (pc))) policysecret.c:123 -1
     (nil)
 -> 193)
(note 183 182 184 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 21 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:124 -1
     (nil))
(insn 185 184 186 21 (set (reg:DI 119 [ D.7318 ])
        (sign_extend:DI (reg:SI 260))) policysecret.c:124 -1
     (nil))
(insn 186 185 187 21 (parallel [
            (set (reg:DI 120 [ D.7318 ])
                (ashift:DI (reg:DI 119 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:124 -1
     (nil))
(insn 187 186 188 21 (set (reg/f:DI 261)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:124 -1
     (nil))
(insn 188 187 189 21 (parallel [
            (set (reg/f:DI 121 [ D.7319 ])
                (plus:DI (reg:DI 120 [ D.7318 ])
                    (reg/f:DI 261)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:124 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 120 [ D.7318 ]))
        (nil)))
(insn 189 188 190 21 (set (reg/f:DI 262)
        (mem/f:DI (reg/f:DI 121 [ D.7319 ]) [0 *_139+0 S8 A64])) policysecret.c:124 -1
     (nil))
(insn 190 189 191 21 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -728 [0xfffffffffffffd28])) [0 cpHashAFilename+0 S8 A64])
        (reg/f:DI 262)) policysecret.c:124 -1
     (nil))
(jump_insn 191 190 192 21 (set (pc)
        (label_ref:DI 682)) 654 {jump}
     (nil)
 -> 682)
(barrier 192 191 193)
(code_label 193 192 194 22 14 "" [1 uses])
(note 194 193 195 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fbac50f2d80 *.LC9>)) policysecret.c:127 -1
     (nil))
(call_insn 196 195 197 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:127 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 197 196 200 22 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:128 -1
     (nil)
    (nil))
(jump_insn 200 197 201 22 (set (pc)
        (label_ref 682)) -1
     (nil)
 -> 682)
(barrier 201 200 202)
(code_label 202 201 203 24 13 "" [1 uses])
(note 203 202 204 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 204 203 205 24 (set (reg:SI 263)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:131 -1
     (nil))
(insn 205 204 206 24 (set (reg:DI 122 [ D.7318 ])
        (sign_extend:DI (reg:SI 263))) policysecret.c:131 -1
     (nil))
(insn 206 205 207 24 (parallel [
            (set (reg:DI 123 [ D.7318 ])
                (ashift:DI (reg:DI 122 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:131 -1
     (nil))
(insn 207 206 208 24 (set (reg/f:DI 264)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:131 -1
     (nil))
(insn 208 207 209 24 (parallel [
            (set (reg/f:DI 124 [ D.7319 ])
                (plus:DI (reg:DI 123 [ D.7318 ])
                    (reg/f:DI 264)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:131 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 123 [ D.7318 ]))
        (nil)))
(insn 209 208 210 24 (set (reg/f:DI 125 [ D.7320 ])
        (mem/f:DI (reg/f:DI 124 [ D.7319 ]) [0 *_145+0 S8 A64])) policysecret.c:131 -1
     (nil))
(insn 210 209 211 24 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fbac50f2e10 *.LC10>)) policysecret.c:131 -1
     (nil))
(insn 211 210 212 24 (set (reg:DI 5 di)
        (reg/f:DI 125 [ D.7320 ])) policysecret.c:131 -1
     (nil))
(call_insn/i 212 211 213 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fbac547d0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysecret.c:131 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 213 212 214 24 (set (reg:SI 126 [ D.7321 ])
        (reg:SI 0 ax)) policysecret.c:131 -1
     (nil))
(insn 214 213 215 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 126 [ D.7321 ])
            (const_int 0 [0]))) policysecret.c:131 -1
     (nil))
(jump_insn 215 214 216 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) policysecret.c:131 -1
     (nil)
 -> 240)
(note 216 215 217 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 25 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:132 -1
     (nil))
(insn 218 217 219 25 (set (reg:SI 265)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:133 -1
     (nil))
(insn 219 218 220 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 265)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policysecret.c:133 -1
     (nil))
(jump_insn 220 219 221 25 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 231)
            (pc))) policysecret.c:133 -1
     (nil)
 -> 231)
(note 221 220 222 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 26 (set (reg:SI 266)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:134 -1
     (nil))
(insn 223 222 224 26 (set (reg:DI 127 [ D.7318 ])
        (sign_extend:DI (reg:SI 266))) policysecret.c:134 -1
     (nil))
(insn 224 223 225 26 (parallel [
            (set (reg:DI 128 [ D.7318 ])
                (ashift:DI (reg:DI 127 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:134 -1
     (nil))
(insn 225 224 226 26 (set (reg/f:DI 267)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:134 -1
     (nil))
(insn 226 225 227 26 (parallel [
            (set (reg/f:DI 129 [ D.7319 ])
                (plus:DI (reg:DI 128 [ D.7318 ])
                    (reg/f:DI 267)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:134 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 128 [ D.7318 ]))
        (nil)))
(insn 227 226 228 26 (set (reg/f:DI 268)
        (mem/f:DI (reg/f:DI 129 [ D.7319 ]) [0 *_151+0 S8 A64])) policysecret.c:134 -1
     (nil))
(insn 228 227 229 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -720 [0xfffffffffffffd30])) [0 policyRefFilename+0 S8 A64])
        (reg/f:DI 268)) policysecret.c:134 -1
     (nil))
(jump_insn 229 228 230 26 (set (pc)
        (label_ref:DI 682)) 654 {jump}
     (nil)
 -> 682)
(barrier 230 229 231)
(code_label 231 230 232 27 17 "" [1 uses])
(note 232 231 233 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 234 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fbac50f2ea0 *.LC11>)) policysecret.c:137 -1
     (nil))
(call_insn 234 233 235 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:137 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 235 234 238 27 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:138 -1
     (nil)
    (nil))
(jump_insn 238 235 239 27 (set (pc)
        (label_ref 682)) -1
     (nil)
 -> 682)
(barrier 239 238 240)
(code_label 240 239 241 29 16 "" [1 uses])
(note 241 240 242 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 29 (set (reg:SI 269)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:141 -1
     (nil))
(insn 243 242 244 29 (set (reg:DI 130 [ D.7318 ])
        (sign_extend:DI (reg:SI 269))) policysecret.c:141 -1
     (nil))
(insn 244 243 245 29 (parallel [
            (set (reg:DI 131 [ D.7318 ])
                (ashift:DI (reg:DI 130 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:141 -1
     (nil))
(insn 245 244 246 29 (set (reg/f:DI 270)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:141 -1
     (nil))
(insn 246 245 247 29 (parallel [
            (set (reg/f:DI 132 [ D.7319 ])
                (plus:DI (reg:DI 131 [ D.7318 ])
                    (reg/f:DI 270)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:141 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 131 [ D.7318 ]))
        (nil)))
(insn 247 246 248 29 (set (reg/f:DI 133 [ D.7320 ])
        (mem/f:DI (reg/f:DI 132 [ D.7319 ]) [0 *_157+0 S8 A64])) policysecret.c:141 -1
     (nil))
(insn 248 247 249 29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fbac50f2f30 *.LC12>)) policysecret.c:141 -1
     (nil))
(insn 249 248 250 29 (set (reg:DI 5 di)
        (reg/f:DI 133 [ D.7320 ])) policysecret.c:141 -1
     (nil))
(call_insn/i 250 249 251 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fbac547d0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysecret.c:141 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 251 250 252 29 (set (reg:SI 134 [ D.7321 ])
        (reg:SI 0 ax)) policysecret.c:141 -1
     (nil))
(insn 252 251 253 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 134 [ D.7321 ])
            (const_int 0 [0]))) policysecret.c:141 -1
     (nil))
(jump_insn 253 252 254 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 281)
            (pc))) policysecret.c:141 -1
     (nil)
 -> 281)
(note 254 253 255 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 30 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:142 -1
     (nil))
(insn 256 255 257 30 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:143 -1
     (nil))
(insn 257 256 258 30 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 271)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policysecret.c:143 -1
     (nil))
(jump_insn 258 257 259 30 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 272)
            (pc))) policysecret.c:143 -1
     (nil)
 -> 272)
(note 259 258 260 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 31 (set (reg:SI 272)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:144 -1
     (nil))
(insn 261 260 262 31 (set (reg:DI 135 [ D.7318 ])
        (sign_extend:DI (reg:SI 272))) policysecret.c:144 -1
     (nil))
(insn 262 261 263 31 (parallel [
            (set (reg:DI 136 [ D.7318 ])
                (ashift:DI (reg:DI 135 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:144 -1
     (nil))
(insn 263 262 264 31 (set (reg/f:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:144 -1
     (nil))
(insn 264 263 265 31 (parallel [
            (set (reg/f:DI 137 [ D.7319 ])
                (plus:DI (reg:DI 136 [ D.7318 ])
                    (reg/f:DI 273)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:144 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 136 [ D.7318 ]))
        (nil)))
(insn 265 264 266 31 (set (reg/f:DI 138 [ D.7320 ])
        (mem/f:DI (reg/f:DI 137 [ D.7319 ]) [0 *_163+0 S8 A64])) policysecret.c:144 -1
     (nil))
(insn 266 265 267 31 (set (reg:DI 5 di)
        (reg/f:DI 138 [ D.7320 ])) policysecret.c:144 -1
     (nil))
(call_insn/i 267 266 268 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7fbac55a50d8 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) policysecret.c:144 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 268 267 269 31 (set (reg:SI 274)
        (reg:SI 0 ax)) policysecret.c:144 -1
     (nil))
(insn 269 268 270 31 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -776 [0xfffffffffffffcf8])) [0 expiration+0 S4 A32])
        (reg:SI 274)) policysecret.c:144 -1
     (nil))
(jump_insn 270 269 271 31 (set (pc)
        (label_ref:DI 682)) 654 {jump}
     (nil)
 -> 682)
(barrier 271 270 272)
(code_label 272 271 273 32 20 "" [1 uses])
(note 273 272 274 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 32 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fbac50f2120 *.LC13>)) policysecret.c:147 -1
     (nil))
(call_insn 275 274 276 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:147 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 276 275 279 32 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:148 -1
     (nil)
    (nil))
(jump_insn 279 276 280 32 (set (pc)
        (label_ref 682)) -1
     (nil)
 -> 682)
(barrier 280 279 281)
(code_label 281 280 282 34 19 "" [1 uses])
(note 282 281 283 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 34 (set (reg:SI 275)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:151 -1
     (nil))
(insn 284 283 285 34 (set (reg:DI 139 [ D.7318 ])
        (sign_extend:DI (reg:SI 275))) policysecret.c:151 -1
     (nil))
(insn 285 284 286 34 (parallel [
            (set (reg:DI 140 [ D.7318 ])
                (ashift:DI (reg:DI 139 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:151 -1
     (nil))
(insn 286 285 287 34 (set (reg/f:DI 276)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:151 -1
     (nil))
(insn 287 286 288 34 (parallel [
            (set (reg/f:DI 141 [ D.7319 ])
                (plus:DI (reg:DI 140 [ D.7318 ])
                    (reg/f:DI 276)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:151 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 140 [ D.7318 ]))
        (nil)))
(insn 288 287 289 34 (set (reg/f:DI 142 [ D.7320 ])
        (mem/f:DI (reg/f:DI 141 [ D.7319 ]) [0 *_170+0 S8 A64])) policysecret.c:151 -1
     (nil))
(insn 289 288 290 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fbac50f21b0 *.LC14>)) policysecret.c:151 -1
     (nil))
(insn 290 289 291 34 (set (reg:DI 5 di)
        (reg/f:DI 142 [ D.7320 ])) policysecret.c:151 -1
     (nil))
(call_insn/i 291 290 292 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fbac547d0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysecret.c:151 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 292 291 293 34 (set (reg:SI 143 [ D.7321 ])
        (reg:SI 0 ax)) policysecret.c:151 -1
     (nil))
(insn 293 292 294 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 143 [ D.7321 ])
            (const_int 0 [0]))) policysecret.c:151 -1
     (nil))
(jump_insn 294 293 295 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) policysecret.c:151 -1
     (nil)
 -> 319)
(note 295 294 296 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 296 295 297 35 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:152 -1
     (nil))
(insn 297 296 298 35 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:153 -1
     (nil))
(insn 298 297 299 35 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 277)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policysecret.c:153 -1
     (nil))
(jump_insn 299 298 300 35 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 310)
            (pc))) policysecret.c:153 -1
     (nil)
 -> 310)
(note 300 299 301 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 36 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:154 -1
     (nil))
(insn 302 301 303 36 (set (reg:DI 144 [ D.7318 ])
        (sign_extend:DI (reg:SI 278))) policysecret.c:154 -1
     (nil))
(insn 303 302 304 36 (parallel [
            (set (reg:DI 145 [ D.7318 ])
                (ashift:DI (reg:DI 144 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:154 -1
     (nil))
(insn 304 303 305 36 (set (reg/f:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:154 -1
     (nil))
(insn 305 304 306 36 (parallel [
            (set (reg/f:DI 146 [ D.7319 ])
                (plus:DI (reg:DI 145 [ D.7318 ])
                    (reg/f:DI 279)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:154 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 145 [ D.7318 ]))
        (nil)))
(insn 306 305 307 36 (set (reg/f:DI 280)
        (mem/f:DI (reg/f:DI 146 [ D.7319 ]) [0 *_176+0 S8 A64])) policysecret.c:154 -1
     (nil))
(insn 307 306 308 36 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -696 [0xfffffffffffffd48])) [0 entityPassword+0 S8 A64])
        (reg/f:DI 280)) policysecret.c:154 -1
     (nil))
(jump_insn 308 307 309 36 (set (pc)
        (label_ref:DI 682)) 654 {jump}
     (nil)
 -> 682)
(barrier 309 308 310)
(code_label 310 309 311 37 23 "" [1 uses])
(note 311 310 312 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 37 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fbac5118000 *.LC15>)) policysecret.c:157 -1
     (nil))
(call_insn 313 312 314 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:157 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 314 313 317 37 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:158 -1
     (nil)
    (nil))
(jump_insn 317 314 318 37 (set (pc)
        (label_ref 682)) -1
     (nil)
 -> 682)
(barrier 318 317 319)
(code_label 319 318 320 39 22 "" [1 uses])
(note 320 319 321 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 39 (set (reg:SI 281)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:161 -1
     (nil))
(insn 322 321 323 39 (set (reg:DI 147 [ D.7318 ])
        (sign_extend:DI (reg:SI 281))) policysecret.c:161 -1
     (nil))
(insn 323 322 324 39 (parallel [
            (set (reg:DI 148 [ D.7318 ])
                (ashift:DI (reg:DI 147 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:161 -1
     (nil))
(insn 324 323 325 39 (set (reg/f:DI 282)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:161 -1
     (nil))
(insn 325 324 326 39 (parallel [
            (set (reg/f:DI 149 [ D.7319 ])
                (plus:DI (reg:DI 148 [ D.7318 ])
                    (reg/f:DI 282)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:161 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 148 [ D.7318 ]))
        (nil)))
(insn 326 325 327 39 (set (reg/f:DI 150 [ D.7320 ])
        (mem/f:DI (reg/f:DI 149 [ D.7319 ]) [0 *_182+0 S8 A64])) policysecret.c:161 -1
     (nil))
(insn 327 326 328 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fbac5118090 *.LC16>)) policysecret.c:161 -1
     (nil))
(insn 328 327 329 39 (set (reg:DI 5 di)
        (reg/f:DI 150 [ D.7320 ])) policysecret.c:161 -1
     (nil))
(call_insn/i 329 328 330 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fbac547d0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysecret.c:161 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 330 329 331 39 (set (reg:SI 151 [ D.7321 ])
        (reg:SI 0 ax)) policysecret.c:161 -1
     (nil))
(insn 331 330 332 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 151 [ D.7321 ])
            (const_int 0 [0]))) policysecret.c:161 -1
     (nil))
(jump_insn 332 331 333 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 357)
            (pc))) policysecret.c:161 -1
     (nil)
 -> 357)
(note 333 332 334 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 40 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:162 -1
     (nil))
(insn 335 334 336 40 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:163 -1
     (nil))
(insn 336 335 337 40 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 283)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policysecret.c:163 -1
     (nil))
(jump_insn 337 336 338 40 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 348)
            (pc))) policysecret.c:163 -1
     (nil)
 -> 348)
(note 338 337 339 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 41 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:164 -1
     (nil))
(insn 340 339 341 41 (set (reg:DI 152 [ D.7318 ])
        (sign_extend:DI (reg:SI 284))) policysecret.c:164 -1
     (nil))
(insn 341 340 342 41 (parallel [
            (set (reg:DI 153 [ D.7318 ])
                (ashift:DI (reg:DI 152 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:164 -1
     (nil))
(insn 342 341 343 41 (set (reg/f:DI 285)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:164 -1
     (nil))
(insn 343 342 344 41 (parallel [
            (set (reg/f:DI 154 [ D.7319 ])
                (plus:DI (reg:DI 153 [ D.7318 ])
                    (reg/f:DI 285)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:164 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 153 [ D.7318 ]))
        (nil)))
(insn 344 343 345 41 (set (reg/f:DI 286)
        (mem/f:DI (reg/f:DI 154 [ D.7319 ]) [0 *_188+0 S8 A64])) policysecret.c:164 -1
     (nil))
(insn 345 344 346 41 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -712 [0xfffffffffffffd38])) [0 ticketFilename+0 S8 A64])
        (reg/f:DI 286)) policysecret.c:164 -1
     (nil))
(jump_insn 346 345 347 41 (set (pc)
        (label_ref:DI 682)) 654 {jump}
     (nil)
 -> 682)
(barrier 347 346 348)
(code_label 348 347 349 42 26 "" [1 uses])
(note 349 348 350 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 350 349 351 42 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fbac5118120 *.LC17>)) policysecret.c:167 -1
     (nil))
(call_insn 351 350 352 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:167 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 352 351 355 42 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:168 -1
     (nil)
    (nil))
(jump_insn 355 352 356 42 (set (pc)
        (label_ref 682)) -1
     (nil)
 -> 682)
(barrier 356 355 357)
(code_label 357 356 358 44 25 "" [1 uses])
(note 358 357 359 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 359 358 360 44 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:171 -1
     (nil))
(insn 360 359 361 44 (set (reg:DI 155 [ D.7318 ])
        (sign_extend:DI (reg:SI 287))) policysecret.c:171 -1
     (nil))
(insn 361 360 362 44 (parallel [
            (set (reg:DI 156 [ D.7318 ])
                (ashift:DI (reg:DI 155 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:171 -1
     (nil))
(insn 362 361 363 44 (set (reg/f:DI 288)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:171 -1
     (nil))
(insn 363 362 364 44 (parallel [
            (set (reg/f:DI 157 [ D.7319 ])
                (plus:DI (reg:DI 156 [ D.7318 ])
                    (reg/f:DI 288)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:171 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 156 [ D.7318 ]))
        (nil)))
(insn 364 363 365 44 (set (reg/f:DI 158 [ D.7320 ])
        (mem/f:DI (reg/f:DI 157 [ D.7319 ]) [0 *_194+0 S8 A64])) policysecret.c:171 -1
     (nil))
(insn 365 364 366 44 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fbac51181b0 *.LC18>)) policysecret.c:171 -1
     (nil))
(insn 366 365 367 44 (set (reg:DI 5 di)
        (reg/f:DI 158 [ D.7320 ])) policysecret.c:171 -1
     (nil))
(call_insn/i 367 366 368 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fbac547d0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysecret.c:171 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 368 367 369 44 (set (reg:SI 159 [ D.7321 ])
        (reg:SI 0 ax)) policysecret.c:171 -1
     (nil))
(insn 369 368 370 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 159 [ D.7321 ])
            (const_int 0 [0]))) policysecret.c:171 -1
     (nil))
(jump_insn 370 369 371 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 395)
            (pc))) policysecret.c:171 -1
     (nil)
 -> 395)
(note 371 370 372 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 372 371 373 45 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:172 -1
     (nil))
(insn 373 372 374 45 (set (reg:SI 289)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:173 -1
     (nil))
(insn 374 373 375 45 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 289)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policysecret.c:173 -1
     (nil))
(jump_insn 375 374 376 45 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 386)
            (pc))) policysecret.c:173 -1
     (nil)
 -> 386)
(note 376 375 377 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 377 376 378 46 (set (reg:SI 290)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:174 -1
     (nil))
(insn 378 377 379 46 (set (reg:DI 160 [ D.7318 ])
        (sign_extend:DI (reg:SI 290))) policysecret.c:174 -1
     (nil))
(insn 379 378 380 46 (parallel [
            (set (reg:DI 161 [ D.7318 ])
                (ashift:DI (reg:DI 160 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:174 -1
     (nil))
(insn 380 379 381 46 (set (reg/f:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:174 -1
     (nil))
(insn 381 380 382 46 (parallel [
            (set (reg/f:DI 162 [ D.7319 ])
                (plus:DI (reg:DI 161 [ D.7318 ])
                    (reg/f:DI 291)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:174 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 161 [ D.7318 ]))
        (nil)))
(insn 382 381 383 46 (set (reg/f:DI 292)
        (mem/f:DI (reg/f:DI 162 [ D.7319 ]) [0 *_200+0 S8 A64])) policysecret.c:174 -1
     (nil))
(insn 383 382 384 46 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -704 [0xfffffffffffffd40])) [0 timeoutFilename+0 S8 A64])
        (reg/f:DI 292)) policysecret.c:174 -1
     (nil))
(jump_insn 384 383 385 46 (set (pc)
        (label_ref:DI 682)) 654 {jump}
     (nil)
 -> 682)
(barrier 385 384 386)
(code_label 386 385 387 47 29 "" [1 uses])
(note 387 386 388 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 388 387 389 47 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fbac5118240 *.LC19>)) policysecret.c:177 -1
     (nil))
(call_insn 389 388 390 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:177 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 390 389 393 47 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:178 -1
     (nil)
    (nil))
(jump_insn 393 390 394 47 (set (pc)
        (label_ref 682)) -1
     (nil)
 -> 682)
(barrier 394 393 395)
(code_label 395 394 396 49 28 "" [1 uses])
(note 396 395 397 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 397 396 398 49 (set (reg:SI 293)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:181 -1
     (nil))
(insn 398 397 399 49 (set (reg:DI 163 [ D.7318 ])
        (sign_extend:DI (reg:SI 293))) policysecret.c:181 -1
     (nil))
(insn 399 398 400 49 (parallel [
            (set (reg:DI 164 [ D.7318 ])
                (ashift:DI (reg:DI 163 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:181 -1
     (nil))
(insn 400 399 401 49 (set (reg/f:DI 294)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:181 -1
     (nil))
(insn 401 400 402 49 (parallel [
            (set (reg/f:DI 165 [ D.7319 ])
                (plus:DI (reg:DI 164 [ D.7318 ])
                    (reg/f:DI 294)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:181 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 164 [ D.7318 ]))
        (nil)))
(insn 402 401 403 49 (set (reg/f:DI 166 [ D.7320 ])
        (mem/f:DI (reg/f:DI 165 [ D.7319 ]) [0 *_206+0 S8 A64])) policysecret.c:181 -1
     (nil))
(insn 403 402 404 49 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fbac51182d0 *.LC20>)) policysecret.c:181 -1
     (nil))
(insn 404 403 405 49 (set (reg:DI 5 di)
        (reg/f:DI 166 [ D.7320 ])) policysecret.c:181 -1
     (nil))
(call_insn/i 405 404 406 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fbac547d0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysecret.c:181 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 406 405 407 49 (set (reg:SI 167 [ D.7321 ])
        (reg:SI 0 ax)) policysecret.c:181 -1
     (nil))
(insn 407 406 408 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 167 [ D.7321 ])
            (const_int 0 [0]))) policysecret.c:181 -1
     (nil))
(jump_insn 408 407 409 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 473)
            (pc))) policysecret.c:181 -1
     (nil)
 -> 473)
(note 409 408 410 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 410 409 411 50 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:182 -1
     (nil))
(insn 411 410 412 50 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:183 -1
     (nil))
(insn 412 411 413 50 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 295)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policysecret.c:183 -1
     (nil))
(jump_insn 413 412 414 50 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 429)
            (pc))) policysecret.c:183 -1
     (nil)
 -> 429)
(note 414 413 415 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 415 414 416 51 (set (reg:SI 296)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:184 -1
     (nil))
(insn 416 415 417 51 (set (reg:DI 168 [ D.7318 ])
        (sign_extend:DI (reg:SI 296))) policysecret.c:184 -1
     (nil))
(insn 417 416 418 51 (parallel [
            (set (reg:DI 169 [ D.7318 ])
                (ashift:DI (reg:DI 168 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:184 -1
     (nil))
(insn 418 417 419 51 (set (reg/f:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:184 -1
     (nil))
(insn 419 418 420 51 (parallel [
            (set (reg/f:DI 170 [ D.7319 ])
                (plus:DI (reg:DI 169 [ D.7318 ])
                    (reg/f:DI 297)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:184 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 169 [ D.7318 ]))
        (nil)))
(insn 420 419 421 51 (set (reg/f:DI 171 [ D.7320 ])
        (mem/f:DI (reg/f:DI 170 [ D.7319 ]) [0 *_212+0 S8 A64])) policysecret.c:184 -1
     (nil))
(insn 421 420 422 51 (parallel [
            (set (reg:DI 298)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -808 [0xfffffffffffffcd8])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:184 -1
     (nil))
(insn 422 421 423 51 (set (reg:DI 1 dx)
        (reg:DI 298)) policysecret.c:184 -1
     (nil))
(insn 423 422 424 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fbac50f2990 *.LC2>)) policysecret.c:184 -1
     (nil))
(insn 424 423 425 51 (set (reg:DI 5 di)
        (reg/f:DI 171 [ D.7320 ])) policysecret.c:184 -1
     (nil))
(insn 425 424 426 51 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysecret.c:184 -1
     (nil))
(call_insn 426 425 427 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fbac5486ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policysecret.c:184 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 427 426 428 51 (set (pc)
        (label_ref 434)) -1
     (nil)
 -> 434)
(barrier 428 427 429)
(code_label 429 428 430 52 32 "" [1 uses])
(note 430 429 431 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 431 430 432 52 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fbac5118360 *.LC21>)) policysecret.c:187 -1
     (nil))
(call_insn 432 431 433 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:187 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 433 432 434 52 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:188 -1
     (nil)
    (nil))
(code_label 434 433 435 53 33 "" [1 uses])
(note 435 434 436 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 436 435 437 53 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:190 -1
     (nil))
(insn 437 436 438 53 (set (reg:SI 299)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:191 -1
     (nil))
(insn 438 437 439 53 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 299)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policysecret.c:191 -1
     (nil))
(jump_insn 439 438 440 53 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 464)
            (pc))) policysecret.c:191 -1
     (nil)
 -> 464)
(note 440 439 441 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 441 440 442 54 (set (reg:SI 300)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:192 -1
     (nil))
(insn 442 441 443 54 (set (reg:DI 172 [ D.7318 ])
        (sign_extend:DI (reg:SI 300))) policysecret.c:192 -1
     (nil))
(insn 443 442 444 54 (parallel [
            (set (reg:DI 173 [ D.7318 ])
                (ashift:DI (reg:DI 172 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:192 -1
     (nil))
(insn 444 443 445 54 (set (reg/f:DI 301)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:192 -1
     (nil))
(insn 445 444 446 54 (parallel [
            (set (reg/f:DI 174 [ D.7319 ])
                (plus:DI (reg:DI 173 [ D.7318 ])
                    (reg/f:DI 301)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:192 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 173 [ D.7318 ]))
        (nil)))
(insn 446 445 447 54 (set (reg/f:DI 175 [ D.7320 ])
        (mem/f:DI (reg/f:DI 174 [ D.7319 ]) [0 *_220+0 S8 A64])) policysecret.c:192 -1
     (nil))
(insn 447 446 448 54 (parallel [
            (set (reg:DI 302)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -804 [0xfffffffffffffcdc])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:192 -1
     (nil))
(insn 448 447 449 54 (set (reg:DI 1 dx)
        (reg:DI 302)) policysecret.c:192 -1
     (nil))
(insn 449 448 450 54 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fbac50f2990 *.LC2>)) policysecret.c:192 -1
     (nil))
(insn 450 449 451 54 (set (reg:DI 5 di)
        (reg/f:DI 175 [ D.7320 ])) policysecret.c:192 -1
     (nil))
(insn 451 450 452 54 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysecret.c:192 -1
     (nil))
(call_insn 452 451 453 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fbac5486ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policysecret.c:192 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 453 452 454 54 (set (reg:SI 176 [ D.7322 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -804 [0xfffffffffffffcdc])) [0 sessionAttributes0+0 S4 A32])) policysecret.c:193 -1
     (nil))
(insn 454 453 455 54 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 176 [ D.7322 ])
            (const_int 255 [0xff]))) policysecret.c:193 -1
     (nil))
(jump_insn 455 454 456 54 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 682)
            (pc))) policysecret.c:193 612 {*jcc_1}
     (nil)
 -> 682)
(note 456 455 457 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 457 456 458 55 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fbac51183f0 *.LC22>)) policysecret.c:194 -1
     (nil))
(call_insn 458 457 459 55 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:194 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 459 458 462 55 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:195 -1
     (nil)
    (nil))
(jump_insn 462 459 463 55 (set (pc)
        (label_ref:DI 682)) 654 {jump}
     (nil)
 -> 682)
(barrier 463 462 464)
(code_label 464 463 465 57 34 "" [1 uses])
(note 465 464 466 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 466 465 467 57 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fbac5118360 *.LC21>)) policysecret.c:199 -1
     (nil))
(call_insn 467 466 468 57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:199 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 468 467 471 57 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:200 -1
     (nil)
    (nil))
(jump_insn 471 468 472 57 (set (pc)
        (label_ref 682)) -1
     (nil)
 -> 682)
(barrier 472 471 473)
(code_label 473 472 474 59 31 "" [1 uses])
(note 474 473 475 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 475 474 476 59 (set (reg:SI 303)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:203 -1
     (nil))
(insn 476 475 477 59 (set (reg:DI 177 [ D.7318 ])
        (sign_extend:DI (reg:SI 303))) policysecret.c:203 -1
     (nil))
(insn 477 476 478 59 (parallel [
            (set (reg:DI 178 [ D.7318 ])
                (ashift:DI (reg:DI 177 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:203 -1
     (nil))
(insn 478 477 479 59 (set (reg/f:DI 304)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:203 -1
     (nil))
(insn 479 478 480 59 (parallel [
            (set (reg/f:DI 179 [ D.7319 ])
                (plus:DI (reg:DI 178 [ D.7318 ])
                    (reg/f:DI 304)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:203 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 178 [ D.7318 ]))
        (nil)))
(insn 480 479 481 59 (set (reg/f:DI 180 [ D.7320 ])
        (mem/f:DI (reg/f:DI 179 [ D.7319 ]) [0 *_230+0 S8 A64])) policysecret.c:203 -1
     (nil))
(insn 481 480 482 59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fbac5118480 *.LC23>)) policysecret.c:203 -1
     (nil))
(insn 482 481 483 59 (set (reg:DI 5 di)
        (reg/f:DI 180 [ D.7320 ])) policysecret.c:203 -1
     (nil))
(call_insn/i 483 482 484 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fbac547d0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysecret.c:203 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 484 483 485 59 (set (reg:SI 181 [ D.7321 ])
        (reg:SI 0 ax)) policysecret.c:203 -1
     (nil))
(insn 485 484 486 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 181 [ D.7321 ])
            (const_int 0 [0]))) policysecret.c:203 -1
     (nil))
(jump_insn 486 485 487 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 551)
            (pc))) policysecret.c:203 -1
     (nil)
 -> 551)
(note 487 486 488 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 488 487 489 60 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:204 -1
     (nil))
(insn 489 488 490 60 (set (reg:SI 305)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:205 -1
     (nil))
(insn 490 489 491 60 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 305)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policysecret.c:205 -1
     (nil))
(jump_insn 491 490 492 60 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 507)
            (pc))) policysecret.c:205 -1
     (nil)
 -> 507)
(note 492 491 493 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 493 492 494 61 (set (reg:SI 306)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:206 -1
     (nil))
(insn 494 493 495 61 (set (reg:DI 182 [ D.7318 ])
        (sign_extend:DI (reg:SI 306))) policysecret.c:206 -1
     (nil))
(insn 495 494 496 61 (parallel [
            (set (reg:DI 183 [ D.7318 ])
                (ashift:DI (reg:DI 182 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:206 -1
     (nil))
(insn 496 495 497 61 (set (reg/f:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:206 -1
     (nil))
(insn 497 496 498 61 (parallel [
            (set (reg/f:DI 184 [ D.7319 ])
                (plus:DI (reg:DI 183 [ D.7318 ])
                    (reg/f:DI 307)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:206 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 183 [ D.7318 ]))
        (nil)))
(insn 498 497 499 61 (set (reg/f:DI 185 [ D.7320 ])
        (mem/f:DI (reg/f:DI 184 [ D.7319 ]) [0 *_236+0 S8 A64])) policysecret.c:206 -1
     (nil))
(insn 499 498 500 61 (parallel [
            (set (reg:DI 308)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:206 -1
     (nil))
(insn 500 499 501 61 (set (reg:DI 1 dx)
        (reg:DI 308)) policysecret.c:206 -1
     (nil))
(insn 501 500 502 61 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fbac50f2990 *.LC2>)) policysecret.c:206 -1
     (nil))
(insn 502 501 503 61 (set (reg:DI 5 di)
        (reg/f:DI 185 [ D.7320 ])) policysecret.c:206 -1
     (nil))
(insn 503 502 504 61 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysecret.c:206 -1
     (nil))
(call_insn 504 503 505 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fbac5486ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policysecret.c:206 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 505 504 506 61 (set (pc)
        (label_ref 512)) -1
     (nil)
 -> 512)
(barrier 506 505 507)
(code_label 507 506 508 62 38 "" [1 uses])
(note 508 507 509 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 509 508 510 62 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fbac5118510 *.LC24>)) policysecret.c:209 -1
     (nil))
(call_insn 510 509 511 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:209 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 511 510 512 62 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:210 -1
     (nil)
    (nil))
(code_label 512 511 513 63 39 "" [1 uses])
(note 513 512 514 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 514 513 515 63 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:212 -1
     (nil))
(insn 515 514 516 63 (set (reg:SI 309)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:213 -1
     (nil))
(insn 516 515 517 63 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 309)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policysecret.c:213 -1
     (nil))
(jump_insn 517 516 518 63 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 542)
            (pc))) policysecret.c:213 -1
     (nil)
 -> 542)
(note 518 517 519 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 519 518 520 64 (set (reg:SI 310)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:214 -1
     (nil))
(insn 520 519 521 64 (set (reg:DI 186 [ D.7318 ])
        (sign_extend:DI (reg:SI 310))) policysecret.c:214 -1
     (nil))
(insn 521 520 522 64 (parallel [
            (set (reg:DI 187 [ D.7318 ])
                (ashift:DI (reg:DI 186 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:214 -1
     (nil))
(insn 522 521 523 64 (set (reg/f:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:214 -1
     (nil))
(insn 523 522 524 64 (parallel [
            (set (reg/f:DI 188 [ D.7319 ])
                (plus:DI (reg:DI 187 [ D.7318 ])
                    (reg/f:DI 311)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:214 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 187 [ D.7318 ]))
        (nil)))
(insn 524 523 525 64 (set (reg/f:DI 189 [ D.7320 ])
        (mem/f:DI (reg/f:DI 188 [ D.7319 ]) [0 *_244+0 S8 A64])) policysecret.c:214 -1
     (nil))
(insn 525 524 526 64 (parallel [
            (set (reg:DI 312)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -796 [0xfffffffffffffce4])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:214 -1
     (nil))
(insn 526 525 527 64 (set (reg:DI 1 dx)
        (reg:DI 312)) policysecret.c:214 -1
     (nil))
(insn 527 526 528 64 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fbac50f2990 *.LC2>)) policysecret.c:214 -1
     (nil))
(insn 528 527 529 64 (set (reg:DI 5 di)
        (reg/f:DI 189 [ D.7320 ])) policysecret.c:214 -1
     (nil))
(insn 529 528 530 64 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysecret.c:214 -1
     (nil))
(call_insn 530 529 531 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fbac5486ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policysecret.c:214 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 531 530 532 64 (set (reg:SI 190 [ D.7322 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -796 [0xfffffffffffffce4])) [0 sessionAttributes1+0 S4 A32])) policysecret.c:215 -1
     (nil))
(insn 532 531 533 64 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 190 [ D.7322 ])
            (const_int 255 [0xff]))) policysecret.c:215 -1
     (nil))
(jump_insn 533 532 534 64 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 682)
            (pc))) policysecret.c:215 612 {*jcc_1}
     (nil)
 -> 682)
(note 534 533 535 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 535 534 536 65 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fbac51185a0 *.LC25>)) policysecret.c:216 -1
     (nil))
(call_insn 536 535 537 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:216 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 537 536 540 65 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:217 -1
     (nil)
    (nil))
(jump_insn 540 537 541 65 (set (pc)
        (label_ref:DI 682)) 654 {jump}
     (nil)
 -> 682)
(barrier 541 540 542)
(code_label 542 541 543 67 40 "" [1 uses])
(note 543 542 544 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 544 543 545 67 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fbac5118510 *.LC24>)) policysecret.c:221 -1
     (nil))
(call_insn 545 544 546 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:221 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 546 545 549 67 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:222 -1
     (nil)
    (nil))
(jump_insn 549 546 550 67 (set (pc)
        (label_ref 682)) -1
     (nil)
 -> 682)
(barrier 550 549 551)
(code_label 551 550 552 69 37 "" [1 uses])
(note 552 551 553 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 553 552 554 69 (set (reg:SI 313)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:225 -1
     (nil))
(insn 554 553 555 69 (set (reg:DI 191 [ D.7318 ])
        (sign_extend:DI (reg:SI 313))) policysecret.c:225 -1
     (nil))
(insn 555 554 556 69 (parallel [
            (set (reg:DI 192 [ D.7318 ])
                (ashift:DI (reg:DI 191 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:225 -1
     (nil))
(insn 556 555 557 69 (set (reg/f:DI 314)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:225 -1
     (nil))
(insn 557 556 558 69 (parallel [
            (set (reg/f:DI 193 [ D.7319 ])
                (plus:DI (reg:DI 192 [ D.7318 ])
                    (reg/f:DI 314)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:225 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 192 [ D.7318 ]))
        (nil)))
(insn 558 557 559 69 (set (reg/f:DI 194 [ D.7320 ])
        (mem/f:DI (reg/f:DI 193 [ D.7319 ]) [0 *_254+0 S8 A64])) policysecret.c:225 -1
     (nil))
(insn 559 558 560 69 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fbac5118630 *.LC26>)) policysecret.c:225 -1
     (nil))
(insn 560 559 561 69 (set (reg:DI 5 di)
        (reg/f:DI 194 [ D.7320 ])) policysecret.c:225 -1
     (nil))
(call_insn/i 561 560 562 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fbac547d0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysecret.c:225 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 562 561 563 69 (set (reg:SI 195 [ D.7321 ])
        (reg:SI 0 ax)) policysecret.c:225 -1
     (nil))
(insn 563 562 564 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 195 [ D.7321 ])
            (const_int 0 [0]))) policysecret.c:225 -1
     (nil))
(jump_insn 564 563 565 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 629)
            (pc))) policysecret.c:225 -1
     (nil)
 -> 629)
(note 565 564 566 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 566 565 567 70 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:226 -1
     (nil))
(insn 567 566 568 70 (set (reg:SI 315)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:227 -1
     (nil))
(insn 568 567 569 70 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 315)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policysecret.c:227 -1
     (nil))
(jump_insn 569 568 570 70 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 585)
            (pc))) policysecret.c:227 -1
     (nil)
 -> 585)
(note 570 569 571 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 571 570 572 71 (set (reg:SI 316)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:228 -1
     (nil))
(insn 572 571 573 71 (set (reg:DI 196 [ D.7318 ])
        (sign_extend:DI (reg:SI 316))) policysecret.c:228 -1
     (nil))
(insn 573 572 574 71 (parallel [
            (set (reg:DI 197 [ D.7318 ])
                (ashift:DI (reg:DI 196 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:228 -1
     (nil))
(insn 574 573 575 71 (set (reg/f:DI 317)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:228 -1
     (nil))
(insn 575 574 576 71 (parallel [
            (set (reg/f:DI 198 [ D.7319 ])
                (plus:DI (reg:DI 197 [ D.7318 ])
                    (reg/f:DI 317)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:228 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 197 [ D.7318 ]))
        (nil)))
(insn 576 575 577 71 (set (reg/f:DI 199 [ D.7320 ])
        (mem/f:DI (reg/f:DI 198 [ D.7319 ]) [0 *_260+0 S8 A64])) policysecret.c:228 -1
     (nil))
(insn 577 576 578 71 (parallel [
            (set (reg:DI 318)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -792 [0xfffffffffffffce8])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:228 -1
     (nil))
(insn 578 577 579 71 (set (reg:DI 1 dx)
        (reg:DI 318)) policysecret.c:228 -1
     (nil))
(insn 579 578 580 71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fbac50f2990 *.LC2>)) policysecret.c:228 -1
     (nil))
(insn 580 579 581 71 (set (reg:DI 5 di)
        (reg/f:DI 199 [ D.7320 ])) policysecret.c:228 -1
     (nil))
(insn 581 580 582 71 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysecret.c:228 -1
     (nil))
(call_insn 582 581 583 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fbac5486ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policysecret.c:228 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 583 582 584 71 (set (pc)
        (label_ref 590)) -1
     (nil)
 -> 590)
(barrier 584 583 585)
(code_label 585 584 586 72 44 "" [1 uses])
(note 586 585 587 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 587 586 588 72 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fbac51186c0 *.LC27>)) policysecret.c:231 -1
     (nil))
(call_insn 588 587 589 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:231 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 589 588 590 72 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:232 -1
     (nil)
    (nil))
(code_label 590 589 591 73 45 "" [1 uses])
(note 591 590 592 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 592 591 593 73 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:234 -1
     (nil))
(insn 593 592 594 73 (set (reg:SI 319)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:235 -1
     (nil))
(insn 594 593 595 73 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 319)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policysecret.c:235 -1
     (nil))
(jump_insn 595 594 596 73 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 620)
            (pc))) policysecret.c:235 -1
     (nil)
 -> 620)
(note 596 595 597 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 597 596 598 74 (set (reg:SI 320)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:236 -1
     (nil))
(insn 598 597 599 74 (set (reg:DI 200 [ D.7318 ])
        (sign_extend:DI (reg:SI 320))) policysecret.c:236 -1
     (nil))
(insn 599 598 600 74 (parallel [
            (set (reg:DI 201 [ D.7318 ])
                (ashift:DI (reg:DI 200 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:236 -1
     (nil))
(insn 600 599 601 74 (set (reg/f:DI 321)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:236 -1
     (nil))
(insn 601 600 602 74 (parallel [
            (set (reg/f:DI 202 [ D.7319 ])
                (plus:DI (reg:DI 201 [ D.7318 ])
                    (reg/f:DI 321)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:236 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 201 [ D.7318 ]))
        (nil)))
(insn 602 601 603 74 (set (reg/f:DI 203 [ D.7320 ])
        (mem/f:DI (reg/f:DI 202 [ D.7319 ]) [0 *_268+0 S8 A64])) policysecret.c:236 -1
     (nil))
(insn 603 602 604 74 (parallel [
            (set (reg:DI 322)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -788 [0xfffffffffffffcec])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:236 -1
     (nil))
(insn 604 603 605 74 (set (reg:DI 1 dx)
        (reg:DI 322)) policysecret.c:236 -1
     (nil))
(insn 605 604 606 74 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fbac50f2990 *.LC2>)) policysecret.c:236 -1
     (nil))
(insn 606 605 607 74 (set (reg:DI 5 di)
        (reg/f:DI 203 [ D.7320 ])) policysecret.c:236 -1
     (nil))
(insn 607 606 608 74 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysecret.c:236 -1
     (nil))
(call_insn 608 607 609 74 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fbac5486ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policysecret.c:236 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 609 608 610 74 (set (reg:SI 204 [ D.7322 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -788 [0xfffffffffffffcec])) [0 sessionAttributes2+0 S4 A32])) policysecret.c:237 -1
     (nil))
(insn 610 609 611 74 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 204 [ D.7322 ])
            (const_int 255 [0xff]))) policysecret.c:237 -1
     (nil))
(jump_insn 611 610 612 74 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 682)
            (pc))) policysecret.c:237 612 {*jcc_1}
     (nil)
 -> 682)
(note 612 611 613 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 613 612 614 75 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fbac5118750 *.LC28>)) policysecret.c:238 -1
     (nil))
(call_insn 614 613 615 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:238 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 615 614 618 75 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:239 -1
     (nil)
    (nil))
(jump_insn 618 615 619 75 (set (pc)
        (label_ref:DI 682)) 654 {jump}
     (nil)
 -> 682)
(barrier 619 618 620)
(code_label 620 619 621 77 46 "" [1 uses])
(note 621 620 622 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 622 621 623 77 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fbac51186c0 *.LC27>)) policysecret.c:243 -1
     (nil))
(call_insn 623 622 624 77 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:243 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 624 623 627 77 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:244 -1
     (nil)
    (nil))
(jump_insn 627 624 628 77 (set (pc)
        (label_ref 682)) -1
     (nil)
 -> 682)
(barrier 628 627 629)
(code_label 629 628 630 79 43 "" [1 uses])
(note 630 629 631 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 631 630 632 79 (set (reg:SI 323)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:247 -1
     (nil))
(insn 632 631 633 79 (set (reg:DI 205 [ D.7318 ])
        (sign_extend:DI (reg:SI 323))) policysecret.c:247 -1
     (nil))
(insn 633 632 634 79 (parallel [
            (set (reg:DI 206 [ D.7318 ])
                (ashift:DI (reg:DI 205 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:247 -1
     (nil))
(insn 634 633 635 79 (set (reg/f:DI 324)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:247 -1
     (nil))
(insn 635 634 636 79 (parallel [
            (set (reg/f:DI 207 [ D.7319 ])
                (plus:DI (reg:DI 206 [ D.7318 ])
                    (reg/f:DI 324)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:247 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 206 [ D.7318 ]))
        (nil)))
(insn 636 635 637 79 (set (reg/f:DI 208 [ D.7320 ])
        (mem/f:DI (reg/f:DI 207 [ D.7319 ]) [0 *_278+0 S8 A64])) policysecret.c:247 -1
     (nil))
(insn 637 636 638 79 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fbac51187e0 *.LC29>)) policysecret.c:247 -1
     (nil))
(insn 638 637 639 79 (set (reg:DI 5 di)
        (reg/f:DI 208 [ D.7320 ])) policysecret.c:247 -1
     (nil))
(call_insn/i 639 638 640 79 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fbac547d0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysecret.c:247 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 640 639 641 79 (set (reg:SI 209 [ D.7321 ])
        (reg:SI 0 ax)) policysecret.c:247 -1
     (nil))
(insn 641 640 642 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 209 [ D.7321 ])
            (const_int 0 [0]))) policysecret.c:247 -1
     (nil))
(jump_insn 642 641 643 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 647)
            (pc))) policysecret.c:247 -1
     (nil)
 -> 647)
(note 643 642 644 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(call_insn 644 643 645 80 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:248 -1
     (nil)
    (nil))
(jump_insn 645 644 646 80 (set (pc)
        (label_ref 682)) -1
     (nil)
 -> 682)
(barrier 646 645 647)
(code_label 647 646 648 81 49 "" [1 uses])
(note 648 647 649 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 649 648 650 81 (set (reg:SI 325)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:250 -1
     (nil))
(insn 650 649 651 81 (set (reg:DI 210 [ D.7318 ])
        (sign_extend:DI (reg:SI 325))) policysecret.c:250 -1
     (nil))
(insn 651 650 652 81 (parallel [
            (set (reg:DI 211 [ D.7318 ])
                (ashift:DI (reg:DI 210 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:250 -1
     (nil))
(insn 652 651 653 81 (set (reg/f:DI 326)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:250 -1
     (nil))
(insn 653 652 654 81 (parallel [
            (set (reg/f:DI 212 [ D.7319 ])
                (plus:DI (reg:DI 211 [ D.7318 ])
                    (reg/f:DI 326)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:250 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 211 [ D.7318 ]))
        (nil)))
(insn 654 653 655 81 (set (reg/f:DI 213 [ D.7320 ])
        (mem/f:DI (reg/f:DI 212 [ D.7319 ]) [0 *_284+0 S8 A64])) policysecret.c:250 -1
     (nil))
(insn 655 654 656 81 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7fbac5118870 *.LC30>)) policysecret.c:250 -1
     (nil))
(insn 656 655 657 81 (set (reg:DI 5 di)
        (reg/f:DI 213 [ D.7320 ])) policysecret.c:250 -1
     (nil))
(call_insn/i 657 656 658 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fbac547d0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policysecret.c:250 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 658 657 659 81 (set (reg:SI 214 [ D.7321 ])
        (reg:SI 0 ax)) policysecret.c:250 -1
     (nil))
(insn 659 658 660 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 214 [ D.7321 ])
            (const_int 0 [0]))) policysecret.c:250 -1
     (nil))
(jump_insn 660 659 661 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 669)
            (pc))) policysecret.c:250 -1
     (nil)
 -> 669)
(note 661 660 662 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 662 661 663 82 (set (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fbac5245090 verbose>) [0 verbose+0 S4 A32])
        (const_int 1 [0x1])) policysecret.c:251 -1
     (nil))
(insn 663 662 664 82 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7fbac5118900 *.LC31>)) policysecret.c:252 -1
     (nil))
(insn 664 663 665 82 (set (reg:SI 4 si)
        (const_int 1 [0x1])) policysecret.c:252 -1
     (nil))
(insn 665 664 666 82 (set (reg:DI 5 di)
        (const_int 0 [0])) policysecret.c:252 -1
     (nil))
(call_insn 666 665 667 82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7fbac53e9000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) policysecret.c:252 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 667 666 668 82 (set (pc)
        (label_ref 682)) -1
     (nil)
 -> 682)
(barrier 668 667 669)
(code_label 669 668 670 83 50 "" [1 uses])
(note 670 669 671 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 671 670 672 83 (set (reg:SI 327)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:255 -1
     (nil))
(insn 672 671 673 83 (set (reg:DI 215 [ D.7318 ])
        (sign_extend:DI (reg:SI 327))) policysecret.c:255 -1
     (nil))
(insn 673 672 674 83 (parallel [
            (set (reg:DI 216 [ D.7318 ])
                (ashift:DI (reg:DI 215 [ D.7318 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:255 -1
     (nil))
(insn 674 673 675 83 (set (reg/f:DI 328)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policysecret.c:255 -1
     (nil))
(insn 675 674 676 83 (parallel [
            (set (reg/f:DI 217 [ D.7319 ])
                (plus:DI (reg:DI 216 [ D.7318 ])
                    (reg/f:DI 328)))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:255 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 216 [ D.7318 ]))
        (nil)))
(insn 676 675 677 83 (set (reg/f:DI 218 [ D.7320 ])
        (mem/f:DI (reg/f:DI 217 [ D.7319 ]) [0 *_291+0 S8 A64])) policysecret.c:255 -1
     (nil))
(insn 677 676 678 83 (set (reg:DI 4 si)
        (reg/f:DI 218 [ D.7320 ])) policysecret.c:255 -1
     (nil))
(insn 678 677 679 83 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7fbac5118990 *.LC32>)) policysecret.c:255 -1
     (nil))
(insn 679 678 680 83 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysecret.c:255 -1
     (nil))
(call_insn 680 679 681 83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fbac5483ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policysecret.c:255 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(call_insn 681 680 682 83 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:256 -1
     (nil)
    (nil))
(code_label 682 681 683 84 6 "" [29 uses])
(note 683 682 684 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 684 683 685 84 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:90 -1
     (nil))
(code_label 685 684 686 85 2 "" [1 uses])
(note 686 685 687 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 687 686 688 85 (set (reg:SI 329)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 i+0 S4 A32])) policysecret.c:90 -1
     (nil))
(insn 688 687 689 85 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 329)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policysecret.c:90 -1
     (nil))
(jump_insn 689 688 690 85 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 694)
            (pc))) policysecret.c:90 -1
     (nil)
 -> 694)
(note 690 689 692 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 692 690 693 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysecret.c:90 -1
     (nil))
(jump_insn 693 692 694 86 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 691)
            (pc))) policysecret.c:90 -1
     (nil)
 -> 691)
(code_label 694 693 695 87 51 "" [1 uses])
(note 695 694 696 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 696 695 697 87 (set (reg:SI 219 [ D.7322 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -816 [0xfffffffffffffcd0])) [0 authHandle+0 S4 A64])) policysecret.c:259 -1
     (nil))
(insn 697 696 698 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 219 [ D.7322 ])
            (const_int 0 [0]))) policysecret.c:259 -1
     (nil))
(jump_insn 698 697 699 87 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 703)
            (pc))) policysecret.c:259 -1
     (nil)
 -> 703)
(note 699 698 700 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 700 699 701 88 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7fbac5118a20 *.LC33>)) policysecret.c:260 -1
     (nil))
(call_insn 701 700 702 88 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:260 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 702 701 703 88 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:261 -1
     (nil)
    (nil))
(code_label 703 702 704 89 53 "" [1 uses])
(note 704 703 705 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 705 704 706 89 (set (reg:SI 220 [ D.7322 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -812 [0xfffffffffffffcd4])) [0 policySession+0 S4 A32])) policysecret.c:263 -1
     (nil))
(insn 706 705 707 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 220 [ D.7322 ])
            (const_int 0 [0]))) policysecret.c:263 -1
     (nil))
(jump_insn 707 706 708 89 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 712)
            (pc))) policysecret.c:263 -1
     (nil)
 -> 712)
(note 708 707 709 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 709 708 710 90 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fbac5118ab0 *.LC34>)) policysecret.c:264 -1
     (nil))
(call_insn 710 709 711 90 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:264 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 711 710 712 90 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fbac50a5948 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policysecret.c:265 -1
     (nil)
    (nil))
(code_label 712 711 713 91 54 "" [1 uses])
(note 713 712 714 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 714 713 715 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysecret.c:267 -1
     (nil))
(jump_insn 715 714 716 91 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 721)
            (pc))) policysecret.c:267 -1
     (nil)
 -> 721)
(note 716 715 717 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 717 716 718 92 (set (reg:SI 221 [ D.7322 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -816 [0xfffffffffffffcd0])) [0 authHandle+0 S4 A64])) policysecret.c:268 -1
     (nil))
(insn 718 717 719 92 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [0 in.authHandle+0 S4 A64])
        (reg:SI 221 [ D.7322 ])) policysecret.c:268 -1
     (nil))
(insn 719 718 720 92 (set (reg:SI 222 [ D.7322 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -812 [0xfffffffffffffcd4])) [0 policySession+0 S4 A32])) policysecret.c:269 -1
     (nil))
(insn 720 719 721 92 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -412 [0xfffffffffffffe64])) [0 in.policySession+0 S4 A32])
        (reg:SI 222 [ D.7322 ])) policysecret.c:269 -1
     (nil))
(code_label 721 720 722 93 55 "" [1 uses])
(note 722 721 723 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 723 722 724 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysecret.c:271 -1
     (nil))
(jump_insn 724 723 725 93 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 738)
            (pc))) policysecret.c:271 -1
     (nil)
 -> 738)
(note 725 724 726 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 726 725 727 94 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -736 [0xfffffffffffffd20])) [0 nonceTPMFilename+0 S8 A64])
            (const_int 0 [0]))) policysecret.c:271 -1
     (nil))
(jump_insn 727 726 728 94 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 738)
            (pc))) policysecret.c:271 -1
     (nil)
 -> 738)
(note 728 727 729 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 729 728 730 95 (set (reg:DI 330)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -736 [0xfffffffffffffd20])) [0 nonceTPMFilename+0 S8 A64])) policysecret.c:272 -1
     (nil))
(insn 730 729 731 95 (parallel [
            (set (reg:DI 331)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:272 -1
     (nil))
(insn 731 730 732 95 (parallel [
            (set (reg:DI 332)
                (plus:DI (reg:DI 331)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:272 -1
     (nil))
(insn 732 731 733 95 (set (reg:DI 1 dx)
        (reg:DI 330)) policysecret.c:272 -1
     (nil))
(insn 733 732 734 95 (set (reg:SI 4 si)
        (const_int 128 [0x80])) policysecret.c:272 -1
     (nil))
(insn 734 733 735 95 (set (reg:DI 5 di)
        (reg:DI 332)) policysecret.c:272 -1
     (nil))
(call_insn 735 734 736 95 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_Read2B") [flags 0x41]  <function_decl 0x7fbac53e9ca8 TSS_File_Read2B>) [0 TSS_File_Read2B S1 A8])
            (const_int 0 [0]))) policysecret.c:272 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 736 735 737 95 (set (reg:SI 333)
        (reg:SI 0 ax)) policysecret.c:272 -1
     (nil))
(insn 737 736 738 95 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
        (reg:SI 333)) policysecret.c:272 -1
     (nil))
(code_label 738 737 739 96 56 "" [2 uses])
(note 739 738 740 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 740 739 741 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysecret.c:276 -1
     (nil))
(jump_insn 741 740 742 96 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 755)
            (pc))) policysecret.c:276 -1
     (nil)
 -> 755)
(note 742 741 743 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 743 742 744 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -728 [0xfffffffffffffd28])) [0 cpHashAFilename+0 S8 A64])
            (const_int 0 [0]))) policysecret.c:276 -1
     (nil))
(jump_insn 744 743 745 97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 755)
            (pc))) policysecret.c:276 -1
     (nil)
 -> 755)
(note 745 744 746 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 746 745 747 98 (set (reg:DI 334)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -728 [0xfffffffffffffd28])) [0 cpHashAFilename+0 S8 A64])) policysecret.c:277 -1
     (nil))
(insn 747 746 748 98 (parallel [
            (set (reg:DI 335)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:277 -1
     (nil))
(insn 748 747 749 98 (parallel [
            (set (reg:DI 336)
                (plus:DI (reg:DI 335)
                    (const_int 138 [0x8a])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:277 -1
     (nil))
(insn 749 748 750 98 (set (reg:DI 1 dx)
        (reg:DI 334)) policysecret.c:277 -1
     (nil))
(insn 750 749 751 98 (set (reg:SI 4 si)
        (const_int 128 [0x80])) policysecret.c:277 -1
     (nil))
(insn 751 750 752 98 (set (reg:DI 5 di)
        (reg:DI 336)) policysecret.c:277 -1
     (nil))
(call_insn 752 751 753 98 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_Read2B") [flags 0x41]  <function_decl 0x7fbac53e9ca8 TSS_File_Read2B>) [0 TSS_File_Read2B S1 A8])
            (const_int 0 [0]))) policysecret.c:277 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 753 752 754 98 (set (reg:SI 337)
        (reg:SI 0 ax)) policysecret.c:277 -1
     (nil))
(insn 754 753 755 98 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
        (reg:SI 337)) policysecret.c:277 -1
     (nil))
(code_label 755 754 756 99 57 "" [2 uses])
(note 756 755 757 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 757 756 758 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysecret.c:281 -1
     (nil))
(jump_insn 758 757 759 99 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 772)
            (pc))) policysecret.c:281 -1
     (nil)
 -> 772)
(note 759 758 760 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 760 759 761 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -720 [0xfffffffffffffd30])) [0 policyRefFilename+0 S8 A64])
            (const_int 0 [0]))) policysecret.c:281 -1
     (nil))
(jump_insn 761 760 762 100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 772)
            (pc))) policysecret.c:281 -1
     (nil)
 -> 772)
(note 762 761 763 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 763 762 764 101 (set (reg:DI 338)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -720 [0xfffffffffffffd30])) [0 policyRefFilename+0 S8 A64])) policysecret.c:282 -1
     (nil))
(insn 764 763 765 101 (parallel [
            (set (reg:DI 339)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:282 -1
     (nil))
(insn 765 764 766 101 (parallel [
            (set (reg:DI 340)
                (plus:DI (reg:DI 339)
                    (const_int 268 [0x10c])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:282 -1
     (nil))
(insn 766 765 767 101 (set (reg:DI 1 dx)
        (reg:DI 338)) policysecret.c:282 -1
     (nil))
(insn 767 766 768 101 (set (reg:SI 4 si)
        (const_int 128 [0x80])) policysecret.c:282 -1
     (nil))
(insn 768 767 769 101 (set (reg:DI 5 di)
        (reg:DI 340)) policysecret.c:282 -1
     (nil))
(call_insn 769 768 770 101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_Read2B") [flags 0x41]  <function_decl 0x7fbac53e9ca8 TSS_File_Read2B>) [0 TSS_File_Read2B S1 A8])
            (const_int 0 [0]))) policysecret.c:282 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 770 769 771 101 (set (reg:SI 341)
        (reg:SI 0 ax)) policysecret.c:282 -1
     (nil))
(insn 771 770 772 101 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
        (reg:SI 341)) policysecret.c:282 -1
     (nil))
(code_label 772 771 773 102 58 "" [2 uses])
(note 773 772 774 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 774 773 775 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysecret.c:286 -1
     (nil))
(jump_insn 775 774 776 102 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 779)
            (pc))) policysecret.c:286 -1
     (nil)
 -> 779)
(note 776 775 777 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 777 776 778 103 (set (reg:SI 342)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -776 [0xfffffffffffffcf8])) [0 expiration+0 S4 A32])) policysecret.c:287 -1
     (nil))
(insn 778 777 779 103 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 in.expiration+0 S4 A64])
        (reg:SI 342)) policysecret.c:287 -1
     (nil))
(code_label 779 778 780 104 59 "" [1 uses])
(note 780 779 781 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 781 780 782 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysecret.c:290 -1
     (nil))
(jump_insn 782 781 783 104 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 789)
            (pc))) policysecret.c:290 -1
     (nil)
 -> 789)
(note 783 782 784 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 784 783 785 105 (parallel [
            (set (reg:DI 343)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -768 [0xfffffffffffffd00])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:291 -1
     (nil))
(insn 785 784 786 105 (set (reg:DI 5 di)
        (reg:DI 343)) policysecret.c:291 -1
     (nil))
(call_insn 786 785 787 105 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Create") [flags 0x41]  <function_decl 0x7fbac53e1ca8 TSS_Create>) [0 TSS_Create S1 A8])
            (const_int 0 [0]))) policysecret.c:291 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 787 786 788 105 (set (reg:SI 344)
        (reg:SI 0 ax)) policysecret.c:291 -1
     (nil))
(insn 788 787 789 105 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
        (reg:SI 344)) policysecret.c:291 -1
     (nil))
(code_label 789 788 790 106 60 "" [1 uses])
(note 790 789 791 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 791 790 792 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysecret.c:294 -1
     (nil))
(jump_insn 792 791 793 106 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 826)
            (pc))) policysecret.c:294 -1
     (nil)
 -> 826)
(note 793 792 794 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 794 793 795 107 (set (reg:SI 223 [ D.7322 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -788 [0xfffffffffffffcec])) [0 sessionAttributes2+0 S4 A32])) policysecret.c:295 -1
     (nil))
(insn 795 794 796 107 (set (reg:SI 224 [ D.7322 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -792 [0xfffffffffffffce8])) [0 sessionHandle2+0 S4 A64])) policysecret.c:295 -1
     (nil))
(insn 796 795 797 107 (set (reg:SI 225 [ D.7322 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -796 [0xfffffffffffffce4])) [0 sessionAttributes1+0 S4 A32])) policysecret.c:295 -1
     (nil))
(insn 797 796 798 107 (set (reg:SI 226 [ D.7322 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -800 [0xfffffffffffffce0])) [0 sessionHandle1+0 S4 A64])) policysecret.c:295 -1
     (nil))
(insn 798 797 799 107 (set (reg:SI 227 [ D.7322 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -804 [0xfffffffffffffcdc])) [0 sessionAttributes0+0 S4 A32])) policysecret.c:295 -1
     (nil))
(insn 799 798 800 107 (set (reg:SI 228 [ D.7322 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -808 [0xfffffffffffffcd8])) [0 sessionHandle0+0 S4 A64])) policysecret.c:295 -1
     (nil))
(insn 800 799 801 107 (set (reg/f:DI 229 [ D.7323 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -768 [0xfffffffffffffd00])) [0 tssContext+0 S8 A64])) policysecret.c:295 -1
     (nil))
(insn 801 800 802 107 (parallel [
            (set (reg:DI 345)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:295 -1
     (nil))
(insn 802 801 803 107 (parallel [
            (set (reg:DI 346)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:295 -1
     (nil))
(insn 803 802 804 107 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:295 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 804 803 805 107 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) policysecret.c:295 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 805 804 806 107 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policysecret.c:295 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 806 805 807 107 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1073741831 [0x40000007])) policysecret.c:295 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 807 806 808 107 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 223 [ D.7322 ])) policysecret.c:295 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 808 807 809 107 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policysecret.c:295 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 809 808 810 107 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 224 [ D.7322 ])) policysecret.c:295 -1
     (expr_list:REG_ARGS_SIZE (const_int 56 [0x38])
        (nil)))
(insn 810 809 811 107 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 225 [ D.7322 ])) policysecret.c:295 -1
     (expr_list:REG_ARGS_SIZE (const_int 64 [0x40])
        (nil)))
(insn 811 810 812 107 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policysecret.c:295 -1
     (expr_list:REG_ARGS_SIZE (const_int 72 [0x48])
        (nil)))
(insn 812 811 813 107 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 226 [ D.7322 ])) policysecret.c:295 -1
     (expr_list:REG_ARGS_SIZE (const_int 80 [0x50])
        (nil)))
(insn 813 812 814 107 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 227 [ D.7322 ])) policysecret.c:295 -1
     (expr_list:REG_ARGS_SIZE (const_int 88 [0x58])
        (nil)))
(insn 814 813 815 107 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -696 [0xfffffffffffffd48])) [0 entityPassword+0 S8 A64])) policysecret.c:295 -1
     (expr_list:REG_ARGS_SIZE (const_int 96 [0x60])
        (nil)))
(insn 815 814 816 107 (set (reg:SI 38 r9)
        (reg:SI 228 [ D.7322 ])) policysecret.c:295 -1
     (nil))
(insn 816 815 817 107 (set (reg:SI 37 r8)
        (const_int 337 [0x151])) policysecret.c:295 -1
     (nil))
(insn 817 816 818 107 (set (reg:DI 2 cx)
        (const_int 0 [0])) policysecret.c:295 -1
     (nil))
(insn 818 817 819 107 (set (reg:DI 1 dx)
        (reg:DI 345)) policysecret.c:295 -1
     (nil))
(insn 819 818 820 107 (set (reg:DI 4 si)
        (reg:DI 346)) policysecret.c:295 -1
     (nil))
(insn 820 819 821 107 (set (reg:DI 5 di)
        (reg/f:DI 229 [ D.7323 ])) policysecret.c:295 -1
     (nil))
(insn 821 820 822 107 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysecret.c:295 -1
     (nil))
(call_insn 822 821 823 107 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fbac53e1e58 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 96 [0x60]))) policysecret.c:295 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 823 822 824 107 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:295 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 824 823 825 107 (set (reg:SI 347)
        (reg:SI 0 ax)) policysecret.c:295 -1
     (nil))
(insn 825 824 826 107 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
        (reg:SI 347)) policysecret.c:295 -1
     (nil))
(code_label 826 825 827 108 61 "" [1 uses])
(note 827 826 828 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 828 827 829 108 (set (reg/f:DI 230 [ D.7323 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -768 [0xfffffffffffffd00])) [0 tssContext+0 S8 A64])) policysecret.c:306 -1
     (nil))
(insn 829 828 830 108 (set (reg:DI 5 di)
        (reg/f:DI 230 [ D.7323 ])) policysecret.c:306 -1
     (nil))
(call_insn 830 829 831 108 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Delete") [flags 0x41]  <function_decl 0x7fbac53e1d80 TSS_Delete>) [0 TSS_Delete S1 A8])
            (const_int 0 [0]))) policysecret.c:306 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 831 830 832 108 (set (reg:SI 348)
        (reg:SI 0 ax)) policysecret.c:306 -1
     (nil))
(insn 832 831 833 108 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 rc1+0 S4 A32])
        (reg:SI 348)) policysecret.c:306 -1
     (nil))
(insn 833 832 834 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysecret.c:307 -1
     (nil))
(jump_insn 834 833 835 108 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 838)
            (pc))) policysecret.c:307 -1
     (nil)
 -> 838)
(note 835 834 836 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 836 835 837 109 (set (reg:SI 349)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 rc1+0 S4 A32])) policysecret.c:308 -1
     (nil))
(insn 837 836 838 109 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
        (reg:SI 349)) policysecret.c:308 -1
     (nil))
(code_label 838 837 839 110 62 "" [1 uses])
(note 839 838 840 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 840 839 841 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysecret.c:311 -1
     (nil))
(jump_insn 841 840 842 110 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 856)
            (pc))) policysecret.c:311 -1
     (nil)
 -> 856)
(note 842 841 843 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 843 842 844 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -712 [0xfffffffffffffd38])) [0 ticketFilename+0 S8 A64])
            (const_int 0 [0]))) policysecret.c:311 -1
     (nil))
(jump_insn 844 843 845 111 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 856)
            (pc))) policysecret.c:311 -1
     (nil)
 -> 856)
(note 845 844 846 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 846 845 847 112 (set (reg:DI 350)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -712 [0xfffffffffffffd38])) [0 ticketFilename+0 S8 A64])) policysecret.c:312 -1
     (nil))
(insn 847 846 848 112 (parallel [
            (set (reg:DI 351)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:312 -1
     (nil))
(insn 848 847 849 112 (parallel [
            (set (reg:DI 352)
                (plus:DI (reg:DI 351)
                    (const_int 132 [0x84])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:312 -1
     (nil))
(insn 849 848 850 112 (set (reg:DI 1 dx)
        (reg:DI 350)) policysecret.c:312 -1
     (nil))
(insn 850 849 851 112 (set (reg:DI 353)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("TSS_TPMT_TK_AUTH_Marshal") [flags 0x41]  <function_decl 0x7fbac506a000 TSS_TPMT_TK_AUTH_Marshal>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) policysecret.c:312 -1
     (nil))
(insn 851 850 852 112 (set (reg:DI 4 si)
        (reg:DI 353)) policysecret.c:312 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("TSS_TPMT_TK_AUTH_Marshal") [flags 0x41]  <function_decl 0x7fbac506a000 TSS_TPMT_TK_AUTH_Marshal>)
        (nil)))
(insn 852 851 853 112 (set (reg:DI 5 di)
        (reg:DI 352)) policysecret.c:312 -1
     (nil))
(call_insn 853 852 854 112 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_WriteStructure") [flags 0x41]  <function_decl 0x7fbac53e9bd0 TSS_File_WriteStructure>) [0 TSS_File_WriteStructure S1 A8])
            (const_int 0 [0]))) policysecret.c:312 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 854 853 855 112 (set (reg:SI 354)
        (reg:SI 0 ax)) policysecret.c:312 -1
     (nil))
(insn 855 854 856 112 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
        (reg:SI 354)) policysecret.c:312 -1
     (nil))
(code_label 856 855 857 113 63 "" [2 uses])
(note 857 856 858 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 858 857 859 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysecret.c:316 -1
     (nil))
(jump_insn 859 858 860 113 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 875)
            (pc))) policysecret.c:316 -1
     (nil)
 -> 875)
(note 860 859 861 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 861 860 862 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -704 [0xfffffffffffffd40])) [0 timeoutFilename+0 S8 A64])
            (const_int 0 [0]))) policysecret.c:316 -1
     (nil))
(jump_insn 862 861 863 114 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 875)
            (pc))) policysecret.c:316 -1
     (nil)
 -> 875)
(note 863 862 864 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 864 863 865 115 (set (reg:HI 231 [ D.7324 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [0 out.timeout.b.size+0 S2 A64])) policysecret.c:318 -1
     (nil))
(insn 865 864 866 115 (set (reg:DI 232 [ D.7318 ])
        (zero_extend:DI (reg:HI 231 [ D.7324 ]))) policysecret.c:317 -1
     (nil))
(insn 866 865 867 115 (set (reg:DI 355)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -704 [0xfffffffffffffd40])) [0 timeoutFilename+0 S8 A64])) policysecret.c:317 -1
     (nil))
(insn 867 866 868 115 (parallel [
            (set (reg:DI 356)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:317 -1
     (nil))
(insn 868 867 869 115 (parallel [
            (set (reg:DI 357)
                (plus:DI (reg:DI 356)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:317 -1
     (nil))
(insn 869 868 870 115 (set (reg:DI 1 dx)
        (reg:DI 355)) policysecret.c:317 -1
     (nil))
(insn 870 869 871 115 (set (reg:DI 4 si)
        (reg:DI 232 [ D.7318 ])) policysecret.c:317 -1
     (nil))
(insn 871 870 872 115 (set (reg:DI 5 di)
        (reg:DI 357)) policysecret.c:317 -1
     (nil))
(call_insn 872 871 873 115 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_WriteBinaryFile") [flags 0x41]  <function_decl 0x7fbac53e9a20 TSS_File_WriteBinaryFile>) [0 TSS_File_WriteBinaryFile S1 A8])
            (const_int 0 [0]))) policysecret.c:317 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 873 872 874 115 (set (reg:SI 358)
        (reg:SI 0 ax)) policysecret.c:317 -1
     (nil))
(insn 874 873 875 115 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
        (reg:SI 358)) policysecret.c:317 -1
     (nil))
(code_label 875 874 876 116 64 "" [2 uses])
(note 876 875 877 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 877 876 878 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policysecret.c:321 -1
     (nil))
(jump_insn 878 877 879 116 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 890)
            (pc))) policysecret.c:321 -1
     (nil)
 -> 890)
(note 879 878 880 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 880 879 881 117 (set (reg:SI 233 [ D.7321 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fbac5245090 verbose>) [0 verbose+0 S4 A32])) policysecret.c:322 -1
     (nil))
(insn 881 880 882 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 233 [ D.7321 ])
            (const_int 0 [0]))) policysecret.c:322 -1
     (nil))
(jump_insn 882 881 883 117 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 916)
            (pc))) policysecret.c:322 612 {*jcc_1}
     (nil)
 -> 916)
(note 883 882 884 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 884 883 885 118 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7fbac5118b40 *.LC35>)) policysecret.c:322 -1
     (nil))
(call_insn 885 884 888 118 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:322 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 888 885 889 118 (set (pc)
        (label_ref 916)) -1
     (nil)
 -> 916)
(barrier 889 888 890)
(code_label 890 889 891 120 65 "" [1 uses])
(note 891 890 892 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 892 891 893 120 (set (reg:SI 359)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])) policysecret.c:328 -1
     (nil))
(insn 893 892 894 120 (set (reg:SI 4 si)
        (reg:SI 359)) policysecret.c:328 -1
     (nil))
(insn 894 893 895 120 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fbac5118bd0 *.LC36>)) policysecret.c:328 -1
     (nil))
(insn 895 894 896 120 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysecret.c:328 -1
     (nil))
(call_insn 896 895 897 120 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fbac5483ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policysecret.c:328 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 897 896 898 120 (set (reg:SI 360)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])) policysecret.c:329 -1
     (nil))
(insn 898 897 899 120 (parallel [
            (set (reg:DI 361)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -744 [0xfffffffffffffd18])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:329 -1
     (nil))
(insn 899 898 900 120 (parallel [
            (set (reg:DI 362)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -752 [0xfffffffffffffd10])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:329 -1
     (nil))
(insn 900 899 901 120 (parallel [
            (set (reg:DI 363)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -760 [0xfffffffffffffd08])))
            (clobber (reg:CC 17 flags))
        ]) policysecret.c:329 -1
     (nil))
(insn 901 900 902 120 (set (reg:SI 2 cx)
        (reg:SI 360)) policysecret.c:329 -1
     (nil))
(insn 902 901 903 120 (set (reg:DI 1 dx)
        (reg:DI 361)) policysecret.c:329 -1
     (nil))
(insn 903 902 904 120 (set (reg:DI 4 si)
        (reg:DI 362)) policysecret.c:329 -1
     (nil))
(insn 904 903 905 120 (set (reg:DI 5 di)
        (reg:DI 363)) policysecret.c:329 -1
     (nil))
(call_insn 905 904 906 120 (call (mem:QI (symbol_ref:DI ("TSS_ResponseCode_toString") [flags 0x41]  <function_decl 0x7fbac53e9e58 TSS_ResponseCode_toString>) [0 TSS_ResponseCode_toString S1 A8])
        (const_int 0 [0])) policysecret.c:329 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 906 905 907 120 (set (reg/f:DI 234 [ D.7325 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -744 [0xfffffffffffffd18])) [0 num+0 S8 A64])) policysecret.c:330 -1
     (nil))
(insn 907 906 908 120 (set (reg/f:DI 235 [ D.7325 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -752 [0xfffffffffffffd10])) [0 submsg+0 S8 A64])) policysecret.c:330 -1
     (nil))
(insn 908 907 909 120 (set (reg/f:DI 236 [ D.7325 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -760 [0xfffffffffffffd08])) [0 msg+0 S8 A64])) policysecret.c:330 -1
     (nil))
(insn 909 908 910 120 (set (reg:DI 2 cx)
        (reg/f:DI 234 [ D.7325 ])) policysecret.c:330 -1
     (nil))
(insn 910 909 911 120 (set (reg:DI 1 dx)
        (reg/f:DI 235 [ D.7325 ])) policysecret.c:330 -1
     (nil))
(insn 911 910 912 120 (set (reg:DI 4 si)
        (reg/f:DI 236 [ D.7325 ])) policysecret.c:330 -1
     (nil))
(insn 912 911 913 120 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fbac5118c60 *.LC37>)) policysecret.c:330 -1
     (nil))
(insn 913 912 914 120 (set (reg:QI 0 ax)
        (const_int 0 [0])) policysecret.c:330 -1
     (nil))
(call_insn 914 913 915 120 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fbac5483ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policysecret.c:330 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 915 914 916 120 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) policysecret.c:331 -1
     (nil))
(code_label 916 915 917 121 67 "" [2 uses])
(note 917 916 918 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 918 917 921 121 (set (reg:SI 237 [ D.7321 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -784 [0xfffffffffffffcf0])) [0 rc+0 S4 A32])) policysecret.c:333 -1
     (nil))
(insn 921 918 925 121 (set (reg:SI 238 [ <retval> ])
        (reg:SI 237 [ D.7321 ])) -1
     (nil))
(insn 925 921 926 121 (set (reg/i:SI 0 ax)
        (reg:SI 238 [ <retval> ])) policysecret.c:334 -1
     (nil))
(insn 926 925 927 121 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.7326+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) policysecret.c:334 -1
     (nil))
(jump_insn 927 926 933 121 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 930)
            (pc))) policysecret.c:334 -1
     (nil)
 -> 930)
(note 933 927 928 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(call_insn 928 933 929 124 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fbac51025e8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) policysecret.c:334 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 929 928 930)
(code_label 930 929 934 125 69 "" [1 uses])
(note 934 930 931 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 931 934 0 125 (use (reg/i:SI 0 ax)) policysecret.c:334 -1
     (nil))

;; Function printUsage (printUsage, funcdef_no=3, decl_uid=6992, cgraph_uid=3, symbol_order=4)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policysecret.c:338 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fbac5486000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policysecret.c:338 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7fbac5145a20 *.LC38>)) policysecret.c:339 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:339 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policysecret.c:340 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fbac5486000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policysecret.c:340 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7fbac5145ab0 *.LC39>)) policysecret.c:341 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:341 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policysecret.c:342 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fbac5486000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policysecret.c:342 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC40") [flags 0x2]  <var_decl 0x7fbac5145b40 *.LC40>)) policysecret.c:343 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:343 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x7fbac5145bd0 *.LC41>)) policysecret.c:344 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:344 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC42") [flags 0x2]  <var_decl 0x7fbac5145c60 *.LC42>)) policysecret.c:345 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:345 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC43") [flags 0x2]  <var_decl 0x7fbac5145cf0 *.LC43>)) policysecret.c:346 -1
     (nil))
(call_insn 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:346 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC44") [flags 0x2]  <var_decl 0x7fbac5145d80 *.LC44>)) policysecret.c:347 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:347 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC45") [flags 0x2]  <var_decl 0x7fbac5145e10 *.LC45>)) policysecret.c:348 -1
     (nil))
(call_insn 26 25 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:348 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC46") [flags 0x2]  <var_decl 0x7fbac5145ea0 *.LC46>)) policysecret.c:349 -1
     (nil))
(call_insn 28 27 29 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:349 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC47") [flags 0x2]  <var_decl 0x7fbac5145f30 *.LC47>)) policysecret.c:350 -1
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:350 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC48") [flags 0x2]  <var_decl 0x7fbac5151000 *.LC48>)) policysecret.c:351 -1
     (nil))
(call_insn 32 31 33 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:351 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 33 32 34 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policysecret.c:352 -1
     (nil))
(call_insn 34 33 35 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fbac5486000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policysecret.c:352 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC49") [flags 0x2]  <var_decl 0x7fbac5151090 *.LC49>)) policysecret.c:353 -1
     (nil))
(call_insn 36 35 37 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:353 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC50") [flags 0x2]  <var_decl 0x7fbac5151120 *.LC50>)) policysecret.c:354 -1
     (nil))
(call_insn 38 37 39 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:354 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 39 38 40 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC51") [flags 0x2]  <var_decl 0x7fbac51511b0 *.LC51>)) policysecret.c:355 -1
     (nil))
(call_insn 40 39 41 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:355 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 41 40 42 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC52") [flags 0x2]  <var_decl 0x7fbac5151240 *.LC52>)) policysecret.c:356 -1
     (nil))
(call_insn 42 41 43 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fbac5486360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policysecret.c:356 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 43 42 44 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) policysecret.c:357 -1
     (nil))
(call_insn 44 43 45 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fbac5499000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) policysecret.c:357 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 45 44 0)
