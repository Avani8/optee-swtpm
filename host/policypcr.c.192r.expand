
;; Function main (main, funcdef_no=2, decl_uid=5217, cgraph_uid=2, symbol_order=3)

Partition 5: size 160 align 16
	in
Partition 16: size 8 align 8
	num
Partition 15: size 8 align 8
	submsg
Partition 14: size 8 align 8
	msg
Partition 4: size 8 align 8
	tssContext
Partition 3: size 4 align 4
	rc1_235
Partition 1: size 4 align 4
	i_5
Partition 0: size 4 align 4
	rc_1
Partition 13: size 4 align 4
	sessionAttributes2
Partition 12: size 4 align 4
	sessionHandle2
Partition 11: size 4 align 4
	sessionAttributes1
Partition 10: size 4 align 4
	sessionHandle1
Partition 9: size 4 align 4
	sessionAttributes0
Partition 8: size 4 align 4
	sessionHandle0
Partition 7: size 4 align 4
	pcrmask
Partition 6: size 4 align 4
	policySession
Partition 2: size 2 align 2
	halg_7

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 63 from 8 to 61.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Redirecting jump 108 from 16 to 61.
Redirecting jump 126 from 16 to 61.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.
Redirecting jump 135 from 18 to 61.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Edge 21->23 redirected to 61
Merging block 23 into block 22...
Merged blocks 22 and 23.
Merged 22 and 23 without moving.
Redirecting jump 195 from 25 to 61.
Merging block 25 into block 24...
Merged blocks 24 and 25.
Merged 24 and 25 without moving.
Edge 31->33 redirected to 61
Merging block 33 into block 32...
Merged blocks 32 and 33.
Merged 32 and 33 without moving.
Redirecting jump 273 from 35 to 61.
Merging block 35 into block 34...
Merged blocks 34 and 35.
Merged 34 and 35 without moving.
Edge 41->43 redirected to 61
Merging block 43 into block 42...
Merged blocks 42 and 43.
Merged 42 and 43 without moving.
Redirecting jump 351 from 45 to 61.
Merging block 45 into block 44...
Merged blocks 44 and 45.
Merged 44 and 45 without moving.
Edge 51->53 redirected to 61
Merging block 53 into block 52...
Merged blocks 52 and 53.
Merged 52 and 53 without moving.
Redirecting jump 429 from 55 to 61.
Merging block 55 into block 54...
Merged blocks 54 and 55.
Merged 54 and 55 without moving.
Edge 77->79 redirected to 81
Merging block 79 into block 78...
Merged blocks 78 and 79.
Merged 78 and 79 without moving.
Merging block 82 into block 81...
Merged blocks 81 and 82.
Merged 81 and 82 without moving.
Removing jump 651.
Merging block 83 into block 81...
Merged blocks 81 and 83.
Merged 81 and 83 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -260 [0xfffffffffffffefc])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) policypcr.c:58 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) policypcr.c:58 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.5458+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:58 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [0 rc+0 S4 A32])
        (const_int 0 [0])) policypcr.c:59 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 tssContext+0 S8 A64])
        (const_int 0 [0])) policypcr.c:61 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 policySession+0 S4 A32])
        (const_int 0 [0])) policypcr.c:63 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -254 [0xffffffffffffff02])) [0 halg+0 S2 A16])
        (const_int 11 [0xb])) policypcr.c:64 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 pcrmask+0 S4 A64])
        (const_int -1 [0xffffffffffffffff])) policypcr.c:65 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -244 [0xffffffffffffff0c])) [0 sessionHandle0+0 S4 A32])
        (const_int 1073741831 [0x40000007])) policypcr.c:66 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 sessionAttributes0+0 S4 A64])
        (const_int 0 [0])) policypcr.c:67 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -236 [0xffffffffffffff14])) [0 sessionHandle1+0 S4 A32])
        (const_int 1073741831 [0x40000007])) policypcr.c:68 -1
     (nil))
(insn 16 15 17 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [0 sessionAttributes1+0 S4 A64])
        (const_int 0 [0])) policypcr.c:69 -1
     (nil))
(insn 17 16 18 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -228 [0xffffffffffffff1c])) [0 sessionHandle2+0 S4 A32])
        (const_int 1073741831 [0x40000007])) policypcr.c:70 -1
     (nil))
(insn 18 17 19 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 sessionAttributes2+0 S4 A64])
        (const_int 0 [0])) policypcr.c:71 -1
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 87 [ D.5449 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f8c4f4565a0 stdout>) [0 stdout+0 S8 A64])) policypcr.c:73 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) policypcr.c:73 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) policypcr.c:73 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 4 si)
        (const_int 0 [0])) policypcr.c:73 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.5449 ])) policypcr.c:73 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("setvbuf") [flags 0x41]  <function_decl 0x7f8c4f4961b0 setvbuf>) [0 setvbuf S1 A8])
            (const_int 0 [0]))) policypcr.c:73 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 25 24 26 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f8c4ef45ea0 *.LC0>)) policypcr.c:74 -1
     (nil))
(insn 26 25 27 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) policypcr.c:74 -1
     (nil))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (const_int 0 [0])) policypcr.c:74 -1
     (nil))
(call_insn 28 27 29 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7f8c4f30a000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) policypcr.c:74 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 29 28 30 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) policypcr.c:77 -1
     (nil))
(jump_insn 30 29 31 2 (set (pc)
        (label_ref 496)) policypcr.c:77 -1
     (nil)
 -> 496)
(barrier 31 30 502)
(code_label 502 31 32 4 38 "" [1 uses])
(note 32 502 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 4 (set (reg:SI 207)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:78 -1
     (nil))
(insn 34 33 35 4 (set (reg:DI 88 [ D.5450 ])
        (sign_extend:DI (reg:SI 207))) policypcr.c:78 -1
     (nil))
(insn 35 34 36 4 (parallel [
            (set (reg:DI 89 [ D.5450 ])
                (ashift:DI (reg:DI 88 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:78 -1
     (nil))
(insn 36 35 37 4 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:78 -1
     (nil))
(insn 37 36 38 4 (parallel [
            (set (reg/f:DI 90 [ D.5451 ])
                (plus:DI (reg:DI 89 [ D.5450 ])
                    (reg/f:DI 208)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:78 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 89 [ D.5450 ]))
        (nil)))
(insn 38 37 39 4 (set (reg/f:DI 91 [ D.5452 ])
        (mem/f:DI (reg/f:DI 90 [ D.5451 ]) [0 *_54+0 S8 A64])) policypcr.c:78 -1
     (nil))
(insn 39 38 40 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f8c4ef45f30 *.LC1>)) policypcr.c:78 -1
     (nil))
(insn 40 39 41 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.5452 ])) policypcr.c:78 -1
     (nil))
(call_insn/i 41 40 42 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8c4f39e0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policypcr.c:78 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 42 41 43 4 (set (reg:SI 92 [ D.5453 ])
        (reg:SI 0 ax)) policypcr.c:78 -1
     (nil))
(insn 43 42 44 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.5453 ])
            (const_int 0 [0]))) policypcr.c:78 -1
     (nil))
(jump_insn 44 43 45 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) policypcr.c:78 -1
     (nil)
 -> 74)
(note 45 44 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:79 -1
     (nil))
(insn 47 46 48 5 (set (reg:SI 209)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:80 -1
     (nil))
(insn 48 47 49 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 209)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -260 [0xfffffffffffffefc])) [0 argc+0 S4 A32]))) policypcr.c:80 -1
     (nil))
(jump_insn 49 48 50 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) policypcr.c:80 -1
     (nil)
 -> 65)
(note 50 49 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 6 (set (reg:SI 210)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:81 -1
     (nil))
(insn 52 51 53 6 (set (reg:DI 93 [ D.5450 ])
        (sign_extend:DI (reg:SI 210))) policypcr.c:81 -1
     (nil))
(insn 53 52 54 6 (parallel [
            (set (reg:DI 94 [ D.5450 ])
                (ashift:DI (reg:DI 93 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:81 -1
     (nil))
(insn 54 53 55 6 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:81 -1
     (nil))
(insn 55 54 56 6 (parallel [
            (set (reg/f:DI 95 [ D.5451 ])
                (plus:DI (reg:DI 94 [ D.5450 ])
                    (reg/f:DI 211)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:81 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 94 [ D.5450 ]))
        (nil)))
(insn 56 55 57 6 (set (reg/f:DI 96 [ D.5452 ])
        (mem/f:DI (reg/f:DI 95 [ D.5451 ]) [0 *_60+0 S8 A64])) policypcr.c:81 -1
     (nil))
(insn 57 56 58 6 (parallel [
            (set (reg:DI 212)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:81 -1
     (nil))
(insn 58 57 59 6 (set (reg:DI 1 dx)
        (reg:DI 212)) policypcr.c:81 -1
     (nil))
(insn 59 58 60 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8c4ef45750 *.LC2>)) policypcr.c:81 -1
     (nil))
(insn 60 59 61 6 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.5452 ])) policypcr.c:81 -1
     (nil))
(insn 61 60 62 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) policypcr.c:81 -1
     (nil))
(call_insn 62 61 63 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f8c4f3a7ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policypcr.c:81 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 63 62 64 6 (set (pc)
        (label_ref:DI 493)) 654 {jump}
     (nil)
 -> 493)
(barrier 64 63 65)
(code_label 65 64 66 7 4 "" [1 uses])
(note 66 65 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f8c4ef457e0 *.LC3>)) policypcr.c:84 -1
     (nil))
(call_insn 68 67 69 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:84 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 69 68 72 7 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:85 -1
     (nil)
    (nil))
(jump_insn 72 69 73 7 (set (pc)
        (label_ref 493)) -1
     (nil)
 -> 493)
(barrier 73 72 74)
(code_label 74 73 75 9 3 "" [1 uses])
(note 75 74 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 9 (set (reg:SI 213)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:89 -1
     (nil))
(insn 77 76 78 9 (set (reg:DI 97 [ D.5450 ])
        (sign_extend:DI (reg:SI 213))) policypcr.c:89 -1
     (nil))
(insn 78 77 79 9 (parallel [
            (set (reg:DI 98 [ D.5450 ])
                (ashift:DI (reg:DI 97 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:89 -1
     (nil))
(insn 79 78 80 9 (set (reg/f:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:89 -1
     (nil))
(insn 80 79 81 9 (parallel [
            (set (reg/f:DI 99 [ D.5451 ])
                (plus:DI (reg:DI 98 [ D.5450 ])
                    (reg/f:DI 214)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:89 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 98 [ D.5450 ]))
        (nil)))
(insn 81 80 82 9 (set (reg/f:DI 100 [ D.5452 ])
        (mem/f:DI (reg/f:DI 99 [ D.5451 ]) [0 *_67+0 S8 A64])) policypcr.c:89 -1
     (nil))
(insn 82 81 83 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f8c4ef5a000 *.LC4>)) policypcr.c:89 -1
     (nil))
(insn 83 82 84 9 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.5452 ])) policypcr.c:89 -1
     (nil))
(call_insn/i 84 83 85 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8c4f39e0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policypcr.c:89 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 85 84 86 9 (set (reg:SI 101 [ D.5453 ])
        (reg:SI 0 ax)) policypcr.c:89 -1
     (nil))
(insn 86 85 87 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.5453 ])
            (const_int 0 [0]))) policypcr.c:89 -1
     (nil))
(jump_insn 87 86 88 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) policypcr.c:89 -1
     (nil)
 -> 146)
(note 88 87 89 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:90 -1
     (nil))
(insn 90 89 91 10 (set (reg:SI 215)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:91 -1
     (nil))
(insn 91 90 92 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 215)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -260 [0xfffffffffffffefc])) [0 argc+0 S4 A32]))) policypcr.c:91 -1
     (nil))
(jump_insn 92 91 93 10 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) policypcr.c:91 -1
     (nil)
 -> 137)
(note 93 92 94 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 11 (set (reg:SI 216)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:92 -1
     (nil))
(insn 95 94 96 11 (set (reg:DI 102 [ D.5450 ])
        (sign_extend:DI (reg:SI 216))) policypcr.c:92 -1
     (nil))
(insn 96 95 97 11 (parallel [
            (set (reg:DI 103 [ D.5450 ])
                (ashift:DI (reg:DI 102 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:92 -1
     (nil))
(insn 97 96 98 11 (set (reg/f:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:92 -1
     (nil))
(insn 98 97 99 11 (parallel [
            (set (reg/f:DI 104 [ D.5451 ])
                (plus:DI (reg:DI 103 [ D.5450 ])
                    (reg/f:DI 217)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:92 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 103 [ D.5450 ]))
        (nil)))
(insn 99 98 100 11 (set (reg/f:DI 105 [ D.5452 ])
        (mem/f:DI (reg/f:DI 104 [ D.5451 ]) [0 *_73+0 S8 A64])) policypcr.c:92 -1
     (nil))
(insn 100 99 101 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8c4ef5a090 *.LC5>)) policypcr.c:92 -1
     (nil))
(insn 101 100 102 11 (set (reg:DI 5 di)
        (reg/f:DI 105 [ D.5452 ])) policypcr.c:92 -1
     (nil))
(call_insn/i 102 101 103 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8c4f39e0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policypcr.c:92 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 103 102 104 11 (set (reg:SI 106 [ D.5453 ])
        (reg:SI 0 ax)) policypcr.c:92 -1
     (nil))
(insn 104 103 105 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 106 [ D.5453 ])
            (const_int 0 [0]))) policypcr.c:92 -1
     (nil))
(jump_insn 105 104 106 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) policypcr.c:92 -1
     (nil)
 -> 110)
(note 106 105 107 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 12 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -254 [0xffffffffffffff02])) [0 halg+0 S2 A16])
        (const_int 11 [0xb])) policypcr.c:93 -1
     (nil))
(jump_insn 108 107 109 12 (set (pc)
        (label_ref:DI 493)) 654 {jump}
     (nil)
 -> 493)
(barrier 109 108 110)
(code_label 110 109 111 13 9 "" [1 uses])
(note 111 110 112 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 13 (set (reg:SI 218)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:95 -1
     (nil))
(insn 113 112 114 13 (set (reg:DI 107 [ D.5450 ])
        (sign_extend:DI (reg:SI 218))) policypcr.c:95 -1
     (nil))
(insn 114 113 115 13 (parallel [
            (set (reg:DI 108 [ D.5450 ])
                (ashift:DI (reg:DI 107 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:95 -1
     (nil))
(insn 115 114 116 13 (set (reg/f:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:95 -1
     (nil))
(insn 116 115 117 13 (parallel [
            (set (reg/f:DI 109 [ D.5451 ])
                (plus:DI (reg:DI 108 [ D.5450 ])
                    (reg/f:DI 219)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:95 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 108 [ D.5450 ]))
        (nil)))
(insn 117 116 118 13 (set (reg/f:DI 110 [ D.5452 ])
        (mem/f:DI (reg/f:DI 109 [ D.5451 ]) [0 *_79+0 S8 A64])) policypcr.c:95 -1
     (nil))
(insn 118 117 119 13 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8c4ef5a120 *.LC6>)) policypcr.c:95 -1
     (nil))
(insn 119 118 120 13 (set (reg:DI 5 di)
        (reg/f:DI 110 [ D.5452 ])) policypcr.c:95 -1
     (nil))
(call_insn/i 120 119 121 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8c4f39e0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policypcr.c:95 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 121 120 122 13 (set (reg:SI 111 [ D.5453 ])
        (reg:SI 0 ax)) policypcr.c:95 -1
     (nil))
(insn 122 121 123 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.5453 ])
            (const_int 0 [0]))) policypcr.c:95 -1
     (nil))
(jump_insn 123 122 124 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 128)
            (pc))) policypcr.c:95 -1
     (nil)
 -> 128)
(note 124 123 125 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 14 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -254 [0xffffffffffffff02])) [0 halg+0 S2 A16])
        (const_int 4 [0x4])) policypcr.c:96 -1
     (nil))
(jump_insn 126 125 127 14 (set (pc)
        (label_ref:DI 493)) 654 {jump}
     (nil)
 -> 493)
(barrier 127 126 128)
(code_label 128 127 129 15 11 "" [1 uses])
(note 129 128 130 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f8c4ef5a1b0 *.LC7>)) policypcr.c:99 -1
     (nil))
(call_insn 131 130 132 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:99 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 132 131 135 15 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:100 -1
     (nil)
    (nil))
(jump_insn 135 132 136 15 (set (pc)
        (label_ref:DI 493)) 654 {jump}
     (nil)
 -> 493)
(barrier 136 135 137)
(code_label 137 136 138 17 8 "" [1 uses])
(note 138 137 139 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f8c4ef5a240 *.LC8>)) policypcr.c:104 -1
     (nil))
(call_insn 140 139 141 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:104 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 141 140 144 17 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:105 -1
     (nil)
    (nil))
(jump_insn 144 141 145 17 (set (pc)
        (label_ref 493)) -1
     (nil)
 -> 493)
(barrier 145 144 146)
(code_label 146 145 147 19 7 "" [1 uses])
(note 147 146 148 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 19 (set (reg:SI 220)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:108 -1
     (nil))
(insn 149 148 150 19 (set (reg:DI 112 [ D.5450 ])
        (sign_extend:DI (reg:SI 220))) policypcr.c:108 -1
     (nil))
(insn 150 149 151 19 (parallel [
            (set (reg:DI 113 [ D.5450 ])
                (ashift:DI (reg:DI 112 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:108 -1
     (nil))
(insn 151 150 152 19 (set (reg/f:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:108 -1
     (nil))
(insn 152 151 153 19 (parallel [
            (set (reg/f:DI 114 [ D.5451 ])
                (plus:DI (reg:DI 113 [ D.5450 ])
                    (reg/f:DI 221)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:108 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 113 [ D.5450 ]))
        (nil)))
(insn 153 152 154 19 (set (reg/f:DI 115 [ D.5452 ])
        (mem/f:DI (reg/f:DI 114 [ D.5451 ]) [0 *_89+0 S8 A64])) policypcr.c:108 -1
     (nil))
(insn 154 153 155 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f8c4ef5a2d0 *.LC9>)) policypcr.c:108 -1
     (nil))
(insn 155 154 156 19 (set (reg:DI 5 di)
        (reg/f:DI 115 [ D.5452 ])) policypcr.c:108 -1
     (nil))
(call_insn/i 156 155 157 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8c4f39e0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policypcr.c:108 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 157 156 158 19 (set (reg:SI 116 [ D.5453 ])
        (reg:SI 0 ax)) policypcr.c:108 -1
     (nil))
(insn 158 157 159 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ D.5453 ])
            (const_int 0 [0]))) policypcr.c:108 -1
     (nil))
(jump_insn 159 158 160 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) policypcr.c:108 -1
     (nil)
 -> 206)
(note 160 159 161 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:109 -1
     (nil))
(insn 162 161 163 20 (set (reg:SI 222)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:110 -1
     (nil))
(insn 163 162 164 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 222)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -260 [0xfffffffffffffefc])) [0 argc+0 S4 A32]))) policypcr.c:110 -1
     (nil))
(jump_insn 164 163 165 20 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 197)
            (pc))) policypcr.c:110 -1
     (nil)
 -> 197)
(note 165 164 166 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 21 (set (reg:SI 223)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:111 -1
     (nil))
(insn 167 166 168 21 (set (reg:DI 117 [ D.5450 ])
        (sign_extend:DI (reg:SI 223))) policypcr.c:111 -1
     (nil))
(insn 168 167 169 21 (parallel [
            (set (reg:DI 118 [ D.5450 ])
                (ashift:DI (reg:DI 117 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:111 -1
     (nil))
(insn 169 168 170 21 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:111 -1
     (nil))
(insn 170 169 171 21 (parallel [
            (set (reg/f:DI 119 [ D.5451 ])
                (plus:DI (reg:DI 118 [ D.5450 ])
                    (reg/f:DI 224)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:111 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 118 [ D.5450 ]))
        (nil)))
(insn 171 170 172 21 (set (reg/f:DI 120 [ D.5452 ])
        (mem/f:DI (reg/f:DI 119 [ D.5451 ]) [0 *_95+0 S8 A64])) policypcr.c:111 -1
     (nil))
(insn 172 171 173 21 (parallel [
            (set (reg:DI 225)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:111 -1
     (nil))
(insn 173 172 174 21 (set (reg:DI 1 dx)
        (reg:DI 225)) policypcr.c:111 -1
     (nil))
(insn 174 173 175 21 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8c4ef45750 *.LC2>)) policypcr.c:111 -1
     (nil))
(insn 175 174 176 21 (set (reg:DI 5 di)
        (reg/f:DI 120 [ D.5452 ])) policypcr.c:111 -1
     (nil))
(insn 176 175 177 21 (set (reg:QI 0 ax)
        (const_int 0 [0])) policypcr.c:111 -1
     (nil))
(call_insn 177 176 178 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f8c4f3a7ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policypcr.c:111 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 178 177 179 21 (set (reg:SI 121 [ D.5453 ])
        (reg:SI 0 ax)) policypcr.c:111 -1
     (nil))
(insn 179 178 180 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 121 [ D.5453 ])
            (const_int 1 [0x1]))) policypcr.c:111 -1
     (nil))
(jump_insn 180 179 181 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 493)
            (pc))) policypcr.c:111 612 {*jcc_1}
     (nil)
 -> 493)
(note 181 180 182 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 22 (set (reg:SI 226)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:112 -1
     (nil))
(insn 183 182 184 22 (set (reg:DI 122 [ D.5450 ])
        (sign_extend:DI (reg:SI 226))) policypcr.c:112 -1
     (nil))
(insn 184 183 185 22 (parallel [
            (set (reg:DI 123 [ D.5450 ])
                (ashift:DI (reg:DI 122 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:112 -1
     (nil))
(insn 185 184 186 22 (set (reg/f:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:112 -1
     (nil))
(insn 186 185 187 22 (parallel [
            (set (reg/f:DI 124 [ D.5451 ])
                (plus:DI (reg:DI 123 [ D.5450 ])
                    (reg/f:DI 227)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:112 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 123 [ D.5450 ]))
        (nil)))
(insn 187 186 188 22 (set (reg/f:DI 125 [ D.5452 ])
        (mem/f:DI (reg/f:DI 124 [ D.5451 ]) [0 *_101+0 S8 A64])) policypcr.c:112 -1
     (nil))
(insn 188 187 189 22 (set (reg:DI 4 si)
        (reg/f:DI 125 [ D.5452 ])) policypcr.c:112 -1
     (nil))
(insn 189 188 190 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f8c4ef5a360 *.LC10>)) policypcr.c:112 -1
     (nil))
(insn 190 189 191 22 (set (reg:QI 0 ax)
        (const_int 0 [0])) policypcr.c:112 -1
     (nil))
(call_insn 191 190 192 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8c4f3a4ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policypcr.c:112 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(call_insn 192 191 195 22 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:113 -1
     (nil)
    (nil))
(jump_insn 195 192 196 22 (set (pc)
        (label_ref:DI 493)) 654 {jump}
     (nil)
 -> 493)
(barrier 196 195 197)
(code_label 197 196 198 24 14 "" [1 uses])
(note 198 197 199 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 199 198 200 24 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f8c4ef5a3f0 *.LC11>)) policypcr.c:117 -1
     (nil))
(call_insn 200 199 201 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:117 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 201 200 204 24 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:118 -1
     (nil)
    (nil))
(jump_insn 204 201 205 24 (set (pc)
        (label_ref 493)) -1
     (nil)
 -> 493)
(barrier 205 204 206)
(code_label 206 205 207 26 13 "" [1 uses])
(note 207 206 208 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 26 (set (reg:SI 228)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:121 -1
     (nil))
(insn 209 208 210 26 (set (reg:DI 126 [ D.5450 ])
        (sign_extend:DI (reg:SI 228))) policypcr.c:121 -1
     (nil))
(insn 210 209 211 26 (parallel [
            (set (reg:DI 127 [ D.5450 ])
                (ashift:DI (reg:DI 126 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:121 -1
     (nil))
(insn 211 210 212 26 (set (reg/f:DI 229)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:121 -1
     (nil))
(insn 212 211 213 26 (parallel [
            (set (reg/f:DI 128 [ D.5451 ])
                (plus:DI (reg:DI 127 [ D.5450 ])
                    (reg/f:DI 229)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:121 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 127 [ D.5450 ]))
        (nil)))
(insn 213 212 214 26 (set (reg/f:DI 129 [ D.5452 ])
        (mem/f:DI (reg/f:DI 128 [ D.5451 ]) [0 *_109+0 S8 A64])) policypcr.c:121 -1
     (nil))
(insn 214 213 215 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f8c4ef5a480 *.LC12>)) policypcr.c:121 -1
     (nil))
(insn 215 214 216 26 (set (reg:DI 5 di)
        (reg/f:DI 129 [ D.5452 ])) policypcr.c:121 -1
     (nil))
(call_insn/i 216 215 217 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8c4f39e0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policypcr.c:121 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 217 216 218 26 (set (reg:SI 130 [ D.5453 ])
        (reg:SI 0 ax)) policypcr.c:121 -1
     (nil))
(insn 218 217 219 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ D.5453 ])
            (const_int 0 [0]))) policypcr.c:121 -1
     (nil))
(jump_insn 219 218 220 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) policypcr.c:121 -1
     (nil)
 -> 284)
(note 220 219 221 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 27 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:122 -1
     (nil))
(insn 222 221 223 27 (set (reg:SI 230)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:123 -1
     (nil))
(insn 223 222 224 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 230)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -260 [0xfffffffffffffefc])) [0 argc+0 S4 A32]))) policypcr.c:123 -1
     (nil))
(jump_insn 224 223 225 27 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) policypcr.c:123 -1
     (nil)
 -> 240)
(note 225 224 226 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 28 (set (reg:SI 231)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:124 -1
     (nil))
(insn 227 226 228 28 (set (reg:DI 131 [ D.5450 ])
        (sign_extend:DI (reg:SI 231))) policypcr.c:124 -1
     (nil))
(insn 228 227 229 28 (parallel [
            (set (reg:DI 132 [ D.5450 ])
                (ashift:DI (reg:DI 131 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:124 -1
     (nil))
(insn 229 228 230 28 (set (reg/f:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:124 -1
     (nil))
(insn 230 229 231 28 (parallel [
            (set (reg/f:DI 133 [ D.5451 ])
                (plus:DI (reg:DI 132 [ D.5450 ])
                    (reg/f:DI 232)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:124 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 132 [ D.5450 ]))
        (nil)))
(insn 231 230 232 28 (set (reg/f:DI 134 [ D.5452 ])
        (mem/f:DI (reg/f:DI 133 [ D.5451 ]) [0 *_115+0 S8 A64])) policypcr.c:124 -1
     (nil))
(insn 232 231 233 28 (parallel [
            (set (reg:DI 233)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -244 [0xffffffffffffff0c])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:124 -1
     (nil))
(insn 233 232 234 28 (set (reg:DI 1 dx)
        (reg:DI 233)) policypcr.c:124 -1
     (nil))
(insn 234 233 235 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8c4ef45750 *.LC2>)) policypcr.c:124 -1
     (nil))
(insn 235 234 236 28 (set (reg:DI 5 di)
        (reg/f:DI 134 [ D.5452 ])) policypcr.c:124 -1
     (nil))
(insn 236 235 237 28 (set (reg:QI 0 ax)
        (const_int 0 [0])) policypcr.c:124 -1
     (nil))
(call_insn 237 236 238 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f8c4f3a7ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policypcr.c:124 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 238 237 239 28 (set (pc)
        (label_ref 245)) -1
     (nil)
 -> 245)
(barrier 239 238 240)
(code_label 240 239 241 29 18 "" [1 uses])
(note 241 240 242 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 29 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f8c4ef5a510 *.LC13>)) policypcr.c:127 -1
     (nil))
(call_insn 243 242 244 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:127 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 244 243 245 29 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:128 -1
     (nil)
    (nil))
(code_label 245 244 246 30 19 "" [1 uses])
(note 246 245 247 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 30 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:130 -1
     (nil))
(insn 248 247 249 30 (set (reg:SI 234)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:131 -1
     (nil))
(insn 249 248 250 30 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 234)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -260 [0xfffffffffffffefc])) [0 argc+0 S4 A32]))) policypcr.c:131 -1
     (nil))
(jump_insn 250 249 251 30 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 275)
            (pc))) policypcr.c:131 -1
     (nil)
 -> 275)
(note 251 250 252 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 252 251 253 31 (set (reg:SI 235)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:132 -1
     (nil))
(insn 253 252 254 31 (set (reg:DI 135 [ D.5450 ])
        (sign_extend:DI (reg:SI 235))) policypcr.c:132 -1
     (nil))
(insn 254 253 255 31 (parallel [
            (set (reg:DI 136 [ D.5450 ])
                (ashift:DI (reg:DI 135 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:132 -1
     (nil))
(insn 255 254 256 31 (set (reg/f:DI 236)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:132 -1
     (nil))
(insn 256 255 257 31 (parallel [
            (set (reg/f:DI 137 [ D.5451 ])
                (plus:DI (reg:DI 136 [ D.5450 ])
                    (reg/f:DI 236)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:132 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 136 [ D.5450 ]))
        (nil)))
(insn 257 256 258 31 (set (reg/f:DI 138 [ D.5452 ])
        (mem/f:DI (reg/f:DI 137 [ D.5451 ]) [0 *_123+0 S8 A64])) policypcr.c:132 -1
     (nil))
(insn 258 257 259 31 (parallel [
            (set (reg:DI 237)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:132 -1
     (nil))
(insn 259 258 260 31 (set (reg:DI 1 dx)
        (reg:DI 237)) policypcr.c:132 -1
     (nil))
(insn 260 259 261 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8c4ef45750 *.LC2>)) policypcr.c:132 -1
     (nil))
(insn 261 260 262 31 (set (reg:DI 5 di)
        (reg/f:DI 138 [ D.5452 ])) policypcr.c:132 -1
     (nil))
(insn 262 261 263 31 (set (reg:QI 0 ax)
        (const_int 0 [0])) policypcr.c:132 -1
     (nil))
(call_insn 263 262 264 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f8c4f3a7ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policypcr.c:132 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 264 263 265 31 (set (reg:SI 139 [ D.5454 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 sessionAttributes0+0 S4 A64])) policypcr.c:133 -1
     (nil))
(insn 265 264 266 31 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 139 [ D.5454 ])
            (const_int 255 [0xff]))) policypcr.c:133 -1
     (nil))
(jump_insn 266 265 267 31 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 493)
            (pc))) policypcr.c:133 612 {*jcc_1}
     (nil)
 -> 493)
(note 267 266 268 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 32 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f8c4ef5a5a0 *.LC14>)) policypcr.c:134 -1
     (nil))
(call_insn 269 268 270 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:134 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 270 269 273 32 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:135 -1
     (nil)
    (nil))
(jump_insn 273 270 274 32 (set (pc)
        (label_ref:DI 493)) 654 {jump}
     (nil)
 -> 493)
(barrier 274 273 275)
(code_label 275 274 276 34 20 "" [1 uses])
(note 276 275 277 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 277 276 278 34 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f8c4ef5a510 *.LC13>)) policypcr.c:139 -1
     (nil))
(call_insn 278 277 279 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:139 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 279 278 282 34 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:140 -1
     (nil)
    (nil))
(jump_insn 282 279 283 34 (set (pc)
        (label_ref 493)) -1
     (nil)
 -> 493)
(barrier 283 282 284)
(code_label 284 283 285 36 17 "" [1 uses])
(note 285 284 286 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 36 (set (reg:SI 238)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:143 -1
     (nil))
(insn 287 286 288 36 (set (reg:DI 140 [ D.5450 ])
        (sign_extend:DI (reg:SI 238))) policypcr.c:143 -1
     (nil))
(insn 288 287 289 36 (parallel [
            (set (reg:DI 141 [ D.5450 ])
                (ashift:DI (reg:DI 140 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:143 -1
     (nil))
(insn 289 288 290 36 (set (reg/f:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:143 -1
     (nil))
(insn 290 289 291 36 (parallel [
            (set (reg/f:DI 142 [ D.5451 ])
                (plus:DI (reg:DI 141 [ D.5450 ])
                    (reg/f:DI 239)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:143 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 141 [ D.5450 ]))
        (nil)))
(insn 291 290 292 36 (set (reg/f:DI 143 [ D.5452 ])
        (mem/f:DI (reg/f:DI 142 [ D.5451 ]) [0 *_133+0 S8 A64])) policypcr.c:143 -1
     (nil))
(insn 292 291 293 36 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f8c4ef5a630 *.LC15>)) policypcr.c:143 -1
     (nil))
(insn 293 292 294 36 (set (reg:DI 5 di)
        (reg/f:DI 143 [ D.5452 ])) policypcr.c:143 -1
     (nil))
(call_insn/i 294 293 295 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8c4f39e0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policypcr.c:143 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 295 294 296 36 (set (reg:SI 144 [ D.5453 ])
        (reg:SI 0 ax)) policypcr.c:143 -1
     (nil))
(insn 296 295 297 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 144 [ D.5453 ])
            (const_int 0 [0]))) policypcr.c:143 -1
     (nil))
(jump_insn 297 296 298 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 362)
            (pc))) policypcr.c:143 -1
     (nil)
 -> 362)
(note 298 297 299 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 300 37 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:144 -1
     (nil))
(insn 300 299 301 37 (set (reg:SI 240)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:145 -1
     (nil))
(insn 301 300 302 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 240)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -260 [0xfffffffffffffefc])) [0 argc+0 S4 A32]))) policypcr.c:145 -1
     (nil))
(jump_insn 302 301 303 37 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 318)
            (pc))) policypcr.c:145 -1
     (nil)
 -> 318)
(note 303 302 304 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 38 (set (reg:SI 241)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:146 -1
     (nil))
(insn 305 304 306 38 (set (reg:DI 145 [ D.5450 ])
        (sign_extend:DI (reg:SI 241))) policypcr.c:146 -1
     (nil))
(insn 306 305 307 38 (parallel [
            (set (reg:DI 146 [ D.5450 ])
                (ashift:DI (reg:DI 145 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:146 -1
     (nil))
(insn 307 306 308 38 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:146 -1
     (nil))
(insn 308 307 309 38 (parallel [
            (set (reg/f:DI 147 [ D.5451 ])
                (plus:DI (reg:DI 146 [ D.5450 ])
                    (reg/f:DI 242)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:146 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 146 [ D.5450 ]))
        (nil)))
(insn 309 308 310 38 (set (reg/f:DI 148 [ D.5452 ])
        (mem/f:DI (reg/f:DI 147 [ D.5451 ]) [0 *_139+0 S8 A64])) policypcr.c:146 -1
     (nil))
(insn 310 309 311 38 (parallel [
            (set (reg:DI 243)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -236 [0xffffffffffffff14])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:146 -1
     (nil))
(insn 311 310 312 38 (set (reg:DI 1 dx)
        (reg:DI 243)) policypcr.c:146 -1
     (nil))
(insn 312 311 313 38 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8c4ef45750 *.LC2>)) policypcr.c:146 -1
     (nil))
(insn 313 312 314 38 (set (reg:DI 5 di)
        (reg/f:DI 148 [ D.5452 ])) policypcr.c:146 -1
     (nil))
(insn 314 313 315 38 (set (reg:QI 0 ax)
        (const_int 0 [0])) policypcr.c:146 -1
     (nil))
(call_insn 315 314 316 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f8c4f3a7ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policypcr.c:146 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 316 315 317 38 (set (pc)
        (label_ref 323)) -1
     (nil)
 -> 323)
(barrier 317 316 318)
(code_label 318 317 319 39 24 "" [1 uses])
(note 319 318 320 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 320 319 321 39 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f8c4ef5a6c0 *.LC16>)) policypcr.c:149 -1
     (nil))
(call_insn 321 320 322 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:149 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 322 321 323 39 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:150 -1
     (nil)
    (nil))
(code_label 323 322 324 40 25 "" [1 uses])
(note 324 323 325 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 325 324 326 40 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:152 -1
     (nil))
(insn 326 325 327 40 (set (reg:SI 244)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:153 -1
     (nil))
(insn 327 326 328 40 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 244)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -260 [0xfffffffffffffefc])) [0 argc+0 S4 A32]))) policypcr.c:153 -1
     (nil))
(jump_insn 328 327 329 40 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 353)
            (pc))) policypcr.c:153 -1
     (nil)
 -> 353)
(note 329 328 330 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 330 329 331 41 (set (reg:SI 245)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:154 -1
     (nil))
(insn 331 330 332 41 (set (reg:DI 149 [ D.5450 ])
        (sign_extend:DI (reg:SI 245))) policypcr.c:154 -1
     (nil))
(insn 332 331 333 41 (parallel [
            (set (reg:DI 150 [ D.5450 ])
                (ashift:DI (reg:DI 149 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:154 -1
     (nil))
(insn 333 332 334 41 (set (reg/f:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:154 -1
     (nil))
(insn 334 333 335 41 (parallel [
            (set (reg/f:DI 151 [ D.5451 ])
                (plus:DI (reg:DI 150 [ D.5450 ])
                    (reg/f:DI 246)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:154 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 150 [ D.5450 ]))
        (nil)))
(insn 335 334 336 41 (set (reg/f:DI 152 [ D.5452 ])
        (mem/f:DI (reg/f:DI 151 [ D.5451 ]) [0 *_147+0 S8 A64])) policypcr.c:154 -1
     (nil))
(insn 336 335 337 41 (parallel [
            (set (reg:DI 247)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -232 [0xffffffffffffff18])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:154 -1
     (nil))
(insn 337 336 338 41 (set (reg:DI 1 dx)
        (reg:DI 247)) policypcr.c:154 -1
     (nil))
(insn 338 337 339 41 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8c4ef45750 *.LC2>)) policypcr.c:154 -1
     (nil))
(insn 339 338 340 41 (set (reg:DI 5 di)
        (reg/f:DI 152 [ D.5452 ])) policypcr.c:154 -1
     (nil))
(insn 340 339 341 41 (set (reg:QI 0 ax)
        (const_int 0 [0])) policypcr.c:154 -1
     (nil))
(call_insn 341 340 342 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f8c4f3a7ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policypcr.c:154 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 342 341 343 41 (set (reg:SI 153 [ D.5454 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [0 sessionAttributes1+0 S4 A64])) policypcr.c:155 -1
     (nil))
(insn 343 342 344 41 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 153 [ D.5454 ])
            (const_int 255 [0xff]))) policypcr.c:155 -1
     (nil))
(jump_insn 344 343 345 41 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 493)
            (pc))) policypcr.c:155 612 {*jcc_1}
     (nil)
 -> 493)
(note 345 344 346 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 346 345 347 42 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f8c4ef5a750 *.LC17>)) policypcr.c:156 -1
     (nil))
(call_insn 347 346 348 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:156 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 348 347 351 42 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:157 -1
     (nil)
    (nil))
(jump_insn 351 348 352 42 (set (pc)
        (label_ref:DI 493)) 654 {jump}
     (nil)
 -> 493)
(barrier 352 351 353)
(code_label 353 352 354 44 26 "" [1 uses])
(note 354 353 355 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 44 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f8c4ef5a6c0 *.LC16>)) policypcr.c:161 -1
     (nil))
(call_insn 356 355 357 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:161 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 357 356 360 44 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:162 -1
     (nil)
    (nil))
(jump_insn 360 357 361 44 (set (pc)
        (label_ref 493)) -1
     (nil)
 -> 493)
(barrier 361 360 362)
(code_label 362 361 363 46 23 "" [1 uses])
(note 363 362 364 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 364 363 365 46 (set (reg:SI 248)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:165 -1
     (nil))
(insn 365 364 366 46 (set (reg:DI 154 [ D.5450 ])
        (sign_extend:DI (reg:SI 248))) policypcr.c:165 -1
     (nil))
(insn 366 365 367 46 (parallel [
            (set (reg:DI 155 [ D.5450 ])
                (ashift:DI (reg:DI 154 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:165 -1
     (nil))
(insn 367 366 368 46 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:165 -1
     (nil))
(insn 368 367 369 46 (parallel [
            (set (reg/f:DI 156 [ D.5451 ])
                (plus:DI (reg:DI 155 [ D.5450 ])
                    (reg/f:DI 249)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:165 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 155 [ D.5450 ]))
        (nil)))
(insn 369 368 370 46 (set (reg/f:DI 157 [ D.5452 ])
        (mem/f:DI (reg/f:DI 156 [ D.5451 ]) [0 *_157+0 S8 A64])) policypcr.c:165 -1
     (nil))
(insn 370 369 371 46 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f8c4ef5a7e0 *.LC18>)) policypcr.c:165 -1
     (nil))
(insn 371 370 372 46 (set (reg:DI 5 di)
        (reg/f:DI 157 [ D.5452 ])) policypcr.c:165 -1
     (nil))
(call_insn/i 372 371 373 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8c4f39e0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policypcr.c:165 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 373 372 374 46 (set (reg:SI 158 [ D.5453 ])
        (reg:SI 0 ax)) policypcr.c:165 -1
     (nil))
(insn 374 373 375 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 158 [ D.5453 ])
            (const_int 0 [0]))) policypcr.c:165 -1
     (nil))
(jump_insn 375 374 376 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 440)
            (pc))) policypcr.c:165 -1
     (nil)
 -> 440)
(note 376 375 377 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 377 376 378 47 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:166 -1
     (nil))
(insn 378 377 379 47 (set (reg:SI 250)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:167 -1
     (nil))
(insn 379 378 380 47 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 250)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -260 [0xfffffffffffffefc])) [0 argc+0 S4 A32]))) policypcr.c:167 -1
     (nil))
(jump_insn 380 379 381 47 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 396)
            (pc))) policypcr.c:167 -1
     (nil)
 -> 396)
(note 381 380 382 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 382 381 383 48 (set (reg:SI 251)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:168 -1
     (nil))
(insn 383 382 384 48 (set (reg:DI 159 [ D.5450 ])
        (sign_extend:DI (reg:SI 251))) policypcr.c:168 -1
     (nil))
(insn 384 383 385 48 (parallel [
            (set (reg:DI 160 [ D.5450 ])
                (ashift:DI (reg:DI 159 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:168 -1
     (nil))
(insn 385 384 386 48 (set (reg/f:DI 252)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:168 -1
     (nil))
(insn 386 385 387 48 (parallel [
            (set (reg/f:DI 161 [ D.5451 ])
                (plus:DI (reg:DI 160 [ D.5450 ])
                    (reg/f:DI 252)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:168 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 160 [ D.5450 ]))
        (nil)))
(insn 387 386 388 48 (set (reg/f:DI 162 [ D.5452 ])
        (mem/f:DI (reg/f:DI 161 [ D.5451 ]) [0 *_163+0 S8 A64])) policypcr.c:168 -1
     (nil))
(insn 388 387 389 48 (parallel [
            (set (reg:DI 253)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -228 [0xffffffffffffff1c])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:168 -1
     (nil))
(insn 389 388 390 48 (set (reg:DI 1 dx)
        (reg:DI 253)) policypcr.c:168 -1
     (nil))
(insn 390 389 391 48 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8c4ef45750 *.LC2>)) policypcr.c:168 -1
     (nil))
(insn 391 390 392 48 (set (reg:DI 5 di)
        (reg/f:DI 162 [ D.5452 ])) policypcr.c:168 -1
     (nil))
(insn 392 391 393 48 (set (reg:QI 0 ax)
        (const_int 0 [0])) policypcr.c:168 -1
     (nil))
(call_insn 393 392 394 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f8c4f3a7ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policypcr.c:168 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 394 393 395 48 (set (pc)
        (label_ref 401)) -1
     (nil)
 -> 401)
(barrier 395 394 396)
(code_label 396 395 397 49 30 "" [1 uses])
(note 397 396 398 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 398 397 399 49 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f8c4ef5a870 *.LC19>)) policypcr.c:171 -1
     (nil))
(call_insn 399 398 400 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:171 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 400 399 401 49 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:172 -1
     (nil)
    (nil))
(code_label 401 400 402 50 31 "" [1 uses])
(note 402 401 403 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 403 402 404 50 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:174 -1
     (nil))
(insn 404 403 405 50 (set (reg:SI 254)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:175 -1
     (nil))
(insn 405 404 406 50 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 254)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -260 [0xfffffffffffffefc])) [0 argc+0 S4 A32]))) policypcr.c:175 -1
     (nil))
(jump_insn 406 405 407 50 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 431)
            (pc))) policypcr.c:175 -1
     (nil)
 -> 431)
(note 407 406 408 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 408 407 409 51 (set (reg:SI 255)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:176 -1
     (nil))
(insn 409 408 410 51 (set (reg:DI 163 [ D.5450 ])
        (sign_extend:DI (reg:SI 255))) policypcr.c:176 -1
     (nil))
(insn 410 409 411 51 (parallel [
            (set (reg:DI 164 [ D.5450 ])
                (ashift:DI (reg:DI 163 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:176 -1
     (nil))
(insn 411 410 412 51 (set (reg/f:DI 256)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:176 -1
     (nil))
(insn 412 411 413 51 (parallel [
            (set (reg/f:DI 165 [ D.5451 ])
                (plus:DI (reg:DI 164 [ D.5450 ])
                    (reg/f:DI 256)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:176 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 164 [ D.5450 ]))
        (nil)))
(insn 413 412 414 51 (set (reg/f:DI 166 [ D.5452 ])
        (mem/f:DI (reg/f:DI 165 [ D.5451 ]) [0 *_171+0 S8 A64])) policypcr.c:176 -1
     (nil))
(insn 414 413 415 51 (parallel [
            (set (reg:DI 257)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:176 -1
     (nil))
(insn 415 414 416 51 (set (reg:DI 1 dx)
        (reg:DI 257)) policypcr.c:176 -1
     (nil))
(insn 416 415 417 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8c4ef45750 *.LC2>)) policypcr.c:176 -1
     (nil))
(insn 417 416 418 51 (set (reg:DI 5 di)
        (reg/f:DI 166 [ D.5452 ])) policypcr.c:176 -1
     (nil))
(insn 418 417 419 51 (set (reg:QI 0 ax)
        (const_int 0 [0])) policypcr.c:176 -1
     (nil))
(call_insn 419 418 420 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f8c4f3a7ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policypcr.c:176 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 420 419 421 51 (set (reg:SI 167 [ D.5454 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 sessionAttributes2+0 S4 A64])) policypcr.c:177 -1
     (nil))
(insn 421 420 422 51 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 167 [ D.5454 ])
            (const_int 255 [0xff]))) policypcr.c:177 -1
     (nil))
(jump_insn 422 421 423 51 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 493)
            (pc))) policypcr.c:177 612 {*jcc_1}
     (nil)
 -> 493)
(note 423 422 424 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 425 52 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f8c4ef5a900 *.LC20>)) policypcr.c:178 -1
     (nil))
(call_insn 425 424 426 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:178 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 426 425 429 52 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:179 -1
     (nil)
    (nil))
(jump_insn 429 426 430 52 (set (pc)
        (label_ref:DI 493)) 654 {jump}
     (nil)
 -> 493)
(barrier 430 429 431)
(code_label 431 430 432 54 32 "" [1 uses])
(note 432 431 433 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 433 432 434 54 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f8c4ef5a870 *.LC19>)) policypcr.c:183 -1
     (nil))
(call_insn 434 433 435 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:183 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 435 434 438 54 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:184 -1
     (nil)
    (nil))
(jump_insn 438 435 439 54 (set (pc)
        (label_ref 493)) -1
     (nil)
 -> 493)
(barrier 439 438 440)
(code_label 440 439 441 56 29 "" [1 uses])
(note 441 440 442 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 442 441 443 56 (set (reg:SI 258)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:187 -1
     (nil))
(insn 443 442 444 56 (set (reg:DI 168 [ D.5450 ])
        (sign_extend:DI (reg:SI 258))) policypcr.c:187 -1
     (nil))
(insn 444 443 445 56 (parallel [
            (set (reg:DI 169 [ D.5450 ])
                (ashift:DI (reg:DI 168 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:187 -1
     (nil))
(insn 445 444 446 56 (set (reg/f:DI 259)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:187 -1
     (nil))
(insn 446 445 447 56 (parallel [
            (set (reg/f:DI 170 [ D.5451 ])
                (plus:DI (reg:DI 169 [ D.5450 ])
                    (reg/f:DI 259)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:187 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 169 [ D.5450 ]))
        (nil)))
(insn 447 446 448 56 (set (reg/f:DI 171 [ D.5452 ])
        (mem/f:DI (reg/f:DI 170 [ D.5451 ]) [0 *_181+0 S8 A64])) policypcr.c:187 -1
     (nil))
(insn 448 447 449 56 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f8c4ef5a990 *.LC21>)) policypcr.c:187 -1
     (nil))
(insn 449 448 450 56 (set (reg:DI 5 di)
        (reg/f:DI 171 [ D.5452 ])) policypcr.c:187 -1
     (nil))
(call_insn/i 450 449 451 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8c4f39e0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policypcr.c:187 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 451 450 452 56 (set (reg:SI 172 [ D.5453 ])
        (reg:SI 0 ax)) policypcr.c:187 -1
     (nil))
(insn 452 451 453 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 172 [ D.5453 ])
            (const_int 0 [0]))) policypcr.c:187 -1
     (nil))
(jump_insn 453 452 454 56 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 458)
            (pc))) policypcr.c:187 -1
     (nil)
 -> 458)
(note 454 453 455 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(call_insn 455 454 456 57 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:188 -1
     (nil)
    (nil))
(jump_insn 456 455 457 57 (set (pc)
        (label_ref 493)) -1
     (nil)
 -> 493)
(barrier 457 456 458)
(code_label 458 457 459 58 35 "" [1 uses])
(note 459 458 460 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 460 459 461 58 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:190 -1
     (nil))
(insn 461 460 462 58 (set (reg:DI 173 [ D.5450 ])
        (sign_extend:DI (reg:SI 260))) policypcr.c:190 -1
     (nil))
(insn 462 461 463 58 (parallel [
            (set (reg:DI 174 [ D.5450 ])
                (ashift:DI (reg:DI 173 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:190 -1
     (nil))
(insn 463 462 464 58 (set (reg/f:DI 261)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:190 -1
     (nil))
(insn 464 463 465 58 (parallel [
            (set (reg/f:DI 175 [ D.5451 ])
                (plus:DI (reg:DI 174 [ D.5450 ])
                    (reg/f:DI 261)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:190 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 174 [ D.5450 ]))
        (nil)))
(insn 465 464 466 58 (set (reg/f:DI 176 [ D.5452 ])
        (mem/f:DI (reg/f:DI 175 [ D.5451 ]) [0 *_187+0 S8 A64])) policypcr.c:190 -1
     (nil))
(insn 466 465 467 58 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f8c4ef5aa20 *.LC22>)) policypcr.c:190 -1
     (nil))
(insn 467 466 468 58 (set (reg:DI 5 di)
        (reg/f:DI 176 [ D.5452 ])) policypcr.c:190 -1
     (nil))
(call_insn/i 468 467 469 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8c4f39e0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policypcr.c:190 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 469 468 470 58 (set (reg:SI 177 [ D.5453 ])
        (reg:SI 0 ax)) policypcr.c:190 -1
     (nil))
(insn 470 469 471 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 177 [ D.5453 ])
            (const_int 0 [0]))) policypcr.c:190 -1
     (nil))
(jump_insn 471 470 472 58 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 480)
            (pc))) policypcr.c:190 -1
     (nil)
 -> 480)
(note 472 471 473 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 473 472 474 59 (set (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f8c4f166090 verbose>) [0 verbose+0 S4 A32])
        (const_int 1 [0x1])) policypcr.c:191 -1
     (nil))
(insn 474 473 475 59 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f8c4ef5aab0 *.LC23>)) policypcr.c:192 -1
     (nil))
(insn 475 474 476 59 (set (reg:SI 4 si)
        (const_int 1 [0x1])) policypcr.c:192 -1
     (nil))
(insn 476 475 477 59 (set (reg:DI 5 di)
        (const_int 0 [0])) policypcr.c:192 -1
     (nil))
(call_insn 477 476 478 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7f8c4f30a000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) policypcr.c:192 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 478 477 479 59 (set (pc)
        (label_ref 493)) -1
     (nil)
 -> 493)
(barrier 479 478 480)
(code_label 480 479 481 60 36 "" [1 uses])
(note 481 480 482 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 482 481 483 60 (set (reg:SI 262)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:195 -1
     (nil))
(insn 483 482 484 60 (set (reg:DI 178 [ D.5450 ])
        (sign_extend:DI (reg:SI 262))) policypcr.c:195 -1
     (nil))
(insn 484 483 485 60 (parallel [
            (set (reg:DI 179 [ D.5450 ])
                (ashift:DI (reg:DI 178 [ D.5450 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:195 -1
     (nil))
(insn 485 484 486 60 (set (reg/f:DI 263)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])) policypcr.c:195 -1
     (nil))
(insn 486 485 487 60 (parallel [
            (set (reg/f:DI 180 [ D.5451 ])
                (plus:DI (reg:DI 179 [ D.5450 ])
                    (reg/f:DI 263)))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:195 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [0 argv+0 S8 A64])
            (reg:DI 179 [ D.5450 ]))
        (nil)))
(insn 487 486 488 60 (set (reg/f:DI 181 [ D.5452 ])
        (mem/f:DI (reg/f:DI 180 [ D.5451 ]) [0 *_194+0 S8 A64])) policypcr.c:195 -1
     (nil))
(insn 488 487 489 60 (set (reg:DI 4 si)
        (reg/f:DI 181 [ D.5452 ])) policypcr.c:195 -1
     (nil))
(insn 489 488 490 60 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f8c4ef5ab40 *.LC24>)) policypcr.c:195 -1
     (nil))
(insn 490 489 491 60 (set (reg:QI 0 ax)
        (const_int 0 [0])) policypcr.c:195 -1
     (nil))
(call_insn 491 490 492 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8c4f3a4ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policypcr.c:195 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(call_insn 492 491 493 60 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:196 -1
     (nil)
    (nil))
(code_label 493 492 494 61 6 "" [20 uses])
(note 494 493 495 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 495 494 496 61 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:77 -1
     (nil))
(code_label 496 495 497 62 2 "" [1 uses])
(note 497 496 498 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 498 497 499 62 (set (reg:SI 264)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 i+0 S4 A32])) policypcr.c:77 -1
     (nil))
(insn 499 498 500 62 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 264)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -260 [0xfffffffffffffefc])) [0 argc+0 S4 A32]))) policypcr.c:77 -1
     (nil))
(jump_insn 500 499 501 62 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 505)
            (pc))) policypcr.c:77 -1
     (nil)
 -> 505)
(note 501 500 503 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 503 501 504 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -220 [0xffffffffffffff24])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policypcr.c:77 -1
     (nil))
(jump_insn 504 503 505 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 502)
            (pc))) policypcr.c:77 -1
     (nil)
 -> 502)
(code_label 505 504 506 64 37 "" [1 uses])
(note 506 505 507 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 507 506 508 64 (set (reg:SI 182 [ D.5454 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 policySession+0 S4 A32])) policypcr.c:199 -1
     (nil))
(insn 508 507 509 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 182 [ D.5454 ])
            (const_int 0 [0]))) policypcr.c:199 -1
     (nil))
(jump_insn 509 508 510 64 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 514)
            (pc))) policypcr.c:199 -1
     (nil)
 -> 514)
(note 510 509 511 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 511 510 512 65 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f8c4ef5abd0 *.LC25>)) policypcr.c:200 -1
     (nil))
(call_insn 512 511 513 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:200 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 513 512 514 65 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:201 -1
     (nil)
    (nil))
(code_label 514 513 515 66 39 "" [1 uses])
(note 515 514 516 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 66 (set (reg:SI 183 [ D.5454 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 pcrmask+0 S4 A64])) policypcr.c:203 -1
     (nil))
(insn 517 516 518 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 183 [ D.5454 ])
            (const_int -1 [0xffffffffffffffff]))) policypcr.c:203 -1
     (nil))
(jump_insn 518 517 519 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 523)
            (pc))) policypcr.c:203 -1
     (nil)
 -> 523)
(note 519 518 520 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 520 519 521 67 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f8c4ef5ac60 *.LC26>)) policypcr.c:204 -1
     (nil))
(call_insn 521 520 522 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:204 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 522 521 523 67 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8c4f313000 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policypcr.c:205 -1
     (nil)
    (nil))
(code_label 523 522 524 68 40 "" [1 uses])
(note 524 523 525 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 525 524 526 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -220 [0xffffffffffffff24])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policypcr.c:207 -1
     (nil))
(jump_insn 526 525 527 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 546)
            (pc))) policypcr.c:207 -1
     (nil)
 -> 546)
(note 527 526 528 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 528 527 529 69 (set (reg:SI 184 [ D.5454 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 policySession+0 S4 A32])) policypcr.c:208 -1
     (nil))
(insn 529 528 530 69 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [0 in.policySession+0 S4 A64])
        (reg:SI 184 [ D.5454 ])) policypcr.c:208 -1
     (nil))
(insn 530 529 531 69 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -172 [0xffffffffffffff54])) [0 in.pcrDigest.b.size+0 S2 A32])
        (const_int 0 [0])) policypcr.c:210 -1
     (nil))
(insn 531 530 532 69 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in.pcrs.count+0 S4 A64])
        (const_int 1 [0x1])) policypcr.c:212 -1
     (nil))
(insn 532 531 533 69 (set (reg:HI 265)
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -254 [0xffffffffffffff02])) [0 halg+0 S2 A16])) policypcr.c:214 -1
     (nil))
(insn 533 532 534 69 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 in.pcrs.pcrSelections[0].hash+0 S2 A32])
        (reg:HI 265)) policypcr.c:214 -1
     (nil))
(insn 534 533 535 69 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -34 [0xffffffffffffffde])) [0 in.pcrs.pcrSelections[0].sizeofSelect+0 S1 A16])
        (const_int 3 [0x3])) policypcr.c:215 -1
     (nil))
(insn 535 534 536 69 (set (reg:SI 185 [ D.5454 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 pcrmask+0 S4 A64])) policypcr.c:217 -1
     (nil))
(insn 536 535 537 69 (set (reg:QI 186 [ D.5455 ])
        (subreg:QI (reg:SI 185 [ D.5454 ]) 0)) policypcr.c:217 -1
     (nil))
(insn 537 536 538 69 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -33 [0xffffffffffffffdf])) [0 in.pcrs.pcrSelections[0].pcrSelect+0 S1 A8])
        (reg:QI 186 [ D.5455 ])) policypcr.c:217 -1
     (nil))
(insn 538 537 539 69 (set (reg:SI 187 [ D.5454 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 pcrmask+0 S4 A64])) policypcr.c:218 -1
     (nil))
(insn 539 538 540 69 (parallel [
            (set (reg:SI 188 [ D.5454 ])
                (lshiftrt:SI (reg:SI 187 [ D.5454 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:218 -1
     (nil))
(insn 540 539 541 69 (set (reg:QI 189 [ D.5455 ])
        (subreg:QI (reg:SI 188 [ D.5454 ]) 0)) policypcr.c:218 -1
     (nil))
(insn 541 540 542 69 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 in.pcrs.pcrSelections[0].pcrSelect+1 S1 A64])
        (reg:QI 189 [ D.5455 ])) policypcr.c:218 -1
     (nil))
(insn 542 541 543 69 (set (reg:SI 190 [ D.5454 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 pcrmask+0 S4 A64])) policypcr.c:219 -1
     (nil))
(insn 543 542 544 69 (parallel [
            (set (reg:SI 191 [ D.5454 ])
                (lshiftrt:SI (reg:SI 190 [ D.5454 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:219 -1
     (nil))
(insn 544 543 545 69 (set (reg:QI 192 [ D.5455 ])
        (subreg:QI (reg:SI 191 [ D.5454 ]) 0)) policypcr.c:219 -1
     (nil))
(insn 545 544 546 69 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -31 [0xffffffffffffffe1])) [0 in.pcrs.pcrSelections[0].pcrSelect+2 S1 A8])
        (reg:QI 192 [ D.5455 ])) policypcr.c:219 -1
     (nil))
(code_label 546 545 547 70 41 "" [1 uses])
(note 547 546 548 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 548 547 549 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -220 [0xffffffffffffff24])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policypcr.c:222 -1
     (nil))
(jump_insn 549 548 550 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 556)
            (pc))) policypcr.c:222 -1
     (nil)
 -> 556)
(note 550 549 551 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 551 550 552 71 (parallel [
            (set (reg:DI 266)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -208 [0xffffffffffffff30])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:223 -1
     (nil))
(insn 552 551 553 71 (set (reg:DI 5 di)
        (reg:DI 266)) policypcr.c:223 -1
     (nil))
(call_insn 553 552 554 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Create") [flags 0x41]  <function_decl 0x7f8c4f302ca8 TSS_Create>) [0 TSS_Create S1 A8])
            (const_int 0 [0]))) policypcr.c:223 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 554 553 555 71 (set (reg:SI 267)
        (reg:SI 0 ax)) policypcr.c:223 -1
     (nil))
(insn 555 554 556 71 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [0 rc+0 S4 A32])
        (reg:SI 267)) policypcr.c:223 -1
     (nil))
(code_label 556 555 557 72 42 "" [1 uses])
(note 557 556 558 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 558 557 559 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -220 [0xffffffffffffff24])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policypcr.c:226 -1
     (nil))
(jump_insn 559 558 560 72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 592)
            (pc))) policypcr.c:226 -1
     (nil)
 -> 592)
(note 560 559 561 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 561 560 562 73 (set (reg:SI 193 [ D.5454 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 sessionAttributes2+0 S4 A64])) policypcr.c:227 -1
     (nil))
(insn 562 561 563 73 (set (reg:SI 194 [ D.5454 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -228 [0xffffffffffffff1c])) [0 sessionHandle2+0 S4 A32])) policypcr.c:227 -1
     (nil))
(insn 563 562 564 73 (set (reg:SI 195 [ D.5454 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [0 sessionAttributes1+0 S4 A64])) policypcr.c:227 -1
     (nil))
(insn 564 563 565 73 (set (reg:SI 196 [ D.5454 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -236 [0xffffffffffffff14])) [0 sessionHandle1+0 S4 A32])) policypcr.c:227 -1
     (nil))
(insn 565 564 566 73 (set (reg:SI 197 [ D.5454 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 sessionAttributes0+0 S4 A64])) policypcr.c:227 -1
     (nil))
(insn 566 565 567 73 (set (reg:SI 198 [ D.5454 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -244 [0xffffffffffffff0c])) [0 sessionHandle0+0 S4 A32])) policypcr.c:227 -1
     (nil))
(insn 567 566 568 73 (set (reg/f:DI 199 [ D.5456 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 tssContext+0 S8 A64])) policypcr.c:227 -1
     (nil))
(insn 568 567 569 73 (parallel [
            (set (reg:DI 268)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:227 -1
     (nil))
(insn 569 568 570 73 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:227 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 570 569 571 73 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) policypcr.c:227 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 571 570 572 73 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policypcr.c:227 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 572 571 573 73 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1073741831 [0x40000007])) policypcr.c:227 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 573 572 574 73 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 193 [ D.5454 ])) policypcr.c:227 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 574 573 575 73 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policypcr.c:227 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 575 574 576 73 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 194 [ D.5454 ])) policypcr.c:227 -1
     (expr_list:REG_ARGS_SIZE (const_int 56 [0x38])
        (nil)))
(insn 576 575 577 73 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 195 [ D.5454 ])) policypcr.c:227 -1
     (expr_list:REG_ARGS_SIZE (const_int 64 [0x40])
        (nil)))
(insn 577 576 578 73 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policypcr.c:227 -1
     (expr_list:REG_ARGS_SIZE (const_int 72 [0x48])
        (nil)))
(insn 578 577 579 73 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 196 [ D.5454 ])) policypcr.c:227 -1
     (expr_list:REG_ARGS_SIZE (const_int 80 [0x50])
        (nil)))
(insn 579 578 580 73 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 197 [ D.5454 ])) policypcr.c:227 -1
     (expr_list:REG_ARGS_SIZE (const_int 88 [0x58])
        (nil)))
(insn 580 579 581 73 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policypcr.c:227 -1
     (expr_list:REG_ARGS_SIZE (const_int 96 [0x60])
        (nil)))
(insn 581 580 582 73 (set (reg:SI 38 r9)
        (reg:SI 198 [ D.5454 ])) policypcr.c:227 -1
     (nil))
(insn 582 581 583 73 (set (reg:SI 37 r8)
        (const_int 383 [0x17f])) policypcr.c:227 -1
     (nil))
(insn 583 582 584 73 (set (reg:DI 2 cx)
        (const_int 0 [0])) policypcr.c:227 -1
     (nil))
(insn 584 583 585 73 (set (reg:DI 1 dx)
        (reg:DI 268)) policypcr.c:227 -1
     (nil))
(insn 585 584 586 73 (set (reg:DI 4 si)
        (const_int 0 [0])) policypcr.c:227 -1
     (nil))
(insn 586 585 587 73 (set (reg:DI 5 di)
        (reg/f:DI 199 [ D.5456 ])) policypcr.c:227 -1
     (nil))
(insn 587 586 588 73 (set (reg:QI 0 ax)
        (const_int 0 [0])) policypcr.c:227 -1
     (nil))
(call_insn 588 587 589 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7f8c4f302e58 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 96 [0x60]))) policypcr.c:227 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 589 588 590 73 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:227 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 590 589 591 73 (set (reg:SI 269)
        (reg:SI 0 ax)) policypcr.c:227 -1
     (nil))
(insn 591 590 592 73 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [0 rc+0 S4 A32])
        (reg:SI 269)) policypcr.c:227 -1
     (nil))
(code_label 592 591 593 74 43 "" [1 uses])
(note 593 592 594 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 594 593 595 74 (set (reg/f:DI 200 [ D.5456 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 tssContext+0 S8 A64])) policypcr.c:238 -1
     (nil))
(insn 595 594 596 74 (set (reg:DI 5 di)
        (reg/f:DI 200 [ D.5456 ])) policypcr.c:238 -1
     (nil))
(call_insn 596 595 597 74 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Delete") [flags 0x41]  <function_decl 0x7f8c4f302d80 TSS_Delete>) [0 TSS_Delete S1 A8])
            (const_int 0 [0]))) policypcr.c:238 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 597 596 598 74 (set (reg:SI 270)
        (reg:SI 0 ax)) policypcr.c:238 -1
     (nil))
(insn 598 597 599 74 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -212 [0xffffffffffffff2c])) [0 rc1+0 S4 A32])
        (reg:SI 270)) policypcr.c:238 -1
     (nil))
(insn 599 598 600 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -220 [0xffffffffffffff24])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policypcr.c:239 -1
     (nil))
(jump_insn 600 599 601 74 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 604)
            (pc))) policypcr.c:239 -1
     (nil)
 -> 604)
(note 601 600 602 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 602 601 603 75 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -212 [0xffffffffffffff2c])) [0 rc1+0 S4 A32])) policypcr.c:240 -1
     (nil))
(insn 603 602 604 75 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [0 rc+0 S4 A32])
        (reg:SI 271)) policypcr.c:240 -1
     (nil))
(code_label 604 603 605 76 44 "" [1 uses])
(note 605 604 606 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 606 605 607 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -220 [0xffffffffffffff24])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policypcr.c:243 -1
     (nil))
(jump_insn 607 606 608 76 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 619)
            (pc))) policypcr.c:243 -1
     (nil)
 -> 619)
(note 608 607 609 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 609 608 610 77 (set (reg:SI 201 [ D.5453 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f8c4f166090 verbose>) [0 verbose+0 S4 A32])) policypcr.c:244 -1
     (nil))
(insn 610 609 611 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 201 [ D.5453 ])
            (const_int 0 [0]))) policypcr.c:244 -1
     (nil))
(jump_insn 611 610 612 77 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 645)
            (pc))) policypcr.c:244 612 {*jcc_1}
     (nil)
 -> 645)
(note 612 611 613 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 613 612 614 78 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f8c4ef5acf0 *.LC27>)) policypcr.c:244 -1
     (nil))
(call_insn 614 613 617 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:244 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 617 614 618 78 (set (pc)
        (label_ref 645)) -1
     (nil)
 -> 645)
(barrier 618 617 619)
(code_label 619 618 620 80 45 "" [1 uses])
(note 620 619 621 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 621 620 622 80 (set (reg:SI 272)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [0 rc+0 S4 A32])) policypcr.c:250 -1
     (nil))
(insn 622 621 623 80 (set (reg:SI 4 si)
        (reg:SI 272)) policypcr.c:250 -1
     (nil))
(insn 623 622 624 80 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f8c4ef5ad80 *.LC28>)) policypcr.c:250 -1
     (nil))
(insn 624 623 625 80 (set (reg:QI 0 ax)
        (const_int 0 [0])) policypcr.c:250 -1
     (nil))
(call_insn 625 624 626 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8c4f3a4ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policypcr.c:250 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 626 625 627 80 (set (reg:SI 273)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [0 rc+0 S4 A32])) policypcr.c:251 -1
     (nil))
(insn 627 626 628 80 (parallel [
            (set (reg:DI 274)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -184 [0xffffffffffffff48])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:251 -1
     (nil))
(insn 628 627 629 80 (parallel [
            (set (reg:DI 275)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:251 -1
     (nil))
(insn 629 628 630 80 (parallel [
            (set (reg:DI 276)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])))
            (clobber (reg:CC 17 flags))
        ]) policypcr.c:251 -1
     (nil))
(insn 630 629 631 80 (set (reg:SI 2 cx)
        (reg:SI 273)) policypcr.c:251 -1
     (nil))
(insn 631 630 632 80 (set (reg:DI 1 dx)
        (reg:DI 274)) policypcr.c:251 -1
     (nil))
(insn 632 631 633 80 (set (reg:DI 4 si)
        (reg:DI 275)) policypcr.c:251 -1
     (nil))
(insn 633 632 634 80 (set (reg:DI 5 di)
        (reg:DI 276)) policypcr.c:251 -1
     (nil))
(call_insn 634 633 635 80 (call (mem:QI (symbol_ref:DI ("TSS_ResponseCode_toString") [flags 0x41]  <function_decl 0x7f8c4f30ae58 TSS_ResponseCode_toString>) [0 TSS_ResponseCode_toString S1 A8])
        (const_int 0 [0])) policypcr.c:251 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 635 634 636 80 (set (reg/f:DI 202 [ D.5457 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [0 num+0 S8 A64])) policypcr.c:252 -1
     (nil))
(insn 636 635 637 80 (set (reg/f:DI 203 [ D.5457 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 submsg+0 S8 A64])) policypcr.c:252 -1
     (nil))
(insn 637 636 638 80 (set (reg/f:DI 204 [ D.5457 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [0 msg+0 S8 A64])) policypcr.c:252 -1
     (nil))
(insn 638 637 639 80 (set (reg:DI 2 cx)
        (reg/f:DI 202 [ D.5457 ])) policypcr.c:252 -1
     (nil))
(insn 639 638 640 80 (set (reg:DI 1 dx)
        (reg/f:DI 203 [ D.5457 ])) policypcr.c:252 -1
     (nil))
(insn 640 639 641 80 (set (reg:DI 4 si)
        (reg/f:DI 204 [ D.5457 ])) policypcr.c:252 -1
     (nil))
(insn 641 640 642 80 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f8c4ef5ae10 *.LC29>)) policypcr.c:252 -1
     (nil))
(insn 642 641 643 80 (set (reg:QI 0 ax)
        (const_int 0 [0])) policypcr.c:252 -1
     (nil))
(call_insn 643 642 644 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8c4f3a4ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policypcr.c:252 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 644 643 645 80 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) policypcr.c:253 -1
     (nil))
(code_label 645 644 646 81 47 "" [2 uses])
(note 646 645 647 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 647 646 650 81 (set (reg:SI 205 [ D.5453 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [0 rc+0 S4 A32])) policypcr.c:255 -1
     (nil))
(insn 650 647 654 81 (set (reg:SI 206 [ <retval> ])
        (reg:SI 205 [ D.5453 ])) -1
     (nil))
(insn 654 650 655 81 (set (reg/i:SI 0 ax)
        (reg:SI 206 [ <retval> ])) policypcr.c:256 -1
     (nil))
(insn 655 654 656 81 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.5458+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) policypcr.c:256 -1
     (nil))
(jump_insn 656 655 662 81 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 659)
            (pc))) policypcr.c:256 -1
     (nil)
 -> 659)
(note 662 656 657 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(call_insn 657 662 658 84 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8c4f313510 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) policypcr.c:256 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 658 657 659)
(code_label 659 658 663 85 49 "" [1 uses])
(note 663 659 660 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 660 663 0 85 (use (reg/i:SI 0 ax)) policypcr.c:256 -1
     (nil))

;; Function printUsage (printUsage, funcdef_no=3, decl_uid=5213, cgraph_uid=3, symbol_order=4)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policypcr.c:260 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f8c4f3a7000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policypcr.c:260 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f8c4ef82990 *.LC30>)) policypcr.c:261 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:261 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policypcr.c:262 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f8c4f3a7000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policypcr.c:262 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f8c4ef82a20 *.LC31>)) policypcr.c:263 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:263 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policypcr.c:264 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f8c4f3a7000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policypcr.c:264 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f8c4ef82ab0 *.LC32>)) policypcr.c:265 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:265 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f8c4ef82b40 *.LC33>)) policypcr.c:266 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:266 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f8c4ef82bd0 *.LC34>)) policypcr.c:267 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:267 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f8c4ef82c60 *.LC35>)) policypcr.c:268 -1
     (nil))
(call_insn 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8c4f3a7360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policypcr.c:268 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) policypcr.c:269 -1
     (nil))
(call_insn 24 23 25 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f8c4f3ba000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) policypcr.c:269 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 25 24 0)
