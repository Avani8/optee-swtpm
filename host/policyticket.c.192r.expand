
;; Function main (main, funcdef_no=2, decl_uid=6074, cgraph_uid=2, symbol_order=3)

Partition 11: size 668 align 16
	in
Partition 8: size 8 align 8
	ticketFilename_29
Partition 5: size 8 align 8
	authNameFilename_22
Partition 4: size 8 align 8
	policyRefFilename_19
Partition 3: size 8 align 8
	cpHashAFilename_16
Partition 2: size 8 align 8
	timeoutFilename_13
Partition 21: size 8 align 8
	num
Partition 20: size 8 align 8
	submsg
Partition 19: size 8 align 8
	msg
Partition 10: size 8 align 8
	tssContext
Partition 9: size 4 align 4
	rc1_314
Partition 7: size 4 align 4
	primaryHandle_28
Partition 1: size 4 align 4
	i_11
Partition 0: size 4 align 4
	rc_1
Partition 18: size 4 align 4
	sessionAttributes2
Partition 17: size 4 align 4
	sessionHandle2
Partition 16: size 4 align 4
	sessionAttributes1
Partition 15: size 4 align 4
	sessionHandle1
Partition 14: size 4 align 4
	sessionAttributes0
Partition 13: size 4 align 4
	sessionHandle0
Partition 12: size 4 align 4
	policySession
Partition 6: size 1 align 1
	hierarchyChar_25

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; Generating RTL for gimple basic block 110

;; Generating RTL for gimple basic block 111

;; Generating RTL for gimple basic block 112

;; Generating RTL for gimple basic block 113

;; Generating RTL for gimple basic block 114

;; Generating RTL for gimple basic block 115

;; Generating RTL for gimple basic block 116

;; Generating RTL for gimple basic block 117

;; Generating RTL for gimple basic block 118

;; Generating RTL for gimple basic block 119

;; Generating RTL for gimple basic block 120

;; Generating RTL for gimple basic block 121

;; Generating RTL for gimple basic block 122

;; Generating RTL for gimple basic block 123

;; Generating RTL for gimple basic block 124

;; Generating RTL for gimple basic block 125


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 70 from 8 to 74.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Redirecting jump 108 from 13 to 74.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Redirecting jump 146 from 18 to 74.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Redirecting jump 184 from 23 to 74.
Merging block 23 into block 22...
Merged blocks 22 and 23.
Merged 22 and 23 without moving.
Redirecting jump 222 from 28 to 74.
Merging block 28 into block 27...
Merged blocks 27 and 28.
Merged 27 and 28 without moving.
Redirecting jump 261 from 33 to 74.
Merging block 33 into block 32...
Merged blocks 32 and 33.
Merged 32 and 33 without moving.
Redirecting jump 299 from 38 to 74.
Merging block 38 into block 37...
Merged blocks 37 and 38.
Merged 37 and 38 without moving.
Edge 44->46 redirected to 74
Merging block 46 into block 45...
Merged blocks 45 and 46.
Merged 45 and 46 without moving.
Redirecting jump 377 from 48 to 74.
Merging block 48 into block 47...
Merged blocks 47 and 48.
Merged 47 and 48 without moving.
Edge 54->56 redirected to 74
Merging block 56 into block 55...
Merged blocks 55 and 56.
Merged 55 and 56 without moving.
Redirecting jump 455 from 58 to 74.
Merging block 58 into block 57...
Merged blocks 57 and 58.
Merged 57 and 58 without moving.
Edge 64->66 redirected to 74
Merging block 66 into block 65...
Merged blocks 65 and 66.
Merged 65 and 66 without moving.
Redirecting jump 533 from 68 to 74.
Merging block 68 into block 67...
Merged blocks 67 and 68.
Merged 67 and 68 without moving.
Edge 121->123 redirected to 125
Merging block 123 into block 122...
Merged blocks 122 and 123.
Merged 122 and 123 without moving.
Merging block 126 into block 125...
Merged blocks 125 and 126.
Merged 125 and 126 without moving.
Removing jump 897.
Merging block 127 into block 125...
Merged blocks 125 and 127.
Merged 125 and 127 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) policyticket.c:59 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) policyticket.c:59 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.6386+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:59 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
        (const_int 0 [0])) policyticket.c:60 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -760 [0xfffffffffffffd08])) [0 tssContext+0 S8 A64])
        (const_int 0 [0])) policyticket.c:62 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -804 [0xfffffffffffffcdc])) [0 policySession+0 S4 A32])
        (const_int 0 [0])) policyticket.c:64 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -728 [0xfffffffffffffd28])) [0 timeoutFilename+0 S8 A64])
        (const_int 0 [0])) policyticket.c:65 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -720 [0xfffffffffffffd30])) [0 cpHashAFilename+0 S8 A64])
        (const_int 0 [0])) policyticket.c:66 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -712 [0xfffffffffffffd38])) [0 policyRefFilename+0 S8 A64])
        (const_int 0 [0])) policyticket.c:67 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -704 [0xfffffffffffffd40])) [0 authNameFilename+0 S8 A64])
        (const_int 0 [0])) policyticket.c:68 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -805 [0xfffffffffffffcdb])) [0 hierarchyChar+0 S1 A8])
        (const_int 0 [0])) policyticket.c:69 -1
     (nil))
(insn 16 15 17 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -768 [0xfffffffffffffd00])) [0 primaryHandle+0 S4 A32])
        (const_int 1073741831 [0x40000007])) policyticket.c:70 -1
     (nil))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -696 [0xfffffffffffffd48])) [0 ticketFilename+0 S8 A64])
        (const_int 0 [0])) policyticket.c:71 -1
     (nil))
(insn 18 17 19 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -800 [0xfffffffffffffce0])) [0 sessionHandle0+0 S4 A64])
        (const_int 1073741831 [0x40000007])) policyticket.c:72 -1
     (nil))
(insn 19 18 20 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -796 [0xfffffffffffffce4])) [0 sessionAttributes0+0 S4 A32])
        (const_int 0 [0])) policyticket.c:73 -1
     (nil))
(insn 20 19 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -792 [0xfffffffffffffce8])) [0 sessionHandle1+0 S4 A64])
        (const_int 1073741831 [0x40000007])) policyticket.c:74 -1
     (nil))
(insn 21 20 22 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -788 [0xfffffffffffffcec])) [0 sessionAttributes1+0 S4 A32])
        (const_int 0 [0])) policyticket.c:75 -1
     (nil))
(insn 22 21 23 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -784 [0xfffffffffffffcf0])) [0 sessionHandle2+0 S4 A64])
        (const_int 1073741831 [0x40000007])) policyticket.c:76 -1
     (nil))
(insn 23 22 24 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 sessionAttributes2+0 S4 A32])
        (const_int 0 [0])) policyticket.c:77 -1
     (nil))
(insn 24 23 25 2 (set (reg/f:DI 87 [ D.6378 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7fa8a376c5a0 stdout>) [0 stdout+0 S8 A64])) policyticket.c:79 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) policyticket.c:79 -1
     (nil))
(insn 26 25 27 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) policyticket.c:79 -1
     (nil))
(insn 27 26 28 2 (set (reg:DI 4 si)
        (const_int 0 [0])) policyticket.c:79 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.6378 ])) policyticket.c:79 -1
     (nil))
(call_insn 29 28 30 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("setvbuf") [flags 0x41]  <function_decl 0x7fa8a37ac1b0 setvbuf>) [0 setvbuf S1 A8])
            (const_int 0 [0]))) policyticket.c:79 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 30 29 31 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fa8a32d3360 *.LC0>)) policyticket.c:80 -1
     (nil))
(insn 31 30 32 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) policyticket.c:80 -1
     (nil))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (const_int 0 [0])) policyticket.c:80 -1
     (nil))
(call_insn 33 32 34 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7fa8a3620000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) policyticket.c:80 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 35 2 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -554 [0xfffffffffffffdd6])) [0 in.cpHashA.b.size+0 S2 A16])
        (const_int 0 [0])) policyticket.c:83 -1
     (nil))
(insn 35 34 36 2 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -424 [0xfffffffffffffe58])) [0 in.policyRef.b.size+0 S2 A64])
        (const_int 0 [0])) policyticket.c:84 -1
     (nil))
(insn 36 35 37 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) policyticket.c:86 -1
     (nil))
(jump_insn 37 36 38 2 (set (pc)
        (label_ref 600)) policyticket.c:86 -1
     (nil)
 -> 600)
(barrier 38 37 606)
(code_label 606 38 39 4 46 "" [1 uses])
(note 39 606 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 4 (set (reg:SI 219)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:87 -1
     (nil))
(insn 41 40 42 4 (set (reg:DI 88 [ D.6379 ])
        (sign_extend:DI (reg:SI 219))) policyticket.c:87 -1
     (nil))
(insn 42 41 43 4 (parallel [
            (set (reg:DI 89 [ D.6379 ])
                (ashift:DI (reg:DI 88 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:87 -1
     (nil))
(insn 43 42 44 4 (set (reg/f:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:87 -1
     (nil))
(insn 44 43 45 4 (parallel [
            (set (reg/f:DI 90 [ D.6380 ])
                (plus:DI (reg:DI 89 [ D.6379 ])
                    (reg/f:DI 220)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:87 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 89 [ D.6379 ]))
        (nil)))
(insn 45 44 46 4 (set (reg/f:DI 91 [ D.6381 ])
        (mem/f:DI (reg/f:DI 90 [ D.6380 ]) [0 *_94+0 S8 A64])) policyticket.c:87 -1
     (nil))
(insn 46 45 47 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa8a32d33f0 *.LC1>)) policyticket.c:87 -1
     (nil))
(insn 47 46 48 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.6381 ])) policyticket.c:87 -1
     (nil))
(call_insn/i 48 47 49 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa8a36b40d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyticket.c:87 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 49 48 50 4 (set (reg:SI 92 [ D.6382 ])
        (reg:SI 0 ax)) policyticket.c:87 -1
     (nil))
(insn 50 49 51 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.6382 ])
            (const_int 0 [0]))) policyticket.c:87 -1
     (nil))
(jump_insn 51 50 52 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) policyticket.c:87 -1
     (nil)
 -> 81)
(note 52 51 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:88 -1
     (nil))
(insn 54 53 55 5 (set (reg:SI 221)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:89 -1
     (nil))
(insn 55 54 56 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 221)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policyticket.c:89 -1
     (nil))
(jump_insn 56 55 57 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) policyticket.c:89 -1
     (nil)
 -> 72)
(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 6 (set (reg:SI 222)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:90 -1
     (nil))
(insn 59 58 60 6 (set (reg:DI 93 [ D.6379 ])
        (sign_extend:DI (reg:SI 222))) policyticket.c:90 -1
     (nil))
(insn 60 59 61 6 (parallel [
            (set (reg:DI 94 [ D.6379 ])
                (ashift:DI (reg:DI 93 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:90 -1
     (nil))
(insn 61 60 62 6 (set (reg/f:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:90 -1
     (nil))
(insn 62 61 63 6 (parallel [
            (set (reg/f:DI 95 [ D.6380 ])
                (plus:DI (reg:DI 94 [ D.6379 ])
                    (reg/f:DI 223)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:90 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 94 [ D.6379 ]))
        (nil)))
(insn 63 62 64 6 (set (reg/f:DI 96 [ D.6381 ])
        (mem/f:DI (reg/f:DI 95 [ D.6380 ]) [0 *_100+0 S8 A64])) policyticket.c:90 -1
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg:DI 224)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -804 [0xfffffffffffffcdc])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:90 -1
     (nil))
(insn 65 64 66 6 (set (reg:DI 1 dx)
        (reg:DI 224)) policyticket.c:90 -1
     (nil))
(insn 66 65 67 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa8a32d3480 *.LC2>)) policyticket.c:90 -1
     (nil))
(insn 67 66 68 6 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.6381 ])) policyticket.c:90 -1
     (nil))
(insn 68 67 69 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyticket.c:90 -1
     (nil))
(call_insn 69 68 70 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fa8a36bdca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policyticket.c:90 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 70 69 71 6 (set (pc)
        (label_ref:DI 597)) 654 {jump}
     (nil)
 -> 597)
(barrier 71 70 72)
(code_label 72 71 73 7 4 "" [1 uses])
(note 73 72 74 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fa8a32d3510 *.LC3>)) policyticket.c:93 -1
     (nil))
(call_insn 75 74 76 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:93 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 76 75 79 7 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:94 -1
     (nil)
    (nil))
(jump_insn 79 76 80 7 (set (pc)
        (label_ref 597)) -1
     (nil)
 -> 597)
(barrier 80 79 81)
(code_label 81 80 82 9 3 "" [1 uses])
(note 82 81 83 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 9 (set (reg:SI 225)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:97 -1
     (nil))
(insn 84 83 85 9 (set (reg:DI 97 [ D.6379 ])
        (sign_extend:DI (reg:SI 225))) policyticket.c:97 -1
     (nil))
(insn 85 84 86 9 (parallel [
            (set (reg:DI 98 [ D.6379 ])
                (ashift:DI (reg:DI 97 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:97 -1
     (nil))
(insn 86 85 87 9 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:97 -1
     (nil))
(insn 87 86 88 9 (parallel [
            (set (reg/f:DI 99 [ D.6380 ])
                (plus:DI (reg:DI 98 [ D.6379 ])
                    (reg/f:DI 226)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:97 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 98 [ D.6379 ]))
        (nil)))
(insn 88 87 89 9 (set (reg/f:DI 100 [ D.6381 ])
        (mem/f:DI (reg/f:DI 99 [ D.6380 ]) [0 *_107+0 S8 A64])) policyticket.c:97 -1
     (nil))
(insn 89 88 90 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fa8a32d35a0 *.LC4>)) policyticket.c:97 -1
     (nil))
(insn 90 89 91 9 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.6381 ])) policyticket.c:97 -1
     (nil))
(call_insn/i 91 90 92 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa8a36b40d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyticket.c:97 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 92 91 93 9 (set (reg:SI 101 [ D.6382 ])
        (reg:SI 0 ax)) policyticket.c:97 -1
     (nil))
(insn 93 92 94 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.6382 ])
            (const_int 0 [0]))) policyticket.c:97 -1
     (nil))
(jump_insn 94 93 95 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) policyticket.c:97 -1
     (nil)
 -> 119)
(note 95 94 96 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:98 -1
     (nil))
(insn 97 96 98 10 (set (reg:SI 227)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:99 -1
     (nil))
(insn 98 97 99 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 227)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policyticket.c:99 -1
     (nil))
(jump_insn 99 98 100 10 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) policyticket.c:99 -1
     (nil)
 -> 110)
(note 100 99 101 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 11 (set (reg:SI 228)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:100 -1
     (nil))
(insn 102 101 103 11 (set (reg:DI 102 [ D.6379 ])
        (sign_extend:DI (reg:SI 228))) policyticket.c:100 -1
     (nil))
(insn 103 102 104 11 (parallel [
            (set (reg:DI 103 [ D.6379 ])
                (ashift:DI (reg:DI 102 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:100 -1
     (nil))
(insn 104 103 105 11 (set (reg/f:DI 229)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:100 -1
     (nil))
(insn 105 104 106 11 (parallel [
            (set (reg/f:DI 104 [ D.6380 ])
                (plus:DI (reg:DI 103 [ D.6379 ])
                    (reg/f:DI 229)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:100 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 103 [ D.6379 ]))
        (nil)))
(insn 106 105 107 11 (set (reg/f:DI 230)
        (mem/f:DI (reg/f:DI 104 [ D.6380 ]) [0 *_113+0 S8 A64])) policyticket.c:100 -1
     (nil))
(insn 107 106 108 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -728 [0xfffffffffffffd28])) [0 timeoutFilename+0 S8 A64])
        (reg/f:DI 230)) policyticket.c:100 -1
     (nil))
(jump_insn 108 107 109 11 (set (pc)
        (label_ref:DI 597)) 654 {jump}
     (nil)
 -> 597)
(barrier 109 108 110)
(code_label 110 109 111 12 8 "" [1 uses])
(note 111 110 112 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fa8a32d3630 *.LC5>)) policyticket.c:103 -1
     (nil))
(call_insn 113 112 114 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:103 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 114 113 117 12 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:104 -1
     (nil)
    (nil))
(jump_insn 117 114 118 12 (set (pc)
        (label_ref 597)) -1
     (nil)
 -> 597)
(barrier 118 117 119)
(code_label 119 118 120 14 7 "" [1 uses])
(note 120 119 121 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 14 (set (reg:SI 231)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:107 -1
     (nil))
(insn 122 121 123 14 (set (reg:DI 105 [ D.6379 ])
        (sign_extend:DI (reg:SI 231))) policyticket.c:107 -1
     (nil))
(insn 123 122 124 14 (parallel [
            (set (reg:DI 106 [ D.6379 ])
                (ashift:DI (reg:DI 105 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:107 -1
     (nil))
(insn 124 123 125 14 (set (reg/f:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:107 -1
     (nil))
(insn 125 124 126 14 (parallel [
            (set (reg/f:DI 107 [ D.6380 ])
                (plus:DI (reg:DI 106 [ D.6379 ])
                    (reg/f:DI 232)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:107 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 106 [ D.6379 ]))
        (nil)))
(insn 126 125 127 14 (set (reg/f:DI 108 [ D.6381 ])
        (mem/f:DI (reg/f:DI 107 [ D.6380 ]) [0 *_119+0 S8 A64])) policyticket.c:107 -1
     (nil))
(insn 127 126 128 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa8a32d36c0 *.LC6>)) policyticket.c:107 -1
     (nil))
(insn 128 127 129 14 (set (reg:DI 5 di)
        (reg/f:DI 108 [ D.6381 ])) policyticket.c:107 -1
     (nil))
(call_insn/i 129 128 130 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa8a36b40d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyticket.c:107 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 130 129 131 14 (set (reg:SI 109 [ D.6382 ])
        (reg:SI 0 ax)) policyticket.c:107 -1
     (nil))
(insn 131 130 132 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.6382 ])
            (const_int 0 [0]))) policyticket.c:107 -1
     (nil))
(jump_insn 132 131 133 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) policyticket.c:107 -1
     (nil)
 -> 157)
(note 133 132 134 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:108 -1
     (nil))
(insn 135 134 136 15 (set (reg:SI 233)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:109 -1
     (nil))
(insn 136 135 137 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 233)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policyticket.c:109 -1
     (nil))
(jump_insn 137 136 138 15 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) policyticket.c:109 -1
     (nil)
 -> 148)
(note 138 137 139 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 16 (set (reg:SI 234)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:110 -1
     (nil))
(insn 140 139 141 16 (set (reg:DI 110 [ D.6379 ])
        (sign_extend:DI (reg:SI 234))) policyticket.c:110 -1
     (nil))
(insn 141 140 142 16 (parallel [
            (set (reg:DI 111 [ D.6379 ])
                (ashift:DI (reg:DI 110 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:110 -1
     (nil))
(insn 142 141 143 16 (set (reg/f:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:110 -1
     (nil))
(insn 143 142 144 16 (parallel [
            (set (reg/f:DI 112 [ D.6380 ])
                (plus:DI (reg:DI 111 [ D.6379 ])
                    (reg/f:DI 235)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:110 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 111 [ D.6379 ]))
        (nil)))
(insn 144 143 145 16 (set (reg/f:DI 236)
        (mem/f:DI (reg/f:DI 112 [ D.6380 ]) [0 *_125+0 S8 A64])) policyticket.c:110 -1
     (nil))
(insn 145 144 146 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -720 [0xfffffffffffffd30])) [0 cpHashAFilename+0 S8 A64])
        (reg/f:DI 236)) policyticket.c:110 -1
     (nil))
(jump_insn 146 145 147 16 (set (pc)
        (label_ref:DI 597)) 654 {jump}
     (nil)
 -> 597)
(barrier 147 146 148)
(code_label 148 147 149 17 11 "" [1 uses])
(note 149 148 150 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fa8a32d3750 *.LC7>)) policyticket.c:113 -1
     (nil))
(call_insn 151 150 152 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:113 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 152 151 155 17 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:114 -1
     (nil)
    (nil))
(jump_insn 155 152 156 17 (set (pc)
        (label_ref 597)) -1
     (nil)
 -> 597)
(barrier 156 155 157)
(code_label 157 156 158 19 10 "" [1 uses])
(note 158 157 159 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 19 (set (reg:SI 237)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:117 -1
     (nil))
(insn 160 159 161 19 (set (reg:DI 113 [ D.6379 ])
        (sign_extend:DI (reg:SI 237))) policyticket.c:117 -1
     (nil))
(insn 161 160 162 19 (parallel [
            (set (reg:DI 114 [ D.6379 ])
                (ashift:DI (reg:DI 113 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:117 -1
     (nil))
(insn 162 161 163 19 (set (reg/f:DI 238)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:117 -1
     (nil))
(insn 163 162 164 19 (parallel [
            (set (reg/f:DI 115 [ D.6380 ])
                (plus:DI (reg:DI 114 [ D.6379 ])
                    (reg/f:DI 238)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:117 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 114 [ D.6379 ]))
        (nil)))
(insn 164 163 165 19 (set (reg/f:DI 116 [ D.6381 ])
        (mem/f:DI (reg/f:DI 115 [ D.6380 ]) [0 *_131+0 S8 A64])) policyticket.c:117 -1
     (nil))
(insn 165 164 166 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fa8a32d37e0 *.LC8>)) policyticket.c:117 -1
     (nil))
(insn 166 165 167 19 (set (reg:DI 5 di)
        (reg/f:DI 116 [ D.6381 ])) policyticket.c:117 -1
     (nil))
(call_insn/i 167 166 168 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa8a36b40d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyticket.c:117 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 168 167 169 19 (set (reg:SI 117 [ D.6382 ])
        (reg:SI 0 ax)) policyticket.c:117 -1
     (nil))
(insn 169 168 170 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.6382 ])
            (const_int 0 [0]))) policyticket.c:117 -1
     (nil))
(jump_insn 170 169 171 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 195)
            (pc))) policyticket.c:117 -1
     (nil)
 -> 195)
(note 171 170 172 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:118 -1
     (nil))
(insn 173 172 174 20 (set (reg:SI 239)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:119 -1
     (nil))
(insn 174 173 175 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 239)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policyticket.c:119 -1
     (nil))
(jump_insn 175 174 176 20 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 186)
            (pc))) policyticket.c:119 -1
     (nil)
 -> 186)
(note 176 175 177 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 21 (set (reg:SI 240)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:120 -1
     (nil))
(insn 178 177 179 21 (set (reg:DI 118 [ D.6379 ])
        (sign_extend:DI (reg:SI 240))) policyticket.c:120 -1
     (nil))
(insn 179 178 180 21 (parallel [
            (set (reg:DI 119 [ D.6379 ])
                (ashift:DI (reg:DI 118 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:120 -1
     (nil))
(insn 180 179 181 21 (set (reg/f:DI 241)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:120 -1
     (nil))
(insn 181 180 182 21 (parallel [
            (set (reg/f:DI 120 [ D.6380 ])
                (plus:DI (reg:DI 119 [ D.6379 ])
                    (reg/f:DI 241)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:120 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 119 [ D.6379 ]))
        (nil)))
(insn 182 181 183 21 (set (reg/f:DI 242)
        (mem/f:DI (reg/f:DI 120 [ D.6380 ]) [0 *_137+0 S8 A64])) policyticket.c:120 -1
     (nil))
(insn 183 182 184 21 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -712 [0xfffffffffffffd38])) [0 policyRefFilename+0 S8 A64])
        (reg/f:DI 242)) policyticket.c:120 -1
     (nil))
(jump_insn 184 183 185 21 (set (pc)
        (label_ref:DI 597)) 654 {jump}
     (nil)
 -> 597)
(barrier 185 184 186)
(code_label 186 185 187 22 14 "" [1 uses])
(note 187 186 188 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fa8a32d3870 *.LC9>)) policyticket.c:123 -1
     (nil))
(call_insn 189 188 190 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:123 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 190 189 193 22 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:124 -1
     (nil)
    (nil))
(jump_insn 193 190 194 22 (set (pc)
        (label_ref 597)) -1
     (nil)
 -> 597)
(barrier 194 193 195)
(code_label 195 194 196 24 13 "" [1 uses])
(note 196 195 197 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 24 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:127 -1
     (nil))
(insn 198 197 199 24 (set (reg:DI 121 [ D.6379 ])
        (sign_extend:DI (reg:SI 243))) policyticket.c:127 -1
     (nil))
(insn 199 198 200 24 (parallel [
            (set (reg:DI 122 [ D.6379 ])
                (ashift:DI (reg:DI 121 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:127 -1
     (nil))
(insn 200 199 201 24 (set (reg/f:DI 244)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:127 -1
     (nil))
(insn 201 200 202 24 (parallel [
            (set (reg/f:DI 123 [ D.6380 ])
                (plus:DI (reg:DI 122 [ D.6379 ])
                    (reg/f:DI 244)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:127 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 122 [ D.6379 ]))
        (nil)))
(insn 202 201 203 24 (set (reg/f:DI 124 [ D.6381 ])
        (mem/f:DI (reg/f:DI 123 [ D.6380 ]) [0 *_143+0 S8 A64])) policyticket.c:127 -1
     (nil))
(insn 203 202 204 24 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa8a32d3900 *.LC10>)) policyticket.c:127 -1
     (nil))
(insn 204 203 205 24 (set (reg:DI 5 di)
        (reg/f:DI 124 [ D.6381 ])) policyticket.c:127 -1
     (nil))
(call_insn/i 205 204 206 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa8a36b40d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyticket.c:127 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 206 205 207 24 (set (reg:SI 125 [ D.6382 ])
        (reg:SI 0 ax)) policyticket.c:127 -1
     (nil))
(insn 207 206 208 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 125 [ D.6382 ])
            (const_int 0 [0]))) policyticket.c:127 -1
     (nil))
(jump_insn 208 207 209 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 233)
            (pc))) policyticket.c:127 -1
     (nil)
 -> 233)
(note 209 208 210 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 25 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:128 -1
     (nil))
(insn 211 210 212 25 (set (reg:SI 245)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:129 -1
     (nil))
(insn 212 211 213 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 245)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policyticket.c:129 -1
     (nil))
(jump_insn 213 212 214 25 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 224)
            (pc))) policyticket.c:129 -1
     (nil)
 -> 224)
(note 214 213 215 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 215 214 216 26 (set (reg:SI 246)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:130 -1
     (nil))
(insn 216 215 217 26 (set (reg:DI 126 [ D.6379 ])
        (sign_extend:DI (reg:SI 246))) policyticket.c:130 -1
     (nil))
(insn 217 216 218 26 (parallel [
            (set (reg:DI 127 [ D.6379 ])
                (ashift:DI (reg:DI 126 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:130 -1
     (nil))
(insn 218 217 219 26 (set (reg/f:DI 247)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:130 -1
     (nil))
(insn 219 218 220 26 (parallel [
            (set (reg/f:DI 128 [ D.6380 ])
                (plus:DI (reg:DI 127 [ D.6379 ])
                    (reg/f:DI 247)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:130 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 127 [ D.6379 ]))
        (nil)))
(insn 220 219 221 26 (set (reg/f:DI 248)
        (mem/f:DI (reg/f:DI 128 [ D.6380 ]) [0 *_149+0 S8 A64])) policyticket.c:130 -1
     (nil))
(insn 221 220 222 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -704 [0xfffffffffffffd40])) [0 authNameFilename+0 S8 A64])
        (reg/f:DI 248)) policyticket.c:130 -1
     (nil))
(jump_insn 222 221 223 26 (set (pc)
        (label_ref:DI 597)) 654 {jump}
     (nil)
 -> 597)
(barrier 223 222 224)
(code_label 224 223 225 27 17 "" [1 uses])
(note 225 224 226 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fa8a32d3990 *.LC11>)) policyticket.c:133 -1
     (nil))
(call_insn 227 226 228 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:133 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 228 227 231 27 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:134 -1
     (nil)
    (nil))
(jump_insn 231 228 232 27 (set (pc)
        (label_ref 597)) -1
     (nil)
 -> 597)
(barrier 232 231 233)
(code_label 233 232 234 29 16 "" [1 uses])
(note 234 233 235 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 29 (set (reg:SI 249)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:137 -1
     (nil))
(insn 236 235 237 29 (set (reg:DI 129 [ D.6379 ])
        (sign_extend:DI (reg:SI 249))) policyticket.c:137 -1
     (nil))
(insn 237 236 238 29 (parallel [
            (set (reg:DI 130 [ D.6379 ])
                (ashift:DI (reg:DI 129 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:137 -1
     (nil))
(insn 238 237 239 29 (set (reg/f:DI 250)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:137 -1
     (nil))
(insn 239 238 240 29 (parallel [
            (set (reg/f:DI 131 [ D.6380 ])
                (plus:DI (reg:DI 130 [ D.6379 ])
                    (reg/f:DI 250)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:137 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 130 [ D.6379 ]))
        (nil)))
(insn 240 239 241 29 (set (reg/f:DI 132 [ D.6381 ])
        (mem/f:DI (reg/f:DI 131 [ D.6380 ]) [0 *_155+0 S8 A64])) policyticket.c:137 -1
     (nil))
(insn 241 240 242 29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fa8a32d3a20 *.LC12>)) policyticket.c:137 -1
     (nil))
(insn 242 241 243 29 (set (reg:DI 5 di)
        (reg/f:DI 132 [ D.6381 ])) policyticket.c:137 -1
     (nil))
(call_insn/i 243 242 244 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa8a36b40d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyticket.c:137 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 244 243 245 29 (set (reg:SI 133 [ D.6382 ])
        (reg:SI 0 ax)) policyticket.c:137 -1
     (nil))
(insn 245 244 246 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 133 [ D.6382 ])
            (const_int 0 [0]))) policyticket.c:137 -1
     (nil))
(jump_insn 246 245 247 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 272)
            (pc))) policyticket.c:137 -1
     (nil)
 -> 272)
(note 247 246 248 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 30 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:138 -1
     (nil))
(insn 249 248 250 30 (set (reg:SI 251)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:139 -1
     (nil))
(insn 250 249 251 30 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 251)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policyticket.c:139 -1
     (nil))
(jump_insn 251 250 252 30 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) policyticket.c:139 -1
     (nil)
 -> 263)
(note 252 251 253 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 31 (set (reg:SI 252)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:140 -1
     (nil))
(insn 254 253 255 31 (set (reg:DI 134 [ D.6379 ])
        (sign_extend:DI (reg:SI 252))) policyticket.c:140 -1
     (nil))
(insn 255 254 256 31 (parallel [
            (set (reg:DI 135 [ D.6379 ])
                (ashift:DI (reg:DI 134 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:140 -1
     (nil))
(insn 256 255 257 31 (set (reg/f:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:140 -1
     (nil))
(insn 257 256 258 31 (parallel [
            (set (reg/f:DI 136 [ D.6380 ])
                (plus:DI (reg:DI 135 [ D.6379 ])
                    (reg/f:DI 253)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:140 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 135 [ D.6379 ]))
        (nil)))
(insn 258 257 259 31 (set (reg/f:DI 137 [ D.6381 ])
        (mem/f:DI (reg/f:DI 136 [ D.6380 ]) [0 *_161+0 S8 A64])) policyticket.c:140 -1
     (nil))
(insn 259 258 260 31 (set (reg:QI 254)
        (mem:QI (reg/f:DI 137 [ D.6381 ]) [0 *_162+0 S1 A8])) policyticket.c:140 -1
     (nil))
(insn 260 259 261 31 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -805 [0xfffffffffffffcdb])) [0 hierarchyChar+0 S1 A8])
        (reg:QI 254)) policyticket.c:140 -1
     (nil))
(jump_insn 261 260 262 31 (set (pc)
        (label_ref:DI 597)) 654 {jump}
     (nil)
 -> 597)
(barrier 262 261 263)
(code_label 263 262 264 32 20 "" [1 uses])
(note 264 263 265 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 32 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fa8a32d3ab0 *.LC13>)) policyticket.c:143 -1
     (nil))
(call_insn 266 265 267 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:143 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 267 266 270 32 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:144 -1
     (nil)
    (nil))
(jump_insn 270 267 271 32 (set (pc)
        (label_ref 597)) -1
     (nil)
 -> 597)
(barrier 271 270 272)
(code_label 272 271 273 34 19 "" [1 uses])
(note 273 272 274 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 34 (set (reg:SI 255)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:147 -1
     (nil))
(insn 275 274 276 34 (set (reg:DI 138 [ D.6379 ])
        (sign_extend:DI (reg:SI 255))) policyticket.c:147 -1
     (nil))
(insn 276 275 277 34 (parallel [
            (set (reg:DI 139 [ D.6379 ])
                (ashift:DI (reg:DI 138 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:147 -1
     (nil))
(insn 277 276 278 34 (set (reg/f:DI 256)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:147 -1
     (nil))
(insn 278 277 279 34 (parallel [
            (set (reg/f:DI 140 [ D.6380 ])
                (plus:DI (reg:DI 139 [ D.6379 ])
                    (reg/f:DI 256)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:147 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 139 [ D.6379 ]))
        (nil)))
(insn 279 278 280 34 (set (reg/f:DI 141 [ D.6381 ])
        (mem/f:DI (reg/f:DI 140 [ D.6380 ]) [0 *_168+0 S8 A64])) policyticket.c:147 -1
     (nil))
(insn 280 279 281 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fa8a32d3b40 *.LC14>)) policyticket.c:147 -1
     (nil))
(insn 281 280 282 34 (set (reg:DI 5 di)
        (reg/f:DI 141 [ D.6381 ])) policyticket.c:147 -1
     (nil))
(call_insn/i 282 281 283 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa8a36b40d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyticket.c:147 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 283 282 284 34 (set (reg:SI 142 [ D.6382 ])
        (reg:SI 0 ax)) policyticket.c:147 -1
     (nil))
(insn 284 283 285 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 142 [ D.6382 ])
            (const_int 0 [0]))) policyticket.c:147 -1
     (nil))
(jump_insn 285 284 286 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 310)
            (pc))) policyticket.c:147 -1
     (nil)
 -> 310)
(note 286 285 287 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 35 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:148 -1
     (nil))
(insn 288 287 289 35 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:149 -1
     (nil))
(insn 289 288 290 35 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 257)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policyticket.c:149 -1
     (nil))
(jump_insn 290 289 291 35 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 301)
            (pc))) policyticket.c:149 -1
     (nil)
 -> 301)
(note 291 290 292 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 292 291 293 36 (set (reg:SI 258)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:150 -1
     (nil))
(insn 293 292 294 36 (set (reg:DI 143 [ D.6379 ])
        (sign_extend:DI (reg:SI 258))) policyticket.c:150 -1
     (nil))
(insn 294 293 295 36 (parallel [
            (set (reg:DI 144 [ D.6379 ])
                (ashift:DI (reg:DI 143 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:150 -1
     (nil))
(insn 295 294 296 36 (set (reg/f:DI 259)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:150 -1
     (nil))
(insn 296 295 297 36 (parallel [
            (set (reg/f:DI 145 [ D.6380 ])
                (plus:DI (reg:DI 144 [ D.6379 ])
                    (reg/f:DI 259)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:150 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 144 [ D.6379 ]))
        (nil)))
(insn 297 296 298 36 (set (reg/f:DI 260)
        (mem/f:DI (reg/f:DI 145 [ D.6380 ]) [0 *_174+0 S8 A64])) policyticket.c:150 -1
     (nil))
(insn 298 297 299 36 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -696 [0xfffffffffffffd48])) [0 ticketFilename+0 S8 A64])
        (reg/f:DI 260)) policyticket.c:150 -1
     (nil))
(jump_insn 299 298 300 36 (set (pc)
        (label_ref:DI 597)) 654 {jump}
     (nil)
 -> 597)
(barrier 300 299 301)
(code_label 301 300 302 37 23 "" [1 uses])
(note 302 301 303 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 37 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fa8a32d3bd0 *.LC15>)) policyticket.c:153 -1
     (nil))
(call_insn 304 303 305 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:153 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 305 304 308 37 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:154 -1
     (nil)
    (nil))
(jump_insn 308 305 309 37 (set (pc)
        (label_ref 597)) -1
     (nil)
 -> 597)
(barrier 309 308 310)
(code_label 310 309 311 39 22 "" [1 uses])
(note 311 310 312 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 39 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:157 -1
     (nil))
(insn 313 312 314 39 (set (reg:DI 146 [ D.6379 ])
        (sign_extend:DI (reg:SI 261))) policyticket.c:157 -1
     (nil))
(insn 314 313 315 39 (parallel [
            (set (reg:DI 147 [ D.6379 ])
                (ashift:DI (reg:DI 146 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:157 -1
     (nil))
(insn 315 314 316 39 (set (reg/f:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:157 -1
     (nil))
(insn 316 315 317 39 (parallel [
            (set (reg/f:DI 148 [ D.6380 ])
                (plus:DI (reg:DI 147 [ D.6379 ])
                    (reg/f:DI 262)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:157 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 147 [ D.6379 ]))
        (nil)))
(insn 317 316 318 39 (set (reg/f:DI 149 [ D.6381 ])
        (mem/f:DI (reg/f:DI 148 [ D.6380 ]) [0 *_180+0 S8 A64])) policyticket.c:157 -1
     (nil))
(insn 318 317 319 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fa8a32d3c60 *.LC16>)) policyticket.c:157 -1
     (nil))
(insn 319 318 320 39 (set (reg:DI 5 di)
        (reg/f:DI 149 [ D.6381 ])) policyticket.c:157 -1
     (nil))
(call_insn/i 320 319 321 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa8a36b40d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyticket.c:157 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 321 320 322 39 (set (reg:SI 150 [ D.6382 ])
        (reg:SI 0 ax)) policyticket.c:157 -1
     (nil))
(insn 322 321 323 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 150 [ D.6382 ])
            (const_int 0 [0]))) policyticket.c:157 -1
     (nil))
(jump_insn 323 322 324 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 388)
            (pc))) policyticket.c:157 -1
     (nil)
 -> 388)
(note 324 323 325 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 325 324 326 40 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:158 -1
     (nil))
(insn 326 325 327 40 (set (reg:SI 263)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:159 -1
     (nil))
(insn 327 326 328 40 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 263)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policyticket.c:159 -1
     (nil))
(jump_insn 328 327 329 40 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 344)
            (pc))) policyticket.c:159 -1
     (nil)
 -> 344)
(note 329 328 330 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 330 329 331 41 (set (reg:SI 264)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:160 -1
     (nil))
(insn 331 330 332 41 (set (reg:DI 151 [ D.6379 ])
        (sign_extend:DI (reg:SI 264))) policyticket.c:160 -1
     (nil))
(insn 332 331 333 41 (parallel [
            (set (reg:DI 152 [ D.6379 ])
                (ashift:DI (reg:DI 151 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:160 -1
     (nil))
(insn 333 332 334 41 (set (reg/f:DI 265)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:160 -1
     (nil))
(insn 334 333 335 41 (parallel [
            (set (reg/f:DI 153 [ D.6380 ])
                (plus:DI (reg:DI 152 [ D.6379 ])
                    (reg/f:DI 265)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:160 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 152 [ D.6379 ]))
        (nil)))
(insn 335 334 336 41 (set (reg/f:DI 154 [ D.6381 ])
        (mem/f:DI (reg/f:DI 153 [ D.6380 ]) [0 *_186+0 S8 A64])) policyticket.c:160 -1
     (nil))
(insn 336 335 337 41 (parallel [
            (set (reg:DI 266)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:160 -1
     (nil))
(insn 337 336 338 41 (set (reg:DI 1 dx)
        (reg:DI 266)) policyticket.c:160 -1
     (nil))
(insn 338 337 339 41 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa8a32d3480 *.LC2>)) policyticket.c:160 -1
     (nil))
(insn 339 338 340 41 (set (reg:DI 5 di)
        (reg/f:DI 154 [ D.6381 ])) policyticket.c:160 -1
     (nil))
(insn 340 339 341 41 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyticket.c:160 -1
     (nil))
(call_insn 341 340 342 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fa8a36bdca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policyticket.c:160 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 342 341 343 41 (set (pc)
        (label_ref 349)) -1
     (nil)
 -> 349)
(barrier 343 342 344)
(code_label 344 343 345 42 26 "" [1 uses])
(note 345 344 346 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 346 345 347 42 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fa8a32d3cf0 *.LC17>)) policyticket.c:163 -1
     (nil))
(call_insn 347 346 348 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:163 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 348 347 349 42 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:164 -1
     (nil)
    (nil))
(code_label 349 348 350 43 27 "" [1 uses])
(note 350 349 351 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 351 350 352 43 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:166 -1
     (nil))
(insn 352 351 353 43 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:167 -1
     (nil))
(insn 353 352 354 43 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 267)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policyticket.c:167 -1
     (nil))
(jump_insn 354 353 355 43 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 379)
            (pc))) policyticket.c:167 -1
     (nil)
 -> 379)
(note 355 354 356 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 356 355 357 44 (set (reg:SI 268)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:168 -1
     (nil))
(insn 357 356 358 44 (set (reg:DI 155 [ D.6379 ])
        (sign_extend:DI (reg:SI 268))) policyticket.c:168 -1
     (nil))
(insn 358 357 359 44 (parallel [
            (set (reg:DI 156 [ D.6379 ])
                (ashift:DI (reg:DI 155 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:168 -1
     (nil))
(insn 359 358 360 44 (set (reg/f:DI 269)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:168 -1
     (nil))
(insn 360 359 361 44 (parallel [
            (set (reg/f:DI 157 [ D.6380 ])
                (plus:DI (reg:DI 156 [ D.6379 ])
                    (reg/f:DI 269)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:168 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 156 [ D.6379 ]))
        (nil)))
(insn 361 360 362 44 (set (reg/f:DI 158 [ D.6381 ])
        (mem/f:DI (reg/f:DI 157 [ D.6380 ]) [0 *_194+0 S8 A64])) policyticket.c:168 -1
     (nil))
(insn 362 361 363 44 (parallel [
            (set (reg:DI 270)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -796 [0xfffffffffffffce4])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:168 -1
     (nil))
(insn 363 362 364 44 (set (reg:DI 1 dx)
        (reg:DI 270)) policyticket.c:168 -1
     (nil))
(insn 364 363 365 44 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa8a32d3480 *.LC2>)) policyticket.c:168 -1
     (nil))
(insn 365 364 366 44 (set (reg:DI 5 di)
        (reg/f:DI 158 [ D.6381 ])) policyticket.c:168 -1
     (nil))
(insn 366 365 367 44 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyticket.c:168 -1
     (nil))
(call_insn 367 366 368 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fa8a36bdca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policyticket.c:168 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 368 367 369 44 (set (reg:SI 159 [ D.6383 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -796 [0xfffffffffffffce4])) [0 sessionAttributes0+0 S4 A32])) policyticket.c:169 -1
     (nil))
(insn 369 368 370 44 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 159 [ D.6383 ])
            (const_int 255 [0xff]))) policyticket.c:169 -1
     (nil))
(jump_insn 370 369 371 44 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 597)
            (pc))) policyticket.c:169 612 {*jcc_1}
     (nil)
 -> 597)
(note 371 370 372 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 372 371 373 45 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fa8a32d3d80 *.LC18>)) policyticket.c:170 -1
     (nil))
(call_insn 373 372 374 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:170 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 374 373 377 45 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:171 -1
     (nil)
    (nil))
(jump_insn 377 374 378 45 (set (pc)
        (label_ref:DI 597)) 654 {jump}
     (nil)
 -> 597)
(barrier 378 377 379)
(code_label 379 378 380 47 28 "" [1 uses])
(note 380 379 381 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 381 380 382 47 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fa8a32d3cf0 *.LC17>)) policyticket.c:175 -1
     (nil))
(call_insn 382 381 383 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:175 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 383 382 386 47 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:176 -1
     (nil)
    (nil))
(jump_insn 386 383 387 47 (set (pc)
        (label_ref 597)) -1
     (nil)
 -> 597)
(barrier 387 386 388)
(code_label 388 387 389 49 25 "" [1 uses])
(note 389 388 390 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 49 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:179 -1
     (nil))
(insn 391 390 392 49 (set (reg:DI 160 [ D.6379 ])
        (sign_extend:DI (reg:SI 271))) policyticket.c:179 -1
     (nil))
(insn 392 391 393 49 (parallel [
            (set (reg:DI 161 [ D.6379 ])
                (ashift:DI (reg:DI 160 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:179 -1
     (nil))
(insn 393 392 394 49 (set (reg/f:DI 272)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:179 -1
     (nil))
(insn 394 393 395 49 (parallel [
            (set (reg/f:DI 162 [ D.6380 ])
                (plus:DI (reg:DI 161 [ D.6379 ])
                    (reg/f:DI 272)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:179 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 161 [ D.6379 ]))
        (nil)))
(insn 395 394 396 49 (set (reg/f:DI 163 [ D.6381 ])
        (mem/f:DI (reg/f:DI 162 [ D.6380 ]) [0 *_204+0 S8 A64])) policyticket.c:179 -1
     (nil))
(insn 396 395 397 49 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fa8a32d3e10 *.LC19>)) policyticket.c:179 -1
     (nil))
(insn 397 396 398 49 (set (reg:DI 5 di)
        (reg/f:DI 163 [ D.6381 ])) policyticket.c:179 -1
     (nil))
(call_insn/i 398 397 399 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa8a36b40d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyticket.c:179 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 399 398 400 49 (set (reg:SI 164 [ D.6382 ])
        (reg:SI 0 ax)) policyticket.c:179 -1
     (nil))
(insn 400 399 401 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 164 [ D.6382 ])
            (const_int 0 [0]))) policyticket.c:179 -1
     (nil))
(jump_insn 401 400 402 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 466)
            (pc))) policyticket.c:179 -1
     (nil)
 -> 466)
(note 402 401 403 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 403 402 404 50 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:180 -1
     (nil))
(insn 404 403 405 50 (set (reg:SI 273)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:181 -1
     (nil))
(insn 405 404 406 50 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 273)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policyticket.c:181 -1
     (nil))
(jump_insn 406 405 407 50 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 422)
            (pc))) policyticket.c:181 -1
     (nil)
 -> 422)
(note 407 406 408 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 408 407 409 51 (set (reg:SI 274)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:182 -1
     (nil))
(insn 409 408 410 51 (set (reg:DI 165 [ D.6379 ])
        (sign_extend:DI (reg:SI 274))) policyticket.c:182 -1
     (nil))
(insn 410 409 411 51 (parallel [
            (set (reg:DI 166 [ D.6379 ])
                (ashift:DI (reg:DI 165 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:182 -1
     (nil))
(insn 411 410 412 51 (set (reg/f:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:182 -1
     (nil))
(insn 412 411 413 51 (parallel [
            (set (reg/f:DI 167 [ D.6380 ])
                (plus:DI (reg:DI 166 [ D.6379 ])
                    (reg/f:DI 275)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:182 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 166 [ D.6379 ]))
        (nil)))
(insn 413 412 414 51 (set (reg/f:DI 168 [ D.6381 ])
        (mem/f:DI (reg/f:DI 167 [ D.6380 ]) [0 *_210+0 S8 A64])) policyticket.c:182 -1
     (nil))
(insn 414 413 415 51 (parallel [
            (set (reg:DI 276)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -792 [0xfffffffffffffce8])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:182 -1
     (nil))
(insn 415 414 416 51 (set (reg:DI 1 dx)
        (reg:DI 276)) policyticket.c:182 -1
     (nil))
(insn 416 415 417 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa8a32d3480 *.LC2>)) policyticket.c:182 -1
     (nil))
(insn 417 416 418 51 (set (reg:DI 5 di)
        (reg/f:DI 168 [ D.6381 ])) policyticket.c:182 -1
     (nil))
(insn 418 417 419 51 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyticket.c:182 -1
     (nil))
(call_insn 419 418 420 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fa8a36bdca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policyticket.c:182 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 420 419 421 51 (set (pc)
        (label_ref 427)) -1
     (nil)
 -> 427)
(barrier 421 420 422)
(code_label 422 421 423 52 32 "" [1 uses])
(note 423 422 424 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 425 52 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fa8a32d3ea0 *.LC20>)) policyticket.c:185 -1
     (nil))
(call_insn 425 424 426 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:185 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 426 425 427 52 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:186 -1
     (nil)
    (nil))
(code_label 427 426 428 53 33 "" [1 uses])
(note 428 427 429 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 429 428 430 53 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:188 -1
     (nil))
(insn 430 429 431 53 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:189 -1
     (nil))
(insn 431 430 432 53 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 277)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policyticket.c:189 -1
     (nil))
(jump_insn 432 431 433 53 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 457)
            (pc))) policyticket.c:189 -1
     (nil)
 -> 457)
(note 433 432 434 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 434 433 435 54 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:190 -1
     (nil))
(insn 435 434 436 54 (set (reg:DI 169 [ D.6379 ])
        (sign_extend:DI (reg:SI 278))) policyticket.c:190 -1
     (nil))
(insn 436 435 437 54 (parallel [
            (set (reg:DI 170 [ D.6379 ])
                (ashift:DI (reg:DI 169 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:190 -1
     (nil))
(insn 437 436 438 54 (set (reg/f:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:190 -1
     (nil))
(insn 438 437 439 54 (parallel [
            (set (reg/f:DI 171 [ D.6380 ])
                (plus:DI (reg:DI 170 [ D.6379 ])
                    (reg/f:DI 279)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:190 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 170 [ D.6379 ]))
        (nil)))
(insn 439 438 440 54 (set (reg/f:DI 172 [ D.6381 ])
        (mem/f:DI (reg/f:DI 171 [ D.6380 ]) [0 *_218+0 S8 A64])) policyticket.c:190 -1
     (nil))
(insn 440 439 441 54 (parallel [
            (set (reg:DI 280)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -788 [0xfffffffffffffcec])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:190 -1
     (nil))
(insn 441 440 442 54 (set (reg:DI 1 dx)
        (reg:DI 280)) policyticket.c:190 -1
     (nil))
(insn 442 441 443 54 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa8a32d3480 *.LC2>)) policyticket.c:190 -1
     (nil))
(insn 443 442 444 54 (set (reg:DI 5 di)
        (reg/f:DI 172 [ D.6381 ])) policyticket.c:190 -1
     (nil))
(insn 444 443 445 54 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyticket.c:190 -1
     (nil))
(call_insn 445 444 446 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fa8a36bdca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policyticket.c:190 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 446 445 447 54 (set (reg:SI 173 [ D.6383 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -788 [0xfffffffffffffcec])) [0 sessionAttributes1+0 S4 A32])) policyticket.c:191 -1
     (nil))
(insn 447 446 448 54 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 173 [ D.6383 ])
            (const_int 255 [0xff]))) policyticket.c:191 -1
     (nil))
(jump_insn 448 447 449 54 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 597)
            (pc))) policyticket.c:191 612 {*jcc_1}
     (nil)
 -> 597)
(note 449 448 450 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 450 449 451 55 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fa8a32d3f30 *.LC21>)) policyticket.c:192 -1
     (nil))
(call_insn 451 450 452 55 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:192 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 452 451 455 55 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:193 -1
     (nil)
    (nil))
(jump_insn 455 452 456 55 (set (pc)
        (label_ref:DI 597)) 654 {jump}
     (nil)
 -> 597)
(barrier 456 455 457)
(code_label 457 456 458 57 34 "" [1 uses])
(note 458 457 459 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 459 458 460 57 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fa8a32d3ea0 *.LC20>)) policyticket.c:197 -1
     (nil))
(call_insn 460 459 461 57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:197 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 461 460 464 57 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:198 -1
     (nil)
    (nil))
(jump_insn 464 461 465 57 (set (pc)
        (label_ref 597)) -1
     (nil)
 -> 597)
(barrier 465 464 466)
(code_label 466 465 467 59 31 "" [1 uses])
(note 467 466 468 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 469 59 (set (reg:SI 281)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:201 -1
     (nil))
(insn 469 468 470 59 (set (reg:DI 174 [ D.6379 ])
        (sign_extend:DI (reg:SI 281))) policyticket.c:201 -1
     (nil))
(insn 470 469 471 59 (parallel [
            (set (reg:DI 175 [ D.6379 ])
                (ashift:DI (reg:DI 174 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:201 -1
     (nil))
(insn 471 470 472 59 (set (reg/f:DI 282)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:201 -1
     (nil))
(insn 472 471 473 59 (parallel [
            (set (reg/f:DI 176 [ D.6380 ])
                (plus:DI (reg:DI 175 [ D.6379 ])
                    (reg/f:DI 282)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:201 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 175 [ D.6379 ]))
        (nil)))
(insn 473 472 474 59 (set (reg/f:DI 177 [ D.6381 ])
        (mem/f:DI (reg/f:DI 176 [ D.6380 ]) [0 *_228+0 S8 A64])) policyticket.c:201 -1
     (nil))
(insn 474 473 475 59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa8a32e9000 *.LC22>)) policyticket.c:201 -1
     (nil))
(insn 475 474 476 59 (set (reg:DI 5 di)
        (reg/f:DI 177 [ D.6381 ])) policyticket.c:201 -1
     (nil))
(call_insn/i 476 475 477 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa8a36b40d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyticket.c:201 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 477 476 478 59 (set (reg:SI 178 [ D.6382 ])
        (reg:SI 0 ax)) policyticket.c:201 -1
     (nil))
(insn 478 477 479 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 178 [ D.6382 ])
            (const_int 0 [0]))) policyticket.c:201 -1
     (nil))
(jump_insn 479 478 480 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 544)
            (pc))) policyticket.c:201 -1
     (nil)
 -> 544)
(note 480 479 481 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 481 480 482 60 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:202 -1
     (nil))
(insn 482 481 483 60 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:203 -1
     (nil))
(insn 483 482 484 60 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 283)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policyticket.c:203 -1
     (nil))
(jump_insn 484 483 485 60 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 500)
            (pc))) policyticket.c:203 -1
     (nil)
 -> 500)
(note 485 484 486 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 486 485 487 61 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:204 -1
     (nil))
(insn 487 486 488 61 (set (reg:DI 179 [ D.6379 ])
        (sign_extend:DI (reg:SI 284))) policyticket.c:204 -1
     (nil))
(insn 488 487 489 61 (parallel [
            (set (reg:DI 180 [ D.6379 ])
                (ashift:DI (reg:DI 179 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:204 -1
     (nil))
(insn 489 488 490 61 (set (reg/f:DI 285)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:204 -1
     (nil))
(insn 490 489 491 61 (parallel [
            (set (reg/f:DI 181 [ D.6380 ])
                (plus:DI (reg:DI 180 [ D.6379 ])
                    (reg/f:DI 285)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:204 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 180 [ D.6379 ]))
        (nil)))
(insn 491 490 492 61 (set (reg/f:DI 182 [ D.6381 ])
        (mem/f:DI (reg/f:DI 181 [ D.6380 ]) [0 *_234+0 S8 A64])) policyticket.c:204 -1
     (nil))
(insn 492 491 493 61 (parallel [
            (set (reg:DI 286)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:204 -1
     (nil))
(insn 493 492 494 61 (set (reg:DI 1 dx)
        (reg:DI 286)) policyticket.c:204 -1
     (nil))
(insn 494 493 495 61 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa8a32d3480 *.LC2>)) policyticket.c:204 -1
     (nil))
(insn 495 494 496 61 (set (reg:DI 5 di)
        (reg/f:DI 182 [ D.6381 ])) policyticket.c:204 -1
     (nil))
(insn 496 495 497 61 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyticket.c:204 -1
     (nil))
(call_insn 497 496 498 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fa8a36bdca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policyticket.c:204 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 498 497 499 61 (set (pc)
        (label_ref 505)) -1
     (nil)
 -> 505)
(barrier 499 498 500)
(code_label 500 499 501 62 38 "" [1 uses])
(note 501 500 502 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 502 501 503 62 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa8a32e9090 *.LC23>)) policyticket.c:207 -1
     (nil))
(call_insn 503 502 504 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:207 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 504 503 505 62 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:208 -1
     (nil)
    (nil))
(code_label 505 504 506 63 39 "" [1 uses])
(note 506 505 507 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 507 506 508 63 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:210 -1
     (nil))
(insn 508 507 509 63 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:211 -1
     (nil))
(insn 509 508 510 63 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 287)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policyticket.c:211 -1
     (nil))
(jump_insn 510 509 511 63 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 535)
            (pc))) policyticket.c:211 -1
     (nil)
 -> 535)
(note 511 510 512 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 512 511 513 64 (set (reg:SI 288)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:212 -1
     (nil))
(insn 513 512 514 64 (set (reg:DI 183 [ D.6379 ])
        (sign_extend:DI (reg:SI 288))) policyticket.c:212 -1
     (nil))
(insn 514 513 515 64 (parallel [
            (set (reg:DI 184 [ D.6379 ])
                (ashift:DI (reg:DI 183 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:212 -1
     (nil))
(insn 515 514 516 64 (set (reg/f:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:212 -1
     (nil))
(insn 516 515 517 64 (parallel [
            (set (reg/f:DI 185 [ D.6380 ])
                (plus:DI (reg:DI 184 [ D.6379 ])
                    (reg/f:DI 289)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:212 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 184 [ D.6379 ]))
        (nil)))
(insn 517 516 518 64 (set (reg/f:DI 186 [ D.6381 ])
        (mem/f:DI (reg/f:DI 185 [ D.6380 ]) [0 *_242+0 S8 A64])) policyticket.c:212 -1
     (nil))
(insn 518 517 519 64 (parallel [
            (set (reg:DI 290)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -780 [0xfffffffffffffcf4])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:212 -1
     (nil))
(insn 519 518 520 64 (set (reg:DI 1 dx)
        (reg:DI 290)) policyticket.c:212 -1
     (nil))
(insn 520 519 521 64 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa8a32d3480 *.LC2>)) policyticket.c:212 -1
     (nil))
(insn 521 520 522 64 (set (reg:DI 5 di)
        (reg/f:DI 186 [ D.6381 ])) policyticket.c:212 -1
     (nil))
(insn 522 521 523 64 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyticket.c:212 -1
     (nil))
(call_insn 523 522 524 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7fa8a36bdca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policyticket.c:212 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 524 523 525 64 (set (reg:SI 187 [ D.6383 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 sessionAttributes2+0 S4 A32])) policyticket.c:213 -1
     (nil))
(insn 525 524 526 64 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 187 [ D.6383 ])
            (const_int 255 [0xff]))) policyticket.c:213 -1
     (nil))
(jump_insn 526 525 527 64 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 597)
            (pc))) policyticket.c:213 612 {*jcc_1}
     (nil)
 -> 597)
(note 527 526 528 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 528 527 529 65 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa8a32e9120 *.LC24>)) policyticket.c:214 -1
     (nil))
(call_insn 529 528 530 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:214 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 530 529 533 65 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:215 -1
     (nil)
    (nil))
(jump_insn 533 530 534 65 (set (pc)
        (label_ref:DI 597)) 654 {jump}
     (nil)
 -> 597)
(barrier 534 533 535)
(code_label 535 534 536 67 40 "" [1 uses])
(note 536 535 537 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 537 536 538 67 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa8a32e9090 *.LC23>)) policyticket.c:219 -1
     (nil))
(call_insn 538 537 539 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:219 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 539 538 542 67 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:220 -1
     (nil)
    (nil))
(jump_insn 542 539 543 67 (set (pc)
        (label_ref 597)) -1
     (nil)
 -> 597)
(barrier 543 542 544)
(code_label 544 543 545 69 37 "" [1 uses])
(note 545 544 546 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 546 545 547 69 (set (reg:SI 291)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:223 -1
     (nil))
(insn 547 546 548 69 (set (reg:DI 188 [ D.6379 ])
        (sign_extend:DI (reg:SI 291))) policyticket.c:223 -1
     (nil))
(insn 548 547 549 69 (parallel [
            (set (reg:DI 189 [ D.6379 ])
                (ashift:DI (reg:DI 188 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:223 -1
     (nil))
(insn 549 548 550 69 (set (reg/f:DI 292)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:223 -1
     (nil))
(insn 550 549 551 69 (parallel [
            (set (reg/f:DI 190 [ D.6380 ])
                (plus:DI (reg:DI 189 [ D.6379 ])
                    (reg/f:DI 292)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:223 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 189 [ D.6379 ]))
        (nil)))
(insn 551 550 552 69 (set (reg/f:DI 191 [ D.6381 ])
        (mem/f:DI (reg/f:DI 190 [ D.6380 ]) [0 *_252+0 S8 A64])) policyticket.c:223 -1
     (nil))
(insn 552 551 553 69 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fa8a32e91b0 *.LC25>)) policyticket.c:223 -1
     (nil))
(insn 553 552 554 69 (set (reg:DI 5 di)
        (reg/f:DI 191 [ D.6381 ])) policyticket.c:223 -1
     (nil))
(call_insn/i 554 553 555 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa8a36b40d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyticket.c:223 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 555 554 556 69 (set (reg:SI 192 [ D.6382 ])
        (reg:SI 0 ax)) policyticket.c:223 -1
     (nil))
(insn 556 555 557 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 192 [ D.6382 ])
            (const_int 0 [0]))) policyticket.c:223 -1
     (nil))
(jump_insn 557 556 558 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 562)
            (pc))) policyticket.c:223 -1
     (nil)
 -> 562)
(note 558 557 559 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(call_insn 559 558 560 70 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:224 -1
     (nil)
    (nil))
(jump_insn 560 559 561 70 (set (pc)
        (label_ref 597)) -1
     (nil)
 -> 597)
(barrier 561 560 562)
(code_label 562 561 563 71 43 "" [1 uses])
(note 563 562 564 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 564 563 565 71 (set (reg:SI 293)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:226 -1
     (nil))
(insn 565 564 566 71 (set (reg:DI 193 [ D.6379 ])
        (sign_extend:DI (reg:SI 293))) policyticket.c:226 -1
     (nil))
(insn 566 565 567 71 (parallel [
            (set (reg:DI 194 [ D.6379 ])
                (ashift:DI (reg:DI 193 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:226 -1
     (nil))
(insn 567 566 568 71 (set (reg/f:DI 294)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:226 -1
     (nil))
(insn 568 567 569 71 (parallel [
            (set (reg/f:DI 195 [ D.6380 ])
                (plus:DI (reg:DI 194 [ D.6379 ])
                    (reg/f:DI 294)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:226 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 194 [ D.6379 ]))
        (nil)))
(insn 569 568 570 71 (set (reg/f:DI 196 [ D.6381 ])
        (mem/f:DI (reg/f:DI 195 [ D.6380 ]) [0 *_258+0 S8 A64])) policyticket.c:226 -1
     (nil))
(insn 570 569 571 71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa8a32e9240 *.LC26>)) policyticket.c:226 -1
     (nil))
(insn 571 570 572 71 (set (reg:DI 5 di)
        (reg/f:DI 196 [ D.6381 ])) policyticket.c:226 -1
     (nil))
(call_insn/i 572 571 573 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa8a36b40d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policyticket.c:226 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 573 572 574 71 (set (reg:SI 197 [ D.6382 ])
        (reg:SI 0 ax)) policyticket.c:226 -1
     (nil))
(insn 574 573 575 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 197 [ D.6382 ])
            (const_int 0 [0]))) policyticket.c:226 -1
     (nil))
(jump_insn 575 574 576 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 584)
            (pc))) policyticket.c:226 -1
     (nil)
 -> 584)
(note 576 575 577 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 577 576 578 72 (set (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fa8a347c090 verbose>) [0 verbose+0 S4 A32])
        (const_int 1 [0x1])) policyticket.c:227 -1
     (nil))
(insn 578 577 579 72 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa8a32e92d0 *.LC27>)) policyticket.c:228 -1
     (nil))
(insn 579 578 580 72 (set (reg:SI 4 si)
        (const_int 1 [0x1])) policyticket.c:228 -1
     (nil))
(insn 580 579 581 72 (set (reg:DI 5 di)
        (const_int 0 [0])) policyticket.c:228 -1
     (nil))
(call_insn 581 580 582 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7fa8a3620000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) policyticket.c:228 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 582 581 583 72 (set (pc)
        (label_ref 597)) -1
     (nil)
 -> 597)
(barrier 583 582 584)
(code_label 584 583 585 73 44 "" [1 uses])
(note 585 584 586 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 586 585 587 73 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:231 -1
     (nil))
(insn 587 586 588 73 (set (reg:DI 198 [ D.6379 ])
        (sign_extend:DI (reg:SI 295))) policyticket.c:231 -1
     (nil))
(insn 588 587 589 73 (parallel [
            (set (reg:DI 199 [ D.6379 ])
                (ashift:DI (reg:DI 198 [ D.6379 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:231 -1
     (nil))
(insn 589 588 590 73 (set (reg/f:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])) policyticket.c:231 -1
     (nil))
(insn 590 589 591 73 (parallel [
            (set (reg/f:DI 200 [ D.6380 ])
                (plus:DI (reg:DI 199 [ D.6379 ])
                    (reg/f:DI 296)))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:231 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])) [0 argv+0 S8 A64])
            (reg:DI 199 [ D.6379 ]))
        (nil)))
(insn 591 590 592 73 (set (reg/f:DI 201 [ D.6381 ])
        (mem/f:DI (reg/f:DI 200 [ D.6380 ]) [0 *_265+0 S8 A64])) policyticket.c:231 -1
     (nil))
(insn 592 591 593 73 (set (reg:DI 4 si)
        (reg/f:DI 201 [ D.6381 ])) policyticket.c:231 -1
     (nil))
(insn 593 592 594 73 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fa8a32e9360 *.LC28>)) policyticket.c:231 -1
     (nil))
(insn 594 593 595 73 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyticket.c:231 -1
     (nil))
(call_insn 595 594 596 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa8a36baca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policyticket.c:231 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(call_insn 596 595 597 73 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:232 -1
     (nil)
    (nil))
(code_label 597 596 598 74 6 "" [25 uses])
(note 598 597 599 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 599 598 600 74 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:86 -1
     (nil))
(code_label 600 599 601 75 2 "" [1 uses])
(note 601 600 602 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 602 601 603 75 (set (reg:SI 297)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 i+0 S4 A32])) policyticket.c:86 -1
     (nil))
(insn 603 602 604 75 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 297)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -820 [0xfffffffffffffccc])) [0 argc+0 S4 A32]))) policyticket.c:86 -1
     (nil))
(jump_insn 604 603 605 75 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 609)
            (pc))) policyticket.c:86 -1
     (nil)
 -> 609)
(note 605 604 607 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 607 605 608 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyticket.c:86 -1
     (nil))
(jump_insn 608 607 609 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 606)
            (pc))) policyticket.c:86 -1
     (nil)
 -> 606)
(code_label 609 608 610 77 45 "" [1 uses])
(note 610 609 611 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 611 610 612 77 (set (reg:SI 202 [ D.6383 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -804 [0xfffffffffffffcdc])) [0 policySession+0 S4 A32])) policyticket.c:235 -1
     (nil))
(insn 612 611 613 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 202 [ D.6383 ])
            (const_int 0 [0]))) policyticket.c:235 -1
     (nil))
(jump_insn 613 612 614 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 618)
            (pc))) policyticket.c:235 -1
     (nil)
 -> 618)
(note 614 613 615 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 615 614 616 78 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fa8a32e93f0 *.LC29>)) policyticket.c:236 -1
     (nil))
(call_insn 616 615 617 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:236 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 617 616 618 78 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:237 -1
     (nil)
    (nil))
(code_label 618 617 619 79 47 "" [1 uses])
(note 619 618 620 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 620 619 621 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -728 [0xfffffffffffffd28])) [0 timeoutFilename+0 S8 A64])
            (const_int 0 [0]))) policyticket.c:239 -1
     (nil))
(jump_insn 621 620 622 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 626)
            (pc))) policyticket.c:239 -1
     (nil)
 -> 626)
(note 622 621 623 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 623 622 624 80 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7fa8a32e9480 *.LC30>)) policyticket.c:240 -1
     (nil))
(call_insn 624 623 625 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:240 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 625 624 626 80 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:241 -1
     (nil)
    (nil))
(code_label 626 625 627 81 48 "" [1 uses])
(note 627 626 628 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 628 627 629 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -696 [0xfffffffffffffd48])) [0 ticketFilename+0 S8 A64])
            (const_int 0 [0]))) policyticket.c:243 -1
     (nil))
(jump_insn 629 628 630 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 634)
            (pc))) policyticket.c:243 -1
     (nil)
 -> 634)
(note 630 629 631 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 631 630 632 82 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7fa8a32e9510 *.LC31>)) policyticket.c:244 -1
     (nil))
(call_insn 632 631 633 82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:244 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 633 632 634 82 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:245 -1
     (nil)
    (nil))
(code_label 634 633 635 83 49 "" [1 uses])
(note 635 634 636 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 636 635 637 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -704 [0xfffffffffffffd40])) [0 authNameFilename+0 S8 A64])
            (const_int 0 [0]))) policyticket.c:247 -1
     (nil))
(jump_insn 637 636 638 83 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 645)
            (pc))) policyticket.c:247 -1
     (nil)
 -> 645)
(note 638 637 639 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 639 638 640 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -805 [0xfffffffffffffcdb])) [0 hierarchyChar+0 S1 A8])
            (const_int 0 [0]))) policyticket.c:247 -1
     (nil))
(jump_insn 640 639 641 84 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 645)
            (pc))) policyticket.c:247 -1
     (nil)
 -> 645)
(note 641 640 642 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 642 641 643 85 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7fa8a32e95a0 *.LC32>)) policyticket.c:248 -1
     (nil))
(call_insn 643 642 644 85 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:248 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 644 643 645 85 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:249 -1
     (nil)
    (nil))
(code_label 645 644 646 86 50 "" [2 uses])
(note 646 645 647 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 647 646 648 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -704 [0xfffffffffffffd40])) [0 authNameFilename+0 S8 A64])
            (const_int 0 [0]))) policyticket.c:251 -1
     (nil))
(jump_insn 648 647 649 86 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 656)
            (pc))) policyticket.c:251 -1
     (nil)
 -> 656)
(note 649 648 650 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 650 649 651 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -805 [0xfffffffffffffcdb])) [0 hierarchyChar+0 S1 A8])
            (const_int 0 [0]))) policyticket.c:251 -1
     (nil))
(jump_insn 651 650 652 87 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 656)
            (pc))) policyticket.c:251 -1
     (nil)
 -> 656)
(note 652 651 653 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 653 652 654 88 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7fa8a32e9630 *.LC33>)) policyticket.c:252 -1
     (nil))
(call_insn 654 653 655 88 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:252 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 655 654 656 88 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:253 -1
     (nil)
    (nil))
(code_label 656 655 657 89 51 "" [2 uses])
(note 657 656 658 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 658 657 659 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyticket.c:255 -1
     (nil))
(jump_insn 659 658 660 89 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 663)
            (pc))) policyticket.c:255 -1
     (nil)
 -> 663)
(note 660 659 661 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 661 660 662 90 (set (reg:SI 203 [ D.6383 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -804 [0xfffffffffffffcdc])) [0 policySession+0 S4 A32])) policyticket.c:256 -1
     (nil))
(insn 662 661 663 90 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -688 [0xfffffffffffffd50])) [0 in.policySession+0 S4 A64])
        (reg:SI 203 [ D.6383 ])) policyticket.c:256 -1
     (nil))
(code_label 663 662 664 91 52 "" [1 uses])
(note 664 663 665 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 665 664 666 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyticket.c:258 -1
     (nil))
(jump_insn 666 665 667 91 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 677)
            (pc))) policyticket.c:258 -1
     (nil)
 -> 677)
(note 667 666 668 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 668 667 669 92 (set (reg:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -728 [0xfffffffffffffd28])) [0 timeoutFilename+0 S8 A64])) policyticket.c:259 -1
     (nil))
(insn 669 668 670 92 (parallel [
            (set (reg:DI 299)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:259 -1
     (nil))
(insn 670 669 671 92 (parallel [
            (set (reg:DI 300)
                (plus:DI (reg:DI 299)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:259 -1
     (nil))
(insn 671 670 672 92 (set (reg:DI 1 dx)
        (reg:DI 298)) policyticket.c:259 -1
     (nil))
(insn 672 671 673 92 (set (reg:SI 4 si)
        (const_int 128 [0x80])) policyticket.c:259 -1
     (nil))
(insn 673 672 674 92 (set (reg:DI 5 di)
        (reg:DI 300)) policyticket.c:259 -1
     (nil))
(call_insn 674 673 675 92 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_Read2B") [flags 0x41]  <function_decl 0x7fa8a3620ca8 TSS_File_Read2B>) [0 TSS_File_Read2B S1 A8])
            (const_int 0 [0]))) policyticket.c:259 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 675 674 676 92 (set (reg:SI 301)
        (reg:SI 0 ax)) policyticket.c:259 -1
     (nil))
(insn 676 675 677 92 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
        (reg:SI 301)) policyticket.c:259 -1
     (nil))
(code_label 677 676 678 93 53 "" [1 uses])
(note 678 677 679 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 679 678 680 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyticket.c:263 -1
     (nil))
(jump_insn 680 679 681 93 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 694)
            (pc))) policyticket.c:263 -1
     (nil)
 -> 694)
(note 681 680 682 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 682 681 683 94 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -720 [0xfffffffffffffd30])) [0 cpHashAFilename+0 S8 A64])
            (const_int 0 [0]))) policyticket.c:263 -1
     (nil))
(jump_insn 683 682 684 94 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 694)
            (pc))) policyticket.c:263 -1
     (nil)
 -> 694)
(note 684 683 685 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 685 684 686 95 (set (reg:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -720 [0xfffffffffffffd30])) [0 cpHashAFilename+0 S8 A64])) policyticket.c:264 -1
     (nil))
(insn 686 685 687 95 (parallel [
            (set (reg:DI 303)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:264 -1
     (nil))
(insn 687 686 688 95 (parallel [
            (set (reg:DI 304)
                (plus:DI (reg:DI 303)
                    (const_int 134 [0x86])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:264 -1
     (nil))
(insn 688 687 689 95 (set (reg:DI 1 dx)
        (reg:DI 302)) policyticket.c:264 -1
     (nil))
(insn 689 688 690 95 (set (reg:SI 4 si)
        (const_int 128 [0x80])) policyticket.c:264 -1
     (nil))
(insn 690 689 691 95 (set (reg:DI 5 di)
        (reg:DI 304)) policyticket.c:264 -1
     (nil))
(call_insn 691 690 692 95 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_Read2B") [flags 0x41]  <function_decl 0x7fa8a3620ca8 TSS_File_Read2B>) [0 TSS_File_Read2B S1 A8])
            (const_int 0 [0]))) policyticket.c:264 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 692 691 693 95 (set (reg:SI 305)
        (reg:SI 0 ax)) policyticket.c:264 -1
     (nil))
(insn 693 692 694 95 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
        (reg:SI 305)) policyticket.c:264 -1
     (nil))
(code_label 694 693 695 96 54 "" [2 uses])
(note 695 694 696 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 696 695 697 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyticket.c:268 -1
     (nil))
(jump_insn 697 696 698 96 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 711)
            (pc))) policyticket.c:268 -1
     (nil)
 -> 711)
(note 698 697 699 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 699 698 700 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -712 [0xfffffffffffffd38])) [0 policyRefFilename+0 S8 A64])
            (const_int 0 [0]))) policyticket.c:268 -1
     (nil))
(jump_insn 700 699 701 97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 711)
            (pc))) policyticket.c:268 -1
     (nil)
 -> 711)
(note 701 700 702 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 702 701 703 98 (set (reg:DI 306)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -712 [0xfffffffffffffd38])) [0 policyRefFilename+0 S8 A64])) policyticket.c:269 -1
     (nil))
(insn 703 702 704 98 (parallel [
            (set (reg:DI 307)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:269 -1
     (nil))
(insn 704 703 705 98 (parallel [
            (set (reg:DI 308)
                (plus:DI (reg:DI 307)
                    (const_int 264 [0x108])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:269 -1
     (nil))
(insn 705 704 706 98 (set (reg:DI 1 dx)
        (reg:DI 306)) policyticket.c:269 -1
     (nil))
(insn 706 705 707 98 (set (reg:SI 4 si)
        (const_int 128 [0x80])) policyticket.c:269 -1
     (nil))
(insn 707 706 708 98 (set (reg:DI 5 di)
        (reg:DI 308)) policyticket.c:269 -1
     (nil))
(call_insn 708 707 709 98 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_Read2B") [flags 0x41]  <function_decl 0x7fa8a3620ca8 TSS_File_Read2B>) [0 TSS_File_Read2B S1 A8])
            (const_int 0 [0]))) policyticket.c:269 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 709 708 710 98 (set (reg:SI 309)
        (reg:SI 0 ax)) policyticket.c:269 -1
     (nil))
(insn 710 709 711 98 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
        (reg:SI 309)) policyticket.c:269 -1
     (nil))
(code_label 711 710 712 99 55 "" [2 uses])
(note 712 711 713 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 713 712 714 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyticket.c:274 -1
     (nil))
(jump_insn 714 713 715 99 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 728)
            (pc))) policyticket.c:274 -1
     (nil)
 -> 728)
(note 715 714 716 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 716 715 717 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -704 [0xfffffffffffffd40])) [0 authNameFilename+0 S8 A64])
            (const_int 0 [0]))) policyticket.c:274 -1
     (nil))
(jump_insn 717 716 718 100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 728)
            (pc))) policyticket.c:274 -1
     (nil)
 -> 728)
(note 718 717 719 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 719 718 720 101 (set (reg:DI 310)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -704 [0xfffffffffffffd40])) [0 authNameFilename+0 S8 A64])) policyticket.c:275 -1
     (nil))
(insn 720 719 721 101 (parallel [
            (set (reg:DI 311)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:275 -1
     (nil))
(insn 721 720 722 101 (parallel [
            (set (reg:DI 312)
                (plus:DI (reg:DI 311)
                    (const_int 394 [0x18a])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:275 -1
     (nil))
(insn 722 721 723 101 (set (reg:DI 1 dx)
        (reg:DI 310)) policyticket.c:275 -1
     (nil))
(insn 723 722 724 101 (set (reg:SI 4 si)
        (const_int 132 [0x84])) policyticket.c:275 -1
     (nil))
(insn 724 723 725 101 (set (reg:DI 5 di)
        (reg:DI 312)) policyticket.c:275 -1
     (nil))
(call_insn 725 724 726 101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_Read2B") [flags 0x41]  <function_decl 0x7fa8a3620ca8 TSS_File_Read2B>) [0 TSS_File_Read2B S1 A8])
            (const_int 0 [0]))) policyticket.c:275 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 726 725 727 101 (set (reg:SI 313)
        (reg:SI 0 ax)) policyticket.c:275 -1
     (nil))
(insn 727 726 728 101 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
        (reg:SI 313)) policyticket.c:275 -1
     (nil))
(code_label 728 727 729 102 56 "" [2 uses])
(note 729 728 730 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 730 729 731 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyticket.c:280 -1
     (nil))
(jump_insn 731 730 732 102 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 777)
            (pc))) policyticket.c:280 -1
     (nil)
 -> 777)
(note 732 731 733 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 733 732 734 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -805 [0xfffffffffffffcdb])) [0 hierarchyChar+0 S1 A8])
            (const_int 0 [0]))) policyticket.c:280 -1
     (nil))
(jump_insn 734 733 735 103 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 777)
            (pc))) policyticket.c:280 -1
     (nil)
 -> 777)
(note 735 734 736 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 736 735 737 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -805 [0xfffffffffffffcdb])) [0 hierarchyChar+0 S1 A8])
            (const_int 101 [0x65]))) policyticket.c:281 -1
     (nil))
(jump_insn 737 736 738 104 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 742)
            (pc))) policyticket.c:281 -1
     (nil)
 -> 742)
(note 738 737 739 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 739 738 740 105 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -768 [0xfffffffffffffd00])) [0 primaryHandle+0 S4 A32])
        (const_int 1073741835 [0x4000000b])) policyticket.c:282 -1
     (nil))
(jump_insn 740 739 741 105 (set (pc)
        (label_ref 766)) -1
     (nil)
 -> 766)
(barrier 741 740 742)
(code_label 742 741 743 106 58 "" [1 uses])
(note 743 742 744 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 744 743 745 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -805 [0xfffffffffffffcdb])) [0 hierarchyChar+0 S1 A8])
            (const_int 111 [0x6f]))) policyticket.c:284 -1
     (nil))
(jump_insn 745 744 746 106 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 750)
            (pc))) policyticket.c:284 -1
     (nil)
 -> 750)
(note 746 745 747 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 747 746 748 107 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -768 [0xfffffffffffffd00])) [0 primaryHandle+0 S4 A32])
        (const_int 1073741825 [0x40000001])) policyticket.c:285 -1
     (nil))
(jump_insn 748 747 749 107 (set (pc)
        (label_ref 766)) -1
     (nil)
 -> 766)
(barrier 749 748 750)
(code_label 750 749 751 108 60 "" [1 uses])
(note 751 750 752 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 752 751 753 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -805 [0xfffffffffffffcdb])) [0 hierarchyChar+0 S1 A8])
            (const_int 112 [0x70]))) policyticket.c:287 -1
     (nil))
(jump_insn 753 752 754 108 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 758)
            (pc))) policyticket.c:287 -1
     (nil)
 -> 758)
(note 754 753 755 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 755 754 756 109 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -768 [0xfffffffffffffd00])) [0 primaryHandle+0 S4 A32])
        (const_int 1073741836 [0x4000000c])) policyticket.c:288 -1
     (nil))
(jump_insn 756 755 757 109 (set (pc)
        (label_ref 766)) -1
     (nil)
 -> 766)
(barrier 757 756 758)
(code_label 758 757 759 110 61 "" [1 uses])
(note 759 758 760 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 760 759 761 110 (set (reg:SI 204 [ D.6382 ])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -805 [0xfffffffffffffcdb])) [0 hierarchyChar+0 S1 A8]))) policyticket.c:291 -1
     (nil))
(insn 761 760 762 110 (set (reg:SI 4 si)
        (reg:SI 204 [ D.6382 ])) policyticket.c:291 -1
     (nil))
(insn 762 761 763 110 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fa8a32e96c0 *.LC34>)) policyticket.c:291 -1
     (nil))
(insn 763 762 764 110 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyticket.c:291 -1
     (nil))
(call_insn 764 763 765 110 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa8a36baca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policyticket.c:291 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(call_insn 765 764 766 110 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7fa8a327a0d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policyticket.c:292 -1
     (nil)
    (nil))
(code_label 766 765 767 111 59 "" [3 uses])
(note 767 766 768 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 768 767 769 111 (set (reg:SI 314)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -768 [0xfffffffffffffd00])) [0 primaryHandle+0 S4 A32])) policyticket.c:294 -1
     (nil))
(insn 769 768 770 111 (parallel [
            (set (reg:DI 315)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:294 -1
     (nil))
(insn 770 769 771 111 (parallel [
            (set (reg:DI 316)
                (plus:DI (reg:DI 315)
                    (const_int 394 [0x18a])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:294 -1
     (nil))
(insn 771 770 772 111 (set (reg:SI 1 dx)
        (const_int 132 [0x84])) policyticket.c:294 -1
     (nil))
(insn 772 771 773 111 (set (reg:SI 4 si)
        (reg:SI 314)) policyticket.c:294 -1
     (nil))
(insn 773 772 774 111 (set (reg:DI 5 di)
        (reg:DI 316)) policyticket.c:294 -1
     (nil))
(call_insn 774 773 775 111 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_TPM2B_CreateUint32") [flags 0x41]  <function_decl 0x7fa8a36205e8 TSS_TPM2B_CreateUint32>) [0 TSS_TPM2B_CreateUint32 S1 A8])
            (const_int 0 [0]))) policyticket.c:294 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 775 774 776 111 (set (reg:SI 317)
        (reg:SI 0 ax)) policyticket.c:294 -1
     (nil))
(insn 776 775 777 111 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
        (reg:SI 317)) policyticket.c:294 -1
     (nil))
(code_label 777 776 778 112 57 "" [2 uses])
(note 778 777 779 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 779 778 780 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyticket.c:296 -1
     (nil))
(jump_insn 780 779 781 112 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 792)
            (pc))) policyticket.c:296 -1
     (nil)
 -> 792)
(note 781 780 782 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 782 781 783 113 (set (reg:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -696 [0xfffffffffffffd48])) [0 ticketFilename+0 S8 A64])) policyticket.c:297 -1
     (nil))
(insn 783 782 784 113 (parallel [
            (set (reg:DI 319)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:297 -1
     (nil))
(insn 784 783 785 113 (parallel [
            (set (reg:DI 320)
                (plus:DI (reg:DI 319)
                    (const_int 528 [0x210])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:297 -1
     (nil))
(insn 785 784 786 113 (set (reg:DI 1 dx)
        (reg:DI 318)) policyticket.c:297 -1
     (nil))
(insn 786 785 787 113 (set (reg:DI 321)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("TPMT_TK_AUTH_Unmarshal") [flags 0x41]  <function_decl 0x7fa8a3247288 TPMT_TK_AUTH_Unmarshal>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) policyticket.c:297 -1
     (nil))
(insn 787 786 788 113 (set (reg:DI 4 si)
        (reg:DI 321)) policyticket.c:297 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("TPMT_TK_AUTH_Unmarshal") [flags 0x41]  <function_decl 0x7fa8a3247288 TPMT_TK_AUTH_Unmarshal>)
        (nil)))
(insn 788 787 789 113 (set (reg:DI 5 di)
        (reg:DI 320)) policyticket.c:297 -1
     (nil))
(call_insn 789 788 790 113 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_ReadStructure") [flags 0x41]  <function_decl 0x7fa8a3620af8 TSS_File_ReadStructure>) [0 TSS_File_ReadStructure S1 A8])
            (const_int 0 [0]))) policyticket.c:297 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 790 789 791 113 (set (reg:SI 322)
        (reg:SI 0 ax)) policyticket.c:297 -1
     (nil))
(insn 791 790 792 113 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
        (reg:SI 322)) policyticket.c:297 -1
     (nil))
(code_label 792 791 793 114 62 "" [1 uses])
(note 793 792 794 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 794 793 795 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyticket.c:302 -1
     (nil))
(jump_insn 795 794 796 114 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 802)
            (pc))) policyticket.c:302 -1
     (nil)
 -> 802)
(note 796 795 797 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 797 796 798 115 (parallel [
            (set (reg:DI 323)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -760 [0xfffffffffffffd08])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:303 -1
     (nil))
(insn 798 797 799 115 (set (reg:DI 5 di)
        (reg:DI 323)) policyticket.c:303 -1
     (nil))
(call_insn 799 798 800 115 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Create") [flags 0x41]  <function_decl 0x7fa8a3618ca8 TSS_Create>) [0 TSS_Create S1 A8])
            (const_int 0 [0]))) policyticket.c:303 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 800 799 801 115 (set (reg:SI 324)
        (reg:SI 0 ax)) policyticket.c:303 -1
     (nil))
(insn 801 800 802 115 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
        (reg:SI 324)) policyticket.c:303 -1
     (nil))
(code_label 802 801 803 116 63 "" [1 uses])
(note 803 802 804 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 804 803 805 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyticket.c:306 -1
     (nil))
(jump_insn 805 804 806 116 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 838)
            (pc))) policyticket.c:306 -1
     (nil)
 -> 838)
(note 806 805 807 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 807 806 808 117 (set (reg:SI 205 [ D.6383 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 sessionAttributes2+0 S4 A32])) policyticket.c:307 -1
     (nil))
(insn 808 807 809 117 (set (reg:SI 206 [ D.6383 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -784 [0xfffffffffffffcf0])) [0 sessionHandle2+0 S4 A64])) policyticket.c:307 -1
     (nil))
(insn 809 808 810 117 (set (reg:SI 207 [ D.6383 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -788 [0xfffffffffffffcec])) [0 sessionAttributes1+0 S4 A32])) policyticket.c:307 -1
     (nil))
(insn 810 809 811 117 (set (reg:SI 208 [ D.6383 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -792 [0xfffffffffffffce8])) [0 sessionHandle1+0 S4 A64])) policyticket.c:307 -1
     (nil))
(insn 811 810 812 117 (set (reg:SI 209 [ D.6383 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -796 [0xfffffffffffffce4])) [0 sessionAttributes0+0 S4 A32])) policyticket.c:307 -1
     (nil))
(insn 812 811 813 117 (set (reg:SI 210 [ D.6383 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -800 [0xfffffffffffffce0])) [0 sessionHandle0+0 S4 A64])) policyticket.c:307 -1
     (nil))
(insn 813 812 814 117 (set (reg/f:DI 211 [ D.6384 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -760 [0xfffffffffffffd08])) [0 tssContext+0 S8 A64])) policyticket.c:307 -1
     (nil))
(insn 814 813 815 117 (parallel [
            (set (reg:DI 325)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -688 [0xfffffffffffffd50])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:307 -1
     (nil))
(insn 815 814 816 117 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:307 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 816 815 817 117 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) policyticket.c:307 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 817 816 818 117 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policyticket.c:307 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 818 817 819 117 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1073741831 [0x40000007])) policyticket.c:307 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 819 818 820 117 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 205 [ D.6383 ])) policyticket.c:307 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 820 819 821 117 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policyticket.c:307 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 821 820 822 117 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 206 [ D.6383 ])) policyticket.c:307 -1
     (expr_list:REG_ARGS_SIZE (const_int 56 [0x38])
        (nil)))
(insn 822 821 823 117 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 207 [ D.6383 ])) policyticket.c:307 -1
     (expr_list:REG_ARGS_SIZE (const_int 64 [0x40])
        (nil)))
(insn 823 822 824 117 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policyticket.c:307 -1
     (expr_list:REG_ARGS_SIZE (const_int 72 [0x48])
        (nil)))
(insn 824 823 825 117 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 208 [ D.6383 ])) policyticket.c:307 -1
     (expr_list:REG_ARGS_SIZE (const_int 80 [0x50])
        (nil)))
(insn 825 824 826 117 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 209 [ D.6383 ])) policyticket.c:307 -1
     (expr_list:REG_ARGS_SIZE (const_int 88 [0x58])
        (nil)))
(insn 826 825 827 117 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) policyticket.c:307 -1
     (expr_list:REG_ARGS_SIZE (const_int 96 [0x60])
        (nil)))
(insn 827 826 828 117 (set (reg:SI 38 r9)
        (reg:SI 210 [ D.6383 ])) policyticket.c:307 -1
     (nil))
(insn 828 827 829 117 (set (reg:SI 37 r8)
        (const_int 370 [0x172])) policyticket.c:307 -1
     (nil))
(insn 829 828 830 117 (set (reg:DI 2 cx)
        (const_int 0 [0])) policyticket.c:307 -1
     (nil))
(insn 830 829 831 117 (set (reg:DI 1 dx)
        (reg:DI 325)) policyticket.c:307 -1
     (nil))
(insn 831 830 832 117 (set (reg:DI 4 si)
        (const_int 0 [0])) policyticket.c:307 -1
     (nil))
(insn 832 831 833 117 (set (reg:DI 5 di)
        (reg/f:DI 211 [ D.6384 ])) policyticket.c:307 -1
     (nil))
(insn 833 832 834 117 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyticket.c:307 -1
     (nil))
(call_insn 834 833 835 117 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7fa8a3618e58 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 96 [0x60]))) policyticket.c:307 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 835 834 836 117 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:307 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 836 835 837 117 (set (reg:SI 326)
        (reg:SI 0 ax)) policyticket.c:307 -1
     (nil))
(insn 837 836 838 117 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
        (reg:SI 326)) policyticket.c:307 -1
     (nil))
(code_label 838 837 839 118 64 "" [1 uses])
(note 839 838 840 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 840 839 841 118 (set (reg/f:DI 212 [ D.6384 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -760 [0xfffffffffffffd08])) [0 tssContext+0 S8 A64])) policyticket.c:318 -1
     (nil))
(insn 841 840 842 118 (set (reg:DI 5 di)
        (reg/f:DI 212 [ D.6384 ])) policyticket.c:318 -1
     (nil))
(call_insn 842 841 843 118 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Delete") [flags 0x41]  <function_decl 0x7fa8a3618d80 TSS_Delete>) [0 TSS_Delete S1 A8])
            (const_int 0 [0]))) policyticket.c:318 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 843 842 844 118 (set (reg:SI 327)
        (reg:SI 0 ax)) policyticket.c:318 -1
     (nil))
(insn 844 843 845 118 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -764 [0xfffffffffffffd04])) [0 rc1+0 S4 A32])
        (reg:SI 327)) policyticket.c:318 -1
     (nil))
(insn 845 844 846 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyticket.c:319 -1
     (nil))
(jump_insn 846 845 847 118 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 850)
            (pc))) policyticket.c:319 -1
     (nil)
 -> 850)
(note 847 846 848 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 848 847 849 119 (set (reg:SI 328)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -764 [0xfffffffffffffd04])) [0 rc1+0 S4 A32])) policyticket.c:320 -1
     (nil))
(insn 849 848 850 119 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
        (reg:SI 328)) policyticket.c:320 -1
     (nil))
(code_label 850 849 851 120 65 "" [1 uses])
(note 851 850 852 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 852 851 853 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policyticket.c:323 -1
     (nil))
(jump_insn 853 852 854 120 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 865)
            (pc))) policyticket.c:323 -1
     (nil)
 -> 865)
(note 854 853 855 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 855 854 856 121 (set (reg:SI 213 [ D.6382 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7fa8a347c090 verbose>) [0 verbose+0 S4 A32])) policyticket.c:324 -1
     (nil))
(insn 856 855 857 121 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 213 [ D.6382 ])
            (const_int 0 [0]))) policyticket.c:324 -1
     (nil))
(jump_insn 857 856 858 121 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 891)
            (pc))) policyticket.c:324 612 {*jcc_1}
     (nil)
 -> 891)
(note 858 857 859 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 859 858 860 122 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7fa8a32e9750 *.LC35>)) policyticket.c:324 -1
     (nil))
(call_insn 860 859 863 122 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:324 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 863 860 864 122 (set (pc)
        (label_ref 891)) -1
     (nil)
 -> 891)
(barrier 864 863 865)
(code_label 865 864 866 124 66 "" [1 uses])
(note 866 865 867 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 867 866 868 124 (set (reg:SI 329)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])) policyticket.c:330 -1
     (nil))
(insn 868 867 869 124 (set (reg:SI 4 si)
        (reg:SI 329)) policyticket.c:330 -1
     (nil))
(insn 869 868 870 124 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa8a32e97e0 *.LC36>)) policyticket.c:330 -1
     (nil))
(insn 870 869 871 124 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyticket.c:330 -1
     (nil))
(call_insn 871 870 872 124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa8a36baca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policyticket.c:330 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 872 871 873 124 (set (reg:SI 330)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])) policyticket.c:331 -1
     (nil))
(insn 873 872 874 124 (parallel [
            (set (reg:DI 331)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -736 [0xfffffffffffffd20])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:331 -1
     (nil))
(insn 874 873 875 124 (parallel [
            (set (reg:DI 332)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -744 [0xfffffffffffffd18])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:331 -1
     (nil))
(insn 875 874 876 124 (parallel [
            (set (reg:DI 333)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -752 [0xfffffffffffffd10])))
            (clobber (reg:CC 17 flags))
        ]) policyticket.c:331 -1
     (nil))
(insn 876 875 877 124 (set (reg:SI 2 cx)
        (reg:SI 330)) policyticket.c:331 -1
     (nil))
(insn 877 876 878 124 (set (reg:DI 1 dx)
        (reg:DI 331)) policyticket.c:331 -1
     (nil))
(insn 878 877 879 124 (set (reg:DI 4 si)
        (reg:DI 332)) policyticket.c:331 -1
     (nil))
(insn 879 878 880 124 (set (reg:DI 5 di)
        (reg:DI 333)) policyticket.c:331 -1
     (nil))
(call_insn 880 879 881 124 (call (mem:QI (symbol_ref:DI ("TSS_ResponseCode_toString") [flags 0x41]  <function_decl 0x7fa8a3620e58 TSS_ResponseCode_toString>) [0 TSS_ResponseCode_toString S1 A8])
        (const_int 0 [0])) policyticket.c:331 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 881 880 882 124 (set (reg/f:DI 214 [ D.6385 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -736 [0xfffffffffffffd20])) [0 num+0 S8 A64])) policyticket.c:332 -1
     (nil))
(insn 882 881 883 124 (set (reg/f:DI 215 [ D.6385 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -744 [0xfffffffffffffd18])) [0 submsg+0 S8 A64])) policyticket.c:332 -1
     (nil))
(insn 883 882 884 124 (set (reg/f:DI 216 [ D.6385 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -752 [0xfffffffffffffd10])) [0 msg+0 S8 A64])) policyticket.c:332 -1
     (nil))
(insn 884 883 885 124 (set (reg:DI 2 cx)
        (reg/f:DI 214 [ D.6385 ])) policyticket.c:332 -1
     (nil))
(insn 885 884 886 124 (set (reg:DI 1 dx)
        (reg/f:DI 215 [ D.6385 ])) policyticket.c:332 -1
     (nil))
(insn 886 885 887 124 (set (reg:DI 4 si)
        (reg/f:DI 216 [ D.6385 ])) policyticket.c:332 -1
     (nil))
(insn 887 886 888 124 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa8a32e9870 *.LC37>)) policyticket.c:332 -1
     (nil))
(insn 888 887 889 124 (set (reg:QI 0 ax)
        (const_int 0 [0])) policyticket.c:332 -1
     (nil))
(call_insn 889 888 890 124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa8a36baca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policyticket.c:332 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 890 889 891 124 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) policyticket.c:333 -1
     (nil))
(code_label 891 890 892 125 68 "" [2 uses])
(note 892 891 893 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 893 892 896 125 (set (reg:SI 217 [ D.6382 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -776 [0xfffffffffffffcf8])) [0 rc+0 S4 A32])) policyticket.c:335 -1
     (nil))
(insn 896 893 900 125 (set (reg:SI 218 [ <retval> ])
        (reg:SI 217 [ D.6382 ])) -1
     (nil))
(insn 900 896 901 125 (set (reg/i:SI 0 ax)
        (reg:SI 218 [ <retval> ])) policyticket.c:336 -1
     (nil))
(insn 901 900 902 125 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.6386+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) policyticket.c:336 -1
     (nil))
(jump_insn 902 901 908 125 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 905)
            (pc))) policyticket.c:336 -1
     (nil)
 -> 905)
(note 908 902 903 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(call_insn 903 908 904 128 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fa8a327a288 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) policyticket.c:336 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 904 903 905)
(code_label 905 904 909 129 70 "" [1 uses])
(note 909 905 906 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 906 909 0 129 (use (reg/i:SI 0 ax)) policyticket.c:336 -1
     (nil))

;; Function printUsage (printUsage, funcdef_no=3, decl_uid=6070, cgraph_uid=3, symbol_order=4)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policyticket.c:340 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fa8a36bd000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policyticket.c:340 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7fa8a3311990 *.LC38>)) policyticket.c:341 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:341 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policyticket.c:342 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fa8a36bd000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policyticket.c:342 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7fa8a3311a20 *.LC39>)) policyticket.c:343 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:343 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policyticket.c:344 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fa8a36bd000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policyticket.c:344 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC40") [flags 0x2]  <var_decl 0x7fa8a3311ab0 *.LC40>)) policyticket.c:345 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:345 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x7fa8a3311b40 *.LC41>)) policyticket.c:346 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:346 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC42") [flags 0x2]  <var_decl 0x7fa8a3311bd0 *.LC42>)) policyticket.c:347 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:347 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC43") [flags 0x2]  <var_decl 0x7fa8a3311c60 *.LC43>)) policyticket.c:348 -1
     (nil))
(call_insn 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:348 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC44") [flags 0x2]  <var_decl 0x7fa8a3311cf0 *.LC44>)) policyticket.c:349 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:349 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC45") [flags 0x2]  <var_decl 0x7fa8a3311d80 *.LC45>)) policyticket.c:350 -1
     (nil))
(call_insn 26 25 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:350 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC46") [flags 0x2]  <var_decl 0x7fa8a3311e10 *.LC46>)) policyticket.c:351 -1
     (nil))
(call_insn 28 27 29 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:351 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC47") [flags 0x2]  <var_decl 0x7fa8a3311ea0 *.LC47>)) policyticket.c:352 -1
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fa8a36bd360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policyticket.c:352 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 31 30 32 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) policyticket.c:353 -1
     (nil))
(call_insn 32 31 33 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fa8a36d0000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) policyticket.c:353 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 33 32 0)
