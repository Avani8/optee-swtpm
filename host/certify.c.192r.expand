
;; Function main (main, funcdef_no=2, decl_uid=7855, cgraph_uid=2, symbol_order=3)

Partition 13: size 2760 align 16
	out
Partition 16: size 2496 align 16
	tpmsAttest
Partition 12: size 148 align 16
	in
Partition 7: size 8 align 8
	qualifyingDataFilename_28
Partition 6: size 8 align 8
	attestInfoFilename_25
Partition 5: size 8 align 8
	signatureFilename_22
Partition 4: size 8 align 8
	objectPassword_19
Partition 3: size 8 align 8
	keyPassword_16
Partition 27: size 8 align 8
	num	tmpBuffer
Partition 26: size 8 align 8
	submsg	tmpSize
Partition 25: size 8 align 8
	msg
Partition 11: size 8 align 8
	tssContext
Partition 10: size 4 align 4
	match_367
Partition 9: size 4 align 4
	rc1_353
Partition 8: size 4 align 4
	useRsa_31
Partition 1: size 4 align 4
	i_10
Partition 0: size 4 align 4
	rc_1
Partition 22: size 4 align 4
	sessionAttributes2
Partition 21: size 4 align 4
	sessionHandle2
Partition 20: size 4 align 4
	sessionAttributes1
Partition 19: size 4 align 4
	sessionHandle1
Partition 18: size 4 align 4
	sessionAttributes0
Partition 17: size 4 align 4
	sessionHandle0
Partition 15: size 4 align 4
	signHandle
Partition 14: size 4 align 4
	objectHandle
Partition 2: size 2 align 2
	halg_12

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; Generating RTL for gimple basic block 110

;; Generating RTL for gimple basic block 111

;; Generating RTL for gimple basic block 112

;; Generating RTL for gimple basic block 113

;; Generating RTL for gimple basic block 114

;; Generating RTL for gimple basic block 115

;; Generating RTL for gimple basic block 116

;; Generating RTL for gimple basic block 117

;; Generating RTL for gimple basic block 118

;; Generating RTL for gimple basic block 119

;; Generating RTL for gimple basic block 120

;; Generating RTL for gimple basic block 121

;; Generating RTL for gimple basic block 122

;; Generating RTL for gimple basic block 123

;; Generating RTL for gimple basic block 124

;; Generating RTL for gimple basic block 125

;; Generating RTL for gimple basic block 126

;; Generating RTL for gimple basic block 127

;; Generating RTL for gimple basic block 128

;; Generating RTL for gimple basic block 129

;; Generating RTL for gimple basic block 130

;; Generating RTL for gimple basic block 131

;; Generating RTL for gimple basic block 132

;; Generating RTL for gimple basic block 133

;; Generating RTL for gimple basic block 134

;; Generating RTL for gimple basic block 135

;; Generating RTL for gimple basic block 136

;; Generating RTL for gimple basic block 137

;; Generating RTL for gimple basic block 138


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 69 from 8 to 96.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Redirecting jump 107 from 13 to 96.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Redirecting jump 150 from 18 to 96.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Redirecting jump 188 from 23 to 96.
Merging block 23 into block 22...
Merged blocks 22 and 23.
Merged 22 and 23 without moving.
Redirecting jump 233 from 33 to 96.
Redirecting jump 251 from 33 to 96.
Redirecting jump 269 from 33 to 96.
Merging block 33 into block 32...
Merged blocks 32 and 33.
Merged 32 and 33 without moving.
Redirecting jump 278 from 35 to 96.
Merging block 35 into block 34...
Merged blocks 34 and 35.
Merged 34 and 35 without moving.
Redirecting jump 323 from 43 to 96.
Redirecting jump 341 from 43 to 96.
Merging block 43 into block 42...
Merged blocks 42 and 43.
Merged 42 and 43 without moving.
Redirecting jump 350 from 45 to 96.
Merging block 45 into block 44...
Merged blocks 44 and 45.
Merged 44 and 45 without moving.
Redirecting jump 388 from 50 to 96.
Merging block 50 into block 49...
Merged blocks 49 and 50.
Merged 49 and 50 without moving.
Redirecting jump 426 from 55 to 96.
Merging block 55 into block 54...
Merged blocks 54 and 55.
Merged 54 and 55 without moving.
Redirecting jump 464 from 60 to 96.
Merging block 60 into block 59...
Merged blocks 59 and 60.
Merged 59 and 60 without moving.
Edge 66->68 redirected to 96
Merging block 68 into block 67...
Merged blocks 67 and 68.
Merged 67 and 68 without moving.
Redirecting jump 542 from 70 to 96.
Merging block 70 into block 69...
Merged blocks 69 and 70.
Merged 69 and 70 without moving.
Edge 76->78 redirected to 96
Merging block 78 into block 77...
Merged blocks 77 and 78.
Merged 77 and 78 without moving.
Redirecting jump 620 from 80 to 96.
Merging block 80 into block 79...
Merged blocks 79 and 80.
Merged 79 and 80 without moving.
Edge 86->88 redirected to 96
Merging block 88 into block 87...
Merged blocks 87 and 88.
Merged 87 and 88 without moving.
Redirecting jump 698 from 90 to 96.
Merging block 90 into block 89...
Merged blocks 89 and 90.
Merged 89 and 90 without moving.
Edge 118->120 redirected to 121
Merging block 120 into block 119...
Merged blocks 119 and 120.
Merged 119 and 120 without moving.
Edge 134->136 redirected to 138
Merging block 136 into block 135...
Merged blocks 135 and 136.
Merged 135 and 136 without moving.
Merging block 139 into block 138...
Merged blocks 138 and 139.
Merged 138 and 139 without moving.
Removing jump 1042.
Merging block 140 into block 138...
Merged blocks 138 and 140.
Merged 138 and 140 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5556 [0xffffffffffffea4c])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) certify.c:61 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) certify.c:61 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.8241+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) certify.c:61 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
        (const_int 0 [0])) certify.c:62 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5496 [0xffffffffffffea88])) [0 tssContext+0 S8 A64])
        (const_int 0 [0])) certify.c:64 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5548 [0xffffffffffffea54])) [0 objectHandle+0 S4 A32])
        (const_int 0 [0])) certify.c:67 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5544 [0xffffffffffffea58])) [0 signHandle+0 S4 A64])
        (const_int 0 [0])) certify.c:68 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5550 [0xffffffffffffea52])) [0 halg+0 S2 A16])
        (const_int 11 [0xb])) certify.c:69 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5464 [0xffffffffffffeaa8])) [0 keyPassword+0 S8 A64])
        (const_int 0 [0])) certify.c:70 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5456 [0xffffffffffffeab0])) [0 objectPassword+0 S8 A64])
        (const_int 0 [0])) certify.c:71 -1
     (nil))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5448 [0xffffffffffffeab8])) [0 signatureFilename+0 S8 A64])
        (const_int 0 [0])) certify.c:72 -1
     (nil))
(insn 16 15 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5440 [0xffffffffffffeac0])) [0 attestInfoFilename+0 S8 A64])
        (const_int 0 [0])) certify.c:73 -1
     (nil))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5432 [0xffffffffffffeac8])) [0 qualifyingDataFilename+0 S8 A64])
        (const_int 0 [0])) certify.c:74 -1
     (nil))
(insn 18 17 19 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5508 [0xffffffffffffea7c])) [0 useRsa+0 S4 A32])
        (const_int 1 [0x1])) certify.c:75 -1
     (nil))
(insn 19 18 20 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5540 [0xffffffffffffea5c])) [0 sessionHandle0+0 S4 A32])
        (const_int 1073741833 [0x40000009])) certify.c:77 -1
     (nil))
(insn 20 19 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5536 [0xffffffffffffea60])) [0 sessionAttributes0+0 S4 A64])
        (const_int 0 [0])) certify.c:78 -1
     (nil))
(insn 21 20 22 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5532 [0xffffffffffffea64])) [0 sessionHandle1+0 S4 A32])
        (const_int 1073741833 [0x40000009])) certify.c:79 -1
     (nil))
(insn 22 21 23 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5528 [0xffffffffffffea68])) [0 sessionAttributes1+0 S4 A64])
        (const_int 0 [0])) certify.c:80 -1
     (nil))
(insn 23 22 24 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5524 [0xffffffffffffea6c])) [0 sessionHandle2+0 S4 A32])
        (const_int 1073741831 [0x40000007])) certify.c:81 -1
     (nil))
(insn 24 23 25 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 sessionAttributes2+0 S4 A64])
        (const_int 0 [0])) certify.c:82 -1
     (nil))
(insn 25 24 26 2 (set (reg/f:DI 87 [ D.8231 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f8cd8f925a0 stdout>) [0 stdout+0 S8 A64])) certify.c:84 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) certify.c:84 -1
     (nil))
(insn 27 26 28 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) certify.c:84 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 4 si)
        (const_int 0 [0])) certify.c:84 -1
     (nil))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.8231 ])) certify.c:84 -1
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("setvbuf") [flags 0x41]  <function_decl 0x7f8cd8fd21b0 setvbuf>) [0 setvbuf S1 A8])
            (const_int 0 [0]))) certify.c:84 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 31 30 32 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f8cd8bc7120 *.LC0>)) certify.c:85 -1
     (nil))
(insn 32 31 33 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) certify.c:85 -1
     (nil))
(insn 33 32 34 2 (set (reg:DI 5 di)
        (const_int 0 [0])) certify.c:85 -1
     (nil))
(call_insn 34 33 35 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7f8cd8e46000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) certify.c:85 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 35 34 36 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) certify.c:88 -1
     (nil))
(jump_insn 36 35 37 2 (set (pc)
        (label_ref 765)) certify.c:88 -1
     (nil)
 -> 765)
(barrier 37 36 771)
(code_label 771 37 38 4 59 "" [1 uses])
(note 38 771 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 4 (set (reg:SI 262)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:89 -1
     (nil))
(insn 40 39 41 4 (set (reg:DI 88 [ D.8232 ])
        (sign_extend:DI (reg:SI 262))) certify.c:89 -1
     (nil))
(insn 41 40 42 4 (parallel [
            (set (reg:DI 89 [ D.8232 ])
                (ashift:DI (reg:DI 88 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:89 -1
     (nil))
(insn 42 41 43 4 (set (reg/f:DI 263)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:89 -1
     (nil))
(insn 43 42 44 4 (parallel [
            (set (reg/f:DI 90 [ D.8233 ])
                (plus:DI (reg:DI 89 [ D.8232 ])
                    (reg/f:DI 263)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:89 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 89 [ D.8232 ]))
        (nil)))
(insn 44 43 45 4 (set (reg/f:DI 91 [ D.8234 ])
        (mem/f:DI (reg/f:DI 90 [ D.8233 ]) [0 *_97+0 S8 A64])) certify.c:89 -1
     (nil))
(insn 45 44 46 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f8cd8bc71b0 *.LC1>)) certify.c:89 -1
     (nil))
(insn 46 45 47 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.8234 ])) certify.c:89 -1
     (nil))
(call_insn/i 47 46 48 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:89 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 48 47 49 4 (set (reg:SI 92 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:89 -1
     (nil))
(insn 49 48 50 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.8235 ])
            (const_int 0 [0]))) certify.c:89 -1
     (nil))
(jump_insn 50 49 51 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) certify.c:89 -1
     (nil)
 -> 80)
(note 51 50 52 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:90 -1
     (nil))
(insn 53 52 54 5 (set (reg:SI 264)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:91 -1
     (nil))
(insn 54 53 55 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 264)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5556 [0xffffffffffffea4c])) [0 argc+0 S4 A32]))) certify.c:91 -1
     (nil))
(jump_insn 55 54 56 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) certify.c:91 -1
     (nil)
 -> 71)
(note 56 55 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 6 (set (reg:SI 265)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:92 -1
     (nil))
(insn 58 57 59 6 (set (reg:DI 93 [ D.8232 ])
        (sign_extend:DI (reg:SI 265))) certify.c:92 -1
     (nil))
(insn 59 58 60 6 (parallel [
            (set (reg:DI 94 [ D.8232 ])
                (ashift:DI (reg:DI 93 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:92 -1
     (nil))
(insn 60 59 61 6 (set (reg/f:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:92 -1
     (nil))
(insn 61 60 62 6 (parallel [
            (set (reg/f:DI 95 [ D.8233 ])
                (plus:DI (reg:DI 94 [ D.8232 ])
                    (reg/f:DI 266)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:92 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 94 [ D.8232 ]))
        (nil)))
(insn 62 61 63 6 (set (reg/f:DI 96 [ D.8234 ])
        (mem/f:DI (reg/f:DI 95 [ D.8233 ]) [0 *_103+0 S8 A64])) certify.c:92 -1
     (nil))
(insn 63 62 64 6 (parallel [
            (set (reg:DI 267)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5548 [0xffffffffffffea54])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:92 -1
     (nil))
(insn 64 63 65 6 (set (reg:DI 1 dx)
        (reg:DI 267)) certify.c:92 -1
     (nil))
(insn 65 64 66 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8cd8bc7240 *.LC2>)) certify.c:92 -1
     (nil))
(insn 66 65 67 6 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.8234 ])) certify.c:92 -1
     (nil))
(insn 67 66 68 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) certify.c:92 -1
     (nil))
(call_insn 68 67 69 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f8cd8ee3ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) certify.c:92 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 69 68 70 6 (set (pc)
        (label_ref:DI 762)) 654 {jump}
     (nil)
 -> 762)
(barrier 70 69 71)
(code_label 71 70 72 7 4 "" [1 uses])
(note 72 71 73 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f8cd8bc72d0 *.LC3>)) certify.c:95 -1
     (nil))
(call_insn 74 73 75 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:95 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 75 74 78 7 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:96 -1
     (nil)
    (nil))
(jump_insn 78 75 79 7 (set (pc)
        (label_ref 762)) -1
     (nil)
 -> 762)
(barrier 79 78 80)
(code_label 80 79 81 9 3 "" [1 uses])
(note 81 80 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 9 (set (reg:SI 268)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:99 -1
     (nil))
(insn 83 82 84 9 (set (reg:DI 97 [ D.8232 ])
        (sign_extend:DI (reg:SI 268))) certify.c:99 -1
     (nil))
(insn 84 83 85 9 (parallel [
            (set (reg:DI 98 [ D.8232 ])
                (ashift:DI (reg:DI 97 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:99 -1
     (nil))
(insn 85 84 86 9 (set (reg/f:DI 269)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:99 -1
     (nil))
(insn 86 85 87 9 (parallel [
            (set (reg/f:DI 99 [ D.8233 ])
                (plus:DI (reg:DI 98 [ D.8232 ])
                    (reg/f:DI 269)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:99 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 98 [ D.8232 ]))
        (nil)))
(insn 87 86 88 9 (set (reg/f:DI 100 [ D.8234 ])
        (mem/f:DI (reg/f:DI 99 [ D.8233 ]) [0 *_110+0 S8 A64])) certify.c:99 -1
     (nil))
(insn 88 87 89 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f8cd8bc7360 *.LC4>)) certify.c:99 -1
     (nil))
(insn 89 88 90 9 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.8234 ])) certify.c:99 -1
     (nil))
(call_insn/i 90 89 91 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:99 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 91 90 92 9 (set (reg:SI 101 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:99 -1
     (nil))
(insn 92 91 93 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.8235 ])
            (const_int 0 [0]))) certify.c:99 -1
     (nil))
(jump_insn 93 92 94 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) certify.c:99 -1
     (nil)
 -> 118)
(note 94 93 95 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:100 -1
     (nil))
(insn 96 95 97 10 (set (reg:SI 270)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:101 -1
     (nil))
(insn 97 96 98 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 270)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5556 [0xffffffffffffea4c])) [0 argc+0 S4 A32]))) certify.c:101 -1
     (nil))
(jump_insn 98 97 99 10 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) certify.c:101 -1
     (nil)
 -> 109)
(note 99 98 100 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 11 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:102 -1
     (nil))
(insn 101 100 102 11 (set (reg:DI 102 [ D.8232 ])
        (sign_extend:DI (reg:SI 271))) certify.c:102 -1
     (nil))
(insn 102 101 103 11 (parallel [
            (set (reg:DI 103 [ D.8232 ])
                (ashift:DI (reg:DI 102 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:102 -1
     (nil))
(insn 103 102 104 11 (set (reg/f:DI 272)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:102 -1
     (nil))
(insn 104 103 105 11 (parallel [
            (set (reg/f:DI 104 [ D.8233 ])
                (plus:DI (reg:DI 103 [ D.8232 ])
                    (reg/f:DI 272)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:102 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 103 [ D.8232 ]))
        (nil)))
(insn 105 104 106 11 (set (reg/f:DI 273)
        (mem/f:DI (reg/f:DI 104 [ D.8233 ]) [0 *_116+0 S8 A64])) certify.c:102 -1
     (nil))
(insn 106 105 107 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5456 [0xffffffffffffeab0])) [0 objectPassword+0 S8 A64])
        (reg/f:DI 273)) certify.c:102 -1
     (nil))
(jump_insn 107 106 108 11 (set (pc)
        (label_ref:DI 762)) 654 {jump}
     (nil)
 -> 762)
(barrier 108 107 109)
(code_label 109 108 110 12 8 "" [1 uses])
(note 110 109 111 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8cd8bc73f0 *.LC5>)) certify.c:105 -1
     (nil))
(call_insn 112 111 113 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:105 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 113 112 116 12 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:106 -1
     (nil)
    (nil))
(jump_insn 116 113 117 12 (set (pc)
        (label_ref 762)) -1
     (nil)
 -> 762)
(barrier 117 116 118)
(code_label 118 117 119 14 7 "" [1 uses])
(note 119 118 120 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 14 (set (reg:SI 274)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:109 -1
     (nil))
(insn 121 120 122 14 (set (reg:DI 105 [ D.8232 ])
        (sign_extend:DI (reg:SI 274))) certify.c:109 -1
     (nil))
(insn 122 121 123 14 (parallel [
            (set (reg:DI 106 [ D.8232 ])
                (ashift:DI (reg:DI 105 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:109 -1
     (nil))
(insn 123 122 124 14 (set (reg/f:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:109 -1
     (nil))
(insn 124 123 125 14 (parallel [
            (set (reg/f:DI 107 [ D.8233 ])
                (plus:DI (reg:DI 106 [ D.8232 ])
                    (reg/f:DI 275)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:109 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 106 [ D.8232 ]))
        (nil)))
(insn 125 124 126 14 (set (reg/f:DI 108 [ D.8234 ])
        (mem/f:DI (reg/f:DI 107 [ D.8233 ]) [0 *_122+0 S8 A64])) certify.c:109 -1
     (nil))
(insn 126 125 127 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8cd8bc7480 *.LC6>)) certify.c:109 -1
     (nil))
(insn 127 126 128 14 (set (reg:DI 5 di)
        (reg/f:DI 108 [ D.8234 ])) certify.c:109 -1
     (nil))
(call_insn/i 128 127 129 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:109 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 129 128 130 14 (set (reg:SI 109 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:109 -1
     (nil))
(insn 130 129 131 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.8235 ])
            (const_int 0 [0]))) certify.c:109 -1
     (nil))
(jump_insn 131 130 132 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 161)
            (pc))) certify.c:109 -1
     (nil)
 -> 161)
(note 132 131 133 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:110 -1
     (nil))
(insn 134 133 135 15 (set (reg:SI 276)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:111 -1
     (nil))
(insn 135 134 136 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 276)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5556 [0xffffffffffffea4c])) [0 argc+0 S4 A32]))) certify.c:111 -1
     (nil))
(jump_insn 136 135 137 15 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 152)
            (pc))) certify.c:111 -1
     (nil)
 -> 152)
(note 137 136 138 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 16 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:112 -1
     (nil))
(insn 139 138 140 16 (set (reg:DI 110 [ D.8232 ])
        (sign_extend:DI (reg:SI 277))) certify.c:112 -1
     (nil))
(insn 140 139 141 16 (parallel [
            (set (reg:DI 111 [ D.8232 ])
                (ashift:DI (reg:DI 110 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:112 -1
     (nil))
(insn 141 140 142 16 (set (reg/f:DI 278)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:112 -1
     (nil))
(insn 142 141 143 16 (parallel [
            (set (reg/f:DI 112 [ D.8233 ])
                (plus:DI (reg:DI 111 [ D.8232 ])
                    (reg/f:DI 278)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:112 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 111 [ D.8232 ]))
        (nil)))
(insn 143 142 144 16 (set (reg/f:DI 113 [ D.8234 ])
        (mem/f:DI (reg/f:DI 112 [ D.8233 ]) [0 *_128+0 S8 A64])) certify.c:112 -1
     (nil))
(insn 144 143 145 16 (parallel [
            (set (reg:DI 279)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5544 [0xffffffffffffea58])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:112 -1
     (nil))
(insn 145 144 146 16 (set (reg:DI 1 dx)
        (reg:DI 279)) certify.c:112 -1
     (nil))
(insn 146 145 147 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8cd8bc7240 *.LC2>)) certify.c:112 -1
     (nil))
(insn 147 146 148 16 (set (reg:DI 5 di)
        (reg/f:DI 113 [ D.8234 ])) certify.c:112 -1
     (nil))
(insn 148 147 149 16 (set (reg:QI 0 ax)
        (const_int 0 [0])) certify.c:112 -1
     (nil))
(call_insn 149 148 150 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f8cd8ee3ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) certify.c:112 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 150 149 151 16 (set (pc)
        (label_ref:DI 762)) 654 {jump}
     (nil)
 -> 762)
(barrier 151 150 152)
(code_label 152 151 153 17 11 "" [1 uses])
(note 153 152 154 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f8cd8bc7510 *.LC7>)) certify.c:115 -1
     (nil))
(call_insn 155 154 156 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:115 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 156 155 159 17 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:116 -1
     (nil)
    (nil))
(jump_insn 159 156 160 17 (set (pc)
        (label_ref 762)) -1
     (nil)
 -> 762)
(barrier 160 159 161)
(code_label 161 160 162 19 10 "" [1 uses])
(note 162 161 163 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 19 (set (reg:SI 280)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:119 -1
     (nil))
(insn 164 163 165 19 (set (reg:DI 114 [ D.8232 ])
        (sign_extend:DI (reg:SI 280))) certify.c:119 -1
     (nil))
(insn 165 164 166 19 (parallel [
            (set (reg:DI 115 [ D.8232 ])
                (ashift:DI (reg:DI 114 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:119 -1
     (nil))
(insn 166 165 167 19 (set (reg/f:DI 281)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:119 -1
     (nil))
(insn 167 166 168 19 (parallel [
            (set (reg/f:DI 116 [ D.8233 ])
                (plus:DI (reg:DI 115 [ D.8232 ])
                    (reg/f:DI 281)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:119 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 115 [ D.8232 ]))
        (nil)))
(insn 168 167 169 19 (set (reg/f:DI 117 [ D.8234 ])
        (mem/f:DI (reg/f:DI 116 [ D.8233 ]) [0 *_135+0 S8 A64])) certify.c:119 -1
     (nil))
(insn 169 168 170 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f8cd8bc75a0 *.LC8>)) certify.c:119 -1
     (nil))
(insn 170 169 171 19 (set (reg:DI 5 di)
        (reg/f:DI 117 [ D.8234 ])) certify.c:119 -1
     (nil))
(call_insn/i 171 170 172 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:119 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 172 171 173 19 (set (reg:SI 118 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:119 -1
     (nil))
(insn 173 172 174 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ D.8235 ])
            (const_int 0 [0]))) certify.c:119 -1
     (nil))
(jump_insn 174 173 175 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 199)
            (pc))) certify.c:119 -1
     (nil)
 -> 199)
(note 175 174 176 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:120 -1
     (nil))
(insn 177 176 178 20 (set (reg:SI 282)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:121 -1
     (nil))
(insn 178 177 179 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 282)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5556 [0xffffffffffffea4c])) [0 argc+0 S4 A32]))) certify.c:121 -1
     (nil))
(jump_insn 179 178 180 20 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) certify.c:121 -1
     (nil)
 -> 190)
(note 180 179 181 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 21 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:122 -1
     (nil))
(insn 182 181 183 21 (set (reg:DI 119 [ D.8232 ])
        (sign_extend:DI (reg:SI 283))) certify.c:122 -1
     (nil))
(insn 183 182 184 21 (parallel [
            (set (reg:DI 120 [ D.8232 ])
                (ashift:DI (reg:DI 119 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:122 -1
     (nil))
(insn 184 183 185 21 (set (reg/f:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:122 -1
     (nil))
(insn 185 184 186 21 (parallel [
            (set (reg/f:DI 121 [ D.8233 ])
                (plus:DI (reg:DI 120 [ D.8232 ])
                    (reg/f:DI 284)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:122 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 120 [ D.8232 ]))
        (nil)))
(insn 186 185 187 21 (set (reg/f:DI 285)
        (mem/f:DI (reg/f:DI 121 [ D.8233 ]) [0 *_141+0 S8 A64])) certify.c:122 -1
     (nil))
(insn 187 186 188 21 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5464 [0xffffffffffffeaa8])) [0 keyPassword+0 S8 A64])
        (reg/f:DI 285)) certify.c:122 -1
     (nil))
(jump_insn 188 187 189 21 (set (pc)
        (label_ref:DI 762)) 654 {jump}
     (nil)
 -> 762)
(barrier 189 188 190)
(code_label 190 189 191 22 14 "" [1 uses])
(note 191 190 192 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f8cd8bc7630 *.LC9>)) certify.c:125 -1
     (nil))
(call_insn 193 192 194 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:125 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 194 193 197 22 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:126 -1
     (nil)
    (nil))
(jump_insn 197 194 198 22 (set (pc)
        (label_ref 762)) -1
     (nil)
 -> 762)
(barrier 198 197 199)
(code_label 199 198 200 24 13 "" [1 uses])
(note 200 199 201 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 24 (set (reg:SI 286)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:129 -1
     (nil))
(insn 202 201 203 24 (set (reg:DI 122 [ D.8232 ])
        (sign_extend:DI (reg:SI 286))) certify.c:129 -1
     (nil))
(insn 203 202 204 24 (parallel [
            (set (reg:DI 123 [ D.8232 ])
                (ashift:DI (reg:DI 122 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:129 -1
     (nil))
(insn 204 203 205 24 (set (reg/f:DI 287)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:129 -1
     (nil))
(insn 205 204 206 24 (parallel [
            (set (reg/f:DI 124 [ D.8233 ])
                (plus:DI (reg:DI 123 [ D.8232 ])
                    (reg/f:DI 287)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:129 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 123 [ D.8232 ]))
        (nil)))
(insn 206 205 207 24 (set (reg/f:DI 125 [ D.8234 ])
        (mem/f:DI (reg/f:DI 124 [ D.8233 ]) [0 *_147+0 S8 A64])) certify.c:129 -1
     (nil))
(insn 207 206 208 24 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f8cd8bc76c0 *.LC10>)) certify.c:129 -1
     (nil))
(insn 208 207 209 24 (set (reg:DI 5 di)
        (reg/f:DI 125 [ D.8234 ])) certify.c:129 -1
     (nil))
(call_insn/i 209 208 210 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:129 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 210 209 211 24 (set (reg:SI 126 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:129 -1
     (nil))
(insn 211 210 212 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 126 [ D.8235 ])
            (const_int 0 [0]))) certify.c:129 -1
     (nil))
(jump_insn 212 211 213 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 289)
            (pc))) certify.c:129 -1
     (nil)
 -> 289)
(note 213 212 214 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 25 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:130 -1
     (nil))
(insn 215 214 216 25 (set (reg:SI 288)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:131 -1
     (nil))
(insn 216 215 217 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 288)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5556 [0xffffffffffffea4c])) [0 argc+0 S4 A32]))) certify.c:131 -1
     (nil))
(jump_insn 217 216 218 25 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 280)
            (pc))) certify.c:131 -1
     (nil)
 -> 280)
(note 218 217 219 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 26 (set (reg:SI 289)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:132 -1
     (nil))
(insn 220 219 221 26 (set (reg:DI 127 [ D.8232 ])
        (sign_extend:DI (reg:SI 289))) certify.c:132 -1
     (nil))
(insn 221 220 222 26 (parallel [
            (set (reg:DI 128 [ D.8232 ])
                (ashift:DI (reg:DI 127 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:132 -1
     (nil))
(insn 222 221 223 26 (set (reg/f:DI 290)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:132 -1
     (nil))
(insn 223 222 224 26 (parallel [
            (set (reg/f:DI 129 [ D.8233 ])
                (plus:DI (reg:DI 128 [ D.8232 ])
                    (reg/f:DI 290)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:132 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 128 [ D.8232 ]))
        (nil)))
(insn 224 223 225 26 (set (reg/f:DI 130 [ D.8234 ])
        (mem/f:DI (reg/f:DI 129 [ D.8233 ]) [0 *_153+0 S8 A64])) certify.c:132 -1
     (nil))
(insn 225 224 226 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f8cd8bc7750 *.LC11>)) certify.c:132 -1
     (nil))
(insn 226 225 227 26 (set (reg:DI 5 di)
        (reg/f:DI 130 [ D.8234 ])) certify.c:132 -1
     (nil))
(call_insn/i 227 226 228 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:132 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 228 227 229 26 (set (reg:SI 131 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:132 -1
     (nil))
(insn 229 228 230 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 131 [ D.8235 ])
            (const_int 0 [0]))) certify.c:132 -1
     (nil))
(jump_insn 230 229 231 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 235)
            (pc))) certify.c:132 -1
     (nil)
 -> 235)
(note 231 230 232 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 27 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5550 [0xffffffffffffea52])) [0 halg+0 S2 A16])
        (const_int 4 [0x4])) certify.c:133 -1
     (nil))
(jump_insn 233 232 234 27 (set (pc)
        (label_ref:DI 762)) 654 {jump}
     (nil)
 -> 762)
(barrier 234 233 235)
(code_label 235 234 236 28 18 "" [1 uses])
(note 236 235 237 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 238 28 (set (reg:SI 291)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:135 -1
     (nil))
(insn 238 237 239 28 (set (reg:DI 132 [ D.8232 ])
        (sign_extend:DI (reg:SI 291))) certify.c:135 -1
     (nil))
(insn 239 238 240 28 (parallel [
            (set (reg:DI 133 [ D.8232 ])
                (ashift:DI (reg:DI 132 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:135 -1
     (nil))
(insn 240 239 241 28 (set (reg/f:DI 292)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:135 -1
     (nil))
(insn 241 240 242 28 (parallel [
            (set (reg/f:DI 134 [ D.8233 ])
                (plus:DI (reg:DI 133 [ D.8232 ])
                    (reg/f:DI 292)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:135 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 133 [ D.8232 ]))
        (nil)))
(insn 242 241 243 28 (set (reg/f:DI 135 [ D.8234 ])
        (mem/f:DI (reg/f:DI 134 [ D.8233 ]) [0 *_159+0 S8 A64])) certify.c:135 -1
     (nil))
(insn 243 242 244 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f8cd8bc77e0 *.LC12>)) certify.c:135 -1
     (nil))
(insn 244 243 245 28 (set (reg:DI 5 di)
        (reg/f:DI 135 [ D.8234 ])) certify.c:135 -1
     (nil))
(call_insn/i 245 244 246 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:135 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 246 245 247 28 (set (reg:SI 136 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:135 -1
     (nil))
(insn 247 246 248 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 136 [ D.8235 ])
            (const_int 0 [0]))) certify.c:135 -1
     (nil))
(jump_insn 248 247 249 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 253)
            (pc))) certify.c:135 -1
     (nil)
 -> 253)
(note 249 248 250 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 29 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5550 [0xffffffffffffea52])) [0 halg+0 S2 A16])
        (const_int 11 [0xb])) certify.c:136 -1
     (nil))
(jump_insn 251 250 252 29 (set (pc)
        (label_ref:DI 762)) 654 {jump}
     (nil)
 -> 762)
(barrier 252 251 253)
(code_label 253 252 254 30 20 "" [1 uses])
(note 254 253 255 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 30 (set (reg:SI 293)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:138 -1
     (nil))
(insn 256 255 257 30 (set (reg:DI 137 [ D.8232 ])
        (sign_extend:DI (reg:SI 293))) certify.c:138 -1
     (nil))
(insn 257 256 258 30 (parallel [
            (set (reg:DI 138 [ D.8232 ])
                (ashift:DI (reg:DI 137 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:138 -1
     (nil))
(insn 258 257 259 30 (set (reg/f:DI 294)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:138 -1
     (nil))
(insn 259 258 260 30 (parallel [
            (set (reg/f:DI 139 [ D.8233 ])
                (plus:DI (reg:DI 138 [ D.8232 ])
                    (reg/f:DI 294)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:138 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 138 [ D.8232 ]))
        (nil)))
(insn 260 259 261 30 (set (reg/f:DI 140 [ D.8234 ])
        (mem/f:DI (reg/f:DI 139 [ D.8233 ]) [0 *_165+0 S8 A64])) certify.c:138 -1
     (nil))
(insn 261 260 262 30 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f8cd8bc7870 *.LC13>)) certify.c:138 -1
     (nil))
(insn 262 261 263 30 (set (reg:DI 5 di)
        (reg/f:DI 140 [ D.8234 ])) certify.c:138 -1
     (nil))
(call_insn/i 263 262 264 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:138 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 264 263 265 30 (set (reg:SI 141 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:138 -1
     (nil))
(insn 265 264 266 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 141 [ D.8235 ])
            (const_int 0 [0]))) certify.c:138 -1
     (nil))
(jump_insn 266 265 267 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 271)
            (pc))) certify.c:138 -1
     (nil)
 -> 271)
(note 267 266 268 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 31 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5550 [0xffffffffffffea52])) [0 halg+0 S2 A16])
        (const_int 12 [0xc])) certify.c:139 -1
     (nil))
(jump_insn 269 268 270 31 (set (pc)
        (label_ref:DI 762)) 654 {jump}
     (nil)
 -> 762)
(barrier 270 269 271)
(code_label 271 270 272 32 21 "" [1 uses])
(note 272 271 273 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 32 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f8cd8bc7900 *.LC14>)) certify.c:142 -1
     (nil))
(call_insn 274 273 275 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:142 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 275 274 278 32 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:143 -1
     (nil)
    (nil))
(jump_insn 278 275 279 32 (set (pc)
        (label_ref:DI 762)) 654 {jump}
     (nil)
 -> 762)
(barrier 279 278 280)
(code_label 280 279 281 34 17 "" [1 uses])
(note 281 280 282 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 282 281 283 34 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f8cd8bc7990 *.LC15>)) certify.c:147 -1
     (nil))
(call_insn 283 282 284 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:147 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 284 283 287 34 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:148 -1
     (nil)
    (nil))
(jump_insn 287 284 288 34 (set (pc)
        (label_ref 762)) -1
     (nil)
 -> 762)
(barrier 288 287 289)
(code_label 289 288 290 36 16 "" [1 uses])
(note 290 289 291 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 36 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:151 -1
     (nil))
(insn 292 291 293 36 (set (reg:DI 142 [ D.8232 ])
        (sign_extend:DI (reg:SI 295))) certify.c:151 -1
     (nil))
(insn 293 292 294 36 (parallel [
            (set (reg:DI 143 [ D.8232 ])
                (ashift:DI (reg:DI 142 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:151 -1
     (nil))
(insn 294 293 295 36 (set (reg/f:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:151 -1
     (nil))
(insn 295 294 296 36 (parallel [
            (set (reg/f:DI 144 [ D.8233 ])
                (plus:DI (reg:DI 143 [ D.8232 ])
                    (reg/f:DI 296)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:151 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 143 [ D.8232 ]))
        (nil)))
(insn 296 295 297 36 (set (reg/f:DI 145 [ D.8234 ])
        (mem/f:DI (reg/f:DI 144 [ D.8233 ]) [0 *_175+0 S8 A64])) certify.c:151 -1
     (nil))
(insn 297 296 298 36 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f8cd8bc7a20 *.LC16>)) certify.c:151 -1
     (nil))
(insn 298 297 299 36 (set (reg:DI 5 di)
        (reg/f:DI 145 [ D.8234 ])) certify.c:151 -1
     (nil))
(call_insn/i 299 298 300 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:151 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 300 299 301 36 (set (reg:SI 146 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:151 -1
     (nil))
(insn 301 300 302 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 146 [ D.8235 ])
            (const_int 0 [0]))) certify.c:151 -1
     (nil))
(jump_insn 302 301 303 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 361)
            (pc))) certify.c:151 -1
     (nil)
 -> 361)
(note 303 302 304 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 37 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:152 -1
     (nil))
(insn 305 304 306 37 (set (reg:SI 297)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:153 -1
     (nil))
(insn 306 305 307 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 297)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5556 [0xffffffffffffea4c])) [0 argc+0 S4 A32]))) certify.c:153 -1
     (nil))
(jump_insn 307 306 308 37 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 352)
            (pc))) certify.c:153 -1
     (nil)
 -> 352)
(note 308 307 309 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 38 (set (reg:SI 298)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:154 -1
     (nil))
(insn 310 309 311 38 (set (reg:DI 147 [ D.8232 ])
        (sign_extend:DI (reg:SI 298))) certify.c:154 -1
     (nil))
(insn 311 310 312 38 (parallel [
            (set (reg:DI 148 [ D.8232 ])
                (ashift:DI (reg:DI 147 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:154 -1
     (nil))
(insn 312 311 313 38 (set (reg/f:DI 299)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:154 -1
     (nil))
(insn 313 312 314 38 (parallel [
            (set (reg/f:DI 149 [ D.8233 ])
                (plus:DI (reg:DI 148 [ D.8232 ])
                    (reg/f:DI 299)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:154 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 148 [ D.8232 ]))
        (nil)))
(insn 314 313 315 38 (set (reg/f:DI 150 [ D.8234 ])
        (mem/f:DI (reg/f:DI 149 [ D.8233 ]) [0 *_181+0 S8 A64])) certify.c:154 -1
     (nil))
(insn 315 314 316 38 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f8cd8bc7ab0 *.LC17>)) certify.c:154 -1
     (nil))
(insn 316 315 317 38 (set (reg:DI 5 di)
        (reg/f:DI 150 [ D.8234 ])) certify.c:154 -1
     (nil))
(call_insn/i 317 316 318 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:154 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 318 317 319 38 (set (reg:SI 151 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:154 -1
     (nil))
(insn 319 318 320 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 151 [ D.8235 ])
            (const_int 0 [0]))) certify.c:154 -1
     (nil))
(jump_insn 320 319 321 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 325)
            (pc))) certify.c:154 -1
     (nil)
 -> 325)
(note 321 320 322 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 39 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5508 [0xffffffffffffea7c])) [0 useRsa+0 S4 A32])
        (const_int 1 [0x1])) certify.c:155 -1
     (nil))
(jump_insn 323 322 324 39 (set (pc)
        (label_ref:DI 762)) 654 {jump}
     (nil)
 -> 762)
(barrier 324 323 325)
(code_label 325 324 326 40 25 "" [1 uses])
(note 326 325 327 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 40 (set (reg:SI 300)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:157 -1
     (nil))
(insn 328 327 329 40 (set (reg:DI 152 [ D.8232 ])
        (sign_extend:DI (reg:SI 300))) certify.c:157 -1
     (nil))
(insn 329 328 330 40 (parallel [
            (set (reg:DI 153 [ D.8232 ])
                (ashift:DI (reg:DI 152 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:157 -1
     (nil))
(insn 330 329 331 40 (set (reg/f:DI 301)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:157 -1
     (nil))
(insn 331 330 332 40 (parallel [
            (set (reg/f:DI 154 [ D.8233 ])
                (plus:DI (reg:DI 153 [ D.8232 ])
                    (reg/f:DI 301)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:157 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 153 [ D.8232 ]))
        (nil)))
(insn 332 331 333 40 (set (reg/f:DI 155 [ D.8234 ])
        (mem/f:DI (reg/f:DI 154 [ D.8233 ]) [0 *_187+0 S8 A64])) certify.c:157 -1
     (nil))
(insn 333 332 334 40 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f8cd8bc7b40 *.LC18>)) certify.c:157 -1
     (nil))
(insn 334 333 335 40 (set (reg:DI 5 di)
        (reg/f:DI 155 [ D.8234 ])) certify.c:157 -1
     (nil))
(call_insn/i 335 334 336 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:157 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 336 335 337 40 (set (reg:SI 156 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:157 -1
     (nil))
(insn 337 336 338 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 156 [ D.8235 ])
            (const_int 0 [0]))) certify.c:157 -1
     (nil))
(jump_insn 338 337 339 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 343)
            (pc))) certify.c:157 -1
     (nil)
 -> 343)
(note 339 338 340 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 340 339 341 41 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5508 [0xffffffffffffea7c])) [0 useRsa+0 S4 A32])
        (const_int 0 [0])) certify.c:158 -1
     (nil))
(jump_insn 341 340 342 41 (set (pc)
        (label_ref:DI 762)) 654 {jump}
     (nil)
 -> 762)
(barrier 342 341 343)
(code_label 343 342 344 42 27 "" [1 uses])
(note 344 343 345 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 345 344 346 42 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f8cd8bc7bd0 *.LC19>)) certify.c:161 -1
     (nil))
(call_insn 346 345 347 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:161 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 347 346 350 42 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:162 -1
     (nil)
    (nil))
(jump_insn 350 347 351 42 (set (pc)
        (label_ref:DI 762)) 654 {jump}
     (nil)
 -> 762)
(barrier 351 350 352)
(code_label 352 351 353 44 24 "" [1 uses])
(note 353 352 354 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 354 353 355 44 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f8cd8bc7c60 *.LC20>)) certify.c:166 -1
     (nil))
(call_insn 355 354 356 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:166 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 356 355 359 44 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:167 -1
     (nil)
    (nil))
(jump_insn 359 356 360 44 (set (pc)
        (label_ref 762)) -1
     (nil)
 -> 762)
(barrier 360 359 361)
(code_label 361 360 362 46 23 "" [1 uses])
(note 362 361 363 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 363 362 364 46 (set (reg:SI 302)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:170 -1
     (nil))
(insn 364 363 365 46 (set (reg:DI 157 [ D.8232 ])
        (sign_extend:DI (reg:SI 302))) certify.c:170 -1
     (nil))
(insn 365 364 366 46 (parallel [
            (set (reg:DI 158 [ D.8232 ])
                (ashift:DI (reg:DI 157 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:170 -1
     (nil))
(insn 366 365 367 46 (set (reg/f:DI 303)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:170 -1
     (nil))
(insn 367 366 368 46 (parallel [
            (set (reg/f:DI 159 [ D.8233 ])
                (plus:DI (reg:DI 158 [ D.8232 ])
                    (reg/f:DI 303)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:170 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 158 [ D.8232 ]))
        (nil)))
(insn 368 367 369 46 (set (reg/f:DI 160 [ D.8234 ])
        (mem/f:DI (reg/f:DI 159 [ D.8233 ]) [0 *_197+0 S8 A64])) certify.c:170 -1
     (nil))
(insn 369 368 370 46 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f8cd8bc7cf0 *.LC21>)) certify.c:170 -1
     (nil))
(insn 370 369 371 46 (set (reg:DI 5 di)
        (reg/f:DI 160 [ D.8234 ])) certify.c:170 -1
     (nil))
(call_insn/i 371 370 372 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:170 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 372 371 373 46 (set (reg:SI 161 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:170 -1
     (nil))
(insn 373 372 374 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 161 [ D.8235 ])
            (const_int 0 [0]))) certify.c:170 -1
     (nil))
(jump_insn 374 373 375 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 399)
            (pc))) certify.c:170 -1
     (nil)
 -> 399)
(note 375 374 376 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 376 375 377 47 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:171 -1
     (nil))
(insn 377 376 378 47 (set (reg:SI 304)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:172 -1
     (nil))
(insn 378 377 379 47 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 304)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5556 [0xffffffffffffea4c])) [0 argc+0 S4 A32]))) certify.c:172 -1
     (nil))
(jump_insn 379 378 380 47 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 390)
            (pc))) certify.c:172 -1
     (nil)
 -> 390)
(note 380 379 381 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 381 380 382 48 (set (reg:SI 305)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:173 -1
     (nil))
(insn 382 381 383 48 (set (reg:DI 162 [ D.8232 ])
        (sign_extend:DI (reg:SI 305))) certify.c:173 -1
     (nil))
(insn 383 382 384 48 (parallel [
            (set (reg:DI 163 [ D.8232 ])
                (ashift:DI (reg:DI 162 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:173 -1
     (nil))
(insn 384 383 385 48 (set (reg/f:DI 306)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:173 -1
     (nil))
(insn 385 384 386 48 (parallel [
            (set (reg/f:DI 164 [ D.8233 ])
                (plus:DI (reg:DI 163 [ D.8232 ])
                    (reg/f:DI 306)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:173 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 163 [ D.8232 ]))
        (nil)))
(insn 386 385 387 48 (set (reg/f:DI 307)
        (mem/f:DI (reg/f:DI 164 [ D.8233 ]) [0 *_203+0 S8 A64])) certify.c:173 -1
     (nil))
(insn 387 386 388 48 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5448 [0xffffffffffffeab8])) [0 signatureFilename+0 S8 A64])
        (reg/f:DI 307)) certify.c:173 -1
     (nil))
(jump_insn 388 387 389 48 (set (pc)
        (label_ref:DI 762)) 654 {jump}
     (nil)
 -> 762)
(barrier 389 388 390)
(code_label 390 389 391 49 30 "" [1 uses])
(note 391 390 392 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 392 391 393 49 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f8cd8bc7d80 *.LC22>)) certify.c:176 -1
     (nil))
(call_insn 393 392 394 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:176 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 394 393 397 49 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:177 -1
     (nil)
    (nil))
(jump_insn 397 394 398 49 (set (pc)
        (label_ref 762)) -1
     (nil)
 -> 762)
(barrier 398 397 399)
(code_label 399 398 400 51 29 "" [1 uses])
(note 400 399 401 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 401 400 402 51 (set (reg:SI 308)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:180 -1
     (nil))
(insn 402 401 403 51 (set (reg:DI 165 [ D.8232 ])
        (sign_extend:DI (reg:SI 308))) certify.c:180 -1
     (nil))
(insn 403 402 404 51 (parallel [
            (set (reg:DI 166 [ D.8232 ])
                (ashift:DI (reg:DI 165 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:180 -1
     (nil))
(insn 404 403 405 51 (set (reg/f:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:180 -1
     (nil))
(insn 405 404 406 51 (parallel [
            (set (reg/f:DI 167 [ D.8233 ])
                (plus:DI (reg:DI 166 [ D.8232 ])
                    (reg/f:DI 309)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:180 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 166 [ D.8232 ]))
        (nil)))
(insn 406 405 407 51 (set (reg/f:DI 168 [ D.8234 ])
        (mem/f:DI (reg/f:DI 167 [ D.8233 ]) [0 *_209+0 S8 A64])) certify.c:180 -1
     (nil))
(insn 407 406 408 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f8cd8bc7e10 *.LC23>)) certify.c:180 -1
     (nil))
(insn 408 407 409 51 (set (reg:DI 5 di)
        (reg/f:DI 168 [ D.8234 ])) certify.c:180 -1
     (nil))
(call_insn/i 409 408 410 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:180 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 410 409 411 51 (set (reg:SI 169 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:180 -1
     (nil))
(insn 411 410 412 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 169 [ D.8235 ])
            (const_int 0 [0]))) certify.c:180 -1
     (nil))
(jump_insn 412 411 413 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 437)
            (pc))) certify.c:180 -1
     (nil)
 -> 437)
(note 413 412 414 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 414 413 415 52 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:181 -1
     (nil))
(insn 415 414 416 52 (set (reg:SI 310)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:182 -1
     (nil))
(insn 416 415 417 52 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 310)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5556 [0xffffffffffffea4c])) [0 argc+0 S4 A32]))) certify.c:182 -1
     (nil))
(jump_insn 417 416 418 52 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 428)
            (pc))) certify.c:182 -1
     (nil)
 -> 428)
(note 418 417 419 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 419 418 420 53 (set (reg:SI 311)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:183 -1
     (nil))
(insn 420 419 421 53 (set (reg:DI 170 [ D.8232 ])
        (sign_extend:DI (reg:SI 311))) certify.c:183 -1
     (nil))
(insn 421 420 422 53 (parallel [
            (set (reg:DI 171 [ D.8232 ])
                (ashift:DI (reg:DI 170 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:183 -1
     (nil))
(insn 422 421 423 53 (set (reg/f:DI 312)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:183 -1
     (nil))
(insn 423 422 424 53 (parallel [
            (set (reg/f:DI 172 [ D.8233 ])
                (plus:DI (reg:DI 171 [ D.8232 ])
                    (reg/f:DI 312)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:183 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 171 [ D.8232 ]))
        (nil)))
(insn 424 423 425 53 (set (reg/f:DI 313)
        (mem/f:DI (reg/f:DI 172 [ D.8233 ]) [0 *_215+0 S8 A64])) certify.c:183 -1
     (nil))
(insn 425 424 426 53 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5440 [0xffffffffffffeac0])) [0 attestInfoFilename+0 S8 A64])
        (reg/f:DI 313)) certify.c:183 -1
     (nil))
(jump_insn 426 425 427 53 (set (pc)
        (label_ref:DI 762)) 654 {jump}
     (nil)
 -> 762)
(barrier 427 426 428)
(code_label 428 427 429 54 33 "" [1 uses])
(note 429 428 430 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 430 429 431 54 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f8cd8bc7ea0 *.LC24>)) certify.c:186 -1
     (nil))
(call_insn 431 430 432 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:186 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 432 431 435 54 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:187 -1
     (nil)
    (nil))
(jump_insn 435 432 436 54 (set (pc)
        (label_ref 762)) -1
     (nil)
 -> 762)
(barrier 436 435 437)
(code_label 437 436 438 56 32 "" [1 uses])
(note 438 437 439 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 439 438 440 56 (set (reg:SI 314)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:190 -1
     (nil))
(insn 440 439 441 56 (set (reg:DI 173 [ D.8232 ])
        (sign_extend:DI (reg:SI 314))) certify.c:190 -1
     (nil))
(insn 441 440 442 56 (parallel [
            (set (reg:DI 174 [ D.8232 ])
                (ashift:DI (reg:DI 173 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:190 -1
     (nil))
(insn 442 441 443 56 (set (reg/f:DI 315)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:190 -1
     (nil))
(insn 443 442 444 56 (parallel [
            (set (reg/f:DI 175 [ D.8233 ])
                (plus:DI (reg:DI 174 [ D.8232 ])
                    (reg/f:DI 315)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:190 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 174 [ D.8232 ]))
        (nil)))
(insn 444 443 445 56 (set (reg/f:DI 176 [ D.8234 ])
        (mem/f:DI (reg/f:DI 175 [ D.8233 ]) [0 *_221+0 S8 A64])) certify.c:190 -1
     (nil))
(insn 445 444 446 56 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f8cd8bc7f30 *.LC25>)) certify.c:190 -1
     (nil))
(insn 446 445 447 56 (set (reg:DI 5 di)
        (reg/f:DI 176 [ D.8234 ])) certify.c:190 -1
     (nil))
(call_insn/i 447 446 448 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:190 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 448 447 449 56 (set (reg:SI 177 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:190 -1
     (nil))
(insn 449 448 450 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 177 [ D.8235 ])
            (const_int 0 [0]))) certify.c:190 -1
     (nil))
(jump_insn 450 449 451 56 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 475)
            (pc))) certify.c:190 -1
     (nil)
 -> 475)
(note 451 450 452 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 452 451 453 57 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:191 -1
     (nil))
(insn 453 452 454 57 (set (reg:SI 316)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:192 -1
     (nil))
(insn 454 453 455 57 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 316)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5556 [0xffffffffffffea4c])) [0 argc+0 S4 A32]))) certify.c:192 -1
     (nil))
(jump_insn 455 454 456 57 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 466)
            (pc))) certify.c:192 -1
     (nil)
 -> 466)
(note 456 455 457 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 457 456 458 58 (set (reg:SI 317)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:193 -1
     (nil))
(insn 458 457 459 58 (set (reg:DI 178 [ D.8232 ])
        (sign_extend:DI (reg:SI 317))) certify.c:193 -1
     (nil))
(insn 459 458 460 58 (parallel [
            (set (reg:DI 179 [ D.8232 ])
                (ashift:DI (reg:DI 178 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:193 -1
     (nil))
(insn 460 459 461 58 (set (reg/f:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:193 -1
     (nil))
(insn 461 460 462 58 (parallel [
            (set (reg/f:DI 180 [ D.8233 ])
                (plus:DI (reg:DI 179 [ D.8232 ])
                    (reg/f:DI 318)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:193 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 179 [ D.8232 ]))
        (nil)))
(insn 462 461 463 58 (set (reg/f:DI 319)
        (mem/f:DI (reg/f:DI 180 [ D.8233 ]) [0 *_227+0 S8 A64])) certify.c:193 -1
     (nil))
(insn 463 462 464 58 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5432 [0xffffffffffffeac8])) [0 qualifyingDataFilename+0 S8 A64])
        (reg/f:DI 319)) certify.c:193 -1
     (nil))
(jump_insn 464 463 465 58 (set (pc)
        (label_ref:DI 762)) 654 {jump}
     (nil)
 -> 762)
(barrier 465 464 466)
(code_label 466 465 467 59 36 "" [1 uses])
(note 467 466 468 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 469 59 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f8cd8bdd000 *.LC26>)) certify.c:196 -1
     (nil))
(call_insn 469 468 470 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:196 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 470 469 473 59 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:197 -1
     (nil)
    (nil))
(jump_insn 473 470 474 59 (set (pc)
        (label_ref 762)) -1
     (nil)
 -> 762)
(barrier 474 473 475)
(code_label 475 474 476 61 35 "" [1 uses])
(note 476 475 477 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 477 476 478 61 (set (reg:SI 320)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:200 -1
     (nil))
(insn 478 477 479 61 (set (reg:DI 181 [ D.8232 ])
        (sign_extend:DI (reg:SI 320))) certify.c:200 -1
     (nil))
(insn 479 478 480 61 (parallel [
            (set (reg:DI 182 [ D.8232 ])
                (ashift:DI (reg:DI 181 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:200 -1
     (nil))
(insn 480 479 481 61 (set (reg/f:DI 321)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:200 -1
     (nil))
(insn 481 480 482 61 (parallel [
            (set (reg/f:DI 183 [ D.8233 ])
                (plus:DI (reg:DI 182 [ D.8232 ])
                    (reg/f:DI 321)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:200 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 182 [ D.8232 ]))
        (nil)))
(insn 482 481 483 61 (set (reg/f:DI 184 [ D.8234 ])
        (mem/f:DI (reg/f:DI 183 [ D.8233 ]) [0 *_233+0 S8 A64])) certify.c:200 -1
     (nil))
(insn 483 482 484 61 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f8cd8bdd090 *.LC27>)) certify.c:200 -1
     (nil))
(insn 484 483 485 61 (set (reg:DI 5 di)
        (reg/f:DI 184 [ D.8234 ])) certify.c:200 -1
     (nil))
(call_insn/i 485 484 486 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:200 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 486 485 487 61 (set (reg:SI 185 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:200 -1
     (nil))
(insn 487 486 488 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 185 [ D.8235 ])
            (const_int 0 [0]))) certify.c:200 -1
     (nil))
(jump_insn 488 487 489 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 553)
            (pc))) certify.c:200 -1
     (nil)
 -> 553)
(note 489 488 490 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 490 489 491 62 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:201 -1
     (nil))
(insn 491 490 492 62 (set (reg:SI 322)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:202 -1
     (nil))
(insn 492 491 493 62 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 322)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5556 [0xffffffffffffea4c])) [0 argc+0 S4 A32]))) certify.c:202 -1
     (nil))
(jump_insn 493 492 494 62 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 509)
            (pc))) certify.c:202 -1
     (nil)
 -> 509)
(note 494 493 495 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 495 494 496 63 (set (reg:SI 323)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:203 -1
     (nil))
(insn 496 495 497 63 (set (reg:DI 186 [ D.8232 ])
        (sign_extend:DI (reg:SI 323))) certify.c:203 -1
     (nil))
(insn 497 496 498 63 (parallel [
            (set (reg:DI 187 [ D.8232 ])
                (ashift:DI (reg:DI 186 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:203 -1
     (nil))
(insn 498 497 499 63 (set (reg/f:DI 324)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:203 -1
     (nil))
(insn 499 498 500 63 (parallel [
            (set (reg/f:DI 188 [ D.8233 ])
                (plus:DI (reg:DI 187 [ D.8232 ])
                    (reg/f:DI 324)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:203 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 187 [ D.8232 ]))
        (nil)))
(insn 500 499 501 63 (set (reg/f:DI 189 [ D.8234 ])
        (mem/f:DI (reg/f:DI 188 [ D.8233 ]) [0 *_239+0 S8 A64])) certify.c:203 -1
     (nil))
(insn 501 500 502 63 (parallel [
            (set (reg:DI 325)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5540 [0xffffffffffffea5c])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:203 -1
     (nil))
(insn 502 501 503 63 (set (reg:DI 1 dx)
        (reg:DI 325)) certify.c:203 -1
     (nil))
(insn 503 502 504 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8cd8bc7240 *.LC2>)) certify.c:203 -1
     (nil))
(insn 504 503 505 63 (set (reg:DI 5 di)
        (reg/f:DI 189 [ D.8234 ])) certify.c:203 -1
     (nil))
(insn 505 504 506 63 (set (reg:QI 0 ax)
        (const_int 0 [0])) certify.c:203 -1
     (nil))
(call_insn 506 505 507 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f8cd8ee3ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) certify.c:203 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 507 506 508 63 (set (pc)
        (label_ref 514)) -1
     (nil)
 -> 514)
(barrier 508 507 509)
(code_label 509 508 510 64 39 "" [1 uses])
(note 510 509 511 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 511 510 512 64 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f8cd8bdd120 *.LC28>)) certify.c:206 -1
     (nil))
(call_insn 512 511 513 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:206 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 513 512 514 64 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:207 -1
     (nil)
    (nil))
(code_label 514 513 515 65 40 "" [1 uses])
(note 515 514 516 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 65 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:209 -1
     (nil))
(insn 517 516 518 65 (set (reg:SI 326)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:210 -1
     (nil))
(insn 518 517 519 65 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 326)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5556 [0xffffffffffffea4c])) [0 argc+0 S4 A32]))) certify.c:210 -1
     (nil))
(jump_insn 519 518 520 65 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 544)
            (pc))) certify.c:210 -1
     (nil)
 -> 544)
(note 520 519 521 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 521 520 522 66 (set (reg:SI 327)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:211 -1
     (nil))
(insn 522 521 523 66 (set (reg:DI 190 [ D.8232 ])
        (sign_extend:DI (reg:SI 327))) certify.c:211 -1
     (nil))
(insn 523 522 524 66 (parallel [
            (set (reg:DI 191 [ D.8232 ])
                (ashift:DI (reg:DI 190 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:211 -1
     (nil))
(insn 524 523 525 66 (set (reg/f:DI 328)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:211 -1
     (nil))
(insn 525 524 526 66 (parallel [
            (set (reg/f:DI 192 [ D.8233 ])
                (plus:DI (reg:DI 191 [ D.8232 ])
                    (reg/f:DI 328)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:211 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 191 [ D.8232 ]))
        (nil)))
(insn 526 525 527 66 (set (reg/f:DI 193 [ D.8234 ])
        (mem/f:DI (reg/f:DI 192 [ D.8233 ]) [0 *_247+0 S8 A64])) certify.c:211 -1
     (nil))
(insn 527 526 528 66 (parallel [
            (set (reg:DI 329)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5536 [0xffffffffffffea60])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:211 -1
     (nil))
(insn 528 527 529 66 (set (reg:DI 1 dx)
        (reg:DI 329)) certify.c:211 -1
     (nil))
(insn 529 528 530 66 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8cd8bc7240 *.LC2>)) certify.c:211 -1
     (nil))
(insn 530 529 531 66 (set (reg:DI 5 di)
        (reg/f:DI 193 [ D.8234 ])) certify.c:211 -1
     (nil))
(insn 531 530 532 66 (set (reg:QI 0 ax)
        (const_int 0 [0])) certify.c:211 -1
     (nil))
(call_insn 532 531 533 66 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f8cd8ee3ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) certify.c:211 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 533 532 534 66 (set (reg:SI 194 [ D.8236 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5536 [0xffffffffffffea60])) [0 sessionAttributes0+0 S4 A64])) certify.c:212 -1
     (nil))
(insn 534 533 535 66 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 194 [ D.8236 ])
            (const_int 255 [0xff]))) certify.c:212 -1
     (nil))
(jump_insn 535 534 536 66 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 762)
            (pc))) certify.c:212 612 {*jcc_1}
     (nil)
 -> 762)
(note 536 535 537 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 537 536 538 67 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f8cd8bdd1b0 *.LC29>)) certify.c:213 -1
     (nil))
(call_insn 538 537 539 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:213 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 539 538 542 67 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:214 -1
     (nil)
    (nil))
(jump_insn 542 539 543 67 (set (pc)
        (label_ref:DI 762)) 654 {jump}
     (nil)
 -> 762)
(barrier 543 542 544)
(code_label 544 543 545 69 41 "" [1 uses])
(note 545 544 546 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 546 545 547 69 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f8cd8bdd120 *.LC28>)) certify.c:218 -1
     (nil))
(call_insn 547 546 548 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:218 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 548 547 551 69 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:219 -1
     (nil)
    (nil))
(jump_insn 551 548 552 69 (set (pc)
        (label_ref 762)) -1
     (nil)
 -> 762)
(barrier 552 551 553)
(code_label 553 552 554 71 38 "" [1 uses])
(note 554 553 555 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 555 554 556 71 (set (reg:SI 330)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:222 -1
     (nil))
(insn 556 555 557 71 (set (reg:DI 195 [ D.8232 ])
        (sign_extend:DI (reg:SI 330))) certify.c:222 -1
     (nil))
(insn 557 556 558 71 (parallel [
            (set (reg:DI 196 [ D.8232 ])
                (ashift:DI (reg:DI 195 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:222 -1
     (nil))
(insn 558 557 559 71 (set (reg/f:DI 331)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:222 -1
     (nil))
(insn 559 558 560 71 (parallel [
            (set (reg/f:DI 197 [ D.8233 ])
                (plus:DI (reg:DI 196 [ D.8232 ])
                    (reg/f:DI 331)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:222 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 196 [ D.8232 ]))
        (nil)))
(insn 560 559 561 71 (set (reg/f:DI 198 [ D.8234 ])
        (mem/f:DI (reg/f:DI 197 [ D.8233 ]) [0 *_257+0 S8 A64])) certify.c:222 -1
     (nil))
(insn 561 560 562 71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f8cd8bdd240 *.LC30>)) certify.c:222 -1
     (nil))
(insn 562 561 563 71 (set (reg:DI 5 di)
        (reg/f:DI 198 [ D.8234 ])) certify.c:222 -1
     (nil))
(call_insn/i 563 562 564 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:222 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 564 563 565 71 (set (reg:SI 199 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:222 -1
     (nil))
(insn 565 564 566 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 199 [ D.8235 ])
            (const_int 0 [0]))) certify.c:222 -1
     (nil))
(jump_insn 566 565 567 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 631)
            (pc))) certify.c:222 -1
     (nil)
 -> 631)
(note 567 566 568 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 568 567 569 72 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:223 -1
     (nil))
(insn 569 568 570 72 (set (reg:SI 332)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:224 -1
     (nil))
(insn 570 569 571 72 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 332)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5556 [0xffffffffffffea4c])) [0 argc+0 S4 A32]))) certify.c:224 -1
     (nil))
(jump_insn 571 570 572 72 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 587)
            (pc))) certify.c:224 -1
     (nil)
 -> 587)
(note 572 571 573 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 573 572 574 73 (set (reg:SI 333)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:225 -1
     (nil))
(insn 574 573 575 73 (set (reg:DI 200 [ D.8232 ])
        (sign_extend:DI (reg:SI 333))) certify.c:225 -1
     (nil))
(insn 575 574 576 73 (parallel [
            (set (reg:DI 201 [ D.8232 ])
                (ashift:DI (reg:DI 200 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:225 -1
     (nil))
(insn 576 575 577 73 (set (reg/f:DI 334)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:225 -1
     (nil))
(insn 577 576 578 73 (parallel [
            (set (reg/f:DI 202 [ D.8233 ])
                (plus:DI (reg:DI 201 [ D.8232 ])
                    (reg/f:DI 334)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:225 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 201 [ D.8232 ]))
        (nil)))
(insn 578 577 579 73 (set (reg/f:DI 203 [ D.8234 ])
        (mem/f:DI (reg/f:DI 202 [ D.8233 ]) [0 *_263+0 S8 A64])) certify.c:225 -1
     (nil))
(insn 579 578 580 73 (parallel [
            (set (reg:DI 335)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5532 [0xffffffffffffea64])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:225 -1
     (nil))
(insn 580 579 581 73 (set (reg:DI 1 dx)
        (reg:DI 335)) certify.c:225 -1
     (nil))
(insn 581 580 582 73 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8cd8bc7240 *.LC2>)) certify.c:225 -1
     (nil))
(insn 582 581 583 73 (set (reg:DI 5 di)
        (reg/f:DI 203 [ D.8234 ])) certify.c:225 -1
     (nil))
(insn 583 582 584 73 (set (reg:QI 0 ax)
        (const_int 0 [0])) certify.c:225 -1
     (nil))
(call_insn 584 583 585 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f8cd8ee3ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) certify.c:225 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 585 584 586 73 (set (pc)
        (label_ref 592)) -1
     (nil)
 -> 592)
(barrier 586 585 587)
(code_label 587 586 588 74 45 "" [1 uses])
(note 588 587 589 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 589 588 590 74 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f8cd8bdd2d0 *.LC31>)) certify.c:228 -1
     (nil))
(call_insn 590 589 591 74 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:228 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 591 590 592 74 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:229 -1
     (nil)
    (nil))
(code_label 592 591 593 75 46 "" [1 uses])
(note 593 592 594 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 594 593 595 75 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:231 -1
     (nil))
(insn 595 594 596 75 (set (reg:SI 336)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:232 -1
     (nil))
(insn 596 595 597 75 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 336)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5556 [0xffffffffffffea4c])) [0 argc+0 S4 A32]))) certify.c:232 -1
     (nil))
(jump_insn 597 596 598 75 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 622)
            (pc))) certify.c:232 -1
     (nil)
 -> 622)
(note 598 597 599 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 599 598 600 76 (set (reg:SI 337)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:233 -1
     (nil))
(insn 600 599 601 76 (set (reg:DI 204 [ D.8232 ])
        (sign_extend:DI (reg:SI 337))) certify.c:233 -1
     (nil))
(insn 601 600 602 76 (parallel [
            (set (reg:DI 205 [ D.8232 ])
                (ashift:DI (reg:DI 204 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:233 -1
     (nil))
(insn 602 601 603 76 (set (reg/f:DI 338)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:233 -1
     (nil))
(insn 603 602 604 76 (parallel [
            (set (reg/f:DI 206 [ D.8233 ])
                (plus:DI (reg:DI 205 [ D.8232 ])
                    (reg/f:DI 338)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:233 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 205 [ D.8232 ]))
        (nil)))
(insn 604 603 605 76 (set (reg/f:DI 207 [ D.8234 ])
        (mem/f:DI (reg/f:DI 206 [ D.8233 ]) [0 *_271+0 S8 A64])) certify.c:233 -1
     (nil))
(insn 605 604 606 76 (parallel [
            (set (reg:DI 339)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5528 [0xffffffffffffea68])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:233 -1
     (nil))
(insn 606 605 607 76 (set (reg:DI 1 dx)
        (reg:DI 339)) certify.c:233 -1
     (nil))
(insn 607 606 608 76 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8cd8bc7240 *.LC2>)) certify.c:233 -1
     (nil))
(insn 608 607 609 76 (set (reg:DI 5 di)
        (reg/f:DI 207 [ D.8234 ])) certify.c:233 -1
     (nil))
(insn 609 608 610 76 (set (reg:QI 0 ax)
        (const_int 0 [0])) certify.c:233 -1
     (nil))
(call_insn 610 609 611 76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f8cd8ee3ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) certify.c:233 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 611 610 612 76 (set (reg:SI 208 [ D.8236 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5528 [0xffffffffffffea68])) [0 sessionAttributes1+0 S4 A64])) certify.c:234 -1
     (nil))
(insn 612 611 613 76 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 208 [ D.8236 ])
            (const_int 255 [0xff]))) certify.c:234 -1
     (nil))
(jump_insn 613 612 614 76 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 762)
            (pc))) certify.c:234 612 {*jcc_1}
     (nil)
 -> 762)
(note 614 613 615 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 615 614 616 77 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f8cd8bdd360 *.LC32>)) certify.c:235 -1
     (nil))
(call_insn 616 615 617 77 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:235 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 617 616 620 77 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:236 -1
     (nil)
    (nil))
(jump_insn 620 617 621 77 (set (pc)
        (label_ref:DI 762)) 654 {jump}
     (nil)
 -> 762)
(barrier 621 620 622)
(code_label 622 621 623 79 47 "" [1 uses])
(note 623 622 624 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 624 623 625 79 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f8cd8bdd2d0 *.LC31>)) certify.c:240 -1
     (nil))
(call_insn 625 624 626 79 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:240 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 626 625 629 79 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:241 -1
     (nil)
    (nil))
(jump_insn 629 626 630 79 (set (pc)
        (label_ref 762)) -1
     (nil)
 -> 762)
(barrier 630 629 631)
(code_label 631 630 632 81 44 "" [1 uses])
(note 632 631 633 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 633 632 634 81 (set (reg:SI 340)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:244 -1
     (nil))
(insn 634 633 635 81 (set (reg:DI 209 [ D.8232 ])
        (sign_extend:DI (reg:SI 340))) certify.c:244 -1
     (nil))
(insn 635 634 636 81 (parallel [
            (set (reg:DI 210 [ D.8232 ])
                (ashift:DI (reg:DI 209 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:244 -1
     (nil))
(insn 636 635 637 81 (set (reg/f:DI 341)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:244 -1
     (nil))
(insn 637 636 638 81 (parallel [
            (set (reg/f:DI 211 [ D.8233 ])
                (plus:DI (reg:DI 210 [ D.8232 ])
                    (reg/f:DI 341)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:244 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 210 [ D.8232 ]))
        (nil)))
(insn 638 637 639 81 (set (reg/f:DI 212 [ D.8234 ])
        (mem/f:DI (reg/f:DI 211 [ D.8233 ]) [0 *_281+0 S8 A64])) certify.c:244 -1
     (nil))
(insn 639 638 640 81 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f8cd8bdd3f0 *.LC33>)) certify.c:244 -1
     (nil))
(insn 640 639 641 81 (set (reg:DI 5 di)
        (reg/f:DI 212 [ D.8234 ])) certify.c:244 -1
     (nil))
(call_insn/i 641 640 642 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:244 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 642 641 643 81 (set (reg:SI 213 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:244 -1
     (nil))
(insn 643 642 644 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 213 [ D.8235 ])
            (const_int 0 [0]))) certify.c:244 -1
     (nil))
(jump_insn 644 643 645 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 709)
            (pc))) certify.c:244 -1
     (nil)
 -> 709)
(note 645 644 646 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 646 645 647 82 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:245 -1
     (nil))
(insn 647 646 648 82 (set (reg:SI 342)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:246 -1
     (nil))
(insn 648 647 649 82 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 342)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5556 [0xffffffffffffea4c])) [0 argc+0 S4 A32]))) certify.c:246 -1
     (nil))
(jump_insn 649 648 650 82 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 665)
            (pc))) certify.c:246 -1
     (nil)
 -> 665)
(note 650 649 651 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 651 650 652 83 (set (reg:SI 343)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:247 -1
     (nil))
(insn 652 651 653 83 (set (reg:DI 214 [ D.8232 ])
        (sign_extend:DI (reg:SI 343))) certify.c:247 -1
     (nil))
(insn 653 652 654 83 (parallel [
            (set (reg:DI 215 [ D.8232 ])
                (ashift:DI (reg:DI 214 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:247 -1
     (nil))
(insn 654 653 655 83 (set (reg/f:DI 344)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:247 -1
     (nil))
(insn 655 654 656 83 (parallel [
            (set (reg/f:DI 216 [ D.8233 ])
                (plus:DI (reg:DI 215 [ D.8232 ])
                    (reg/f:DI 344)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:247 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 215 [ D.8232 ]))
        (nil)))
(insn 656 655 657 83 (set (reg/f:DI 217 [ D.8234 ])
        (mem/f:DI (reg/f:DI 216 [ D.8233 ]) [0 *_287+0 S8 A64])) certify.c:247 -1
     (nil))
(insn 657 656 658 83 (parallel [
            (set (reg:DI 345)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5524 [0xffffffffffffea6c])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:247 -1
     (nil))
(insn 658 657 659 83 (set (reg:DI 1 dx)
        (reg:DI 345)) certify.c:247 -1
     (nil))
(insn 659 658 660 83 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8cd8bc7240 *.LC2>)) certify.c:247 -1
     (nil))
(insn 660 659 661 83 (set (reg:DI 5 di)
        (reg/f:DI 217 [ D.8234 ])) certify.c:247 -1
     (nil))
(insn 661 660 662 83 (set (reg:QI 0 ax)
        (const_int 0 [0])) certify.c:247 -1
     (nil))
(call_insn 662 661 663 83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f8cd8ee3ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) certify.c:247 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 663 662 664 83 (set (pc)
        (label_ref 670)) -1
     (nil)
 -> 670)
(barrier 664 663 665)
(code_label 665 664 666 84 51 "" [1 uses])
(note 666 665 667 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 667 666 668 84 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f8cd8bdd480 *.LC34>)) certify.c:250 -1
     (nil))
(call_insn 668 667 669 84 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:250 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 669 668 670 84 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:251 -1
     (nil)
    (nil))
(code_label 670 669 671 85 52 "" [1 uses])
(note 671 670 672 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 672 671 673 85 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:253 -1
     (nil))
(insn 673 672 674 85 (set (reg:SI 346)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:254 -1
     (nil))
(insn 674 673 675 85 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 346)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5556 [0xffffffffffffea4c])) [0 argc+0 S4 A32]))) certify.c:254 -1
     (nil))
(jump_insn 675 674 676 85 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 700)
            (pc))) certify.c:254 -1
     (nil)
 -> 700)
(note 676 675 677 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 677 676 678 86 (set (reg:SI 347)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:255 -1
     (nil))
(insn 678 677 679 86 (set (reg:DI 218 [ D.8232 ])
        (sign_extend:DI (reg:SI 347))) certify.c:255 -1
     (nil))
(insn 679 678 680 86 (parallel [
            (set (reg:DI 219 [ D.8232 ])
                (ashift:DI (reg:DI 218 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:255 -1
     (nil))
(insn 680 679 681 86 (set (reg/f:DI 348)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:255 -1
     (nil))
(insn 681 680 682 86 (parallel [
            (set (reg/f:DI 220 [ D.8233 ])
                (plus:DI (reg:DI 219 [ D.8232 ])
                    (reg/f:DI 348)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:255 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 219 [ D.8232 ]))
        (nil)))
(insn 682 681 683 86 (set (reg/f:DI 221 [ D.8234 ])
        (mem/f:DI (reg/f:DI 220 [ D.8233 ]) [0 *_295+0 S8 A64])) certify.c:255 -1
     (nil))
(insn 683 682 684 86 (parallel [
            (set (reg:DI 349)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5520 [0xffffffffffffea70])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:255 -1
     (nil))
(insn 684 683 685 86 (set (reg:DI 1 dx)
        (reg:DI 349)) certify.c:255 -1
     (nil))
(insn 685 684 686 86 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8cd8bc7240 *.LC2>)) certify.c:255 -1
     (nil))
(insn 686 685 687 86 (set (reg:DI 5 di)
        (reg/f:DI 221 [ D.8234 ])) certify.c:255 -1
     (nil))
(insn 687 686 688 86 (set (reg:QI 0 ax)
        (const_int 0 [0])) certify.c:255 -1
     (nil))
(call_insn 688 687 689 86 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f8cd8ee3ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) certify.c:255 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 689 688 690 86 (set (reg:SI 222 [ D.8236 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 sessionAttributes2+0 S4 A64])) certify.c:256 -1
     (nil))
(insn 690 689 691 86 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 222 [ D.8236 ])
            (const_int 255 [0xff]))) certify.c:256 -1
     (nil))
(jump_insn 691 690 692 86 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 762)
            (pc))) certify.c:256 612 {*jcc_1}
     (nil)
 -> 762)
(note 692 691 693 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 693 692 694 87 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f8cd8bdd510 *.LC35>)) certify.c:257 -1
     (nil))
(call_insn 694 693 695 87 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:257 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 695 694 698 87 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:258 -1
     (nil)
    (nil))
(jump_insn 698 695 699 87 (set (pc)
        (label_ref:DI 762)) 654 {jump}
     (nil)
 -> 762)
(barrier 699 698 700)
(code_label 700 699 701 89 53 "" [1 uses])
(note 701 700 702 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 702 701 703 89 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f8cd8bdd480 *.LC34>)) certify.c:262 -1
     (nil))
(call_insn 703 702 704 89 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:262 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 704 703 707 89 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:263 -1
     (nil)
    (nil))
(jump_insn 707 704 708 89 (set (pc)
        (label_ref 762)) -1
     (nil)
 -> 762)
(barrier 708 707 709)
(code_label 709 708 710 91 50 "" [1 uses])
(note 710 709 711 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 711 710 712 91 (set (reg:SI 350)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:266 -1
     (nil))
(insn 712 711 713 91 (set (reg:DI 223 [ D.8232 ])
        (sign_extend:DI (reg:SI 350))) certify.c:266 -1
     (nil))
(insn 713 712 714 91 (parallel [
            (set (reg:DI 224 [ D.8232 ])
                (ashift:DI (reg:DI 223 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:266 -1
     (nil))
(insn 714 713 715 91 (set (reg/f:DI 351)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:266 -1
     (nil))
(insn 715 714 716 91 (parallel [
            (set (reg/f:DI 225 [ D.8233 ])
                (plus:DI (reg:DI 224 [ D.8232 ])
                    (reg/f:DI 351)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:266 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 224 [ D.8232 ]))
        (nil)))
(insn 716 715 717 91 (set (reg/f:DI 226 [ D.8234 ])
        (mem/f:DI (reg/f:DI 225 [ D.8233 ]) [0 *_305+0 S8 A64])) certify.c:266 -1
     (nil))
(insn 717 716 718 91 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f8cd8bdd5a0 *.LC36>)) certify.c:266 -1
     (nil))
(insn 718 717 719 91 (set (reg:DI 5 di)
        (reg/f:DI 226 [ D.8234 ])) certify.c:266 -1
     (nil))
(call_insn/i 719 718 720 91 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:266 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 720 719 721 91 (set (reg:SI 227 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:266 -1
     (nil))
(insn 721 720 722 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 227 [ D.8235 ])
            (const_int 0 [0]))) certify.c:266 -1
     (nil))
(jump_insn 722 721 723 91 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 727)
            (pc))) certify.c:266 -1
     (nil)
 -> 727)
(note 723 722 724 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(call_insn 724 723 725 92 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:267 -1
     (nil)
    (nil))
(jump_insn 725 724 726 92 (set (pc)
        (label_ref 762)) -1
     (nil)
 -> 762)
(barrier 726 725 727)
(code_label 727 726 728 93 56 "" [1 uses])
(note 728 727 729 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 729 728 730 93 (set (reg:SI 352)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:269 -1
     (nil))
(insn 730 729 731 93 (set (reg:DI 228 [ D.8232 ])
        (sign_extend:DI (reg:SI 352))) certify.c:269 -1
     (nil))
(insn 731 730 732 93 (parallel [
            (set (reg:DI 229 [ D.8232 ])
                (ashift:DI (reg:DI 228 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:269 -1
     (nil))
(insn 732 731 733 93 (set (reg/f:DI 353)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:269 -1
     (nil))
(insn 733 732 734 93 (parallel [
            (set (reg/f:DI 230 [ D.8233 ])
                (plus:DI (reg:DI 229 [ D.8232 ])
                    (reg/f:DI 353)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:269 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 229 [ D.8232 ]))
        (nil)))
(insn 734 733 735 93 (set (reg/f:DI 231 [ D.8234 ])
        (mem/f:DI (reg/f:DI 230 [ D.8233 ]) [0 *_311+0 S8 A64])) certify.c:269 -1
     (nil))
(insn 735 734 736 93 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7f8cd8bdd630 *.LC37>)) certify.c:269 -1
     (nil))
(insn 736 735 737 93 (set (reg:DI 5 di)
        (reg/f:DI 231 [ D.8234 ])) certify.c:269 -1
     (nil))
(call_insn/i 737 736 738 93 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8cd8eda0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) certify.c:269 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 738 737 739 93 (set (reg:SI 232 [ D.8235 ])
        (reg:SI 0 ax)) certify.c:269 -1
     (nil))
(insn 739 738 740 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 232 [ D.8235 ])
            (const_int 0 [0]))) certify.c:269 -1
     (nil))
(jump_insn 740 739 741 93 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 749)
            (pc))) certify.c:269 -1
     (nil)
 -> 749)
(note 741 740 742 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 742 741 743 94 (set (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f8cd8ca2090 verbose>) [0 verbose+0 S4 A32])
        (const_int 1 [0x1])) certify.c:270 -1
     (nil))
(insn 743 742 744 94 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7f8cd8bdd6c0 *.LC38>)) certify.c:271 -1
     (nil))
(insn 744 743 745 94 (set (reg:SI 4 si)
        (const_int 1 [0x1])) certify.c:271 -1
     (nil))
(insn 745 744 746 94 (set (reg:DI 5 di)
        (const_int 0 [0])) certify.c:271 -1
     (nil))
(call_insn 746 745 747 94 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7f8cd8e46000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) certify.c:271 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 747 746 748 94 (set (pc)
        (label_ref 762)) -1
     (nil)
 -> 762)
(barrier 748 747 749)
(code_label 749 748 750 95 57 "" [1 uses])
(note 750 749 751 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 751 750 752 95 (set (reg:SI 354)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:274 -1
     (nil))
(insn 752 751 753 95 (set (reg:DI 233 [ D.8232 ])
        (sign_extend:DI (reg:SI 354))) certify.c:274 -1
     (nil))
(insn 753 752 754 95 (parallel [
            (set (reg:DI 234 [ D.8232 ])
                (ashift:DI (reg:DI 233 [ D.8232 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:274 -1
     (nil))
(insn 754 753 755 95 (set (reg/f:DI 355)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])) certify.c:274 -1
     (nil))
(insn 755 754 756 95 (parallel [
            (set (reg/f:DI 235 [ D.8233 ])
                (plus:DI (reg:DI 234 [ D.8232 ])
                    (reg/f:DI 355)))
            (clobber (reg:CC 17 flags))
        ]) certify.c:274 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5568 [0xffffffffffffea40])) [0 argv+0 S8 A64])
            (reg:DI 234 [ D.8232 ]))
        (nil)))
(insn 756 755 757 95 (set (reg/f:DI 236 [ D.8234 ])
        (mem/f:DI (reg/f:DI 235 [ D.8233 ]) [0 *_318+0 S8 A64])) certify.c:274 -1
     (nil))
(insn 757 756 758 95 (set (reg:DI 4 si)
        (reg/f:DI 236 [ D.8234 ])) certify.c:274 -1
     (nil))
(insn 758 757 759 95 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7f8cd8bdd750 *.LC39>)) certify.c:274 -1
     (nil))
(insn 759 758 760 95 (set (reg:QI 0 ax)
        (const_int 0 [0])) certify.c:274 -1
     (nil))
(call_insn 760 759 761 95 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8cd8ee0ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) certify.c:274 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(call_insn 761 760 762 95 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:275 -1
     (nil)
    (nil))
(code_label 762 761 763 96 6 "" [34 uses])
(note 763 762 764 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 764 763 765 96 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:88 -1
     (nil))
(code_label 765 764 766 97 2 "" [1 uses])
(note 766 765 767 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 767 766 768 97 (set (reg:SI 356)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5512 [0xffffffffffffea78])) [0 i+0 S4 A32])) certify.c:88 -1
     (nil))
(insn 768 767 769 97 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 356)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5556 [0xffffffffffffea4c])) [0 argc+0 S4 A32]))) certify.c:88 -1
     (nil))
(jump_insn 769 768 770 97 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 774)
            (pc))) certify.c:88 -1
     (nil)
 -> 774)
(note 770 769 772 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 772 770 773 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) certify.c:88 -1
     (nil))
(jump_insn 773 772 774 98 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 771)
            (pc))) certify.c:88 -1
     (nil)
 -> 771)
(code_label 774 773 775 99 58 "" [1 uses])
(note 775 774 776 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 776 775 777 99 (set (reg:SI 237 [ D.8236 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5548 [0xffffffffffffea54])) [0 objectHandle+0 S4 A32])) certify.c:278 -1
     (nil))
(insn 777 776 778 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 237 [ D.8236 ])
            (const_int 0 [0]))) certify.c:278 -1
     (nil))
(jump_insn 778 777 779 99 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 783)
            (pc))) certify.c:278 -1
     (nil)
 -> 783)
(note 779 778 780 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 780 779 781 100 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC40") [flags 0x2]  <var_decl 0x7f8cd8bdd7e0 *.LC40>)) certify.c:279 -1
     (nil))
(call_insn 781 780 782 100 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:279 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 782 781 783 100 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:280 -1
     (nil)
    (nil))
(code_label 783 782 784 101 60 "" [1 uses])
(note 784 783 785 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 785 784 786 101 (set (reg:SI 238 [ D.8236 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5544 [0xffffffffffffea58])) [0 signHandle+0 S4 A64])) certify.c:282 -1
     (nil))
(insn 786 785 787 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 238 [ D.8236 ])
            (const_int 0 [0]))) certify.c:282 -1
     (nil))
(jump_insn 787 786 788 101 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 792)
            (pc))) certify.c:282 -1
     (nil)
 -> 792)
(note 788 787 789 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 789 788 790 102 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x7f8cd8bdd870 *.LC41>)) certify.c:283 -1
     (nil))
(call_insn 790 789 791 102 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:283 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 791 790 792 102 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f8cd8b56a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) certify.c:284 -1
     (nil)
    (nil))
(code_label 792 791 793 103 61 "" [1 uses])
(note 793 792 794 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 794 793 795 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) certify.c:286 -1
     (nil))
(jump_insn 795 794 796 103 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 814)
            (pc))) certify.c:286 -1
     (nil)
 -> 814)
(note 796 795 797 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 797 796 798 104 (set (reg:SI 239 [ D.8236 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5548 [0xffffffffffffea54])) [0 objectHandle+0 S4 A32])) certify.c:288 -1
     (nil))
(insn 798 797 799 104 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5424 [0xffffffffffffead0])) [0 in.objectHandle+0 S4 A64])
        (reg:SI 239 [ D.8236 ])) certify.c:288 -1
     (nil))
(insn 799 798 800 104 (set (reg:SI 240 [ D.8236 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5544 [0xffffffffffffea58])) [0 signHandle+0 S4 A64])) certify.c:289 -1
     (nil))
(insn 800 799 801 104 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5420 [0xffffffffffffead4])) [0 in.signHandle+0 S4 A32])
        (reg:SI 240 [ D.8236 ])) certify.c:289 -1
     (nil))
(insn 801 800 802 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5508 [0xffffffffffffea7c])) [0 useRsa+0 S4 A32])
            (const_int 0 [0]))) certify.c:290 -1
     (nil))
(jump_insn 802 801 803 104 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 809)
            (pc))) certify.c:290 -1
     (nil)
 -> 809)
(note 803 802 804 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 804 803 805 105 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5284 [0xffffffffffffeb5c])) [0 in.inScheme.scheme+0 S2 A32])
        (const_int 20 [0x14])) certify.c:292 -1
     (nil))
(insn 805 804 806 105 (set (reg:HI 357)
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5550 [0xffffffffffffea52])) [0 halg+0 S2 A16])) certify.c:296 -1
     (nil))
(insn 806 805 807 105 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5282 [0xffffffffffffeb5e])) [0 in.inScheme.details.rsassa.hashAlg+0 S2 A16])
        (reg:HI 357)) certify.c:296 -1
     (nil))
(jump_insn 807 806 808 105 (set (pc)
        (label_ref 814)) -1
     (nil)
 -> 814)
(barrier 808 807 809)
(code_label 809 808 810 106 63 "" [1 uses])
(note 810 809 811 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 811 810 812 106 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5284 [0xffffffffffffeb5c])) [0 in.inScheme.scheme+0 S2 A32])
        (const_int 24 [0x18])) certify.c:299 -1
     (nil))
(insn 812 811 813 106 (set (reg:HI 358)
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5550 [0xffffffffffffea52])) [0 halg+0 S2 A16])) certify.c:300 -1
     (nil))
(insn 813 812 814 106 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5282 [0xffffffffffffeb5e])) [0 in.inScheme.details.ecdsa.hashAlg+0 S2 A16])
        (reg:HI 358)) certify.c:300 -1
     (nil))
(code_label 814 813 815 107 62 "" [2 uses])
(note 815 814 816 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 816 815 817 107 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) certify.c:304 -1
     (nil))
(jump_insn 817 816 818 107 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 836)
            (pc))) certify.c:304 -1
     (nil)
 -> 836)
(note 818 817 819 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 819 818 820 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5432 [0xffffffffffffeac8])) [0 qualifyingDataFilename+0 S8 A64])
            (const_int 0 [0]))) certify.c:305 -1
     (nil))
(jump_insn 820 819 821 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 833)
            (pc))) certify.c:305 -1
     (nil)
 -> 833)
(note 821 820 822 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 822 821 823 109 (set (reg:DI 359)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5432 [0xffffffffffffeac8])) [0 qualifyingDataFilename+0 S8 A64])) certify.c:306 -1
     (nil))
(insn 823 822 824 109 (parallel [
            (set (reg:DI 360)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5424 [0xffffffffffffead0])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:306 -1
     (nil))
(insn 824 823 825 109 (parallel [
            (set (reg:DI 361)
                (plus:DI (reg:DI 360)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:306 -1
     (nil))
(insn 825 824 826 109 (set (reg:DI 1 dx)
        (reg:DI 359)) certify.c:306 -1
     (nil))
(insn 826 825 827 109 (set (reg:SI 4 si)
        (const_int 130 [0x82])) certify.c:306 -1
     (nil))
(insn 827 826 828 109 (set (reg:DI 5 di)
        (reg:DI 361)) certify.c:306 -1
     (nil))
(call_insn 828 827 829 109 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_Read2B") [flags 0x41]  <function_decl 0x7f8cd8e46ca8 TSS_File_Read2B>) [0 TSS_File_Read2B S1 A8])
            (const_int 0 [0]))) certify.c:306 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 829 828 830 109 (set (reg:SI 362)
        (reg:SI 0 ax)) certify.c:306 -1
     (nil))
(insn 830 829 831 109 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
        (reg:SI 362)) certify.c:306 -1
     (nil))
(jump_insn 831 830 832 109 (set (pc)
        (label_ref 836)) -1
     (nil)
 -> 836)
(barrier 832 831 833)
(code_label 833 832 834 110 65 "" [1 uses])
(note 834 833 835 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 835 834 836 110 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5416 [0xffffffffffffead8])) [0 in.qualifyingData.t.size+0 S2 A64])
        (const_int 0 [0])) certify.c:311 -1
     (nil))
(code_label 836 835 837 111 64 "" [2 uses])
(note 837 836 838 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 838 837 839 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) certify.c:315 -1
     (nil))
(jump_insn 839 838 840 111 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 846)
            (pc))) certify.c:315 -1
     (nil)
 -> 846)
(note 840 839 841 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 841 840 842 112 (parallel [
            (set (reg:DI 363)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5496 [0xffffffffffffea88])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:316 -1
     (nil))
(insn 842 841 843 112 (set (reg:DI 5 di)
        (reg:DI 363)) certify.c:316 -1
     (nil))
(call_insn 843 842 844 112 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Create") [flags 0x41]  <function_decl 0x7f8cd8e3eca8 TSS_Create>) [0 TSS_Create S1 A8])
            (const_int 0 [0]))) certify.c:316 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 844 843 845 112 (set (reg:SI 364)
        (reg:SI 0 ax)) certify.c:316 -1
     (nil))
(insn 845 844 846 112 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
        (reg:SI 364)) certify.c:316 -1
     (nil))
(code_label 846 845 847 113 66 "" [1 uses])
(note 847 846 848 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 848 847 849 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) certify.c:319 -1
     (nil))
(jump_insn 849 848 850 113 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 883)
            (pc))) certify.c:319 -1
     (nil)
 -> 883)
(note 850 849 851 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 851 850 852 114 (set (reg:SI 241 [ D.8236 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5520 [0xffffffffffffea70])) [0 sessionAttributes2+0 S4 A64])) certify.c:320 -1
     (nil))
(insn 852 851 853 114 (set (reg:SI 242 [ D.8236 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5524 [0xffffffffffffea6c])) [0 sessionHandle2+0 S4 A32])) certify.c:320 -1
     (nil))
(insn 853 852 854 114 (set (reg:SI 243 [ D.8236 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5528 [0xffffffffffffea68])) [0 sessionAttributes1+0 S4 A64])) certify.c:320 -1
     (nil))
(insn 854 853 855 114 (set (reg:SI 244 [ D.8236 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5532 [0xffffffffffffea64])) [0 sessionHandle1+0 S4 A32])) certify.c:320 -1
     (nil))
(insn 855 854 856 114 (set (reg:SI 245 [ D.8236 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5536 [0xffffffffffffea60])) [0 sessionAttributes0+0 S4 A64])) certify.c:320 -1
     (nil))
(insn 856 855 857 114 (set (reg:SI 246 [ D.8236 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5540 [0xffffffffffffea5c])) [0 sessionHandle0+0 S4 A32])) certify.c:320 -1
     (nil))
(insn 857 856 858 114 (set (reg/f:DI 247 [ D.8237 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5496 [0xffffffffffffea88])) [0 tssContext+0 S8 A64])) certify.c:320 -1
     (nil))
(insn 858 857 859 114 (parallel [
            (set (reg:DI 365)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5424 [0xffffffffffffead0])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:320 -1
     (nil))
(insn 859 858 860 114 (parallel [
            (set (reg:DI 366)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2768 [0xfffffffffffff530])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:320 -1
     (nil))
(insn 860 859 861 114 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:320 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 861 860 862 114 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) certify.c:320 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 862 861 863 114 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) certify.c:320 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 863 862 864 114 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1073741831 [0x40000007])) certify.c:320 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 864 863 865 114 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 241 [ D.8236 ])) certify.c:320 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 865 864 866 114 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) certify.c:320 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 866 865 867 114 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 242 [ D.8236 ])) certify.c:320 -1
     (expr_list:REG_ARGS_SIZE (const_int 56 [0x38])
        (nil)))
(insn 867 866 868 114 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 243 [ D.8236 ])) certify.c:320 -1
     (expr_list:REG_ARGS_SIZE (const_int 64 [0x40])
        (nil)))
(insn 868 867 869 114 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5464 [0xffffffffffffeaa8])) [0 keyPassword+0 S8 A64])) certify.c:320 -1
     (expr_list:REG_ARGS_SIZE (const_int 72 [0x48])
        (nil)))
(insn 869 868 870 114 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 244 [ D.8236 ])) certify.c:320 -1
     (expr_list:REG_ARGS_SIZE (const_int 80 [0x50])
        (nil)))
(insn 870 869 871 114 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 245 [ D.8236 ])) certify.c:320 -1
     (expr_list:REG_ARGS_SIZE (const_int 88 [0x58])
        (nil)))
(insn 871 870 872 114 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5456 [0xffffffffffffeab0])) [0 objectPassword+0 S8 A64])) certify.c:320 -1
     (expr_list:REG_ARGS_SIZE (const_int 96 [0x60])
        (nil)))
(insn 872 871 873 114 (set (reg:SI 38 r9)
        (reg:SI 246 [ D.8236 ])) certify.c:320 -1
     (nil))
(insn 873 872 874 114 (set (reg:SI 37 r8)
        (const_int 328 [0x148])) certify.c:320 -1
     (nil))
(insn 874 873 875 114 (set (reg:DI 2 cx)
        (const_int 0 [0])) certify.c:320 -1
     (nil))
(insn 875 874 876 114 (set (reg:DI 1 dx)
        (reg:DI 365)) certify.c:320 -1
     (nil))
(insn 876 875 877 114 (set (reg:DI 4 si)
        (reg:DI 366)) certify.c:320 -1
     (nil))
(insn 877 876 878 114 (set (reg:DI 5 di)
        (reg/f:DI 247 [ D.8237 ])) certify.c:320 -1
     (nil))
(insn 878 877 879 114 (set (reg:QI 0 ax)
        (const_int 0 [0])) certify.c:320 -1
     (nil))
(call_insn 879 878 880 114 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7f8cd8e3ee58 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 96 [0x60]))) certify.c:320 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 880 879 881 114 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:320 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 881 880 882 114 (set (reg:SI 367)
        (reg:SI 0 ax)) certify.c:320 -1
     (nil))
(insn 882 881 883 114 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
        (reg:SI 367)) certify.c:320 -1
     (nil))
(code_label 883 882 884 115 67 "" [1 uses])
(note 884 883 885 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 885 884 886 115 (set (reg/f:DI 248 [ D.8237 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5496 [0xffffffffffffea88])) [0 tssContext+0 S8 A64])) certify.c:331 -1
     (nil))
(insn 886 885 887 115 (set (reg:DI 5 di)
        (reg/f:DI 248 [ D.8237 ])) certify.c:331 -1
     (nil))
(call_insn 887 886 888 115 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Delete") [flags 0x41]  <function_decl 0x7f8cd8e3ed80 TSS_Delete>) [0 TSS_Delete S1 A8])
            (const_int 0 [0]))) certify.c:331 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 888 887 889 115 (set (reg:SI 368)
        (reg:SI 0 ax)) certify.c:331 -1
     (nil))
(insn 889 888 890 115 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5504 [0xffffffffffffea80])) [0 rc1+0 S4 A32])
        (reg:SI 368)) certify.c:331 -1
     (nil))
(insn 890 889 891 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) certify.c:332 -1
     (nil))
(jump_insn 891 890 892 115 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 895)
            (pc))) certify.c:332 -1
     (nil)
 -> 895)
(note 892 891 893 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 893 892 894 116 (set (reg:SI 369)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5504 [0xffffffffffffea80])) [0 rc1+0 S4 A32])) certify.c:333 -1
     (nil))
(insn 894 893 895 116 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
        (reg:SI 369)) certify.c:333 -1
     (nil))
(code_label 895 894 896 117 68 "" [1 uses])
(note 896 895 897 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 897 896 898 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) certify.c:336 -1
     (nil))
(jump_insn 898 897 899 117 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 925)
            (pc))) certify.c:336 -1
     (nil)
 -> 925)
(note 899 898 900 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 900 899 901 118 (parallel [
            (set (reg:DI 370)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2768 [0xfffffffffffff530])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:337 -1
     (nil))
(insn 901 900 902 118 (parallel [
            (set (reg:DI 371)
                (plus:DI (reg:DI 370)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:337 -1
     (nil))
(insn 902 901 903 118 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5472 [0xffffffffffffeaa0])) [0 tmpBuffer+0 S8 A64])
        (reg:DI 371)) certify.c:337 -1
     (nil))
(insn 903 902 904 118 (set (reg:HI 249 [ D.8238 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2768 [0xfffffffffffff530])) [0 out.certifyInfo.t.size+0 S2 A64])) certify.c:338 -1
     (nil))
(insn 904 903 905 118 (set (reg:SI 250 [ D.8235 ])
        (zero_extend:SI (reg:HI 249 [ D.8238 ]))) certify.c:338 -1
     (nil))
(insn 905 904 906 118 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5480 [0xffffffffffffea98])) [0 tmpSize+0 S4 A64])
        (reg:SI 250 [ D.8235 ])) certify.c:338 -1
     (nil))
(insn 906 905 907 118 (parallel [
            (set (reg:DI 372)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5480 [0xffffffffffffea98])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:339 -1
     (nil))
(insn 907 906 908 118 (parallel [
            (set (reg:DI 373)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5472 [0xffffffffffffeaa0])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:339 -1
     (nil))
(insn 908 907 909 118 (parallel [
            (set (reg:DI 374)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5264 [0xffffffffffffeb70])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:339 -1
     (nil))
(insn 909 908 910 118 (set (reg:DI 1 dx)
        (reg:DI 372)) certify.c:339 -1
     (nil))
(insn 910 909 911 118 (set (reg:DI 4 si)
        (reg:DI 373)) certify.c:339 -1
     (nil))
(insn 911 910 912 118 (set (reg:DI 5 di)
        (reg:DI 374)) certify.c:339 -1
     (nil))
(call_insn 912 911 913 118 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMS_ATTEST_Unmarshal") [flags 0x41]  <function_decl 0x7f8cd8b2f6c0 TPMS_ATTEST_Unmarshal>) [0 TPMS_ATTEST_Unmarshal S1 A8])
            (const_int 0 [0]))) certify.c:339 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 913 912 914 118 (set (reg:SI 375)
        (reg:SI 0 ax)) certify.c:339 -1
     (nil))
(insn 914 913 915 118 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
        (reg:SI 375)) certify.c:339 -1
     (nil))
(insn 915 914 916 118 (set (reg:SI 251 [ D.8235 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f8cd8ca2090 verbose>) [0 verbose+0 S4 A32])) certify.c:340 -1
     (nil))
(insn 916 915 917 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 251 [ D.8235 ])
            (const_int 0 [0]))) certify.c:340 -1
     (nil))
(jump_insn 917 916 918 118 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 925)
            (pc))) certify.c:340 612 {*jcc_1}
     (nil)
 -> 925)
(note 918 917 919 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 919 918 920 119 (parallel [
            (set (reg:DI 376)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5264 [0xffffffffffffeb70])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:340 -1
     (nil))
(insn 920 919 921 119 (set (reg:SI 4 si)
        (const_int 0 [0])) certify.c:340 -1
     (nil))
(insn 921 920 922 119 (set (reg:DI 5 di)
        (reg:DI 376)) certify.c:340 -1
     (nil))
(call_insn 922 921 925 119 (call (mem:QI (symbol_ref:DI ("TSS_TPMS_ATTEST_Print") [flags 0x41]  <function_decl 0x7f8cd8e37870 TSS_TPMS_ATTEST_Print>) [0 TSS_TPMS_ATTEST_Print S1 A8])
        (const_int 0 [0])) certify.c:340 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(code_label 925 922 926 121 69 "" [2 uses])
(note 926 925 927 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 927 926 928 121 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) certify.c:344 -1
     (nil))
(jump_insn 928 927 929 121 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 949)
            (pc))) certify.c:344 -1
     (nil)
 -> 949)
(note 929 928 930 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 930 929 931 122 (set (reg:HI 252 [ D.8238 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5284 [0xffffffffffffeb5c])) [0 in.inScheme.scheme+0 S2 A32])) certify.c:344 -1
     (nil))
(insn 931 930 932 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 252 [ D.8238 ])
            (const_int 26 [0x1a]))) certify.c:344 -1
     (nil))
(jump_insn 932 931 933 122 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 949)
            (pc))) certify.c:344 -1
     (nil)
 -> 949)
(note 933 932 934 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 934 933 935 123 (parallel [
            (set (reg:DI 377)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5264 [0xffffffffffffeb70])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:346 -1
     (nil))
(insn 935 934 936 123 (parallel [
            (set (reg:DI 378)
                (plus:DI (reg:DI 377)
                    (const_int 140 [0x8c])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:346 -1
     (nil))
(insn 936 935 937 123 (parallel [
            (set (reg:DI 379)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5424 [0xffffffffffffead0])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:346 -1
     (nil))
(insn 937 936 938 123 (parallel [
            (set (reg:DI 380)
                (plus:DI (reg:DI 379)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:346 -1
     (nil))
(insn 938 937 939 123 (set (reg:DI 4 si)
        (reg:DI 378)) certify.c:346 -1
     (nil))
(insn 939 938 940 123 (set (reg:DI 5 di)
        (reg:DI 380)) certify.c:346 -1
     (nil))
(call_insn 940 939 941 123 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_TPM2B_Compare") [flags 0x41]  <function_decl 0x7f8cd8e46798 TSS_TPM2B_Compare>) [0 TSS_TPM2B_Compare S1 A8])
            (const_int 0 [0]))) certify.c:346 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 941 940 942 123 (set (reg:SI 381)
        (reg:SI 0 ax)) certify.c:346 -1
     (nil))
(insn 942 941 943 123 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5500 [0xffffffffffffea84])) [0 match+0 S4 A32])
        (reg:SI 381)) certify.c:346 -1
     (nil))
(insn 943 942 944 123 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5500 [0xffffffffffffea84])) [0 match+0 S4 A32])
            (const_int 0 [0]))) certify.c:347 -1
     (nil))
(jump_insn 944 943 945 123 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 949)
            (pc))) certify.c:347 -1
     (nil)
 -> 949)
(note 945 944 946 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 946 945 947 124 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC42") [flags 0x2]  <var_decl 0x7f8cd8bdd900 *.LC42>)) certify.c:348 -1
     (nil))
(call_insn 947 946 948 124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:348 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 948 947 949 124 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) certify.c:349 -1
     (nil))
(code_label 949 948 950 125 71 "" [3 uses])
(note 950 949 951 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 951 950 952 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) certify.c:352 -1
     (nil))
(jump_insn 952 951 953 125 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 967)
            (pc))) certify.c:352 -1
     (nil)
 -> 967)
(note 953 952 954 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 954 953 955 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5448 [0xffffffffffffeab8])) [0 signatureFilename+0 S8 A64])
            (const_int 0 [0]))) certify.c:352 -1
     (nil))
(jump_insn 955 954 956 126 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 967)
            (pc))) certify.c:352 -1
     (nil)
 -> 967)
(note 956 955 957 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 957 956 958 127 (set (reg:DI 382)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5448 [0xffffffffffffeab8])) [0 signatureFilename+0 S8 A64])) certify.c:353 -1
     (nil))
(insn 958 957 959 127 (parallel [
            (set (reg:DI 383)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2768 [0xfffffffffffff530])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:353 -1
     (nil))
(insn 959 958 960 127 (parallel [
            (set (reg:DI 384)
                (plus:DI (reg:DI 383)
                    (const_int 2498 [0x9c2])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:353 -1
     (nil))
(insn 960 959 961 127 (set (reg:DI 1 dx)
        (reg:DI 382)) certify.c:353 -1
     (nil))
(insn 961 960 962 127 (set (reg:DI 385)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("TSS_TPMT_SIGNATURE_Marshal") [flags 0x41]  <function_decl 0x7f8cd8af9288 TSS_TPMT_SIGNATURE_Marshal>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) certify.c:353 -1
     (nil))
(insn 962 961 963 127 (set (reg:DI 4 si)
        (reg:DI 385)) certify.c:353 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("TSS_TPMT_SIGNATURE_Marshal") [flags 0x41]  <function_decl 0x7f8cd8af9288 TSS_TPMT_SIGNATURE_Marshal>)
        (nil)))
(insn 963 962 964 127 (set (reg:DI 5 di)
        (reg:DI 384)) certify.c:353 -1
     (nil))
(call_insn 964 963 965 127 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_WriteStructure") [flags 0x41]  <function_decl 0x7f8cd8e46bd0 TSS_File_WriteStructure>) [0 TSS_File_WriteStructure S1 A8])
            (const_int 0 [0]))) certify.c:353 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 965 964 966 127 (set (reg:SI 386)
        (reg:SI 0 ax)) certify.c:353 -1
     (nil))
(insn 966 965 967 127 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
        (reg:SI 386)) certify.c:353 -1
     (nil))
(code_label 967 966 968 128 72 "" [2 uses])
(note 968 967 969 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 969 968 970 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) certify.c:357 -1
     (nil))
(jump_insn 970 969 971 128 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 986)
            (pc))) certify.c:357 -1
     (nil)
 -> 986)
(note 971 970 972 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 972 971 973 129 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5440 [0xffffffffffffeac0])) [0 attestInfoFilename+0 S8 A64])
            (const_int 0 [0]))) certify.c:357 -1
     (nil))
(jump_insn 973 972 974 129 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 986)
            (pc))) certify.c:357 -1
     (nil)
 -> 986)
(note 974 973 975 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 975 974 976 130 (set (reg:HI 253 [ D.8238 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2768 [0xfffffffffffff530])) [0 out.certifyInfo.t.size+0 S2 A64])) certify.c:359 -1
     (nil))
(insn 976 975 977 130 (set (reg:DI 254 [ D.8232 ])
        (zero_extend:DI (reg:HI 253 [ D.8238 ]))) certify.c:358 -1
     (nil))
(insn 977 976 978 130 (set (reg:DI 387)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5440 [0xffffffffffffeac0])) [0 attestInfoFilename+0 S8 A64])) certify.c:358 -1
     (nil))
(insn 978 977 979 130 (parallel [
            (set (reg:DI 388)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2768 [0xfffffffffffff530])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:358 -1
     (nil))
(insn 979 978 980 130 (parallel [
            (set (reg:DI 389)
                (plus:DI (reg:DI 388)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:358 -1
     (nil))
(insn 980 979 981 130 (set (reg:DI 1 dx)
        (reg:DI 387)) certify.c:358 -1
     (nil))
(insn 981 980 982 130 (set (reg:DI 4 si)
        (reg:DI 254 [ D.8232 ])) certify.c:358 -1
     (nil))
(insn 982 981 983 130 (set (reg:DI 5 di)
        (reg:DI 389)) certify.c:358 -1
     (nil))
(call_insn 983 982 984 130 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_WriteBinaryFile") [flags 0x41]  <function_decl 0x7f8cd8e46a20 TSS_File_WriteBinaryFile>) [0 TSS_File_WriteBinaryFile S1 A8])
            (const_int 0 [0]))) certify.c:358 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 984 983 985 130 (set (reg:SI 390)
        (reg:SI 0 ax)) certify.c:358 -1
     (nil))
(insn 985 984 986 130 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
        (reg:SI 390)) certify.c:358 -1
     (nil))
(code_label 986 985 987 131 73 "" [2 uses])
(note 987 986 988 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 988 987 989 131 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) certify.c:362 -1
     (nil))
(jump_insn 989 988 990 131 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1010)
            (pc))) certify.c:362 -1
     (nil)
 -> 1010)
(note 990 989 991 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 991 990 992 132 (set (reg:SI 255 [ D.8235 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f8cd8ca2090 verbose>) [0 verbose+0 S4 A32])) certify.c:363 -1
     (nil))
(insn 992 991 993 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 255 [ D.8235 ])
            (const_int 0 [0]))) certify.c:363 -1
     (nil))
(jump_insn 993 992 994 132 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 998)
            (pc))) certify.c:363 -1
     (nil)
 -> 998)
(note 994 993 995 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 995 994 996 133 (parallel [
            (set (reg:DI 391)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2768 [0xfffffffffffff530])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:363 -1
     (nil))
(insn 996 995 997 133 (set (reg:DI 5 di)
        (reg:DI 391)) certify.c:363 -1
     (nil))
(call_insn 997 996 998 133 (call (mem:QI (symbol_ref:DI ("printSignature") [flags 0x3]  <function_decl 0x7f8cd8b56af8 printSignature>) [0 printSignature S1 A8])
        (const_int 0 [0])) certify.c:363 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 998 997 999 134 75 "" [1 uses])
(note 999 998 1000 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 1000 999 1001 134 (set (reg:SI 256 [ D.8235 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f8cd8ca2090 verbose>) [0 verbose+0 S4 A32])) certify.c:364 -1
     (nil))
(insn 1001 1000 1002 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 256 [ D.8235 ])
            (const_int 0 [0]))) certify.c:364 -1
     (nil))
(jump_insn 1002 1001 1003 134 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1036)
            (pc))) certify.c:364 612 {*jcc_1}
     (nil)
 -> 1036)
(note 1003 1002 1004 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 1004 1003 1005 135 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC43") [flags 0x2]  <var_decl 0x7f8cd8bdd990 *.LC43>)) certify.c:364 -1
     (nil))
(call_insn 1005 1004 1008 135 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:364 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1008 1005 1009 135 (set (pc)
        (label_ref 1036)) -1
     (nil)
 -> 1036)
(barrier 1009 1008 1010)
(code_label 1010 1009 1011 137 74 "" [1 uses])
(note 1011 1010 1012 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 1012 1011 1013 137 (set (reg:SI 392)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])) certify.c:370 -1
     (nil))
(insn 1013 1012 1014 137 (set (reg:SI 4 si)
        (reg:SI 392)) certify.c:370 -1
     (nil))
(insn 1014 1013 1015 137 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC44") [flags 0x2]  <var_decl 0x7f8cd8bdda20 *.LC44>)) certify.c:370 -1
     (nil))
(insn 1015 1014 1016 137 (set (reg:QI 0 ax)
        (const_int 0 [0])) certify.c:370 -1
     (nil))
(call_insn 1016 1015 1017 137 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8cd8ee0ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) certify.c:370 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 1017 1016 1018 137 (set (reg:SI 393)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])) certify.c:371 -1
     (nil))
(insn 1018 1017 1019 137 (parallel [
            (set (reg:DI 394)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5472 [0xffffffffffffeaa0])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:371 -1
     (nil))
(insn 1019 1018 1020 137 (parallel [
            (set (reg:DI 395)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5480 [0xffffffffffffea98])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:371 -1
     (nil))
(insn 1020 1019 1021 137 (parallel [
            (set (reg:DI 396)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -5488 [0xffffffffffffea90])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:371 -1
     (nil))
(insn 1021 1020 1022 137 (set (reg:SI 2 cx)
        (reg:SI 393)) certify.c:371 -1
     (nil))
(insn 1022 1021 1023 137 (set (reg:DI 1 dx)
        (reg:DI 394)) certify.c:371 -1
     (nil))
(insn 1023 1022 1024 137 (set (reg:DI 4 si)
        (reg:DI 395)) certify.c:371 -1
     (nil))
(insn 1024 1023 1025 137 (set (reg:DI 5 di)
        (reg:DI 396)) certify.c:371 -1
     (nil))
(call_insn 1025 1024 1026 137 (call (mem:QI (symbol_ref:DI ("TSS_ResponseCode_toString") [flags 0x41]  <function_decl 0x7f8cd8e46e58 TSS_ResponseCode_toString>) [0 TSS_ResponseCode_toString S1 A8])
        (const_int 0 [0])) certify.c:371 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 1026 1025 1027 137 (set (reg/f:DI 257 [ D.8239 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5472 [0xffffffffffffeaa0])) [0 num+0 S8 A64])) certify.c:372 -1
     (nil))
(insn 1027 1026 1028 137 (set (reg/f:DI 258 [ D.8239 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5480 [0xffffffffffffea98])) [0 submsg+0 S8 A64])) certify.c:372 -1
     (nil))
(insn 1028 1027 1029 137 (set (reg/f:DI 259 [ D.8239 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5488 [0xffffffffffffea90])) [0 msg+0 S8 A64])) certify.c:372 -1
     (nil))
(insn 1029 1028 1030 137 (set (reg:DI 2 cx)
        (reg/f:DI 257 [ D.8239 ])) certify.c:372 -1
     (nil))
(insn 1030 1029 1031 137 (set (reg:DI 1 dx)
        (reg/f:DI 258 [ D.8239 ])) certify.c:372 -1
     (nil))
(insn 1031 1030 1032 137 (set (reg:DI 4 si)
        (reg/f:DI 259 [ D.8239 ])) certify.c:372 -1
     (nil))
(insn 1032 1031 1033 137 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC45") [flags 0x2]  <var_decl 0x7f8cd8bddab0 *.LC45>)) certify.c:372 -1
     (nil))
(insn 1033 1032 1034 137 (set (reg:QI 0 ax)
        (const_int 0 [0])) certify.c:372 -1
     (nil))
(call_insn 1034 1033 1035 137 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8cd8ee0ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) certify.c:372 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 1035 1034 1036 137 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) certify.c:373 -1
     (nil))
(code_label 1036 1035 1037 138 77 "" [2 uses])
(note 1037 1036 1038 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 1038 1037 1041 138 (set (reg:SI 260 [ D.8235 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5516 [0xffffffffffffea74])) [0 rc+0 S4 A32])) certify.c:375 -1
     (nil))
(insn 1041 1038 1045 138 (set (reg:SI 261 [ <retval> ])
        (reg:SI 260 [ D.8235 ])) -1
     (nil))
(insn 1045 1041 1046 138 (set (reg/i:SI 0 ax)
        (reg:SI 261 [ <retval> ])) certify.c:376 -1
     (nil))
(insn 1046 1045 1047 138 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.8241+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) certify.c:376 -1
     (nil))
(jump_insn 1047 1046 1053 138 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1050)
            (pc))) certify.c:376 -1
     (nil)
 -> 1050)
(note 1053 1047 1048 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(call_insn 1048 1053 1049 141 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8cd8ba9e58 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) certify.c:376 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 1049 1048 1050)
(code_label 1050 1049 1054 142 79 "" [1 uses])
(note 1054 1050 1051 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 1051 1054 0 142 (use (reg/i:SI 0 ax)) certify.c:376 -1
     (nil))

;; Function printSignature (printSignature, funcdef_no=3, decl_uid=7851, cgraph_uid=3, symbol_order=4)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 out+0 S8 A64])
        (reg:DI 5 di [ out ])) certify.c:379 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 out+0 S8 A64])) certify.c:382 -1
     (nil))
(insn 7 6 8 2 (set (reg:HI 87 [ D.8290 ])
        (mem/j:HI (plus:DI (reg/f:DI 90)
                (const_int 2502 [0x9c6])) [0 out_2(D)->signature.signature.rsassa.sig.t.size+0 S2 A16])) certify.c:382 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.8291 ])
        (zero_extend:SI (reg:HI 87 [ D.8290 ]))) certify.c:380 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 out+0 S8 A64])) certify.c:381 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg/f:DI 89 [ D.8292 ])
                (plus:DI (reg/f:DI 91)
                    (const_int 2504 [0x9c8])))
            (clobber (reg:CC 17 flags))
        ]) certify.c:381 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 out+0 S8 A64])
            (const_int 2504 [0x9c8]))
        (nil)))
(insn 11 10 12 2 (set (reg:SI 1 dx)
        (reg:SI 88 [ D.8291 ])) certify.c:380 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg/f:DI 89 [ D.8292 ])) certify.c:380 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC46") [flags 0x2]  <var_decl 0x7f8cd8c0c240 *.LC46>)) certify.c:380 -1
     (nil))
(call_insn 14 13 17 2 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7f8cd8e0d948 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) certify.c:380 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 17 14 0 2 (const_int 0 [0]) certify.c:383 -1
     (nil))

;; Function printUsage (printUsage, funcdef_no=4, decl_uid=7849, cgraph_uid=4, symbol_order=5)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) certify.c:387 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f8cd8ee3000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) certify.c:387 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC47") [flags 0x2]  <var_decl 0x7f8cd8c0c5a0 *.LC47>)) certify.c:388 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:388 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) certify.c:389 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f8cd8ee3000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) certify.c:389 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC48") [flags 0x2]  <var_decl 0x7f8cd8c0c630 *.LC48>)) certify.c:390 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:390 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) certify.c:391 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f8cd8ee3000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) certify.c:391 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC49") [flags 0x2]  <var_decl 0x7f8cd8c0c6c0 *.LC49>)) certify.c:392 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:392 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC50") [flags 0x2]  <var_decl 0x7f8cd8c0c750 *.LC50>)) certify.c:393 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:393 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC51") [flags 0x2]  <var_decl 0x7f8cd8c0c7e0 *.LC51>)) certify.c:394 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:394 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC52") [flags 0x2]  <var_decl 0x7f8cd8c0c870 *.LC52>)) certify.c:395 -1
     (nil))
(call_insn 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:395 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC53") [flags 0x2]  <var_decl 0x7f8cd8c0c900 *.LC53>)) certify.c:396 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:396 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC54") [flags 0x2]  <var_decl 0x7f8cd8c0c990 *.LC54>)) certify.c:397 -1
     (nil))
(call_insn 26 25 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:397 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC55") [flags 0x2]  <var_decl 0x7f8cd8c0ca20 *.LC55>)) certify.c:398 -1
     (nil))
(call_insn 28 27 29 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:398 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC56") [flags 0x2]  <var_decl 0x7f8cd8c0cab0 *.LC56>)) certify.c:399 -1
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:399 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC57") [flags 0x2]  <var_decl 0x7f8cd8c0cb40 *.LC57>)) certify.c:400 -1
     (nil))
(call_insn 32 31 33 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:400 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 33 32 34 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) certify.c:401 -1
     (nil))
(call_insn 34 33 35 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f8cd8ee3000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) certify.c:401 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC58") [flags 0x2]  <var_decl 0x7f8cd8c0cbd0 *.LC58>)) certify.c:402 -1
     (nil))
(call_insn 36 35 37 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:402 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC59") [flags 0x2]  <var_decl 0x7f8cd8c0cc60 *.LC59>)) certify.c:403 -1
     (nil))
(call_insn 38 37 39 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:403 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 39 38 40 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC60") [flags 0x2]  <var_decl 0x7f8cd8c0ccf0 *.LC60>)) certify.c:404 -1
     (nil))
(call_insn 40 39 41 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:404 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 41 40 42 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC61") [flags 0x2]  <var_decl 0x7f8cd8c0cd80 *.LC61>)) certify.c:405 -1
     (nil))
(call_insn 42 41 43 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8cd8ee3360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) certify.c:405 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 43 42 44 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) certify.c:406 -1
     (nil))
(call_insn 44 43 45 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f8cd8ef6000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) certify.c:406 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 45 44 0)
