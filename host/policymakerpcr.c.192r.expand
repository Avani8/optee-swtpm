
;; Function main (main, funcdef_no=2, decl_uid=12736, cgraph_uid=2, symbol_order=3)

Partition 14: size 3072 align 16
	pcr
Partition 16: size 1152 align 16
	pcrBytes	lineString
Partition 15: size 130 align 16
	digest
Partition 13: size 24 align 16
	pcrs
Partition 6: size 8 align 8
	outFile_22
Partition 5: size 8 align 8
	inFile_21
Partition 4: size 8 align 8
	outFilename_18
Partition 3: size 8 align 8
	inFilename_15
Partition 2: size 8 align 8
	prc_13
Partition 19: size 8 align 8
	buffer
Partition 11: size 4 align 4
	pc_30
Partition 10: size 4 align 4
	lineLength_28
Partition 9: size 4 align 4
	pr_26
Partition 8: size 4 align 4
	pcrCount_25
Partition 7: size 4 align 4
	sizeInBytes_24
Partition 1: size 4 align 4
	i_11
Partition 0: size 4 align 4
	rc_1
Partition 20: size 4 align 4
	size
Partition 12: size 4 align 4
	pcrmask
Partition 17: size 2 align 2
	pcrLength

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; Generating RTL for gimple basic block 110


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 56 from 11 to 38.
Redirecting jump 74 from 11 to 38.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Redirecting jump 83 from 13 to 38.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Edge 16->18 redirected to 38
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Redirecting jump 143 from 20 to 38.
Merging block 20 into block 19...
Merged blocks 19 and 20.
Merged 19 and 20 without moving.
Redirecting jump 181 from 25 to 38.
Merging block 25 into block 24...
Merged blocks 24 and 25.
Merged 24 and 25 without moving.
Redirecting jump 219 from 30 to 38.
Merging block 30 into block 29...
Merged blocks 29 and 30.
Merged 29 and 30 without moving.
Forwarding edge 61->62 to 84 failed.
Redirecting jump 435 from 80 to 84.
Forwarding edge 64->65 to 80 failed.
Edge 87->89 redirected to 90
Forwarding edge 88->89 to 90 failed.
Deleted label in block 89.
Merging block 111 into block 110...
Merged blocks 110 and 111.
Merged 110 and 111 without moving.
Removing jump 721.
Merging block 112 into block 110...
Merged blocks 110 and 112.
Merged 110 and 112 without moving.


try_optimize_cfg iteration 2

Forwarding edge 61->62 to 84 failed.
Forwarding edge 64->65 to 80 failed.
Forwarding edge 88->89 to 90 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4516 [0xffffffffffffee5c])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) policymakerpcr.c:105 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) policymakerpcr.c:105 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13104+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:105 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
        (const_int 0 [0])) policymakerpcr.c:106 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4456 [0xffffffffffffee98])) [0 prc+0 S8 A64])
        (const_int 0 [0])) policymakerpcr.c:108 -1
     (nil))
(insn 10 9 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4448 [0xffffffffffffeea0])) [0 inFilename+0 S8 A64])
        (const_int 0 [0])) policymakerpcr.c:109 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4440 [0xffffffffffffeea8])) [0 outFilename+0 S8 A64])
        (const_int 0 [0])) policymakerpcr.c:110 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4432 [0xffffffffffffeeb0])) [0 inFile+0 S8 A64])
        (const_int 0 [0])) policymakerpcr.c:111 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4424 [0xffffffffffffeeb8])) [0 outFile+0 S8 A64])
        (const_int 0 [0])) policymakerpcr.c:112 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4500 [0xffffffffffffee6c])) [0 pcrmask+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) policymakerpcr.c:114 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4480 [0xffffffffffffee80])) [0 pcrCount+0 S4 A32])
        (const_int 0 [0])) policymakerpcr.c:116 -1
     (nil))
(insn 16 15 17 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4476 [0xffffffffffffee84])) [0 pr+0 S4 A32])
        (const_int 0 [0])) policymakerpcr.c:118 -1
     (nil))
(insn 17 16 18 2 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4384 [0xffffffffffffeee0])) [0 digest.hashAlg+0 S2 A64])
        (const_int 11 [0xb])) policymakerpcr.c:124 -1
     (nil))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref:DI ("ERR_load_crypto_strings") [flags 0x41]  <function_decl 0x7f3a894cb798 ERR_load_crypto_strings>) [0 ERR_load_crypto_strings S1 A8])
        (const_int 0 [0])) policymakerpcr.c:126 -1
     (nil)
    (nil))
(call_insn 19 18 20 2 (call (mem:QI (symbol_ref:DI ("OPENSSL_add_all_algorithms_noconf") [flags 0x41]  <function_decl 0x7f3a892b8948 OPENSSL_add_all_algorithms_noconf>) [0 OPENSSL_add_all_algorithms_noconf S1 A8])
        (const_int 0 [0])) policymakerpcr.c:127 -1
     (nil)
    (nil))
(insn 20 19 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) policymakerpcr.c:129 -1
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (label_ref 304)) policymakerpcr.c:129 -1
     (nil)
 -> 304)
(barrier 22 21 310)
(code_label 310 22 23 4 24 "" [1 uses])
(note 23 310 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:SI 194)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:130 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 87 [ D.13092 ])
        (sign_extend:DI (reg:SI 194))) policymakerpcr.c:130 -1
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg:DI 88 [ D.13092 ])
                (ashift:DI (reg:DI 87 [ D.13092 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:130 -1
     (nil))
(insn 27 26 28 4 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])) policymakerpcr.c:130 -1
     (nil))
(insn 28 27 29 4 (parallel [
            (set (reg/f:DI 89 [ D.13093 ])
                (plus:DI (reg:DI 88 [ D.13092 ])
                    (reg/f:DI 195)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:130 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])
            (reg:DI 88 [ D.13092 ]))
        (nil)))
(insn 29 28 30 4 (set (reg/f:DI 90 [ D.13094 ])
        (mem/f:DI (reg/f:DI 89 [ D.13093 ]) [0 *_80+0 S8 A64])) policymakerpcr.c:130 -1
     (nil))
(insn 30 29 31 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f3a892b22d0 *.LC0>)) policymakerpcr.c:130 -1
     (nil))
(insn 31 30 32 4 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.13094 ])) policymakerpcr.c:130 -1
     (nil))
(call_insn/i 32 31 33 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f3a899410d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:130 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 33 32 34 4 (set (reg:SI 91 [ D.13095 ])
        (reg:SI 0 ax)) policymakerpcr.c:130 -1
     (nil))
(insn 34 33 35 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.13095 ])
            (const_int 0 [0]))) policymakerpcr.c:130 -1
     (nil))
(jump_insn 35 34 36 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) policymakerpcr.c:130 -1
     (nil)
 -> 94)
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:131 -1
     (nil))
(insn 38 37 39 5 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:132 -1
     (nil))
(insn 39 38 40 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 196)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4516 [0xffffffffffffee5c])) [0 argc+0 S4 A32]))) policymakerpcr.c:132 -1
     (nil))
(jump_insn 40 39 41 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) policymakerpcr.c:132 -1
     (nil)
 -> 85)
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg:SI 197)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:133 -1
     (nil))
(insn 43 42 44 6 (set (reg:DI 92 [ D.13092 ])
        (sign_extend:DI (reg:SI 197))) policymakerpcr.c:133 -1
     (nil))
(insn 44 43 45 6 (parallel [
            (set (reg:DI 93 [ D.13092 ])
                (ashift:DI (reg:DI 92 [ D.13092 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:133 -1
     (nil))
(insn 45 44 46 6 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])) policymakerpcr.c:133 -1
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg/f:DI 94 [ D.13093 ])
                (plus:DI (reg:DI 93 [ D.13092 ])
                    (reg/f:DI 198)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:133 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])
            (reg:DI 93 [ D.13092 ]))
        (nil)))
(insn 47 46 48 6 (set (reg/f:DI 95 [ D.13094 ])
        (mem/f:DI (reg/f:DI 94 [ D.13093 ]) [0 *_86+0 S8 A64])) policymakerpcr.c:133 -1
     (nil))
(insn 48 47 49 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f3a892b2360 *.LC1>)) policymakerpcr.c:133 -1
     (nil))
(insn 49 48 50 6 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.13094 ])) policymakerpcr.c:133 -1
     (nil))
(call_insn/i 50 49 51 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f3a899410d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:133 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 51 50 52 6 (set (reg:SI 96 [ D.13095 ])
        (reg:SI 0 ax)) policymakerpcr.c:133 -1
     (nil))
(insn 52 51 53 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.13095 ])
            (const_int 0 [0]))) policymakerpcr.c:133 -1
     (nil))
(jump_insn 53 52 54 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) policymakerpcr.c:133 -1
     (nil)
 -> 58)
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 7 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4384 [0xffffffffffffeee0])) [0 digest.hashAlg+0 S2 A64])
        (const_int 11 [0xb])) policymakerpcr.c:134 -1
     (nil))
(jump_insn 56 55 57 7 (set (pc)
        (label_ref:DI 301)) 654 {jump}
     (nil)
 -> 301)
(barrier 57 56 58)
(code_label 58 57 59 8 5 "" [1 uses])
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 8 (set (reg:SI 199)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:136 -1
     (nil))
(insn 61 60 62 8 (set (reg:DI 97 [ D.13092 ])
        (sign_extend:DI (reg:SI 199))) policymakerpcr.c:136 -1
     (nil))
(insn 62 61 63 8 (parallel [
            (set (reg:DI 98 [ D.13092 ])
                (ashift:DI (reg:DI 97 [ D.13092 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:136 -1
     (nil))
(insn 63 62 64 8 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])) policymakerpcr.c:136 -1
     (nil))
(insn 64 63 65 8 (parallel [
            (set (reg/f:DI 99 [ D.13093 ])
                (plus:DI (reg:DI 98 [ D.13092 ])
                    (reg/f:DI 200)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:136 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])
            (reg:DI 98 [ D.13092 ]))
        (nil)))
(insn 65 64 66 8 (set (reg/f:DI 100 [ D.13094 ])
        (mem/f:DI (reg/f:DI 99 [ D.13093 ]) [0 *_92+0 S8 A64])) policymakerpcr.c:136 -1
     (nil))
(insn 66 65 67 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f3a892b23f0 *.LC2>)) policymakerpcr.c:136 -1
     (nil))
(insn 67 66 68 8 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.13094 ])) policymakerpcr.c:136 -1
     (nil))
(call_insn/i 68 67 69 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f3a899410d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:136 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 69 68 70 8 (set (reg:SI 101 [ D.13095 ])
        (reg:SI 0 ax)) policymakerpcr.c:136 -1
     (nil))
(insn 70 69 71 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.13095 ])
            (const_int 0 [0]))) policymakerpcr.c:136 -1
     (nil))
(jump_insn 71 70 72 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) policymakerpcr.c:136 -1
     (nil)
 -> 76)
(note 72 71 73 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 9 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4384 [0xffffffffffffeee0])) [0 digest.hashAlg+0 S2 A64])
        (const_int 4 [0x4])) policymakerpcr.c:137 -1
     (nil))
(jump_insn 74 73 75 9 (set (pc)
        (label_ref:DI 301)) 654 {jump}
     (nil)
 -> 301)
(barrier 75 74 76)
(code_label 76 75 77 10 7 "" [1 uses])
(note 77 76 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f3a892b2480 *.LC3>)) policymakerpcr.c:140 -1
     (nil))
(call_insn 79 78 80 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:140 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 80 79 83 10 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f3a892426c0 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymakerpcr.c:141 -1
     (nil)
    (nil))
(jump_insn 83 80 84 10 (set (pc)
        (label_ref:DI 301)) 654 {jump}
     (nil)
 -> 301)
(barrier 84 83 85)
(code_label 85 84 86 12 4 "" [1 uses])
(note 86 85 87 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f3a892b2510 *.LC4>)) policymakerpcr.c:145 -1
     (nil))
(call_insn 88 87 89 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:145 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 89 88 92 12 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f3a892426c0 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymakerpcr.c:146 -1
     (nil)
    (nil))
(jump_insn 92 89 93 12 (set (pc)
        (label_ref 301)) -1
     (nil)
 -> 301)
(barrier 93 92 94)
(code_label 94 93 95 14 3 "" [1 uses])
(note 95 94 96 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 14 (set (reg:SI 201)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:149 -1
     (nil))
(insn 97 96 98 14 (set (reg:DI 102 [ D.13092 ])
        (sign_extend:DI (reg:SI 201))) policymakerpcr.c:149 -1
     (nil))
(insn 98 97 99 14 (parallel [
            (set (reg:DI 103 [ D.13092 ])
                (ashift:DI (reg:DI 102 [ D.13092 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:149 -1
     (nil))
(insn 99 98 100 14 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])) policymakerpcr.c:149 -1
     (nil))
(insn 100 99 101 14 (parallel [
            (set (reg/f:DI 104 [ D.13093 ])
                (plus:DI (reg:DI 103 [ D.13092 ])
                    (reg/f:DI 202)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:149 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])
            (reg:DI 103 [ D.13092 ]))
        (nil)))
(insn 101 100 102 14 (set (reg/f:DI 105 [ D.13094 ])
        (mem/f:DI (reg/f:DI 104 [ D.13093 ]) [0 *_102+0 S8 A64])) policymakerpcr.c:149 -1
     (nil))
(insn 102 101 103 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f3a892b25a0 *.LC5>)) policymakerpcr.c:149 -1
     (nil))
(insn 103 102 104 14 (set (reg:DI 5 di)
        (reg/f:DI 105 [ D.13094 ])) policymakerpcr.c:149 -1
     (nil))
(call_insn/i 104 103 105 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f3a899410d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:149 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 105 104 106 14 (set (reg:SI 106 [ D.13095 ])
        (reg:SI 0 ax)) policymakerpcr.c:149 -1
     (nil))
(insn 106 105 107 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 106 [ D.13095 ])
            (const_int 0 [0]))) policymakerpcr.c:149 -1
     (nil))
(jump_insn 107 106 108 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 154)
            (pc))) policymakerpcr.c:149 -1
     (nil)
 -> 154)
(note 108 107 109 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:150 -1
     (nil))
(insn 110 109 111 15 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:151 -1
     (nil))
(insn 111 110 112 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 203)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4516 [0xffffffffffffee5c])) [0 argc+0 S4 A32]))) policymakerpcr.c:151 -1
     (nil))
(jump_insn 112 111 113 15 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) policymakerpcr.c:151 -1
     (nil)
 -> 145)
(note 113 112 114 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 16 (set (reg:SI 204)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:152 -1
     (nil))
(insn 115 114 116 16 (set (reg:DI 107 [ D.13092 ])
        (sign_extend:DI (reg:SI 204))) policymakerpcr.c:152 -1
     (nil))
(insn 116 115 117 16 (parallel [
            (set (reg:DI 108 [ D.13092 ])
                (ashift:DI (reg:DI 107 [ D.13092 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:152 -1
     (nil))
(insn 117 116 118 16 (set (reg/f:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])) policymakerpcr.c:152 -1
     (nil))
(insn 118 117 119 16 (parallel [
            (set (reg/f:DI 109 [ D.13093 ])
                (plus:DI (reg:DI 108 [ D.13092 ])
                    (reg/f:DI 205)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:152 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])
            (reg:DI 108 [ D.13092 ]))
        (nil)))
(insn 119 118 120 16 (set (reg/f:DI 110 [ D.13094 ])
        (mem/f:DI (reg/f:DI 109 [ D.13093 ]) [0 *_108+0 S8 A64])) policymakerpcr.c:152 -1
     (nil))
(insn 120 119 121 16 (parallel [
            (set (reg:DI 206)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4500 [0xffffffffffffee6c])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:152 -1
     (nil))
(insn 121 120 122 16 (set (reg:DI 1 dx)
        (reg:DI 206)) policymakerpcr.c:152 -1
     (nil))
(insn 122 121 123 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f3a892b2630 *.LC6>)) policymakerpcr.c:152 -1
     (nil))
(insn 123 122 124 16 (set (reg:DI 5 di)
        (reg/f:DI 110 [ D.13094 ])) policymakerpcr.c:152 -1
     (nil))
(insn 124 123 125 16 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:152 -1
     (nil))
(call_insn 125 124 126 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f3a8994aca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:152 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 126 125 127 16 (set (reg:SI 111 [ D.13095 ])
        (reg:SI 0 ax)) policymakerpcr.c:152 -1
     (nil))
(insn 127 126 128 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.13095 ])
            (const_int 1 [0x1]))) policymakerpcr.c:152 -1
     (nil))
(jump_insn 128 127 129 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 301)
            (pc))) policymakerpcr.c:152 612 {*jcc_1}
     (nil)
 -> 301)
(note 129 128 130 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 17 (set (reg:SI 207)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:153 -1
     (nil))
(insn 131 130 132 17 (set (reg:DI 112 [ D.13092 ])
        (sign_extend:DI (reg:SI 207))) policymakerpcr.c:153 -1
     (nil))
(insn 132 131 133 17 (parallel [
            (set (reg:DI 113 [ D.13092 ])
                (ashift:DI (reg:DI 112 [ D.13092 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:153 -1
     (nil))
(insn 133 132 134 17 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])) policymakerpcr.c:153 -1
     (nil))
(insn 134 133 135 17 (parallel [
            (set (reg/f:DI 114 [ D.13093 ])
                (plus:DI (reg:DI 113 [ D.13092 ])
                    (reg/f:DI 208)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:153 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])
            (reg:DI 113 [ D.13092 ]))
        (nil)))
(insn 135 134 136 17 (set (reg/f:DI 115 [ D.13094 ])
        (mem/f:DI (reg/f:DI 114 [ D.13093 ]) [0 *_114+0 S8 A64])) policymakerpcr.c:153 -1
     (nil))
(insn 136 135 137 17 (set (reg:DI 4 si)
        (reg/f:DI 115 [ D.13094 ])) policymakerpcr.c:153 -1
     (nil))
(insn 137 136 138 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f3a892b26c0 *.LC7>)) policymakerpcr.c:153 -1
     (nil))
(insn 138 137 139 17 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:153 -1
     (nil))
(call_insn 139 138 140 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f3a89947ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:153 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(call_insn 140 139 143 17 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f3a892426c0 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymakerpcr.c:154 -1
     (nil)
    (nil))
(jump_insn 143 140 144 17 (set (pc)
        (label_ref:DI 301)) 654 {jump}
     (nil)
 -> 301)
(barrier 144 143 145)
(code_label 145 144 146 19 11 "" [1 uses])
(note 146 145 147 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f3a892b2750 *.LC8>)) policymakerpcr.c:158 -1
     (nil))
(call_insn 148 147 149 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:158 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 149 148 152 19 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f3a892426c0 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymakerpcr.c:159 -1
     (nil)
    (nil))
(jump_insn 152 149 153 19 (set (pc)
        (label_ref 301)) -1
     (nil)
 -> 301)
(barrier 153 152 154)
(code_label 154 153 155 21 10 "" [1 uses])
(note 155 154 156 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 21 (set (reg:SI 209)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:162 -1
     (nil))
(insn 157 156 158 21 (set (reg:DI 116 [ D.13092 ])
        (sign_extend:DI (reg:SI 209))) policymakerpcr.c:162 -1
     (nil))
(insn 158 157 159 21 (parallel [
            (set (reg:DI 117 [ D.13092 ])
                (ashift:DI (reg:DI 116 [ D.13092 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:162 -1
     (nil))
(insn 159 158 160 21 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])) policymakerpcr.c:162 -1
     (nil))
(insn 160 159 161 21 (parallel [
            (set (reg/f:DI 118 [ D.13093 ])
                (plus:DI (reg:DI 117 [ D.13092 ])
                    (reg/f:DI 210)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:162 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])
            (reg:DI 117 [ D.13092 ]))
        (nil)))
(insn 161 160 162 21 (set (reg/f:DI 119 [ D.13094 ])
        (mem/f:DI (reg/f:DI 118 [ D.13093 ]) [0 *_122+0 S8 A64])) policymakerpcr.c:162 -1
     (nil))
(insn 162 161 163 21 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f3a892b27e0 *.LC9>)) policymakerpcr.c:162 -1
     (nil))
(insn 163 162 164 21 (set (reg:DI 5 di)
        (reg/f:DI 119 [ D.13094 ])) policymakerpcr.c:162 -1
     (nil))
(call_insn/i 164 163 165 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f3a899410d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:162 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 165 164 166 21 (set (reg:SI 120 [ D.13095 ])
        (reg:SI 0 ax)) policymakerpcr.c:162 -1
     (nil))
(insn 166 165 167 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ D.13095 ])
            (const_int 0 [0]))) policymakerpcr.c:162 -1
     (nil))
(jump_insn 167 166 168 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 192)
            (pc))) policymakerpcr.c:162 -1
     (nil)
 -> 192)
(note 168 167 169 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 22 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:163 -1
     (nil))
(insn 170 169 171 22 (set (reg:SI 211)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:164 -1
     (nil))
(insn 171 170 172 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 211)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4516 [0xffffffffffffee5c])) [0 argc+0 S4 A32]))) policymakerpcr.c:164 -1
     (nil))
(jump_insn 172 171 173 22 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) policymakerpcr.c:164 -1
     (nil)
 -> 183)
(note 173 172 174 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 23 (set (reg:SI 212)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:165 -1
     (nil))
(insn 175 174 176 23 (set (reg:DI 121 [ D.13092 ])
        (sign_extend:DI (reg:SI 212))) policymakerpcr.c:165 -1
     (nil))
(insn 176 175 177 23 (parallel [
            (set (reg:DI 122 [ D.13092 ])
                (ashift:DI (reg:DI 121 [ D.13092 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:165 -1
     (nil))
(insn 177 176 178 23 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])) policymakerpcr.c:165 -1
     (nil))
(insn 178 177 179 23 (parallel [
            (set (reg/f:DI 123 [ D.13093 ])
                (plus:DI (reg:DI 122 [ D.13092 ])
                    (reg/f:DI 213)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:165 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])
            (reg:DI 122 [ D.13092 ]))
        (nil)))
(insn 179 178 180 23 (set (reg/f:DI 214)
        (mem/f:DI (reg/f:DI 123 [ D.13093 ]) [0 *_128+0 S8 A64])) policymakerpcr.c:165 -1
     (nil))
(insn 180 179 181 23 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4440 [0xffffffffffffeea8])) [0 outFilename+0 S8 A64])
        (reg/f:DI 214)) policymakerpcr.c:165 -1
     (nil))
(jump_insn 181 180 182 23 (set (pc)
        (label_ref:DI 301)) 654 {jump}
     (nil)
 -> 301)
(barrier 182 181 183)
(code_label 183 182 184 24 15 "" [1 uses])
(note 184 183 185 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 24 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f3a892b2870 *.LC10>)) policymakerpcr.c:168 -1
     (nil))
(call_insn 186 185 187 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:168 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 187 186 190 24 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f3a892426c0 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymakerpcr.c:169 -1
     (nil)
    (nil))
(jump_insn 190 187 191 24 (set (pc)
        (label_ref 301)) -1
     (nil)
 -> 301)
(barrier 191 190 192)
(code_label 192 191 193 26 14 "" [1 uses])
(note 193 192 194 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 26 (set (reg:SI 215)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:172 -1
     (nil))
(insn 195 194 196 26 (set (reg:DI 124 [ D.13092 ])
        (sign_extend:DI (reg:SI 215))) policymakerpcr.c:172 -1
     (nil))
(insn 196 195 197 26 (parallel [
            (set (reg:DI 125 [ D.13092 ])
                (ashift:DI (reg:DI 124 [ D.13092 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:172 -1
     (nil))
(insn 197 196 198 26 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])) policymakerpcr.c:172 -1
     (nil))
(insn 198 197 199 26 (parallel [
            (set (reg/f:DI 126 [ D.13093 ])
                (plus:DI (reg:DI 125 [ D.13092 ])
                    (reg/f:DI 216)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:172 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])
            (reg:DI 125 [ D.13092 ]))
        (nil)))
(insn 199 198 200 26 (set (reg/f:DI 127 [ D.13094 ])
        (mem/f:DI (reg/f:DI 126 [ D.13093 ]) [0 *_134+0 S8 A64])) policymakerpcr.c:172 -1
     (nil))
(insn 200 199 201 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f3a892b2900 *.LC11>)) policymakerpcr.c:172 -1
     (nil))
(insn 201 200 202 26 (set (reg:DI 5 di)
        (reg/f:DI 127 [ D.13094 ])) policymakerpcr.c:172 -1
     (nil))
(call_insn/i 202 201 203 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f3a899410d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:172 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 203 202 204 26 (set (reg:SI 128 [ D.13095 ])
        (reg:SI 0 ax)) policymakerpcr.c:172 -1
     (nil))
(insn 204 203 205 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 128 [ D.13095 ])
            (const_int 0 [0]))) policymakerpcr.c:172 -1
     (nil))
(jump_insn 205 204 206 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 230)
            (pc))) policymakerpcr.c:172 -1
     (nil)
 -> 230)
(note 206 205 207 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 27 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:173 -1
     (nil))
(insn 208 207 209 27 (set (reg:SI 217)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:174 -1
     (nil))
(insn 209 208 210 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 217)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4516 [0xffffffffffffee5c])) [0 argc+0 S4 A32]))) policymakerpcr.c:174 -1
     (nil))
(jump_insn 210 209 211 27 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 221)
            (pc))) policymakerpcr.c:174 -1
     (nil)
 -> 221)
(note 211 210 212 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 28 (set (reg:SI 218)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:175 -1
     (nil))
(insn 213 212 214 28 (set (reg:DI 129 [ D.13092 ])
        (sign_extend:DI (reg:SI 218))) policymakerpcr.c:175 -1
     (nil))
(insn 214 213 215 28 (parallel [
            (set (reg:DI 130 [ D.13092 ])
                (ashift:DI (reg:DI 129 [ D.13092 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:175 -1
     (nil))
(insn 215 214 216 28 (set (reg/f:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])) policymakerpcr.c:175 -1
     (nil))
(insn 216 215 217 28 (parallel [
            (set (reg/f:DI 131 [ D.13093 ])
                (plus:DI (reg:DI 130 [ D.13092 ])
                    (reg/f:DI 219)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:175 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])
            (reg:DI 130 [ D.13092 ]))
        (nil)))
(insn 217 216 218 28 (set (reg/f:DI 220)
        (mem/f:DI (reg/f:DI 131 [ D.13093 ]) [0 *_140+0 S8 A64])) policymakerpcr.c:175 -1
     (nil))
(insn 218 217 219 28 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4448 [0xffffffffffffeea0])) [0 inFilename+0 S8 A64])
        (reg/f:DI 220)) policymakerpcr.c:175 -1
     (nil))
(jump_insn 219 218 220 28 (set (pc)
        (label_ref:DI 301)) 654 {jump}
     (nil)
 -> 301)
(barrier 220 219 221)
(code_label 221 220 222 29 18 "" [1 uses])
(note 222 221 223 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 29 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f3a892b2990 *.LC12>)) policymakerpcr.c:178 -1
     (nil))
(call_insn 224 223 225 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:178 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 225 224 228 29 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f3a892426c0 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymakerpcr.c:179 -1
     (nil)
    (nil))
(jump_insn 228 225 229 29 (set (pc)
        (label_ref 301)) -1
     (nil)
 -> 301)
(barrier 229 228 230)
(code_label 230 229 231 31 17 "" [1 uses])
(note 231 230 232 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 31 (set (reg:SI 221)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:182 -1
     (nil))
(insn 233 232 234 31 (set (reg:DI 132 [ D.13092 ])
        (sign_extend:DI (reg:SI 221))) policymakerpcr.c:182 -1
     (nil))
(insn 234 233 235 31 (parallel [
            (set (reg:DI 133 [ D.13092 ])
                (ashift:DI (reg:DI 132 [ D.13092 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:182 -1
     (nil))
(insn 235 234 236 31 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])) policymakerpcr.c:182 -1
     (nil))
(insn 236 235 237 31 (parallel [
            (set (reg/f:DI 134 [ D.13093 ])
                (plus:DI (reg:DI 133 [ D.13092 ])
                    (reg/f:DI 222)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:182 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])
            (reg:DI 133 [ D.13092 ]))
        (nil)))
(insn 237 236 238 31 (set (reg/f:DI 135 [ D.13094 ])
        (mem/f:DI (reg/f:DI 134 [ D.13093 ]) [0 *_146+0 S8 A64])) policymakerpcr.c:182 -1
     (nil))
(insn 238 237 239 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f3a892b2a20 *.LC13>)) policymakerpcr.c:182 -1
     (nil))
(insn 239 238 240 31 (set (reg:DI 5 di)
        (reg/f:DI 135 [ D.13094 ])) policymakerpcr.c:182 -1
     (nil))
(call_insn/i 240 239 241 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f3a899410d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:182 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 241 240 242 31 (set (reg:SI 136 [ D.13095 ])
        (reg:SI 0 ax)) policymakerpcr.c:182 -1
     (nil))
(insn 242 241 243 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 136 [ D.13095 ])
            (const_int 0 [0]))) policymakerpcr.c:182 -1
     (nil))
(jump_insn 243 242 244 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 248)
            (pc))) policymakerpcr.c:182 -1
     (nil)
 -> 248)
(note 244 243 245 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 246 32 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4476 [0xffffffffffffee84])) [0 pr+0 S4 A32])
        (const_int 1 [0x1])) policymakerpcr.c:183 -1
     (nil))
(jump_insn 246 245 247 32 (set (pc)
        (label_ref 301)) -1
     (nil)
 -> 301)
(barrier 247 246 248)
(code_label 248 247 249 33 20 "" [1 uses])
(note 249 248 250 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 33 (set (reg:SI 223)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:185 -1
     (nil))
(insn 251 250 252 33 (set (reg:DI 137 [ D.13092 ])
        (sign_extend:DI (reg:SI 223))) policymakerpcr.c:185 -1
     (nil))
(insn 252 251 253 33 (parallel [
            (set (reg:DI 138 [ D.13092 ])
                (ashift:DI (reg:DI 137 [ D.13092 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:185 -1
     (nil))
(insn 253 252 254 33 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])) policymakerpcr.c:185 -1
     (nil))
(insn 254 253 255 33 (parallel [
            (set (reg/f:DI 139 [ D.13093 ])
                (plus:DI (reg:DI 138 [ D.13092 ])
                    (reg/f:DI 224)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:185 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])
            (reg:DI 138 [ D.13092 ]))
        (nil)))
(insn 255 254 256 33 (set (reg/f:DI 140 [ D.13094 ])
        (mem/f:DI (reg/f:DI 139 [ D.13093 ]) [0 *_152+0 S8 A64])) policymakerpcr.c:185 -1
     (nil))
(insn 256 255 257 33 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f3a892b2ab0 *.LC14>)) policymakerpcr.c:185 -1
     (nil))
(insn 257 256 258 33 (set (reg:DI 5 di)
        (reg/f:DI 140 [ D.13094 ])) policymakerpcr.c:185 -1
     (nil))
(call_insn/i 258 257 259 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f3a899410d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:185 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 259 258 260 33 (set (reg:SI 141 [ D.13095 ])
        (reg:SI 0 ax)) policymakerpcr.c:185 -1
     (nil))
(insn 260 259 261 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 141 [ D.13095 ])
            (const_int 0 [0]))) policymakerpcr.c:185 -1
     (nil))
(jump_insn 261 260 262 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 266)
            (pc))) policymakerpcr.c:185 -1
     (nil)
 -> 266)
(note 262 261 263 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(call_insn 263 262 264 34 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f3a892426c0 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymakerpcr.c:186 -1
     (nil)
    (nil))
(jump_insn 264 263 265 34 (set (pc)
        (label_ref 301)) -1
     (nil)
 -> 301)
(barrier 265 264 266)
(code_label 266 265 267 35 21 "" [1 uses])
(note 267 266 268 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 35 (set (reg:SI 225)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:188 -1
     (nil))
(insn 269 268 270 35 (set (reg:DI 142 [ D.13092 ])
        (sign_extend:DI (reg:SI 225))) policymakerpcr.c:188 -1
     (nil))
(insn 270 269 271 35 (parallel [
            (set (reg:DI 143 [ D.13092 ])
                (ashift:DI (reg:DI 142 [ D.13092 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:188 -1
     (nil))
(insn 271 270 272 35 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])) policymakerpcr.c:188 -1
     (nil))
(insn 272 271 273 35 (parallel [
            (set (reg/f:DI 144 [ D.13093 ])
                (plus:DI (reg:DI 143 [ D.13092 ])
                    (reg/f:DI 226)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:188 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])
            (reg:DI 143 [ D.13092 ]))
        (nil)))
(insn 273 272 274 35 (set (reg/f:DI 145 [ D.13094 ])
        (mem/f:DI (reg/f:DI 144 [ D.13093 ]) [0 *_158+0 S8 A64])) policymakerpcr.c:188 -1
     (nil))
(insn 274 273 275 35 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f3a892b2b40 *.LC15>)) policymakerpcr.c:188 -1
     (nil))
(insn 275 274 276 35 (set (reg:DI 5 di)
        (reg/f:DI 145 [ D.13094 ])) policymakerpcr.c:188 -1
     (nil))
(call_insn/i 276 275 277 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f3a899410d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:188 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 277 276 278 35 (set (reg:SI 146 [ D.13095 ])
        (reg:SI 0 ax)) policymakerpcr.c:188 -1
     (nil))
(insn 278 277 279 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 146 [ D.13095 ])
            (const_int 0 [0]))) policymakerpcr.c:188 -1
     (nil))
(jump_insn 279 278 280 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 288)
            (pc))) policymakerpcr.c:188 -1
     (nil)
 -> 288)
(note 280 279 281 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 281 280 282 36 (set (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f3a89364990 verbose>) [0 verbose+0 S4 A32])
        (const_int 1 [0x1])) policymakerpcr.c:189 -1
     (nil))
(insn 282 281 283 36 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f3a892b2bd0 *.LC16>)) policymakerpcr.c:190 -1
     (nil))
(insn 283 282 284 36 (set (reg:SI 4 si)
        (const_int 1 [0x1])) policymakerpcr.c:190 -1
     (nil))
(insn 284 283 285 36 (set (reg:DI 5 di)
        (const_int 0 [0])) policymakerpcr.c:190 -1
     (nil))
(call_insn 285 284 286 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7f3a89107a20 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:190 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 286 285 287 36 (set (pc)
        (label_ref 301)) -1
     (nil)
 -> 301)
(barrier 287 286 288)
(code_label 288 287 289 37 22 "" [1 uses])
(note 289 288 290 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 37 (set (reg:SI 227)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:193 -1
     (nil))
(insn 291 290 292 37 (set (reg:DI 147 [ D.13092 ])
        (sign_extend:DI (reg:SI 227))) policymakerpcr.c:193 -1
     (nil))
(insn 292 291 293 37 (parallel [
            (set (reg:DI 148 [ D.13092 ])
                (ashift:DI (reg:DI 147 [ D.13092 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:193 -1
     (nil))
(insn 293 292 294 37 (set (reg/f:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])) policymakerpcr.c:193 -1
     (nil))
(insn 294 293 295 37 (parallel [
            (set (reg/f:DI 149 [ D.13093 ])
                (plus:DI (reg:DI 148 [ D.13092 ])
                    (reg/f:DI 228)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:193 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4528 [0xffffffffffffee50])) [0 argv+0 S8 A64])
            (reg:DI 148 [ D.13092 ]))
        (nil)))
(insn 295 294 296 37 (set (reg/f:DI 150 [ D.13094 ])
        (mem/f:DI (reg/f:DI 149 [ D.13093 ]) [0 *_165+0 S8 A64])) policymakerpcr.c:193 -1
     (nil))
(insn 296 295 297 37 (set (reg:DI 4 si)
        (reg/f:DI 150 [ D.13094 ])) policymakerpcr.c:193 -1
     (nil))
(insn 297 296 298 37 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f3a892b2c60 *.LC17>)) policymakerpcr.c:193 -1
     (nil))
(insn 298 297 299 37 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:193 -1
     (nil))
(call_insn 299 298 300 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f3a89947ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:193 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(call_insn 300 299 301 37 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f3a892426c0 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymakerpcr.c:194 -1
     (nil)
    (nil))
(code_label 301 300 302 38 9 "" [14 uses])
(note 302 301 303 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 38 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:129 -1
     (nil))
(code_label 304 303 305 39 2 "" [1 uses])
(note 305 304 306 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 306 305 307 39 (set (reg:SI 229)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4488 [0xffffffffffffee78])) [0 i+0 S4 A32])) policymakerpcr.c:129 -1
     (nil))
(insn 307 306 308 39 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 229)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4516 [0xffffffffffffee5c])) [0 argc+0 S4 A32]))) policymakerpcr.c:129 -1
     (nil))
(jump_insn 308 307 309 39 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 313)
            (pc))) policymakerpcr.c:129 -1
     (nil)
 -> 313)
(note 309 308 311 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 311 309 312 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:129 -1
     (nil))
(jump_insn 312 311 313 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 310)
            (pc))) policymakerpcr.c:129 -1
     (nil)
 -> 310)
(code_label 313 312 314 41 23 "" [1 uses])
(note 314 313 315 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 315 314 316 41 (set (reg:SI 151 [ D.13096 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4500 [0xffffffffffffee6c])) [0 pcrmask+0 S4 A32])) policymakerpcr.c:197 -1
     (nil))
(insn 316 315 317 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 151 [ D.13096 ])
            (const_int -1 [0xffffffffffffffff]))) policymakerpcr.c:197 -1
     (nil))
(jump_insn 317 316 318 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 322)
            (pc))) policymakerpcr.c:197 -1
     (nil)
 -> 322)
(note 318 317 319 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 319 318 320 42 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f3a892b2cf0 *.LC18>)) policymakerpcr.c:198 -1
     (nil))
(call_insn 320 319 321 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:198 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 321 320 322 42 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f3a892426c0 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymakerpcr.c:199 -1
     (nil)
    (nil))
(code_label 322 321 323 43 25 "" [1 uses])
(note 323 322 324 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 324 323 325 43 (set (reg:SI 152 [ D.13096 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4500 [0xffffffffffffee6c])) [0 pcrmask+0 S4 A32])) policymakerpcr.c:201 -1
     (nil))
(insn 325 324 326 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 152 [ D.13096 ])
            (const_int 0 [0]))) policymakerpcr.c:201 -1
     (nil))
(jump_insn 326 325 327 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 334)
            (pc))) policymakerpcr.c:201 -1
     (nil)
 -> 334)
(note 327 326 328 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 328 327 329 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4448 [0xffffffffffffeea0])) [0 inFilename+0 S8 A64])
            (const_int 0 [0]))) policymakerpcr.c:201 -1
     (nil))
(jump_insn 329 328 330 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 334)
            (pc))) policymakerpcr.c:201 -1
     (nil)
 -> 334)
(note 330 329 331 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 331 330 332 45 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f3a892b2d80 *.LC19>)) policymakerpcr.c:202 -1
     (nil))
(call_insn 332 331 333 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:202 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 333 332 334 45 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f3a892426c0 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymakerpcr.c:203 -1
     (nil)
    (nil))
(code_label 334 333 335 46 26 "" [2 uses])
(note 335 334 336 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 336 335 337 46 (set (reg:SI 153 [ D.13096 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4500 [0xffffffffffffee6c])) [0 pcrmask+0 S4 A32])) policymakerpcr.c:205 -1
     (nil))
(insn 337 336 338 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153 [ D.13096 ])
            (const_int 0 [0]))) policymakerpcr.c:205 -1
     (nil))
(jump_insn 338 337 339 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 346)
            (pc))) policymakerpcr.c:205 -1
     (nil)
 -> 346)
(note 339 338 340 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 340 339 341 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4448 [0xffffffffffffeea0])) [0 inFilename+0 S8 A64])
            (const_int 0 [0]))) policymakerpcr.c:205 -1
     (nil))
(jump_insn 341 340 342 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 346)
            (pc))) policymakerpcr.c:205 -1
     (nil)
 -> 346)
(note 342 341 343 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 343 342 344 48 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f3a892b2e10 *.LC20>)) policymakerpcr.c:206 -1
     (nil))
(call_insn 344 343 345 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:206 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 345 344 346 48 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f3a892426c0 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) policymakerpcr.c:207 -1
     (nil)
    (nil))
(code_label 346 345 347 49 27 "" [2 uses])
(note 347 346 348 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 348 347 349 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:210 -1
     (nil))
(jump_insn 349 348 350 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 378)
            (pc))) policymakerpcr.c:210 -1
     (nil)
 -> 378)
(note 350 349 351 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 351 350 352 50 (set (reg:SI 154 [ D.13096 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4500 [0xffffffffffffee6c])) [0 pcrmask+0 S4 A32])) policymakerpcr.c:210 -1
     (nil))
(insn 352 351 353 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 154 [ D.13096 ])
            (const_int 0 [0]))) policymakerpcr.c:210 -1
     (nil))
(jump_insn 353 352 354 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 378)
            (pc))) policymakerpcr.c:210 -1
     (nil)
 -> 378)
(note 354 353 355 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 51 (set (reg:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4448 [0xffffffffffffeea0])) [0 inFilename+0 S8 A64])) policymakerpcr.c:211 -1
     (nil))
(insn 356 355 357 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f3a892b2ea0 *.LC21>)) policymakerpcr.c:211 -1
     (nil))
(insn 357 356 358 51 (set (reg:DI 5 di)
        (reg:DI 230)) policymakerpcr.c:211 -1
     (nil))
(call_insn 358 357 359 51 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f3a89a31bd0 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:211 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 359 358 360 51 (set (reg:DI 231)
        (reg:DI 0 ax)) policymakerpcr.c:211 -1
     (nil))
(insn 360 359 361 51 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4432 [0xffffffffffffeeb0])) [0 inFile+0 S8 A64])
        (reg:DI 231)) policymakerpcr.c:211 -1
     (nil))
(insn 361 360 362 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4432 [0xffffffffffffeeb0])) [0 inFile+0 S8 A64])
            (const_int 0 [0]))) policymakerpcr.c:212 -1
     (nil))
(jump_insn 362 361 363 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 378)
            (pc))) policymakerpcr.c:212 -1
     (nil)
 -> 378)
(note 363 362 364 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 364 363 365 52 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3a896d56c0 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:213 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 365 364 366 52 (set (reg/f:DI 155 [ D.13097 ])
        (reg:DI 0 ax)) policymakerpcr.c:213 -1
     (nil))
(insn 366 365 367 52 (set (reg:SI 156 [ D.13095 ])
        (mem:SI (reg/f:DI 155 [ D.13097 ]) [0 *_182+0 S4 A32])) policymakerpcr.c:213 -1
     (nil))
(insn 367 366 368 52 (set (reg:SI 5 di)
        (reg:SI 156 [ D.13095 ])) policymakerpcr.c:213 -1
     (nil))
(call_insn 368 367 369 52 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strerror") [flags 0x41]  <function_decl 0x7f3a896bb5e8 strerror>) [0 strerror S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:213 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 369 368 370 52 (set (reg/f:DI 157 [ D.13094 ])
        (reg:DI 0 ax)) policymakerpcr.c:213 -1
     (nil))
(insn 370 369 371 52 (set (reg:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4448 [0xffffffffffffeea0])) [0 inFilename+0 S8 A64])) policymakerpcr.c:213 -1
     (nil))
(insn 371 370 372 52 (set (reg:DI 2 cx)
        (reg/f:DI 157 [ D.13094 ])) policymakerpcr.c:213 -1
     (nil))
(insn 372 371 373 52 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f3a892b2ea0 *.LC21>)) policymakerpcr.c:213 -1
     (nil))
(insn 373 372 374 52 (set (reg:DI 4 si)
        (reg:DI 232)) policymakerpcr.c:213 -1
     (nil))
(insn 374 373 375 52 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f3a892b2f30 *.LC22>)) policymakerpcr.c:213 -1
     (nil))
(insn 375 374 376 52 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:213 -1
     (nil))
(call_insn 376 375 377 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f3a89947ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:213 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 377 376 378 52 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) policymakerpcr.c:214 -1
     (nil))
(code_label 378 377 379 53 28 "" [3 uses])
(note 379 378 380 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 380 379 381 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:217 -1
     (nil))
(jump_insn 381 380 382 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 390)
            (pc))) policymakerpcr.c:217 -1
     (nil)
 -> 390)
(note 382 381 383 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 383 382 384 54 (set (reg:HI 158 [ D.13098 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4384 [0xffffffffffffeee0])) [0 digest.hashAlg+0 S2 A64])) policymakerpcr.c:218 -1
     (nil))
(insn 384 383 385 54 (set (reg:SI 159 [ D.13095 ])
        (zero_extend:SI (reg:HI 158 [ D.13098 ]))) policymakerpcr.c:218 -1
     (nil))
(insn 385 384 386 54 (set (reg:SI 5 di)
        (reg:SI 159 [ D.13095 ])) policymakerpcr.c:218 -1
     (nil))
(call_insn 386 385 387 54 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_GetDigestSize") [flags 0x41]  <function_decl 0x7f3a89112948 TSS_GetDigestSize>) [0 TSS_GetDigestSize S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:218 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 387 386 388 54 (set (reg:HI 160 [ D.13098 ])
        (reg:HI 0 ax)) policymakerpcr.c:218 -1
     (nil))
(insn 388 387 389 54 (set (reg:SI 233)
        (zero_extend:SI (reg:HI 160 [ D.13098 ]))) policymakerpcr.c:218 -1
     (nil))
(insn 389 388 390 54 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4484 [0xffffffffffffee7c])) [0 sizeInBytes+0 S4 A32])
        (reg:SI 233)) policymakerpcr.c:218 -1
     (nil))
(code_label 390 389 391 55 29 "" [1 uses])
(note 391 390 392 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 392 391 393 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:221 -1
     (nil))
(jump_insn 393 392 394 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 410)
            (pc))) policymakerpcr.c:221 -1
     (nil)
 -> 410)
(note 394 393 395 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 395 394 396 56 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4416 [0xffffffffffffeec0])) [0 pcrs.count+0 S4 A64])
        (const_int 1 [0x1])) policymakerpcr.c:222 -1
     (nil))
(insn 396 395 397 56 (set (reg:HI 161 [ D.13098 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4384 [0xffffffffffffeee0])) [0 digest.hashAlg+0 S2 A64])) policymakerpcr.c:224 -1
     (nil))
(insn 397 396 398 56 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4412 [0xffffffffffffeec4])) [0 pcrs.pcrSelections[0].hash+0 S2 A32])
        (reg:HI 161 [ D.13098 ])) policymakerpcr.c:224 -1
     (nil))
(insn 398 397 399 56 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4410 [0xffffffffffffeec6])) [0 pcrs.pcrSelections[0].sizeofSelect+0 S1 A16])
        (const_int 3 [0x3])) policymakerpcr.c:225 -1
     (nil))
(insn 399 398 400 56 (set (reg:SI 162 [ D.13096 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4500 [0xffffffffffffee6c])) [0 pcrmask+0 S4 A32])) policymakerpcr.c:227 -1
     (nil))
(insn 400 399 401 56 (set (reg:QI 163 [ D.13099 ])
        (subreg:QI (reg:SI 162 [ D.13096 ]) 0)) policymakerpcr.c:227 -1
     (nil))
(insn 401 400 402 56 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4409 [0xffffffffffffeec7])) [0 pcrs.pcrSelections[0].pcrSelect+0 S1 A8])
        (reg:QI 163 [ D.13099 ])) policymakerpcr.c:227 -1
     (nil))
(insn 402 401 403 56 (set (reg:SI 164 [ D.13096 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4500 [0xffffffffffffee6c])) [0 pcrmask+0 S4 A32])) policymakerpcr.c:228 -1
     (nil))
(insn 403 402 404 56 (parallel [
            (set (reg:SI 165 [ D.13096 ])
                (lshiftrt:SI (reg:SI 164 [ D.13096 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:228 -1
     (nil))
(insn 404 403 405 56 (set (reg:QI 166 [ D.13099 ])
        (subreg:QI (reg:SI 165 [ D.13096 ]) 0)) policymakerpcr.c:228 -1
     (nil))
(insn 405 404 406 56 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4408 [0xffffffffffffeec8])) [0 pcrs.pcrSelections[0].pcrSelect+1 S1 A64])
        (reg:QI 166 [ D.13099 ])) policymakerpcr.c:228 -1
     (nil))
(insn 406 405 407 56 (set (reg:SI 167 [ D.13096 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4500 [0xffffffffffffee6c])) [0 pcrmask+0 S4 A32])) policymakerpcr.c:229 -1
     (nil))
(insn 407 406 408 56 (parallel [
            (set (reg:SI 168 [ D.13096 ])
                (lshiftrt:SI (reg:SI 167 [ D.13096 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:229 -1
     (nil))
(insn 408 407 409 56 (set (reg:QI 169 [ D.13099 ])
        (subreg:QI (reg:SI 168 [ D.13096 ]) 0)) policymakerpcr.c:229 -1
     (nil))
(insn 409 408 410 56 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4407 [0xffffffffffffeec9])) [0 pcrs.pcrSelections[0].pcrSelect+2 S1 A8])
        (reg:QI 169 [ D.13099 ])) policymakerpcr.c:229 -1
     (nil))
(code_label 410 409 411 57 30 "" [1 uses])
(note 411 410 412 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 412 411 413 57 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4480 [0xffffffffffffee80])) [0 pcrCount+0 S4 A32])
        (const_int 0 [0])) policymakerpcr.c:234 -1
     (nil))
(jump_insn 413 412 414 57 (set (pc)
        (label_ref 544)) policymakerpcr.c:234 -1
     (nil)
 -> 544)
(barrier 414 413 552)
(code_label 552 414 415 58 42 "" [1 uses])
(note 415 552 416 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 416 415 417 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:241 -1
     (nil))
(jump_insn 417 416 418 58 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 427)
            (pc))) policymakerpcr.c:241 -1
     (nil)
 -> 427)
(note 418 417 419 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 419 418 420 59 (set (reg:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4432 [0xffffffffffffeeb0])) [0 inFile+0 S8 A64])) policymakerpcr.c:242 -1
     (nil))
(insn 420 419 421 59 (parallel [
            (set (reg:DI 235)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1168 [0xfffffffffffffb70])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:242 -1
     (nil))
(insn 421 420 422 59 (set (reg:DI 1 dx)
        (reg:DI 234)) policymakerpcr.c:242 -1
     (nil))
(insn 422 421 423 59 (set (reg:SI 4 si)
        (const_int 256 [0x100])) policymakerpcr.c:242 -1
     (nil))
(insn 423 422 424 59 (set (reg:DI 5 di)
        (reg:DI 235)) policymakerpcr.c:242 -1
     (nil))
(call_insn 424 423 425 59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f3a89a39e58 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:242 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 425 424 426 59 (set (reg:DI 236)
        (reg:DI 0 ax)) policymakerpcr.c:242 -1
     (nil))
(insn 426 425 427 59 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4456 [0xffffffffffffee98])) [0 prc+0 S8 A64])
        (reg:DI 236)) policymakerpcr.c:242 -1
     (nil))
(code_label 427 426 428 60 32 "" [1 uses])
(note 428 427 429 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 429 428 430 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:245 -1
     (nil))
(jump_insn 430 429 431 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 437)
            (pc))) policymakerpcr.c:245 -1
     (nil)
 -> 437)
(note 431 430 432 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 432 431 433 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4456 [0xffffffffffffee98])) [0 prc+0 S8 A64])
            (const_int 0 [0]))) policymakerpcr.c:246 -1
     (nil))
(jump_insn 433 432 434 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 437)
            (pc))) policymakerpcr.c:246 -1
     (nil)
 -> 437)
(note 434 433 435 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(jump_insn 435 434 436 62 (set (pc)
        (label_ref:DI 555)) policymakerpcr.c:247 654 {jump}
     (nil)
 -> 555)
(barrier 436 435 437)
(code_label 437 436 438 63 33 "" [2 uses])
(note 438 437 439 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 439 438 440 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:250 -1
     (nil))
(jump_insn 440 439 441 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 466)
            (pc))) policymakerpcr.c:250 -1
     (nil)
 -> 466)
(note 441 440 442 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 442 441 443 64 (parallel [
            (set (reg:DI 237)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1168 [0xfffffffffffffb70])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:251 -1
     (nil))
(insn 443 442 444 64 (set (reg:DI 5 di)
        (reg:DI 237)) policymakerpcr.c:251 -1
     (nil))
(call_insn/i 444 443 445 64 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7f3a89941948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:251 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 445 444 446 64 (set (reg:DI 170 [ D.13092 ])
        (reg:DI 0 ax)) policymakerpcr.c:251 -1
     (nil))
(insn 446 445 447 64 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4472 [0xffffffffffffee88])) [0 lineLength+0 S4 A32])
        (subreg:SI (reg:DI 170 [ D.13092 ]) 0)) policymakerpcr.c:251 -1
     (nil))
(insn 447 446 448 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4472 [0xffffffffffffee88])) [0 lineLength+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:252 -1
     (nil))
(jump_insn 448 447 449 64 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 452)
            (pc))) policymakerpcr.c:252 -1
     (nil)
 -> 452)
(note 449 448 450 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(jump_insn 450 449 451 65 (set (pc)
        (label_ref 540)) policymakerpcr.c:253 -1
     (nil)
 -> 540)
(barrier 451 450 452)
(code_label 452 451 453 66 36 "" [1 uses])
(note 453 452 454 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 454 453 455 66 (set (reg:SI 238)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4472 [0xffffffffffffee88])) [0 lineLength+0 S4 A32])) policymakerpcr.c:255 -1
     (nil))
(insn 455 454 456 66 (parallel [
            (set (reg:SI 171 [ D.13096 ])
                (plus:SI (reg:SI 238)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:255 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4472 [0xffffffffffffee88])) [0 lineLength+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 456 455 457 66 (set (reg:DI 239)
        (zero_extend:DI (reg:SI 171 [ D.13096 ]))) policymakerpcr.c:255 -1
     (nil))
(insn 457 456 458 66 (set (reg:QI 172 [ D.13100 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (reg:DI 239))
                (const_int -1168 [0xfffffffffffffb70])) [0 lineString S1 A8])) policymakerpcr.c:255 -1
     (nil))
(insn 458 457 459 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 172 [ D.13100 ])
            (const_int 10 [0xa]))) policymakerpcr.c:255 -1
     (nil))
(jump_insn 459 458 460 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 466)
            (pc))) policymakerpcr.c:255 -1
     (nil)
 -> 466)
(note 460 459 461 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 461 460 462 67 (set (reg:SI 240)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4472 [0xffffffffffffee88])) [0 lineLength+0 S4 A32])) policymakerpcr.c:256 -1
     (nil))
(insn 462 461 463 67 (parallel [
            (set (reg:SI 173 [ D.13096 ])
                (plus:SI (reg:SI 240)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:256 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4472 [0xffffffffffffee88])) [0 lineLength+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 463 462 464 67 (set (reg:DI 241)
        (zero_extend:DI (reg:SI 173 [ D.13096 ]))) policymakerpcr.c:256 -1
     (nil))
(insn 464 463 465 67 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (reg:DI 241))
                (const_int -1168 [0xfffffffffffffb70])) [0 lineString S1 A8])
        (const_int 48 [0x30])) policymakerpcr.c:256 -1
     (nil))
(insn 465 464 466 67 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4472 [0xffffffffffffee88])) [0 lineLength+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4472 [0xffffffffffffee88])) [0 lineLength+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:257 -1
     (nil))
(code_label 466 465 467 68 35 "" [2 uses])
(note 467 466 468 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 469 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:260 -1
     (nil))
(jump_insn 469 468 470 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 484)
            (pc))) policymakerpcr.c:260 -1
     (nil)
 -> 484)
(note 470 469 471 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 471 470 472 69 (set (reg:SI 242)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4484 [0xffffffffffffee7c])) [0 sizeInBytes+0 S4 A32])) policymakerpcr.c:261 -1
     (nil))
(insn 472 471 473 69 (parallel [
            (set (reg:SI 174 [ D.13096 ])
                (ashift:SI (reg:SI 242)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:261 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4484 [0xffffffffffffee7c])) [0 sizeInBytes+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 473 472 474 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 174 [ D.13096 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4472 [0xffffffffffffee88])) [0 lineLength+0 S4 A32]))) policymakerpcr.c:261 -1
     (nil))
(jump_insn 474 473 475 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 484)
            (pc))) policymakerpcr.c:261 -1
     (nil)
 -> 484)
(note 475 474 476 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 477 70 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4484 [0xffffffffffffee7c])) [0 sizeInBytes+0 S4 A32])) policymakerpcr.c:262 -1
     (nil))
(insn 477 476 478 70 (set (reg:SI 244)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4472 [0xffffffffffffee88])) [0 lineLength+0 S4 A32])) policymakerpcr.c:262 -1
     (nil))
(insn 478 477 479 70 (set (reg:SI 1 dx)
        (reg:SI 243)) policymakerpcr.c:262 -1
     (nil))
(insn 479 478 480 70 (set (reg:SI 4 si)
        (reg:SI 244)) policymakerpcr.c:262 -1
     (nil))
(insn 480 479 481 70 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f3a88eca000 *.LC23>)) policymakerpcr.c:262 -1
     (nil))
(insn 481 480 482 70 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:262 -1
     (nil))
(call_insn 482 481 483 70 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f3a89947ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:262 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 483 482 484 70 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) policymakerpcr.c:263 -1
     (nil))
(code_label 484 483 485 71 37 "" [2 uses])
(note 485 484 486 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 486 485 487 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:267 -1
     (nil))
(jump_insn 487 486 488 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 506)
            (pc))) policymakerpcr.c:267 -1
     (nil)
 -> 506)
(note 488 487 489 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 489 488 490 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4456 [0xffffffffffffee98])) [0 prc+0 S8 A64])
            (const_int 0 [0]))) policymakerpcr.c:267 -1
     (nil))
(jump_insn 490 489 491 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 506)
            (pc))) policymakerpcr.c:267 -1
     (nil)
 -> 506)
(note 491 490 492 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 73 (set (reg:SI 245)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4472 [0xffffffffffffee88])) [0 lineLength+0 S4 A32])) policymakerpcr.c:269 -1
     (nil))
(insn 493 492 494 73 (parallel [
            (set (reg:SI 175 [ D.13096 ])
                (lshiftrt:SI (reg:SI 245)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:269 -1
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 245)
            (const_int 2 [0x2]))
        (nil)))
(insn 494 493 495 73 (set (reg:DI 176 [ D.13092 ])
        (zero_extend:DI (reg:SI 175 [ D.13096 ]))) policymakerpcr.c:268 -1
     (nil))
(insn 495 494 496 73 (parallel [
            (set (reg:DI 246)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4240 [0xffffffffffffef70])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:268 -1
     (nil))
(insn 496 495 497 73 (set (reg:DI 247)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4480 [0xffffffffffffee80])) [0 pcrCount+0 S4 A32]))) policymakerpcr.c:268 -1
     (nil))
(insn 497 496 498 73 (parallel [
            (set (reg:DI 248)
                (ashift:DI (reg:DI 247)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:268 -1
     (nil))
(insn 498 497 499 73 (parallel [
            (set (reg/f:DI 177 [ D.13101 ])
                (plus:DI (reg:DI 246)
                    (reg:DI 248)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:268 -1
     (nil))
(insn 499 498 500 73 (parallel [
            (set (reg:DI 249)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1168 [0xfffffffffffffb70])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:268 -1
     (nil))
(insn 500 499 501 73 (set (reg:DI 1 dx)
        (reg:DI 176 [ D.13092 ])) policymakerpcr.c:268 -1
     (nil))
(insn 501 500 502 73 (set (reg:DI 4 si)
        (reg:DI 249)) policymakerpcr.c:268 -1
     (nil))
(insn 502 501 503 73 (set (reg:DI 5 di)
        (reg/f:DI 177 [ D.13101 ])) policymakerpcr.c:268 -1
     (nil))
(call_insn 503 502 504 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Format_FromHexascii") [flags 0x3]  <function_decl 0x7f3a89242870 Format_FromHexascii>) [0 Format_FromHexascii S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:268 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 504 503 505 73 (set (reg:SI 178 [ D.13095 ])
        (reg:SI 0 ax)) policymakerpcr.c:268 -1
     (nil))
(insn 505 504 506 73 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
        (reg:SI 178 [ D.13095 ])) policymakerpcr.c:268 -1
     (nil))
(code_label 506 505 507 74 38 "" [2 uses])
(note 507 506 508 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 508 507 509 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:271 -1
     (nil))
(jump_insn 509 508 510 74 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 535)
            (pc))) policymakerpcr.c:271 -1
     (nil)
 -> 535)
(note 510 509 511 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 511 510 512 75 (set (reg:SI 179 [ D.13095 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f3a89364990 verbose>) [0 verbose+0 S4 A32])) policymakerpcr.c:272 -1
     (nil))
(insn 512 511 513 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 179 [ D.13095 ])
            (const_int 0 [0]))) policymakerpcr.c:272 -1
     (nil))
(jump_insn 513 512 514 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 520)
            (pc))) policymakerpcr.c:272 -1
     (nil)
 -> 520)
(note 514 513 515 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 515 514 516 76 (set (reg:SI 250)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4480 [0xffffffffffffee80])) [0 pcrCount+0 S4 A32])) policymakerpcr.c:272 -1
     (nil))
(insn 516 515 517 76 (set (reg:SI 4 si)
        (reg:SI 250)) policymakerpcr.c:272 -1
     (nil))
(insn 517 516 518 76 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f3a88eca090 *.LC24>)) policymakerpcr.c:272 -1
     (nil))
(insn 518 517 519 76 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:272 -1
     (nil))
(call_insn 519 518 520 76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f3a89947ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:272 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 520 519 521 77 40 "" [1 uses])
(note 521 520 522 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 522 521 523 77 (set (reg:SI 180 [ D.13095 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f3a89364990 verbose>) [0 verbose+0 S4 A32])) policymakerpcr.c:273 -1
     (nil))
(insn 523 522 524 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 180 [ D.13095 ])
            (const_int 0 [0]))) policymakerpcr.c:273 -1
     (nil))
(jump_insn 524 523 525 77 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 535)
            (pc))) policymakerpcr.c:273 -1
     (nil)
 -> 535)
(note 525 524 526 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 526 525 527 78 (parallel [
            (set (reg:DI 251)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4240 [0xffffffffffffef70])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:273 -1
     (nil))
(insn 527 526 528 78 (set (reg:DI 252)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4480 [0xffffffffffffee80])) [0 pcrCount+0 S4 A32]))) policymakerpcr.c:273 -1
     (nil))
(insn 528 527 529 78 (parallel [
            (set (reg:DI 253)
                (ashift:DI (reg:DI 252)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:273 -1
     (nil))
(insn 529 528 530 78 (parallel [
            (set (reg/f:DI 181 [ D.13101 ])
                (plus:DI (reg:DI 251)
                    (reg:DI 253)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:273 -1
     (nil))
(insn 530 529 531 78 (set (reg:SI 254)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4484 [0xffffffffffffee7c])) [0 sizeInBytes+0 S4 A32])) policymakerpcr.c:273 -1
     (nil))
(insn 531 530 532 78 (set (reg:SI 1 dx)
        (reg:SI 254)) policymakerpcr.c:273 -1
     (nil))
(insn 532 531 533 78 (set (reg:DI 4 si)
        (reg/f:DI 181 [ D.13101 ])) policymakerpcr.c:273 -1
     (nil))
(insn 533 532 534 78 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f3a88eca120 *.LC25>)) policymakerpcr.c:273 -1
     (nil))
(call_insn 534 533 535 78 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7f3a890de438 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) policymakerpcr.c:273 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(code_label 535 534 536 79 39 "" [2 uses])
(note 536 535 537 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 537 536 538 79 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4480 [0xffffffffffffee80])) [0 pcrCount+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4480 [0xffffffffffffee80])) [0 pcrCount+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:236 -1
     (nil))
(jump_insn 538 537 539 79 (set (pc)
        (label_ref 544)) policymakerpcr.c:236 -1
     (nil)
 -> 544)
(barrier 539 538 540)
(code_label 540 539 541 80 34 "" [1 uses])
(note 541 540 542 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(jump_insn 542 541 543 80 (set (pc)
        (label_ref 555)) policymakerpcr.c:247 -1
     (nil)
 -> 555)
(barrier 543 542 544)
(code_label 544 543 545 81 31 "" [2 uses])
(note 545 544 546 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 546 545 547 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:234 -1
     (nil))
(jump_insn 547 546 548 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 555)
            (pc))) policymakerpcr.c:234 -1
     (nil)
 -> 555)
(note 548 547 549 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 549 548 550 82 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4480 [0xffffffffffffee80])) [0 pcrCount+0 S4 A32])
            (const_int 23 [0x17]))) policymakerpcr.c:235 -1
     (nil))
(jump_insn 550 549 551 82 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 555)
            (pc))) policymakerpcr.c:235 -1
     (nil)
 -> 555)
(note 551 550 553 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 553 551 554 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4432 [0xffffffffffffeeb0])) [0 inFile+0 S8 A64])
            (const_int 0 [0]))) policymakerpcr.c:235 -1
     (nil))
(jump_insn 554 553 555 83 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 552)
            (pc))) policymakerpcr.c:235 -1
     (nil)
 -> 552)
(code_label 555 554 556 84 41 "" [4 uses])
(note 556 555 557 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 557 556 558 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:277 -1
     (nil))
(jump_insn 558 557 559 84 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 597)
            (pc))) policymakerpcr.c:277 -1
     (nil)
 -> 597)
(note 559 558 560 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 560 559 561 85 (parallel [
            (set (reg:DI 255)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1168 [0xfffffffffffffb70])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:279 -1
     (nil))
(insn 561 560 562 85 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4464 [0xffffffffffffee90])) [0 buffer+0 S8 A64])
        (reg:DI 255)) policymakerpcr.c:279 -1
     (nil))
(insn 562 561 563 85 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4496 [0xffffffffffffee70])) [0 size+0 S4 A64])
        (const_int 1152 [0x480])) policymakerpcr.c:280 -1
     (nil))
(insn 563 562 564 85 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4502 [0xffffffffffffee6a])) [0 pcrLength+0 S2 A16])
        (const_int 0 [0])) policymakerpcr.c:281 -1
     (nil))
(insn 564 563 565 85 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4468 [0xffffffffffffee8c])) [0 pc+0 S4 A32])
        (const_int 0 [0])) policymakerpcr.c:282 -1
     (nil))
(jump_insn 565 564 566 85 (set (pc)
        (label_ref 586)) policymakerpcr.c:282 -1
     (nil)
 -> 586)
(barrier 566 565 591)
(code_label 591 566 567 86 46 "" [1 uses])
(note 567 591 568 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 568 567 569 86 (set (reg:SI 182 [ D.13095 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4484 [0xffffffffffffee7c])) [0 sizeInBytes+0 S4 A32])) policymakerpcr.c:283 -1
     (nil))
(insn 569 568 570 86 (set (reg:SI 183 [ D.13095 ])
        (zero_extend:SI (subreg:HI (reg:SI 182 [ D.13095 ]) 0))) policymakerpcr.c:283 -1
     (nil))
(insn 570 569 571 86 (parallel [
            (set (reg:DI 256)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4240 [0xffffffffffffef70])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:283 -1
     (nil))
(insn 571 570 572 86 (set (reg:DI 257)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4468 [0xffffffffffffee8c])) [0 pc+0 S4 A32]))) policymakerpcr.c:283 -1
     (nil))
(insn 572 571 573 86 (parallel [
            (set (reg:DI 258)
                (ashift:DI (reg:DI 257)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:283 -1
     (nil))
(insn 573 572 574 86 (parallel [
            (set (reg/f:DI 184 [ D.13101 ])
                (plus:DI (reg:DI 256)
                    (reg:DI 258)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:283 -1
     (nil))
(insn 574 573 575 86 (parallel [
            (set (reg:DI 259)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4496 [0xffffffffffffee70])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:283 -1
     (nil))
(insn 575 574 576 86 (parallel [
            (set (reg:DI 260)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4464 [0xffffffffffffee90])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:283 -1
     (nil))
(insn 576 575 577 86 (parallel [
            (set (reg:DI 261)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4502 [0xffffffffffffee6a])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:283 -1
     (nil))
(insn 577 576 578 86 (set (reg:DI 37 r8)
        (reg:DI 259)) policymakerpcr.c:283 -1
     (nil))
(insn 578 577 579 86 (set (reg:DI 2 cx)
        (reg:DI 260)) policymakerpcr.c:283 -1
     (nil))
(insn 579 578 580 86 (set (reg:DI 1 dx)
        (reg:DI 261)) policymakerpcr.c:283 -1
     (nil))
(insn 580 579 581 86 (set (reg:SI 4 si)
        (reg:SI 183 [ D.13095 ])) policymakerpcr.c:283 -1
     (nil))
(insn 581 580 582 86 (set (reg:DI 5 di)
        (reg/f:DI 184 [ D.13101 ])) policymakerpcr.c:283 -1
     (nil))
(call_insn 582 581 583 86 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Array_Marshal") [flags 0x41]  <function_decl 0x7f3a891e31b0 TSS_Array_Marshal>) [0 TSS_Array_Marshal S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:283 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 583 582 584 86 (set (reg:SI 262)
        (reg:SI 0 ax)) policymakerpcr.c:283 -1
     (nil))
(insn 584 583 585 86 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
        (reg:SI 262)) policymakerpcr.c:283 -1
     (nil))
(insn 585 584 586 86 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4468 [0xffffffffffffee8c])) [0 pc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4468 [0xffffffffffffee8c])) [0 pc+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:282 -1
     (nil))
(code_label 586 585 587 87 44 "" [1 uses])
(note 587 586 588 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 588 587 589 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:282 -1
     (nil))
(jump_insn 589 588 590 87 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 597)
            (pc))) policymakerpcr.c:282 612 {*jcc_1}
     (nil)
 -> 597)
(note 590 589 592 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 592 590 593 88 (set (reg:SI 263)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4468 [0xffffffffffffee8c])) [0 pc+0 S4 A32])) policymakerpcr.c:282 -1
     (nil))
(insn 593 592 594 88 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 263)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4480 [0xffffffffffffee80])) [0 pcrCount+0 S4 A32]))) policymakerpcr.c:282 -1
     (nil))
(jump_insn 594 593 596 88 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 591)
            (pc))) policymakerpcr.c:282 -1
     (nil)
 -> 591)
(note 596 594 597 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(code_label 597 596 598 90 43 "" [2 uses])
(note 598 597 599 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 599 598 600 90 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:287 -1
     (nil))
(jump_insn 600 599 601 90 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 615)
            (pc))) policymakerpcr.c:287 -1
     (nil)
 -> 615)
(note 601 600 602 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 602 601 603 91 (set (reg:HI 185 [ D.13098 ])
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4502 [0xffffffffffffee6a])) [0 pcrLength+0 S2 A16])) policymakerpcr.c:288 -1
     (nil))
(insn 603 602 604 91 (set (reg:SI 186 [ D.13095 ])
        (zero_extend:SI (reg:HI 185 [ D.13098 ]))) policymakerpcr.c:288 -1
     (nil))
(insn 604 603 605 91 (parallel [
            (set (reg:DI 264)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1168 [0xfffffffffffffb70])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:288 -1
     (nil))
(insn 605 604 606 91 (parallel [
            (set (reg:DI 265)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4384 [0xffffffffffffeee0])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:288 -1
     (nil))
(insn 606 605 607 91 (set (reg:DI 37 r8)
        (const_int 0 [0])) policymakerpcr.c:288 -1
     (nil))
(insn 607 606 608 91 (set (reg:SI 2 cx)
        (const_int 0 [0])) policymakerpcr.c:288 -1
     (nil))
(insn 608 607 609 91 (set (reg:DI 1 dx)
        (reg:DI 264)) policymakerpcr.c:288 -1
     (nil))
(insn 609 608 610 91 (set (reg:SI 4 si)
        (reg:SI 186 [ D.13095 ])) policymakerpcr.c:288 -1
     (nil))
(insn 610 609 611 91 (set (reg:DI 5 di)
        (reg:DI 265)) policymakerpcr.c:288 -1
     (nil))
(insn 611 610 612 91 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:288 -1
     (nil))
(call_insn 612 611 613 91 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Hash_Generate") [flags 0x41]  <function_decl 0x7f3a89112af8 TSS_Hash_Generate>) [0 TSS_Hash_Generate S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:288 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 613 612 614 91 (set (reg:SI 266)
        (reg:SI 0 ax)) policymakerpcr.c:288 -1
     (nil))
(insn 614 613 615 91 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
        (reg:SI 266)) policymakerpcr.c:288 -1
     (nil))
(code_label 615 614 616 92 47 "" [1 uses])
(note 616 615 617 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 617 616 618 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:292 -1
     (nil))
(jump_insn 618 617 619 92 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 631)
            (pc))) policymakerpcr.c:292 -1
     (nil)
 -> 631)
(note 619 618 620 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 620 619 621 93 (set (reg:SI 187 [ D.13095 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f3a89364990 verbose>) [0 verbose+0 S4 A32])) policymakerpcr.c:293 -1
     (nil))
(insn 621 620 622 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 187 [ D.13095 ])
            (const_int 0 [0]))) policymakerpcr.c:293 -1
     (nil))
(jump_insn 622 621 623 93 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 631)
            (pc))) policymakerpcr.c:293 -1
     (nil)
 -> 631)
(note 623 622 624 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 624 623 625 94 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4484 [0xffffffffffffee7c])) [0 sizeInBytes+0 S4 A32])) policymakerpcr.c:293 -1
     (nil))
(insn 625 624 626 94 (parallel [
            (set (reg:DI 268)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4384 [0xffffffffffffeee0])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:293 -1
     (nil))
(insn 626 625 627 94 (parallel [
            (set (reg:DI 269)
                (plus:DI (reg:DI 268)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:293 -1
     (nil))
(insn 627 626 628 94 (set (reg:SI 1 dx)
        (reg:SI 267)) policymakerpcr.c:293 -1
     (nil))
(insn 628 627 629 94 (set (reg:DI 4 si)
        (reg:DI 269)) policymakerpcr.c:293 -1
     (nil))
(insn 629 628 630 94 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f3a88eca1b0 *.LC26>)) policymakerpcr.c:293 -1
     (nil))
(call_insn 630 629 631 94 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7f3a890de438 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) policymakerpcr.c:293 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(code_label 631 630 632 95 48 "" [2 uses])
(note 632 631 633 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 633 632 634 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:295 -1
     (nil))
(jump_insn 634 633 635 95 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 648)
            (pc))) policymakerpcr.c:295 -1
     (nil)
 -> 648)
(note 635 634 636 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 636 635 637 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4476 [0xffffffffffffee84])) [0 pr+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:295 -1
     (nil))
(jump_insn 637 636 638 96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 648)
            (pc))) policymakerpcr.c:295 -1
     (nil)
 -> 648)
(note 638 637 639 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 639 638 640 97 (set (reg/f:DI 188 [ D.13102 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f3a899f95a0 stdout>) [0 stdout+0 S8 A64])) policymakerpcr.c:296 -1
     (nil))
(insn 640 639 641 97 (parallel [
            (set (reg:DI 270)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4384 [0xffffffffffffeee0])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:296 -1
     (nil))
(insn 641 640 642 97 (parallel [
            (set (reg:DI 271)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4416 [0xffffffffffffeec0])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:296 -1
     (nil))
(insn 642 641 643 97 (set (reg:SI 272)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4484 [0xffffffffffffee7c])) [0 sizeInBytes+0 S4 A32])) policymakerpcr.c:296 -1
     (nil))
(insn 643 642 644 97 (set (reg:DI 2 cx)
        (reg:DI 270)) policymakerpcr.c:296 -1
     (nil))
(insn 644 643 645 97 (set (reg:DI 1 dx)
        (reg:DI 271)) policymakerpcr.c:296 -1
     (nil))
(insn 645 644 646 97 (set (reg:SI 4 si)
        (reg:SI 272)) policymakerpcr.c:296 -1
     (nil))
(insn 646 645 647 97 (set (reg:DI 5 di)
        (reg/f:DI 188 [ D.13102 ])) policymakerpcr.c:296 -1
     (nil))
(call_insn 647 646 648 97 (call (mem:QI (symbol_ref:DI ("printPolicyPCR") [flags 0x3]  <function_decl 0x7f3a89242798 printPolicyPCR>) [0 printPolicyPCR S1 A8])
        (const_int 0 [0])) policymakerpcr.c:296 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(code_label 648 647 649 98 49 "" [2 uses])
(note 649 648 650 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 650 649 651 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4440 [0xffffffffffffeea8])) [0 outFilename+0 S8 A64])
            (const_int 0 [0]))) policymakerpcr.c:301 -1
     (nil))
(jump_insn 651 650 652 98 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 693)
            (pc))) policymakerpcr.c:301 -1
     (nil)
 -> 693)
(note 652 651 653 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 653 652 654 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:302 -1
     (nil))
(jump_insn 654 653 655 99 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 679)
            (pc))) policymakerpcr.c:302 -1
     (nil)
 -> 679)
(note 655 654 656 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 656 655 657 100 (set (reg:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4440 [0xffffffffffffeea8])) [0 outFilename+0 S8 A64])) policymakerpcr.c:303 -1
     (nil))
(insn 657 656 658 100 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f3a88eca240 *.LC27>)) policymakerpcr.c:303 -1
     (nil))
(insn 658 657 659 100 (set (reg:DI 5 di)
        (reg:DI 273)) policymakerpcr.c:303 -1
     (nil))
(call_insn 659 658 660 100 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f3a89a31bd0 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:303 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 660 659 661 100 (set (reg:DI 274)
        (reg:DI 0 ax)) policymakerpcr.c:303 -1
     (nil))
(insn 661 660 662 100 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4424 [0xffffffffffffeeb8])) [0 outFile+0 S8 A64])
        (reg:DI 274)) policymakerpcr.c:303 -1
     (nil))
(insn 662 661 663 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4424 [0xffffffffffffeeb8])) [0 outFile+0 S8 A64])
            (const_int 0 [0]))) policymakerpcr.c:304 -1
     (nil))
(jump_insn 663 662 664 100 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 679)
            (pc))) policymakerpcr.c:304 -1
     (nil)
 -> 679)
(note 664 663 665 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 665 664 666 101 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3a896d56c0 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:305 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 666 665 667 101 (set (reg/f:DI 189 [ D.13097 ])
        (reg:DI 0 ax)) policymakerpcr.c:305 -1
     (nil))
(insn 667 666 668 101 (set (reg:SI 190 [ D.13095 ])
        (mem:SI (reg/f:DI 189 [ D.13097 ]) [0 *_259+0 S4 A32])) policymakerpcr.c:305 -1
     (nil))
(insn 668 667 669 101 (set (reg:SI 5 di)
        (reg:SI 190 [ D.13095 ])) policymakerpcr.c:305 -1
     (nil))
(call_insn 669 668 670 101 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strerror") [flags 0x41]  <function_decl 0x7f3a896bb5e8 strerror>) [0 strerror S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:305 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 670 669 671 101 (set (reg/f:DI 191 [ D.13094 ])
        (reg:DI 0 ax)) policymakerpcr.c:305 -1
     (nil))
(insn 671 670 672 101 (set (reg:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4440 [0xffffffffffffeea8])) [0 outFilename+0 S8 A64])) policymakerpcr.c:305 -1
     (nil))
(insn 672 671 673 101 (set (reg:DI 2 cx)
        (reg/f:DI 191 [ D.13094 ])) policymakerpcr.c:305 -1
     (nil))
(insn 673 672 674 101 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f3a88eca2d0 *.LC28>)) policymakerpcr.c:305 -1
     (nil))
(insn 674 673 675 101 (set (reg:DI 4 si)
        (reg:DI 275)) policymakerpcr.c:305 -1
     (nil))
(insn 675 674 676 101 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f3a892b2f30 *.LC22>)) policymakerpcr.c:305 -1
     (nil))
(insn 676 675 677 101 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:305 -1
     (nil))
(call_insn 677 676 678 101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f3a89947ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:305 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 678 677 679 101 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) policymakerpcr.c:306 -1
     (nil))
(code_label 679 678 680 102 51 "" [2 uses])
(note 680 679 681 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 681 680 682 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:309 -1
     (nil))
(jump_insn 682 681 683 102 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 693)
            (pc))) policymakerpcr.c:309 -1
     (nil)
 -> 693)
(note 683 682 684 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 684 683 685 103 (parallel [
            (set (reg:DI 276)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4384 [0xffffffffffffeee0])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:310 -1
     (nil))
(insn 685 684 686 103 (parallel [
            (set (reg:DI 277)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4416 [0xffffffffffffeec0])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:310 -1
     (nil))
(insn 686 685 687 103 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4484 [0xffffffffffffee7c])) [0 sizeInBytes+0 S4 A32])) policymakerpcr.c:310 -1
     (nil))
(insn 687 686 688 103 (set (reg:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4424 [0xffffffffffffeeb8])) [0 outFile+0 S8 A64])) policymakerpcr.c:310 -1
     (nil))
(insn 688 687 689 103 (set (reg:DI 2 cx)
        (reg:DI 276)) policymakerpcr.c:310 -1
     (nil))
(insn 689 688 690 103 (set (reg:DI 1 dx)
        (reg:DI 277)) policymakerpcr.c:310 -1
     (nil))
(insn 690 689 691 103 (set (reg:SI 4 si)
        (reg:SI 278)) policymakerpcr.c:310 -1
     (nil))
(insn 691 690 692 103 (set (reg:DI 5 di)
        (reg:DI 279)) policymakerpcr.c:310 -1
     (nil))
(call_insn 692 691 693 103 (call (mem:QI (symbol_ref:DI ("printPolicyPCR") [flags 0x3]  <function_decl 0x7f3a89242798 printPolicyPCR>) [0 printPolicyPCR S1 A8])
        (const_int 0 [0])) policymakerpcr.c:310 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(code_label 693 692 694 104 50 "" [2 uses])
(note 694 693 695 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 695 694 696 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4432 [0xffffffffffffeeb0])) [0 inFile+0 S8 A64])
            (const_int 0 [0]))) policymakerpcr.c:316 -1
     (nil))
(jump_insn 696 695 697 104 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 701)
            (pc))) policymakerpcr.c:316 -1
     (nil)
 -> 701)
(note 697 696 698 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 698 697 699 105 (set (reg:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4432 [0xffffffffffffeeb0])) [0 inFile+0 S8 A64])) policymakerpcr.c:317 -1
     (nil))
(insn 699 698 700 105 (set (reg:DI 5 di)
        (reg:DI 280)) policymakerpcr.c:317 -1
     (nil))
(call_insn 700 699 701 105 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f3a89a31948 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:317 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 701 700 702 106 52 "" [1 uses])
(note 702 701 703 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 703 702 704 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4424 [0xffffffffffffeeb8])) [0 outFile+0 S8 A64])
            (const_int 0 [0]))) policymakerpcr.c:319 -1
     (nil))
(jump_insn 704 703 705 106 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 709)
            (pc))) policymakerpcr.c:319 -1
     (nil)
 -> 709)
(note 705 704 706 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 706 705 707 107 (set (reg:DI 281)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4424 [0xffffffffffffeeb8])) [0 outFile+0 S8 A64])) policymakerpcr.c:320 -1
     (nil))
(insn 707 706 708 107 (set (reg:DI 5 di)
        (reg:DI 281)) policymakerpcr.c:320 -1
     (nil))
(call_insn 708 707 709 107 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f3a89a31948 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:320 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 709 708 710 108 53 "" [1 uses])
(note 710 709 711 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 711 710 712 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:322 -1
     (nil))
(jump_insn 712 711 713 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 715)
            (pc))) policymakerpcr.c:322 -1
     (nil)
 -> 715)
(note 713 712 714 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 714 713 715 109 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) policymakerpcr.c:323 -1
     (nil))
(code_label 715 714 716 110 54 "" [1 uses])
(note 716 715 717 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 717 716 720 110 (set (reg:SI 192 [ D.13095 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4492 [0xffffffffffffee74])) [0 rc+0 S4 A32])) policymakerpcr.c:325 -1
     (nil))
(insn 720 717 724 110 (set (reg:SI 193 [ <retval> ])
        (reg:SI 192 [ D.13095 ])) -1
     (nil))
(insn 724 720 725 110 (set (reg/i:SI 0 ax)
        (reg:SI 193 [ <retval> ])) policymakerpcr.c:326 -1
     (nil))
(insn 725 724 726 110 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13104+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) policymakerpcr.c:326 -1
     (nil))
(jump_insn 726 725 732 110 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 729)
            (pc))) policymakerpcr.c:326 -1
     (nil)
 -> 729)
(note 732 726 727 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(call_insn 727 732 728 113 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f3a89290000 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) policymakerpcr.c:326 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 728 727 729)
(code_label 729 728 733 114 56 "" [1 uses])
(note 733 729 730 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 730 733 0 114 (use (reg/i:SI 0 ax)) policymakerpcr.c:326 -1
     (nil))

;; Function printPolicyPCR (printPolicyPCR, funcdef_no=3, decl_uid=12725, cgraph_uid=3, symbol_order=4)

Partition 1: size 8 align 8
	pcrDigest_4
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 out+0 S8 A64])
        (reg:DI 5 di [ out ])) policymakerpcr.c:332 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 sizeInBytes+0 S4 A32])
        (reg:SI 4 si [ sizeInBytes ])) policymakerpcr.c:332 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 pcrs+0 S8 A64])
        (reg:DI 1 dx [ pcrs ])) policymakerpcr.c:332 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 digest+0 S8 A64])
        (reg:DI 2 cx [ digest ])) policymakerpcr.c:332 -1
     (nil))
(note 6 5 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 6 13 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 digest+0 S8 A64])) policymakerpcr.c:334 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg/f:DI 109)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:334 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 digest+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 pcrDigest+0 S8 A64])
        (reg:DI 108)) policymakerpcr.c:334 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 out+0 S8 A64])) policymakerpcr.c:336 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) policymakerpcr.c:336 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f3a88ee8090 *.LC29>)) policymakerpcr.c:336 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 110)) policymakerpcr.c:336 -1
     (nil))
(insn 19 18 20 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:336 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f3a89945948 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:336 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 21 20 22 2 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 out+0 S8 A64])) policymakerpcr.c:337 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) policymakerpcr.c:337 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f3a88ee8090 *.LC29>)) policymakerpcr.c:337 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg:DI 111)) policymakerpcr.c:337 -1
     (nil))
(insn 25 24 26 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:337 -1
     (nil))
(call_insn 26 25 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f3a89945948 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:337 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 27 26 28 2 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 out+0 S8 A64])) policymakerpcr.c:338 -1
     (nil))
(insn 28 27 29 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) policymakerpcr.c:338 -1
     (nil))
(insn 29 28 30 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f3a88ee8090 *.LC29>)) policymakerpcr.c:338 -1
     (nil))
(insn 30 29 31 2 (set (reg:DI 5 di)
        (reg:DI 112)) policymakerpcr.c:338 -1
     (nil))
(insn 31 30 32 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:338 -1
     (nil))
(call_insn 32 31 33 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f3a89945948 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:338 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 33 32 34 2 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 out+0 S8 A64])) policymakerpcr.c:339 -1
     (nil))
(insn 34 33 35 2 (set (reg:SI 1 dx)
        (const_int 127 [0x7f])) policymakerpcr.c:339 -1
     (nil))
(insn 35 34 36 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f3a88ee8090 *.LC29>)) policymakerpcr.c:339 -1
     (nil))
(insn 36 35 37 2 (set (reg:DI 5 di)
        (reg:DI 113)) policymakerpcr.c:339 -1
     (nil))
(insn 37 36 38 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:339 -1
     (nil))
(call_insn 38 37 39 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f3a89945948 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:339 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 39 38 40 2 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 pcrs+0 S8 A64])) policymakerpcr.c:341 -1
     (nil))
(insn 40 39 41 2 (set (reg:SI 87 [ D.13136 ])
        (mem/j:SI (reg/f:DI 114) [0 pcrs_11(D)->count+0 S4 A32])) policymakerpcr.c:341 -1
     (nil))
(insn 41 40 42 2 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 out+0 S8 A64])) policymakerpcr.c:341 -1
     (nil))
(insn 42 41 43 2 (set (reg:SI 1 dx)
        (reg:SI 87 [ D.13136 ])) policymakerpcr.c:341 -1
     (nil))
(insn 43 42 44 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f3a88ee8120 *.LC30>)) policymakerpcr.c:341 -1
     (nil))
(insn 44 43 45 2 (set (reg:DI 5 di)
        (reg:DI 115)) policymakerpcr.c:341 -1
     (nil))
(insn 45 44 46 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:341 -1
     (nil))
(call_insn 46 45 47 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f3a89945948 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:341 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 47 46 48 2 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 pcrs+0 S8 A64])) policymakerpcr.c:343 -1
     (nil))
(insn 48 47 49 2 (set (reg:HI 88 [ D.13137 ])
        (mem/j:HI (plus:DI (reg/f:DI 116)
                (const_int 4 [0x4])) [0 pcrs_11(D)->pcrSelections[0].hash+0 S2 A32])) policymakerpcr.c:343 -1
     (nil))
(insn 49 48 50 2 (parallel [
            (set (reg:HI 89 [ D.13137 ])
                (lshiftrt:HI (reg:HI 88 [ D.13137 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:343 -1
     (nil))
(insn 50 49 51 2 (set (reg:SI 90 [ D.13138 ])
        (zero_extend:SI (reg:HI 89 [ D.13137 ]))) policymakerpcr.c:343 -1
     (nil))
(insn 51 50 52 2 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 out+0 S8 A64])) policymakerpcr.c:343 -1
     (nil))
(insn 52 51 53 2 (set (reg:SI 1 dx)
        (reg:SI 90 [ D.13138 ])) policymakerpcr.c:343 -1
     (nil))
(insn 53 52 54 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f3a88ee8090 *.LC29>)) policymakerpcr.c:343 -1
     (nil))
(insn 54 53 55 2 (set (reg:DI 5 di)
        (reg:DI 117)) policymakerpcr.c:343 -1
     (nil))
(insn 55 54 56 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:343 -1
     (nil))
(call_insn 56 55 57 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f3a89945948 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:343 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 57 56 58 2 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 pcrs+0 S8 A64])) policymakerpcr.c:344 -1
     (nil))
(insn 58 57 59 2 (set (reg:HI 91 [ D.13137 ])
        (mem/j:HI (plus:DI (reg/f:DI 118)
                (const_int 4 [0x4])) [0 pcrs_11(D)->pcrSelections[0].hash+0 S2 A32])) policymakerpcr.c:344 -1
     (nil))
(insn 59 58 60 2 (set (reg:SI 92 [ D.13138 ])
        (zero_extend:SI (reg:HI 91 [ D.13137 ]))) policymakerpcr.c:344 -1
     (nil))
(insn 60 59 61 2 (set (reg:SI 93 [ D.13138 ])
        (zero_extend:SI (subreg:QI (reg:SI 92 [ D.13138 ]) 0))) policymakerpcr.c:344 -1
     (nil))
(insn 61 60 62 2 (set (reg:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 out+0 S8 A64])) policymakerpcr.c:344 -1
     (nil))
(insn 62 61 63 2 (set (reg:SI 1 dx)
        (reg:SI 93 [ D.13138 ])) policymakerpcr.c:344 -1
     (nil))
(insn 63 62 64 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f3a88ee8090 *.LC29>)) policymakerpcr.c:344 -1
     (nil))
(insn 64 63 65 2 (set (reg:DI 5 di)
        (reg:DI 119)) policymakerpcr.c:344 -1
     (nil))
(insn 65 64 66 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:344 -1
     (nil))
(call_insn 66 65 67 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f3a89945948 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:344 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 67 66 68 2 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 pcrs+0 S8 A64])) policymakerpcr.c:346 -1
     (nil))
(insn 68 67 69 2 (set (reg:QI 94 [ D.13139 ])
        (mem/j:QI (plus:DI (reg/f:DI 120)
                (const_int 6 [0x6])) [0 pcrs_11(D)->pcrSelections[0].sizeofSelect+0 S1 A16])) policymakerpcr.c:346 -1
     (nil))
(insn 69 68 70 2 (set (reg:SI 95 [ D.13138 ])
        (zero_extend:SI (reg:QI 94 [ D.13139 ]))) policymakerpcr.c:346 -1
     (nil))
(insn 70 69 71 2 (set (reg:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 out+0 S8 A64])) policymakerpcr.c:346 -1
     (nil))
(insn 71 70 72 2 (set (reg:SI 1 dx)
        (reg:SI 95 [ D.13138 ])) policymakerpcr.c:346 -1
     (nil))
(insn 72 71 73 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f3a88ee8090 *.LC29>)) policymakerpcr.c:346 -1
     (nil))
(insn 73 72 74 2 (set (reg:DI 5 di)
        (reg:DI 121)) policymakerpcr.c:346 -1
     (nil))
(insn 74 73 75 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:346 -1
     (nil))
(call_insn 75 74 76 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f3a89945948 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:346 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 76 75 77 2 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 pcrs+0 S8 A64])) policymakerpcr.c:348 -1
     (nil))
(insn 77 76 78 2 (set (reg:QI 96 [ D.13139 ])
        (mem/j:QI (plus:DI (reg/f:DI 122)
                (const_int 7 [0x7])) [0 pcrs_11(D)->pcrSelections[0].pcrSelect+0 S1 A8])) policymakerpcr.c:348 -1
     (nil))
(insn 78 77 79 2 (set (reg:SI 97 [ D.13138 ])
        (zero_extend:SI (reg:QI 96 [ D.13139 ]))) policymakerpcr.c:348 -1
     (nil))
(insn 79 78 80 2 (set (reg:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 out+0 S8 A64])) policymakerpcr.c:348 -1
     (nil))
(insn 80 79 81 2 (set (reg:SI 1 dx)
        (reg:SI 97 [ D.13138 ])) policymakerpcr.c:348 -1
     (nil))
(insn 81 80 82 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f3a88ee8090 *.LC29>)) policymakerpcr.c:348 -1
     (nil))
(insn 82 81 83 2 (set (reg:DI 5 di)
        (reg:DI 123)) policymakerpcr.c:348 -1
     (nil))
(insn 83 82 84 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:348 -1
     (nil))
(call_insn 84 83 85 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f3a89945948 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:348 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 85 84 86 2 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 pcrs+0 S8 A64])) policymakerpcr.c:349 -1
     (nil))
(insn 86 85 87 2 (set (reg:QI 98 [ D.13139 ])
        (mem/j:QI (plus:DI (reg/f:DI 124)
                (const_int 8 [0x8])) [0 pcrs_11(D)->pcrSelections[0].pcrSelect+1 S1 A32])) policymakerpcr.c:349 -1
     (nil))
(insn 87 86 88 2 (set (reg:SI 99 [ D.13138 ])
        (zero_extend:SI (reg:QI 98 [ D.13139 ]))) policymakerpcr.c:349 -1
     (nil))
(insn 88 87 89 2 (set (reg:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 out+0 S8 A64])) policymakerpcr.c:349 -1
     (nil))
(insn 89 88 90 2 (set (reg:SI 1 dx)
        (reg:SI 99 [ D.13138 ])) policymakerpcr.c:349 -1
     (nil))
(insn 90 89 91 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f3a88ee8090 *.LC29>)) policymakerpcr.c:349 -1
     (nil))
(insn 91 90 92 2 (set (reg:DI 5 di)
        (reg:DI 125)) policymakerpcr.c:349 -1
     (nil))
(insn 92 91 93 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:349 -1
     (nil))
(call_insn 93 92 94 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f3a89945948 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:349 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 94 93 95 2 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 pcrs+0 S8 A64])) policymakerpcr.c:350 -1
     (nil))
(insn 95 94 96 2 (set (reg:QI 100 [ D.13139 ])
        (mem/j:QI (plus:DI (reg/f:DI 126)
                (const_int 9 [0x9])) [0 pcrs_11(D)->pcrSelections[0].pcrSelect+2 S1 A8])) policymakerpcr.c:350 -1
     (nil))
(insn 96 95 97 2 (set (reg:SI 101 [ D.13138 ])
        (zero_extend:SI (reg:QI 100 [ D.13139 ]))) policymakerpcr.c:350 -1
     (nil))
(insn 97 96 98 2 (set (reg:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 out+0 S8 A64])) policymakerpcr.c:350 -1
     (nil))
(insn 98 97 99 2 (set (reg:SI 1 dx)
        (reg:SI 101 [ D.13138 ])) policymakerpcr.c:350 -1
     (nil))
(insn 99 98 100 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f3a88ee8090 *.LC29>)) policymakerpcr.c:350 -1
     (nil))
(insn 100 99 101 2 (set (reg:DI 5 di)
        (reg:DI 127)) policymakerpcr.c:350 -1
     (nil))
(insn 101 100 102 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:350 -1
     (nil))
(call_insn 102 101 103 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f3a89945948 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:350 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 103 102 104 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) policymakerpcr.c:352 -1
     (nil))
(jump_insn 104 103 105 2 (set (pc)
        (label_ref 119)) policymakerpcr.c:352 -1
     (nil)
 -> 119)
(barrier 105 104 121)
(code_label 121 105 106 4 61 "" [1 uses])
(note 106 121 107 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 4 (set (reg:DI 102 [ D.13140 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) policymakerpcr.c:353 -1
     (nil))
(insn 108 107 109 4 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 pcrDigest+0 S8 A64])) policymakerpcr.c:353 -1
     (nil))
(insn 109 108 110 4 (parallel [
            (set (reg/f:DI 103 [ D.13141 ])
                (plus:DI (reg:DI 102 [ D.13140 ])
                    (reg/f:DI 128)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:353 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 pcrDigest+0 S8 A64])
            (reg:DI 102 [ D.13140 ]))
        (nil)))
(insn 110 109 111 4 (set (reg:QI 104 [ D.13139 ])
        (mem:QI (reg/f:DI 103 [ D.13141 ]) [0 *_37+0 S1 A8])) policymakerpcr.c:353 -1
     (nil))
(insn 111 110 112 4 (set (reg:SI 105 [ D.13138 ])
        (zero_extend:SI (reg:QI 104 [ D.13139 ]))) policymakerpcr.c:353 -1
     (nil))
(insn 112 111 113 4 (set (reg:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 out+0 S8 A64])) policymakerpcr.c:353 -1
     (nil))
(insn 113 112 114 4 (set (reg:SI 1 dx)
        (reg:SI 105 [ D.13138 ])) policymakerpcr.c:353 -1
     (nil))
(insn 114 113 115 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f3a88ee8090 *.LC29>)) policymakerpcr.c:353 -1
     (nil))
(insn 115 114 116 4 (set (reg:DI 5 di)
        (reg:DI 129)) policymakerpcr.c:353 -1
     (nil))
(insn 116 115 117 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:353 -1
     (nil))
(call_insn 117 116 118 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7f3a89945948 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:353 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 118 117 119 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:352 -1
     (nil))
(code_label 119 118 120 5 60 "" [1 uses])
(note 120 119 122 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 122 120 123 5 (set (reg:SI 130)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) policymakerpcr.c:352 -1
     (nil))
(insn 123 122 124 5 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 130)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 sizeInBytes+0 S4 A32]))) policymakerpcr.c:352 -1
     (nil))
(jump_insn 124 123 125 5 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) policymakerpcr.c:352 -1
     (nil)
 -> 121)
(note 125 124 126 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 6 (set (reg:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 out+0 S8 A64])) policymakerpcr.c:355 -1
     (nil))
(insn 127 126 128 6 (set (reg:DI 4 si)
        (reg:DI 131)) policymakerpcr.c:355 -1
     (nil))
(insn 128 127 129 6 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policymakerpcr.c:355 -1
     (nil))
(call_insn 129 128 134 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fputc") [flags 0x41]  <function_decl 0x7f3a89947000 __builtin_fputc>) [0 __builtin_fputc S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:355 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 134 129 0 6 (const_int 0 [0]) policymakerpcr.c:356 -1
     (nil))

;; Function Format_FromHexascii (Format_FromHexascii, funcdef_no=4, decl_uid=12729, cgraph_uid=4, symbol_order=5)

Partition 1: size 8 align 8
	i_2
Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Removing jump 41.
Merging block 9 into block 7...
Merged blocks 7 and 9.
Merged 7 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 binary+0 S8 A64])
        (reg:DI 5 di [ binary ])) policymakerpcr.c:367 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 string+0 S8 A64])
        (reg:DI 4 si [ string ])) policymakerpcr.c:367 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 length+0 S8 A64])
        (reg:DI 1 dx [ length ])) policymakerpcr.c:367 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) policymakerpcr.c:368 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
        (const_int 0 [0])) policymakerpcr.c:371 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (label_ref 26)) policymakerpcr.c:371 -1
     (nil)
 -> 26)
(barrier 11 10 31)
(code_label 31 11 12 4 66 "" [1 uses])
(note 12 31 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 92)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])) policymakerpcr.c:373 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg:DI 87 [ D.13144 ])
                (ashift:DI (reg:DI 92)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:373 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 15 14 16 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 string+0 S8 A64])) policymakerpcr.c:372 -1
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg/f:DI 88 [ D.13145 ])
                (plus:DI (reg:DI 87 [ D.13144 ])
                    (reg/f:DI 93)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:372 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 string+0 S8 A64])
            (reg:DI 87 [ D.13144 ]))
        (nil)))
(insn 17 16 18 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 binary+0 S8 A64])) policymakerpcr.c:372 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 95)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])) policymakerpcr.c:372 -1
     (nil))
(insn 19 18 20 4 (parallel [
            (set (reg/f:DI 89 [ D.13146 ])
                (plus:DI (reg/f:DI 94)
                    (reg:DI 95)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:372 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 binary+0 S8 A64])
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64]))
        (nil)))
(insn 20 19 21 4 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.13145 ])) policymakerpcr.c:372 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.13146 ])) policymakerpcr.c:372 -1
     (nil))
(call_insn 22 21 23 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Format_ByteFromHexascii") [flags 0x3]  <function_decl 0x7f3a89242948 Format_ByteFromHexascii>) [0 Format_ByteFromHexascii S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:372 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 23 22 24 4 (set (reg:SI 96)
        (reg:SI 0 ax)) policymakerpcr.c:372 -1
     (nil))
(insn 24 23 25 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (reg:SI 96)) policymakerpcr.c:372 -1
     (nil))
(insn 25 24 26 4 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:371 -1
     (nil))
(code_label 26 25 27 5 64 "" [1 uses])
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:371 -1
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) policymakerpcr.c:371 -1
     (nil)
 -> 35)
(note 30 29 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 30 33 6 (set (reg:DI 97)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])) policymakerpcr.c:371 -1
     (nil))
(insn 33 32 34 6 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 97)
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 length+0 S8 A64]))) policymakerpcr.c:371 -1
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) policymakerpcr.c:371 -1
     (nil)
 -> 31)
(code_label 35 34 36 7 65 "" [1 uses])
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 40 7 (set (reg:SI 90 [ D.13147 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) policymakerpcr.c:376 -1
     (nil))
(insn 40 37 44 7 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.13147 ])) policymakerpcr.c:376 -1
     (nil))
(insn 44 40 45 7 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) policymakerpcr.c:377 -1
     (nil))
(insn 45 44 0 7 (use (reg/i:SI 0 ax)) policymakerpcr.c:377 -1
     (nil))

;; Function Format_ByteFromHexascii (Format_ByteFromHexascii, funcdef_no=5, decl_uid=12732, cgraph_uid=5, symbol_order=6)

Partition 1: size 8 align 8
	i_3
Partition 0: size 4 align 4
	rc_1
Partition 2: size 1 align 1
	c_16

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Removing jump 98.
Merging block 19 into block 17...
Merged blocks 17 and 19.
Merged 17 and 19 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])
        (reg:DI 5 di [ byte ])) policymakerpcr.c:384 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 string+0 S8 A64])
        (reg:DI 4 si [ string ])) policymakerpcr.c:384 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) policymakerpcr.c:385 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymakerpcr.c:388 -1
     (nil))
(insn 9 8 10 2 (set (mem:QI (reg/f:DI 105) [0 *byte_8(D)+0 S1 A8])
        (const_int 0 [0])) policymakerpcr.c:388 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
        (const_int 0 [0])) policymakerpcr.c:390 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (label_ref 84)) policymakerpcr.c:390 -1
     (nil)
 -> 84)
(barrier 12 11 89)
(code_label 89 12 13 4 75 "" [1 uses])
(note 13 89 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymakerpcr.c:391 -1
     (nil))
(insn 15 14 16 4 (set (reg:QI 87 [ D.13148 ])
        (mem:QI (reg/f:DI 106) [0 *byte_8(D)+0 S1 A8])) policymakerpcr.c:391 -1
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg:QI 88 [ D.13148 ])
                (ashift:QI (reg:QI 87 [ D.13148 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:391 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymakerpcr.c:391 -1
     (nil))
(insn 18 17 19 4 (set (mem:QI (reg/f:DI 107) [0 *byte_8(D)+0 S1 A8])
        (reg:QI 88 [ D.13148 ])) policymakerpcr.c:391 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 string+0 S8 A64])) policymakerpcr.c:392 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 109)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])) policymakerpcr.c:392 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/f:DI 89 [ D.13149 ])
                (plus:DI (reg/f:DI 108)
                    (reg:DI 109)))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:392 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 string+0 S8 A64])
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64]))
        (nil)))
(insn 22 21 23 4 (set (reg:QI 110)
        (mem:QI (reg/f:DI 89 [ D.13149 ]) [0 *_15+0 S1 A8])) policymakerpcr.c:392 -1
     (nil))
(insn 23 22 24 4 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
        (reg:QI 110)) policymakerpcr.c:392 -1
     (nil))
(insn 24 23 25 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
            (const_int 47 [0x2f]))) policymakerpcr.c:394 -1
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) policymakerpcr.c:394 -1
     (nil)
 -> 39)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
            (const_int 57 [0x39]))) policymakerpcr.c:394 -1
     (nil))
(jump_insn 28 27 29 5 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) policymakerpcr.c:394 -1
     (nil)
 -> 39)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymakerpcr.c:395 -1
     (nil))
(insn 31 30 32 6 (set (reg:QI 90 [ D.13148 ])
        (mem:QI (reg/f:DI 111) [0 *byte_8(D)+0 S1 A8])) policymakerpcr.c:395 -1
     (nil))
(insn 32 31 33 6 (set (reg:QI 91 [ D.13148 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])) policymakerpcr.c:395 -1
     (nil))
(insn 33 32 34 6 (parallel [
            (set (reg:QI 92 [ D.13148 ])
                (plus:QI (reg:QI 90 [ D.13148 ])
                    (reg:QI 91 [ D.13148 ])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:395 -1
     (nil))
(insn 34 33 35 6 (parallel [
            (set (reg:QI 93 [ D.13148 ])
                (plus:QI (reg:QI 92 [ D.13148 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:395 -1
     (nil))
(insn 35 34 36 6 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymakerpcr.c:395 -1
     (nil))
(insn 36 35 37 6 (set (mem:QI (reg/f:DI 112) [0 *byte_8(D)+0 S1 A8])
        (reg:QI 93 [ D.13148 ])) policymakerpcr.c:395 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (label_ref 81)) policymakerpcr.c:395 -1
     (nil)
 -> 81)
(barrier 38 37 39)
(code_label 39 38 40 7 70 "" [2 uses])
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
            (const_int 96 [0x60]))) policymakerpcr.c:397 -1
     (nil))
(jump_insn 42 41 43 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) policymakerpcr.c:397 -1
     (nil)
 -> 56)
(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
            (const_int 102 [0x66]))) policymakerpcr.c:397 -1
     (nil))
(jump_insn 45 44 46 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) policymakerpcr.c:397 -1
     (nil)
 -> 56)
(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 9 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymakerpcr.c:398 -1
     (nil))
(insn 48 47 49 9 (set (reg:QI 94 [ D.13148 ])
        (mem:QI (reg/f:DI 113) [0 *byte_8(D)+0 S1 A8])) policymakerpcr.c:398 -1
     (nil))
(insn 49 48 50 9 (set (reg:QI 95 [ D.13148 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])) policymakerpcr.c:398 -1
     (nil))
(insn 50 49 51 9 (parallel [
            (set (reg:QI 96 [ D.13148 ])
                (plus:QI (reg:QI 94 [ D.13148 ])
                    (reg:QI 95 [ D.13148 ])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:398 -1
     (nil))
(insn 51 50 52 9 (parallel [
            (set (reg:QI 97 [ D.13148 ])
                (plus:QI (reg:QI 96 [ D.13148 ])
                    (const_int -87 [0xffffffffffffffa9])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:398 -1
     (nil))
(insn 52 51 53 9 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymakerpcr.c:398 -1
     (nil))
(insn 53 52 54 9 (set (mem:QI (reg/f:DI 114) [0 *byte_8(D)+0 S1 A8])
        (reg:QI 97 [ D.13148 ])) policymakerpcr.c:398 -1
     (nil))
(jump_insn 54 53 55 9 (set (pc)
        (label_ref 81)) policymakerpcr.c:398 -1
     (nil)
 -> 81)
(barrier 55 54 56)
(code_label 56 55 57 10 72 "" [2 uses])
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
            (const_int 64 [0x40]))) policymakerpcr.c:400 -1
     (nil))
(jump_insn 59 58 60 10 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) policymakerpcr.c:400 -1
     (nil)
 -> 73)
(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])
            (const_int 70 [0x46]))) policymakerpcr.c:400 -1
     (nil))
(jump_insn 62 61 63 11 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) policymakerpcr.c:400 -1
     (nil)
 -> 73)
(note 63 62 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 12 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymakerpcr.c:401 -1
     (nil))
(insn 65 64 66 12 (set (reg:QI 98 [ D.13148 ])
        (mem:QI (reg/f:DI 115) [0 *byte_8(D)+0 S1 A8])) policymakerpcr.c:401 -1
     (nil))
(insn 66 65 67 12 (set (reg:QI 99 [ D.13148 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8])) policymakerpcr.c:401 -1
     (nil))
(insn 67 66 68 12 (parallel [
            (set (reg:QI 100 [ D.13148 ])
                (plus:QI (reg:QI 98 [ D.13148 ])
                    (reg:QI 99 [ D.13148 ])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:401 -1
     (nil))
(insn 68 67 69 12 (parallel [
            (set (reg:QI 101 [ D.13148 ])
                (plus:QI (reg:QI 100 [ D.13148 ])
                    (const_int -55 [0xffffffffffffffc9])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:401 -1
     (nil))
(insn 69 68 70 12 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 byte+0 S8 A64])) policymakerpcr.c:401 -1
     (nil))
(insn 70 69 71 12 (set (mem:QI (reg/f:DI 116) [0 *byte_8(D)+0 S1 A8])
        (reg:QI 101 [ D.13148 ])) policymakerpcr.c:401 -1
     (nil))
(jump_insn 71 70 72 12 (set (pc)
        (label_ref 81)) policymakerpcr.c:401 -1
     (nil)
 -> 81)
(barrier 72 71 73)
(code_label 73 72 74 13 73 "" [2 uses])
(note 74 73 75 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 13 (set (reg:SI 102 [ D.13150 ])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -13 [0xfffffffffffffff3])) [0 c+0 S1 A8]))) policymakerpcr.c:404 -1
     (nil))
(insn 76 75 77 13 (set (reg:SI 4 si)
        (reg:SI 102 [ D.13150 ])) policymakerpcr.c:404 -1
     (nil))
(insn 77 76 78 13 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f3a88ef7120 *.LC31>)) policymakerpcr.c:404 -1
     (nil))
(insn 78 77 79 13 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:404 -1
     (nil))
(call_insn 79 78 80 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f3a89947ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:404 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 80 79 81 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) policymakerpcr.c:406 -1
     (nil))
(code_label 81 80 82 14 71 "" [3 uses])
(note 82 81 83 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 14 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) policymakerpcr.c:390 -1
     (nil))
(code_label 84 83 85 15 69 "" [1 uses])
(note 85 84 86 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) policymakerpcr.c:390 -1
     (nil))
(jump_insn 87 86 88 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) policymakerpcr.c:390 -1
     (nil)
 -> 92)
(note 88 87 90 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 90 88 91 16 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S8 A64])
            (const_int 1 [0x1]))) policymakerpcr.c:390 -1
     (nil))
(jump_insn 91 90 92 16 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) policymakerpcr.c:390 -1
     (nil)
 -> 89)
(code_label 92 91 93 17 74 "" [1 uses])
(note 93 92 94 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 97 17 (set (reg:SI 103 [ D.13150 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) policymakerpcr.c:409 -1
     (nil))
(insn 97 94 101 17 (set (reg:SI 104 [ <retval> ])
        (reg:SI 103 [ D.13150 ])) policymakerpcr.c:409 -1
     (nil))
(insn 101 97 102 17 (set (reg/i:SI 0 ax)
        (reg:SI 104 [ <retval> ])) policymakerpcr.c:410 -1
     (nil))
(insn 102 101 0 17 (use (reg/i:SI 0 ax)) policymakerpcr.c:410 -1
     (nil))

;; Function printUsage (printUsage, funcdef_no=6, decl_uid=12720, cgraph_uid=6, symbol_order=7)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policymakerpcr.c:415 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f3a8994a000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:415 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f3a88ef7c60 *.LC32>)) policymakerpcr.c:416 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:416 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policymakerpcr.c:417 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f3a8994a000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:417 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f3a88ef7cf0 *.LC33>)) policymakerpcr.c:418 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:418 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policymakerpcr.c:419 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f3a8994a000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:419 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f3a88ef7d80 *.LC34>)) policymakerpcr.c:420 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:420 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policymakerpcr.c:421 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f3a8994a000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:421 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f3a88ef7e10 *.LC35>)) policymakerpcr.c:422 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:422 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f3a88ef7ea0 *.LC36>)) policymakerpcr.c:423 -1
     (nil))
(call_insn 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:423 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7f3a88ef7f30 *.LC37>)) policymakerpcr.c:424 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:424 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7f3a88f03000 *.LC38>)) policymakerpcr.c:425 -1
     (nil))
(call_insn 26 25 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:425 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (const_int 24 [0x18])) policymakerpcr.c:426 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7f3a88f03090 *.LC39>)) policymakerpcr.c:426 -1
     (nil))
(insn 29 28 30 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) policymakerpcr.c:426 -1
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f3a89947ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:426 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC40") [flags 0x2]  <var_decl 0x7f3a88f03120 *.LC40>)) policymakerpcr.c:427 -1
     (nil))
(call_insn 32 31 33 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:427 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 33 32 34 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x7f3a88f031b0 *.LC41>)) policymakerpcr.c:428 -1
     (nil))
(call_insn 34 33 35 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:428 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC42") [flags 0x2]  <var_decl 0x7f3a88f03240 *.LC42>)) policymakerpcr.c:429 -1
     (nil))
(call_insn 36 35 37 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f3a8994a360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:429 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) policymakerpcr.c:430 -1
     (nil))
(call_insn 38 37 39 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f3a8994a000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) policymakerpcr.c:430 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 39 38 40 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) policymakerpcr.c:431 -1
     (nil))
(call_insn 40 39 41 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3a8995d000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) policymakerpcr.c:431 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 41 40 0)
