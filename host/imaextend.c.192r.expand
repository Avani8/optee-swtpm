
;; Function main (main, funcdef_no=2, decl_uid=6842, cgraph_uid=2, symbol_order=4)

Partition 10: size 400 align 16
	in
Partition 13: size 312 align 16
	imaEvent
Partition 12: size 20 align 16
	oneDigest
Partition 11: size 20 align 16
	zeroDigest
Partition 6: size 8 align 8
	infile_39
Partition 2: size 8 align 8
	infilename_11
Partition 17: size 8 align 8
	num
Partition 16: size 8 align 8
	submsg
Partition 15: size 8 align 8
	msg
Partition 9: size 8 align 8
	tssContext
Partition 8: size 4 align 4
	rc1_140
Partition 7: size 4 align 4
	notAllZero_121
Partition 5: size 4 align 4
	lineNum_16
Partition 4: size 4 align 4
	algs_15
Partition 3: size 4 align 4
	littleEndian_13
Partition 1: size 4 align 4
	i_9
Partition 0: size 4 align 4
	rc_1
Partition 14: size 4 align 4
	endOfFile

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 57->59 redirected to 61
Merging block 59 into block 58...
Merged blocks 58 and 59.
Merged 58 and 59 without moving.
Merging block 64 into block 63...
Merged blocks 63 and 64.
Merged 63 and 64 without moving.
Removing jump 471.
Merging block 65 into block 63...
Merged blocks 63 and 65.
Merged 63 and 65 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -868 [0xfffffffffffffc9c])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) imaextend.c:64 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -880 [0xfffffffffffffc90])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) imaextend.c:64 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.7030+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:64 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) imaextend.c:65 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -856 [0xfffffffffffffca8])) [0 i+0 S4 A32])
        (const_int 0 [0])) imaextend.c:66 -1
     (nil))
(insn 10 9 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 tssContext+0 S8 A64])
        (const_int 0 [0])) imaextend.c:67 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -800 [0xfffffffffffffce0])) [0 infilename+0 S8 A64])
        (const_int 0 [0])) imaextend.c:69 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -792 [0xfffffffffffffce8])) [0 infile+0 S8 A64])
        (const_int 0 [0])) imaextend.c:70 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -852 [0xfffffffffffffcac])) [0 littleEndian+0 S4 A32])
        (const_int 0 [0])) imaextend.c:71 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 87 [ D.7021 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7faec5d8a5a0 stdout>) [0 stdout+0 S8 A64])) imaextend.c:73 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) imaextend.c:73 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) imaextend.c:73 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (const_int 0 [0])) imaextend.c:73 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.7021 ])) imaextend.c:73 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("setvbuf") [flags 0x41]  <function_decl 0x7faec5dca1b0 setvbuf>) [0 setvbuf S1 A8])
            (const_int 0 [0]))) imaextend.c:73 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 20 19 21 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7faec56cc360 *.LC0>)) imaextend.c:74 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) imaextend.c:74 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (const_int 0 [0])) imaextend.c:74 -1
     (nil))
(call_insn 23 22 24 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7faec5a28d80 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) imaextend.c:74 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 24 23 25 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -856 [0xfffffffffffffca8])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) imaextend.c:76 -1
     (nil))
(jump_insn 25 24 26 2 (set (pc)
        (label_ref 138)) imaextend.c:76 -1
     (nil)
 -> 138)
(barrier 26 25 140)
(code_label 140 26 27 4 9 "" [1 uses])
(note 27 140 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg:SI 137)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -856 [0xfffffffffffffca8])) [0 i+0 S4 A32])) imaextend.c:77 -1
     (nil))
(insn 29 28 30 4 (set (reg:DI 88 [ D.7022 ])
        (sign_extend:DI (reg:SI 137))) imaextend.c:77 -1
     (nil))
(insn 30 29 31 4 (parallel [
            (set (reg:DI 89 [ D.7022 ])
                (ashift:DI (reg:DI 88 [ D.7022 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:77 -1
     (nil))
(insn 31 30 32 4 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -880 [0xfffffffffffffc90])) [0 argv+0 S8 A64])) imaextend.c:77 -1
     (nil))
(insn 32 31 33 4 (parallel [
            (set (reg/f:DI 90 [ D.7023 ])
                (plus:DI (reg:DI 89 [ D.7022 ])
                    (reg/f:DI 138)))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:77 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -880 [0xfffffffffffffc90])) [0 argv+0 S8 A64])
            (reg:DI 89 [ D.7022 ]))
        (nil)))
(insn 33 32 34 4 (set (reg/f:DI 91 [ D.7024 ])
        (mem/f:DI (reg/f:DI 90 [ D.7023 ]) [0 *_49+0 S8 A64])) imaextend.c:77 -1
     (nil))
(insn 34 33 35 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7faec56cc3f0 *.LC1>)) imaextend.c:77 -1
     (nil))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.7024 ])) imaextend.c:77 -1
     (nil))
(call_insn/i 36 35 37 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7faec5cd20d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) imaextend.c:77 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 37 36 38 4 (set (reg:SI 92 [ D.7025 ])
        (reg:SI 0 ax)) imaextend.c:77 -1
     (nil))
(insn 38 37 39 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.7025 ])
            (const_int 0 [0]))) imaextend.c:77 -1
     (nil))
(jump_insn 39 38 40 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) imaextend.c:77 -1
     (nil)
 -> 63)
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -856 [0xfffffffffffffca8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -856 [0xfffffffffffffca8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:78 -1
     (nil))
(insn 42 41 43 5 (set (reg:SI 139)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -856 [0xfffffffffffffca8])) [0 i+0 S4 A32])) imaextend.c:79 -1
     (nil))
(insn 43 42 44 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 139)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -868 [0xfffffffffffffc9c])) [0 argc+0 S4 A32]))) imaextend.c:79 -1
     (nil))
(jump_insn 44 43 45 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) imaextend.c:79 -1
     (nil)
 -> 55)
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 6 (set (reg:SI 140)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -856 [0xfffffffffffffca8])) [0 i+0 S4 A32])) imaextend.c:80 -1
     (nil))
(insn 47 46 48 6 (set (reg:DI 93 [ D.7022 ])
        (sign_extend:DI (reg:SI 140))) imaextend.c:80 -1
     (nil))
(insn 48 47 49 6 (parallel [
            (set (reg:DI 94 [ D.7022 ])
                (ashift:DI (reg:DI 93 [ D.7022 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:80 -1
     (nil))
(insn 49 48 50 6 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -880 [0xfffffffffffffc90])) [0 argv+0 S8 A64])) imaextend.c:80 -1
     (nil))
(insn 50 49 51 6 (parallel [
            (set (reg/f:DI 95 [ D.7023 ])
                (plus:DI (reg:DI 94 [ D.7022 ])
                    (reg/f:DI 141)))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:80 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -880 [0xfffffffffffffc90])) [0 argv+0 S8 A64])
            (reg:DI 94 [ D.7022 ]))
        (nil)))
(insn 51 50 52 6 (set (reg/f:DI 142)
        (mem/f:DI (reg/f:DI 95 [ D.7023 ]) [0 *_55+0 S8 A64])) imaextend.c:80 -1
     (nil))
(insn 52 51 53 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -800 [0xfffffffffffffce0])) [0 infilename+0 S8 A64])
        (reg/f:DI 142)) imaextend.c:80 -1
     (nil))
(jump_insn 53 52 54 6 (set (pc)
        (label_ref 135)) -1
     (nil)
 -> 135)
(barrier 54 53 55)
(code_label 55 54 56 7 4 "" [1 uses])
(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7faec56cc480 *.LC2>)) imaextend.c:83 -1
     (nil))
(call_insn 58 57 59 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7faec5cdb360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imaextend.c:83 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 59 58 60 7 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7faec5688a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) imaextend.c:84 -1
     (nil)
    (nil))
(insn 60 59 61 7 (set (reg:SI 5 di)
        (const_int 2 [0x2])) imaextend.c:85 -1
     (nil))
(call_insn 61 60 62 7 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7faec5cee000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) imaextend.c:85 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 62 61 63)
(code_label 63 62 64 8 3 "" [1 uses])
(note 64 63 65 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 8 (set (reg:SI 143)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -856 [0xfffffffffffffca8])) [0 i+0 S4 A32])) imaextend.c:88 -1
     (nil))
(insn 66 65 67 8 (set (reg:DI 96 [ D.7022 ])
        (sign_extend:DI (reg:SI 143))) imaextend.c:88 -1
     (nil))
(insn 67 66 68 8 (parallel [
            (set (reg:DI 97 [ D.7022 ])
                (ashift:DI (reg:DI 96 [ D.7022 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:88 -1
     (nil))
(insn 68 67 69 8 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -880 [0xfffffffffffffc90])) [0 argv+0 S8 A64])) imaextend.c:88 -1
     (nil))
(insn 69 68 70 8 (parallel [
            (set (reg/f:DI 98 [ D.7023 ])
                (plus:DI (reg:DI 97 [ D.7022 ])
                    (reg/f:DI 144)))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:88 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -880 [0xfffffffffffffc90])) [0 argv+0 S8 A64])
            (reg:DI 97 [ D.7022 ]))
        (nil)))
(insn 70 69 71 8 (set (reg/f:DI 99 [ D.7024 ])
        (mem/f:DI (reg/f:DI 98 [ D.7023 ]) [0 *_62+0 S8 A64])) imaextend.c:88 -1
     (nil))
(insn 71 70 72 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7faec56cc510 *.LC3>)) imaextend.c:88 -1
     (nil))
(insn 72 71 73 8 (set (reg:DI 5 di)
        (reg/f:DI 99 [ D.7024 ])) imaextend.c:88 -1
     (nil))
(call_insn/i 73 72 74 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7faec5cd20d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) imaextend.c:88 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 74 73 75 8 (set (reg:SI 100 [ D.7025 ])
        (reg:SI 0 ax)) imaextend.c:88 -1
     (nil))
(insn 75 74 76 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.7025 ])
            (const_int 0 [0]))) imaextend.c:88 -1
     (nil))
(jump_insn 76 75 77 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) imaextend.c:88 -1
     (nil)
 -> 81)
(note 77 76 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -852 [0xfffffffffffffcac])) [0 littleEndian+0 S4 A32])
        (const_int 1 [0x1])) imaextend.c:89 -1
     (nil))
(jump_insn 79 78 80 9 (set (pc)
        (label_ref 135)) -1
     (nil)
 -> 135)
(barrier 80 79 81)
(code_label 81 80 82 10 6 "" [1 uses])
(note 82 81 83 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 10 (set (reg:SI 145)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -856 [0xfffffffffffffca8])) [0 i+0 S4 A32])) imaextend.c:91 -1
     (nil))
(insn 84 83 85 10 (set (reg:DI 101 [ D.7022 ])
        (sign_extend:DI (reg:SI 145))) imaextend.c:91 -1
     (nil))
(insn 85 84 86 10 (parallel [
            (set (reg:DI 102 [ D.7022 ])
                (ashift:DI (reg:DI 101 [ D.7022 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:91 -1
     (nil))
(insn 86 85 87 10 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -880 [0xfffffffffffffc90])) [0 argv+0 S8 A64])) imaextend.c:91 -1
     (nil))
(insn 87 86 88 10 (parallel [
            (set (reg/f:DI 103 [ D.7023 ])
                (plus:DI (reg:DI 102 [ D.7022 ])
                    (reg/f:DI 146)))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:91 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -880 [0xfffffffffffffc90])) [0 argv+0 S8 A64])
            (reg:DI 102 [ D.7022 ]))
        (nil)))
(insn 88 87 89 10 (set (reg/f:DI 104 [ D.7024 ])
        (mem/f:DI (reg/f:DI 103 [ D.7023 ]) [0 *_68+0 S8 A64])) imaextend.c:91 -1
     (nil))
(insn 89 88 90 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7faec56cc5a0 *.LC4>)) imaextend.c:91 -1
     (nil))
(insn 90 89 91 10 (set (reg:DI 5 di)
        (reg/f:DI 104 [ D.7024 ])) imaextend.c:91 -1
     (nil))
(call_insn/i 91 90 92 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7faec5cd20d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) imaextend.c:91 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 92 91 93 10 (set (reg:SI 105 [ D.7025 ])
        (reg:SI 0 ax)) imaextend.c:91 -1
     (nil))
(insn 93 92 94 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 105 [ D.7025 ])
            (const_int 0 [0]))) imaextend.c:91 -1
     (nil))
(jump_insn 94 93 95 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) imaextend.c:91 -1
     (nil)
 -> 99)
(note 95 94 96 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(call_insn 96 95 97 11 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7faec5688a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) imaextend.c:92 -1
     (nil)
    (nil))
(jump_insn 97 96 98 11 (set (pc)
        (label_ref 135)) -1
     (nil)
 -> 135)
(barrier 98 97 99)
(code_label 99 98 100 12 7 "" [1 uses])
(note 100 99 101 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 12 (set (reg:SI 147)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -856 [0xfffffffffffffca8])) [0 i+0 S4 A32])) imaextend.c:94 -1
     (nil))
(insn 102 101 103 12 (set (reg:DI 106 [ D.7022 ])
        (sign_extend:DI (reg:SI 147))) imaextend.c:94 -1
     (nil))
(insn 103 102 104 12 (parallel [
            (set (reg:DI 107 [ D.7022 ])
                (ashift:DI (reg:DI 106 [ D.7022 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:94 -1
     (nil))
(insn 104 103 105 12 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -880 [0xfffffffffffffc90])) [0 argv+0 S8 A64])) imaextend.c:94 -1
     (nil))
(insn 105 104 106 12 (parallel [
            (set (reg/f:DI 108 [ D.7023 ])
                (plus:DI (reg:DI 107 [ D.7022 ])
                    (reg/f:DI 148)))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:94 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -880 [0xfffffffffffffc90])) [0 argv+0 S8 A64])
            (reg:DI 107 [ D.7022 ]))
        (nil)))
(insn 106 105 107 12 (set (reg/f:DI 109 [ D.7024 ])
        (mem/f:DI (reg/f:DI 108 [ D.7023 ]) [0 *_74+0 S8 A64])) imaextend.c:94 -1
     (nil))
(insn 107 106 108 12 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7faec56cc630 *.LC5>)) imaextend.c:94 -1
     (nil))
(insn 108 107 109 12 (set (reg:DI 5 di)
        (reg/f:DI 109 [ D.7024 ])) imaextend.c:94 -1
     (nil))
(call_insn/i 109 108 110 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7faec5cd20d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) imaextend.c:94 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 110 109 111 12 (set (reg:SI 110 [ D.7025 ])
        (reg:SI 0 ax)) imaextend.c:94 -1
     (nil))
(insn 111 110 112 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 110 [ D.7025 ])
            (const_int 0 [0]))) imaextend.c:94 -1
     (nil))
(jump_insn 112 111 113 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) imaextend.c:94 -1
     (nil)
 -> 122)
(note 113 112 114 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 13 (set (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7faec5880a20 verbose>) [0 verbose+0 S4 A32])
        (const_int 1 [0x1])) imaextend.c:95 -1
     (nil))
(insn 115 114 116 13 (set (mem/c:SI (symbol_ref:DI ("vverbose") [flags 0x2]  <var_decl 0x7faec5880ab0 vverbose>) [0 vverbose+0 S4 A32])
        (const_int 1 [0x1])) imaextend.c:96 -1
     (nil))
(insn 116 115 117 13 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7faec56cc6c0 *.LC6>)) imaextend.c:97 -1
     (nil))
(insn 117 116 118 13 (set (reg:SI 4 si)
        (const_int 1 [0x1])) imaextend.c:97 -1
     (nil))
(insn 118 117 119 13 (set (reg:DI 5 di)
        (const_int 0 [0])) imaextend.c:97 -1
     (nil))
(call_insn 119 118 120 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7faec5a28d80 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) imaextend.c:97 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 120 119 121 13 (set (pc)
        (label_ref 135)) -1
     (nil)
 -> 135)
(barrier 121 120 122)
(code_label 122 121 123 14 8 "" [1 uses])
(note 123 122 124 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 14 (set (reg:SI 149)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -856 [0xfffffffffffffca8])) [0 i+0 S4 A32])) imaextend.c:100 -1
     (nil))
(insn 125 124 126 14 (set (reg:DI 111 [ D.7022 ])
        (sign_extend:DI (reg:SI 149))) imaextend.c:100 -1
     (nil))
(insn 126 125 127 14 (parallel [
            (set (reg:DI 112 [ D.7022 ])
                (ashift:DI (reg:DI 111 [ D.7022 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:100 -1
     (nil))
(insn 127 126 128 14 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -880 [0xfffffffffffffc90])) [0 argv+0 S8 A64])) imaextend.c:100 -1
     (nil))
(insn 128 127 129 14 (parallel [
            (set (reg/f:DI 113 [ D.7023 ])
                (plus:DI (reg:DI 112 [ D.7022 ])
                    (reg/f:DI 150)))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:100 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -880 [0xfffffffffffffc90])) [0 argv+0 S8 A64])
            (reg:DI 112 [ D.7022 ]))
        (nil)))
(insn 129 128 130 14 (set (reg/f:DI 114 [ D.7024 ])
        (mem/f:DI (reg/f:DI 113 [ D.7023 ]) [0 *_82+0 S8 A64])) imaextend.c:100 -1
     (nil))
(insn 130 129 131 14 (set (reg:DI 4 si)
        (reg/f:DI 114 [ D.7024 ])) imaextend.c:100 -1
     (nil))
(insn 131 130 132 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7faec56cc750 *.LC7>)) imaextend.c:100 -1
     (nil))
(insn 132 131 133 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) imaextend.c:100 -1
     (nil))
(call_insn 133 132 134 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7faec5cd8ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imaextend.c:100 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(call_insn 134 133 135 14 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7faec5688a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) imaextend.c:101 -1
     (nil)
    (nil))
(code_label 135 134 136 15 5 "" [4 uses])
(note 136 135 137 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -856 [0xfffffffffffffca8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -856 [0xfffffffffffffca8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:76 -1
     (nil))
(code_label 138 137 139 16 2 "" [1 uses])
(note 139 138 141 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 141 139 142 16 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -856 [0xfffffffffffffca8])) [0 i+0 S4 A32])) imaextend.c:76 -1
     (nil))
(insn 142 141 143 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 151)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -868 [0xfffffffffffffc9c])) [0 argc+0 S4 A32]))) imaextend.c:76 -1
     (nil))
(jump_insn 143 142 144 16 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) imaextend.c:76 -1
     (nil)
 -> 140)
(note 144 143 145 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -800 [0xfffffffffffffce0])) [0 infilename+0 S8 A64])
            (const_int 0 [0]))) imaextend.c:104 -1
     (nil))
(jump_insn 146 145 147 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) imaextend.c:104 -1
     (nil)
 -> 151)
(note 147 146 148 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7faec56cc7e0 *.LC8>)) imaextend.c:105 -1
     (nil))
(call_insn 149 148 150 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7faec5cdb360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imaextend.c:105 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 150 149 151 18 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7faec5688a20 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) imaextend.c:106 -1
     (nil)
    (nil))
(code_label 151 150 152 19 10 "" [1 uses])
(note 152 151 153 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 19 (set (reg:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -800 [0xfffffffffffffce0])) [0 infilename+0 S8 A64])) imaextend.c:111 -1
     (nil))
(insn 154 153 155 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7faec56cc870 *.LC9>)) imaextend.c:111 -1
     (nil))
(insn 155 154 156 19 (set (reg:DI 5 di)
        (reg:DI 152)) imaextend.c:111 -1
     (nil))
(call_insn 156 155 157 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7faec5dc2bd0 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) imaextend.c:111 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 157 156 158 19 (set (reg:DI 153)
        (reg:DI 0 ax)) imaextend.c:111 -1
     (nil))
(insn 158 157 159 19 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -792 [0xfffffffffffffce8])) [0 infile+0 S8 A64])
        (reg:DI 153)) imaextend.c:111 -1
     (nil))
(insn 159 158 160 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -792 [0xfffffffffffffce8])) [0 infile+0 S8 A64])
            (const_int 0 [0]))) imaextend.c:112 -1
     (nil))
(jump_insn 160 159 161 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) imaextend.c:112 -1
     (nil)
 -> 170)
(note 161 160 162 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 20 (set (reg:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -800 [0xfffffffffffffce0])) [0 infilename+0 S8 A64])) imaextend.c:113 -1
     (nil))
(insn 163 162 164 20 (set (reg:DI 4 si)
        (reg:DI 154)) imaextend.c:113 -1
     (nil))
(insn 164 163 165 20 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7faec56cc900 *.LC10>)) imaextend.c:113 -1
     (nil))
(insn 165 164 166 20 (set (reg:QI 0 ax)
        (const_int 0 [0])) imaextend.c:113 -1
     (nil))
(call_insn 166 165 167 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7faec5cd8ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imaextend.c:113 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 167 166 168 20 (set (reg:SI 5 di)
        (const_int -4 [0xfffffffffffffffc])) imaextend.c:114 -1
     (nil))
(call_insn 168 167 169 20 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7faec5cee000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) imaextend.c:114 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 169 168 170)
(code_label 170 169 171 21 11 "" [1 uses])
(note 171 170 172 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imaextend.c:117 -1
     (nil))
(jump_insn 173 172 174 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 180)
            (pc))) imaextend.c:117 -1
     (nil)
 -> 180)
(note 174 173 175 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 22 (parallel [
            (set (reg:DI 155)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -832 [0xfffffffffffffcc0])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:118 -1
     (nil))
(insn 176 175 177 22 (set (reg:DI 5 di)
        (reg:DI 155)) imaextend.c:118 -1
     (nil))
(call_insn 177 176 178 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Create") [flags 0x41]  <function_decl 0x7faec5a28af8 TSS_Create>) [0 TSS_Create S1 A8])
            (const_int 0 [0]))) imaextend.c:118 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 178 177 179 22 (set (reg:SI 156)
        (reg:SI 0 ax)) imaextend.c:118 -1
     (nil))
(insn 179 178 180 22 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
        (reg:SI 156)) imaextend.c:118 -1
     (nil))
(code_label 180 179 181 23 12 "" [1 uses])
(note 181 180 182 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imaextend.c:122 -1
     (nil))
(jump_insn 183 182 184 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 222)
            (pc))) imaextend.c:122 -1
     (nil)
 -> 222)
(note 184 183 185 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 24 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:124 -1
     (nil))
(insn 186 185 187 24 (set (reg:DI 1 dx)
        (const_int 20 [0x14])) imaextend.c:124 -1
     (nil))
(insn 187 186 188 24 (set (reg:SI 4 si)
        (const_int 0 [0])) imaextend.c:124 -1
     (nil))
(insn 188 187 189 24 (set (reg:DI 5 di)
        (reg:DI 157)) imaextend.c:124 -1
     (nil))
(call_insn 189 188 190 24 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7faec5ccf438 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) imaextend.c:124 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 190 189 191 24 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:125 -1
     (nil))
(insn 191 190 192 24 (set (reg:DI 1 dx)
        (const_int 20 [0x14])) imaextend.c:125 -1
     (nil))
(insn 192 191 193 24 (set (reg:SI 4 si)
        (const_int 255 [0xff])) imaextend.c:125 -1
     (nil))
(insn 193 192 194 24 (set (reg:DI 5 di)
        (reg:DI 158)) imaextend.c:125 -1
     (nil))
(call_insn 194 193 195 24 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7faec5ccf438 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) imaextend.c:125 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 195 194 196 24 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -460 [0xfffffffffffffe34])) [0 in.digests.count+0 S4 A32])
        (const_int 2 [0x2])) imaextend.c:126 -1
     (nil))
(insn 196 195 197 24 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -456 [0xfffffffffffffe38])) [0 in.digests.digests[0].hashAlg+0 S2 A64])
        (const_int 4 [0x4])) imaextend.c:127 -1
     (nil))
(insn 197 196 198 24 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -326 [0xfffffffffffffeba])) [0 in.digests.digests[1].hashAlg+0 S2 A16])
        (const_int 11 [0xb])) imaextend.c:128 -1
     (nil))
(insn 198 197 199 24 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -848 [0xfffffffffffffcb0])) [0 algs+0 S4 A32])
        (const_int 0 [0])) imaextend.c:130 -1
     (nil))
(jump_insn 199 198 200 24 (set (pc)
        (label_ref 216)) imaextend.c:130 -1
     (nil)
 -> 216)
(barrier 200 199 219)
(code_label 219 200 201 25 15 "" [1 uses])
(note 201 219 202 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 25 (parallel [
            (set (reg:DI 159)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -464 [0xfffffffffffffe30])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:131 -1
     (nil))
(insn 203 202 204 25 (set (reg:DI 160)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -848 [0xfffffffffffffcb0])) [0 algs+0 S4 A32]))) imaextend.c:131 -1
     (nil))
(insn 204 203 205 25 (set (reg:DI 161)
        (reg:DI 160)) imaextend.c:131 -1
     (nil))
(insn 205 204 206 25 (parallel [
            (set (reg:DI 162)
                (ashift:DI (reg:DI 161)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:131 -1
     (nil))
(insn 206 205 207 25 (set (reg:DI 161)
        (reg:DI 162)) imaextend.c:131 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 160)
            (const_int 2 [0x2]))
        (nil)))
(insn 207 206 208 25 (parallel [
            (set (reg:DI 163)
                (ashift:DI (reg:DI 161)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:131 -1
     (nil))
(insn 208 207 209 25 (parallel [
            (set (reg:DI 161)
                (plus:DI (reg:DI 161)
                    (reg:DI 163)))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:131 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 160)
            (const_int 130 [0x82]))
        (nil)))
(insn 209 208 210 25 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg:DI 159)
                    (reg:DI 161)))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:131 -1
     (nil))
(insn 210 209 211 25 (parallel [
            (set (reg/f:DI 116 [ D.7027 ])
                (plus:DI (reg:DI 164)
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:131 -1
     (nil))
(insn 211 210 212 25 (set (reg:DI 1 dx)
        (const_int 128 [0x80])) imaextend.c:131 -1
     (nil))
(insn 212 211 213 25 (set (reg:SI 4 si)
        (const_int 0 [0])) imaextend.c:131 -1
     (nil))
(insn 213 212 214 25 (set (reg:DI 5 di)
        (reg/f:DI 116 [ D.7027 ])) imaextend.c:131 -1
     (nil))
(call_insn 214 213 215 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7faec5ccf438 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) imaextend.c:131 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 215 214 216 25 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -848 [0xfffffffffffffcb0])) [0 algs+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -848 [0xfffffffffffffcb0])) [0 algs+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:130 -1
     (nil))
(code_label 216 215 217 26 14 "" [1 uses])
(note 217 216 218 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 220 26 (set (reg:SI 115 [ D.7026 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -460 [0xfffffffffffffe34])) [0 in.digests.count+0 S4 A32])) imaextend.c:130 -1
     (nil))
(insn 220 218 221 26 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 115 [ D.7026 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -848 [0xfffffffffffffcb0])) [0 algs+0 S4 A32]))) imaextend.c:130 -1
     (nil))
(jump_insn 221 220 222 26 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) imaextend.c:130 -1
     (nil)
 -> 219)
(code_label 222 221 223 27 13 "" [1 uses])
(note 223 222 224 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imaextend.c:134 -1
     (nil))
(jump_insn 225 224 226 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 239)
            (pc))) imaextend.c:134 -1
     (nil)
 -> 239)
(note 226 225 227 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 28 (set (reg:SI 117 [ D.7025 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7faec5880a20 verbose>) [0 verbose+0 S4 A32])) imaextend.c:134 -1
     (nil))
(insn 228 227 229 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.7025 ])
            (const_int 0 [0]))) imaextend.c:134 -1
     (nil))
(jump_insn 229 228 230 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 239)
            (pc))) imaextend.c:134 -1
     (nil)
 -> 239)
(note 230 229 231 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 29 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7faec56cc990 *.LC11>)) imaextend.c:135 -1
     (nil))
(call_insn 232 231 233 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7faec5cdb360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imaextend.c:135 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 233 232 234 29 (set (reg/f:DI 118 [ D.7028 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 tssContext+0 S8 A64])) imaextend.c:136 -1
     (nil))
(insn 234 233 235 29 (set (reg:SI 4 si)
        (const_int 10 [0xa])) imaextend.c:136 -1
     (nil))
(insn 235 234 236 29 (set (reg:DI 5 di)
        (reg/f:DI 118 [ D.7028 ])) imaextend.c:136 -1
     (nil))
(call_insn 236 235 237 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pcrread") [flags 0x3]  <function_decl 0x7faec5688948 pcrread>) [0 pcrread S1 A8])
            (const_int 0 [0]))) imaextend.c:136 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 237 236 238 29 (set (reg:SI 165)
        (reg:SI 0 ax)) imaextend.c:136 -1
     (nil))
(insn 238 237 239 29 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
        (reg:SI 165)) imaextend.c:136 -1
     (nil))
(code_label 239 238 240 30 16 "" [2 uses])
(note 240 239 241 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 30 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -864 [0xfffffffffffffca0])) [0 endOfFile+0 S4 A64])
        (const_int 0 [0])) imaextend.c:140 -1
     (nil))
(insn 242 241 243 30 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -844 [0xfffffffffffffcb4])) [0 lineNum+0 S4 A32])
        (const_int 0 [0])) imaextend.c:142 -1
     (nil))
(jump_insn 243 242 244 30 (set (pc)
        (label_ref 395)) imaextend.c:142 -1
     (nil)
 -> 395)
(barrier 244 243 401)
(code_label 401 244 245 31 26 "" [1 uses])
(note 245 401 246 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 247 31 (parallel [
            (set (reg:DI 166)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:144 -1
     (nil))
(insn 247 246 248 31 (set (reg:DI 5 di)
        (reg:DI 166)) imaextend.c:144 -1
     (nil))
(call_insn 248 247 249 31 (call (mem:QI (symbol_ref:DI ("IMA_Event_Init") [flags 0x41]  <function_decl 0x7faec5688000 IMA_Event_Init>) [0 IMA_Event_Init S1 A8])
        (const_int 0 [0])) imaextend.c:144 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 249 248 250 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imaextend.c:145 -1
     (nil))
(jump_insn 250 249 251 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) imaextend.c:145 -1
     (nil)
 -> 263)
(note 251 250 252 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 252 251 253 32 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -852 [0xfffffffffffffcac])) [0 littleEndian+0 S4 A32])) imaextend.c:146 -1
     (nil))
(insn 253 252 254 32 (set (reg:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -792 [0xfffffffffffffce8])) [0 infile+0 S8 A64])) imaextend.c:146 -1
     (nil))
(insn 254 253 255 32 (parallel [
            (set (reg:DI 169)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -864 [0xfffffffffffffca0])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:146 -1
     (nil))
(insn 255 254 256 32 (parallel [
            (set (reg:DI 170)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:146 -1
     (nil))
(insn 256 255 257 32 (set (reg:SI 2 cx)
        (reg:SI 167)) imaextend.c:146 -1
     (nil))
(insn 257 256 258 32 (set (reg:DI 1 dx)
        (reg:DI 168)) imaextend.c:146 -1
     (nil))
(insn 258 257 259 32 (set (reg:DI 4 si)
        (reg:DI 169)) imaextend.c:146 -1
     (nil))
(insn 259 258 260 32 (set (reg:DI 5 di)
        (reg:DI 170)) imaextend.c:146 -1
     (nil))
(call_insn 260 259 261 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("IMA_Event_ReadFile") [flags 0x41]  <function_decl 0x7faec5688360 IMA_Event_ReadFile>) [0 IMA_Event_ReadFile S1 A8])
            (const_int 0 [0]))) imaextend.c:146 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 261 260 262 32 (set (reg:SI 171)
        (reg:SI 0 ax)) imaextend.c:146 -1
     (nil))
(insn 262 261 263 32 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
        (reg:SI 171)) imaextend.c:146 -1
     (nil))
(code_label 263 262 264 33 18 "" [1 uses])
(note 264 263 265 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imaextend.c:149 -1
     (nil))
(jump_insn 266 265 267 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 270)
            (pc))) imaextend.c:149 -1
     (nil)
 -> 270)
(note 267 266 268 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 34 (set (reg:SI 120 [ D.7026 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -784 [0xfffffffffffffcf0])) [0 imaEvent.pcrIndex+0 S4 A64])) imaextend.c:150 -1
     (nil))
(insn 269 268 270 34 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -464 [0xfffffffffffffe30])) [0 in.pcrHandle+0 S4 A64])
        (reg:SI 120 [ D.7026 ])) imaextend.c:150 -1
     (nil))
(code_label 270 269 271 35 19 "" [1 uses])
(note 271 270 272 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 35 (set (reg:SI 121 [ D.7025 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7faec5880a20 verbose>) [0 verbose+0 S4 A32])) imaextend.c:153 -1
     (nil))
(insn 273 272 274 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 121 [ D.7025 ])
            (const_int 0 [0]))) imaextend.c:153 -1
     (nil))
(jump_insn 274 273 275 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 292)
            (pc))) imaextend.c:153 -1
     (nil)
 -> 292)
(note 275 274 276 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 36 (set (reg:SI 122 [ D.7025 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -864 [0xfffffffffffffca0])) [0 endOfFile+0 S4 A64])) imaextend.c:153 -1
     (nil))
(insn 277 276 278 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.7025 ])
            (const_int 0 [0]))) imaextend.c:153 -1
     (nil))
(jump_insn 278 277 279 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 292)
            (pc))) imaextend.c:153 -1
     (nil)
 -> 292)
(note 279 278 280 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imaextend.c:153 -1
     (nil))
(jump_insn 281 280 282 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 292)
            (pc))) imaextend.c:153 -1
     (nil)
 -> 292)
(note 282 281 283 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 38 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -844 [0xfffffffffffffcb4])) [0 lineNum+0 S4 A32])) imaextend.c:154 -1
     (nil))
(insn 284 283 285 38 (set (reg:SI 4 si)
        (reg:SI 172)) imaextend.c:154 -1
     (nil))
(insn 285 284 286 38 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7faec56cca20 *.LC12>)) imaextend.c:154 -1
     (nil))
(insn 286 285 287 38 (set (reg:QI 0 ax)
        (const_int 0 [0])) imaextend.c:154 -1
     (nil))
(call_insn 287 286 288 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7faec5cd8ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imaextend.c:154 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 288 287 289 38 (parallel [
            (set (reg:DI 173)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:155 -1
     (nil))
(insn 289 288 290 38 (set (reg:SI 4 si)
        (const_int 0 [0])) imaextend.c:155 -1
     (nil))
(insn 290 289 291 38 (set (reg:DI 5 di)
        (reg:DI 173)) imaextend.c:155 -1
     (nil))
(call_insn 291 290 292 38 (call (mem:QI (symbol_ref:DI ("IMA_Event_Trace") [flags 0x41]  <function_decl 0x7faec56881b0 IMA_Event_Trace>) [0 IMA_Event_Trace S1 A8])
        (const_int 0 [0])) imaextend.c:155 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(code_label 292 291 293 39 20 "" [3 uses])
(note 293 292 294 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 294 293 295 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imaextend.c:158 -1
     (nil))
(jump_insn 295 294 296 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 341)
            (pc))) imaextend.c:158 -1
     (nil)
 -> 341)
(note 296 295 297 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 298 40 (set (reg:SI 123 [ D.7025 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -864 [0xfffffffffffffca0])) [0 endOfFile+0 S4 A64])) imaextend.c:158 -1
     (nil))
(insn 298 297 299 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 123 [ D.7025 ])
            (const_int 0 [0]))) imaextend.c:158 -1
     (nil))
(jump_insn 299 298 300 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 341)
            (pc))) imaextend.c:158 -1
     (nil)
 -> 341)
(note 300 299 301 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 41 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:159 -1
     (nil))
(insn 302 301 303 41 (parallel [
            (set (reg:DI 175)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:159 -1
     (nil))
(insn 303 302 304 41 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg:DI 175)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:159 -1
     (nil))
(insn 304 303 305 41 (set (reg:DI 1 dx)
        (const_int 20 [0x14])) imaextend.c:159 -1
     (nil))
(insn 305 304 306 41 (set (reg:DI 4 si)
        (reg:DI 174)) imaextend.c:159 -1
     (nil))
(insn 306 305 307 41 (set (reg:DI 5 di)
        (reg:DI 176)) imaextend.c:159 -1
     (nil))
(call_insn/i 307 306 308 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcmp") [flags 0x41]  <function_decl 0x7faec5cceca8 memcmp>) [0 __builtin_memcmp S1 A8])
            (const_int 0 [0]))) imaextend.c:159 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 308 307 309 41 (set (reg:SI 177)
        (reg:SI 0 ax)) imaextend.c:159 -1
     (nil))
(insn 309 308 310 41 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -840 [0xfffffffffffffcb8])) [0 notAllZero+0 S4 A32])
        (reg:SI 177)) imaextend.c:159 -1
     (nil))
(insn 310 309 311 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -840 [0xfffffffffffffcb8])) [0 notAllZero+0 S4 A32])
            (const_int 0 [0]))) imaextend.c:162 -1
     (nil))
(jump_insn 311 310 312 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 327)
            (pc))) imaextend.c:162 -1
     (nil)
 -> 327)
(note 312 311 313 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 313 312 314 42 (set (reg:DI 178)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 MEM[(char * {ref-all})&imaEvent + 4B]+0 S8 A32])) imaextend.c:163 -1
     (nil))
(insn 314 313 315 42 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -454 [0xfffffffffffffe3a])) [0 MEM[(char * {ref-all})&in + 10B]+0 S8 A16])
        (reg:DI 178)) imaextend.c:163 -1
     (nil))
(insn 315 314 316 42 (set (reg:DI 179)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 MEM[(char * {ref-all})&imaEvent + 4B]+8 S8 A32])) imaextend.c:163 -1
     (nil))
(insn 316 315 317 42 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -446 [0xfffffffffffffe42])) [0 MEM[(char * {ref-all})&in + 10B]+8 S8 A16])
        (reg:DI 179)) imaextend.c:163 -1
     (nil))
(insn 317 316 318 42 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -764 [0xfffffffffffffd04])) [0 MEM[(char * {ref-all})&imaEvent + 4B]+16 S4 A32])) imaextend.c:163 -1
     (nil))
(insn 318 317 319 42 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -438 [0xfffffffffffffe4a])) [0 MEM[(char * {ref-all})&in + 10B]+16 S4 A16])
        (reg:SI 180)) imaextend.c:163 -1
     (nil))
(insn 319 318 320 42 (set (reg:DI 181)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -780 [0xfffffffffffffcf4])) [0 MEM[(char * {ref-all})&imaEvent + 4B]+0 S8 A32])) imaextend.c:164 -1
     (nil))
(insn 320 319 321 42 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -324 [0xfffffffffffffebc])) [0 MEM[(char * {ref-all})&in + 140B]+0 S8 A32])
        (reg:DI 181)) imaextend.c:164 -1
     (nil))
(insn 321 320 322 42 (set (reg:DI 182)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 MEM[(char * {ref-all})&imaEvent + 4B]+8 S8 A32])) imaextend.c:164 -1
     (nil))
(insn 322 321 323 42 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -316 [0xfffffffffffffec4])) [0 MEM[(char * {ref-all})&in + 140B]+8 S8 A32])
        (reg:DI 182)) imaextend.c:164 -1
     (nil))
(insn 323 322 324 42 (set (reg:SI 183)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -764 [0xfffffffffffffd04])) [0 MEM[(char * {ref-all})&imaEvent + 4B]+16 S4 A32])) imaextend.c:164 -1
     (nil))
(insn 324 323 325 42 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -308 [0xfffffffffffffecc])) [0 MEM[(char * {ref-all})&in + 140B]+16 S4 A32])
        (reg:SI 183)) imaextend.c:164 -1
     (nil))
(jump_insn 325 324 326 42 (set (pc)
        (label_ref 341)) -1
     (nil)
 -> 341)
(barrier 326 325 327)
(code_label 327 326 328 43 22 "" [1 uses])
(note 328 327 329 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 329 328 330 43 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -464 [0xfffffffffffffe30])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:167 -1
     (nil))
(insn 330 329 331 43 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg:DI 184)
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:167 -1
     (nil))
(insn 331 330 332 43 (set (reg:DI 1 dx)
        (const_int 20 [0x14])) imaextend.c:167 -1
     (nil))
(insn 332 331 333 43 (set (reg:SI 4 si)
        (const_int 255 [0xff])) imaextend.c:167 -1
     (nil))
(insn 333 332 334 43 (set (reg:DI 5 di)
        (reg:DI 185)) imaextend.c:167 -1
     (nil))
(call_insn 334 333 335 43 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7faec5ccf438 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) imaextend.c:167 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 335 334 336 43 (parallel [
            (set (reg:DI 186)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -464 [0xfffffffffffffe30])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:168 -1
     (nil))
(insn 336 335 337 43 (parallel [
            (set (reg:DI 187)
                (plus:DI (reg:DI 186)
                    (const_int 140 [0x8c])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:168 -1
     (nil))
(insn 337 336 338 43 (set (reg:DI 1 dx)
        (const_int 20 [0x14])) imaextend.c:168 -1
     (nil))
(insn 338 337 339 43 (set (reg:SI 4 si)
        (const_int 255 [0xff])) imaextend.c:168 -1
     (nil))
(insn 339 338 340 43 (set (reg:DI 5 di)
        (reg:DI 187)) imaextend.c:168 -1
     (nil))
(call_insn 340 339 341 43 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7faec5ccf438 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) imaextend.c:168 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 341 340 342 44 21 "" [3 uses])
(note 342 341 343 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 343 342 344 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imaextend.c:171 -1
     (nil))
(jump_insn 344 343 345 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 369)
            (pc))) imaextend.c:171 -1
     (nil)
 -> 369)
(note 345 344 346 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 346 345 347 45 (set (reg:SI 124 [ D.7025 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -864 [0xfffffffffffffca0])) [0 endOfFile+0 S4 A64])) imaextend.c:171 -1
     (nil))
(insn 347 346 348 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 124 [ D.7025 ])
            (const_int 0 [0]))) imaextend.c:171 -1
     (nil))
(jump_insn 348 347 349 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 369)
            (pc))) imaextend.c:171 -1
     (nil)
 -> 369)
(note 349 348 350 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 350 349 351 46 (set (reg/f:DI 125 [ D.7028 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 tssContext+0 S8 A64])) imaextend.c:172 -1
     (nil))
(insn 351 350 352 46 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -464 [0xfffffffffffffe30])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:172 -1
     (nil))
(insn 352 351 353 46 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:172 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 353 352 354 46 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) imaextend.c:172 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 354 353 355 46 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) imaextend.c:172 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 355 354 356 46 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1073741831 [0x40000007])) imaextend.c:172 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 356 355 357 46 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) imaextend.c:172 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 357 356 358 46 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) imaextend.c:172 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 358 357 359 46 (set (reg:SI 38 r9)
        (const_int 1073741833 [0x40000009])) imaextend.c:172 -1
     (nil))
(insn 359 358 360 46 (set (reg:SI 37 r8)
        (const_int 386 [0x182])) imaextend.c:172 -1
     (nil))
(insn 360 359 361 46 (set (reg:DI 2 cx)
        (const_int 0 [0])) imaextend.c:172 -1
     (nil))
(insn 361 360 362 46 (set (reg:DI 1 dx)
        (reg:DI 188)) imaextend.c:172 -1
     (nil))
(insn 362 361 363 46 (set (reg:DI 4 si)
        (const_int 0 [0])) imaextend.c:172 -1
     (nil))
(insn 363 362 364 46 (set (reg:DI 5 di)
        (reg/f:DI 125 [ D.7028 ])) imaextend.c:172 -1
     (nil))
(insn 364 363 365 46 (set (reg:QI 0 ax)
        (const_int 0 [0])) imaextend.c:172 -1
     (nil))
(call_insn 365 364 366 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7faec5a28ca8 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 48 [0x30]))) imaextend.c:172 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 366 365 367 46 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:172 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 367 366 368 46 (set (reg:SI 189)
        (reg:SI 0 ax)) imaextend.c:172 -1
     (nil))
(insn 368 367 369 46 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
        (reg:SI 189)) imaextend.c:172 -1
     (nil))
(code_label 369 368 370 47 23 "" [2 uses])
(note 370 369 371 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 371 370 372 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imaextend.c:180 -1
     (nil))
(jump_insn 372 371 373 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 389)
            (pc))) imaextend.c:180 -1
     (nil)
 -> 389)
(note 373 372 374 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 374 373 375 48 (set (reg:SI 126 [ D.7025 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -864 [0xfffffffffffffca0])) [0 endOfFile+0 S4 A64])) imaextend.c:180 -1
     (nil))
(insn 375 374 376 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 126 [ D.7025 ])
            (const_int 0 [0]))) imaextend.c:180 -1
     (nil))
(jump_insn 376 375 377 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 389)
            (pc))) imaextend.c:180 -1
     (nil)
 -> 389)
(note 377 376 378 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 378 377 379 49 (set (reg:SI 127 [ D.7025 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7faec5880a20 verbose>) [0 verbose+0 S4 A32])) imaextend.c:180 -1
     (nil))
(insn 379 378 380 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 127 [ D.7025 ])
            (const_int 0 [0]))) imaextend.c:180 -1
     (nil))
(jump_insn 380 379 381 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 389)
            (pc))) imaextend.c:180 -1
     (nil)
 -> 389)
(note 381 380 382 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 382 381 383 50 (set (reg:SI 128 [ D.7026 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -784 [0xfffffffffffffcf0])) [0 imaEvent.pcrIndex+0 S4 A64])) imaextend.c:181 -1
     (nil))
(insn 383 382 384 50 (set (reg/f:DI 129 [ D.7028 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 tssContext+0 S8 A64])) imaextend.c:181 -1
     (nil))
(insn 384 383 385 50 (set (reg:SI 4 si)
        (reg:SI 128 [ D.7026 ])) imaextend.c:181 -1
     (nil))
(insn 385 384 386 50 (set (reg:DI 5 di)
        (reg/f:DI 129 [ D.7028 ])) imaextend.c:181 -1
     (nil))
(call_insn 386 385 387 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pcrread") [flags 0x3]  <function_decl 0x7faec5688948 pcrread>) [0 pcrread S1 A8])
            (const_int 0 [0]))) imaextend.c:181 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 387 386 388 50 (set (reg:SI 190)
        (reg:SI 0 ax)) imaextend.c:181 -1
     (nil))
(insn 388 387 389 50 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
        (reg:SI 190)) imaextend.c:181 -1
     (nil))
(code_label 389 388 390 51 24 "" [3 uses])
(note 390 389 391 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 391 390 392 51 (parallel [
            (set (reg:DI 191)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:183 -1
     (nil))
(insn 392 391 393 51 (set (reg:DI 5 di)
        (reg:DI 191)) imaextend.c:183 -1
     (nil))
(call_insn 393 392 394 51 (call (mem:QI (symbol_ref:DI ("IMA_Event_Free") [flags 0x41]  <function_decl 0x7faec56880d8 IMA_Event_Free>) [0 IMA_Event_Free S1 A8])
        (const_int 0 [0])) imaextend.c:183 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 394 393 395 51 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -844 [0xfffffffffffffcb4])) [0 lineNum+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -844 [0xfffffffffffffcb4])) [0 lineNum+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:142 -1
     (nil))
(code_label 395 394 396 52 17 "" [1 uses])
(note 396 395 397 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 397 396 398 52 (set (reg:SI 119 [ D.7025 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -864 [0xfffffffffffffca0])) [0 endOfFile+0 S4 A64])) imaextend.c:142 -1
     (nil))
(insn 398 397 399 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ D.7025 ])
            (const_int 0 [0]))) imaextend.c:142 -1
     (nil))
(jump_insn 399 398 400 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 404)
            (pc))) imaextend.c:142 -1
     (nil)
 -> 404)
(note 400 399 402 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 402 400 403 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imaextend.c:142 -1
     (nil))
(jump_insn 403 402 404 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 401)
            (pc))) imaextend.c:142 -1
     (nil)
 -> 401)
(code_label 404 403 405 54 25 "" [1 uses])
(note 405 404 406 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 406 405 407 54 (set (reg/f:DI 130 [ D.7028 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -832 [0xfffffffffffffcc0])) [0 tssContext+0 S8 A64])) imaextend.c:186 -1
     (nil))
(insn 407 406 408 54 (set (reg:DI 5 di)
        (reg/f:DI 130 [ D.7028 ])) imaextend.c:186 -1
     (nil))
(call_insn 408 407 409 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Delete") [flags 0x41]  <function_decl 0x7faec5a28bd0 TSS_Delete>) [0 TSS_Delete S1 A8])
            (const_int 0 [0]))) imaextend.c:186 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 409 408 410 54 (set (reg:SI 192)
        (reg:SI 0 ax)) imaextend.c:186 -1
     (nil))
(insn 410 409 411 54 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -836 [0xfffffffffffffcbc])) [0 rc1+0 S4 A32])
        (reg:SI 192)) imaextend.c:186 -1
     (nil))
(insn 411 410 412 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imaextend.c:187 -1
     (nil))
(jump_insn 412 411 413 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 416)
            (pc))) imaextend.c:187 -1
     (nil)
 -> 416)
(note 413 412 414 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 414 413 415 55 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -836 [0xfffffffffffffcbc])) [0 rc1+0 S4 A32])) imaextend.c:188 -1
     (nil))
(insn 415 414 416 55 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
        (reg:SI 193)) imaextend.c:188 -1
     (nil))
(code_label 416 415 417 56 27 "" [1 uses])
(note 417 416 418 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 418 417 419 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imaextend.c:191 -1
     (nil))
(jump_insn 419 418 420 56 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 431)
            (pc))) imaextend.c:191 -1
     (nil)
 -> 431)
(note 420 419 421 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 421 420 422 57 (set (reg:SI 131 [ D.7025 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7faec5880a20 verbose>) [0 verbose+0 S4 A32])) imaextend.c:192 -1
     (nil))
(insn 422 421 423 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 131 [ D.7025 ])
            (const_int 0 [0]))) imaextend.c:192 -1
     (nil))
(jump_insn 423 422 424 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 457)
            (pc))) imaextend.c:192 612 {*jcc_1}
     (nil)
 -> 457)
(note 424 423 425 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 425 424 426 58 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7faec56ccb40 *.LC13>)) imaextend.c:192 -1
     (nil))
(call_insn 426 425 429 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7faec5cdb360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imaextend.c:192 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 429 426 430 58 (set (pc)
        (label_ref 457)) -1
     (nil)
 -> 457)
(barrier 430 429 431)
(code_label 431 430 432 60 28 "" [1 uses])
(note 432 431 433 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 433 432 434 60 (set (reg:SI 194)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])) imaextend.c:198 -1
     (nil))
(insn 434 433 435 60 (set (reg:SI 4 si)
        (reg:SI 194)) imaextend.c:198 -1
     (nil))
(insn 435 434 436 60 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7faec56ccbd0 *.LC14>)) imaextend.c:198 -1
     (nil))
(insn 436 435 437 60 (set (reg:QI 0 ax)
        (const_int 0 [0])) imaextend.c:198 -1
     (nil))
(call_insn 437 436 438 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7faec5cd8ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imaextend.c:198 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 438 437 439 60 (set (reg:SI 195)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])) imaextend.c:199 -1
     (nil))
(insn 439 438 440 60 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -808 [0xfffffffffffffcd8])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:199 -1
     (nil))
(insn 440 439 441 60 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:199 -1
     (nil))
(insn 441 440 442 60 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -824 [0xfffffffffffffcc8])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:199 -1
     (nil))
(insn 442 441 443 60 (set (reg:SI 2 cx)
        (reg:SI 195)) imaextend.c:199 -1
     (nil))
(insn 443 442 444 60 (set (reg:DI 1 dx)
        (reg:DI 196)) imaextend.c:199 -1
     (nil))
(insn 444 443 445 60 (set (reg:DI 4 si)
        (reg:DI 197)) imaextend.c:199 -1
     (nil))
(insn 445 444 446 60 (set (reg:DI 5 di)
        (reg:DI 198)) imaextend.c:199 -1
     (nil))
(call_insn 446 445 447 60 (call (mem:QI (symbol_ref:DI ("TSS_ResponseCode_toString") [flags 0x41]  <function_decl 0x7faec5a28e58 TSS_ResponseCode_toString>) [0 TSS_ResponseCode_toString S1 A8])
        (const_int 0 [0])) imaextend.c:199 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 447 446 448 60 (set (reg/f:DI 132 [ D.7029 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -808 [0xfffffffffffffcd8])) [0 num+0 S8 A64])) imaextend.c:200 -1
     (nil))
(insn 448 447 449 60 (set (reg/f:DI 133 [ D.7029 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -816 [0xfffffffffffffcd0])) [0 submsg+0 S8 A64])) imaextend.c:200 -1
     (nil))
(insn 449 448 450 60 (set (reg/f:DI 134 [ D.7029 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -824 [0xfffffffffffffcc8])) [0 msg+0 S8 A64])) imaextend.c:200 -1
     (nil))
(insn 450 449 451 60 (set (reg:DI 2 cx)
        (reg/f:DI 132 [ D.7029 ])) imaextend.c:200 -1
     (nil))
(insn 451 450 452 60 (set (reg:DI 1 dx)
        (reg/f:DI 133 [ D.7029 ])) imaextend.c:200 -1
     (nil))
(insn 452 451 453 60 (set (reg:DI 4 si)
        (reg/f:DI 134 [ D.7029 ])) imaextend.c:200 -1
     (nil))
(insn 453 452 454 60 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7faec56ccc60 *.LC15>)) imaextend.c:200 -1
     (nil))
(insn 454 453 455 60 (set (reg:QI 0 ax)
        (const_int 0 [0])) imaextend.c:200 -1
     (nil))
(call_insn 455 454 456 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7faec5cd8ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imaextend.c:200 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 456 455 457 60 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imaextend.c:201 -1
     (nil))
(code_label 457 456 458 61 30 "" [2 uses])
(note 458 457 459 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 459 458 460 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -792 [0xfffffffffffffce8])) [0 infile+0 S8 A64])
            (const_int 0 [0]))) imaextend.c:203 -1
     (nil))
(jump_insn 460 459 461 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 465)
            (pc))) imaextend.c:203 -1
     (nil)
 -> 465)
(note 461 460 462 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 462 461 463 62 (set (reg:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -792 [0xfffffffffffffce8])) [0 infile+0 S8 A64])) imaextend.c:204 -1
     (nil))
(insn 463 462 464 62 (set (reg:DI 5 di)
        (reg:DI 199)) imaextend.c:204 -1
     (nil))
(call_insn 464 463 465 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7faec5dc2948 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) imaextend.c:204 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 465 464 466 63 31 "" [1 uses])
(note 466 465 467 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 467 466 470 63 (set (reg:SI 135 [ D.7025 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -860 [0xfffffffffffffca4])) [0 rc+0 S4 A32])) imaextend.c:206 -1
     (nil))
(insn 470 467 474 63 (set (reg:SI 136 [ <retval> ])
        (reg:SI 135 [ D.7025 ])) -1
     (nil))
(insn 474 470 475 63 (set (reg/i:SI 0 ax)
        (reg:SI 136 [ <retval> ])) imaextend.c:207 -1
     (nil))
(insn 475 474 476 63 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.7030+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) imaextend.c:207 -1
     (nil))
(jump_insn 476 475 482 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 479)
            (pc))) imaextend.c:207 -1
     (nil)
 -> 479)
(note 482 476 477 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(call_insn 477 482 478 66 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7faec56b8d80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) imaextend.c:207 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 478 477 479)
(code_label 479 478 483 67 33 "" [1 uses])
(note 483 479 480 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 480 483 0 67 (use (reg/i:SI 0 ax)) imaextend.c:207 -1
     (nil))

;; Function pcrread (pcrread, funcdef_no=3, decl_uid=6835, cgraph_uid=3, symbol_order=5)

Partition 2: size 1072 align 16
	pcrReadOut
Partition 1: size 24 align 16
	pcrReadIn
Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Removing jump 89.
Merging block 11 into block 9...
Merged blocks 9 and 11.
Merged 9 and 11 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1144 [0xfffffffffffffb88])) [0 tssContext+0 S8 A64])
        (reg:DI 5 di [ tssContext ])) imaextend.c:211 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1148 [0xfffffffffffffb84])) [0 pcrHandle+0 S4 A32])
        (reg:SI 4 si [ pcrHandle ])) imaextend.c:211 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.7054+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:211 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1124 [0xfffffffffffffb9c])) [0 rc+0 S4 A32])
        (const_int 0 [0])) imaextend.c:212 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1124 [0xfffffffffffffb9c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imaextend.c:217 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) imaextend.c:217 -1
     (nil)
 -> 41)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1120 [0xfffffffffffffba0])) [0 pcrReadIn.pcrSelectionIn.count+0 S4 A64])
        (const_int 2 [0x2])) imaextend.c:218 -1
     (nil))
(insn 13 12 14 4 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1116 [0xfffffffffffffba4])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[0].hash+0 S2 A32])
        (const_int 4 [0x4])) imaextend.c:219 -1
     (nil))
(insn 14 13 15 4 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1110 [0xfffffffffffffbaa])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[1].hash+0 S2 A16])
        (const_int 11 [0xb])) imaextend.c:220 -1
     (nil))
(insn 15 14 16 4 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1114 [0xfffffffffffffba6])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[0].sizeofSelect+0 S1 A16])
        (const_int 3 [0x3])) imaextend.c:221 -1
     (nil))
(insn 16 15 17 4 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1108 [0xfffffffffffffbac])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[1].sizeofSelect+0 S1 A32])
        (const_int 3 [0x3])) imaextend.c:222 -1
     (nil))
(insn 17 16 18 4 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1113 [0xfffffffffffffba7])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[0].pcrSelect+0 S1 A8])
        (const_int 0 [0])) imaextend.c:223 -1
     (nil))
(insn 18 17 19 4 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1112 [0xfffffffffffffba8])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[0].pcrSelect+1 S1 A64])
        (const_int 0 [0])) imaextend.c:224 -1
     (nil))
(insn 19 18 20 4 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1111 [0xfffffffffffffba9])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[0].pcrSelect+2 S1 A8])
        (const_int 0 [0])) imaextend.c:225 -1
     (nil))
(insn 20 19 21 4 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1107 [0xfffffffffffffbad])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[1].pcrSelect+0 S1 A8])
        (const_int 0 [0])) imaextend.c:226 -1
     (nil))
(insn 21 20 22 4 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1106 [0xfffffffffffffbae])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[1].pcrSelect+1 S1 A16])
        (const_int 0 [0])) imaextend.c:227 -1
     (nil))
(insn 22 21 23 4 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1105 [0xfffffffffffffbaf])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[1].pcrSelect+2 S1 A8])
        (const_int 0 [0])) imaextend.c:228 -1
     (nil))
(insn 23 22 24 4 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1148 [0xfffffffffffffb84])) [0 pcrHandle+0 S4 A32])) imaextend.c:229 -1
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg:SI 87 [ D.7049 ])
                (lshiftrt:SI (reg:SI 101)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:229 -1
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 101)
            (const_int 8 [0x8]))
        (nil)))
(insn 25 24 26 4 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1148 [0xfffffffffffffb84])) [0 pcrHandle+0 S4 A32])) imaextend.c:230 -1
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg:SI 88 [ D.7049 ])
                (and:SI (reg:SI 102)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:230 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1148 [0xfffffffffffffb84])) [0 pcrHandle+0 S4 A32])
            (const_int 7 [0x7]))
        (nil)))
(insn 27 26 28 4 (set (reg:SI 103)
        (const_int 1 [0x1])) imaextend.c:230 -1
     (nil))
(insn 28 27 29 4 (parallel [
            (set (reg:SI 89 [ D.7050 ])
                (ashift:SI (reg:SI 103)
                    (subreg:QI (reg:SI 88 [ D.7049 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:230 -1
     (nil))
(insn 29 28 30 4 (set (reg:QI 90 [ D.7051 ])
        (subreg:QI (reg:SI 89 [ D.7050 ]) 0)) imaextend.c:229 -1
     (nil))
(insn 30 29 31 4 (set (reg:DI 104)
        (zero_extend:DI (reg:SI 87 [ D.7049 ]))) imaextend.c:229 -1
     (nil))
(insn 31 30 32 4 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (reg:DI 104))
                (const_int -1113 [0xfffffffffffffba7])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[0].pcrSelect S1 A8])
        (reg:QI 90 [ D.7051 ])) imaextend.c:229 -1
     (nil))
(insn 32 31 33 4 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1148 [0xfffffffffffffb84])) [0 pcrHandle+0 S4 A32])) imaextend.c:231 -1
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg:SI 91 [ D.7049 ])
                (lshiftrt:SI (reg:SI 105)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:231 -1
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 105)
            (const_int 8 [0x8]))
        (nil)))
(insn 34 33 35 4 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1148 [0xfffffffffffffb84])) [0 pcrHandle+0 S4 A32])) imaextend.c:232 -1
     (nil))
(insn 35 34 36 4 (parallel [
            (set (reg:SI 92 [ D.7049 ])
                (and:SI (reg:SI 106)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:232 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1148 [0xfffffffffffffb84])) [0 pcrHandle+0 S4 A32])
            (const_int 7 [0x7]))
        (nil)))
(insn 36 35 37 4 (set (reg:SI 107)
        (const_int 1 [0x1])) imaextend.c:232 -1
     (nil))
(insn 37 36 38 4 (parallel [
            (set (reg:SI 93 [ D.7050 ])
                (ashift:SI (reg:SI 107)
                    (subreg:QI (reg:SI 92 [ D.7049 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:232 -1
     (nil))
(insn 38 37 39 4 (set (reg:QI 94 [ D.7051 ])
        (subreg:QI (reg:SI 93 [ D.7050 ]) 0)) imaextend.c:231 -1
     (nil))
(insn 39 38 40 4 (set (reg:DI 108)
        (zero_extend:DI (reg:SI 91 [ D.7049 ]))) imaextend.c:231 -1
     (nil))
(insn 40 39 41 4 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (reg:DI 108))
                (const_int -1107 [0xfffffffffffffbad])) [0 pcrReadIn.pcrSelectionIn.pcrSelections[1].pcrSelect S1 A8])
        (reg:QI 94 [ D.7051 ])) imaextend.c:231 -1
     (nil))
(code_label 41 40 42 5 35 "" [1 uses])
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1124 [0xfffffffffffffb9c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imaextend.c:234 -1
     (nil))
(jump_insn 44 43 45 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) imaextend.c:234 -1
     (nil)
 -> 62)
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 6 (parallel [
            (set (reg:DI 109)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1120 [0xfffffffffffffba0])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:235 -1
     (nil))
(insn 47 46 48 6 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1088 [0xfffffffffffffbc0])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:235 -1
     (nil))
(insn 48 47 49 6 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1144 [0xfffffffffffffb88])) [0 tssContext+0 S8 A64])) imaextend.c:235 -1
     (nil))
(insn 49 48 50 6 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) imaextend.c:235 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 50 49 51 6 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) imaextend.c:235 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 51 50 52 6 (set (reg:SI 38 r9)
        (const_int 1073741831 [0x40000007])) imaextend.c:235 -1
     (nil))
(insn 52 51 53 6 (set (reg:SI 37 r8)
        (const_int 382 [0x17e])) imaextend.c:235 -1
     (nil))
(insn 53 52 54 6 (set (reg:DI 2 cx)
        (const_int 0 [0])) imaextend.c:235 -1
     (nil))
(insn 54 53 55 6 (set (reg:DI 1 dx)
        (reg:DI 109)) imaextend.c:235 -1
     (nil))
(insn 55 54 56 6 (set (reg:DI 4 si)
        (reg:DI 110)) imaextend.c:235 -1
     (nil))
(insn 56 55 57 6 (set (reg:DI 5 di)
        (reg:DI 111)) imaextend.c:235 -1
     (nil))
(insn 57 56 58 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) imaextend.c:235 -1
     (nil))
(call_insn 58 57 59 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7faec5a28ca8 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 16 [0x10]))) imaextend.c:235 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 59 58 60 6 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:235 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 60 59 61 6 (set (reg:SI 112)
        (reg:SI 0 ax)) imaextend.c:235 -1
     (nil))
(insn 61 60 62 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1124 [0xfffffffffffffb9c])) [0 rc+0 S4 A32])
        (reg:SI 112)) imaextend.c:235 -1
     (nil))
(code_label 62 61 63 7 36 "" [1 uses])
(note 63 62 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1124 [0xfffffffffffffb9c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imaextend.c:242 -1
     (nil))
(jump_insn 65 64 66 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) imaextend.c:242 -1
     (nil)
 -> 83)
(note 66 65 67 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 8 (set (reg:HI 95 [ D.7052 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1056 [0xfffffffffffffbe0])) [0 pcrReadOut.pcrValues.digests[0].t.size+0 S2 A64])) imaextend.c:245 -1
     (nil))
(insn 68 67 69 8 (set (reg:SI 96 [ D.7049 ])
        (zero_extend:SI (reg:HI 95 [ D.7052 ]))) imaextend.c:243 -1
     (nil))
(insn 69 68 70 8 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1088 [0xfffffffffffffbc0])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:243 -1
     (nil))
(insn 70 69 71 8 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg:DI 113)
                    (const_int 34 [0x22])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:243 -1
     (nil))
(insn 71 70 72 8 (set (reg:SI 1 dx)
        (reg:SI 96 [ D.7049 ])) imaextend.c:243 -1
     (nil))
(insn 72 71 73 8 (set (reg:DI 4 si)
        (reg:DI 114)) imaextend.c:243 -1
     (nil))
(insn 73 72 74 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7faec56ed480 *.LC16>)) imaextend.c:243 -1
     (nil))
(call_insn 74 73 75 8 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7faec59fb798 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) imaextend.c:243 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 75 74 76 8 (set (reg:HI 97 [ D.7052 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -926 [0xfffffffffffffc62])) [0 pcrReadOut.pcrValues.digests[1].t.size+0 S2 A16])) imaextend.c:248 -1
     (nil))
(insn 76 75 77 8 (set (reg:SI 98 [ D.7049 ])
        (zero_extend:SI (reg:HI 97 [ D.7052 ]))) imaextend.c:246 -1
     (nil))
(insn 77 76 78 8 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1088 [0xfffffffffffffbc0])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:246 -1
     (nil))
(insn 78 77 79 8 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg:DI 115)
                    (const_int 164 [0xa4])))
            (clobber (reg:CC 17 flags))
        ]) imaextend.c:246 -1
     (nil))
(insn 79 78 80 8 (set (reg:SI 1 dx)
        (reg:SI 98 [ D.7049 ])) imaextend.c:246 -1
     (nil))
(insn 80 79 81 8 (set (reg:DI 4 si)
        (reg:DI 116)) imaextend.c:246 -1
     (nil))
(insn 81 80 82 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7faec56ed510 *.LC17>)) imaextend.c:246 -1
     (nil))
(call_insn 82 81 83 8 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7faec59fb798 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) imaextend.c:246 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(code_label 83 82 84 9 37 "" [1 uses])
(note 84 83 85 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 88 9 (set (reg:SI 99 [ D.7053 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1124 [0xfffffffffffffb9c])) [0 rc+0 S4 A32])) imaextend.c:250 -1
     (nil))
(insn 88 85 92 9 (set (reg:SI 100 [ <retval> ])
        (reg:SI 99 [ D.7053 ])) imaextend.c:250 -1
     (nil))
(insn 92 88 93 9 (set (reg/i:SI 0 ax)
        (reg:SI 100 [ <retval> ])) imaextend.c:251 -1
     (nil))
(insn 93 92 94 9 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.7054+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) imaextend.c:251 -1
     (nil))
(jump_insn 94 93 100 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) imaextend.c:251 -1
     (nil)
 -> 97)
(note 100 94 95 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 95 100 96 12 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7faec56b8d80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) imaextend.c:251 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 96 95 97)
(code_label 97 96 101 13 39 "" [1 uses])
(note 101 97 98 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 98 101 0 13 (use (reg/i:SI 0 ax)) imaextend.c:251 -1
     (nil))

;; Function printUsage (printUsage, funcdef_no=4, decl_uid=6837, cgraph_uid=4, symbol_order=6)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) imaextend.c:255 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7faec5cdb000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) imaextend.c:255 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7faec56edcf0 *.LC18>)) imaextend.c:256 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7faec5cdb360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imaextend.c:256 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) imaextend.c:257 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7faec5cdb000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) imaextend.c:257 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7faec56edd80 *.LC19>)) imaextend.c:258 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7faec5cdb360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imaextend.c:258 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7faec56ede10 *.LC20>)) imaextend.c:259 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7faec5cdb360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imaextend.c:259 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7faec56edea0 *.LC21>)) imaextend.c:260 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7faec5cdb360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imaextend.c:260 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7faec56edf30 *.LC22>)) imaextend.c:261 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7faec5cdb360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imaextend.c:261 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) imaextend.c:262 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7faec5cdb000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) imaextend.c:262 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7faec56ff000 *.LC23>)) imaextend.c:263 -1
     (nil))
(call_insn 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7faec5cdb360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imaextend.c:263 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7faec56ff090 *.LC24>)) imaextend.c:264 -1
     (nil))
(insn 24 23 25 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) imaextend.c:264 -1
     (nil))
(call_insn 25 24 26 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7faec5cd8ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imaextend.c:264 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 26 25 27 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) imaextend.c:265 -1
     (nil))
(call_insn 27 26 28 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7faec5cdb000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) imaextend.c:265 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 28 27 29 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) imaextend.c:266 -1
     (nil))
(call_insn 29 28 30 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7faec5cee000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) imaextend.c:266 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 30 29 0)
