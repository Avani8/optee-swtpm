
;; Function main (main, funcdef_no=2, decl_uid=6074, cgraph_uid=2, symbol_order=3)

Partition 11: size 130 align 16
	out
Partition 6: size 8 align 8
	br_21
Partition 3: size 8 align 8
	outFilename_14
Partition 22: size 8 align 8
	num
Partition 21: size 8 align 8
	submsg
Partition 20: size 8 align 8
	msg
Partition 13: size 8 align 8
	randomBuffer
Partition 9: size 8 align 8
	tssContext
Partition 8: size 4 align 4
	rc1_248
Partition 7: size 4 align 4
	bp_22
Partition 5: size 4 align 4
	noSpace_19
Partition 4: size 4 align 4
	noZeros_17
Partition 2: size 4 align 4
	bytesCopied_10
Partition 1: size 4 align 4
	i_8
Partition 0: size 4 align 4
	rc_1
Partition 19: size 4 align 4
	sessionAttributes2
Partition 18: size 4 align 4
	sessionHandle2
Partition 17: size 4 align 4
	sessionAttributes1
Partition 16: size 4 align 4
	sessionHandle1
Partition 15: size 4 align 4
	sessionAttributes0
Partition 14: size 4 align 4
	sessionHandle0
Partition 12: size 4 align 4
	bytesRequested
Partition 10: size 2 align 16
	in

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 65 from 8 to 53.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Redirecting jump 103 from 13 to 53.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Edge 23->25 redirected to 53
Merging block 25 into block 24...
Merged blocks 24 and 25.
Merged 24 and 25 without moving.
Redirecting jump 217 from 27 to 53.
Merging block 27 into block 26...
Merged blocks 26 and 27.
Merged 26 and 27 without moving.
Edge 33->35 redirected to 53
Merging block 35 into block 34...
Merged blocks 34 and 35.
Merged 34 and 35 without moving.
Redirecting jump 295 from 37 to 53.
Merging block 37 into block 36...
Merged blocks 36 and 37.
Merged 36 and 37 without moving.
Edge 43->45 redirected to 53
Merging block 45 into block 44...
Merged blocks 44 and 45.
Merged 44 and 45 without moving.
Redirecting jump 373 from 47 to 53.
Merging block 47 into block 46...
Merged blocks 46 and 47.
Merged 46 and 47 without moving.
Redirecting jump 689 from 98 to 100.
Merging block 98 into block 97...
Merged blocks 97 and 98.
Merged 97 and 98 without moving.
Merging block 101 into block 100...
Merged blocks 100 and 101.
Merged 100 and 101 without moving.
Removing jump 738.
Merging block 102 into block 100...
Merged blocks 100 and 102.
Merged 100 and 102 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -276 [0xfffffffffffffeec])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) getrandom.c:59 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) getrandom.c:59 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.6362+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:59 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
        (const_int 0 [0])) getrandom.c:60 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [0 tssContext+0 S8 A64])
        (const_int 0 [0])) getrandom.c:62 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 bytesRequested+0 S4 A64])
        (const_int 0 [0])) getrandom.c:65 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [0 outFilename+0 S8 A64])
        (const_int 0 [0])) getrandom.c:67 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 randomBuffer+0 S8 A64])
        (const_int 0 [0])) getrandom.c:68 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 noZeros+0 S4 A32])
        (const_int 0 [0])) getrandom.c:69 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -212 [0xffffffffffffff2c])) [0 noSpace+0 S4 A32])
        (const_int 0 [0])) getrandom.c:70 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 sessionHandle0+0 S4 A32])
        (const_int 1073741831 [0x40000007])) getrandom.c:71 -1
     (nil))
(insn 16 15 17 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 sessionAttributes0+0 S4 A64])
        (const_int 0 [0])) getrandom.c:72 -1
     (nil))
(insn 17 16 18 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -244 [0xffffffffffffff0c])) [0 sessionHandle1+0 S4 A32])
        (const_int 1073741831 [0x40000007])) getrandom.c:73 -1
     (nil))
(insn 18 17 19 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 sessionAttributes1+0 S4 A64])
        (const_int 0 [0])) getrandom.c:74 -1
     (nil))
(insn 19 18 20 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -236 [0xffffffffffffff14])) [0 sessionHandle2+0 S4 A32])
        (const_int 1073741831 [0x40000007])) getrandom.c:75 -1
     (nil))
(insn 20 19 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [0 sessionAttributes2+0 S4 A64])
        (const_int 0 [0])) getrandom.c:76 -1
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 88 [ D.6350 ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f6db93b65a0 stdout>) [0 stdout+0 S8 A64])) getrandom.c:78 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) getrandom.c:78 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) getrandom.c:78 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 4 si)
        (const_int 0 [0])) getrandom.c:78 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.6350 ])) getrandom.c:78 -1
     (nil))
(call_insn 26 25 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("setvbuf") [flags 0x41]  <function_decl 0x7f6db93f61b0 setvbuf>) [0 setvbuf S1 A8])
            (const_int 0 [0]))) getrandom.c:78 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 27 26 28 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f6db8efc630 *.LC0>)) getrandom.c:79 -1
     (nil))
(insn 28 27 29 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) getrandom.c:79 -1
     (nil))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (const_int 0 [0])) getrandom.c:79 -1
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7f6db926a000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) getrandom.c:79 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 31 30 32 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) getrandom.c:82 -1
     (nil))
(jump_insn 32 31 33 2 (set (pc)
        (label_ref 440)) getrandom.c:82 -1
     (nil)
 -> 440)
(barrier 33 32 446)
(code_label 446 33 34 4 33 "" [1 uses])
(note 34 446 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 4 (set (reg:SI 221)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:83 -1
     (nil))
(insn 36 35 37 4 (set (reg:DI 89 [ D.6351 ])
        (sign_extend:DI (reg:SI 221))) getrandom.c:83 -1
     (nil))
(insn 37 36 38 4 (parallel [
            (set (reg:DI 90 [ D.6351 ])
                (ashift:DI (reg:DI 89 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:83 -1
     (nil))
(insn 38 37 39 4 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:83 -1
     (nil))
(insn 39 38 40 4 (parallel [
            (set (reg/f:DI 91 [ D.6352 ])
                (plus:DI (reg:DI 90 [ D.6351 ])
                    (reg/f:DI 222)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:83 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 90 [ D.6351 ]))
        (nil)))
(insn 40 39 41 4 (set (reg/f:DI 92 [ D.6353 ])
        (mem/f:DI (reg/f:DI 91 [ D.6352 ]) [0 *_73+0 S8 A64])) getrandom.c:83 -1
     (nil))
(insn 41 40 42 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f6db8efc6c0 *.LC1>)) getrandom.c:83 -1
     (nil))
(insn 42 41 43 4 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.6353 ])) getrandom.c:83 -1
     (nil))
(call_insn/i 43 42 44 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6db92fe0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) getrandom.c:83 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 44 43 45 4 (set (reg:SI 93 [ D.6354 ])
        (reg:SI 0 ax)) getrandom.c:83 -1
     (nil))
(insn 45 44 46 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.6354 ])
            (const_int 0 [0]))) getrandom.c:83 -1
     (nil))
(jump_insn 46 45 47 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) getrandom.c:83 -1
     (nil)
 -> 76)
(note 47 46 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:84 -1
     (nil))
(insn 49 48 50 5 (set (reg:SI 223)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:85 -1
     (nil))
(insn 50 49 51 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 223)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -276 [0xfffffffffffffeec])) [0 argc+0 S4 A32]))) getrandom.c:85 -1
     (nil))
(jump_insn 51 50 52 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) getrandom.c:85 -1
     (nil)
 -> 67)
(note 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 6 (set (reg:SI 224)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:86 -1
     (nil))
(insn 54 53 55 6 (set (reg:DI 94 [ D.6351 ])
        (sign_extend:DI (reg:SI 224))) getrandom.c:86 -1
     (nil))
(insn 55 54 56 6 (parallel [
            (set (reg:DI 95 [ D.6351 ])
                (ashift:DI (reg:DI 94 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:86 -1
     (nil))
(insn 56 55 57 6 (set (reg/f:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:86 -1
     (nil))
(insn 57 56 58 6 (parallel [
            (set (reg/f:DI 96 [ D.6352 ])
                (plus:DI (reg:DI 95 [ D.6351 ])
                    (reg/f:DI 225)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:86 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 95 [ D.6351 ]))
        (nil)))
(insn 58 57 59 6 (set (reg/f:DI 97 [ D.6353 ])
        (mem/f:DI (reg/f:DI 96 [ D.6352 ]) [0 *_79+0 S8 A64])) getrandom.c:86 -1
     (nil))
(insn 59 58 60 6 (parallel [
            (set (reg:DI 226)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:86 -1
     (nil))
(insn 60 59 61 6 (set (reg:DI 1 dx)
        (reg:DI 226)) getrandom.c:86 -1
     (nil))
(insn 61 60 62 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f6db8efc750 *.LC2>)) getrandom.c:86 -1
     (nil))
(insn 62 61 63 6 (set (reg:DI 5 di)
        (reg/f:DI 97 [ D.6353 ])) getrandom.c:86 -1
     (nil))
(insn 63 62 64 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) getrandom.c:86 -1
     (nil))
(call_insn 64 63 65 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f6db9307ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) getrandom.c:86 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 65 64 66 6 (set (pc)
        (label_ref:DI 437)) 654 {jump}
     (nil)
 -> 437)
(barrier 66 65 67)
(code_label 67 66 68 7 4 "" [1 uses])
(note 68 67 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f6db8f16000 *.LC3>)) getrandom.c:89 -1
     (nil))
(call_insn 70 69 71 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:89 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 71 70 74 7 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f6db8ec40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getrandom.c:90 -1
     (nil)
    (nil))
(jump_insn 74 71 75 7 (set (pc)
        (label_ref 437)) -1
     (nil)
 -> 437)
(barrier 75 74 76)
(code_label 76 75 77 9 3 "" [1 uses])
(note 77 76 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 9 (set (reg:SI 227)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:93 -1
     (nil))
(insn 79 78 80 9 (set (reg:DI 98 [ D.6351 ])
        (sign_extend:DI (reg:SI 227))) getrandom.c:93 -1
     (nil))
(insn 80 79 81 9 (parallel [
            (set (reg:DI 99 [ D.6351 ])
                (ashift:DI (reg:DI 98 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:93 -1
     (nil))
(insn 81 80 82 9 (set (reg/f:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:93 -1
     (nil))
(insn 82 81 83 9 (parallel [
            (set (reg/f:DI 100 [ D.6352 ])
                (plus:DI (reg:DI 99 [ D.6351 ])
                    (reg/f:DI 228)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:93 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 99 [ D.6351 ]))
        (nil)))
(insn 83 82 84 9 (set (reg/f:DI 101 [ D.6353 ])
        (mem/f:DI (reg/f:DI 100 [ D.6352 ]) [0 *_86+0 S8 A64])) getrandom.c:93 -1
     (nil))
(insn 84 83 85 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f6db8f16090 *.LC4>)) getrandom.c:93 -1
     (nil))
(insn 85 84 86 9 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.6353 ])) getrandom.c:93 -1
     (nil))
(call_insn/i 86 85 87 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6db92fe0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) getrandom.c:93 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 87 86 88 9 (set (reg:SI 102 [ D.6354 ])
        (reg:SI 0 ax)) getrandom.c:93 -1
     (nil))
(insn 88 87 89 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.6354 ])
            (const_int 0 [0]))) getrandom.c:93 -1
     (nil))
(jump_insn 89 88 90 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) getrandom.c:93 -1
     (nil)
 -> 114)
(note 90 89 91 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:94 -1
     (nil))
(insn 92 91 93 10 (set (reg:SI 229)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:95 -1
     (nil))
(insn 93 92 94 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 229)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -276 [0xfffffffffffffeec])) [0 argc+0 S4 A32]))) getrandom.c:95 -1
     (nil))
(jump_insn 94 93 95 10 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) getrandom.c:95 -1
     (nil)
 -> 105)
(note 95 94 96 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 11 (set (reg:SI 230)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:96 -1
     (nil))
(insn 97 96 98 11 (set (reg:DI 103 [ D.6351 ])
        (sign_extend:DI (reg:SI 230))) getrandom.c:96 -1
     (nil))
(insn 98 97 99 11 (parallel [
            (set (reg:DI 104 [ D.6351 ])
                (ashift:DI (reg:DI 103 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:96 -1
     (nil))
(insn 99 98 100 11 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:96 -1
     (nil))
(insn 100 99 101 11 (parallel [
            (set (reg/f:DI 105 [ D.6352 ])
                (plus:DI (reg:DI 104 [ D.6351 ])
                    (reg/f:DI 231)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:96 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 104 [ D.6351 ]))
        (nil)))
(insn 101 100 102 11 (set (reg/f:DI 232)
        (mem/f:DI (reg/f:DI 105 [ D.6352 ]) [0 *_92+0 S8 A64])) getrandom.c:96 -1
     (nil))
(insn 102 101 103 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [0 outFilename+0 S8 A64])
        (reg/f:DI 232)) getrandom.c:96 -1
     (nil))
(jump_insn 103 102 104 11 (set (pc)
        (label_ref:DI 437)) 654 {jump}
     (nil)
 -> 437)
(barrier 104 103 105)
(code_label 105 104 106 12 8 "" [1 uses])
(note 106 105 107 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f6db8f16120 *.LC5>)) getrandom.c:99 -1
     (nil))
(call_insn 108 107 109 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:99 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 109 108 112 12 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f6db8ec40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getrandom.c:100 -1
     (nil)
    (nil))
(jump_insn 112 109 113 12 (set (pc)
        (label_ref 437)) -1
     (nil)
 -> 437)
(barrier 113 112 114)
(code_label 114 113 115 14 7 "" [1 uses])
(note 115 114 116 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 14 (set (reg:SI 233)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:103 -1
     (nil))
(insn 117 116 118 14 (set (reg:DI 106 [ D.6351 ])
        (sign_extend:DI (reg:SI 233))) getrandom.c:103 -1
     (nil))
(insn 118 117 119 14 (parallel [
            (set (reg:DI 107 [ D.6351 ])
                (ashift:DI (reg:DI 106 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:103 -1
     (nil))
(insn 119 118 120 14 (set (reg/f:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:103 -1
     (nil))
(insn 120 119 121 14 (parallel [
            (set (reg/f:DI 108 [ D.6352 ])
                (plus:DI (reg:DI 107 [ D.6351 ])
                    (reg/f:DI 234)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:103 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 107 [ D.6351 ]))
        (nil)))
(insn 121 120 122 14 (set (reg/f:DI 109 [ D.6353 ])
        (mem/f:DI (reg/f:DI 108 [ D.6352 ]) [0 *_98+0 S8 A64])) getrandom.c:103 -1
     (nil))
(insn 122 121 123 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f6db8f161b0 *.LC6>)) getrandom.c:103 -1
     (nil))
(insn 123 122 124 14 (set (reg:DI 5 di)
        (reg/f:DI 109 [ D.6353 ])) getrandom.c:103 -1
     (nil))
(call_insn/i 124 123 125 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6db92fe0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) getrandom.c:103 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 125 124 126 14 (set (reg:SI 110 [ D.6354 ])
        (reg:SI 0 ax)) getrandom.c:103 -1
     (nil))
(insn 126 125 127 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 110 [ D.6354 ])
            (const_int 0 [0]))) getrandom.c:103 -1
     (nil))
(jump_insn 127 126 128 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 132)
            (pc))) getrandom.c:103 -1
     (nil)
 -> 132)
(note 128 127 129 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 noZeros+0 S4 A32])
        (const_int 1 [0x1])) getrandom.c:104 -1
     (nil))
(jump_insn 130 129 131 15 (set (pc)
        (label_ref 437)) -1
     (nil)
 -> 437)
(barrier 131 130 132)
(code_label 132 131 133 16 10 "" [1 uses])
(note 133 132 134 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 16 (set (reg:SI 235)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:106 -1
     (nil))
(insn 135 134 136 16 (set (reg:DI 111 [ D.6351 ])
        (sign_extend:DI (reg:SI 235))) getrandom.c:106 -1
     (nil))
(insn 136 135 137 16 (parallel [
            (set (reg:DI 112 [ D.6351 ])
                (ashift:DI (reg:DI 111 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:106 -1
     (nil))
(insn 137 136 138 16 (set (reg/f:DI 236)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:106 -1
     (nil))
(insn 138 137 139 16 (parallel [
            (set (reg/f:DI 113 [ D.6352 ])
                (plus:DI (reg:DI 112 [ D.6351 ])
                    (reg/f:DI 236)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:106 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 112 [ D.6351 ]))
        (nil)))
(insn 139 138 140 16 (set (reg/f:DI 114 [ D.6353 ])
        (mem/f:DI (reg/f:DI 113 [ D.6352 ]) [0 *_104+0 S8 A64])) getrandom.c:106 -1
     (nil))
(insn 140 139 141 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f6db8f16240 *.LC7>)) getrandom.c:106 -1
     (nil))
(insn 141 140 142 16 (set (reg:DI 5 di)
        (reg/f:DI 114 [ D.6353 ])) getrandom.c:106 -1
     (nil))
(call_insn/i 142 141 143 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6db92fe0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) getrandom.c:106 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 143 142 144 16 (set (reg:SI 115 [ D.6354 ])
        (reg:SI 0 ax)) getrandom.c:106 -1
     (nil))
(insn 144 143 145 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 115 [ D.6354 ])
            (const_int 0 [0]))) getrandom.c:106 -1
     (nil))
(jump_insn 145 144 146 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) getrandom.c:106 -1
     (nil)
 -> 150)
(note 146 145 147 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -212 [0xffffffffffffff2c])) [0 noSpace+0 S4 A32])
        (const_int 1 [0x1])) getrandom.c:107 -1
     (nil))
(jump_insn 148 147 149 17 (set (pc)
        (label_ref 437)) -1
     (nil)
 -> 437)
(barrier 149 148 150)
(code_label 150 149 151 18 11 "" [1 uses])
(note 151 150 152 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 18 (set (reg:SI 237)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:109 -1
     (nil))
(insn 153 152 154 18 (set (reg:DI 116 [ D.6351 ])
        (sign_extend:DI (reg:SI 237))) getrandom.c:109 -1
     (nil))
(insn 154 153 155 18 (parallel [
            (set (reg:DI 117 [ D.6351 ])
                (ashift:DI (reg:DI 116 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:109 -1
     (nil))
(insn 155 154 156 18 (set (reg/f:DI 238)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:109 -1
     (nil))
(insn 156 155 157 18 (parallel [
            (set (reg/f:DI 118 [ D.6352 ])
                (plus:DI (reg:DI 117 [ D.6351 ])
                    (reg/f:DI 238)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:109 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 117 [ D.6351 ]))
        (nil)))
(insn 157 156 158 18 (set (reg/f:DI 119 [ D.6353 ])
        (mem/f:DI (reg/f:DI 118 [ D.6352 ]) [0 *_110+0 S8 A64])) getrandom.c:109 -1
     (nil))
(insn 158 157 159 18 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f6db8f162d0 *.LC8>)) getrandom.c:109 -1
     (nil))
(insn 159 158 160 18 (set (reg:DI 5 di)
        (reg/f:DI 119 [ D.6353 ])) getrandom.c:109 -1
     (nil))
(call_insn/i 160 159 161 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6db92fe0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) getrandom.c:109 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 161 160 162 18 (set (reg:SI 120 [ D.6354 ])
        (reg:SI 0 ax)) getrandom.c:109 -1
     (nil))
(insn 162 161 163 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ D.6354 ])
            (const_int 0 [0]))) getrandom.c:109 -1
     (nil))
(jump_insn 163 162 164 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 228)
            (pc))) getrandom.c:109 -1
     (nil)
 -> 228)
(note 164 163 165 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:110 -1
     (nil))
(insn 166 165 167 19 (set (reg:SI 239)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:111 -1
     (nil))
(insn 167 166 168 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 239)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -276 [0xfffffffffffffeec])) [0 argc+0 S4 A32]))) getrandom.c:111 -1
     (nil))
(jump_insn 168 167 169 19 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) getrandom.c:111 -1
     (nil)
 -> 184)
(note 169 168 170 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 20 (set (reg:SI 240)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:112 -1
     (nil))
(insn 171 170 172 20 (set (reg:DI 121 [ D.6351 ])
        (sign_extend:DI (reg:SI 240))) getrandom.c:112 -1
     (nil))
(insn 172 171 173 20 (parallel [
            (set (reg:DI 122 [ D.6351 ])
                (ashift:DI (reg:DI 121 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:112 -1
     (nil))
(insn 173 172 174 20 (set (reg/f:DI 241)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:112 -1
     (nil))
(insn 174 173 175 20 (parallel [
            (set (reg/f:DI 123 [ D.6352 ])
                (plus:DI (reg:DI 122 [ D.6351 ])
                    (reg/f:DI 241)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:112 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 122 [ D.6351 ]))
        (nil)))
(insn 175 174 176 20 (set (reg/f:DI 124 [ D.6353 ])
        (mem/f:DI (reg/f:DI 123 [ D.6352 ]) [0 *_116+0 S8 A64])) getrandom.c:112 -1
     (nil))
(insn 176 175 177 20 (parallel [
            (set (reg:DI 242)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:112 -1
     (nil))
(insn 177 176 178 20 (set (reg:DI 1 dx)
        (reg:DI 242)) getrandom.c:112 -1
     (nil))
(insn 178 177 179 20 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f6db8f16360 *.LC9>)) getrandom.c:112 -1
     (nil))
(insn 179 178 180 20 (set (reg:DI 5 di)
        (reg/f:DI 124 [ D.6353 ])) getrandom.c:112 -1
     (nil))
(insn 180 179 181 20 (set (reg:QI 0 ax)
        (const_int 0 [0])) getrandom.c:112 -1
     (nil))
(call_insn 181 180 182 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f6db9307ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) getrandom.c:112 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 182 181 183 20 (set (pc)
        (label_ref 189)) -1
     (nil)
 -> 189)
(barrier 183 182 184)
(code_label 184 183 185 21 13 "" [1 uses])
(note 185 184 186 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 21 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f6db8f163f0 *.LC10>)) getrandom.c:115 -1
     (nil))
(call_insn 187 186 188 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:115 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 188 187 189 21 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f6db8ec40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getrandom.c:116 -1
     (nil)
    (nil))
(code_label 189 188 190 22 14 "" [1 uses])
(note 190 189 191 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 22 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:118 -1
     (nil))
(insn 192 191 193 22 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:119 -1
     (nil))
(insn 193 192 194 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 243)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -276 [0xfffffffffffffeec])) [0 argc+0 S4 A32]))) getrandom.c:119 -1
     (nil))
(jump_insn 194 193 195 22 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) getrandom.c:119 -1
     (nil)
 -> 219)
(note 195 194 196 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 23 (set (reg:SI 244)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:120 -1
     (nil))
(insn 197 196 198 23 (set (reg:DI 125 [ D.6351 ])
        (sign_extend:DI (reg:SI 244))) getrandom.c:120 -1
     (nil))
(insn 198 197 199 23 (parallel [
            (set (reg:DI 126 [ D.6351 ])
                (ashift:DI (reg:DI 125 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:120 -1
     (nil))
(insn 199 198 200 23 (set (reg/f:DI 245)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:120 -1
     (nil))
(insn 200 199 201 23 (parallel [
            (set (reg/f:DI 127 [ D.6352 ])
                (plus:DI (reg:DI 126 [ D.6351 ])
                    (reg/f:DI 245)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:120 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 126 [ D.6351 ]))
        (nil)))
(insn 201 200 202 23 (set (reg/f:DI 128 [ D.6353 ])
        (mem/f:DI (reg/f:DI 127 [ D.6352 ]) [0 *_124+0 S8 A64])) getrandom.c:120 -1
     (nil))
(insn 202 201 203 23 (parallel [
            (set (reg:DI 246)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:120 -1
     (nil))
(insn 203 202 204 23 (set (reg:DI 1 dx)
        (reg:DI 246)) getrandom.c:120 -1
     (nil))
(insn 204 203 205 23 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f6db8f16360 *.LC9>)) getrandom.c:120 -1
     (nil))
(insn 205 204 206 23 (set (reg:DI 5 di)
        (reg/f:DI 128 [ D.6353 ])) getrandom.c:120 -1
     (nil))
(insn 206 205 207 23 (set (reg:QI 0 ax)
        (const_int 0 [0])) getrandom.c:120 -1
     (nil))
(call_insn 207 206 208 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f6db9307ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) getrandom.c:120 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 208 207 209 23 (set (reg:SI 129 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 sessionAttributes0+0 S4 A64])) getrandom.c:121 -1
     (nil))
(insn 209 208 210 23 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 129 [ D.6355 ])
            (const_int 255 [0xff]))) getrandom.c:121 -1
     (nil))
(jump_insn 210 209 211 23 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 437)
            (pc))) getrandom.c:121 612 {*jcc_1}
     (nil)
 -> 437)
(note 211 210 212 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 24 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f6db8f16480 *.LC11>)) getrandom.c:122 -1
     (nil))
(call_insn 213 212 214 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:122 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 214 213 217 24 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f6db8ec40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getrandom.c:123 -1
     (nil)
    (nil))
(jump_insn 217 214 218 24 (set (pc)
        (label_ref:DI 437)) 654 {jump}
     (nil)
 -> 437)
(barrier 218 217 219)
(code_label 219 218 220 26 15 "" [1 uses])
(note 220 219 221 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 26 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f6db8f163f0 *.LC10>)) getrandom.c:127 -1
     (nil))
(call_insn 222 221 223 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:127 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 223 222 226 26 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f6db8ec40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getrandom.c:128 -1
     (nil)
    (nil))
(jump_insn 226 223 227 26 (set (pc)
        (label_ref 437)) -1
     (nil)
 -> 437)
(barrier 227 226 228)
(code_label 228 227 229 28 12 "" [1 uses])
(note 229 228 230 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 231 28 (set (reg:SI 247)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:131 -1
     (nil))
(insn 231 230 232 28 (set (reg:DI 130 [ D.6351 ])
        (sign_extend:DI (reg:SI 247))) getrandom.c:131 -1
     (nil))
(insn 232 231 233 28 (parallel [
            (set (reg:DI 131 [ D.6351 ])
                (ashift:DI (reg:DI 130 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:131 -1
     (nil))
(insn 233 232 234 28 (set (reg/f:DI 248)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:131 -1
     (nil))
(insn 234 233 235 28 (parallel [
            (set (reg/f:DI 132 [ D.6352 ])
                (plus:DI (reg:DI 131 [ D.6351 ])
                    (reg/f:DI 248)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:131 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 131 [ D.6351 ]))
        (nil)))
(insn 235 234 236 28 (set (reg/f:DI 133 [ D.6353 ])
        (mem/f:DI (reg/f:DI 132 [ D.6352 ]) [0 *_134+0 S8 A64])) getrandom.c:131 -1
     (nil))
(insn 236 235 237 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f6db8f16510 *.LC12>)) getrandom.c:131 -1
     (nil))
(insn 237 236 238 28 (set (reg:DI 5 di)
        (reg/f:DI 133 [ D.6353 ])) getrandom.c:131 -1
     (nil))
(call_insn/i 238 237 239 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6db92fe0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) getrandom.c:131 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 239 238 240 28 (set (reg:SI 134 [ D.6354 ])
        (reg:SI 0 ax)) getrandom.c:131 -1
     (nil))
(insn 240 239 241 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 134 [ D.6354 ])
            (const_int 0 [0]))) getrandom.c:131 -1
     (nil))
(jump_insn 241 240 242 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 306)
            (pc))) getrandom.c:131 -1
     (nil)
 -> 306)
(note 242 241 243 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 243 242 244 29 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:132 -1
     (nil))
(insn 244 243 245 29 (set (reg:SI 249)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:133 -1
     (nil))
(insn 245 244 246 29 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 249)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -276 [0xfffffffffffffeec])) [0 argc+0 S4 A32]))) getrandom.c:133 -1
     (nil))
(jump_insn 246 245 247 29 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 262)
            (pc))) getrandom.c:133 -1
     (nil)
 -> 262)
(note 247 246 248 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 30 (set (reg:SI 250)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:134 -1
     (nil))
(insn 249 248 250 30 (set (reg:DI 135 [ D.6351 ])
        (sign_extend:DI (reg:SI 250))) getrandom.c:134 -1
     (nil))
(insn 250 249 251 30 (parallel [
            (set (reg:DI 136 [ D.6351 ])
                (ashift:DI (reg:DI 135 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:134 -1
     (nil))
(insn 251 250 252 30 (set (reg/f:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:134 -1
     (nil))
(insn 252 251 253 30 (parallel [
            (set (reg/f:DI 137 [ D.6352 ])
                (plus:DI (reg:DI 136 [ D.6351 ])
                    (reg/f:DI 251)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:134 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 136 [ D.6351 ]))
        (nil)))
(insn 253 252 254 30 (set (reg/f:DI 138 [ D.6353 ])
        (mem/f:DI (reg/f:DI 137 [ D.6352 ]) [0 *_140+0 S8 A64])) getrandom.c:134 -1
     (nil))
(insn 254 253 255 30 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -244 [0xffffffffffffff0c])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:134 -1
     (nil))
(insn 255 254 256 30 (set (reg:DI 1 dx)
        (reg:DI 252)) getrandom.c:134 -1
     (nil))
(insn 256 255 257 30 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f6db8f16360 *.LC9>)) getrandom.c:134 -1
     (nil))
(insn 257 256 258 30 (set (reg:DI 5 di)
        (reg/f:DI 138 [ D.6353 ])) getrandom.c:134 -1
     (nil))
(insn 258 257 259 30 (set (reg:QI 0 ax)
        (const_int 0 [0])) getrandom.c:134 -1
     (nil))
(call_insn 259 258 260 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f6db9307ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) getrandom.c:134 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 260 259 261 30 (set (pc)
        (label_ref 267)) -1
     (nil)
 -> 267)
(barrier 261 260 262)
(code_label 262 261 263 31 19 "" [1 uses])
(note 263 262 264 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 31 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f6db8f165a0 *.LC13>)) getrandom.c:137 -1
     (nil))
(call_insn 265 264 266 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:137 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 266 265 267 31 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f6db8ec40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getrandom.c:138 -1
     (nil)
    (nil))
(code_label 267 266 268 32 20 "" [1 uses])
(note 268 267 269 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 269 268 270 32 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:140 -1
     (nil))
(insn 270 269 271 32 (set (reg:SI 253)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:141 -1
     (nil))
(insn 271 270 272 32 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 253)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -276 [0xfffffffffffffeec])) [0 argc+0 S4 A32]))) getrandom.c:141 -1
     (nil))
(jump_insn 272 271 273 32 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) getrandom.c:141 -1
     (nil)
 -> 297)
(note 273 272 274 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 33 (set (reg:SI 254)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:142 -1
     (nil))
(insn 275 274 276 33 (set (reg:DI 139 [ D.6351 ])
        (sign_extend:DI (reg:SI 254))) getrandom.c:142 -1
     (nil))
(insn 276 275 277 33 (parallel [
            (set (reg:DI 140 [ D.6351 ])
                (ashift:DI (reg:DI 139 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:142 -1
     (nil))
(insn 277 276 278 33 (set (reg/f:DI 255)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:142 -1
     (nil))
(insn 278 277 279 33 (parallel [
            (set (reg/f:DI 141 [ D.6352 ])
                (plus:DI (reg:DI 140 [ D.6351 ])
                    (reg/f:DI 255)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:142 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 140 [ D.6351 ]))
        (nil)))
(insn 279 278 280 33 (set (reg/f:DI 142 [ D.6353 ])
        (mem/f:DI (reg/f:DI 141 [ D.6352 ]) [0 *_148+0 S8 A64])) getrandom.c:142 -1
     (nil))
(insn 280 279 281 33 (parallel [
            (set (reg:DI 256)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:142 -1
     (nil))
(insn 281 280 282 33 (set (reg:DI 1 dx)
        (reg:DI 256)) getrandom.c:142 -1
     (nil))
(insn 282 281 283 33 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f6db8f16360 *.LC9>)) getrandom.c:142 -1
     (nil))
(insn 283 282 284 33 (set (reg:DI 5 di)
        (reg/f:DI 142 [ D.6353 ])) getrandom.c:142 -1
     (nil))
(insn 284 283 285 33 (set (reg:QI 0 ax)
        (const_int 0 [0])) getrandom.c:142 -1
     (nil))
(call_insn 285 284 286 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f6db9307ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) getrandom.c:142 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 286 285 287 33 (set (reg:SI 143 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 sessionAttributes1+0 S4 A64])) getrandom.c:143 -1
     (nil))
(insn 287 286 288 33 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 143 [ D.6355 ])
            (const_int 255 [0xff]))) getrandom.c:143 -1
     (nil))
(jump_insn 288 287 289 33 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 437)
            (pc))) getrandom.c:143 612 {*jcc_1}
     (nil)
 -> 437)
(note 289 288 290 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 34 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f6db8f16630 *.LC14>)) getrandom.c:144 -1
     (nil))
(call_insn 291 290 292 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:144 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 292 291 295 34 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f6db8ec40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getrandom.c:145 -1
     (nil)
    (nil))
(jump_insn 295 292 296 34 (set (pc)
        (label_ref:DI 437)) 654 {jump}
     (nil)
 -> 437)
(barrier 296 295 297)
(code_label 297 296 298 36 21 "" [1 uses])
(note 298 297 299 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 300 36 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f6db8f165a0 *.LC13>)) getrandom.c:149 -1
     (nil))
(call_insn 300 299 301 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:149 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 301 300 304 36 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f6db8ec40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getrandom.c:150 -1
     (nil)
    (nil))
(jump_insn 304 301 305 36 (set (pc)
        (label_ref 437)) -1
     (nil)
 -> 437)
(barrier 305 304 306)
(code_label 306 305 307 38 18 "" [1 uses])
(note 307 306 308 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 38 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:153 -1
     (nil))
(insn 309 308 310 38 (set (reg:DI 144 [ D.6351 ])
        (sign_extend:DI (reg:SI 257))) getrandom.c:153 -1
     (nil))
(insn 310 309 311 38 (parallel [
            (set (reg:DI 145 [ D.6351 ])
                (ashift:DI (reg:DI 144 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:153 -1
     (nil))
(insn 311 310 312 38 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:153 -1
     (nil))
(insn 312 311 313 38 (parallel [
            (set (reg/f:DI 146 [ D.6352 ])
                (plus:DI (reg:DI 145 [ D.6351 ])
                    (reg/f:DI 258)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:153 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 145 [ D.6351 ]))
        (nil)))
(insn 313 312 314 38 (set (reg/f:DI 147 [ D.6353 ])
        (mem/f:DI (reg/f:DI 146 [ D.6352 ]) [0 *_158+0 S8 A64])) getrandom.c:153 -1
     (nil))
(insn 314 313 315 38 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f6db8f166c0 *.LC15>)) getrandom.c:153 -1
     (nil))
(insn 315 314 316 38 (set (reg:DI 5 di)
        (reg/f:DI 147 [ D.6353 ])) getrandom.c:153 -1
     (nil))
(call_insn/i 316 315 317 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6db92fe0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) getrandom.c:153 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 317 316 318 38 (set (reg:SI 148 [ D.6354 ])
        (reg:SI 0 ax)) getrandom.c:153 -1
     (nil))
(insn 318 317 319 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 148 [ D.6354 ])
            (const_int 0 [0]))) getrandom.c:153 -1
     (nil))
(jump_insn 319 318 320 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 384)
            (pc))) getrandom.c:153 -1
     (nil)
 -> 384)
(note 320 319 321 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 39 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:154 -1
     (nil))
(insn 322 321 323 39 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:155 -1
     (nil))
(insn 323 322 324 39 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 259)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -276 [0xfffffffffffffeec])) [0 argc+0 S4 A32]))) getrandom.c:155 -1
     (nil))
(jump_insn 324 323 325 39 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 340)
            (pc))) getrandom.c:155 -1
     (nil)
 -> 340)
(note 325 324 326 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 40 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:156 -1
     (nil))
(insn 327 326 328 40 (set (reg:DI 149 [ D.6351 ])
        (sign_extend:DI (reg:SI 260))) getrandom.c:156 -1
     (nil))
(insn 328 327 329 40 (parallel [
            (set (reg:DI 150 [ D.6351 ])
                (ashift:DI (reg:DI 149 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:156 -1
     (nil))
(insn 329 328 330 40 (set (reg/f:DI 261)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:156 -1
     (nil))
(insn 330 329 331 40 (parallel [
            (set (reg/f:DI 151 [ D.6352 ])
                (plus:DI (reg:DI 150 [ D.6351 ])
                    (reg/f:DI 261)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:156 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 150 [ D.6351 ]))
        (nil)))
(insn 331 330 332 40 (set (reg/f:DI 152 [ D.6353 ])
        (mem/f:DI (reg/f:DI 151 [ D.6352 ]) [0 *_164+0 S8 A64])) getrandom.c:156 -1
     (nil))
(insn 332 331 333 40 (parallel [
            (set (reg:DI 262)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -236 [0xffffffffffffff14])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:156 -1
     (nil))
(insn 333 332 334 40 (set (reg:DI 1 dx)
        (reg:DI 262)) getrandom.c:156 -1
     (nil))
(insn 334 333 335 40 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f6db8f16360 *.LC9>)) getrandom.c:156 -1
     (nil))
(insn 335 334 336 40 (set (reg:DI 5 di)
        (reg/f:DI 152 [ D.6353 ])) getrandom.c:156 -1
     (nil))
(insn 336 335 337 40 (set (reg:QI 0 ax)
        (const_int 0 [0])) getrandom.c:156 -1
     (nil))
(call_insn 337 336 338 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f6db9307ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) getrandom.c:156 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 338 337 339 40 (set (pc)
        (label_ref 345)) -1
     (nil)
 -> 345)
(barrier 339 338 340)
(code_label 340 339 341 41 25 "" [1 uses])
(note 341 340 342 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 342 341 343 41 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f6db8f16750 *.LC16>)) getrandom.c:159 -1
     (nil))
(call_insn 343 342 344 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:159 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 344 343 345 41 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f6db8ec40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getrandom.c:160 -1
     (nil)
    (nil))
(code_label 345 344 346 42 26 "" [1 uses])
(note 346 345 347 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 348 42 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:162 -1
     (nil))
(insn 348 347 349 42 (set (reg:SI 263)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:163 -1
     (nil))
(insn 349 348 350 42 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 263)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -276 [0xfffffffffffffeec])) [0 argc+0 S4 A32]))) getrandom.c:163 -1
     (nil))
(jump_insn 350 349 351 42 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 375)
            (pc))) getrandom.c:163 -1
     (nil)
 -> 375)
(note 351 350 352 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 352 351 353 43 (set (reg:SI 264)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:164 -1
     (nil))
(insn 353 352 354 43 (set (reg:DI 153 [ D.6351 ])
        (sign_extend:DI (reg:SI 264))) getrandom.c:164 -1
     (nil))
(insn 354 353 355 43 (parallel [
            (set (reg:DI 154 [ D.6351 ])
                (ashift:DI (reg:DI 153 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:164 -1
     (nil))
(insn 355 354 356 43 (set (reg/f:DI 265)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:164 -1
     (nil))
(insn 356 355 357 43 (parallel [
            (set (reg/f:DI 155 [ D.6352 ])
                (plus:DI (reg:DI 154 [ D.6351 ])
                    (reg/f:DI 265)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:164 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 154 [ D.6351 ]))
        (nil)))
(insn 357 356 358 43 (set (reg/f:DI 156 [ D.6353 ])
        (mem/f:DI (reg/f:DI 155 [ D.6352 ]) [0 *_172+0 S8 A64])) getrandom.c:164 -1
     (nil))
(insn 358 357 359 43 (parallel [
            (set (reg:DI 266)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -232 [0xffffffffffffff18])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:164 -1
     (nil))
(insn 359 358 360 43 (set (reg:DI 1 dx)
        (reg:DI 266)) getrandom.c:164 -1
     (nil))
(insn 360 359 361 43 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f6db8f16360 *.LC9>)) getrandom.c:164 -1
     (nil))
(insn 361 360 362 43 (set (reg:DI 5 di)
        (reg/f:DI 156 [ D.6353 ])) getrandom.c:164 -1
     (nil))
(insn 362 361 363 43 (set (reg:QI 0 ax)
        (const_int 0 [0])) getrandom.c:164 -1
     (nil))
(call_insn 363 362 364 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_sscanf") [flags 0x41]  <function_decl 0x7f6db9307ca8 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) getrandom.c:164 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 364 363 365 43 (set (reg:SI 157 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [0 sessionAttributes2+0 S4 A64])) getrandom.c:165 -1
     (nil))
(insn 365 364 366 43 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 157 [ D.6355 ])
            (const_int 255 [0xff]))) getrandom.c:165 -1
     (nil))
(jump_insn 366 365 367 43 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 437)
            (pc))) getrandom.c:165 612 {*jcc_1}
     (nil)
 -> 437)
(note 367 366 368 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 44 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f6db8f167e0 *.LC17>)) getrandom.c:166 -1
     (nil))
(call_insn 369 368 370 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:166 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 370 369 373 44 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f6db8ec40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getrandom.c:167 -1
     (nil)
    (nil))
(jump_insn 373 370 374 44 (set (pc)
        (label_ref:DI 437)) 654 {jump}
     (nil)
 -> 437)
(barrier 374 373 375)
(code_label 375 374 376 46 27 "" [1 uses])
(note 376 375 377 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 377 376 378 46 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f6db8f16750 *.LC16>)) getrandom.c:171 -1
     (nil))
(call_insn 378 377 379 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:171 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 379 378 382 46 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f6db8ec40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getrandom.c:172 -1
     (nil)
    (nil))
(jump_insn 382 379 383 46 (set (pc)
        (label_ref 437)) -1
     (nil)
 -> 437)
(barrier 383 382 384)
(code_label 384 383 385 48 24 "" [1 uses])
(note 385 384 386 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 386 385 387 48 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:175 -1
     (nil))
(insn 387 386 388 48 (set (reg:DI 158 [ D.6351 ])
        (sign_extend:DI (reg:SI 267))) getrandom.c:175 -1
     (nil))
(insn 388 387 389 48 (parallel [
            (set (reg:DI 159 [ D.6351 ])
                (ashift:DI (reg:DI 158 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:175 -1
     (nil))
(insn 389 388 390 48 (set (reg/f:DI 268)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:175 -1
     (nil))
(insn 390 389 391 48 (parallel [
            (set (reg/f:DI 160 [ D.6352 ])
                (plus:DI (reg:DI 159 [ D.6351 ])
                    (reg/f:DI 268)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:175 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 159 [ D.6351 ]))
        (nil)))
(insn 391 390 392 48 (set (reg/f:DI 161 [ D.6353 ])
        (mem/f:DI (reg/f:DI 160 [ D.6352 ]) [0 *_182+0 S8 A64])) getrandom.c:175 -1
     (nil))
(insn 392 391 393 48 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f6db8f16870 *.LC18>)) getrandom.c:175 -1
     (nil))
(insn 393 392 394 48 (set (reg:DI 5 di)
        (reg/f:DI 161 [ D.6353 ])) getrandom.c:175 -1
     (nil))
(call_insn/i 394 393 395 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6db92fe0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) getrandom.c:175 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 395 394 396 48 (set (reg:SI 162 [ D.6354 ])
        (reg:SI 0 ax)) getrandom.c:175 -1
     (nil))
(insn 396 395 397 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 162 [ D.6354 ])
            (const_int 0 [0]))) getrandom.c:175 -1
     (nil))
(jump_insn 397 396 398 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 402)
            (pc))) getrandom.c:175 -1
     (nil)
 -> 402)
(note 398 397 399 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(call_insn 399 398 400 49 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f6db8ec40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getrandom.c:176 -1
     (nil)
    (nil))
(jump_insn 400 399 401 49 (set (pc)
        (label_ref 437)) -1
     (nil)
 -> 437)
(barrier 401 400 402)
(code_label 402 401 403 50 30 "" [1 uses])
(note 403 402 404 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 404 403 405 50 (set (reg:SI 269)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:178 -1
     (nil))
(insn 405 404 406 50 (set (reg:DI 163 [ D.6351 ])
        (sign_extend:DI (reg:SI 269))) getrandom.c:178 -1
     (nil))
(insn 406 405 407 50 (parallel [
            (set (reg:DI 164 [ D.6351 ])
                (ashift:DI (reg:DI 163 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:178 -1
     (nil))
(insn 407 406 408 50 (set (reg/f:DI 270)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:178 -1
     (nil))
(insn 408 407 409 50 (parallel [
            (set (reg/f:DI 165 [ D.6352 ])
                (plus:DI (reg:DI 164 [ D.6351 ])
                    (reg/f:DI 270)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:178 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 164 [ D.6351 ]))
        (nil)))
(insn 409 408 410 50 (set (reg/f:DI 166 [ D.6353 ])
        (mem/f:DI (reg/f:DI 165 [ D.6352 ]) [0 *_188+0 S8 A64])) getrandom.c:178 -1
     (nil))
(insn 410 409 411 50 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f6db8f16900 *.LC19>)) getrandom.c:178 -1
     (nil))
(insn 411 410 412 50 (set (reg:DI 5 di)
        (reg/f:DI 166 [ D.6353 ])) getrandom.c:178 -1
     (nil))
(call_insn/i 412 411 413 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6db92fe0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) getrandom.c:178 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 413 412 414 50 (set (reg:SI 167 [ D.6354 ])
        (reg:SI 0 ax)) getrandom.c:178 -1
     (nil))
(insn 414 413 415 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 167 [ D.6354 ])
            (const_int 0 [0]))) getrandom.c:178 -1
     (nil))
(jump_insn 415 414 416 50 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 424)
            (pc))) getrandom.c:178 -1
     (nil)
 -> 424)
(note 416 415 417 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 417 416 418 51 (set (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f6db90c6090 verbose>) [0 verbose+0 S4 A32])
        (const_int 1 [0x1])) getrandom.c:179 -1
     (nil))
(insn 418 417 419 51 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f6db8f16990 *.LC20>)) getrandom.c:180 -1
     (nil))
(insn 419 418 420 51 (set (reg:SI 4 si)
        (const_int 1 [0x1])) getrandom.c:180 -1
     (nil))
(insn 420 419 421 51 (set (reg:DI 5 di)
        (const_int 0 [0])) getrandom.c:180 -1
     (nil))
(call_insn 421 420 422 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_SetProperty") [flags 0x41]  <function_decl 0x7f6db926a000 TSS_SetProperty>) [0 TSS_SetProperty S1 A8])
            (const_int 0 [0]))) getrandom.c:180 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 422 421 423 51 (set (pc)
        (label_ref 437)) -1
     (nil)
 -> 437)
(barrier 423 422 424)
(code_label 424 423 425 52 31 "" [1 uses])
(note 425 424 426 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 426 425 427 52 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:183 -1
     (nil))
(insn 427 426 428 52 (set (reg:DI 168 [ D.6351 ])
        (sign_extend:DI (reg:SI 271))) getrandom.c:183 -1
     (nil))
(insn 428 427 429 52 (parallel [
            (set (reg:DI 169 [ D.6351 ])
                (ashift:DI (reg:DI 168 [ D.6351 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:183 -1
     (nil))
(insn 429 428 430 52 (set (reg/f:DI 272)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])) getrandom.c:183 -1
     (nil))
(insn 430 429 431 52 (parallel [
            (set (reg/f:DI 170 [ D.6352 ])
                (plus:DI (reg:DI 169 [ D.6351 ])
                    (reg/f:DI 272)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:183 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 argv+0 S8 A64])
            (reg:DI 169 [ D.6351 ]))
        (nil)))
(insn 431 430 432 52 (set (reg/f:DI 171 [ D.6353 ])
        (mem/f:DI (reg/f:DI 170 [ D.6352 ]) [0 *_195+0 S8 A64])) getrandom.c:183 -1
     (nil))
(insn 432 431 433 52 (set (reg:DI 4 si)
        (reg/f:DI 171 [ D.6353 ])) getrandom.c:183 -1
     (nil))
(insn 433 432 434 52 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f6db8f16a20 *.LC21>)) getrandom.c:183 -1
     (nil))
(insn 434 433 435 52 (set (reg:QI 0 ax)
        (const_int 0 [0])) getrandom.c:183 -1
     (nil))
(call_insn 435 434 436 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6db9304ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getrandom.c:183 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(call_insn 436 435 437 52 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f6db8ec40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getrandom.c:184 -1
     (nil)
    (nil))
(code_label 437 436 438 53 6 "" [17 uses])
(note 438 437 439 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 439 438 440 53 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:82 -1
     (nil))
(code_label 440 439 441 54 2 "" [1 uses])
(note 441 440 442 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 442 441 443 54 (set (reg:SI 273)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 i+0 S4 A32])) getrandom.c:82 -1
     (nil))
(insn 443 442 444 54 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 273)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -276 [0xfffffffffffffeec])) [0 argc+0 S4 A32]))) getrandom.c:82 -1
     (nil))
(jump_insn 444 443 445 54 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 449)
            (pc))) getrandom.c:82 -1
     (nil)
 -> 449)
(note 445 444 447 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 447 445 448 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getrandom.c:82 -1
     (nil))
(jump_insn 448 447 449 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 446)
            (pc))) getrandom.c:82 -1
     (nil)
 -> 446)
(code_label 449 448 450 56 32 "" [1 uses])
(note 450 449 451 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 451 450 452 56 (set (reg:SI 172 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 bytesRequested+0 S4 A64])) getrandom.c:187 -1
     (nil))
(insn 452 451 453 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 172 [ D.6355 ])
            (const_int 0 [0]))) getrandom.c:187 -1
     (nil))
(jump_insn 453 452 454 56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 458)
            (pc))) getrandom.c:187 -1
     (nil)
 -> 458)
(note 454 453 455 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 455 454 456 57 (set (reg:SI 173 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 bytesRequested+0 S4 A64])) getrandom.c:188 -1
     (nil))
(insn 456 455 457 57 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 173 [ D.6355 ])
            (const_int 65535 [0xffff]))) getrandom.c:187 -1
     (nil))
(jump_insn 457 456 458 57 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 463)
            (pc))) getrandom.c:187 -1
     (nil)
 -> 463)
(code_label 458 457 459 58 34 "" [1 uses])
(note 459 458 460 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 460 459 461 58 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f6db8f16ab0 *.LC22>)) getrandom.c:189 -1
     (nil))
(call_insn 461 460 462 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:189 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 462 461 463 58 (call (mem:QI (symbol_ref:DI ("printUsage") [flags 0x3]  <function_decl 0x7f6db8ec40d8 printUsage>) [0 printUsage S1 A8])
        (const_int 0 [0])) getrandom.c:190 -1
     (nil)
    (nil))
(code_label 463 462 464 59 35 "" [1 uses])
(note 464 463 465 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 465 464 466 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getrandom.c:193 -1
     (nil))
(jump_insn 466 465 467 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 476)
            (pc))) getrandom.c:193 -1
     (nil)
 -> 476)
(note 467 466 468 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 469 60 (set (reg:SI 174 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 bytesRequested+0 S4 A64])) getrandom.c:194 -1
     (nil))
(insn 469 468 470 60 (parallel [
            (set (reg:SI 175 [ D.6355 ])
                (plus:SI (reg:SI 174 [ D.6355 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:194 -1
     (nil))
(insn 470 469 471 60 (parallel [
            (set (reg:DI 274)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:194 -1
     (nil))
(insn 471 470 472 60 (set (reg:SI 4 si)
        (reg:SI 175 [ D.6355 ])) getrandom.c:194 -1
     (nil))
(insn 472 471 473 60 (set (reg:DI 5 di)
        (reg:DI 274)) getrandom.c:194 -1
     (nil))
(call_insn 473 472 474 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Malloc") [flags 0x41]  <function_decl 0x7f6db926a0d8 TSS_Malloc>) [0 TSS_Malloc S1 A8])
            (const_int 0 [0]))) getrandom.c:194 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 474 473 475 60 (set (reg:SI 275)
        (reg:SI 0 ax)) getrandom.c:194 -1
     (nil))
(insn 475 474 476 60 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
        (reg:SI 275)) getrandom.c:194 -1
     (nil))
(code_label 476 475 477 61 36 "" [1 uses])
(note 477 476 478 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 478 477 479 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getrandom.c:197 -1
     (nil))
(jump_insn 479 478 480 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 486)
            (pc))) getrandom.c:197 -1
     (nil)
 -> 486)
(note 480 479 481 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 481 480 482 62 (parallel [
            (set (reg:DI 276)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:198 -1
     (nil))
(insn 482 481 483 62 (set (reg:DI 5 di)
        (reg:DI 276)) getrandom.c:198 -1
     (nil))
(call_insn 483 482 484 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Create") [flags 0x41]  <function_decl 0x7f6db9262ca8 TSS_Create>) [0 TSS_Create S1 A8])
            (const_int 0 [0]))) getrandom.c:198 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 484 483 485 62 (set (reg:SI 277)
        (reg:SI 0 ax)) getrandom.c:198 -1
     (nil))
(insn 485 484 486 62 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
        (reg:SI 277)) getrandom.c:198 -1
     (nil))
(code_label 486 485 487 63 37 "" [1 uses])
(note 487 486 488 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 488 487 489 63 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [0 bytesCopied+0 S4 A32])
        (const_int 0 [0])) getrandom.c:205 -1
     (nil))
(jump_insn 489 488 490 63 (set (pc)
        (label_ref 607)) getrandom.c:205 -1
     (nil)
 -> 607)
(barrier 490 489 613)
(code_label 613 490 491 64 48 "" [1 uses])
(note 491 613 492 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getrandom.c:207 -1
     (nil))
(jump_insn 493 492 494 64 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 501)
            (pc))) getrandom.c:207 -1
     (nil)
 -> 501)
(note 494 493 495 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 495 494 496 65 (set (reg:SI 177 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 bytesRequested+0 S4 A64])) getrandom.c:208 -1
     (nil))
(insn 496 495 497 65 (set (reg:HI 178 [ D.6356 ])
        (subreg:HI (reg:SI 177 [ D.6355 ]) 0)) getrandom.c:208 -1
     (nil))
(insn 497 496 498 65 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [0 bytesCopied+0 S4 A32])) getrandom.c:208 -1
     (nil))
(insn 498 497 499 65 (set (reg:HI 179 [ D.6356 ])
        (subreg:HI (reg:SI 278) 0)) getrandom.c:208 -1
     (nil))
(insn 499 498 500 65 (parallel [
            (set (reg:HI 180 [ D.6356 ])
                (minus:HI (reg:HI 178 [ D.6356 ])
                    (reg:HI 179 [ D.6356 ])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:208 -1
     (nil))
(insn 500 499 501 65 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 in.bytesRequested+0 S2 A64])
        (reg:HI 180 [ D.6356 ])) getrandom.c:208 -1
     (nil))
(code_label 501 500 502 66 39 "" [1 uses])
(note 502 501 503 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 503 502 504 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getrandom.c:211 -1
     (nil))
(jump_insn 504 503 505 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 538)
            (pc))) getrandom.c:211 -1
     (nil)
 -> 538)
(note 505 504 506 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 506 505 507 67 (set (reg:SI 181 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [0 sessionAttributes2+0 S4 A64])) getrandom.c:212 -1
     (nil))
(insn 507 506 508 67 (set (reg:SI 182 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -236 [0xffffffffffffff14])) [0 sessionHandle2+0 S4 A32])) getrandom.c:212 -1
     (nil))
(insn 508 507 509 67 (set (reg:SI 183 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 sessionAttributes1+0 S4 A64])) getrandom.c:212 -1
     (nil))
(insn 509 508 510 67 (set (reg:SI 184 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -244 [0xffffffffffffff0c])) [0 sessionHandle1+0 S4 A32])) getrandom.c:212 -1
     (nil))
(insn 510 509 511 67 (set (reg:SI 185 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 sessionAttributes0+0 S4 A64])) getrandom.c:212 -1
     (nil))
(insn 511 510 512 67 (set (reg:SI 186 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 sessionHandle0+0 S4 A32])) getrandom.c:212 -1
     (nil))
(insn 512 511 513 67 (set (reg/f:DI 187 [ D.6357 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [0 tssContext+0 S8 A64])) getrandom.c:212 -1
     (nil))
(insn 513 512 514 67 (parallel [
            (set (reg:DI 279)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:212 -1
     (nil))
(insn 514 513 515 67 (parallel [
            (set (reg:DI 280)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:212 -1
     (nil))
(insn 515 514 516 67 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:212 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 516 515 517 67 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) getrandom.c:212 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 517 516 518 67 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) getrandom.c:212 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 518 517 519 67 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1073741831 [0x40000007])) getrandom.c:212 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 519 518 520 67 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 181 [ D.6355 ])) getrandom.c:212 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 520 519 521 67 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) getrandom.c:212 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 521 520 522 67 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 182 [ D.6355 ])) getrandom.c:212 -1
     (expr_list:REG_ARGS_SIZE (const_int 56 [0x38])
        (nil)))
(insn 522 521 523 67 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 183 [ D.6355 ])) getrandom.c:212 -1
     (expr_list:REG_ARGS_SIZE (const_int 64 [0x40])
        (nil)))
(insn 523 522 524 67 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) getrandom.c:212 -1
     (expr_list:REG_ARGS_SIZE (const_int 72 [0x48])
        (nil)))
(insn 524 523 525 67 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 184 [ D.6355 ])) getrandom.c:212 -1
     (expr_list:REG_ARGS_SIZE (const_int 80 [0x50])
        (nil)))
(insn 525 524 526 67 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 185 [ D.6355 ])) getrandom.c:212 -1
     (expr_list:REG_ARGS_SIZE (const_int 88 [0x58])
        (nil)))
(insn 526 525 527 67 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) getrandom.c:212 -1
     (expr_list:REG_ARGS_SIZE (const_int 96 [0x60])
        (nil)))
(insn 527 526 528 67 (set (reg:SI 38 r9)
        (reg:SI 186 [ D.6355 ])) getrandom.c:212 -1
     (nil))
(insn 528 527 529 67 (set (reg:SI 37 r8)
        (const_int 379 [0x17b])) getrandom.c:212 -1
     (nil))
(insn 529 528 530 67 (set (reg:DI 2 cx)
        (const_int 0 [0])) getrandom.c:212 -1
     (nil))
(insn 530 529 531 67 (set (reg:DI 1 dx)
        (reg:DI 279)) getrandom.c:212 -1
     (nil))
(insn 531 530 532 67 (set (reg:DI 4 si)
        (reg:DI 280)) getrandom.c:212 -1
     (nil))
(insn 532 531 533 67 (set (reg:DI 5 di)
        (reg/f:DI 187 [ D.6357 ])) getrandom.c:212 -1
     (nil))
(insn 533 532 534 67 (set (reg:QI 0 ax)
        (const_int 0 [0])) getrandom.c:212 -1
     (nil))
(call_insn 534 533 535 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Execute") [flags 0x41]  <function_decl 0x7f6db9262e58 TSS_Execute>) [0 TSS_Execute S1 A8])
            (const_int 96 [0x60]))) getrandom.c:212 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 535 534 536 67 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:212 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 536 535 537 67 (set (reg:SI 281)
        (reg:SI 0 ax)) getrandom.c:212 -1
     (nil))
(insn 537 536 538 67 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
        (reg:SI 281)) getrandom.c:212 -1
     (nil))
(code_label 538 537 539 68 40 "" [1 uses])
(note 539 538 540 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 540 539 541 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getrandom.c:222 -1
     (nil))
(jump_insn 541 540 542 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 595)
            (pc))) getrandom.c:222 -1
     (nil)
 -> 595)
(note 542 541 543 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 543 542 544 69 (set (reg:SI 188 [ D.6354 ])
        (mem/c:SI (symbol_ref:DI ("verbose") [flags 0x2]  <var_decl 0x7f6db90c6090 verbose>) [0 verbose+0 S4 A32])) getrandom.c:223 -1
     (nil))
(insn 544 543 545 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 188 [ D.6354 ])
            (const_int 0 [0]))) getrandom.c:223 -1
     (nil))
(jump_insn 545 544 546 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 555)
            (pc))) getrandom.c:223 -1
     (nil)
 -> 555)
(note 546 545 547 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 547 546 548 70 (set (reg:HI 189 [ D.6356 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [0 out.randomBytes.t.size+0 S2 A64])) getrandom.c:224 -1
     (nil))
(insn 548 547 549 70 (set (reg:SI 190 [ D.6355 ])
        (zero_extend:SI (reg:HI 189 [ D.6356 ]))) getrandom.c:223 -1
     (nil))
(insn 549 548 550 70 (parallel [
            (set (reg:DI 282)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:223 -1
     (nil))
(insn 550 549 551 70 (parallel [
            (set (reg:DI 283)
                (plus:DI (reg:DI 282)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:223 -1
     (nil))
(insn 551 550 552 70 (set (reg:SI 1 dx)
        (reg:SI 190 [ D.6355 ])) getrandom.c:223 -1
     (nil))
(insn 552 551 553 70 (set (reg:DI 4 si)
        (reg:DI 283)) getrandom.c:223 -1
     (nil))
(insn 553 552 554 70 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f6db8f16b40 *.LC23>)) getrandom.c:223 -1
     (nil))
(call_insn 554 553 555 70 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7f6db9231948 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) getrandom.c:223 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(code_label 555 554 556 71 42 "" [1 uses])
(note 556 555 557 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 557 556 558 71 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [0 br+0 S8 A64])
        (const_int 0 [0])) getrandom.c:227 -1
     (nil))
(jump_insn 558 557 559 71 (set (pc)
        (label_ref 584)) getrandom.c:227 -1
     (nil)
 -> 584)
(barrier 559 558 592)
(code_label 592 559 560 72 46 "" [1 uses])
(note 560 592 561 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 561 560 562 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -216 [0xffffffffffffff28])) [0 noZeros+0 S4 A32])
            (const_int 0 [0]))) getrandom.c:229 -1
     (nil))
(jump_insn 562 561 563 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 570)
            (pc))) getrandom.c:229 -1
     (nil)
 -> 570)
(note 563 562 564 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 564 563 565 73 (parallel [
            (set (reg:DI 284)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -142 [0xffffffffffffff72])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:229 -1
     (nil))
(insn 565 564 566 73 (set (reg:DI 286)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [0 br+0 S8 A64])) getrandom.c:229 -1
     (nil))
(insn 566 565 567 73 (parallel [
            (set (reg/f:DI 285)
                (plus:DI (reg:DI 284)
                    (reg:DI 286)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:229 -1
     (expr_list:REG_EQUAL (plus:DI (reg:DI 284)
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -152 [0xffffffffffffff68])) [0 br+0 S8 A64]))
        (nil)))
(insn 567 566 568 73 (set (reg:QI 194 [ D.6358 ])
        (mem/j:QI (reg/f:DI 285) [0 out.randomBytes.t.buffer S1 A8])) getrandom.c:229 -1
     (nil))
(insn 568 567 569 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 194 [ D.6358 ])
            (const_int 0 [0]))) getrandom.c:229 -1
     (nil))
(jump_insn 569 568 570 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) getrandom.c:229 -1
     (nil)
 -> 581)
(code_label 570 569 571 74 44 "" [1 uses])
(note 571 570 572 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 572 571 573 74 (set (reg/f:DI 195 [ D.6359 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 randomBuffer+0 S8 A64])) getrandom.c:230 -1
     (nil))
(insn 573 572 574 74 (set (reg:DI 196 [ D.6360 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -220 [0xffffffffffffff24])) [0 bytesCopied+0 S4 A32]))) getrandom.c:230 -1
     (nil))
(insn 574 573 575 74 (parallel [
            (set (reg/f:DI 197 [ D.6359 ])
                (plus:DI (reg/f:DI 195 [ D.6359 ])
                    (reg:DI 196 [ D.6360 ])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:230 -1
     (nil))
(insn 575 574 576 74 (parallel [
            (set (reg:DI 287)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -142 [0xffffffffffffff72])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:230 -1
     (nil))
(insn 576 575 577 74 (set (reg:DI 289)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [0 br+0 S8 A64])) getrandom.c:230 -1
     (nil))
(insn 577 576 578 74 (parallel [
            (set (reg/f:DI 288)
                (plus:DI (reg:DI 287)
                    (reg:DI 289)))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:230 -1
     (expr_list:REG_EQUAL (plus:DI (reg:DI 287)
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -152 [0xffffffffffffff68])) [0 br+0 S8 A64]))
        (nil)))
(insn 578 577 579 74 (set (reg:QI 198 [ D.6358 ])
        (mem/j:QI (reg/f:DI 288) [0 out.randomBytes.t.buffer S1 A8])) getrandom.c:230 -1
     (nil))
(insn 579 578 580 74 (set (mem:QI (reg/f:DI 197 [ D.6359 ]) [0 *_237+0 S1 A8])
        (reg:QI 198 [ D.6358 ])) getrandom.c:230 -1
     (nil))
(insn 580 579 581 74 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -220 [0xffffffffffffff24])) [0 bytesCopied+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -220 [0xffffffffffffff24])) [0 bytesCopied+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:231 -1
     (nil))
(code_label 581 580 582 75 45 "" [1 uses])
(note 582 581 583 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 583 582 584 75 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -152 [0xffffffffffffff68])) [0 br+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -152 [0xffffffffffffff68])) [0 br+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:227 -1
     (nil))
(code_label 584 583 585 76 43 "" [1 uses])
(note 585 584 586 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 586 585 587 76 (set (reg:HI 191 [ D.6356 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [0 out.randomBytes.t.size+0 S2 A64])) getrandom.c:227 -1
     (nil))
(insn 587 586 588 76 (set (reg:DI 192 [ D.6351 ])
        (zero_extend:DI (reg:HI 191 [ D.6356 ]))) getrandom.c:227 -1
     (nil))
(insn 588 587 589 76 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 192 [ D.6351 ])
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -152 [0xffffffffffffff68])) [0 br+0 S8 A64]))) getrandom.c:227 -1
     (nil))
(jump_insn 589 588 590 76 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 595)
            (pc))) getrandom.c:227 -1
     (nil)
 -> 595)
(note 590 589 591 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 591 590 593 77 (set (reg:SI 193 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 bytesRequested+0 S4 A64])) getrandom.c:227 -1
     (nil))
(insn 593 591 594 77 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -220 [0xffffffffffffff24])) [0 bytesCopied+0 S4 A32])
            (reg:SI 193 [ D.6355 ]))) getrandom.c:227 -1
     (nil))
(jump_insn 594 593 595 77 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 592)
            (pc))) getrandom.c:227 -1
     (nil)
 -> 592)
(code_label 595 594 596 78 41 "" [2 uses])
(note 596 595 597 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 597 596 598 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getrandom.c:235 -1
     (nil))
(jump_insn 598 597 599 78 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 607)
            (pc))) getrandom.c:235 -1
     (nil)
 -> 607)
(note 599 598 600 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 600 599 601 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -216 [0xffffffffffffff28])) [0 noZeros+0 S4 A32])
            (const_int 0 [0]))) getrandom.c:236 -1
     (nil))
(jump_insn 601 600 602 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 607)
            (pc))) getrandom.c:236 -1
     (nil)
 -> 607)
(note 602 601 603 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 603 602 604 80 (set (reg/f:DI 199 [ D.6359 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 randomBuffer+0 S8 A64])) getrandom.c:237 -1
     (nil))
(insn 604 603 605 80 (set (reg:DI 200 [ D.6360 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -220 [0xffffffffffffff24])) [0 bytesCopied+0 S4 A32]))) getrandom.c:237 -1
     (nil))
(insn 605 604 606 80 (parallel [
            (set (reg/f:DI 201 [ D.6359 ])
                (plus:DI (reg/f:DI 199 [ D.6359 ])
                    (reg:DI 200 [ D.6360 ])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:237 -1
     (nil))
(insn 606 605 607 80 (set (mem:QI (reg/f:DI 201 [ D.6359 ]) [0 *_244+0 S1 A8])
        (const_int 0 [0])) getrandom.c:237 -1
     (nil))
(code_label 607 606 608 81 38 "" [3 uses])
(note 608 607 609 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 609 608 610 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getrandom.c:205 -1
     (nil))
(jump_insn 610 609 611 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 616)
            (pc))) getrandom.c:205 -1
     (nil)
 -> 616)
(note 611 610 612 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 612 611 614 82 (set (reg:SI 176 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 bytesRequested+0 S4 A64])) getrandom.c:205 -1
     (nil))
(insn 614 612 615 82 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -220 [0xffffffffffffff24])) [0 bytesCopied+0 S4 A32])
            (reg:SI 176 [ D.6355 ]))) getrandom.c:205 -1
     (nil))
(jump_insn 615 614 616 82 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 613)
            (pc))) getrandom.c:205 -1
     (nil)
 -> 613)
(code_label 616 615 617 83 47 "" [1 uses])
(note 617 616 618 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 618 617 619 83 (set (reg/f:DI 202 [ D.6357 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [0 tssContext+0 S8 A64])) getrandom.c:242 -1
     (nil))
(insn 619 618 620 83 (set (reg:DI 5 di)
        (reg/f:DI 202 [ D.6357 ])) getrandom.c:242 -1
     (nil))
(call_insn 620 619 621 83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Delete") [flags 0x41]  <function_decl 0x7f6db9262d80 TSS_Delete>) [0 TSS_Delete S1 A8])
            (const_int 0 [0]))) getrandom.c:242 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 621 620 622 83 (set (reg:SI 290)
        (reg:SI 0 ax)) getrandom.c:242 -1
     (nil))
(insn 622 621 623 83 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -204 [0xffffffffffffff34])) [0 rc1+0 S4 A32])
        (reg:SI 290)) getrandom.c:242 -1
     (nil))
(insn 623 622 624 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getrandom.c:243 -1
     (nil))
(jump_insn 624 623 625 83 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 628)
            (pc))) getrandom.c:243 -1
     (nil)
 -> 628)
(note 625 624 626 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 626 625 627 84 (set (reg:SI 291)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -204 [0xffffffffffffff34])) [0 rc1+0 S4 A32])) getrandom.c:244 -1
     (nil))
(insn 627 626 628 84 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
        (reg:SI 291)) getrandom.c:244 -1
     (nil))
(code_label 628 627 629 85 49 "" [1 uses])
(note 629 628 630 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 630 629 631 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getrandom.c:247 -1
     (nil))
(jump_insn 631 630 632 85 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 658)
            (pc))) getrandom.c:247 -1
     (nil)
 -> 658)
(note 632 631 633 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 633 632 634 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -160 [0xffffffffffffff60])) [0 outFilename+0 S8 A64])
            (const_int 0 [0]))) getrandom.c:247 -1
     (nil))
(jump_insn 634 633 635 86 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 658)
            (pc))) getrandom.c:247 -1
     (nil)
 -> 658)
(note 635 634 636 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 636 635 637 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -216 [0xffffffffffffff28])) [0 noZeros+0 S4 A32])
            (const_int 0 [0]))) getrandom.c:248 -1
     (nil))
(jump_insn 637 636 638 87 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 642)
            (pc))) getrandom.c:248 -1
     (nil)
 -> 642)
(note 638 637 639 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 639 638 640 88 (set (reg:SI 87 [ D.6349 ])
        (const_int 1 [0x1])) getrandom.c:248 -1
     (nil))
(jump_insn 640 639 641 88 (set (pc)
        (label_ref 645)) -1
     (nil)
 -> 645)
(barrier 641 640 642)
(code_label 642 641 643 89 51 "" [1 uses])
(note 643 642 644 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 644 643 645 89 (set (reg:SI 87 [ D.6349 ])
        (const_int 0 [0])) getrandom.c:248 -1
     (nil))
(code_label 645 644 646 90 52 "" [1 uses])
(note 646 645 647 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 647 646 648 90 (set (reg:SI 203 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 bytesRequested+0 S4 A64])) getrandom.c:248 -1
     (nil))
(insn 648 647 649 90 (parallel [
            (set (reg:SI 204 [ D.6355 ])
                (plus:SI (reg:SI 87 [ D.6349 ])
                    (reg:SI 203 [ D.6355 ])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:248 -1
     (nil))
(insn 649 648 650 90 (set (reg:DI 205 [ D.6351 ])
        (zero_extend:DI (reg:SI 204 [ D.6355 ]))) getrandom.c:248 -1
     (nil))
(insn 650 649 651 90 (set (reg/f:DI 206 [ D.6359 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 randomBuffer+0 S8 A64])) getrandom.c:248 -1
     (nil))
(insn 651 650 652 90 (set (reg:DI 292)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [0 outFilename+0 S8 A64])) getrandom.c:248 -1
     (nil))
(insn 652 651 653 90 (set (reg:DI 1 dx)
        (reg:DI 292)) getrandom.c:248 -1
     (nil))
(insn 653 652 654 90 (set (reg:DI 4 si)
        (reg:DI 205 [ D.6351 ])) getrandom.c:248 -1
     (nil))
(insn 654 653 655 90 (set (reg:DI 5 di)
        (reg/f:DI 206 [ D.6359 ])) getrandom.c:248 -1
     (nil))
(call_insn 655 654 656 90 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_File_WriteBinaryFile") [flags 0x41]  <function_decl 0x7f6db926aa20 TSS_File_WriteBinaryFile>) [0 TSS_File_WriteBinaryFile S1 A8])
            (const_int 0 [0]))) getrandom.c:248 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 656 655 657 90 (set (reg:SI 293)
        (reg:SI 0 ax)) getrandom.c:248 -1
     (nil))
(insn 657 656 658 90 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
        (reg:SI 293)) getrandom.c:248 -1
     (nil))
(code_label 658 657 659 91 50 "" [2 uses])
(note 659 658 660 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 660 659 661 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) getrandom.c:251 -1
     (nil))
(jump_insn 661 660 662 91 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 703)
            (pc))) getrandom.c:251 -1
     (nil)
 -> 703)
(note 662 661 663 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 663 662 664 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -212 [0xffffffffffffff2c])) [0 noSpace+0 S4 A32])
            (const_int 0 [0]))) getrandom.c:253 -1
     (nil))
(jump_insn 664 663 665 92 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 691)
            (pc))) getrandom.c:253 -1
     (nil)
 -> 691)
(note 665 664 666 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 666 665 667 93 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 bp+0 S4 A32])
        (const_int 0 [0])) getrandom.c:255 -1
     (nil))
(jump_insn 667 666 668 93 (set (pc)
        (label_ref 680)) getrandom.c:255 -1
     (nil)
 -> 680)
(barrier 668 667 683)
(code_label 683 668 669 94 56 "" [1 uses])
(note 669 683 670 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 670 669 671 94 (set (reg/f:DI 208 [ D.6359 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 randomBuffer+0 S8 A64])) getrandom.c:256 -1
     (nil))
(insn 671 670 672 94 (set (reg:DI 209 [ D.6360 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -208 [0xffffffffffffff30])) [0 bp+0 S4 A32]))) getrandom.c:256 -1
     (nil))
(insn 672 671 673 94 (parallel [
            (set (reg/f:DI 210 [ D.6359 ])
                (plus:DI (reg/f:DI 208 [ D.6359 ])
                    (reg:DI 209 [ D.6360 ])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:256 -1
     (nil))
(insn 673 672 674 94 (set (reg:QI 211 [ D.6358 ])
        (mem:QI (reg/f:DI 210 [ D.6359 ]) [0 *_262+0 S1 A8])) getrandom.c:256 -1
     (nil))
(insn 674 673 675 94 (set (reg:SI 212 [ D.6354 ])
        (zero_extend:SI (reg:QI 211 [ D.6358 ]))) getrandom.c:256 -1
     (nil))
(insn 675 674 676 94 (set (reg:SI 4 si)
        (reg:SI 212 [ D.6354 ])) getrandom.c:256 -1
     (nil))
(insn 676 675 677 94 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f6db8f16bd0 *.LC24>)) getrandom.c:256 -1
     (nil))
(insn 677 676 678 94 (set (reg:QI 0 ax)
        (const_int 0 [0])) getrandom.c:256 -1
     (nil))
(call_insn 678 677 679 94 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6db9304ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getrandom.c:256 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 679 678 680 94 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -208 [0xffffffffffffff30])) [0 bp+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -208 [0xffffffffffffff30])) [0 bp+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:255 -1
     (nil))
(code_label 680 679 681 95 55 "" [1 uses])
(note 681 680 682 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 682 681 684 95 (set (reg:SI 207 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 bytesRequested+0 S4 A64])) getrandom.c:255 -1
     (nil))
(insn 684 682 685 95 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -208 [0xffffffffffffff30])) [0 bp+0 S4 A32])
            (reg:SI 207 [ D.6355 ]))) getrandom.c:255 -1
     (nil))
(jump_insn 685 684 686 95 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 683)
            (pc))) getrandom.c:255 -1
     (nil)
 -> 683)
(note 686 685 687 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 687 686 688 96 (set (reg:SI 5 di)
        (const_int 10 [0xa])) getrandom.c:258 -1
     (nil))
(call_insn 688 687 689 96 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f6db9307000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) getrandom.c:258 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(jump_insn 689 688 690 96 (set (pc)
        (label_ref:DI 729)) 654 {jump}
     (nil)
 -> 729)
(barrier 690 689 691)
(code_label 691 690 692 97 54 "" [1 uses])
(note 692 691 693 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 693 692 694 97 (set (reg:SI 213 [ D.6355 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 bytesRequested+0 S4 A64])) getrandom.c:262 -1
     (nil))
(insn 694 693 695 97 (set (reg/f:DI 214 [ D.6359 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 randomBuffer+0 S8 A64])) getrandom.c:262 -1
     (nil))
(insn 695 694 696 97 (set (reg:SI 1 dx)
        (reg:SI 213 [ D.6355 ])) getrandom.c:262 -1
     (nil))
(insn 696 695 697 97 (set (reg:DI 4 si)
        (reg/f:DI 214 [ D.6359 ])) getrandom.c:262 -1
     (nil))
(insn 697 696 698 97 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f6db8f16c60 *.LC25>)) getrandom.c:262 -1
     (nil))
(call_insn 698 697 701 97 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7f6db9231948 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) getrandom.c:262 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(jump_insn 701 698 702 97 (set (pc)
        (label_ref 729)) -1
     (nil)
 -> 729)
(barrier 702 701 703)
(code_label 703 702 704 99 53 "" [1 uses])
(note 704 703 705 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 705 704 706 99 (set (reg:SI 294)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])) getrandom.c:269 -1
     (nil))
(insn 706 705 707 99 (set (reg:SI 4 si)
        (reg:SI 294)) getrandom.c:269 -1
     (nil))
(insn 707 706 708 99 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f6db8f16cf0 *.LC26>)) getrandom.c:269 -1
     (nil))
(insn 708 707 709 99 (set (reg:QI 0 ax)
        (const_int 0 [0])) getrandom.c:269 -1
     (nil))
(call_insn 709 708 710 99 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6db9304ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getrandom.c:269 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 710 709 711 99 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])) getrandom.c:270 -1
     (nil))
(insn 711 710 712 99 (parallel [
            (set (reg:DI 296)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:270 -1
     (nil))
(insn 712 711 713 99 (parallel [
            (set (reg:DI 297)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:270 -1
     (nil))
(insn 713 712 714 99 (parallel [
            (set (reg:DI 298)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -184 [0xffffffffffffff48])))
            (clobber (reg:CC 17 flags))
        ]) getrandom.c:270 -1
     (nil))
(insn 714 713 715 99 (set (reg:SI 2 cx)
        (reg:SI 295)) getrandom.c:270 -1
     (nil))
(insn 715 714 716 99 (set (reg:DI 1 dx)
        (reg:DI 296)) getrandom.c:270 -1
     (nil))
(insn 716 715 717 99 (set (reg:DI 4 si)
        (reg:DI 297)) getrandom.c:270 -1
     (nil))
(insn 717 716 718 99 (set (reg:DI 5 di)
        (reg:DI 298)) getrandom.c:270 -1
     (nil))
(call_insn 718 717 719 99 (call (mem:QI (symbol_ref:DI ("TSS_ResponseCode_toString") [flags 0x41]  <function_decl 0x7f6db926ae58 TSS_ResponseCode_toString>) [0 TSS_ResponseCode_toString S1 A8])
        (const_int 0 [0])) getrandom.c:270 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 719 718 720 99 (set (reg/f:DI 215 [ D.6361 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [0 num+0 S8 A64])) getrandom.c:271 -1
     (nil))
(insn 720 719 721 99 (set (reg/f:DI 216 [ D.6361 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [0 submsg+0 S8 A64])) getrandom.c:271 -1
     (nil))
(insn 721 720 722 99 (set (reg/f:DI 217 [ D.6361 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [0 msg+0 S8 A64])) getrandom.c:271 -1
     (nil))
(insn 722 721 723 99 (set (reg:DI 2 cx)
        (reg/f:DI 215 [ D.6361 ])) getrandom.c:271 -1
     (nil))
(insn 723 722 724 99 (set (reg:DI 1 dx)
        (reg/f:DI 216 [ D.6361 ])) getrandom.c:271 -1
     (nil))
(insn 724 723 725 99 (set (reg:DI 4 si)
        (reg/f:DI 217 [ D.6361 ])) getrandom.c:271 -1
     (nil))
(insn 725 724 726 99 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f6db8f16d80 *.LC27>)) getrandom.c:271 -1
     (nil))
(insn 726 725 727 99 (set (reg:QI 0 ax)
        (const_int 0 [0])) getrandom.c:271 -1
     (nil))
(call_insn 727 726 728 99 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6db9304ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) getrandom.c:271 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 728 727 729 99 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) getrandom.c:272 -1
     (nil))
(code_label 729 728 730 100 58 "" [2 uses])
(note 730 729 731 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 731 730 732 100 (set (reg/f:DI 218 [ D.6359 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 randomBuffer+0 S8 A64])) getrandom.c:274 -1
     (nil))
(insn 732 731 733 100 (set (reg:DI 5 di)
        (reg/f:DI 218 [ D.6359 ])) getrandom.c:274 -1
     (nil))
(call_insn 733 732 734 100 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f6db931ae58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) getrandom.c:274 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 734 733 737 100 (set (reg:SI 219 [ D.6354 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -228 [0xffffffffffffff1c])) [0 rc+0 S4 A32])) getrandom.c:275 -1
     (nil))
(insn 737 734 741 100 (set (reg:SI 220 [ <retval> ])
        (reg:SI 219 [ D.6354 ])) -1
     (nil))
(insn 741 737 742 100 (set (reg/i:SI 0 ax)
        (reg:SI 220 [ <retval> ])) getrandom.c:276 -1
     (nil))
(insn 742 741 743 100 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.6362+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) getrandom.c:276 -1
     (nil))
(jump_insn 743 742 749 100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 746)
            (pc))) getrandom.c:276 -1
     (nil)
 -> 746)
(note 749 743 744 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(call_insn 744 749 745 103 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f6db8ec46c0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) getrandom.c:276 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 745 744 746)
(code_label 746 745 750 104 60 "" [1 uses])
(note 750 746 747 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 747 750 0 104 (use (reg/i:SI 0 ax)) getrandom.c:276 -1
     (nil))

;; Function printUsage (printUsage, funcdef_no=3, decl_uid=6070, cgraph_uid=3, symbol_order=4)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) getrandom.c:280 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f6db9307000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) getrandom.c:280 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f6db8f42900 *.LC28>)) getrandom.c:281 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:281 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) getrandom.c:282 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f6db9307000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) getrandom.c:282 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f6db8f42990 *.LC29>)) getrandom.c:283 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:283 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) getrandom.c:284 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f6db9307000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) getrandom.c:284 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f6db8f42a20 *.LC30>)) getrandom.c:285 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:285 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f6db8f42ab0 *.LC31>)) getrandom.c:286 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:286 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f6db8f42b40 *.LC32>)) getrandom.c:287 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:287 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f6db8f42bd0 *.LC33>)) getrandom.c:288 -1
     (nil))
(call_insn 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:288 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f6db8f42c60 *.LC34>)) getrandom.c:289 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:289 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 2 (set (reg:SI 5 di)
        (const_int 10 [0xa])) getrandom.c:290 -1
     (nil))
(call_insn 26 25 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f6db9307000 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) getrandom.c:290 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f6db8f42cf0 *.LC35>)) getrandom.c:291 -1
     (nil))
(call_insn 28 27 29 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:291 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f6db8f42d80 *.LC36>)) getrandom.c:292 -1
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:292 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7f6db8f42e10 *.LC37>)) getrandom.c:293 -1
     (nil))
(call_insn 32 31 33 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6db9307360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) getrandom.c:293 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 33 32 34 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) getrandom.c:294 -1
     (nil))
(call_insn 34 33 35 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f6db931a000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) getrandom.c:294 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 35 34 0)
