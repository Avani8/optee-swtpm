
;; Function IMA_Event_Init (IMA_Event_Init, funcdef_no=2, decl_uid=16916, cgraph_uid=2, symbol_order=2)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 7
Merging block 5 into block 4...
Merged blocks 4 and 5.
Merged 4 and 5 without moving.
Merging block 6 into block 4...
Merged blocks 4 and 6.
Merged 4 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])
        (reg:DI 5 di [ imaEvent ])) imalib.c:81 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])
            (const_int 0 [0]))) imalib.c:82 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 15)
            (pc))) imalib.c:82 612 {*jcc_1}
     (nil)
 -> 15)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 4 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])) imalib.c:83 -1
     (nil))
(insn 10 9 17 4 (set (mem/f/j:DI (plus:DI (reg/f:DI 87)
                (const_int 304 [0x130])) [0 imaEvent_2(D)->template_data+0 S8 A64])
        (const_int 0 [0])) imalib.c:83 -1
     (nil))
(insn 17 10 15 4 (const_int 0 [0]) imalib.c:85 -1
     (nil))
(code_label 15 17 16 7 1 "" [1 uses])
(note 16 15 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

;; Function IMA_Event_Free (IMA_Event_Free, funcdef_no=3, decl_uid=16918, cgraph_uid=3, symbol_order=3)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 7
Merging block 5 into block 4...
Merged blocks 4 and 5.
Merged 4 and 5 without moving.
Merging block 6 into block 4...
Merged blocks 4 and 6.
Merged 4 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])
        (reg:DI 5 di [ imaEvent ])) imalib.c:93 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])
            (const_int 0 [0]))) imalib.c:94 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 19)
            (pc))) imalib.c:94 612 {*jcc_1}
     (nil)
 -> 19)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 4 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])) imalib.c:95 -1
     (nil))
(insn 10 9 11 4 (set (reg/f:DI 87 [ D.17711 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 88)
                (const_int 304 [0x130])) [0 imaEvent_2(D)->template_data+0 S8 A64])) imalib.c:95 -1
     (nil))
(insn 11 10 12 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.17711 ])) imalib.c:95 -1
     (nil))
(call_insn 12 11 13 4 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f6ee78dbe58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) imalib.c:95 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 4 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])) imalib.c:96 -1
     (nil))
(insn 14 13 21 4 (set (mem/f/j:DI (plus:DI (reg/f:DI 89)
                (const_int 304 [0x130])) [0 imaEvent_2(D)->template_data+0 S8 A64])
        (const_int 0 [0])) imalib.c:96 -1
     (nil))
(insn 21 14 19 4 (const_int 0 [0]) imalib.c:98 -1
     (nil))
(code_label 19 21 20 7 5 "" [1 uses])
(note 20 19 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

;; Function IMA_Event_Trace (IMA_Event_Trace, funcdef_no=4, decl_uid=16921, cgraph_uid=4, symbol_order=4)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 7
Merging block 5 into block 4...
Merged blocks 4 and 5.
Merged 4 and 5 without moving.
Merging block 6 into block 4...
Merged blocks 4 and 6.
Merged 4 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])
        (reg:DI 5 di [ imaEvent ])) imalib.c:109 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 traceTemplate+0 S4 A32])
        (reg:SI 4 si [ traceTemplate ])) imalib.c:109 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])) imalib.c:110 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 87 [ D.17712 ])
        (mem/j:SI (reg/f:DI 95) [0 imaEvent_3(D)->pcrIndex+0 S4 A64])) imalib.c:110 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 4 si)
        (reg:SI 87 [ D.17712 ])) imalib.c:110 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f6ee6cc8bd0 *.LC0>)) imalib.c:110 -1
     (nil))
(insn 11 10 12 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:110 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:110 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 13 12 14 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])) imalib.c:112 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg/f:DI 88 [ D.17713 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:112 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 15 14 16 2 (set (reg:SI 1 dx)
        (const_int 20 [0x14])) imalib.c:111 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.17713 ])) imalib.c:111 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f6ee6cc8c60 *.LC1>)) imalib.c:111 -1
     (nil))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7f6ee6f97e58 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) imalib.c:111 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 19 18 20 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])) imalib.c:114 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 89 [ D.17712 ])
        (mem/j:SI (plus:DI (reg/f:DI 97)
                (const_int 24 [0x18])) [0 imaEvent_3(D)->name_len+0 S4 A64])) imalib.c:114 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (reg:SI 89 [ D.17712 ])) imalib.c:114 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f6ee6cc8cf0 *.LC2>)) imalib.c:114 -1
     (nil))
(insn 23 22 24 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:114 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:114 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 25 24 26 2 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])) imalib.c:115 -1
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg/f:DI 90 [ D.17714 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:115 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])
            (const_int 28 [0x1c]))
        (nil)))
(insn 27 26 28 2 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.17714 ])) imalib.c:115 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f6ee6cc8d80 *.LC3>)) imalib.c:115 -1
     (nil))
(insn 29 28 30 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:115 -1
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:115 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 31 30 32 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])) imalib.c:116 -1
     (nil))
(insn 32 31 33 2 (set (reg:SI 91 [ D.17712 ])
        (mem/j:SI (plus:DI (reg/f:DI 99)
                (const_int 284 [0x11c])) [0 imaEvent_3(D)->nameInt+0 S4 A32])) imalib.c:116 -1
     (nil))
(insn 33 32 34 2 (set (reg:SI 4 si)
        (reg:SI 91 [ D.17712 ])) imalib.c:116 -1
     (nil))
(insn 34 33 35 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f6ee6cc8e10 *.LC4>)) imalib.c:116 -1
     (nil))
(insn 35 34 36 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:116 -1
     (nil))
(call_insn 36 35 37 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:116 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 37 36 38 2 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])) imalib.c:117 -1
     (nil))
(insn 38 37 39 2 (set (reg:SI 92 [ D.17712 ])
        (mem/j:SI (plus:DI (reg/f:DI 100)
                (const_int 296 [0x128])) [0 imaEvent_3(D)->template_data_len+0 S4 A64])) imalib.c:117 -1
     (nil))
(insn 39 38 40 2 (set (reg:SI 4 si)
        (reg:SI 92 [ D.17712 ])) imalib.c:117 -1
     (nil))
(insn 40 39 41 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f6ee6cc8ea0 *.LC5>)) imalib.c:117 -1
     (nil))
(insn 41 40 42 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:117 -1
     (nil))
(call_insn 42 41 43 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:117 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 43 42 44 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 traceTemplate+0 S4 A32])
            (const_int 0 [0]))) imalib.c:120 -1
     (nil))
(jump_insn 44 43 45 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 58)
            (pc))) imalib.c:120 612 {*jcc_1}
     (nil)
 -> 58)
(note 45 44 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 4 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])) imalib.c:121 -1
     (nil))
(insn 47 46 48 4 (set (reg:SI 93 [ D.17712 ])
        (mem/j:SI (plus:DI (reg/f:DI 101)
                (const_int 296 [0x128])) [0 imaEvent_3(D)->template_data_len+0 S4 A64])) imalib.c:121 -1
     (nil))
(insn 48 47 49 4 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaEvent+0 S8 A64])) imalib.c:122 -1
     (nil))
(insn 49 48 50 4 (set (reg/f:DI 94 [ D.17715 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 102)
                (const_int 304 [0x130])) [0 imaEvent_3(D)->template_data+0 S8 A64])) imalib.c:122 -1
     (nil))
(insn 50 49 51 4 (set (reg:SI 1 dx)
        (reg:SI 93 [ D.17712 ])) imalib.c:121 -1
     (nil))
(insn 51 50 52 4 (set (reg:DI 4 si)
        (reg/f:DI 94 [ D.17715 ])) imalib.c:121 -1
     (nil))
(insn 52 51 53 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f6ee6cc8f30 *.LC6>)) imalib.c:121 -1
     (nil))
(call_insn 53 52 60 4 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7f6ee6f97e58 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) imalib.c:121 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 60 53 58 4 (const_int 0 [0]) imalib.c:124 -1
     (nil))
(code_label 58 60 59 7 9 "" [1 uses])
(note 59 58 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

;; Function IMA_TemplateData_Trace (IMA_TemplateData_Trace, funcdef_no=5, decl_uid=16924, cgraph_uid=5, symbol_order=5)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->6 redirected to 8
Edge 4->6 redirected to 8
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])
        (reg:DI 5 di [ imaTemplateData ])) imalib.c:135 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 nameInt+0 S4 A32])
        (reg:SI 4 si [ nameInt ])) imalib.c:135 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])) imalib.c:136 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 87 [ D.17723 ])
        (mem/j:SI (reg/f:DI 102) [0 imaTemplateData_3(D)->hashLength+0 S4 A32])) imalib.c:136 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 4 si)
        (reg:SI 87 [ D.17723 ])) imalib.c:136 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f6ee6ccf750 *.LC7>)) imalib.c:136 -1
     (nil))
(insn 11 10 12 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:136 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:136 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 13 12 14 2 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])) imalib.c:137 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg/f:DI 88 [ D.17724 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:137 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.17724 ])) imalib.c:137 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f6ee6ccf7e0 *.LC8>)) imalib.c:137 -1
     (nil))
(insn 17 16 18 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:137 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:137 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 19 18 20 2 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])) imalib.c:138 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 89 [ D.17723 ])
        (mem/j:SI (plus:DI (reg/f:DI 104)
                (const_int 76 [0x4c])) [0 imaTemplateData_3(D)->fileDataHashLength+0 S4 A32])) imalib.c:138 -1
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])) imalib.c:139 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg/f:DI 90 [ D.17725 ])
                (plus:DI (reg/f:DI 105)
                    (const_int 80 [0x50])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:139 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])
            (const_int 80 [0x50]))
        (nil)))
(insn 23 22 24 2 (set (reg:SI 1 dx)
        (reg:SI 89 [ D.17723 ])) imalib.c:138 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.17725 ])) imalib.c:138 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f6ee6ccf870 *.LC9>)) imalib.c:138 -1
     (nil))
(call_insn 26 25 27 2 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7f6ee6f97e58 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) imalib.c:138 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 27 26 28 2 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])) imalib.c:140 -1
     (nil))
(insn 28 27 29 2 (set (reg:SI 91 [ D.17723 ])
        (mem/j:SI (plus:DI (reg/f:DI 106)
                (const_int 112 [0x70])) [0 imaTemplateData_3(D)->fileNameLength+0 S4 A32])) imalib.c:140 -1
     (nil))
(insn 29 28 30 2 (set (reg:SI 4 si)
        (reg:SI 91 [ D.17723 ])) imalib.c:140 -1
     (nil))
(insn 30 29 31 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f6ee6ccf900 *.LC10>)) imalib.c:140 -1
     (nil))
(insn 31 30 32 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:140 -1
     (nil))
(call_insn 32 31 33 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:140 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 33 32 34 2 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])) imalib.c:141 -1
     (nil))
(insn 34 33 35 2 (parallel [
            (set (reg/f:DI 92 [ D.17726 ])
                (plus:DI (reg/f:DI 107)
                    (const_int 116 [0x74])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:141 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])
            (const_int 116 [0x74]))
        (nil)))
(insn 35 34 36 2 (set (reg:DI 4 si)
        (reg/f:DI 92 [ D.17726 ])) imalib.c:141 -1
     (nil))
(insn 36 35 37 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f6ee6ccf990 *.LC11>)) imalib.c:141 -1
     (nil))
(insn 37 36 38 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:141 -1
     (nil))
(call_insn 38 37 39 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:141 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 39 38 40 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 nameInt+0 S4 A32])
            (const_int 2 [0x2]))) imalib.c:142 -1
     (nil))
(jump_insn 40 39 41 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 81)
            (pc))) imalib.c:142 612 {*jcc_1}
     (nil)
 -> 81)
(note 41 40 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 4 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])) imalib.c:143 -1
     (nil))
(insn 43 42 44 4 (set (reg:SI 93 [ D.17723 ])
        (mem/j:SI (plus:DI (reg/f:DI 108)
                (const_int 4216 [0x1078])) [0 imaTemplateData_3(D)->sigLength+0 S4 A32])) imalib.c:143 -1
     (nil))
(insn 44 43 45 4 (set (reg:SI 4 si)
        (reg:SI 93 [ D.17723 ])) imalib.c:143 -1
     (nil))
(insn 45 44 46 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f6ee6ccfa20 *.LC12>)) imalib.c:143 -1
     (nil))
(insn 46 45 47 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:143 -1
     (nil))
(call_insn 47 46 48 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:143 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 48 47 49 4 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])) imalib.c:144 -1
     (nil))
(insn 49 48 50 4 (set (reg:SI 94 [ D.17723 ])
        (mem/j:SI (plus:DI (reg/f:DI 109)
                (const_int 4216 [0x1078])) [0 imaTemplateData_3(D)->sigLength+0 S4 A32])) imalib.c:144 -1
     (nil))
(insn 50 49 51 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.17723 ])
            (const_int 0 [0]))) imalib.c:144 -1
     (nil))
(jump_insn 51 50 52 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 81)
            (pc))) imalib.c:144 612 {*jcc_1}
     (nil)
 -> 81)
(note 52 51 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 5 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])) imalib.c:145 -1
     (nil))
(insn 54 53 55 5 (set (reg:SI 95 [ D.17723 ])
        (mem/j:SI (plus:DI (reg/f:DI 110)
                (const_int 4220 [0x107c])) [0 imaTemplateData_3(D)->sigHeaderLength+0 S4 A32])) imalib.c:145 -1
     (nil))
(insn 55 54 56 5 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])) imalib.c:146 -1
     (nil))
(insn 56 55 57 5 (parallel [
            (set (reg/f:DI 96 [ D.17727 ])
                (plus:DI (reg/f:DI 111)
                    (const_int 4224 [0x1080])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:146 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])
            (const_int 4224 [0x1080]))
        (nil)))
(insn 57 56 58 5 (set (reg:SI 1 dx)
        (reg:SI 95 [ D.17723 ])) imalib.c:145 -1
     (nil))
(insn 58 57 59 5 (set (reg:DI 4 si)
        (reg/f:DI 96 [ D.17727 ])) imalib.c:145 -1
     (nil))
(insn 59 58 60 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f6ee6ccfab0 *.LC13>)) imalib.c:145 -1
     (nil))
(call_insn 60 59 61 5 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7f6ee6f97e58 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) imalib.c:145 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 61 60 62 5 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])) imalib.c:147 -1
     (nil))
(insn 62 61 63 5 (set (reg:HI 97 [ D.17728 ])
        (mem/j:HI (plus:DI (reg/f:DI 112)
                (const_int 4234 [0x108a])) [0 imaTemplateData_3(D)->signatureSize+0 S2 A16])) imalib.c:147 -1
     (nil))
(insn 63 62 64 5 (set (reg:SI 98 [ D.17729 ])
        (zero_extend:SI (reg:HI 97 [ D.17728 ]))) imalib.c:147 -1
     (nil))
(insn 64 63 65 5 (set (reg:SI 4 si)
        (reg:SI 98 [ D.17729 ])) imalib.c:147 -1
     (nil))
(insn 65 64 66 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f6ee6ccfb40 *.LC14>)) imalib.c:147 -1
     (nil))
(insn 66 65 67 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:147 -1
     (nil))
(call_insn 67 66 68 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:147 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 68 67 69 5 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])) imalib.c:149 -1
     (nil))
(insn 69 68 70 5 (set (reg:HI 99 [ D.17728 ])
        (mem/j:HI (plus:DI (reg/f:DI 113)
                (const_int 4234 [0x108a])) [0 imaTemplateData_3(D)->signatureSize+0 S2 A16])) imalib.c:149 -1
     (nil))
(insn 70 69 71 5 (set (reg:SI 100 [ D.17723 ])
        (zero_extend:SI (reg:HI 99 [ D.17728 ]))) imalib.c:148 -1
     (nil))
(insn 71 70 72 5 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])) imalib.c:149 -1
     (nil))
(insn 72 71 73 5 (parallel [
            (set (reg/f:DI 101 [ D.17730 ])
                (plus:DI (reg/f:DI 114)
                    (const_int 4236 [0x108c])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:149 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 imaTemplateData+0 S8 A64])
            (const_int 4236 [0x108c]))
        (nil)))
(insn 73 72 74 5 (set (reg:SI 1 dx)
        (reg:SI 100 [ D.17723 ])) imalib.c:148 -1
     (nil))
(insn 74 73 75 5 (set (reg:DI 4 si)
        (reg/f:DI 101 [ D.17730 ])) imalib.c:148 -1
     (nil))
(insn 75 74 76 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f6ee6ccfbd0 *.LC15>)) imalib.c:148 -1
     (nil))
(call_insn 76 75 83 5 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7f6ee6f97e58 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) imalib.c:148 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 83 76 81 5 (const_int 0 [0]) imalib.c:152 -1
     (nil))
(code_label 81 83 82 8 13 "" [2 uses])
(note 82 81 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

;; Function IMA_Event_ReadFile (IMA_Event_ReadFile, funcdef_no=6, decl_uid=16929, cgraph_uid=6, symbol_order=6)

Partition 1: size 8 align 8
	readSize_34
Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 58 into block 57...
Merged blocks 57 and 58.
Merged 57 and 58 without moving.
Removing jump 407.
Merging block 59 into block 57...
Merged blocks 57 and 59.
Merged 57 and 59 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])
        (reg:DI 5 di [ imaEvent ])) imalib.c:166 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 endOfFile+0 S8 A64])
        (reg:DI 4 si [ endOfFile ])) imalib.c:166 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 inFile+0 S8 A64])
        (reg:DI 1 dx [ inFile ])) imalib.c:166 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 littleEndian+0 S4 A32])
        (reg:SI 2 cx [ littleEndian ])) imalib.c:166 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 0 [0])) imalib.c:167 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 endOfFile+0 S8 A64])) imalib.c:169 -1
     (nil))
(insn 11 10 12 2 (set (mem:SI (reg/f:DI 127) [0 *endOfFile_27(D)+0 S4 A32])
        (const_int 0 [0])) imalib.c:169 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:171 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 128)
                (const_int 304 [0x130])) [0 imaEvent_29(D)->template_data+0 S8 A64])
        (const_int 0 [0])) imalib.c:171 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:174 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) imalib.c:174 -1
     (nil)
 -> 48)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg/f:DI 87 [ D.17740 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:175 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 inFile+0 S8 A64])) imalib.c:175 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 2 cx)
        (reg:DI 129)) imalib.c:175 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) imalib.c:175 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 4 si)
        (const_int 4 [0x4])) imalib.c:175 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.17740 ])) imalib.c:175 -1
     (nil))
(call_insn 23 22 24 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fread") [flags 0x41]  <function_decl 0x7f6ee79ca510 fread>) [0 fread S1 A8])
            (const_int 0 [0]))) imalib.c:175 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 24 23 25 4 (set (reg:DI 130)
        (reg:DI 0 ax)) imalib.c:175 -1
     (nil))
(insn 25 24 26 4 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])
        (reg:DI 130)) imalib.c:175 -1
     (nil))
(insn 26 25 27 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])
            (const_int 1 [0x1]))) imalib.c:177 -1
     (nil))
(jump_insn 27 26 28 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) imalib.c:177 -1
     (nil)
 -> 48)
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 inFile+0 S8 A64])) imalib.c:178 -1
     (nil))
(insn 30 29 31 5 (set (reg:DI 5 di)
        (reg:DI 131)) imalib.c:178 -1
     (nil))
(call_insn 31 30 32 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x7f6ee79ca288 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) imalib.c:178 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 32 31 33 5 (set (reg:SI 88 [ D.17741 ])
        (reg:SI 0 ax)) imalib.c:178 -1
     (nil))
(insn 33 32 34 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.17741 ])
            (const_int 0 [0]))) imalib.c:178 -1
     (nil))
(jump_insn 34 33 35 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) imalib.c:178 -1
     (nil)
 -> 40)
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 endOfFile+0 S8 A64])) imalib.c:179 -1
     (nil))
(insn 37 36 38 6 (set (mem:SI (reg/f:DI 132) [0 *endOfFile_27(D)+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:179 -1
     (nil))
(jump_insn 38 37 39 6 (set (pc)
        (label_ref 48)) -1
     (nil)
 -> 48)
(barrier 39 38 40)
(code_label 40 39 41 7 19 "" [1 uses])
(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 7 (set (reg:DI 133)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])) imalib.c:182 -1
     (nil))
(insn 43 42 44 7 (set (reg:DI 4 si)
        (reg:DI 133)) imalib.c:182 -1
     (nil))
(insn 44 43 45 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f6ee6cd96c0 *.LC16>)) imalib.c:182 -1
     (nil))
(insn 45 44 46 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:182 -1
     (nil))
(call_insn 46 45 47 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:182 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 47 46 48 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:184 -1
     (nil))
(code_label 48 47 49 8 18 "" [3 uses])
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:188 -1
     (nil))
(jump_insn 51 50 52 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) imalib.c:188 -1
     (nil)
 -> 61)
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 9 (set (reg/f:DI 89 [ D.17740 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:189 -1
     (nil))
(insn 54 53 55 9 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 littleEndian+0 S4 A32])) imalib.c:189 -1
     (nil))
(insn 55 54 56 9 (set (reg:SI 4 si)
        (reg:SI 134)) imalib.c:189 -1
     (nil))
(insn 56 55 57 9 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.17740 ])) imalib.c:189 -1
     (nil))
(call_insn 57 56 58 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("IMA_Uint32_Convert") [flags 0x3]  <function_decl 0x7f6ee6ff4bd0 IMA_Uint32_Convert>) [0 IMA_Uint32_Convert S1 A8])
            (const_int 0 [0]))) imalib.c:189 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 58 57 59 9 (set (reg:SI 90 [ D.17742 ])
        (reg:SI 0 ax)) imalib.c:189 -1
     (nil))
(insn 59 58 60 9 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:189 -1
     (nil))
(insn 60 59 61 9 (set (mem/j:SI (reg/f:DI 135) [0 imaEvent_29(D)->pcrIndex+0 S4 A64])
        (reg:SI 90 [ D.17742 ])) imalib.c:189 -1
     (nil))
(code_label 61 60 62 10 20 "" [1 uses])
(note 62 61 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:192 -1
     (nil))
(jump_insn 64 63 65 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) imalib.c:192 -1
     (nil)
 -> 79)
(note 65 64 66 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 11 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:193 -1
     (nil))
(insn 67 66 68 11 (set (reg:SI 91 [ D.17742 ])
        (mem/j:SI (reg/f:DI 136) [0 imaEvent_29(D)->pcrIndex+0 S4 A64])) imalib.c:193 -1
     (nil))
(insn 68 67 69 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.17742 ])
            (const_int 10 [0xa]))) imalib.c:193 -1
     (nil))
(jump_insn 69 68 70 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) imalib.c:193 -1
     (nil)
 -> 79)
(note 70 69 71 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 12 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:194 -1
     (nil))
(insn 72 71 73 12 (set (reg:SI 92 [ D.17742 ])
        (mem/j:SI (reg/f:DI 137) [0 imaEvent_29(D)->pcrIndex+0 S4 A64])) imalib.c:194 -1
     (nil))
(insn 73 72 74 12 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) imalib.c:194 -1
     (nil))
(insn 74 73 75 12 (set (reg:SI 4 si)
        (reg:SI 92 [ D.17742 ])) imalib.c:194 -1
     (nil))
(insn 75 74 76 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f6ee6cd9750 *.LC17>)) imalib.c:194 -1
     (nil))
(insn 76 75 77 12 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:194 -1
     (nil))
(call_insn 77 76 78 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:194 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 78 77 79 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:196 -1
     (nil))
(code_label 79 78 80 13 21 "" [2 uses])
(note 80 79 81 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:200 -1
     (nil))
(jump_insn 82 81 83 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) imalib.c:200 -1
     (nil)
 -> 116)
(note 83 82 84 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 14 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:201 -1
     (nil))
(insn 85 84 86 14 (parallel [
            (set (reg/f:DI 93 [ D.17743 ])
                (plus:DI (reg/f:DI 138)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:201 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 86 85 87 14 (set (reg:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 inFile+0 S8 A64])) imalib.c:201 -1
     (nil))
(insn 87 86 88 14 (set (reg:DI 2 cx)
        (reg:DI 139)) imalib.c:201 -1
     (nil))
(insn 88 87 89 14 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) imalib.c:201 -1
     (nil))
(insn 89 88 90 14 (set (reg:DI 4 si)
        (const_int 20 [0x14])) imalib.c:201 -1
     (nil))
(insn 90 89 91 14 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.17743 ])) imalib.c:201 -1
     (nil))
(call_insn 91 90 92 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fread") [flags 0x41]  <function_decl 0x7f6ee79ca510 fread>) [0 fread S1 A8])
            (const_int 0 [0]))) imalib.c:201 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 92 91 93 14 (set (reg:DI 140)
        (reg:DI 0 ax)) imalib.c:201 -1
     (nil))
(insn 93 92 94 14 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])
        (reg:DI 140)) imalib.c:201 -1
     (nil))
(insn 94 93 95 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])
            (const_int 1 [0x1]))) imalib.c:203 -1
     (nil))
(jump_insn 95 94 96 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) imalib.c:203 -1
     (nil)
 -> 116)
(note 96 95 97 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 15 (set (reg:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 inFile+0 S8 A64])) imalib.c:204 -1
     (nil))
(insn 98 97 99 15 (set (reg:DI 5 di)
        (reg:DI 141)) imalib.c:204 -1
     (nil))
(call_insn 99 98 100 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x7f6ee79ca288 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) imalib.c:204 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 100 99 101 15 (set (reg:SI 94 [ D.17741 ])
        (reg:SI 0 ax)) imalib.c:204 -1
     (nil))
(insn 101 100 102 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.17741 ])
            (const_int 0 [0]))) imalib.c:204 -1
     (nil))
(jump_insn 102 101 103 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) imalib.c:204 -1
     (nil)
 -> 108)
(note 103 102 104 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 16 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 endOfFile+0 S8 A64])) imalib.c:205 -1
     (nil))
(insn 105 104 106 16 (set (mem:SI (reg/f:DI 142) [0 *endOfFile_27(D)+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:205 -1
     (nil))
(jump_insn 106 105 107 16 (set (pc)
        (label_ref 116)) -1
     (nil)
 -> 116)
(barrier 107 106 108)
(code_label 108 107 109 17 23 "" [1 uses])
(note 109 108 110 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 17 (set (reg:DI 143)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])) imalib.c:208 -1
     (nil))
(insn 111 110 112 17 (set (reg:DI 4 si)
        (reg:DI 143)) imalib.c:208 -1
     (nil))
(insn 112 111 113 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f6ee6cd97e0 *.LC18>)) imalib.c:208 -1
     (nil))
(insn 113 112 114 17 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:208 -1
     (nil))
(call_insn 114 113 115 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:208 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 115 114 116 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:210 -1
     (nil))
(code_label 116 115 117 18 22 "" [3 uses])
(note 117 116 118 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:215 -1
     (nil))
(jump_insn 119 118 120 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) imalib.c:215 -1
     (nil)
 -> 153)
(note 120 119 121 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 19 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:216 -1
     (nil))
(insn 122 121 123 19 (parallel [
            (set (reg/f:DI 95 [ D.17740 ])
                (plus:DI (reg/f:DI 144)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:216 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))
(insn 123 122 124 19 (set (reg:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 inFile+0 S8 A64])) imalib.c:216 -1
     (nil))
(insn 124 123 125 19 (set (reg:DI 2 cx)
        (reg:DI 145)) imalib.c:216 -1
     (nil))
(insn 125 124 126 19 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) imalib.c:216 -1
     (nil))
(insn 126 125 127 19 (set (reg:DI 4 si)
        (const_int 4 [0x4])) imalib.c:216 -1
     (nil))
(insn 127 126 128 19 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.17740 ])) imalib.c:216 -1
     (nil))
(call_insn 128 127 129 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fread") [flags 0x41]  <function_decl 0x7f6ee79ca510 fread>) [0 fread S1 A8])
            (const_int 0 [0]))) imalib.c:216 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 129 128 130 19 (set (reg:DI 146)
        (reg:DI 0 ax)) imalib.c:216 -1
     (nil))
(insn 130 129 131 19 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])
        (reg:DI 146)) imalib.c:216 -1
     (nil))
(insn 131 130 132 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])
            (const_int 1 [0x1]))) imalib.c:218 -1
     (nil))
(jump_insn 132 131 133 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) imalib.c:218 -1
     (nil)
 -> 153)
(note 133 132 134 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 20 (set (reg:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 inFile+0 S8 A64])) imalib.c:219 -1
     (nil))
(insn 135 134 136 20 (set (reg:DI 5 di)
        (reg:DI 147)) imalib.c:219 -1
     (nil))
(call_insn 136 135 137 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x7f6ee79ca288 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) imalib.c:219 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 137 136 138 20 (set (reg:SI 96 [ D.17741 ])
        (reg:SI 0 ax)) imalib.c:219 -1
     (nil))
(insn 138 137 139 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.17741 ])
            (const_int 0 [0]))) imalib.c:219 -1
     (nil))
(jump_insn 139 138 140 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) imalib.c:219 -1
     (nil)
 -> 145)
(note 140 139 141 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 21 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 endOfFile+0 S8 A64])) imalib.c:220 -1
     (nil))
(insn 142 141 143 21 (set (mem:SI (reg/f:DI 148) [0 *endOfFile_27(D)+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:220 -1
     (nil))
(jump_insn 143 142 144 21 (set (pc)
        (label_ref 153)) -1
     (nil)
 -> 153)
(barrier 144 143 145)
(code_label 145 144 146 22 25 "" [1 uses])
(note 146 145 147 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 22 (set (reg:DI 149)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])) imalib.c:223 -1
     (nil))
(insn 148 147 149 22 (set (reg:DI 4 si)
        (reg:DI 149)) imalib.c:223 -1
     (nil))
(insn 149 148 150 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f6ee6cd9870 *.LC19>)) imalib.c:223 -1
     (nil))
(insn 150 149 151 22 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:223 -1
     (nil))
(call_insn 151 150 152 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:223 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 152 151 153 22 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:225 -1
     (nil))
(code_label 153 152 154 23 24 "" [3 uses])
(note 154 153 155 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:229 -1
     (nil))
(jump_insn 156 155 157 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 167)
            (pc))) imalib.c:229 -1
     (nil)
 -> 167)
(note 157 156 158 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 24 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:230 -1
     (nil))
(insn 159 158 160 24 (parallel [
            (set (reg/f:DI 97 [ D.17740 ])
                (plus:DI (reg/f:DI 150)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:230 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))
(insn 160 159 161 24 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 littleEndian+0 S4 A32])) imalib.c:230 -1
     (nil))
(insn 161 160 162 24 (set (reg:SI 4 si)
        (reg:SI 151)) imalib.c:230 -1
     (nil))
(insn 162 161 163 24 (set (reg:DI 5 di)
        (reg/f:DI 97 [ D.17740 ])) imalib.c:230 -1
     (nil))
(call_insn 163 162 164 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("IMA_Uint32_Convert") [flags 0x3]  <function_decl 0x7f6ee6ff4bd0 IMA_Uint32_Convert>) [0 IMA_Uint32_Convert S1 A8])
            (const_int 0 [0]))) imalib.c:230 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 164 163 165 24 (set (reg:SI 98 [ D.17742 ])
        (reg:SI 0 ax)) imalib.c:230 -1
     (nil))
(insn 165 164 166 24 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:230 -1
     (nil))
(insn 166 165 167 24 (set (mem/j:SI (plus:DI (reg/f:DI 152)
                (const_int 24 [0x18])) [0 imaEvent_29(D)->name_len+0 S4 A64])
        (reg:SI 98 [ D.17742 ])) imalib.c:230 -1
     (nil))
(code_label 167 166 168 25 26 "" [1 uses])
(note 168 167 169 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:233 -1
     (nil))
(jump_insn 170 169 171 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) imalib.c:233 -1
     (nil)
 -> 184)
(note 171 170 172 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 26 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:234 -1
     (nil))
(insn 173 172 174 26 (set (reg:SI 99 [ D.17742 ])
        (mem/j:SI (plus:DI (reg/f:DI 153)
                (const_int 24 [0x18])) [0 imaEvent_29(D)->name_len+0 S4 A64])) imalib.c:234 -1
     (nil))
(insn 174 173 175 26 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 99 [ D.17742 ])
            (const_int 255 [0xff]))) imalib.c:234 -1
     (nil))
(jump_insn 175 174 176 26 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) imalib.c:234 -1
     (nil)
 -> 184)
(note 176 175 177 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 27 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:235 -1
     (nil))
(insn 178 177 179 27 (set (reg:SI 100 [ D.17742 ])
        (mem/j:SI (plus:DI (reg/f:DI 154)
                (const_int 24 [0x18])) [0 imaEvent_29(D)->name_len+0 S4 A64])) imalib.c:235 -1
     (nil))
(insn 179 178 180 27 (set (reg:SI 4 si)
        (reg:SI 100 [ D.17742 ])) imalib.c:235 -1
     (nil))
(insn 180 179 181 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f6ee6cd9900 *.LC20>)) imalib.c:235 -1
     (nil))
(insn 181 180 182 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:235 -1
     (nil))
(call_insn 182 181 183 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:235 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 183 182 184 27 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:237 -1
     (nil))
(code_label 184 183 185 28 27 "" [2 uses])
(note 185 184 186 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:241 -1
     (nil))
(jump_insn 187 186 188 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 230)
            (pc))) imalib.c:241 -1
     (nil)
 -> 230)
(note 188 187 189 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 29 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:243 -1
     (nil))
(insn 190 189 191 29 (parallel [
            (set (reg/f:DI 101 [ D.17744 ])
                (plus:DI (reg/f:DI 155)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:243 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])
            (const_int 28 [0x1c]))
        (nil)))
(insn 191 190 192 29 (set (reg:DI 1 dx)
        (const_int 256 [0x100])) imalib.c:243 -1
     (nil))
(insn 192 191 193 29 (set (reg:SI 4 si)
        (const_int 0 [0])) imalib.c:243 -1
     (nil))
(insn 193 192 194 29 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.17744 ])) imalib.c:243 -1
     (nil))
(call_insn 194 193 195 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f6ee78bc438 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) imalib.c:243 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 195 194 196 29 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:245 -1
     (nil))
(insn 196 195 197 29 (set (reg:SI 102 [ D.17742 ])
        (mem/j:SI (plus:DI (reg/f:DI 156)
                (const_int 24 [0x18])) [0 imaEvent_29(D)->name_len+0 S4 A64])) imalib.c:245 -1
     (nil))
(insn 197 196 198 29 (set (reg:DI 103 [ D.17745 ])
        (zero_extend:DI (reg:SI 102 [ D.17742 ]))) imalib.c:244 -1
     (nil))
(insn 198 197 199 29 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:244 -1
     (nil))
(insn 199 198 200 29 (parallel [
            (set (reg/f:DI 104 [ D.17744 ])
                (plus:DI (reg/f:DI 157)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:244 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])
            (const_int 28 [0x1c]))
        (nil)))
(insn 200 199 201 29 (set (reg:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 inFile+0 S8 A64])) imalib.c:244 -1
     (nil))
(insn 201 200 202 29 (set (reg:DI 2 cx)
        (reg:DI 158)) imalib.c:244 -1
     (nil))
(insn 202 201 203 29 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) imalib.c:244 -1
     (nil))
(insn 203 202 204 29 (set (reg:DI 4 si)
        (reg:DI 103 [ D.17745 ])) imalib.c:244 -1
     (nil))
(insn 204 203 205 29 (set (reg:DI 5 di)
        (reg/f:DI 104 [ D.17744 ])) imalib.c:244 -1
     (nil))
(call_insn 205 204 206 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fread") [flags 0x41]  <function_decl 0x7f6ee79ca510 fread>) [0 fread S1 A8])
            (const_int 0 [0]))) imalib.c:244 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 206 205 207 29 (set (reg:DI 159)
        (reg:DI 0 ax)) imalib.c:244 -1
     (nil))
(insn 207 206 208 29 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])
        (reg:DI 159)) imalib.c:244 -1
     (nil))
(insn 208 207 209 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])
            (const_int 1 [0x1]))) imalib.c:246 -1
     (nil))
(jump_insn 209 208 210 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 230)
            (pc))) imalib.c:246 -1
     (nil)
 -> 230)
(note 210 209 211 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 30 (set (reg:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 inFile+0 S8 A64])) imalib.c:247 -1
     (nil))
(insn 212 211 213 30 (set (reg:DI 5 di)
        (reg:DI 160)) imalib.c:247 -1
     (nil))
(call_insn 213 212 214 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x7f6ee79ca288 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) imalib.c:247 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 214 213 215 30 (set (reg:SI 105 [ D.17741 ])
        (reg:SI 0 ax)) imalib.c:247 -1
     (nil))
(insn 215 214 216 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 105 [ D.17741 ])
            (const_int 0 [0]))) imalib.c:247 -1
     (nil))
(jump_insn 216 215 217 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 222)
            (pc))) imalib.c:247 -1
     (nil)
 -> 222)
(note 217 216 218 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 31 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 endOfFile+0 S8 A64])) imalib.c:248 -1
     (nil))
(insn 219 218 220 31 (set (mem:SI (reg/f:DI 161) [0 *endOfFile_27(D)+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:248 -1
     (nil))
(jump_insn 220 219 221 31 (set (pc)
        (label_ref 230)) -1
     (nil)
 -> 230)
(barrier 221 220 222)
(code_label 222 221 223 32 29 "" [1 uses])
(note 223 222 224 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 32 (set (reg:DI 162)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])) imalib.c:251 -1
     (nil))
(insn 225 224 226 32 (set (reg:DI 4 si)
        (reg:DI 162)) imalib.c:251 -1
     (nil))
(insn 226 225 227 32 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f6ee6cd9990 *.LC21>)) imalib.c:251 -1
     (nil))
(insn 227 226 228 32 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:251 -1
     (nil))
(call_insn 228 227 229 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:251 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 229 228 230 32 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:253 -1
     (nil))
(code_label 230 229 231 33 28 "" [3 uses])
(note 231 230 232 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:258 -1
     (nil))
(jump_insn 233 232 234 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 267)
            (pc))) imalib.c:258 -1
     (nil)
 -> 267)
(note 234 233 235 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 34 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:259 -1
     (nil))
(insn 236 235 237 34 (parallel [
            (set (reg/f:DI 106 [ D.17744 ])
                (plus:DI (reg/f:DI 163)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:259 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])
            (const_int 28 [0x1c]))
        (nil)))
(insn 237 236 238 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f6ee6cd9a20 *.LC22>)) imalib.c:259 -1
     (nil))
(insn 238 237 239 34 (set (reg:DI 5 di)
        (reg/f:DI 106 [ D.17744 ])) imalib.c:259 -1
     (nil))
(call_insn/i 239 238 240 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6ee78bf0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) imalib.c:259 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 240 239 241 34 (set (reg:SI 107 [ D.17741 ])
        (reg:SI 0 ax)) imalib.c:259 -1
     (nil))
(insn 241 240 242 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ D.17741 ])
            (const_int 0 [0]))) imalib.c:259 -1
     (nil))
(jump_insn 242 241 243 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 248)
            (pc))) imalib.c:259 -1
     (nil)
 -> 248)
(note 243 242 244 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 35 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:260 -1
     (nil))
(insn 245 244 246 35 (set (mem/j:SI (plus:DI (reg/f:DI 164)
                (const_int 284 [0x11c])) [0 imaEvent_29(D)->nameInt+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:260 -1
     (nil))
(jump_insn 246 245 247 35 (set (pc)
        (label_ref 267)) -1
     (nil)
 -> 267)
(barrier 247 246 248)
(code_label 248 247 249 36 31 "" [1 uses])
(note 249 248 250 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 36 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:262 -1
     (nil))
(insn 251 250 252 36 (parallel [
            (set (reg/f:DI 108 [ D.17744 ])
                (plus:DI (reg/f:DI 165)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:262 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])
            (const_int 28 [0x1c]))
        (nil)))
(insn 252 251 253 36 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f6ee6cd9ab0 *.LC23>)) imalib.c:262 -1
     (nil))
(insn 253 252 254 36 (set (reg:DI 5 di)
        (reg/f:DI 108 [ D.17744 ])) imalib.c:262 -1
     (nil))
(call_insn/i 254 253 255 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6ee78bf0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) imalib.c:262 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 255 254 256 36 (set (reg:SI 109 [ D.17741 ])
        (reg:SI 0 ax)) imalib.c:262 -1
     (nil))
(insn 256 255 257 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.17741 ])
            (const_int 0 [0]))) imalib.c:262 -1
     (nil))
(jump_insn 257 256 258 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) imalib.c:262 -1
     (nil)
 -> 263)
(note 258 257 259 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 37 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:263 -1
     (nil))
(insn 260 259 261 37 (set (mem/j:SI (plus:DI (reg/f:DI 166)
                (const_int 284 [0x11c])) [0 imaEvent_29(D)->nameInt+0 S4 A32])
        (const_int 2 [0x2])) imalib.c:263 -1
     (nil))
(jump_insn 261 260 262 37 (set (pc)
        (label_ref 267)) -1
     (nil)
 -> 267)
(barrier 262 261 263)
(code_label 263 262 264 38 32 "" [1 uses])
(note 264 263 265 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 38 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:267 -1
     (nil))
(insn 266 265 267 38 (set (mem/j:SI (plus:DI (reg/f:DI 167)
                (const_int 284 [0x11c])) [0 imaEvent_29(D)->nameInt+0 S4 A32])
        (const_int 0 [0])) imalib.c:267 -1
     (nil))
(code_label 267 266 268 39 30 "" [3 uses])
(note 268 267 269 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 269 268 270 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:271 -1
     (nil))
(jump_insn 270 269 271 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 304)
            (pc))) imalib.c:271 -1
     (nil)
 -> 304)
(note 271 270 272 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 40 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:272 -1
     (nil))
(insn 273 272 274 40 (parallel [
            (set (reg/f:DI 110 [ D.17740 ])
                (plus:DI (reg/f:DI 168)
                    (const_int 296 [0x128])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:272 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])
            (const_int 296 [0x128]))
        (nil)))
(insn 274 273 275 40 (set (reg:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 inFile+0 S8 A64])) imalib.c:272 -1
     (nil))
(insn 275 274 276 40 (set (reg:DI 2 cx)
        (reg:DI 169)) imalib.c:272 -1
     (nil))
(insn 276 275 277 40 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) imalib.c:272 -1
     (nil))
(insn 277 276 278 40 (set (reg:DI 4 si)
        (const_int 4 [0x4])) imalib.c:272 -1
     (nil))
(insn 278 277 279 40 (set (reg:DI 5 di)
        (reg/f:DI 110 [ D.17740 ])) imalib.c:272 -1
     (nil))
(call_insn 279 278 280 40 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fread") [flags 0x41]  <function_decl 0x7f6ee79ca510 fread>) [0 fread S1 A8])
            (const_int 0 [0]))) imalib.c:272 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 280 279 281 40 (set (reg:DI 170)
        (reg:DI 0 ax)) imalib.c:272 -1
     (nil))
(insn 281 280 282 40 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])
        (reg:DI 170)) imalib.c:272 -1
     (nil))
(insn 282 281 283 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])
            (const_int 1 [0x1]))) imalib.c:274 -1
     (nil))
(jump_insn 283 282 284 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 304)
            (pc))) imalib.c:274 -1
     (nil)
 -> 304)
(note 284 283 285 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 41 (set (reg:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 inFile+0 S8 A64])) imalib.c:275 -1
     (nil))
(insn 286 285 287 41 (set (reg:DI 5 di)
        (reg:DI 171)) imalib.c:275 -1
     (nil))
(call_insn 287 286 288 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x7f6ee79ca288 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) imalib.c:275 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 288 287 289 41 (set (reg:SI 111 [ D.17741 ])
        (reg:SI 0 ax)) imalib.c:275 -1
     (nil))
(insn 289 288 290 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.17741 ])
            (const_int 0 [0]))) imalib.c:275 -1
     (nil))
(jump_insn 290 289 291 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 296)
            (pc))) imalib.c:275 -1
     (nil)
 -> 296)
(note 291 290 292 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 292 291 293 42 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 endOfFile+0 S8 A64])) imalib.c:276 -1
     (nil))
(insn 293 292 294 42 (set (mem:SI (reg/f:DI 172) [0 *endOfFile_27(D)+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:276 -1
     (nil))
(jump_insn 294 293 295 42 (set (pc)
        (label_ref 304)) -1
     (nil)
 -> 304)
(barrier 295 294 296)
(code_label 296 295 297 43 34 "" [1 uses])
(note 297 296 298 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 298 297 299 43 (set (reg:DI 173)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])) imalib.c:279 -1
     (nil))
(insn 299 298 300 43 (set (reg:DI 4 si)
        (reg:DI 173)) imalib.c:279 -1
     (nil))
(insn 300 299 301 43 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f6ee6cd9b40 *.LC24>)) imalib.c:279 -1
     (nil))
(insn 301 300 302 43 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:279 -1
     (nil))
(call_insn 302 301 303 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:279 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 303 302 304 43 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:281 -1
     (nil))
(code_label 304 303 305 44 33 "" [3 uses])
(note 305 304 306 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 306 305 307 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:285 -1
     (nil))
(jump_insn 307 306 308 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 318)
            (pc))) imalib.c:285 -1
     (nil)
 -> 318)
(note 308 307 309 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 45 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:286 -1
     (nil))
(insn 310 309 311 45 (parallel [
            (set (reg/f:DI 112 [ D.17740 ])
                (plus:DI (reg/f:DI 174)
                    (const_int 296 [0x128])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:286 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])
            (const_int 296 [0x128]))
        (nil)))
(insn 311 310 312 45 (set (reg:SI 175)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 littleEndian+0 S4 A32])) imalib.c:286 -1
     (nil))
(insn 312 311 313 45 (set (reg:SI 4 si)
        (reg:SI 175)) imalib.c:286 -1
     (nil))
(insn 313 312 314 45 (set (reg:DI 5 di)
        (reg/f:DI 112 [ D.17740 ])) imalib.c:286 -1
     (nil))
(call_insn 314 313 315 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("IMA_Uint32_Convert") [flags 0x3]  <function_decl 0x7f6ee6ff4bd0 IMA_Uint32_Convert>) [0 IMA_Uint32_Convert S1 A8])
            (const_int 0 [0]))) imalib.c:286 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 315 314 316 45 (set (reg:SI 113 [ D.17742 ])
        (reg:SI 0 ax)) imalib.c:286 -1
     (nil))
(insn 316 315 317 45 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:286 -1
     (nil))
(insn 317 316 318 45 (set (mem/j:SI (plus:DI (reg/f:DI 176)
                (const_int 296 [0x128])) [0 imaEvent_29(D)->template_data_len+0 S4 A64])
        (reg:SI 113 [ D.17742 ])) imalib.c:286 -1
     (nil))
(code_label 318 317 319 46 35 "" [1 uses])
(note 319 318 320 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 320 319 321 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:290 -1
     (nil))
(jump_insn 321 320 322 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 335)
            (pc))) imalib.c:290 -1
     (nil)
 -> 335)
(note 322 321 323 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 323 322 324 47 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:291 -1
     (nil))
(insn 324 323 325 47 (set (reg:SI 114 [ D.17742 ])
        (mem/j:SI (plus:DI (reg/f:DI 177)
                (const_int 296 [0x128])) [0 imaEvent_29(D)->template_data_len+0 S4 A64])) imalib.c:291 -1
     (nil))
(insn 325 324 326 47 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 114 [ D.17742 ])
            (const_int 4494 [0x118e]))) imalib.c:291 -1
     (nil))
(jump_insn 326 325 327 47 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 335)
            (pc))) imalib.c:291 -1
     (nil)
 -> 335)
(note 327 326 328 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 328 327 329 48 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:292 -1
     (nil))
(insn 329 328 330 48 (set (reg:SI 115 [ D.17742 ])
        (mem/j:SI (plus:DI (reg/f:DI 178)
                (const_int 296 [0x128])) [0 imaEvent_29(D)->template_data_len+0 S4 A64])) imalib.c:292 -1
     (nil))
(insn 330 329 331 48 (set (reg:SI 4 si)
        (reg:SI 115 [ D.17742 ])) imalib.c:292 -1
     (nil))
(insn 331 330 332 48 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f6ee6cd9bd0 *.LC25>)) imalib.c:292 -1
     (nil))
(insn 332 331 333 48 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:292 -1
     (nil))
(call_insn 333 332 334 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:292 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 334 333 335 48 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:294 -1
     (nil))
(code_label 335 334 336 49 36 "" [2 uses])
(note 336 335 337 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 337 336 338 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:297 -1
     (nil))
(jump_insn 338 337 339 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 361)
            (pc))) imalib.c:297 -1
     (nil)
 -> 361)
(note 339 338 340 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 340 339 341 50 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:298 -1
     (nil))
(insn 341 340 342 50 (set (reg:SI 116 [ D.17742 ])
        (mem/j:SI (plus:DI (reg/f:DI 179)
                (const_int 296 [0x128])) [0 imaEvent_29(D)->template_data_len+0 S4 A64])) imalib.c:298 -1
     (nil))
(insn 342 341 343 50 (set (reg:DI 117 [ D.17745 ])
        (zero_extend:DI (reg:SI 116 [ D.17742 ]))) imalib.c:298 -1
     (nil))
(insn 343 342 344 50 (set (reg:DI 5 di)
        (reg:DI 117 [ D.17745 ])) imalib.c:298 -1
     (nil))
(call_insn 344 343 345 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f6ee78e5360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) imalib.c:298 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 345 344 346 50 (set (reg/f:DI 180)
        (reg:DI 0 ax)) imalib.c:298 -1
     (expr_list:REG_NOALIAS (reg/f:DI 180)
        (nil)))
(insn 346 345 347 50 (set (reg/f:DI 118 [ D.17746 ])
        (reg/f:DI 180)) imalib.c:298 -1
     (nil))
(insn 347 346 348 50 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:298 -1
     (nil))
(insn 348 347 349 50 (set (mem/f/j:DI (plus:DI (reg/f:DI 181)
                (const_int 304 [0x130])) [0 imaEvent_29(D)->template_data+0 S8 A64])
        (reg/f:DI 118 [ D.17746 ])) imalib.c:298 -1
     (nil))
(insn 349 348 350 50 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:299 -1
     (nil))
(insn 350 349 351 50 (set (reg/f:DI 119 [ D.17747 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 182)
                (const_int 304 [0x130])) [0 imaEvent_29(D)->template_data+0 S8 A64])) imalib.c:299 -1
     (nil))
(insn 351 350 352 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 119 [ D.17747 ])
            (const_int 0 [0]))) imalib.c:299 -1
     (nil))
(jump_insn 352 351 353 50 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 361)
            (pc))) imalib.c:299 -1
     (nil)
 -> 361)
(note 353 352 354 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 354 353 355 51 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:300 -1
     (nil))
(insn 355 354 356 51 (set (reg:SI 120 [ D.17742 ])
        (mem/j:SI (plus:DI (reg/f:DI 183)
                (const_int 296 [0x128])) [0 imaEvent_29(D)->template_data_len+0 S4 A64])) imalib.c:300 -1
     (nil))
(insn 356 355 357 51 (set (reg:SI 4 si)
        (reg:SI 120 [ D.17742 ])) imalib.c:300 -1
     (nil))
(insn 357 356 358 51 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f6ee6cd9c60 *.LC26>)) imalib.c:300 -1
     (nil))
(insn 358 357 359 51 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:300 -1
     (nil))
(call_insn 359 358 360 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:300 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 360 359 361 51 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:303 -1
     (nil))
(code_label 361 360 362 52 37 "" [2 uses])
(note 362 361 363 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 363 362 364 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:306 -1
     (nil))
(jump_insn 364 363 365 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 401)
            (pc))) imalib.c:306 -1
     (nil)
 -> 401)
(note 365 364 366 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 53 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:308 -1
     (nil))
(insn 367 366 368 53 (set (reg:SI 121 [ D.17742 ])
        (mem/j:SI (plus:DI (reg/f:DI 184)
                (const_int 296 [0x128])) [0 imaEvent_29(D)->template_data_len+0 S4 A64])) imalib.c:308 -1
     (nil))
(insn 368 367 369 53 (set (reg:DI 122 [ D.17745 ])
        (zero_extend:DI (reg:SI 121 [ D.17742 ]))) imalib.c:307 -1
     (nil))
(insn 369 368 370 53 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:307 -1
     (nil))
(insn 370 369 371 53 (set (reg/f:DI 123 [ D.17747 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 185)
                (const_int 304 [0x130])) [0 imaEvent_29(D)->template_data+0 S8 A64])) imalib.c:307 -1
     (nil))
(insn 371 370 372 53 (set (reg:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 inFile+0 S8 A64])) imalib.c:307 -1
     (nil))
(insn 372 371 373 53 (set (reg:DI 2 cx)
        (reg:DI 186)) imalib.c:307 -1
     (nil))
(insn 373 372 374 53 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) imalib.c:307 -1
     (nil))
(insn 374 373 375 53 (set (reg:DI 4 si)
        (reg:DI 122 [ D.17745 ])) imalib.c:307 -1
     (nil))
(insn 375 374 376 53 (set (reg:DI 5 di)
        (reg/f:DI 123 [ D.17747 ])) imalib.c:307 -1
     (nil))
(call_insn 376 375 377 53 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fread") [flags 0x41]  <function_decl 0x7f6ee79ca510 fread>) [0 fread S1 A8])
            (const_int 0 [0]))) imalib.c:307 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 377 376 378 53 (set (reg:DI 187)
        (reg:DI 0 ax)) imalib.c:307 -1
     (nil))
(insn 378 377 379 53 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])
        (reg:DI 187)) imalib.c:307 -1
     (nil))
(insn 379 378 380 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])
            (const_int 1 [0x1]))) imalib.c:309 -1
     (nil))
(jump_insn 380 379 381 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 401)
            (pc))) imalib.c:309 -1
     (nil)
 -> 401)
(note 381 380 382 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 382 381 383 54 (set (reg:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 inFile+0 S8 A64])) imalib.c:310 -1
     (nil))
(insn 383 382 384 54 (set (reg:DI 5 di)
        (reg:DI 188)) imalib.c:310 -1
     (nil))
(call_insn 384 383 385 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x7f6ee79ca288 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) imalib.c:310 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 385 384 386 54 (set (reg:SI 124 [ D.17741 ])
        (reg:SI 0 ax)) imalib.c:310 -1
     (nil))
(insn 386 385 387 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 124 [ D.17741 ])
            (const_int 0 [0]))) imalib.c:310 -1
     (nil))
(jump_insn 387 386 388 54 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 393)
            (pc))) imalib.c:310 -1
     (nil)
 -> 393)
(note 388 387 389 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 389 388 390 55 (set (reg/f:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 endOfFile+0 S8 A64])) imalib.c:311 -1
     (nil))
(insn 390 389 391 55 (set (mem:SI (reg/f:DI 189) [0 *endOfFile_27(D)+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:311 -1
     (nil))
(jump_insn 391 390 392 55 (set (pc)
        (label_ref 401)) -1
     (nil)
 -> 401)
(barrier 392 391 393)
(code_label 393 392 394 56 39 "" [1 uses])
(note 394 393 395 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 395 394 396 56 (set (reg:DI 190)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 readSize+0 S8 A64])) imalib.c:314 -1
     (nil))
(insn 396 395 397 56 (set (reg:DI 4 si)
        (reg:DI 190)) imalib.c:314 -1
     (nil))
(insn 397 396 398 56 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f6ee6cd9cf0 *.LC27>)) imalib.c:314 -1
     (nil))
(insn 398 397 399 56 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:314 -1
     (nil))
(call_insn 399 398 400 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:314 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 400 399 401 56 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:316 -1
     (nil))
(code_label 401 400 402 57 38 "" [3 uses])
(note 402 401 403 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 403 402 406 57 (set (reg:SI 125 [ D.17748 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 rc+0 S4 A32])) imalib.c:320 -1
     (nil))
(insn 406 403 410 57 (set (reg:SI 126 [ <retval> ])
        (reg:SI 125 [ D.17748 ])) imalib.c:320 -1
     (nil))
(insn 410 406 411 57 (set (reg/i:SI 0 ax)
        (reg:SI 126 [ <retval> ])) imalib.c:321 -1
     (nil))
(insn 411 410 0 57 (use (reg/i:SI 0 ax)) imalib.c:321 -1
     (nil))

;; Function IMA_Event_ReadBuffer (IMA_Event_ReadBuffer, funcdef_no=7, decl_uid=16936, cgraph_uid=7, symbol_order=7)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 50 into block 49...
Merged blocks 49 and 50.
Merged 49 and 50 without moving.
Removing jump 396.
Merging block 51 into block 49...
Merged blocks 49 and 51.
Merged 49 and 51 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])
        (reg:DI 5 di [ imaEvent ])) imalib.c:341 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])
        (reg:DI 4 si [ length ])) imalib.c:341 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])
        (reg:DI 1 dx [ buffer ])) imalib.c:341 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 endOfBuffer+0 S8 A64])
        (reg:DI 2 cx [ endOfBuffer ])) imalib.c:341 -1
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 littleEndian+0 S4 A32])
        (reg:SI 37 r8 [ littleEndian ])) imalib.c:341 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 getTemplate+0 S4 A32])
        (reg:SI 38 r9 [ getTemplate ])) imalib.c:341 -1
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) imalib.c:342 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:344 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 164)
                (const_int 304 [0x130])) [0 imaEvent_22(D)->template_data+0 S8 A64])
        (const_int 0 [0])) imalib.c:344 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:345 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 87 [ D.17761 ])
        (mem:DI (reg/f:DI 165) [0 *length_24(D)+0 S8 A64])) imalib.c:345 -1
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 87 [ D.17761 ])
            (const_int 0 [0]))) imalib.c:345 -1
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) imalib.c:345 -1
     (nil)
 -> 23)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 endOfBuffer+0 S8 A64])) imalib.c:346 -1
     (nil))
(insn 20 19 21 4 (set (mem:SI (reg/f:DI 166) [0 *endOfBuffer_26(D)+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:346 -1
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (label_ref 390)) -1
     (nil)
 -> 390)
(barrier 22 21 23)
(code_label 23 22 24 5 42 "" [1 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:350 -1
     (nil))
(jump_insn 26 25 27 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) imalib.c:350 -1
     (nil)
 -> 59)
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:352 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 88 [ D.17761 ])
        (mem:DI (reg/f:DI 167) [0 *length_24(D)+0 S8 A64])) imalib.c:352 -1
     (nil))
(insn 30 29 31 6 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 88 [ D.17761 ])
            (const_int 3 [0x3]))) imalib.c:352 -1
     (nil))
(jump_insn 31 30 32 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) imalib.c:352 -1
     (nil)
 -> 38)
(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f6ee6cf4e10 *.LC28>)) imalib.c:353 -1
     (nil))
(call_insn 34 33 35 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:353 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 35 34 36 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:354 -1
     (nil))
(jump_insn 36 35 37 7 (set (pc)
        (label_ref 59)) -1
     (nil)
 -> 59)
(barrier 37 36 38)
(code_label 38 37 39 8 45 "" [1 uses])
(note 39 38 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 8 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:357 -1
     (nil))
(insn 41 40 42 8 (set (reg/f:DI 89 [ D.17762 ])
        (mem/f:DI (reg/f:DI 168) [0 *buffer_31(D)+0 S8 A64])) imalib.c:357 -1
     (nil))
(insn 42 41 43 8 (set (reg:SI 169)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 littleEndian+0 S4 A32])) imalib.c:357 -1
     (nil))
(insn 43 42 44 8 (set (reg:SI 4 si)
        (reg:SI 169)) imalib.c:357 -1
     (nil))
(insn 44 43 45 8 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.17762 ])) imalib.c:357 -1
     (nil))
(call_insn 45 44 46 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("IMA_Uint32_Convert") [flags 0x3]  <function_decl 0x7f6ee6ff4bd0 IMA_Uint32_Convert>) [0 IMA_Uint32_Convert S1 A8])
            (const_int 0 [0]))) imalib.c:357 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 46 45 47 8 (set (reg:SI 90 [ D.17763 ])
        (reg:SI 0 ax)) imalib.c:357 -1
     (nil))
(insn 47 46 48 8 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:357 -1
     (nil))
(insn 48 47 49 8 (set (mem/j:SI (reg/f:DI 170) [0 imaEvent_22(D)->pcrIndex+0 S4 A64])
        (reg:SI 90 [ D.17763 ])) imalib.c:357 -1
     (nil))
(insn 49 48 50 8 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:358 -1
     (nil))
(insn 50 49 51 8 (set (reg/f:DI 91 [ D.17762 ])
        (mem/f:DI (reg/f:DI 171) [0 *buffer_31(D)+0 S8 A64])) imalib.c:358 -1
     (nil))
(insn 51 50 52 8 (parallel [
            (set (reg/f:DI 92 [ D.17762 ])
                (plus:DI (reg/f:DI 91 [ D.17762 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:358 -1
     (nil))
(insn 52 51 53 8 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:358 -1
     (nil))
(insn 53 52 54 8 (set (mem/f:DI (reg/f:DI 172) [0 *buffer_31(D)+0 S8 A64])
        (reg/f:DI 92 [ D.17762 ])) imalib.c:358 -1
     (nil))
(insn 54 53 55 8 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:359 -1
     (nil))
(insn 55 54 56 8 (set (reg:DI 93 [ D.17761 ])
        (mem:DI (reg/f:DI 173) [0 *length_24(D)+0 S8 A64])) imalib.c:359 -1
     (nil))
(insn 56 55 57 8 (parallel [
            (set (reg:DI 94 [ D.17761 ])
                (plus:DI (reg:DI 93 [ D.17761 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:359 -1
     (nil))
(insn 57 56 58 8 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:359 -1
     (nil))
(insn 58 57 59 8 (set (mem:DI (reg/f:DI 174) [0 *length_24(D)+0 S8 A64])
        (reg:DI 94 [ D.17761 ])) imalib.c:359 -1
     (nil))
(code_label 59 58 60 9 44 "" [2 uses])
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:363 -1
     (nil))
(jump_insn 62 61 63 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) imalib.c:363 -1
     (nil)
 -> 77)
(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 10 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:364 -1
     (nil))
(insn 65 64 66 10 (set (reg:SI 95 [ D.17763 ])
        (mem/j:SI (reg/f:DI 175) [0 imaEvent_22(D)->pcrIndex+0 S4 A64])) imalib.c:364 -1
     (nil))
(insn 66 65 67 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.17763 ])
            (const_int 10 [0xa]))) imalib.c:364 -1
     (nil))
(jump_insn 67 66 68 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) imalib.c:364 -1
     (nil)
 -> 77)
(note 68 67 69 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 11 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:365 -1
     (nil))
(insn 70 69 71 11 (set (reg:SI 96 [ D.17763 ])
        (mem/j:SI (reg/f:DI 176) [0 imaEvent_22(D)->pcrIndex+0 S4 A64])) imalib.c:365 -1
     (nil))
(insn 71 70 72 11 (set (reg:SI 1 dx)
        (reg:SI 96 [ D.17763 ])) imalib.c:365 -1
     (nil))
(insn 72 71 73 11 (set (reg:SI 4 si)
        (const_int 10 [0xa])) imalib.c:365 -1
     (nil))
(insn 73 72 74 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f6ee6cf4ea0 *.LC29>)) imalib.c:365 -1
     (nil))
(insn 74 73 75 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:365 -1
     (nil))
(call_insn 75 74 76 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:365 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 76 75 77 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:367 -1
     (nil))
(code_label 77 76 78 12 46 "" [2 uses])
(note 78 77 79 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:371 -1
     (nil))
(jump_insn 80 79 81 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) imalib.c:371 -1
     (nil)
 -> 112)
(note 81 80 82 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 13 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:373 -1
     (nil))
(insn 83 82 84 13 (set (reg:DI 97 [ D.17761 ])
        (mem:DI (reg/f:DI 177) [0 *length_24(D)+0 S8 A64])) imalib.c:373 -1
     (nil))
(insn 84 83 85 13 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 97 [ D.17761 ])
            (const_int 19 [0x13]))) imalib.c:373 -1
     (nil))
(jump_insn 85 84 86 13 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) imalib.c:373 -1
     (nil)
 -> 92)
(note 86 85 87 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f6ee6cf4f30 *.LC30>)) imalib.c:374 -1
     (nil))
(call_insn 88 87 89 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:374 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 89 88 90 14 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:375 -1
     (nil))
(jump_insn 90 89 91 14 (set (pc)
        (label_ref 112)) -1
     (nil)
 -> 112)
(barrier 91 90 92)
(code_label 92 91 93 15 48 "" [1 uses])
(note 93 92 94 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 15 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:378 -1
     (nil))
(insn 95 94 96 15 (set (reg/f:DI 98 [ D.17762 ])
        (mem/f:DI (reg/f:DI 178) [0 *buffer_31(D)+0 S8 A64])) imalib.c:378 -1
     (nil))
(insn 96 95 97 15 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:378 -1
     (nil))
(insn 97 96 98 15 (parallel [
            (set (reg/f:DI 99 [ D.17764 ])
                (plus:DI (reg/f:DI 179)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:378 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 98 97 99 15 (set (reg:DI 1 dx)
        (const_int 20 [0x14])) imalib.c:378 -1
     (nil))
(insn 99 98 100 15 (set (reg:DI 4 si)
        (reg/f:DI 98 [ D.17762 ])) imalib.c:378 -1
     (nil))
(insn 100 99 101 15 (set (reg:DI 5 di)
        (reg/f:DI 99 [ D.17764 ])) imalib.c:378 -1
     (nil))
(call_insn 101 100 102 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7f6ee78bbe58 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) imalib.c:378 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 102 101 103 15 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:379 -1
     (nil))
(insn 103 102 104 15 (set (reg/f:DI 100 [ D.17762 ])
        (mem/f:DI (reg/f:DI 180) [0 *buffer_31(D)+0 S8 A64])) imalib.c:379 -1
     (nil))
(insn 104 103 105 15 (parallel [
            (set (reg/f:DI 101 [ D.17762 ])
                (plus:DI (reg/f:DI 100 [ D.17762 ])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:379 -1
     (nil))
(insn 105 104 106 15 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:379 -1
     (nil))
(insn 106 105 107 15 (set (mem/f:DI (reg/f:DI 181) [0 *buffer_31(D)+0 S8 A64])
        (reg/f:DI 101 [ D.17762 ])) imalib.c:379 -1
     (nil))
(insn 107 106 108 15 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:380 -1
     (nil))
(insn 108 107 109 15 (set (reg:DI 102 [ D.17761 ])
        (mem:DI (reg/f:DI 182) [0 *length_24(D)+0 S8 A64])) imalib.c:380 -1
     (nil))
(insn 109 108 110 15 (parallel [
            (set (reg:DI 103 [ D.17761 ])
                (plus:DI (reg:DI 102 [ D.17761 ])
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:380 -1
     (nil))
(insn 110 109 111 15 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:380 -1
     (nil))
(insn 111 110 112 15 (set (mem:DI (reg/f:DI 183) [0 *length_24(D)+0 S8 A64])
        (reg:DI 103 [ D.17761 ])) imalib.c:380 -1
     (nil))
(code_label 112 111 113 16 47 "" [2 uses])
(note 113 112 114 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:384 -1
     (nil))
(jump_insn 115 114 116 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) imalib.c:384 -1
     (nil)
 -> 148)
(note 116 115 117 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 17 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:386 -1
     (nil))
(insn 118 117 119 17 (set (reg:DI 104 [ D.17761 ])
        (mem:DI (reg/f:DI 184) [0 *length_24(D)+0 S8 A64])) imalib.c:386 -1
     (nil))
(insn 119 118 120 17 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 104 [ D.17761 ])
            (const_int 3 [0x3]))) imalib.c:386 -1
     (nil))
(jump_insn 120 119 121 17 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) imalib.c:386 -1
     (nil)
 -> 127)
(note 121 120 122 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f6ee6cfe000 *.LC31>)) imalib.c:387 -1
     (nil))
(call_insn 123 122 124 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:387 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 124 123 125 18 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:389 -1
     (nil))
(jump_insn 125 124 126 18 (set (pc)
        (label_ref 148)) -1
     (nil)
 -> 148)
(barrier 126 125 127)
(code_label 127 126 128 19 50 "" [1 uses])
(note 128 127 129 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 19 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:392 -1
     (nil))
(insn 130 129 131 19 (set (reg/f:DI 105 [ D.17762 ])
        (mem/f:DI (reg/f:DI 185) [0 *buffer_31(D)+0 S8 A64])) imalib.c:392 -1
     (nil))
(insn 131 130 132 19 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 littleEndian+0 S4 A32])) imalib.c:392 -1
     (nil))
(insn 132 131 133 19 (set (reg:SI 4 si)
        (reg:SI 186)) imalib.c:392 -1
     (nil))
(insn 133 132 134 19 (set (reg:DI 5 di)
        (reg/f:DI 105 [ D.17762 ])) imalib.c:392 -1
     (nil))
(call_insn 134 133 135 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("IMA_Uint32_Convert") [flags 0x3]  <function_decl 0x7f6ee6ff4bd0 IMA_Uint32_Convert>) [0 IMA_Uint32_Convert S1 A8])
            (const_int 0 [0]))) imalib.c:392 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 135 134 136 19 (set (reg:SI 106 [ D.17763 ])
        (reg:SI 0 ax)) imalib.c:392 -1
     (nil))
(insn 136 135 137 19 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:392 -1
     (nil))
(insn 137 136 138 19 (set (mem/j:SI (plus:DI (reg/f:DI 187)
                (const_int 24 [0x18])) [0 imaEvent_22(D)->name_len+0 S4 A64])
        (reg:SI 106 [ D.17763 ])) imalib.c:392 -1
     (nil))
(insn 138 137 139 19 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:393 -1
     (nil))
(insn 139 138 140 19 (set (reg/f:DI 107 [ D.17762 ])
        (mem/f:DI (reg/f:DI 188) [0 *buffer_31(D)+0 S8 A64])) imalib.c:393 -1
     (nil))
(insn 140 139 141 19 (parallel [
            (set (reg/f:DI 108 [ D.17762 ])
                (plus:DI (reg/f:DI 107 [ D.17762 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:393 -1
     (nil))
(insn 141 140 142 19 (set (reg/f:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:393 -1
     (nil))
(insn 142 141 143 19 (set (mem/f:DI (reg/f:DI 189) [0 *buffer_31(D)+0 S8 A64])
        (reg/f:DI 108 [ D.17762 ])) imalib.c:393 -1
     (nil))
(insn 143 142 144 19 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:394 -1
     (nil))
(insn 144 143 145 19 (set (reg:DI 109 [ D.17761 ])
        (mem:DI (reg/f:DI 190) [0 *length_24(D)+0 S8 A64])) imalib.c:394 -1
     (nil))
(insn 145 144 146 19 (parallel [
            (set (reg:DI 110 [ D.17761 ])
                (plus:DI (reg:DI 109 [ D.17761 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:394 -1
     (nil))
(insn 146 145 147 19 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:394 -1
     (nil))
(insn 147 146 148 19 (set (mem:DI (reg/f:DI 191) [0 *length_24(D)+0 S8 A64])
        (reg:DI 110 [ D.17761 ])) imalib.c:394 -1
     (nil))
(code_label 148 147 149 20 49 "" [2 uses])
(note 149 148 150 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:398 -1
     (nil))
(jump_insn 151 150 152 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 217)
            (pc))) imalib.c:398 -1
     (nil)
 -> 217)
(note 152 151 153 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 21 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:400 -1
     (nil))
(insn 154 153 155 21 (set (reg:SI 111 [ D.17763 ])
        (mem/j:SI (plus:DI (reg/f:DI 192)
                (const_int 24 [0x18])) [0 imaEvent_22(D)->name_len+0 S4 A64])) imalib.c:400 -1
     (nil))
(insn 155 154 156 21 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 111 [ D.17763 ])
            (const_int 255 [0xff]))) imalib.c:400 -1
     (nil))
(jump_insn 156 155 157 21 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 167)
            (pc))) imalib.c:400 -1
     (nil)
 -> 167)
(note 157 156 158 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 22 (set (reg/f:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:401 -1
     (nil))
(insn 159 158 160 22 (set (reg:SI 112 [ D.17763 ])
        (mem/j:SI (plus:DI (reg/f:DI 193)
                (const_int 24 [0x18])) [0 imaEvent_22(D)->name_len+0 S4 A64])) imalib.c:401 -1
     (nil))
(insn 160 159 161 22 (set (reg:SI 4 si)
        (reg:SI 112 [ D.17763 ])) imalib.c:401 -1
     (nil))
(insn 161 160 162 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f6ee6cfe090 *.LC32>)) imalib.c:401 -1
     (nil))
(insn 162 161 163 22 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:401 -1
     (nil))
(call_insn 163 162 164 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:401 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 164 163 165 22 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:403 -1
     (nil))
(jump_insn 165 164 166 22 (set (pc)
        (label_ref 217)) -1
     (nil)
 -> 217)
(barrier 166 165 167)
(code_label 167 166 168 23 52 "" [1 uses])
(note 168 167 169 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 23 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:405 -1
     (nil))
(insn 170 169 171 23 (set (reg:DI 113 [ D.17761 ])
        (mem:DI (reg/f:DI 194) [0 *length_24(D)+0 S8 A64])) imalib.c:405 -1
     (nil))
(insn 171 170 172 23 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:405 -1
     (nil))
(insn 172 171 173 23 (set (reg:SI 114 [ D.17763 ])
        (mem/j:SI (plus:DI (reg/f:DI 195)
                (const_int 24 [0x18])) [0 imaEvent_22(D)->name_len+0 S4 A64])) imalib.c:405 -1
     (nil))
(insn 173 172 174 23 (set (reg:DI 115 [ D.17761 ])
        (zero_extend:DI (reg:SI 114 [ D.17763 ]))) imalib.c:405 -1
     (nil))
(insn 174 173 175 23 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 113 [ D.17761 ])
            (reg:DI 115 [ D.17761 ]))) imalib.c:405 -1
     (nil))
(jump_insn 175 174 176 23 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) imalib.c:405 -1
     (nil)
 -> 182)
(note 176 175 177 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 24 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f6ee6cfe120 *.LC33>)) imalib.c:406 -1
     (nil))
(call_insn 178 177 179 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:406 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 179 178 180 24 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:407 -1
     (nil))
(jump_insn 180 179 181 24 (set (pc)
        (label_ref 217)) -1
     (nil)
 -> 217)
(barrier 181 180 182)
(code_label 182 181 183 25 53 "" [1 uses])
(note 183 182 184 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 25 (set (reg/f:DI 196)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:411 -1
     (nil))
(insn 185 184 186 25 (parallel [
            (set (reg/f:DI 116 [ D.17765 ])
                (plus:DI (reg/f:DI 196)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:411 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])
            (const_int 28 [0x1c]))
        (nil)))
(insn 186 185 187 25 (set (reg:DI 1 dx)
        (const_int 256 [0x100])) imalib.c:411 -1
     (nil))
(insn 187 186 188 25 (set (reg:SI 4 si)
        (const_int 0 [0])) imalib.c:411 -1
     (nil))
(insn 188 187 189 25 (set (reg:DI 5 di)
        (reg/f:DI 116 [ D.17765 ])) imalib.c:411 -1
     (nil))
(call_insn 189 188 190 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f6ee78bc438 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) imalib.c:411 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 190 189 191 25 (set (reg/f:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:412 -1
     (nil))
(insn 191 190 192 25 (set (reg:SI 117 [ D.17763 ])
        (mem/j:SI (plus:DI (reg/f:DI 197)
                (const_int 24 [0x18])) [0 imaEvent_22(D)->name_len+0 S4 A64])) imalib.c:412 -1
     (nil))
(insn 192 191 193 25 (set (reg:DI 118 [ D.17761 ])
        (zero_extend:DI (reg:SI 117 [ D.17763 ]))) imalib.c:412 -1
     (nil))
(insn 193 192 194 25 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:412 -1
     (nil))
(insn 194 193 195 25 (set (reg/f:DI 119 [ D.17762 ])
        (mem/f:DI (reg/f:DI 198) [0 *buffer_31(D)+0 S8 A64])) imalib.c:412 -1
     (nil))
(insn 195 194 196 25 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:412 -1
     (nil))
(insn 196 195 197 25 (parallel [
            (set (reg/f:DI 120 [ D.17765 ])
                (plus:DI (reg/f:DI 199)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:412 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])
            (const_int 28 [0x1c]))
        (nil)))
(insn 197 196 198 25 (set (reg:DI 1 dx)
        (reg:DI 118 [ D.17761 ])) imalib.c:412 -1
     (nil))
(insn 198 197 199 25 (set (reg:DI 4 si)
        (reg/f:DI 119 [ D.17762 ])) imalib.c:412 -1
     (nil))
(insn 199 198 200 25 (set (reg:DI 5 di)
        (reg/f:DI 120 [ D.17765 ])) imalib.c:412 -1
     (nil))
(call_insn 200 199 201 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7f6ee78bbe58 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) imalib.c:412 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 201 200 202 25 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:413 -1
     (nil))
(insn 202 201 203 25 (set (reg/f:DI 121 [ D.17762 ])
        (mem/f:DI (reg/f:DI 200) [0 *buffer_31(D)+0 S8 A64])) imalib.c:413 -1
     (nil))
(insn 203 202 204 25 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:413 -1
     (nil))
(insn 204 203 205 25 (set (reg:SI 122 [ D.17763 ])
        (mem/j:SI (plus:DI (reg/f:DI 201)
                (const_int 24 [0x18])) [0 imaEvent_22(D)->name_len+0 S4 A64])) imalib.c:413 -1
     (nil))
(insn 205 204 206 25 (set (reg:DI 123 [ D.17766 ])
        (zero_extend:DI (reg:SI 122 [ D.17763 ]))) imalib.c:413 -1
     (nil))
(insn 206 205 207 25 (parallel [
            (set (reg/f:DI 124 [ D.17762 ])
                (plus:DI (reg/f:DI 121 [ D.17762 ])
                    (reg:DI 123 [ D.17766 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:413 -1
     (nil))
(insn 207 206 208 25 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:413 -1
     (nil))
(insn 208 207 209 25 (set (mem/f:DI (reg/f:DI 202) [0 *buffer_31(D)+0 S8 A64])
        (reg/f:DI 124 [ D.17762 ])) imalib.c:413 -1
     (nil))
(insn 209 208 210 25 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:414 -1
     (nil))
(insn 210 209 211 25 (set (reg:DI 125 [ D.17761 ])
        (mem:DI (reg/f:DI 203) [0 *length_24(D)+0 S8 A64])) imalib.c:414 -1
     (nil))
(insn 211 210 212 25 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:414 -1
     (nil))
(insn 212 211 213 25 (set (reg:SI 126 [ D.17763 ])
        (mem/j:SI (plus:DI (reg/f:DI 204)
                (const_int 24 [0x18])) [0 imaEvent_22(D)->name_len+0 S4 A64])) imalib.c:414 -1
     (nil))
(insn 213 212 214 25 (set (reg:DI 127 [ D.17761 ])
        (zero_extend:DI (reg:SI 126 [ D.17763 ]))) imalib.c:414 -1
     (nil))
(insn 214 213 215 25 (parallel [
            (set (reg:DI 128 [ D.17761 ])
                (minus:DI (reg:DI 125 [ D.17761 ])
                    (reg:DI 127 [ D.17761 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:414 -1
     (nil))
(insn 215 214 216 25 (set (reg/f:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:414 -1
     (nil))
(insn 216 215 217 25 (set (mem:DI (reg/f:DI 205) [0 *length_24(D)+0 S8 A64])
        (reg:DI 128 [ D.17761 ])) imalib.c:414 -1
     (nil))
(code_label 217 216 218 26 51 "" [3 uses])
(note 218 217 219 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:418 -1
     (nil))
(jump_insn 220 219 221 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 254)
            (pc))) imalib.c:418 -1
     (nil)
 -> 254)
(note 221 220 222 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 27 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:419 -1
     (nil))
(insn 223 222 224 27 (parallel [
            (set (reg/f:DI 129 [ D.17765 ])
                (plus:DI (reg/f:DI 206)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:419 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])
            (const_int 28 [0x1c]))
        (nil)))
(insn 224 223 225 27 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f6ee6cd9a20 *.LC22>)) imalib.c:419 -1
     (nil))
(insn 225 224 226 27 (set (reg:DI 5 di)
        (reg/f:DI 129 [ D.17765 ])) imalib.c:419 -1
     (nil))
(call_insn/i 226 225 227 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6ee78bf0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) imalib.c:419 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 227 226 228 27 (set (reg:SI 130 [ D.17767 ])
        (reg:SI 0 ax)) imalib.c:419 -1
     (nil))
(insn 228 227 229 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ D.17767 ])
            (const_int 0 [0]))) imalib.c:419 -1
     (nil))
(jump_insn 229 228 230 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 235)
            (pc))) imalib.c:419 -1
     (nil)
 -> 235)
(note 230 229 231 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 28 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:420 -1
     (nil))
(insn 232 231 233 28 (set (mem/j:SI (plus:DI (reg/f:DI 207)
                (const_int 284 [0x11c])) [0 imaEvent_22(D)->nameInt+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:420 -1
     (nil))
(jump_insn 233 232 234 28 (set (pc)
        (label_ref 254)) -1
     (nil)
 -> 254)
(barrier 234 233 235)
(code_label 235 234 236 29 55 "" [1 uses])
(note 236 235 237 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 238 29 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:422 -1
     (nil))
(insn 238 237 239 29 (parallel [
            (set (reg/f:DI 131 [ D.17765 ])
                (plus:DI (reg/f:DI 208)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:422 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])
            (const_int 28 [0x1c]))
        (nil)))
(insn 239 238 240 29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f6ee6cd9ab0 *.LC23>)) imalib.c:422 -1
     (nil))
(insn 240 239 241 29 (set (reg:DI 5 di)
        (reg/f:DI 131 [ D.17765 ])) imalib.c:422 -1
     (nil))
(call_insn/i 241 240 242 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6ee78bf0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) imalib.c:422 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 242 241 243 29 (set (reg:SI 132 [ D.17767 ])
        (reg:SI 0 ax)) imalib.c:422 -1
     (nil))
(insn 243 242 244 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ D.17767 ])
            (const_int 0 [0]))) imalib.c:422 -1
     (nil))
(jump_insn 244 243 245 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 250)
            (pc))) imalib.c:422 -1
     (nil)
 -> 250)
(note 245 244 246 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 247 30 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:423 -1
     (nil))
(insn 247 246 248 30 (set (mem/j:SI (plus:DI (reg/f:DI 209)
                (const_int 284 [0x11c])) [0 imaEvent_22(D)->nameInt+0 S4 A32])
        (const_int 2 [0x2])) imalib.c:423 -1
     (nil))
(jump_insn 248 247 249 30 (set (pc)
        (label_ref 254)) -1
     (nil)
 -> 254)
(barrier 249 248 250)
(code_label 250 249 251 31 56 "" [1 uses])
(note 251 250 252 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 252 251 253 31 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:427 -1
     (nil))
(insn 253 252 254 31 (set (mem/j:SI (plus:DI (reg/f:DI 210)
                (const_int 284 [0x11c])) [0 imaEvent_22(D)->nameInt+0 S4 A32])
        (const_int 0 [0])) imalib.c:427 -1
     (nil))
(code_label 254 253 255 32 54 "" [3 uses])
(note 255 254 256 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 256 255 257 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:431 -1
     (nil))
(jump_insn 257 256 258 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 290)
            (pc))) imalib.c:431 -1
     (nil)
 -> 290)
(note 258 257 259 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 33 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:433 -1
     (nil))
(insn 260 259 261 33 (set (reg:DI 133 [ D.17761 ])
        (mem:DI (reg/f:DI 211) [0 *length_24(D)+0 S8 A64])) imalib.c:433 -1
     (nil))
(insn 261 260 262 33 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 133 [ D.17761 ])
            (const_int 3 [0x3]))) imalib.c:433 -1
     (nil))
(jump_insn 262 261 263 33 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 269)
            (pc))) imalib.c:433 -1
     (nil)
 -> 269)
(note 263 262 264 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 34 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f6ee6cfe1b0 *.LC34>)) imalib.c:434 -1
     (nil))
(call_insn 265 264 266 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:434 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 266 265 267 34 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:435 -1
     (nil))
(jump_insn 267 266 268 34 (set (pc)
        (label_ref 290)) -1
     (nil)
 -> 290)
(barrier 268 267 269)
(code_label 269 268 270 35 58 "" [1 uses])
(note 270 269 271 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 271 270 272 35 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:438 -1
     (nil))
(insn 272 271 273 35 (set (reg/f:DI 134 [ D.17762 ])
        (mem/f:DI (reg/f:DI 212) [0 *buffer_31(D)+0 S8 A64])) imalib.c:438 -1
     (nil))
(insn 273 272 274 35 (set (reg:SI 213)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 littleEndian+0 S4 A32])) imalib.c:438 -1
     (nil))
(insn 274 273 275 35 (set (reg:SI 4 si)
        (reg:SI 213)) imalib.c:438 -1
     (nil))
(insn 275 274 276 35 (set (reg:DI 5 di)
        (reg/f:DI 134 [ D.17762 ])) imalib.c:438 -1
     (nil))
(call_insn 276 275 277 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("IMA_Uint32_Convert") [flags 0x3]  <function_decl 0x7f6ee6ff4bd0 IMA_Uint32_Convert>) [0 IMA_Uint32_Convert S1 A8])
            (const_int 0 [0]))) imalib.c:438 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 277 276 278 35 (set (reg:SI 135 [ D.17763 ])
        (reg:SI 0 ax)) imalib.c:438 -1
     (nil))
(insn 278 277 279 35 (set (reg/f:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:438 -1
     (nil))
(insn 279 278 280 35 (set (mem/j:SI (plus:DI (reg/f:DI 214)
                (const_int 296 [0x128])) [0 imaEvent_22(D)->template_data_len+0 S4 A64])
        (reg:SI 135 [ D.17763 ])) imalib.c:438 -1
     (nil))
(insn 280 279 281 35 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:439 -1
     (nil))
(insn 281 280 282 35 (set (reg/f:DI 136 [ D.17762 ])
        (mem/f:DI (reg/f:DI 215) [0 *buffer_31(D)+0 S8 A64])) imalib.c:439 -1
     (nil))
(insn 282 281 283 35 (parallel [
            (set (reg/f:DI 137 [ D.17762 ])
                (plus:DI (reg/f:DI 136 [ D.17762 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:439 -1
     (nil))
(insn 283 282 284 35 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:439 -1
     (nil))
(insn 284 283 285 35 (set (mem/f:DI (reg/f:DI 216) [0 *buffer_31(D)+0 S8 A64])
        (reg/f:DI 137 [ D.17762 ])) imalib.c:439 -1
     (nil))
(insn 285 284 286 35 (set (reg/f:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:440 -1
     (nil))
(insn 286 285 287 35 (set (reg:DI 138 [ D.17761 ])
        (mem:DI (reg/f:DI 217) [0 *length_24(D)+0 S8 A64])) imalib.c:440 -1
     (nil))
(insn 287 286 288 35 (parallel [
            (set (reg:DI 139 [ D.17761 ])
                (plus:DI (reg:DI 138 [ D.17761 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:440 -1
     (nil))
(insn 288 287 289 35 (set (reg/f:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:440 -1
     (nil))
(insn 289 288 290 35 (set (mem:DI (reg/f:DI 218) [0 *length_24(D)+0 S8 A64])
        (reg:DI 139 [ D.17761 ])) imalib.c:440 -1
     (nil))
(code_label 290 289 291 36 57 "" [2 uses])
(note 291 290 292 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 292 291 293 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:444 -1
     (nil))
(jump_insn 293 292 294 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 390)
            (pc))) imalib.c:444 -1
     (nil)
 -> 390)
(note 294 293 295 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 getTemplate+0 S4 A32])
            (const_int 0 [0]))) imalib.c:445 -1
     (nil))
(jump_insn 296 295 297 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 369)
            (pc))) imalib.c:445 -1
     (nil)
 -> 369)
(note 297 296 298 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 298 297 299 38 (set (reg/f:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:447 -1
     (nil))
(insn 299 298 300 38 (set (reg:SI 140 [ D.17763 ])
        (mem/j:SI (plus:DI (reg/f:DI 219)
                (const_int 296 [0x128])) [0 imaEvent_22(D)->template_data_len+0 S4 A64])) imalib.c:447 -1
     (nil))
(insn 300 299 301 38 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 140 [ D.17763 ])
            (const_int 4494 [0x118e]))) imalib.c:447 -1
     (nil))
(jump_insn 301 300 302 38 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 312)
            (pc))) imalib.c:447 -1
     (nil)
 -> 312)
(note 302 301 303 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 39 (set (reg/f:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:448 -1
     (nil))
(insn 304 303 305 39 (set (reg:SI 141 [ D.17763 ])
        (mem/j:SI (plus:DI (reg/f:DI 220)
                (const_int 296 [0x128])) [0 imaEvent_22(D)->template_data_len+0 S4 A64])) imalib.c:448 -1
     (nil))
(insn 305 304 306 39 (set (reg:SI 4 si)
        (reg:SI 141 [ D.17763 ])) imalib.c:448 -1
     (nil))
(insn 306 305 307 39 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f6ee6cfe240 *.LC35>)) imalib.c:448 -1
     (nil))
(insn 307 306 308 39 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:448 -1
     (nil))
(call_insn 308 307 309 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:448 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 309 308 310 39 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:450 -1
     (nil))
(jump_insn 310 309 311 39 (set (pc)
        (label_ref 369)) -1
     (nil)
 -> 369)
(barrier 311 310 312)
(code_label 312 311 313 40 60 "" [1 uses])
(note 313 312 314 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 314 313 315 40 (set (reg/f:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:452 -1
     (nil))
(insn 315 314 316 40 (set (reg:DI 142 [ D.17761 ])
        (mem:DI (reg/f:DI 221) [0 *length_24(D)+0 S8 A64])) imalib.c:452 -1
     (nil))
(insn 316 315 317 40 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:452 -1
     (nil))
(insn 317 316 318 40 (set (reg:SI 143 [ D.17763 ])
        (mem/j:SI (plus:DI (reg/f:DI 222)
                (const_int 296 [0x128])) [0 imaEvent_22(D)->template_data_len+0 S4 A64])) imalib.c:452 -1
     (nil))
(insn 318 317 319 40 (set (reg:DI 144 [ D.17761 ])
        (zero_extend:DI (reg:SI 143 [ D.17763 ]))) imalib.c:452 -1
     (nil))
(insn 319 318 320 40 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 142 [ D.17761 ])
            (reg:DI 144 [ D.17761 ]))) imalib.c:452 -1
     (nil))
(jump_insn 320 319 321 40 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 327)
            (pc))) imalib.c:452 -1
     (nil)
 -> 327)
(note 321 320 322 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 41 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f6ee6cfe2d0 *.LC36>)) imalib.c:453 -1
     (nil))
(call_insn 323 322 324 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:453 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 324 323 325 41 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:454 -1
     (nil))
(jump_insn 325 324 326 41 (set (pc)
        (label_ref 369)) -1
     (nil)
 -> 369)
(barrier 326 325 327)
(code_label 327 326 328 42 61 "" [1 uses])
(note 328 327 329 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 329 328 330 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:457 -1
     (nil))
(jump_insn 330 329 331 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 353)
            (pc))) imalib.c:457 -1
     (nil)
 -> 353)
(note 331 330 332 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 332 331 333 43 (set (reg/f:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:458 -1
     (nil))
(insn 333 332 334 43 (set (reg:SI 145 [ D.17763 ])
        (mem/j:SI (plus:DI (reg/f:DI 223)
                (const_int 296 [0x128])) [0 imaEvent_22(D)->template_data_len+0 S4 A64])) imalib.c:458 -1
     (nil))
(insn 334 333 335 43 (set (reg:DI 146 [ D.17761 ])
        (zero_extend:DI (reg:SI 145 [ D.17763 ]))) imalib.c:458 -1
     (nil))
(insn 335 334 336 43 (set (reg:DI 5 di)
        (reg:DI 146 [ D.17761 ])) imalib.c:458 -1
     (nil))
(call_insn 336 335 337 43 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f6ee78e5360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) imalib.c:458 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 337 336 338 43 (set (reg/f:DI 224)
        (reg:DI 0 ax)) imalib.c:458 -1
     (expr_list:REG_NOALIAS (reg/f:DI 224)
        (nil)))
(insn 338 337 339 43 (set (reg/f:DI 147 [ D.17768 ])
        (reg/f:DI 224)) imalib.c:458 -1
     (nil))
(insn 339 338 340 43 (set (reg/f:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:458 -1
     (nil))
(insn 340 339 341 43 (set (mem/f/j:DI (plus:DI (reg/f:DI 225)
                (const_int 304 [0x130])) [0 imaEvent_22(D)->template_data+0 S8 A64])
        (reg/f:DI 147 [ D.17768 ])) imalib.c:458 -1
     (nil))
(insn 341 340 342 43 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:459 -1
     (nil))
(insn 342 341 343 43 (set (reg/f:DI 148 [ D.17762 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 226)
                (const_int 304 [0x130])) [0 imaEvent_22(D)->template_data+0 S8 A64])) imalib.c:459 -1
     (nil))
(insn 343 342 344 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 148 [ D.17762 ])
            (const_int 0 [0]))) imalib.c:459 -1
     (nil))
(jump_insn 344 343 345 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 353)
            (pc))) imalib.c:459 -1
     (nil)
 -> 353)
(note 345 344 346 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 346 345 347 44 (set (reg/f:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:460 -1
     (nil))
(insn 347 346 348 44 (set (reg:SI 149 [ D.17763 ])
        (mem/j:SI (plus:DI (reg/f:DI 227)
                (const_int 296 [0x128])) [0 imaEvent_22(D)->template_data_len+0 S4 A64])) imalib.c:460 -1
     (nil))
(insn 348 347 349 44 (set (reg:SI 4 si)
        (reg:SI 149 [ D.17763 ])) imalib.c:460 -1
     (nil))
(insn 349 348 350 44 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7f6ee6cfe360 *.LC37>)) imalib.c:460 -1
     (nil))
(insn 350 349 351 44 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:460 -1
     (nil))
(call_insn 351 350 352 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:460 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 352 351 353 44 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:463 -1
     (nil))
(code_label 353 352 354 45 62 "" [2 uses])
(note 354 353 355 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:466 -1
     (nil))
(jump_insn 356 355 357 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 369)
            (pc))) imalib.c:466 -1
     (nil)
 -> 369)
(note 357 356 358 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 46 (set (reg/f:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:467 -1
     (nil))
(insn 359 358 360 46 (set (reg:SI 150 [ D.17763 ])
        (mem/j:SI (plus:DI (reg/f:DI 228)
                (const_int 296 [0x128])) [0 imaEvent_22(D)->template_data_len+0 S4 A64])) imalib.c:467 -1
     (nil))
(insn 360 359 361 46 (set (reg:DI 151 [ D.17761 ])
        (zero_extend:DI (reg:SI 150 [ D.17763 ]))) imalib.c:467 -1
     (nil))
(insn 361 360 362 46 (set (reg/f:DI 229)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:467 -1
     (nil))
(insn 362 361 363 46 (set (reg/f:DI 152 [ D.17762 ])
        (mem/f:DI (reg/f:DI 229) [0 *buffer_31(D)+0 S8 A64])) imalib.c:467 -1
     (nil))
(insn 363 362 364 46 (set (reg/f:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:467 -1
     (nil))
(insn 364 363 365 46 (set (reg/f:DI 153 [ D.17762 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 230)
                (const_int 304 [0x130])) [0 imaEvent_22(D)->template_data+0 S8 A64])) imalib.c:467 -1
     (nil))
(insn 365 364 366 46 (set (reg:DI 1 dx)
        (reg:DI 151 [ D.17761 ])) imalib.c:467 -1
     (nil))
(insn 366 365 367 46 (set (reg:DI 4 si)
        (reg/f:DI 152 [ D.17762 ])) imalib.c:467 -1
     (nil))
(insn 367 366 368 46 (set (reg:DI 5 di)
        (reg/f:DI 153 [ D.17762 ])) imalib.c:467 -1
     (nil))
(call_insn 368 367 369 46 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7f6ee78bbe58 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) imalib.c:467 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 369 368 370 47 59 "" [4 uses])
(note 370 369 371 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 371 370 372 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:472 -1
     (nil))
(jump_insn 372 371 373 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 390)
            (pc))) imalib.c:472 -1
     (nil)
 -> 390)
(note 373 372 374 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 374 373 375 48 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:473 -1
     (nil))
(insn 375 374 376 48 (set (reg/f:DI 154 [ D.17762 ])
        (mem/f:DI (reg/f:DI 231) [0 *buffer_31(D)+0 S8 A64])) imalib.c:473 -1
     (nil))
(insn 376 375 377 48 (set (reg/f:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:473 -1
     (nil))
(insn 377 376 378 48 (set (reg:SI 155 [ D.17763 ])
        (mem/j:SI (plus:DI (reg/f:DI 232)
                (const_int 296 [0x128])) [0 imaEvent_22(D)->template_data_len+0 S4 A64])) imalib.c:473 -1
     (nil))
(insn 378 377 379 48 (set (reg:DI 156 [ D.17766 ])
        (zero_extend:DI (reg:SI 155 [ D.17763 ]))) imalib.c:473 -1
     (nil))
(insn 379 378 380 48 (parallel [
            (set (reg/f:DI 157 [ D.17762 ])
                (plus:DI (reg/f:DI 154 [ D.17762 ])
                    (reg:DI 156 [ D.17766 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:473 -1
     (nil))
(insn 380 379 381 48 (set (reg/f:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:473 -1
     (nil))
(insn 381 380 382 48 (set (mem/f:DI (reg/f:DI 233) [0 *buffer_31(D)+0 S8 A64])
        (reg/f:DI 157 [ D.17762 ])) imalib.c:473 -1
     (nil))
(insn 382 381 383 48 (set (reg/f:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:474 -1
     (nil))
(insn 383 382 384 48 (set (reg:DI 158 [ D.17761 ])
        (mem:DI (reg/f:DI 234) [0 *length_24(D)+0 S8 A64])) imalib.c:474 -1
     (nil))
(insn 384 383 385 48 (set (reg/f:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 imaEvent+0 S8 A64])) imalib.c:474 -1
     (nil))
(insn 385 384 386 48 (set (reg:SI 159 [ D.17763 ])
        (mem/j:SI (plus:DI (reg/f:DI 235)
                (const_int 296 [0x128])) [0 imaEvent_22(D)->template_data_len+0 S4 A64])) imalib.c:474 -1
     (nil))
(insn 386 385 387 48 (set (reg:DI 160 [ D.17761 ])
        (zero_extend:DI (reg:SI 159 [ D.17763 ]))) imalib.c:474 -1
     (nil))
(insn 387 386 388 48 (parallel [
            (set (reg:DI 161 [ D.17761 ])
                (minus:DI (reg:DI 158 [ D.17761 ])
                    (reg:DI 160 [ D.17761 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:474 -1
     (nil))
(insn 388 387 389 48 (set (reg/f:DI 236)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) imalib.c:474 -1
     (nil))
(insn 389 388 390 48 (set (mem:DI (reg/f:DI 236) [0 *length_24(D)+0 S8 A64])
        (reg:DI 161 [ D.17761 ])) imalib.c:474 -1
     (nil))
(code_label 390 389 391 49 43 "" [3 uses])
(note 391 390 392 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 392 391 395 49 (set (reg:SI 162 [ D.17769 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) imalib.c:478 -1
     (nil))
(insn 395 392 399 49 (set (reg:SI 163 [ <retval> ])
        (reg:SI 162 [ D.17769 ])) imalib.c:478 -1
     (nil))
(insn 399 395 400 49 (set (reg/i:SI 0 ax)
        (reg:SI 163 [ <retval> ])) imalib.c:479 -1
     (nil))
(insn 400 399 0 49 (use (reg/i:SI 0 ax)) imalib.c:479 -1
     (nil))

;; Function IMA_TemplateData_ReadBuffer (IMA_TemplateData_ReadBuffer, funcdef_no=8, decl_uid=16940, cgraph_uid=8, symbol_order=8)

Partition 3: size 8 align 8
	hashAlgSize_30
Partition 2: size 8 align 8
	buffer_23
Partition 1: size 8 align 8
	length_15
Partition 5: size 4 align 4
	goodSigSize_192
Partition 4: size 4 align 4
	goodHashAlgo_187
Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 80 into block 79...
Merged blocks 79 and 80.
Merged 79 and 80 without moving.
Removing jump 544.
Merging block 81 into block 79...
Merged blocks 79 and 81.
Merged 79 and 81 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])
        (reg:DI 5 di [ imaTemplateData ])) imalib.c:490 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 imaEvent+0 S8 A64])
        (reg:DI 4 si [ imaEvent ])) imalib.c:490 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 littleEndian+0 S4 A32])
        (reg:SI 1 dx [ littleEndian ])) imalib.c:490 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) imalib.c:491 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 imaEvent+0 S8 A64])) imalib.c:492 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 89 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 175)
                (const_int 296 [0x128])) [0 imaEvent_52(D)->template_data_len+0 S4 A64])) imalib.c:492 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
        (zero_extend:DI (reg:SI 89 [ D.17781 ]))) imalib.c:492 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 imaEvent+0 S8 A64])) imalib.c:493 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 177)
        (mem/f/j:DI (plus:DI (reg/f:DI 176)
                (const_int 304 [0x130])) [0 imaEvent_52(D)->template_data+0 S8 A64])) imalib.c:493 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])
        (reg/f:DI 177)) imalib.c:493 -1
     (nil))
(insn 15 14 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:496 -1
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) imalib.c:496 -1
     (nil)
 -> 30)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 imaEvent+0 S8 A64])) imalib.c:497 -1
     (nil))
(insn 19 18 20 4 (set (reg:SI 90 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 178)
                (const_int 284 [0x11c])) [0 imaEvent_52(D)->nameInt+0 S4 A32])) imalib.c:497 -1
     (nil))
(insn 20 19 21 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.17781 ])
            (const_int 0 [0]))) imalib.c:497 -1
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) imalib.c:497 -1
     (nil)
 -> 30)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 imaEvent+0 S8 A64])) imalib.c:499 -1
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg/f:DI 91 [ D.17782 ])
                (plus:DI (reg/f:DI 179)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:499 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])) [0 imaEvent+0 S8 A64])
            (const_int 28 [0x1c]))
        (nil)))
(insn 25 24 26 5 (set (reg:DI 4 si)
        (reg/f:DI 91 [ D.17782 ])) imalib.c:498 -1
     (nil))
(insn 26 25 27 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7f6ee6d136c0 *.LC38>)) imalib.c:498 -1
     (nil))
(insn 27 26 28 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:498 -1
     (nil))
(call_insn 28 27 29 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:498 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 29 28 30 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:500 -1
     (nil))
(code_label 30 29 31 6 65 "" [2 uses])
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:504 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) imalib.c:504 -1
     (nil)
 -> 55)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
            (const_int 3 [0x3]))) imalib.c:506 -1
     (nil))
(jump_insn 36 35 37 7 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) imalib.c:506 -1
     (nil)
 -> 43)
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7f6ee6d13750 *.LC39>)) imalib.c:507 -1
     (nil))
(call_insn 39 38 40 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:507 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 40 39 41 8 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:508 -1
     (nil))
(jump_insn 41 40 42 8 (set (pc)
        (label_ref 55)) -1
     (nil)
 -> 55)
(barrier 42 41 43)
(code_label 43 42 44 9 67 "" [1 uses])
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 littleEndian+0 S4 A32])) imalib.c:511 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])) imalib.c:511 -1
     (nil))
(insn 47 46 48 9 (set (reg:SI 4 si)
        (reg:SI 180)) imalib.c:511 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg:DI 181)) imalib.c:511 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("IMA_Uint32_Convert") [flags 0x3]  <function_decl 0x7f6ee6ff4bd0 IMA_Uint32_Convert>) [0 IMA_Uint32_Convert S1 A8])
            (const_int 0 [0]))) imalib.c:511 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 50 49 51 9 (set (reg:SI 92 [ D.17781 ])
        (reg:SI 0 ax)) imalib.c:511 -1
     (nil))
(insn 51 50 52 9 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:511 -1
     (nil))
(insn 52 51 53 9 (set (mem/j:SI (reg/f:DI 182) [0 imaTemplateData_65(D)->hashLength+0 S4 A32])
        (reg:SI 92 [ D.17781 ])) imalib.c:511 -1
     (nil))
(insn 53 52 54 9 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:512 -1
     (nil))
(insn 54 53 55 9 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:513 -1
     (nil))
(code_label 55 54 56 10 66 "" [2 uses])
(note 56 55 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:518 -1
     (nil))
(jump_insn 58 57 59 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) imalib.c:518 -1
     (nil)
 -> 100)
(note 59 58 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 11 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:520 -1
     (nil))
(insn 61 60 62 11 (parallel [
            (set (reg/f:DI 93 [ D.17783 ])
                (plus:DI (reg/f:DI 183)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:520 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 62 61 63 11 (set (reg:DI 1 dx)
        (const_int 65 [0x41])) imalib.c:520 -1
     (nil))
(insn 63 62 64 11 (set (reg:SI 4 si)
        (const_int 0 [0])) imalib.c:520 -1
     (nil))
(insn 64 63 65 11 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.17783 ])) imalib.c:520 -1
     (nil))
(call_insn 65 64 66 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f6ee78bc438 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) imalib.c:520 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 66 65 67 11 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:523 -1
     (nil))
(insn 67 66 68 11 (set (reg:SI 94 [ D.17781 ])
        (mem/j:SI (reg/f:DI 184) [0 imaTemplateData_65(D)->hashLength+0 S4 A32])) imalib.c:523 -1
     (nil))
(insn 68 67 69 11 (set (reg:DI 95 [ D.17784 ])
        (zero_extend:DI (reg:SI 94 [ D.17781 ]))) imalib.c:521 -1
     (nil))
(insn 69 68 70 11 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:521 -1
     (nil))
(insn 70 69 71 11 (parallel [
            (set (reg/f:DI 96 [ D.17783 ])
                (plus:DI (reg/f:DI 185)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:521 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 71 70 72 11 (set (reg:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])) imalib.c:521 -1
     (nil))
(insn 72 71 73 11 (set (reg:DI 2 cx)
        (reg:DI 95 [ D.17784 ])) imalib.c:521 -1
     (nil))
(insn 73 72 74 11 (set (reg:DI 1 dx)
        (const_int 65 [0x41])) imalib.c:521 -1
     (nil))
(insn 74 73 75 11 (set (reg:DI 4 si)
        (reg:DI 186)) imalib.c:521 -1
     (nil))
(insn 75 74 76 11 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.17783 ])) imalib.c:521 -1
     (nil))
(call_insn 76 75 77 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("IMA_Strn2cpy") [flags 0x3]  <function_decl 0x7f6ee6ff4ca8 IMA_Strn2cpy>) [0 IMA_Strn2cpy S1 A8])
            (const_int 0 [0]))) imalib.c:521 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 77 76 78 11 (set (reg:SI 97 [ D.17781 ])
        (reg:SI 0 ax)) imalib.c:521 -1
     (nil))
(insn 78 77 79 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (reg:SI 97 [ D.17781 ])) imalib.c:521 -1
     (nil))
(insn 79 78 80 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:524 -1
     (nil))
(jump_insn 80 79 81 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) imalib.c:524 -1
     (nil)
 -> 87)
(note 81 80 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC40") [flags 0x2]  <var_decl 0x7f6ee6d137e0 *.LC40>)) imalib.c:525 -1
     (nil))
(call_insn 83 82 84 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:525 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 84 83 85 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:527 -1
     (nil))
(jump_insn 85 84 86 12 (set (pc)
        (label_ref 100)) -1
     (nil)
 -> 100)
(barrier 86 85 87)
(code_label 87 86 88 13 69 "" [1 uses])
(note 88 87 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 13 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:530 -1
     (nil))
(insn 90 89 91 13 (parallel [
            (set (reg/f:DI 98 [ D.17783 ])
                (plus:DI (reg/f:DI 187)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:530 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 91 90 92 13 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.17783 ])) imalib.c:530 -1
     (nil))
(call_insn/i 92 91 93 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7f6ee78bf948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) imalib.c:530 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 93 92 94 13 (set (reg:DI 99 [ D.17784 ])
        (reg:DI 0 ax)) imalib.c:530 -1
     (nil))
(insn 94 93 95 13 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg:DI 99 [ D.17784 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:530 -1
     (nil))
(insn 95 94 96 13 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashAlgSize+0 S8 A64])
        (reg:DI 188)) imalib.c:530 -1
     (nil))
(insn 96 95 97 13 (set (reg:DI 189)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashAlgSize+0 S8 A64])) imalib.c:531 -1
     (nil))
(insn 97 96 98 13 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])
                    (reg:DI 189)))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:531 -1
     (nil))
(insn 98 97 99 13 (set (reg:DI 190)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashAlgSize+0 S8 A64])) imalib.c:532 -1
     (nil))
(insn 99 98 100 13 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
                (minus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
                    (reg:DI 190)))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:532 -1
     (nil))
(code_label 100 99 101 14 68 "" [2 uses])
(note 101 100 102 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:536 -1
     (nil))
(jump_insn 103 102 104 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) imalib.c:536 -1
     (nil)
 -> 146)
(note 104 103 105 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 15 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:537 -1
     (nil))
(insn 106 105 107 15 (parallel [
            (set (reg/f:DI 100 [ D.17783 ])
                (plus:DI (reg/f:DI 191)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:537 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 107 106 108 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x7f6ee6d13870 *.LC41>)) imalib.c:537 -1
     (nil))
(insn 108 107 109 15 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.17783 ])) imalib.c:537 -1
     (nil))
(call_insn/i 109 108 110 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6ee78bf0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) imalib.c:537 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 110 109 111 15 (set (reg:SI 101 [ D.17780 ])
        (reg:SI 0 ax)) imalib.c:537 -1
     (nil))
(insn 111 110 112 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.17780 ])
            (const_int 0 [0]))) imalib.c:537 -1
     (nil))
(jump_insn 112 111 113 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) imalib.c:537 -1
     (nil)
 -> 120)
(note 113 112 114 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 16 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:538 -1
     (nil))
(insn 115 114 116 16 (set (mem/j:SI (plus:DI (reg/f:DI 192)
                (const_int 76 [0x4c])) [0 imaTemplateData_65(D)->fileDataHashLength+0 S4 A32])
        (const_int 20 [0x14])) imalib.c:538 -1
     (nil))
(insn 116 115 117 16 (set (reg/f:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:539 -1
     (nil))
(insn 117 116 118 16 (set (mem/j:SI (plus:DI (reg/f:DI 193)
                (const_int 72 [0x48])) [0 imaTemplateData_65(D)->hashNid+0 S4 A32])
        (const_int 64 [0x40])) imalib.c:539 -1
     (nil))
(jump_insn 118 117 119 16 (set (pc)
        (label_ref 146)) -1
     (nil)
 -> 146)
(barrier 119 118 120)
(code_label 120 119 121 17 71 "" [1 uses])
(note 121 120 122 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 17 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:541 -1
     (nil))
(insn 123 122 124 17 (parallel [
            (set (reg/f:DI 102 [ D.17783 ])
                (plus:DI (reg/f:DI 194)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:541 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 124 123 125 17 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC42") [flags 0x2]  <var_decl 0x7f6ee6d13900 *.LC42>)) imalib.c:541 -1
     (nil))
(insn 125 124 126 17 (set (reg:DI 5 di)
        (reg/f:DI 102 [ D.17783 ])) imalib.c:541 -1
     (nil))
(call_insn/i 126 125 127 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6ee78bf0d8 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) imalib.c:541 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 127 126 128 17 (set (reg:SI 103 [ D.17780 ])
        (reg:SI 0 ax)) imalib.c:541 -1
     (nil))
(insn 128 127 129 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103 [ D.17780 ])
            (const_int 0 [0]))) imalib.c:541 -1
     (nil))
(jump_insn 129 128 130 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) imalib.c:541 -1
     (nil)
 -> 137)
(note 130 129 131 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 18 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:542 -1
     (nil))
(insn 132 131 133 18 (set (mem/j:SI (plus:DI (reg/f:DI 195)
                (const_int 76 [0x4c])) [0 imaTemplateData_65(D)->fileDataHashLength+0 S4 A32])
        (const_int 32 [0x20])) imalib.c:542 -1
     (nil))
(insn 133 132 134 18 (set (reg/f:DI 196)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:543 -1
     (nil))
(insn 134 133 135 18 (set (mem/j:SI (plus:DI (reg/f:DI 196)
                (const_int 72 [0x48])) [0 imaTemplateData_65(D)->hashNid+0 S4 A32])
        (const_int 672 [0x2a0])) imalib.c:543 -1
     (nil))
(jump_insn 135 134 136 18 (set (pc)
        (label_ref 146)) -1
     (nil)
 -> 146)
(barrier 136 135 137)
(code_label 137 136 138 19 72 "" [1 uses])
(note 138 137 139 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 19 (set (reg/f:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:547 -1
     (nil))
(insn 140 139 141 19 (parallel [
            (set (reg/f:DI 104 [ D.17783 ])
                (plus:DI (reg/f:DI 197)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:547 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 141 140 142 19 (set (reg:DI 4 si)
        (reg/f:DI 104 [ D.17783 ])) imalib.c:546 -1
     (nil))
(insn 142 141 143 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC43") [flags 0x2]  <var_decl 0x7f6ee6d13990 *.LC43>)) imalib.c:546 -1
     (nil))
(insn 143 142 144 19 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:546 -1
     (nil))
(call_insn 144 143 145 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:546 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 145 144 146 19 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:548 -1
     (nil))
(code_label 146 145 147 20 70 "" [3 uses])
(note 147 146 148 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:552 -1
     (nil))
(jump_insn 149 148 150 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) imalib.c:552 -1
     (nil)
 -> 174)
(note 150 149 151 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 21 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:553 -1
     (nil))
(insn 152 151 153 21 (set (reg:SI 105 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 198)
                (const_int 76 [0x4c])) [0 imaTemplateData_65(D)->fileDataHashLength+0 S4 A32])) imalib.c:553 -1
     (nil))
(insn 153 152 154 21 (set (reg:DI 106 [ D.17784 ])
        (zero_extend:DI (reg:SI 105 [ D.17781 ]))) imalib.c:553 -1
     (nil))
(insn 154 153 155 21 (set (reg:DI 199)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashAlgSize+0 S8 A64])) imalib.c:553 -1
     (nil))
(insn 155 154 156 21 (parallel [
            (set (reg:DI 107 [ D.17784 ])
                (plus:DI (reg:DI 106 [ D.17784 ])
                    (reg:DI 199)))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:553 -1
     (expr_list:REG_EQUAL (plus:DI (reg:DI 106 [ D.17784 ])
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 hashAlgSize+0 S8 A64]))
        (nil)))
(insn 156 155 157 21 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:553 -1
     (nil))
(insn 157 156 158 21 (set (reg:SI 108 [ D.17781 ])
        (mem/j:SI (reg/f:DI 200) [0 imaTemplateData_65(D)->hashLength+0 S4 A32])) imalib.c:553 -1
     (nil))
(insn 158 157 159 21 (set (reg:DI 109 [ D.17784 ])
        (zero_extend:DI (reg:SI 108 [ D.17781 ]))) imalib.c:553 -1
     (nil))
(insn 159 158 160 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 107 [ D.17784 ])
            (reg:DI 109 [ D.17784 ]))) imalib.c:553 -1
     (nil))
(jump_insn 160 159 161 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) imalib.c:553 -1
     (nil)
 -> 174)
(note 161 160 162 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 22 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:554 -1
     (nil))
(insn 163 162 164 22 (set (reg:SI 110 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 201)
                (const_int 76 [0x4c])) [0 imaTemplateData_65(D)->fileDataHashLength+0 S4 A32])) imalib.c:554 -1
     (nil))
(insn 164 163 165 22 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:554 -1
     (nil))
(insn 165 164 166 22 (set (reg:SI 111 [ D.17781 ])
        (mem/j:SI (reg/f:DI 202) [0 imaTemplateData_65(D)->hashLength+0 S4 A32])) imalib.c:554 -1
     (nil))
(insn 166 165 167 22 (set (reg:DI 203)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashAlgSize+0 S8 A64])) imalib.c:554 -1
     (nil))
(insn 167 166 168 22 (set (reg:SI 2 cx)
        (reg:SI 110 [ D.17781 ])) imalib.c:554 -1
     (nil))
(insn 168 167 169 22 (set (reg:DI 1 dx)
        (reg:DI 203)) imalib.c:554 -1
     (nil))
(insn 169 168 170 22 (set (reg:SI 4 si)
        (reg:SI 111 [ D.17781 ])) imalib.c:554 -1
     (nil))
(insn 170 169 171 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC44") [flags 0x2]  <var_decl 0x7f6ee6d13a20 *.LC44>)) imalib.c:554 -1
     (nil))
(insn 171 170 172 22 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:554 -1
     (nil))
(call_insn 172 171 173 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:554 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 173 172 174 22 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:558 -1
     (nil))
(code_label 174 173 175 23 73 "" [2 uses])
(note 175 174 176 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:562 -1
     (nil))
(jump_insn 177 176 178 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 222)
            (pc))) imalib.c:562 -1
     (nil)
 -> 222)
(note 178 177 179 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 24 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:564 -1
     (nil))
(insn 180 179 181 24 (set (reg:SI 112 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 204)
                (const_int 76 [0x4c])) [0 imaTemplateData_65(D)->fileDataHashLength+0 S4 A32])) imalib.c:564 -1
     (nil))
(insn 181 180 182 24 (set (reg:DI 113 [ D.17784 ])
        (zero_extend:DI (reg:SI 112 [ D.17781 ]))) imalib.c:564 -1
     (nil))
(insn 182 181 183 24 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 113 [ D.17784 ])
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64]))) imalib.c:564 -1
     (nil))
(jump_insn 183 182 184 24 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) imalib.c:564 -1
     (nil)
 -> 190)
(note 184 183 185 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC45") [flags 0x2]  <var_decl 0x7f6ee6d13ab0 *.LC45>)) imalib.c:565 -1
     (nil))
(call_insn 186 185 187 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:565 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 187 186 188 25 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:566 -1
     (nil))
(jump_insn 188 187 189 25 (set (pc)
        (label_ref 222)) -1
     (nil)
 -> 222)
(barrier 189 188 190)
(code_label 190 189 191 26 75 "" [1 uses])
(note 191 190 192 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 26 (set (reg/f:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:568 -1
     (nil))
(insn 193 192 194 26 (set (reg:SI 114 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 205)
                (const_int 76 [0x4c])) [0 imaTemplateData_65(D)->fileDataHashLength+0 S4 A32])) imalib.c:568 -1
     (nil))
(insn 194 193 195 26 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 114 [ D.17781 ])
            (const_int 32 [0x20]))) imalib.c:568 -1
     (nil))
(jump_insn 195 194 196 26 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 202)
            (pc))) imalib.c:568 -1
     (nil)
 -> 202)
(note 196 195 197 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC46") [flags 0x2]  <var_decl 0x7f6ee6d13b40 *.LC46>)) imalib.c:570 -1
     (nil))
(call_insn 198 197 199 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:570 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 199 198 200 27 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:572 -1
     (nil))
(jump_insn 200 199 201 27 (set (pc)
        (label_ref 222)) -1
     (nil)
 -> 222)
(barrier 201 200 202)
(code_label 202 201 203 28 76 "" [1 uses])
(note 203 202 204 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 204 203 205 28 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:575 -1
     (nil))
(insn 205 204 206 28 (set (reg:SI 115 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 206)
                (const_int 76 [0x4c])) [0 imaTemplateData_65(D)->fileDataHashLength+0 S4 A32])) imalib.c:575 -1
     (nil))
(insn 206 205 207 28 (set (reg:DI 116 [ D.17784 ])
        (zero_extend:DI (reg:SI 115 [ D.17781 ]))) imalib.c:575 -1
     (nil))
(insn 207 206 208 28 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:575 -1
     (nil))
(insn 208 207 209 28 (parallel [
            (set (reg/f:DI 117 [ D.17785 ])
                (plus:DI (reg/f:DI 207)
                    (const_int 80 [0x50])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:575 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])
            (const_int 80 [0x50]))
        (nil)))
(insn 209 208 210 28 (set (reg:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])) imalib.c:575 -1
     (nil))
(insn 210 209 211 28 (set (reg:DI 1 dx)
        (reg:DI 116 [ D.17784 ])) imalib.c:575 -1
     (nil))
(insn 211 210 212 28 (set (reg:DI 4 si)
        (reg:DI 208)) imalib.c:575 -1
     (nil))
(insn 212 211 213 28 (set (reg:DI 5 di)
        (reg/f:DI 117 [ D.17785 ])) imalib.c:575 -1
     (nil))
(call_insn 213 212 214 28 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7f6ee78bbe58 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) imalib.c:575 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 214 213 215 28 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:576 -1
     (nil))
(insn 215 214 216 28 (set (reg:SI 118 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 209)
                (const_int 76 [0x4c])) [0 imaTemplateData_65(D)->fileDataHashLength+0 S4 A32])) imalib.c:576 -1
     (nil))
(insn 216 215 217 28 (set (reg:DI 119 [ D.17786 ])
        (zero_extend:DI (reg:SI 118 [ D.17781 ]))) imalib.c:576 -1
     (nil))
(insn 217 216 218 28 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])
                    (reg:DI 119 [ D.17786 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:576 -1
     (nil))
(insn 218 217 219 28 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:577 -1
     (nil))
(insn 219 218 220 28 (set (reg:SI 120 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 210)
                (const_int 76 [0x4c])) [0 imaTemplateData_65(D)->fileDataHashLength+0 S4 A32])) imalib.c:577 -1
     (nil))
(insn 220 219 221 28 (set (reg:DI 121 [ D.17784 ])
        (zero_extend:DI (reg:SI 120 [ D.17781 ]))) imalib.c:577 -1
     (nil))
(insn 221 220 222 28 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
                (minus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
                    (reg:DI 121 [ D.17784 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:577 -1
     (nil))
(code_label 222 221 223 29 74 "" [3 uses])
(note 223 222 224 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:581 -1
     (nil))
(jump_insn 225 224 226 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 247)
            (pc))) imalib.c:581 -1
     (nil)
 -> 247)
(note 226 225 227 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 30 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
            (const_int 3 [0x3]))) imalib.c:583 -1
     (nil))
(jump_insn 228 227 229 30 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 235)
            (pc))) imalib.c:583 -1
     (nil)
 -> 235)
(note 229 228 230 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 231 31 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC47") [flags 0x2]  <var_decl 0x7f6ee6d13bd0 *.LC47>)) imalib.c:584 -1
     (nil))
(call_insn 231 230 232 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:584 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 232 231 233 31 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:585 -1
     (nil))
(jump_insn 233 232 234 31 (set (pc)
        (label_ref 247)) -1
     (nil)
 -> 247)
(barrier 234 233 235)
(code_label 235 234 236 32 78 "" [1 uses])
(note 236 235 237 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 238 32 (set (reg:SI 211)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 littleEndian+0 S4 A32])) imalib.c:588 -1
     (nil))
(insn 238 237 239 32 (set (reg:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])) imalib.c:588 -1
     (nil))
(insn 239 238 240 32 (set (reg:SI 4 si)
        (reg:SI 211)) imalib.c:588 -1
     (nil))
(insn 240 239 241 32 (set (reg:DI 5 di)
        (reg:DI 212)) imalib.c:588 -1
     (nil))
(call_insn 241 240 242 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("IMA_Uint32_Convert") [flags 0x3]  <function_decl 0x7f6ee6ff4bd0 IMA_Uint32_Convert>) [0 IMA_Uint32_Convert S1 A8])
            (const_int 0 [0]))) imalib.c:588 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 242 241 243 32 (set (reg:SI 122 [ D.17781 ])
        (reg:SI 0 ax)) imalib.c:588 -1
     (nil))
(insn 243 242 244 32 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:588 -1
     (nil))
(insn 244 243 245 32 (set (mem/j:SI (plus:DI (reg/f:DI 213)
                (const_int 112 [0x70])) [0 imaTemplateData_65(D)->fileNameLength+0 S4 A32])
        (reg:SI 122 [ D.17781 ])) imalib.c:588 -1
     (nil))
(insn 245 244 246 32 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:589 -1
     (nil))
(insn 246 245 247 32 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:590 -1
     (nil))
(code_label 247 246 248 33 77 "" [2 uses])
(note 248 247 249 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:594 -1
     (nil))
(jump_insn 250 249 251 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 295)
            (pc))) imalib.c:594 -1
     (nil)
 -> 295)
(note 251 250 252 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 252 251 253 34 (set (reg/f:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:596 -1
     (nil))
(insn 253 252 254 34 (set (reg:SI 123 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 214)
                (const_int 112 [0x70])) [0 imaTemplateData_65(D)->fileNameLength+0 S4 A32])) imalib.c:596 -1
     (nil))
(insn 254 253 255 34 (set (reg:DI 124 [ D.17784 ])
        (zero_extend:DI (reg:SI 123 [ D.17781 ]))) imalib.c:596 -1
     (nil))
(insn 255 254 256 34 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 124 [ D.17784 ])
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64]))) imalib.c:596 -1
     (nil))
(jump_insn 256 255 257 34 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) imalib.c:596 -1
     (nil)
 -> 263)
(note 257 256 258 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 258 257 259 35 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC48") [flags 0x2]  <var_decl 0x7f6ee6d13c60 *.LC48>)) imalib.c:597 -1
     (nil))
(call_insn 259 258 260 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:597 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 260 259 261 35 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:598 -1
     (nil))
(jump_insn 261 260 262 35 (set (pc)
        (label_ref 295)) -1
     (nil)
 -> 295)
(barrier 262 261 263)
(code_label 263 262 264 36 80 "" [1 uses])
(note 264 263 265 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 36 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:600 -1
     (nil))
(insn 266 265 267 36 (set (reg:SI 125 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 215)
                (const_int 112 [0x70])) [0 imaTemplateData_65(D)->fileNameLength+0 S4 A32])) imalib.c:600 -1
     (nil))
(insn 267 266 268 36 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 125 [ D.17781 ])
            (const_int 4097 [0x1001]))) imalib.c:600 -1
     (nil))
(jump_insn 268 267 269 36 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 275)
            (pc))) imalib.c:600 -1
     (nil)
 -> 275)
(note 269 268 270 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 270 269 271 37 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC49") [flags 0x2]  <var_decl 0x7f6ee6d13cf0 *.LC49>)) imalib.c:601 -1
     (nil))
(call_insn 271 270 272 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:601 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 272 271 273 37 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:602 -1
     (nil))
(jump_insn 273 272 274 37 (set (pc)
        (label_ref 295)) -1
     (nil)
 -> 295)
(barrier 274 273 275)
(code_label 275 274 276 38 81 "" [1 uses])
(note 276 275 277 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 277 276 278 38 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:605 -1
     (nil))
(insn 278 277 279 38 (set (reg:SI 126 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 216)
                (const_int 112 [0x70])) [0 imaTemplateData_65(D)->fileNameLength+0 S4 A32])) imalib.c:605 -1
     (nil))
(insn 279 278 280 38 (set (reg:DI 127 [ D.17784 ])
        (zero_extend:DI (reg:SI 126 [ D.17781 ]))) imalib.c:605 -1
     (nil))
(insn 280 279 281 38 (set (reg/f:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:605 -1
     (nil))
(insn 281 280 282 38 (parallel [
            (set (reg/f:DI 128 [ D.17787 ])
                (plus:DI (reg/f:DI 217)
                    (const_int 116 [0x74])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:605 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])
            (const_int 116 [0x74]))
        (nil)))
(insn 282 281 283 38 (set (reg:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])) imalib.c:605 -1
     (nil))
(insn 283 282 284 38 (set (reg:DI 1 dx)
        (reg:DI 127 [ D.17784 ])) imalib.c:605 -1
     (nil))
(insn 284 283 285 38 (set (reg:DI 4 si)
        (reg:DI 218)) imalib.c:605 -1
     (nil))
(insn 285 284 286 38 (set (reg:DI 5 di)
        (reg/f:DI 128 [ D.17787 ])) imalib.c:605 -1
     (nil))
(call_insn 286 285 287 38 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7f6ee78bbe58 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) imalib.c:605 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 287 286 288 38 (set (reg/f:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:606 -1
     (nil))
(insn 288 287 289 38 (set (reg:SI 129 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 219)
                (const_int 112 [0x70])) [0 imaTemplateData_65(D)->fileNameLength+0 S4 A32])) imalib.c:606 -1
     (nil))
(insn 289 288 290 38 (set (reg:DI 130 [ D.17786 ])
        (zero_extend:DI (reg:SI 129 [ D.17781 ]))) imalib.c:606 -1
     (nil))
(insn 290 289 291 38 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])
                    (reg:DI 130 [ D.17786 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:606 -1
     (nil))
(insn 291 290 292 38 (set (reg/f:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:607 -1
     (nil))
(insn 292 291 293 38 (set (reg:SI 131 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 220)
                (const_int 112 [0x70])) [0 imaTemplateData_65(D)->fileNameLength+0 S4 A32])) imalib.c:607 -1
     (nil))
(insn 293 292 294 38 (set (reg:DI 132 [ D.17784 ])
        (zero_extend:DI (reg:SI 131 [ D.17781 ]))) imalib.c:607 -1
     (nil))
(insn 294 293 295 38 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
                (minus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
                    (reg:DI 132 [ D.17784 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:607 -1
     (nil))
(code_label 295 294 296 39 79 "" [3 uses])
(note 296 295 297 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 298 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:611 -1
     (nil))
(jump_insn 298 297 299 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 312)
            (pc))) imalib.c:611 -1
     (nil)
 -> 312)
(note 299 298 300 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 301 40 (set (reg/f:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:612 -1
     (nil))
(insn 301 300 302 40 (set (reg:SI 133 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 221)
                (const_int 112 [0x70])) [0 imaTemplateData_65(D)->fileNameLength+0 S4 A32])) imalib.c:612 -1
     (nil))
(insn 302 301 303 40 (parallel [
            (set (reg:SI 134 [ D.17781 ])
                (plus:SI (reg:SI 133 [ D.17781 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:612 -1
     (nil))
(insn 303 302 304 40 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:612 -1
     (nil))
(insn 304 303 305 40 (set (reg:DI 223)
        (zero_extend:DI (reg:SI 134 [ D.17781 ]))) imalib.c:612 -1
     (nil))
(insn 305 304 306 40 (set (reg:QI 135 [ D.17788 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 222)
                    (reg:DI 223))
                (const_int 116 [0x74])) [0 imaTemplateData_65(D)->fileName S1 A8])) imalib.c:612 -1
     (nil))
(insn 306 305 307 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 135 [ D.17788 ])
            (const_int 0 [0]))) imalib.c:612 -1
     (nil))
(jump_insn 307 306 308 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 312)
            (pc))) imalib.c:612 -1
     (nil)
 -> 312)
(note 308 307 309 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 41 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC50") [flags 0x2]  <var_decl 0x7f6ee6d13d80 *.LC50>)) imalib.c:613 -1
     (nil))
(call_insn 310 309 311 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:613 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 311 310 312 41 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:614 -1
     (nil))
(code_label 312 311 313 42 82 "" [2 uses])
(note 313 312 314 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 314 313 315 42 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 imaEvent+0 S8 A64])) imalib.c:617 -1
     (nil))
(insn 315 314 316 42 (set (reg:SI 136 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 224)
                (const_int 284 [0x11c])) [0 imaEvent_52(D)->nameInt+0 S4 A32])) imalib.c:617 -1
     (nil))
(insn 316 315 317 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 136 [ D.17781 ])
            (const_int 2 [0x2]))) imalib.c:617 -1
     (nil))
(jump_insn 317 316 318 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 527)
            (pc))) imalib.c:617 -1
     (nil)
 -> 527)
(note 318 317 319 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 319 318 320 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:619 -1
     (nil))
(jump_insn 320 319 321 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 527)
            (pc))) imalib.c:619 -1
     (nil)
 -> 527)
(note 321 320 322 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 44 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
            (const_int 3 [0x3]))) imalib.c:621 -1
     (nil))
(jump_insn 323 322 324 44 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 330)
            (pc))) imalib.c:621 -1
     (nil)
 -> 330)
(note 324 323 325 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 325 324 326 45 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC51") [flags 0x2]  <var_decl 0x7f6ee6d13e10 *.LC51>)) imalib.c:622 -1
     (nil))
(call_insn 326 325 327 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:622 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 327 326 328 45 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:624 -1
     (nil))
(jump_insn 328 327 329 45 (set (pc)
        (label_ref 342)) -1
     (nil)
 -> 342)
(barrier 329 328 330)
(code_label 330 329 331 46 84 "" [1 uses])
(note 331 330 332 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 332 331 333 46 (set (reg:SI 225)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 littleEndian+0 S4 A32])) imalib.c:627 -1
     (nil))
(insn 333 332 334 46 (set (reg:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])) imalib.c:627 -1
     (nil))
(insn 334 333 335 46 (set (reg:SI 4 si)
        (reg:SI 225)) imalib.c:627 -1
     (nil))
(insn 335 334 336 46 (set (reg:DI 5 di)
        (reg:DI 226)) imalib.c:627 -1
     (nil))
(call_insn 336 335 337 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("IMA_Uint32_Convert") [flags 0x3]  <function_decl 0x7f6ee6ff4bd0 IMA_Uint32_Convert>) [0 IMA_Uint32_Convert S1 A8])
            (const_int 0 [0]))) imalib.c:627 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 337 336 338 46 (set (reg:SI 137 [ D.17781 ])
        (reg:SI 0 ax)) imalib.c:627 -1
     (nil))
(insn 338 337 339 46 (set (reg/f:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:627 -1
     (nil))
(insn 339 338 340 46 (set (mem/j:SI (plus:DI (reg/f:DI 227)
                (const_int 4216 [0x1078])) [0 imaTemplateData_65(D)->sigLength+0 S4 A32])
        (reg:SI 137 [ D.17781 ])) imalib.c:627 -1
     (nil))
(insn 340 339 341 46 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:628 -1
     (nil))
(insn 341 340 342 46 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:629 -1
     (nil))
(code_label 342 341 343 47 85 "" [1 uses])
(note 343 342 344 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 345 47 (set (reg/f:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:632 -1
     (nil))
(insn 345 344 346 47 (set (reg:SI 138 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 228)
                (const_int 4216 [0x1078])) [0 imaTemplateData_65(D)->sigLength+0 S4 A32])) imalib.c:632 -1
     (nil))
(insn 346 345 347 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138 [ D.17781 ])
            (const_int 0 [0]))) imalib.c:632 -1
     (nil))
(jump_insn 347 346 348 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 527)
            (pc))) imalib.c:632 -1
     (nil)
 -> 527)
(note 348 347 349 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 350 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:633 -1
     (nil))
(jump_insn 350 349 351 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 385)
            (pc))) imalib.c:633 -1
     (nil)
 -> 385)
(note 351 350 352 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 352 351 353 49 (set (reg/f:DI 229)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:634 -1
     (nil))
(insn 353 352 354 49 (set (mem/j:SI (plus:DI (reg/f:DI 229)
                (const_int 4220 [0x107c])) [0 imaTemplateData_65(D)->sigHeaderLength+0 S4 A32])
        (const_int 9 [0x9])) imalib.c:634 -1
     (nil))
(insn 354 353 355 49 (set (reg/f:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:636 -1
     (nil))
(insn 355 354 356 49 (set (reg:SI 139 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 230)
                (const_int 4220 [0x107c])) [0 imaTemplateData_65(D)->sigHeaderLength+0 S4 A32])) imalib.c:636 -1
     (nil))
(insn 356 355 357 49 (set (reg:DI 140 [ D.17784 ])
        (zero_extend:DI (reg:SI 139 [ D.17781 ]))) imalib.c:636 -1
     (nil))
(insn 357 356 358 49 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 140 [ D.17784 ])
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64]))) imalib.c:636 -1
     (nil))
(jump_insn 358 357 359 49 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 365)
            (pc))) imalib.c:636 -1
     (nil)
 -> 365)
(note 359 358 360 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 360 359 361 50 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC52") [flags 0x2]  <var_decl 0x7f6ee6d13ea0 *.LC52>)) imalib.c:637 -1
     (nil))
(call_insn 361 360 362 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:637 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 362 361 363 50 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:639 -1
     (nil))
(jump_insn 363 362 364 50 (set (pc)
        (label_ref 385)) -1
     (nil)
 -> 385)
(barrier 364 363 365)
(code_label 365 364 366 51 87 "" [1 uses])
(note 366 365 367 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 367 366 368 51 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:643 -1
     (nil))
(insn 368 367 369 51 (set (reg:SI 141 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 231)
                (const_int 4220 [0x107c])) [0 imaTemplateData_65(D)->sigHeaderLength+0 S4 A32])) imalib.c:643 -1
     (nil))
(insn 369 368 370 51 (set (reg:DI 142 [ D.17784 ])
        (zero_extend:DI (reg:SI 141 [ D.17781 ]))) imalib.c:642 -1
     (nil))
(insn 370 369 371 51 (set (reg/f:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:642 -1
     (nil))
(insn 371 370 372 51 (parallel [
            (set (reg/f:DI 143 [ D.17789 ])
                (plus:DI (reg/f:DI 232)
                    (const_int 4224 [0x1080])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:642 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])
            (const_int 4224 [0x1080]))
        (nil)))
(insn 372 371 373 51 (set (reg:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])) imalib.c:642 -1
     (nil))
(insn 373 372 374 51 (set (reg:DI 1 dx)
        (reg:DI 142 [ D.17784 ])) imalib.c:642 -1
     (nil))
(insn 374 373 375 51 (set (reg:DI 4 si)
        (reg:DI 233)) imalib.c:642 -1
     (nil))
(insn 375 374 376 51 (set (reg:DI 5 di)
        (reg/f:DI 143 [ D.17789 ])) imalib.c:642 -1
     (nil))
(call_insn 376 375 377 51 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7f6ee78bbe58 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) imalib.c:642 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 377 376 378 51 (set (reg/f:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:644 -1
     (nil))
(insn 378 377 379 51 (set (reg:SI 144 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 234)
                (const_int 4220 [0x107c])) [0 imaTemplateData_65(D)->sigHeaderLength+0 S4 A32])) imalib.c:644 -1
     (nil))
(insn 379 378 380 51 (set (reg:DI 145 [ D.17786 ])
        (zero_extend:DI (reg:SI 144 [ D.17781 ]))) imalib.c:644 -1
     (nil))
(insn 380 379 381 51 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])
                    (reg:DI 145 [ D.17786 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:644 -1
     (nil))
(insn 381 380 382 51 (set (reg/f:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:645 -1
     (nil))
(insn 382 381 383 51 (set (reg:SI 146 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 235)
                (const_int 4220 [0x107c])) [0 imaTemplateData_65(D)->sigHeaderLength+0 S4 A32])) imalib.c:645 -1
     (nil))
(insn 383 382 384 51 (set (reg:DI 147 [ D.17784 ])
        (zero_extend:DI (reg:SI 146 [ D.17781 ]))) imalib.c:645 -1
     (nil))
(insn 384 383 385 51 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
                (minus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
                    (reg:DI 147 [ D.17784 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:645 -1
     (nil))
(code_label 385 384 386 52 86 "" [2 uses])
(note 386 385 387 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 387 386 388 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:649 -1
     (nil))
(jump_insn 388 387 389 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 400)
            (pc))) imalib.c:649 -1
     (nil)
 -> 400)
(note 389 388 390 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 53 (set (reg/f:DI 236)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:652 -1
     (nil))
(insn 391 390 392 53 (parallel [
            (set (reg/f:DI 148 [ D.17789 ])
                (plus:DI (reg/f:DI 236)
                    (const_int 4224 [0x1080])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:652 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])
            (const_int 4224 [0x1080]))
        (nil)))
(insn 392 391 393 53 (parallel [
            (set (reg/f:DI 149 [ D.17790 ])
                (plus:DI (reg/f:DI 148 [ D.17789 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:652 -1
     (nil))
(insn 393 392 394 53 (set (reg:HI 150 [ D.17791 ])
        (mem:HI (reg/f:DI 149 [ D.17790 ]) [0 *_176+0 S2 A16])) imalib.c:652 -1
     (nil))
(insn 394 393 395 53 (set (reg:SI 151 [ D.17780 ])
        (zero_extend:SI (reg:HI 150 [ D.17791 ]))) imalib.c:652 -1
     (nil))
(insn 395 394 396 53 (set (reg:SI 5 di)
        (reg:SI 151 [ D.17780 ])) imalib.c:652 -1
     (nil))
(call_insn/u 396 395 397 53 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ntohs") [flags 0x41]  <function_decl 0x7f6ee7677ca8 ntohs>) [0 ntohs S1 A8])
            (const_int 0 [0]))) imalib.c:652 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 397 396 398 53 (set (reg:HI 152 [ D.17791 ])
        (reg:HI 0 ax)) imalib.c:652 -1
     (nil))
(insn 398 397 399 53 (set (reg/f:DI 237)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:651 -1
     (nil))
(insn 399 398 400 53 (set (mem/j:HI (plus:DI (reg/f:DI 237)
                (const_int 4234 [0x108a])) [0 imaTemplateData_65(D)->signatureSize+0 S2 A16])
        (reg:HI 152 [ D.17791 ])) imalib.c:651 -1
     (nil))
(code_label 400 399 401 54 88 "" [1 uses])
(note 401 400 402 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 402 401 403 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:655 -1
     (nil))
(jump_insn 403 402 404 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 474)
            (pc))) imalib.c:655 -1
     (nil)
 -> 474)
(note 404 403 405 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 405 404 406 55 (set (reg/f:DI 238)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:656 -1
     (nil))
(insn 406 405 407 55 (set (reg:QI 153 [ D.17788 ])
        (mem/j:QI (plus:DI (reg/f:DI 238)
                (const_int 4226 [0x1082])) [0 imaTemplateData_65(D)->sigHeader+2 S1 A16])) imalib.c:656 -1
     (nil))
(insn 407 406 408 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 153 [ D.17788 ])
            (const_int 2 [0x2]))) imalib.c:657 -1
     (nil))
(jump_insn 408 407 409 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 414)
            (pc))) imalib.c:657 -1
     (nil)
 -> 414)
(note 409 408 410 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 410 409 411 56 (set (reg/f:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:657 -1
     (nil))
(insn 411 410 412 56 (set (mem/j:SI (plus:DI (reg/f:DI 239)
                (const_int 72 [0x48])) [0 imaTemplateData_65(D)->hashNid+0 S4 A32])
        (const_int 64 [0x40])) imalib.c:657 -1
     (nil))
(jump_insn 412 411 413 56 (set (pc)
        (label_ref 423)) -1
     (nil)
 -> 423)
(barrier 413 412 414)
(code_label 414 413 415 57 90 "" [1 uses])
(note 415 414 416 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 416 415 417 57 (set (reg/f:DI 240)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:658 -1
     (nil))
(insn 417 416 418 57 (set (reg:QI 154 [ D.17788 ])
        (mem/j:QI (plus:DI (reg/f:DI 240)
                (const_int 4226 [0x1082])) [0 imaTemplateData_65(D)->sigHeader+2 S1 A16])) imalib.c:658 -1
     (nil))
(insn 418 417 419 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 154 [ D.17788 ])
            (const_int 4 [0x4]))) imalib.c:657 -1
     (nil))
(jump_insn 419 418 420 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 428)
            (pc))) imalib.c:657 -1
     (nil)
 -> 428)
(note 420 419 421 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 421 420 422 58 (set (reg/f:DI 241)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:659 -1
     (nil))
(insn 422 421 423 58 (set (mem/j:SI (plus:DI (reg/f:DI 241)
                (const_int 72 [0x48])) [0 imaTemplateData_65(D)->hashNid+0 S4 A32])
        (const_int 672 [0x2a0])) imalib.c:659 -1
     (nil))
(code_label 423 422 424 59 91 "" [1 uses])
(note 424 423 425 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 425 424 426 59 (set (reg:SI 87 [ D.17780 ])
        (const_int 1 [0x1])) imalib.c:657 -1
     (nil))
(jump_insn 426 425 427 59 (set (pc)
        (label_ref 431)) imalib.c:657 -1
     (nil)
 -> 431)
(barrier 427 426 428)
(code_label 428 427 429 60 92 "" [1 uses])
(note 429 428 430 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 430 429 431 60 (set (reg:SI 87 [ D.17780 ])
        (const_int 0 [0])) imalib.c:657 -1
     (nil))
(code_label 431 430 432 61 93 "" [1 uses])
(note 432 431 433 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 433 432 434 61 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 goodHashAlgo+0 S4 A32])
        (reg:SI 87 [ D.17780 ])) imalib.c:656 -1
     (nil))
(insn 434 433 435 61 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:660 -1
     (nil))
(insn 435 434 436 61 (set (reg:HI 155 [ D.17791 ])
        (mem/j:HI (plus:DI (reg/f:DI 242)
                (const_int 4234 [0x108a])) [0 imaTemplateData_65(D)->signatureSize+0 S2 A16])) imalib.c:660 -1
     (nil))
(insn 436 435 437 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 155 [ D.17791 ])
            (const_int 128 [0x80]))) imalib.c:660 -1
     (nil))
(jump_insn 437 436 438 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 443)
            (pc))) imalib.c:660 -1
     (nil)
 -> 443)
(note 438 437 439 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 439 438 440 62 (set (reg/f:DI 243)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:661 -1
     (nil))
(insn 440 439 441 62 (set (reg:HI 156 [ D.17791 ])
        (mem/j:HI (plus:DI (reg/f:DI 243)
                (const_int 4234 [0x108a])) [0 imaTemplateData_65(D)->signatureSize+0 S2 A16])) imalib.c:661 -1
     (nil))
(insn 441 440 442 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 156 [ D.17791 ])
            (const_int 256 [0x100]))) imalib.c:660 -1
     (nil))
(jump_insn 442 441 443 62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 448)
            (pc))) imalib.c:660 -1
     (nil)
 -> 448)
(code_label 443 442 444 63 94 "" [1 uses])
(note 444 443 445 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 445 444 446 63 (set (reg:SI 88 [ D.17780 ])
        (const_int 1 [0x1])) imalib.c:660 -1
     (nil))
(jump_insn 446 445 447 63 (set (pc)
        (label_ref 451)) imalib.c:660 -1
     (nil)
 -> 451)
(barrier 447 446 448)
(code_label 448 447 449 64 95 "" [1 uses])
(note 449 448 450 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 450 449 451 64 (set (reg:SI 88 [ D.17780 ])
        (const_int 0 [0])) imalib.c:660 -1
     (nil))
(code_label 451 450 452 65 96 "" [1 uses])
(note 452 451 453 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 454 65 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 goodSigSize+0 S4 A32])
        (reg:SI 88 [ D.17780 ])) imalib.c:660 -1
     (nil))
(insn 454 453 455 65 (set (reg/f:DI 244)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:664 -1
     (nil))
(insn 455 454 456 65 (set (reg:QI 157 [ D.17788 ])
        (mem/j:QI (plus:DI (reg/f:DI 244)
                (const_int 4224 [0x1080])) [0 imaTemplateData_65(D)->sigHeader+0 S1 A32])) imalib.c:664 -1
     (nil))
(insn 456 455 457 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 157 [ D.17788 ])
            (const_int 3 [0x3]))) imalib.c:663 -1
     (nil))
(jump_insn 457 456 458 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 469)
            (pc))) imalib.c:663 -1
     (nil)
 -> 469)
(note 458 457 459 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 459 458 460 66 (set (reg/f:DI 245)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:665 -1
     (nil))
(insn 460 459 461 66 (set (reg:QI 158 [ D.17788 ])
        (mem/j:QI (plus:DI (reg/f:DI 245)
                (const_int 4225 [0x1081])) [0 imaTemplateData_65(D)->sigHeader+1 S1 A8])) imalib.c:665 -1
     (nil))
(insn 461 460 462 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ D.17788 ])
            (const_int 2 [0x2]))) imalib.c:664 -1
     (nil))
(jump_insn 462 461 463 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 469)
            (pc))) imalib.c:664 -1
     (nil)
 -> 469)
(note 463 462 464 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 464 463 465 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 goodHashAlgo+0 S4 A32])
            (const_int 0 [0]))) imalib.c:665 -1
     (nil))
(jump_insn 465 464 466 67 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 469)
            (pc))) imalib.c:665 -1
     (nil)
 -> 469)
(note 466 465 467 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 467 466 468 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 goodSigSize+0 S4 A32])
            (const_int 0 [0]))) imalib.c:666 -1
     (nil))
(jump_insn 468 467 469 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 474)
            (pc))) imalib.c:666 -1
     (nil)
 -> 474)
(code_label 469 468 470 69 97 "" [3 uses])
(note 470 469 471 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 471 470 472 69 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC53") [flags 0x2]  <var_decl 0x7f6ee6d13f30 *.LC53>)) imalib.c:670 -1
     (nil))
(call_insn 472 471 473 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:670 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 473 472 474 69 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:671 -1
     (nil))
(code_label 474 473 475 70 89 "" [2 uses])
(note 475 474 476 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 477 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:675 -1
     (nil))
(jump_insn 477 476 478 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 527)
            (pc))) imalib.c:675 -1
     (nil)
 -> 527)
(note 478 477 479 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 479 478 480 71 (set (reg/f:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:677 -1
     (nil))
(insn 480 479 481 71 (set (reg:HI 159 [ D.17791 ])
        (mem/j:HI (plus:DI (reg/f:DI 246)
                (const_int 4234 [0x108a])) [0 imaTemplateData_65(D)->signatureSize+0 S2 A16])) imalib.c:677 -1
     (nil))
(insn 481 480 482 71 (set (reg:DI 160 [ D.17784 ])
        (zero_extend:DI (reg:HI 159 [ D.17791 ]))) imalib.c:677 -1
     (nil))
(insn 482 481 483 71 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 160 [ D.17784 ])
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64]))) imalib.c:677 -1
     (nil))
(jump_insn 483 482 484 71 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 490)
            (pc))) imalib.c:677 -1
     (nil)
 -> 490)
(note 484 483 485 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 485 484 486 72 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC54") [flags 0x2]  <var_decl 0x7f6ee6d29000 *.LC54>)) imalib.c:678 -1
     (nil))
(call_insn 486 485 487 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:678 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 487 486 488 72 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:680 -1
     (nil))
(jump_insn 488 487 489 72 (set (pc)
        (label_ref 527)) -1
     (nil)
 -> 527)
(barrier 489 488 490)
(code_label 490 489 491 73 98 "" [1 uses])
(note 491 490 492 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 73 (set (reg/f:DI 247)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:683 -1
     (nil))
(insn 493 492 494 73 (set (reg:SI 161 [ D.17781 ])
        (mem/j:SI (plus:DI (reg/f:DI 247)
                (const_int 4216 [0x1078])) [0 imaTemplateData_65(D)->sigLength+0 S4 A32])) imalib.c:683 -1
     (nil))
(insn 494 493 495 73 (set (reg:DI 162 [ D.17784 ])
        (zero_extend:DI (reg:SI 161 [ D.17781 ]))) imalib.c:683 -1
     (nil))
(insn 495 494 496 73 (set (reg/f:DI 248)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:685 -1
     (nil))
(insn 496 495 497 73 (set (reg:HI 163 [ D.17791 ])
        (mem/j:HI (plus:DI (reg/f:DI 248)
                (const_int 4234 [0x108a])) [0 imaTemplateData_65(D)->signatureSize+0 S2 A16])) imalib.c:685 -1
     (nil))
(insn 497 496 498 73 (set (reg:DI 164 [ D.17784 ])
        (zero_extend:DI (reg:HI 163 [ D.17791 ]))) imalib.c:684 -1
     (nil))
(insn 498 497 499 73 (parallel [
            (set (reg:DI 165 [ D.17784 ])
                (plus:DI (reg:DI 164 [ D.17784 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:684 -1
     (nil))
(insn 499 498 500 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 162 [ D.17784 ])
            (reg:DI 165 [ D.17784 ]))) imalib.c:683 -1
     (nil))
(jump_insn 500 499 501 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 507)
            (pc))) imalib.c:683 -1
     (nil)
 -> 507)
(note 501 500 502 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 502 501 503 74 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC55") [flags 0x2]  <var_decl 0x7f6ee6d29090 *.LC55>)) imalib.c:686 -1
     (nil))
(call_insn 503 502 504 74 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:686 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 504 503 505 74 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:688 -1
     (nil))
(jump_insn 505 504 506 74 (set (pc)
        (label_ref 527)) -1
     (nil)
 -> 527)
(barrier 506 505 507)
(code_label 507 506 508 75 99 "" [1 uses])
(note 508 507 509 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 509 508 510 75 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:692 -1
     (nil))
(insn 510 509 511 75 (set (reg:HI 166 [ D.17791 ])
        (mem/j:HI (plus:DI (reg/f:DI 249)
                (const_int 4234 [0x108a])) [0 imaTemplateData_65(D)->signatureSize+0 S2 A16])) imalib.c:692 -1
     (nil))
(insn 511 510 512 75 (set (reg:DI 167 [ D.17784 ])
        (zero_extend:DI (reg:HI 166 [ D.17791 ]))) imalib.c:691 -1
     (nil))
(insn 512 511 513 75 (set (reg/f:DI 250)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:691 -1
     (nil))
(insn 513 512 514 75 (parallel [
            (set (reg/f:DI 168 [ D.17792 ])
                (plus:DI (reg/f:DI 250)
                    (const_int 4236 [0x108c])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:691 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])
            (const_int 4236 [0x108c]))
        (nil)))
(insn 514 513 515 75 (set (reg:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])) imalib.c:691 -1
     (nil))
(insn 515 514 516 75 (set (reg:DI 1 dx)
        (reg:DI 167 [ D.17784 ])) imalib.c:691 -1
     (nil))
(insn 516 515 517 75 (set (reg:DI 4 si)
        (reg:DI 251)) imalib.c:691 -1
     (nil))
(insn 517 516 518 75 (set (reg:DI 5 di)
        (reg/f:DI 168 [ D.17792 ])) imalib.c:691 -1
     (nil))
(call_insn 518 517 519 75 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7f6ee78bbe58 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) imalib.c:691 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 519 518 520 75 (set (reg/f:DI 252)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:693 -1
     (nil))
(insn 520 519 521 75 (set (reg:HI 169 [ D.17791 ])
        (mem/j:HI (plus:DI (reg/f:DI 252)
                (const_int 4234 [0x108a])) [0 imaTemplateData_65(D)->signatureSize+0 S2 A16])) imalib.c:693 -1
     (nil))
(insn 521 520 522 75 (set (reg:DI 170 [ D.17786 ])
        (zero_extend:DI (reg:HI 169 [ D.17791 ]))) imalib.c:693 -1
     (nil))
(insn 522 521 523 75 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 buffer+0 S8 A64])
                    (reg:DI 170 [ D.17786 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:693 -1
     (nil))
(insn 523 522 524 75 (set (reg/f:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 imaTemplateData+0 S8 A64])) imalib.c:694 -1
     (nil))
(insn 524 523 525 75 (set (reg:HI 171 [ D.17791 ])
        (mem/j:HI (plus:DI (reg/f:DI 253)
                (const_int 4234 [0x108a])) [0 imaTemplateData_65(D)->signatureSize+0 S2 A16])) imalib.c:694 -1
     (nil))
(insn 525 524 526 75 (set (reg:DI 172 [ D.17784 ])
        (zero_extend:DI (reg:HI 171 [ D.17791 ]))) imalib.c:694 -1
     (nil))
(insn 526 525 527 75 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
                (minus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
                    (reg:DI 172 [ D.17784 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:694 -1
     (nil))
(code_label 527 526 528 76 83 "" [6 uses])
(note 528 527 529 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 529 528 530 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:701 -1
     (nil))
(jump_insn 530 529 531 76 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 538)
            (pc))) imalib.c:701 -1
     (nil)
 -> 538)
(note 531 530 532 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 532 531 533 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 length+0 S8 A64])
            (const_int 0 [0]))) imalib.c:702 -1
     (nil))
(jump_insn 533 532 534 77 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 538)
            (pc))) imalib.c:702 -1
     (nil)
 -> 538)
(note 534 533 535 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 535 534 536 78 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC56") [flags 0x2]  <var_decl 0x7f6ee6d29120 *.LC56>)) imalib.c:703 -1
     (nil))
(call_insn 536 535 537 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6ee78c8360 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) imalib.c:703 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 537 536 538 78 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:705 -1
     (nil))
(code_label 538 537 539 79 100 "" [2 uses])
(note 539 538 540 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 540 539 543 79 (set (reg:SI 173 [ D.17793 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 rc+0 S4 A32])) imalib.c:708 -1
     (nil))
(insn 543 540 547 79 (set (reg:SI 174 [ <retval> ])
        (reg:SI 173 [ D.17793 ])) imalib.c:708 -1
     (nil))
(insn 547 543 548 79 (set (reg/i:SI 0 ax)
        (reg:SI 174 [ <retval> ])) imalib.c:709 -1
     (nil))
(insn 548 547 0 79 (use (reg/i:SI 0 ax)) imalib.c:709 -1
     (nil))

;; Function IMA_Event_Write (IMA_Event_Write, funcdef_no=9, decl_uid=16943, cgraph_uid=9, symbol_order=9)

Partition 1: size 8 align 8
	writeSize_21
Partition 0: size 4 align 4
	rc_1
Partition 2: size 4 align 4
	nbo32

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 22 into block 21...
Merged blocks 21 and 22.
Merged 21 and 22 without moving.
Removing jump 178.
Merging block 23 into block 21...
Merged blocks 21 and 23.
Merged 21 and 23 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 imaEvent+0 S8 A64])
        (reg:DI 5 di [ imaEvent ])) imalib.c:718 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 outFile+0 S8 A64])
        (reg:DI 4 si [ outFile ])) imalib.c:718 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.17819+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:718 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (const_int 0 [0])) imalib.c:719 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:723 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) imalib.c:723 -1
     (nil)
 -> 36)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 imaEvent+0 S8 A64])) imalib.c:725 -1
     (nil))
(insn 13 12 14 4 (set (reg:SI 87 [ D.17813 ])
        (mem/j:SI (reg/f:DI 102) [0 imaEvent_15(D)->pcrIndex+0 S4 A64])) imalib.c:725 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 5 di)
        (reg:SI 87 [ D.17813 ])) imalib.c:725 -1
     (nil))
(call_insn/u 15 14 16 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("htonl") [flags 0x41]  <function_decl 0x7f6ee7677d80 htonl>) [0 htonl S1 A8])
            (const_int 0 [0]))) imalib.c:725 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 16 15 17 4 (set (reg:SI 88 [ D.17813 ])
        (reg:SI 0 ax)) imalib.c:725 -1
     (nil))
(insn 17 16 18 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nbo32+0 S4 A64])
        (reg:SI 88 [ D.17813 ])) imalib.c:725 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 outFile+0 S8 A64])) imalib.c:727 -1
     (nil))
(insn 19 18 20 4 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:727 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 2 cx)
        (reg:DI 103)) imalib.c:727 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) imalib.c:727 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 4 si)
        (const_int 4 [0x4])) imalib.c:727 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 5 di)
        (reg:DI 104)) imalib.c:727 -1
     (nil))
(call_insn 24 23 25 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7f6ee78c5948 fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) imalib.c:727 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 25 24 26 4 (set (reg:DI 105)
        (reg:DI 0 ax)) imalib.c:727 -1
     (nil))
(insn 26 25 27 4 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])
        (reg:DI 105)) imalib.c:727 -1
     (nil))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])
            (const_int 1 [0x1]))) imalib.c:728 -1
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) imalib.c:728 -1
     (nil)
 -> 36)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg:DI 106)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])) imalib.c:729 -1
     (nil))
(insn 31 30 32 5 (set (reg:DI 4 si)
        (reg:DI 106)) imalib.c:729 -1
     (nil))
(insn 32 31 33 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC57") [flags 0x2]  <var_decl 0x7f6ee6d39120 *.LC57>)) imalib.c:729 -1
     (nil))
(insn 33 32 34 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:729 -1
     (nil))
(call_insn 34 33 35 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:729 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 35 34 36 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:731 -1
     (nil))
(code_label 36 35 37 6 103 "" [2 uses])
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:735 -1
     (nil))
(jump_insn 39 38 40 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) imalib.c:735 -1
     (nil)
 -> 60)
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 imaEvent+0 S8 A64])) imalib.c:736 -1
     (nil))
(insn 42 41 43 7 (parallel [
            (set (reg/f:DI 89 [ D.17814 ])
                (plus:DI (reg/f:DI 107)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:736 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 imaEvent+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 43 42 44 7 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 outFile+0 S8 A64])) imalib.c:736 -1
     (nil))
(insn 44 43 45 7 (set (reg:DI 2 cx)
        (reg:DI 108)) imalib.c:736 -1
     (nil))
(insn 45 44 46 7 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) imalib.c:736 -1
     (nil))
(insn 46 45 47 7 (set (reg:DI 4 si)
        (const_int 20 [0x14])) imalib.c:736 -1
     (nil))
(insn 47 46 48 7 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.17814 ])) imalib.c:736 -1
     (nil))
(call_insn 48 47 49 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7f6ee78c5948 fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) imalib.c:736 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 49 48 50 7 (set (reg:DI 109)
        (reg:DI 0 ax)) imalib.c:736 -1
     (nil))
(insn 50 49 51 7 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])
        (reg:DI 109)) imalib.c:736 -1
     (nil))
(insn 51 50 52 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])
            (const_int 1 [0x1]))) imalib.c:737 -1
     (nil))
(jump_insn 52 51 53 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) imalib.c:737 -1
     (nil)
 -> 60)
(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 8 (set (reg:DI 110)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])) imalib.c:738 -1
     (nil))
(insn 55 54 56 8 (set (reg:DI 4 si)
        (reg:DI 110)) imalib.c:738 -1
     (nil))
(insn 56 55 57 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC58") [flags 0x2]  <var_decl 0x7f6ee6d391b0 *.LC58>)) imalib.c:738 -1
     (nil))
(insn 57 56 58 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:738 -1
     (nil))
(call_insn 58 57 59 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:738 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 59 58 60 8 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:740 -1
     (nil))
(code_label 60 59 61 9 104 "" [2 uses])
(note 61 60 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:744 -1
     (nil))
(jump_insn 63 62 64 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) imalib.c:744 -1
     (nil)
 -> 89)
(note 64 63 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 10 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 imaEvent+0 S8 A64])) imalib.c:746 -1
     (nil))
(insn 66 65 67 10 (set (reg:SI 90 [ D.17813 ])
        (mem/j:SI (plus:DI (reg/f:DI 111)
                (const_int 24 [0x18])) [0 imaEvent_15(D)->name_len+0 S4 A64])) imalib.c:746 -1
     (nil))
(insn 67 66 68 10 (set (reg:SI 5 di)
        (reg:SI 90 [ D.17813 ])) imalib.c:746 -1
     (nil))
(call_insn/u 68 67 69 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("htonl") [flags 0x41]  <function_decl 0x7f6ee7677d80 htonl>) [0 htonl S1 A8])
            (const_int 0 [0]))) imalib.c:746 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 69 68 70 10 (set (reg:SI 91 [ D.17813 ])
        (reg:SI 0 ax)) imalib.c:746 -1
     (nil))
(insn 70 69 71 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nbo32+0 S4 A64])
        (reg:SI 91 [ D.17813 ])) imalib.c:746 -1
     (nil))
(insn 71 70 72 10 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 outFile+0 S8 A64])) imalib.c:748 -1
     (nil))
(insn 72 71 73 10 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:748 -1
     (nil))
(insn 73 72 74 10 (set (reg:DI 2 cx)
        (reg:DI 112)) imalib.c:748 -1
     (nil))
(insn 74 73 75 10 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) imalib.c:748 -1
     (nil))
(insn 75 74 76 10 (set (reg:DI 4 si)
        (const_int 4 [0x4])) imalib.c:748 -1
     (nil))
(insn 76 75 77 10 (set (reg:DI 5 di)
        (reg:DI 113)) imalib.c:748 -1
     (nil))
(call_insn 77 76 78 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7f6ee78c5948 fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) imalib.c:748 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 78 77 79 10 (set (reg:DI 114)
        (reg:DI 0 ax)) imalib.c:748 -1
     (nil))
(insn 79 78 80 10 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])
        (reg:DI 114)) imalib.c:748 -1
     (nil))
(insn 80 79 81 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])
            (const_int 1 [0x1]))) imalib.c:749 -1
     (nil))
(jump_insn 81 80 82 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) imalib.c:749 -1
     (nil)
 -> 89)
(note 82 81 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 11 (set (reg:DI 115)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])) imalib.c:750 -1
     (nil))
(insn 84 83 85 11 (set (reg:DI 4 si)
        (reg:DI 115)) imalib.c:750 -1
     (nil))
(insn 85 84 86 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC59") [flags 0x2]  <var_decl 0x7f6ee6d39240 *.LC59>)) imalib.c:750 -1
     (nil))
(insn 86 85 87 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:750 -1
     (nil))
(call_insn 87 86 88 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:750 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 88 87 89 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:752 -1
     (nil))
(code_label 89 88 90 12 105 "" [2 uses])
(note 90 89 91 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:756 -1
     (nil))
(jump_insn 92 91 93 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) imalib.c:756 -1
     (nil)
 -> 116)
(note 93 92 94 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 13 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 imaEvent+0 S8 A64])) imalib.c:757 -1
     (nil))
(insn 95 94 96 13 (set (reg:SI 92 [ D.17813 ])
        (mem/j:SI (plus:DI (reg/f:DI 116)
                (const_int 24 [0x18])) [0 imaEvent_15(D)->name_len+0 S4 A64])) imalib.c:757 -1
     (nil))
(insn 96 95 97 13 (set (reg:DI 93 [ D.17815 ])
        (zero_extend:DI (reg:SI 92 [ D.17813 ]))) imalib.c:757 -1
     (nil))
(insn 97 96 98 13 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 imaEvent+0 S8 A64])) imalib.c:757 -1
     (nil))
(insn 98 97 99 13 (parallel [
            (set (reg/f:DI 94 [ D.17816 ])
                (plus:DI (reg/f:DI 117)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:757 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 imaEvent+0 S8 A64])
            (const_int 28 [0x1c]))
        (nil)))
(insn 99 98 100 13 (set (reg:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 outFile+0 S8 A64])) imalib.c:757 -1
     (nil))
(insn 100 99 101 13 (set (reg:DI 2 cx)
        (reg:DI 118)) imalib.c:757 -1
     (nil))
(insn 101 100 102 13 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) imalib.c:757 -1
     (nil))
(insn 102 101 103 13 (set (reg:DI 4 si)
        (reg:DI 93 [ D.17815 ])) imalib.c:757 -1
     (nil))
(insn 103 102 104 13 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.17816 ])) imalib.c:757 -1
     (nil))
(call_insn 104 103 105 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7f6ee78c5948 fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) imalib.c:757 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 105 104 106 13 (set (reg:DI 119)
        (reg:DI 0 ax)) imalib.c:757 -1
     (nil))
(insn 106 105 107 13 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])
        (reg:DI 119)) imalib.c:757 -1
     (nil))
(insn 107 106 108 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])
            (const_int 1 [0x1]))) imalib.c:758 -1
     (nil))
(jump_insn 108 107 109 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) imalib.c:758 -1
     (nil)
 -> 116)
(note 109 108 110 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 14 (set (reg:DI 120)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])) imalib.c:759 -1
     (nil))
(insn 111 110 112 14 (set (reg:DI 4 si)
        (reg:DI 120)) imalib.c:759 -1
     (nil))
(insn 112 111 113 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC60") [flags 0x2]  <var_decl 0x7f6ee6d392d0 *.LC60>)) imalib.c:759 -1
     (nil))
(insn 113 112 114 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:759 -1
     (nil))
(call_insn 114 113 115 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:759 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 115 114 116 14 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:761 -1
     (nil))
(code_label 116 115 117 15 106 "" [2 uses])
(note 117 116 118 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:765 -1
     (nil))
(jump_insn 119 118 120 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) imalib.c:765 -1
     (nil)
 -> 145)
(note 120 119 121 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 16 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 imaEvent+0 S8 A64])) imalib.c:767 -1
     (nil))
(insn 122 121 123 16 (set (reg:SI 95 [ D.17813 ])
        (mem/j:SI (plus:DI (reg/f:DI 121)
                (const_int 296 [0x128])) [0 imaEvent_15(D)->template_data_len+0 S4 A64])) imalib.c:767 -1
     (nil))
(insn 123 122 124 16 (set (reg:SI 5 di)
        (reg:SI 95 [ D.17813 ])) imalib.c:767 -1
     (nil))
(call_insn/u 124 123 125 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("htonl") [flags 0x41]  <function_decl 0x7f6ee7677d80 htonl>) [0 htonl S1 A8])
            (const_int 0 [0]))) imalib.c:767 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 125 124 126 16 (set (reg:SI 96 [ D.17813 ])
        (reg:SI 0 ax)) imalib.c:767 -1
     (nil))
(insn 126 125 127 16 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nbo32+0 S4 A64])
        (reg:SI 96 [ D.17813 ])) imalib.c:767 -1
     (nil))
(insn 127 126 128 16 (set (reg:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 outFile+0 S8 A64])) imalib.c:769 -1
     (nil))
(insn 128 127 129 16 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:769 -1
     (nil))
(insn 129 128 130 16 (set (reg:DI 2 cx)
        (reg:DI 122)) imalib.c:769 -1
     (nil))
(insn 130 129 131 16 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) imalib.c:769 -1
     (nil))
(insn 131 130 132 16 (set (reg:DI 4 si)
        (const_int 4 [0x4])) imalib.c:769 -1
     (nil))
(insn 132 131 133 16 (set (reg:DI 5 di)
        (reg:DI 123)) imalib.c:769 -1
     (nil))
(call_insn 133 132 134 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7f6ee78c5948 fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) imalib.c:769 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 134 133 135 16 (set (reg:DI 124)
        (reg:DI 0 ax)) imalib.c:769 -1
     (nil))
(insn 135 134 136 16 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])
        (reg:DI 124)) imalib.c:769 -1
     (nil))
(insn 136 135 137 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])
            (const_int 1 [0x1]))) imalib.c:770 -1
     (nil))
(jump_insn 137 136 138 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) imalib.c:770 -1
     (nil)
 -> 145)
(note 138 137 139 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 17 (set (reg:DI 125)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])) imalib.c:771 -1
     (nil))
(insn 140 139 141 17 (set (reg:DI 4 si)
        (reg:DI 125)) imalib.c:771 -1
     (nil))
(insn 141 140 142 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC61") [flags 0x2]  <var_decl 0x7f6ee6d39360 *.LC61>)) imalib.c:771 -1
     (nil))
(insn 142 141 143 17 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:771 -1
     (nil))
(call_insn 143 142 144 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:771 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 144 143 145 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:773 -1
     (nil))
(code_label 145 144 146 18 107 "" [2 uses])
(note 146 145 147 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:777 -1
     (nil))
(jump_insn 148 147 149 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) imalib.c:777 -1
     (nil)
 -> 172)
(note 149 148 150 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 19 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 imaEvent+0 S8 A64])) imalib.c:778 -1
     (nil))
(insn 151 150 152 19 (set (reg:SI 97 [ D.17813 ])
        (mem/j:SI (plus:DI (reg/f:DI 126)
                (const_int 296 [0x128])) [0 imaEvent_15(D)->template_data_len+0 S4 A64])) imalib.c:778 -1
     (nil))
(insn 152 151 153 19 (set (reg:DI 98 [ D.17815 ])
        (zero_extend:DI (reg:SI 97 [ D.17813 ]))) imalib.c:778 -1
     (nil))
(insn 153 152 154 19 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 imaEvent+0 S8 A64])) imalib.c:778 -1
     (nil))
(insn 154 153 155 19 (parallel [
            (set (reg/f:DI 99 [ D.17817 ])
                (plus:DI (reg/f:DI 127)
                    (const_int 304 [0x130])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:778 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 imaEvent+0 S8 A64])
            (const_int 304 [0x130]))
        (nil)))
(insn 155 154 156 19 (set (reg:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 outFile+0 S8 A64])) imalib.c:778 -1
     (nil))
(insn 156 155 157 19 (set (reg:DI 2 cx)
        (reg:DI 128)) imalib.c:778 -1
     (nil))
(insn 157 156 158 19 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) imalib.c:778 -1
     (nil))
(insn 158 157 159 19 (set (reg:DI 4 si)
        (reg:DI 98 [ D.17815 ])) imalib.c:778 -1
     (nil))
(insn 159 158 160 19 (set (reg:DI 5 di)
        (reg/f:DI 99 [ D.17817 ])) imalib.c:778 -1
     (nil))
(call_insn 160 159 161 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7f6ee78c5948 fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) imalib.c:778 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 161 160 162 19 (set (reg:DI 129)
        (reg:DI 0 ax)) imalib.c:778 -1
     (nil))
(insn 162 161 163 19 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])
        (reg:DI 129)) imalib.c:778 -1
     (nil))
(insn 163 162 164 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])
            (const_int 1 [0x1]))) imalib.c:779 -1
     (nil))
(jump_insn 164 163 165 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) imalib.c:779 -1
     (nil)
 -> 172)
(note 165 164 166 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 20 (set (reg:DI 130)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 writeSize+0 S8 A64])) imalib.c:780 -1
     (nil))
(insn 167 166 168 20 (set (reg:DI 4 si)
        (reg:DI 130)) imalib.c:780 -1
     (nil))
(insn 168 167 169 20 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC62") [flags 0x2]  <var_decl 0x7f6ee6d393f0 *.LC62>)) imalib.c:780 -1
     (nil))
(insn 169 168 170 20 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:780 -1
     (nil))
(call_insn 170 169 171 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:780 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 171 170 172 20 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:782 -1
     (nil))
(code_label 172 171 173 21 108 "" [2 uses])
(note 173 172 174 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 177 21 (set (reg:SI 100 [ D.17818 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rc+0 S4 A32])) imalib.c:785 -1
     (nil))
(insn 177 174 181 21 (set (reg:SI 101 [ <retval> ])
        (reg:SI 100 [ D.17818 ])) imalib.c:785 -1
     (nil))
(insn 181 177 182 21 (set (reg/i:SI 0 ax)
        (reg:SI 101 [ <retval> ])) imalib.c:786 -1
     (nil))
(insn 182 181 183 21 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.17819+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) imalib.c:786 -1
     (nil))
(jump_insn 183 182 189 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 186)
            (pc))) imalib.c:786 -1
     (nil)
 -> 186)
(note 189 183 184 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(call_insn 184 189 185 24 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f6ee6c96af8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) imalib.c:786 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 185 184 186)
(code_label 186 185 190 25 110 "" [1 uses])
(note 190 186 187 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 187 190 0 25 (use (reg/i:SI 0 ax)) imalib.c:786 -1
     (nil))

;; Function IMA_Extend (IMA_Extend, funcdef_no=10, decl_uid=16947, cgraph_uid=10, symbol_order=10)

Partition 5: size 32 align 16
	oneDigest
Partition 4: size 32 align 16
	zeroDigest
Partition 3: size 4 align 4
	notAllZero_25
Partition 0: size 4 align 4
	rc_1
Partition 2: size 2 align 2
	zeroPad_4
Partition 1: size 2 align 2
	digestSize_3

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.
Removing jump 135.
Merging block 17 into block 15...
Merged blocks 15 and 17.
Merged 15 and 17 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 imapcr+0 S8 A64])
        (reg:DI 5 di [ imapcr ])) imalib.c:801 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 imaEvent+0 S8 A64])
        (reg:DI 4 si [ imaEvent ])) imalib.c:801 -1
     (nil))
(insn 4 3 5 2 (set (reg:SI 100)
        (reg:SI 1 dx [ hashAlg ])) imalib.c:801 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -116 [0xffffffffffffff8c])) [0 hashAlg+0 S2 A32])
        (subreg:HI (reg:SI 100) 0)) imalib.c:801 -1
     (nil))
(note 6 5 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 6 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.17833+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:801 -1
     (nil))
(insn 10 7 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 rc+0 S4 A32])
        (const_int 0 [0])) imalib.c:802 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:812 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) imalib.c:812 -1
     (nil)
 -> 48)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:813 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 1 dx)
        (const_int 32 [0x20])) imalib.c:813 -1
     (nil))
(insn 16 15 17 4 (set (reg:SI 4 si)
        (const_int 0 [0])) imalib.c:813 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (reg:DI 101)) imalib.c:813 -1
     (nil))
(call_insn 18 17 19 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f6ee78bc438 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) imalib.c:813 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 19 18 20 4 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:814 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 1 dx)
        (const_int 32 [0x20])) imalib.c:814 -1
     (nil))
(insn 21 20 22 4 (set (reg:SI 4 si)
        (const_int 255 [0xff])) imalib.c:814 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 5 di)
        (reg:DI 102)) imalib.c:814 -1
     (nil))
(call_insn 23 22 24 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f6ee78bc438 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) imalib.c:814 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 24 23 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -116 [0xffffffffffffff8c])) [0 hashAlg+0 S2 A32])
            (const_int 4 [0x4]))) imalib.c:815 -1
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) imalib.c:815 -1
     (nil)
 -> 31)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [0 digestSize+0 S2 A16])
        (const_int 20 [0x14])) imalib.c:816 -1
     (nil))
(insn 28 27 29 5 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -90 [0xffffffffffffffa6])) [0 zeroPad+0 S2 A16])
        (const_int 0 [0])) imalib.c:817 -1
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (label_ref 48)) -1
     (nil)
 -> 48)
(barrier 30 29 31)
(code_label 31 30 32 6 113 "" [1 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -116 [0xffffffffffffff8c])) [0 hashAlg+0 S2 A32])
            (const_int 11 [0xb]))) imalib.c:819 -1
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) imalib.c:819 -1
     (nil)
 -> 40)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [0 digestSize+0 S2 A16])
        (const_int 32 [0x20])) imalib.c:820 -1
     (nil))
(insn 37 36 38 7 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -90 [0xffffffffffffffa6])) [0 zeroPad+0 S2 A16])
        (const_int 12 [0xc])) imalib.c:822 -1
     (nil))
(jump_insn 38 37 39 7 (set (pc)
        (label_ref 48)) -1
     (nil)
 -> 48)
(barrier 39 38 40)
(code_label 40 39 41 8 114 "" [1 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:SI 87 [ D.17828 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -116 [0xffffffffffffff8c])) [0 hashAlg+0 S2 A32]))) imalib.c:825 -1
     (nil))
(insn 43 42 44 8 (set (reg:SI 4 si)
        (reg:SI 87 [ D.17828 ])) imalib.c:825 -1
     (nil))
(insn 44 43 45 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC63") [flags 0x2]  <var_decl 0x7f6ee6d462d0 *.LC63>)) imalib.c:825 -1
     (nil))
(insn 45 44 46 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:825 -1
     (nil))
(call_insn 46 45 47 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:825 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 47 46 48 8 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:826 -1
     (nil))
(code_label 48 47 49 9 112 "" [3 uses])
(note 49 48 50 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:829 -1
     (nil))
(jump_insn 51 50 52 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) imalib.c:829 -1
     (nil)
 -> 119)
(note 52 51 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 10 (set (reg:DI 88 [ D.17829 ])
        (zero_extend:DI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -92 [0xffffffffffffffa4])) [0 digestSize+0 S2 A16]))) imalib.c:830 -1
     (nil))
(insn 54 53 55 10 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 imaEvent+0 S8 A64])) imalib.c:830 -1
     (nil))
(insn 55 54 56 10 (parallel [
            (set (reg/f:DI 89 [ D.17830 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:830 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -112 [0xffffffffffffff90])) [0 imaEvent+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 56 55 57 10 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:830 -1
     (nil))
(insn 57 56 58 10 (set (reg:DI 1 dx)
        (reg:DI 88 [ D.17829 ])) imalib.c:830 -1
     (nil))
(insn 58 57 59 10 (set (reg:DI 4 si)
        (reg:DI 104)) imalib.c:830 -1
     (nil))
(insn 59 58 60 10 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.17830 ])) imalib.c:830 -1
     (nil))
(call_insn/i 60 59 61 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcmp") [flags 0x41]  <function_decl 0x7f6ee78bbca8 memcmp>) [0 __builtin_memcmp S1 A8])
            (const_int 0 [0]))) imalib.c:830 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 61 60 62 10 (set (reg:SI 105)
        (reg:SI 0 ax)) imalib.c:830 -1
     (nil))
(insn 62 61 63 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [0 notAllZero+0 S4 A32])
        (reg:SI 105)) imalib.c:830 -1
     (nil))
(insn 63 62 64 10 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 imapcr+0 S8 A64])) imalib.c:831 -1
     (nil))
(insn 64 63 65 10 (set (reg:HI 107)
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -116 [0xffffffffffffff8c])) [0 hashAlg+0 S2 A32])) imalib.c:831 -1
     (nil))
(insn 65 64 66 10 (set (mem/j:HI (reg/f:DI 106) [0 imapcr_26(D)->hashAlg+0 S2 A16])
        (reg:HI 107)) imalib.c:831 -1
     (nil))
(insn 66 65 67 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -84 [0xffffffffffffffac])) [0 notAllZero+0 S4 A32])
            (const_int 0 [0]))) imalib.c:832 -1
     (nil))
(jump_insn 67 66 68 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) imalib.c:832 -1
     (nil)
 -> 94)
(note 68 67 69 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 11 (set (reg:SI 90 [ D.17828 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -90 [0xffffffffffffffa6])) [0 zeroPad+0 S2 A16]))) imalib.c:838 -1
     (nil))
(insn 70 69 71 11 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 imaEvent+0 S8 A64])) imalib.c:838 -1
     (nil))
(insn 71 70 72 11 (parallel [
            (set (reg/f:DI 91 [ D.17830 ])
                (plus:DI (reg/f:DI 108)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:838 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -112 [0xffffffffffffff90])) [0 imaEvent+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 72 71 73 11 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 imapcr+0 S8 A64])) imalib.c:839 -1
     (nil))
(insn 73 72 74 11 (parallel [
            (set (reg/f:DI 92 [ D.17831 ])
                (plus:DI (reg/f:DI 109)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:839 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [0 imapcr+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 74 73 75 11 (set (reg:SI 93 [ D.17828 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -92 [0xffffffffffffffa4])) [0 digestSize+0 S2 A16]))) imalib.c:838 -1
     (nil))
(insn 75 74 76 11 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 imapcr+0 S8 A64])) imalib.c:838 -1
     (nil))
(insn 76 75 77 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:838 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 77 76 78 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) imalib.c:838 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 78 77 79 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) imalib.c:838 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 79 78 80 11 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:838 -1
     (nil))
(insn 80 79 81 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 111)) imalib.c:838 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 81 80 82 11 (set (reg:SI 38 r9)
        (reg:SI 90 [ D.17828 ])) imalib.c:838 -1
     (nil))
(insn 82 81 83 11 (set (reg:DI 37 r8)
        (reg/f:DI 91 [ D.17830 ])) imalib.c:838 -1
     (nil))
(insn 83 82 84 11 (set (reg:SI 2 cx)
        (const_int 20 [0x14])) imalib.c:838 -1
     (nil))
(insn 84 83 85 11 (set (reg:DI 1 dx)
        (reg/f:DI 92 [ D.17831 ])) imalib.c:838 -1
     (nil))
(insn 85 84 86 11 (set (reg:SI 4 si)
        (reg:SI 93 [ D.17828 ])) imalib.c:838 -1
     (nil))
(insn 86 85 87 11 (set (reg:DI 5 di)
        (reg:DI 110)) imalib.c:838 -1
     (nil))
(insn 87 86 88 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:838 -1
     (nil))
(call_insn 88 87 89 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Hash_Generate") [flags 0x41]  <function_decl 0x7f6ee716dca8 TSS_Hash_Generate>) [0 TSS_Hash_Generate S1 A8])
            (const_int 32 [0x20]))) imalib.c:838 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 89 88 90 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:838 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 90 89 91 11 (set (reg:SI 112)
        (reg:SI 0 ax)) imalib.c:838 -1
     (nil))
(insn 91 90 92 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 rc+0 S4 A32])
        (reg:SI 112)) imalib.c:838 -1
     (nil))
(jump_insn 92 91 93 11 (set (pc)
        (label_ref 119)) -1
     (nil)
 -> 119)
(barrier 93 92 94)
(code_label 94 93 95 12 116 "" [1 uses])
(note 95 94 96 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 12 (set (reg:SI 94 [ D.17828 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -90 [0xffffffffffffffa6])) [0 zeroPad+0 S2 A16]))) imalib.c:848 -1
     (nil))
(insn 97 96 98 12 (set (reg:SI 95 [ D.17828 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -92 [0xffffffffffffffa4])) [0 digestSize+0 S2 A16]))) imalib.c:848 -1
     (nil))
(insn 98 97 99 12 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 imapcr+0 S8 A64])) imalib.c:849 -1
     (nil))
(insn 99 98 100 12 (parallel [
            (set (reg/f:DI 96 [ D.17831 ])
                (plus:DI (reg/f:DI 113)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:849 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [0 imapcr+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 100 99 101 12 (set (reg:SI 97 [ D.17828 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -92 [0xffffffffffffffa4])) [0 digestSize+0 S2 A16]))) imalib.c:848 -1
     (nil))
(insn 101 100 102 12 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:848 -1
     (nil))
(insn 102 101 103 12 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 imapcr+0 S8 A64])) imalib.c:848 -1
     (nil))
(insn 103 102 104 12 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:848 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 104 103 105 12 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (const_int 0 [0])) imalib.c:848 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 105 104 106 12 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 0 [0])) imalib.c:848 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 106 105 107 12 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:848 -1
     (nil))
(insn 107 106 108 12 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 116)) imalib.c:848 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 108 107 109 12 (set (reg:SI 38 r9)
        (reg:SI 94 [ D.17828 ])) imalib.c:848 -1
     (nil))
(insn 109 108 110 12 (set (reg:DI 37 r8)
        (reg:DI 114)) imalib.c:848 -1
     (nil))
(insn 110 109 111 12 (set (reg:SI 2 cx)
        (reg:SI 95 [ D.17828 ])) imalib.c:848 -1
     (nil))
(insn 111 110 112 12 (set (reg:DI 1 dx)
        (reg/f:DI 96 [ D.17831 ])) imalib.c:848 -1
     (nil))
(insn 112 111 113 12 (set (reg:SI 4 si)
        (reg:SI 97 [ D.17828 ])) imalib.c:848 -1
     (nil))
(insn 113 112 114 12 (set (reg:DI 5 di)
        (reg:DI 115)) imalib.c:848 -1
     (nil))
(insn 114 113 115 12 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:848 -1
     (nil))
(call_insn 115 114 116 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Hash_Generate") [flags 0x41]  <function_decl 0x7f6ee716dca8 TSS_Hash_Generate>) [0 TSS_Hash_Generate S1 A8])
            (const_int 32 [0x20]))) imalib.c:848 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 116 115 117 12 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:848 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 117 116 118 12 (set (reg:SI 117)
        (reg:SI 0 ax)) imalib.c:848 -1
     (nil))
(insn 118 117 119 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 rc+0 S4 A32])
        (reg:SI 117)) imalib.c:848 -1
     (nil))
(code_label 119 118 120 13 115 "" [2 uses])
(note 120 119 121 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:856 -1
     (nil))
(jump_insn 122 121 123 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) imalib.c:856 -1
     (nil)
 -> 129)
(note 123 122 124 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 14 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 rc+0 S4 A32])) imalib.c:857 -1
     (nil))
(insn 125 124 126 14 (set (reg:SI 4 si)
        (reg:SI 118)) imalib.c:857 -1
     (nil))
(insn 126 125 127 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC64") [flags 0x2]  <var_decl 0x7f6ee6d46360 *.LC64>)) imalib.c:857 -1
     (nil))
(insn 127 126 128 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:857 -1
     (nil))
(call_insn 128 127 129 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:857 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 129 128 130 15 117 "" [1 uses])
(note 130 129 131 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 134 15 (set (reg:SI 98 [ D.17832 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 rc+0 S4 A32])) imalib.c:859 -1
     (nil))
(insn 134 131 138 15 (set (reg:SI 99 [ <retval> ])
        (reg:SI 98 [ D.17832 ])) imalib.c:859 -1
     (nil))
(insn 138 134 139 15 (set (reg/i:SI 0 ax)
        (reg:SI 99 [ <retval> ])) imalib.c:860 -1
     (nil))
(insn 139 138 140 15 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.17833+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) imalib.c:860 -1
     (nil))
(jump_insn 140 139 146 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) imalib.c:860 -1
     (nil)
 -> 143)
(note 146 140 141 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(call_insn 141 146 142 18 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f6ee6c96af8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) imalib.c:860 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 142 141 143)
(code_label 143 142 147 19 119 "" [1 uses])
(note 147 143 144 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 144 147 0 19 (use (reg/i:SI 0 ax)) imalib.c:860 -1
     (nil))

;; Function IMA_VerifyImaDigest (IMA_VerifyImaDigest, funcdef_no=11, decl_uid=16951, cgraph_uid=11, symbol_order=11)

Partition 2: size 50 align 16
	calculatedImaDigest
Partition 1: size 4 align 4
	irc_21
Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.
Removing jump 100.
Merging block 17 into block 15...
Merged blocks 15 and 17.
Merged 15 and 17 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 badEvent+0 S8 A64])
        (reg:DI 5 di [ badEvent ])) imalib.c:870 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 imaEvent+0 S8 A64])
        (reg:DI 4 si [ imaEvent ])) imalib.c:870 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [0 eventNum+0 S4 A32])
        (reg:SI 1 dx [ eventNum ])) imalib.c:870 -1
     (nil))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.17841+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:870 -1
     (nil))
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 rc+0 S4 A32])
        (const_int 0 [0])) imalib.c:871 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -72 [0xffffffffffffffb8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:876 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) imalib.c:876 -1
     (nil)
 -> 28)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 calculatedImaDigest.hashAlg+0 S2 A64])
        (const_int 4 [0x4])) imalib.c:877 -1
     (nil))
(insn 14 13 15 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 imaEvent+0 S8 A64])) imalib.c:878 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 87 [ D.17836 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 96)
                (const_int 304 [0x130])) [0 imaEvent_10(D)->template_data+0 S8 A64])) imalib.c:878 -1
     (nil))
(insn 16 15 17 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 imaEvent+0 S8 A64])) imalib.c:878 -1
     (nil))
(insn 17 16 18 4 (set (reg:SI 88 [ D.17837 ])
        (mem/j:SI (plus:DI (reg/f:DI 97)
                (const_int 296 [0x128])) [0 imaEvent_10(D)->template_data_len+0 S4 A64])) imalib.c:878 -1
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:878 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 37 r8)
        (const_int 0 [0])) imalib.c:878 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 2 cx)
        (const_int 0 [0])) imalib.c:878 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 1 dx)
        (reg/f:DI 87 [ D.17836 ])) imalib.c:878 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 4 si)
        (reg:SI 88 [ D.17837 ])) imalib.c:878 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 5 di)
        (reg:DI 98)) imalib.c:878 -1
     (nil))
(insn 24 23 25 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:878 -1
     (nil))
(call_insn 25 24 26 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Hash_Generate") [flags 0x41]  <function_decl 0x7f6ee716dca8 TSS_Hash_Generate>) [0 TSS_Hash_Generate S1 A8])
            (const_int 0 [0]))) imalib.c:878 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 26 25 27 4 (set (reg:SI 99)
        (reg:SI 0 ax)) imalib.c:878 -1
     (nil))
(insn 27 26 28 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 rc+0 S4 A32])
        (reg:SI 99)) imalib.c:878 -1
     (nil))
(code_label 28 27 29 5 121 "" [1 uses])
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -72 [0xffffffffffffffb8])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:883 -1
     (nil))
(jump_insn 31 30 32 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) imalib.c:883 -1
     (nil)
 -> 94)
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg:SI 89 [ D.17838 ])
        (mem/c:SI (symbol_ref:DI ("vverbose") [flags 0x40]  <var_decl 0x7f6ee7161630 vverbose>) [0 vverbose+0 S4 A32])) imalib.c:884 -1
     (nil))
(insn 34 33 35 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.17838 ])
            (const_int 0 [0]))) imalib.c:884 -1
     (nil))
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) imalib.c:884 -1
     (nil)
 -> 43)
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 imaEvent+0 S8 A64])) imalib.c:885 -1
     (nil))
(insn 38 37 39 7 (parallel [
            (set (reg/f:DI 90 [ D.17839 ])
                (plus:DI (reg/f:DI 100)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:885 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [0 imaEvent+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 39 38 40 7 (set (reg:SI 1 dx)
        (const_int 20 [0x14])) imalib.c:884 -1
     (nil))
(insn 40 39 41 7 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.17839 ])) imalib.c:884 -1
     (nil))
(insn 41 40 42 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC65") [flags 0x2]  <var_decl 0x7f6ee6d532d0 *.LC65>)) imalib.c:884 -1
     (nil))
(call_insn 42 41 43 7 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7f6ee6f97e58 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) imalib.c:884 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(code_label 43 42 44 8 123 "" [1 uses])
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (set (reg:SI 91 [ D.17838 ])
        (mem/c:SI (symbol_ref:DI ("vverbose") [flags 0x40]  <var_decl 0x7f6ee7161630 vverbose>) [0 vverbose+0 S4 A32])) imalib.c:886 -1
     (nil))
(insn 46 45 47 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.17838 ])
            (const_int 0 [0]))) imalib.c:886 -1
     (nil))
(jump_insn 47 46 48 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) imalib.c:886 -1
     (nil)
 -> 55)
(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 9 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:886 -1
     (nil))
(insn 50 49 51 9 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg:DI 101)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:886 -1
     (nil))
(insn 51 50 52 9 (set (reg:SI 1 dx)
        (const_int 20 [0x14])) imalib.c:886 -1
     (nil))
(insn 52 51 53 9 (set (reg:DI 4 si)
        (reg:DI 102)) imalib.c:886 -1
     (nil))
(insn 53 52 54 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC66") [flags 0x2]  <var_decl 0x7f6ee6d53360 *.LC66>)) imalib.c:886 -1
     (nil))
(call_insn 54 53 55 9 (call (mem:QI (symbol_ref:DI ("TSS_PrintAll") [flags 0x41]  <function_decl 0x7f6ee6f97e58 TSS_PrintAll>) [0 TSS_PrintAll S1 A8])
        (const_int 0 [0])) imalib.c:886 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(code_label 55 54 56 10 124 "" [1 uses])
(note 56 55 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 10 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 imaEvent+0 S8 A64])) imalib.c:889 -1
     (nil))
(insn 58 57 59 10 (parallel [
            (set (reg/f:DI 92 [ D.17839 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:889 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [0 imaEvent+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 59 58 60 10 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:889 -1
     (nil))
(insn 60 59 61 10 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg:DI 104)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:889 -1
     (nil))
(insn 61 60 62 10 (set (reg:DI 1 dx)
        (const_int 20 [0x14])) imalib.c:889 -1
     (nil))
(insn 62 61 63 10 (set (reg:DI 4 si)
        (reg:DI 105)) imalib.c:889 -1
     (nil))
(insn 63 62 64 10 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.17839 ])) imalib.c:889 -1
     (nil))
(call_insn/i 64 63 65 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcmp") [flags 0x41]  <function_decl 0x7f6ee78bbca8 memcmp>) [0 __builtin_memcmp S1 A8])
            (const_int 0 [0]))) imalib.c:889 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 65 64 66 10 (set (reg:SI 106)
        (reg:SI 0 ax)) imalib.c:889 -1
     (nil))
(insn 66 65 67 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 irc+0 S4 A32])
        (reg:SI 106)) imalib.c:889 -1
     (nil))
(insn 67 66 68 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -68 [0xffffffffffffffbc])) [0 irc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:890 -1
     (nil))
(jump_insn 68 67 69 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) imalib.c:890 -1
     (nil)
 -> 85)
(note 69 68 70 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 11 (set (reg:SI 93 [ D.17838 ])
        (mem/c:SI (symbol_ref:DI ("vverbose") [flags 0x40]  <var_decl 0x7f6ee7161630 vverbose>) [0 vverbose+0 S4 A32])) imalib.c:891 -1
     (nil))
(insn 71 70 72 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.17838 ])
            (const_int 0 [0]))) imalib.c:891 -1
     (nil))
(jump_insn 72 71 73 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) imalib.c:891 -1
     (nil)
 -> 79)
(note 73 72 74 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 12 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [0 eventNum+0 S4 A32])) imalib.c:891 -1
     (nil))
(insn 75 74 76 12 (set (reg:SI 4 si)
        (reg:SI 107)) imalib.c:891 -1
     (nil))
(insn 76 75 77 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC67") [flags 0x2]  <var_decl 0x7f6ee6d533f0 *.LC67>)) imalib.c:891 -1
     (nil))
(insn 77 76 78 12 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:891 -1
     (nil))
(call_insn 78 77 79 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:891 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 79 78 80 13 126 "" [1 uses])
(note 80 79 81 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 13 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 badEvent+0 S8 A64])) imalib.c:892 -1
     (nil))
(insn 82 81 83 13 (set (mem:SI (reg/f:DI 108) [0 *badEvent_25(D)+0 S4 A32])
        (const_int 0 [0])) imalib.c:892 -1
     (nil))
(jump_insn 83 82 84 13 (set (pc)
        (label_ref 94)) -1
     (nil)
 -> 94)
(barrier 84 83 85)
(code_label 85 84 86 14 125 "" [1 uses])
(note 86 85 87 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 14 (set (reg:SI 109)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [0 eventNum+0 S4 A32])) imalib.c:895 -1
     (nil))
(insn 88 87 89 14 (set (reg:SI 4 si)
        (reg:SI 109)) imalib.c:895 -1
     (nil))
(insn 89 88 90 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC68") [flags 0x2]  <var_decl 0x7f6ee6d53480 *.LC68>)) imalib.c:895 -1
     (nil))
(insn 90 89 91 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) imalib.c:895 -1
     (nil))
(call_insn 91 90 92 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ee78c5ca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) imalib.c:895 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 92 91 93 14 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 badEvent+0 S8 A64])) imalib.c:897 -1
     (nil))
(insn 93 92 94 14 (set (mem:SI (reg/f:DI 110) [0 *badEvent_25(D)+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:897 -1
     (nil))
(code_label 94 93 95 15 122 "" [2 uses])
(note 95 94 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 99 15 (set (reg:SI 94 [ D.17840 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 rc+0 S4 A32])) imalib.c:900 -1
     (nil))
(insn 99 96 103 15 (set (reg:SI 95 [ <retval> ])
        (reg:SI 94 [ D.17840 ])) imalib.c:900 -1
     (nil))
(insn 103 99 104 15 (set (reg/i:SI 0 ax)
        (reg:SI 95 [ <retval> ])) imalib.c:901 -1
     (nil))
(insn 104 103 105 15 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.17841+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) imalib.c:901 -1
     (nil))
(jump_insn 105 104 111 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) imalib.c:901 -1
     (nil)
 -> 108)
(note 111 105 106 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(call_insn 106 111 107 18 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f6ee6c96af8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) imalib.c:901 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 107 106 108)
(code_label 108 107 112 19 128 "" [1 uses])
(note 112 108 109 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 109 112 0 19 (use (reg/i:SI 0 ax)) imalib.c:901 -1
     (nil))

;; Function IMA_Uint32_Convert (IMA_Uint32_Convert, funcdef_no=12, decl_uid=16959, cgraph_uid=12, symbol_order=12)

Partition 0: size 4 align 4
	out_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 65.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 stream+0 S8 A64])
        (reg:DI 5 di [ stream ])) imalib.c:908 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 littleEndian+0 S4 A32])
        (reg:SI 4 si [ littleEndian ])) imalib.c:908 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 out+0 S4 A32])
        (const_int 0 [0])) imalib.c:909 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 littleEndian+0 S4 A32])
            (const_int 0 [0]))) imalib.c:912 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) imalib.c:912 -1
     (nil)
 -> 35)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 stream+0 S8 A64])) imalib.c:913 -1
     (nil))
(insn 12 11 13 4 (set (reg:QI 87 [ D.17846 ])
        (mem:QI (reg/f:DI 123) [0 *stream_5(D)+0 S1 A8])) imalib.c:913 -1
     (nil))
(insn 13 12 14 4 (set (reg:SI 88 [ D.17847 ])
        (zero_extend:SI (reg:QI 87 [ D.17846 ]))) imalib.c:913 -1
     (nil))
(insn 14 13 15 4 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 stream+0 S8 A64])) imalib.c:914 -1
     (nil))
(insn 15 14 16 4 (parallel [
            (set (reg/f:DI 89 [ D.17848 ])
                (plus:DI (reg/f:DI 124)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:914 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 stream+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 16 15 17 4 (set (reg:QI 90 [ D.17846 ])
        (mem:QI (reg/f:DI 89 [ D.17848 ]) [0 *_8+0 S1 A8])) imalib.c:914 -1
     (nil))
(insn 17 16 18 4 (set (reg:SI 91 [ D.17847 ])
        (zero_extend:SI (reg:QI 90 [ D.17846 ]))) imalib.c:914 -1
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:SI 92 [ D.17847 ])
                (ashift:SI (reg:SI 91 [ D.17847 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:914 -1
     (nil))
(insn 19 18 20 4 (parallel [
            (set (reg:SI 93 [ D.17847 ])
                (ior:SI (reg:SI 88 [ D.17847 ])
                    (reg:SI 92 [ D.17847 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:913 -1
     (nil))
(insn 20 19 21 4 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 stream+0 S8 A64])) imalib.c:915 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/f:DI 94 [ D.17848 ])
                (plus:DI (reg/f:DI 125)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:915 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 stream+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 22 21 23 4 (set (reg:QI 95 [ D.17846 ])
        (mem:QI (reg/f:DI 94 [ D.17848 ]) [0 *_13+0 S1 A8])) imalib.c:915 -1
     (nil))
(insn 23 22 24 4 (set (reg:SI 96 [ D.17847 ])
        (zero_extend:SI (reg:QI 95 [ D.17846 ]))) imalib.c:915 -1
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg:SI 97 [ D.17847 ])
                (ashift:SI (reg:SI 96 [ D.17847 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:915 -1
     (nil))
(insn 25 24 26 4 (parallel [
            (set (reg:SI 98 [ D.17847 ])
                (ior:SI (reg:SI 93 [ D.17847 ])
                    (reg:SI 97 [ D.17847 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:914 -1
     (nil))
(insn 26 25 27 4 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 stream+0 S8 A64])) imalib.c:916 -1
     (nil))
(insn 27 26 28 4 (parallel [
            (set (reg/f:DI 99 [ D.17848 ])
                (plus:DI (reg/f:DI 126)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:916 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 stream+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 28 27 29 4 (set (reg:QI 100 [ D.17846 ])
        (mem:QI (reg/f:DI 99 [ D.17848 ]) [0 *_18+0 S1 A8])) imalib.c:916 -1
     (nil))
(insn 29 28 30 4 (set (reg:SI 101 [ D.17847 ])
        (zero_extend:SI (reg:QI 100 [ D.17846 ]))) imalib.c:916 -1
     (nil))
(insn 30 29 31 4 (parallel [
            (set (reg:SI 102 [ D.17847 ])
                (ashift:SI (reg:SI 101 [ D.17847 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:916 -1
     (nil))
(insn 31 30 32 4 (parallel [
            (set (reg:SI 103 [ D.17847 ])
                (ior:SI (reg:SI 98 [ D.17847 ])
                    (reg:SI 102 [ D.17847 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:915 -1
     (nil))
(insn 32 31 33 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 out+0 S4 A32])
        (reg:SI 103 [ D.17847 ])) imalib.c:913 -1
     (nil))
(jump_insn 33 32 34 4 (set (pc)
        (label_ref 59)) -1
     (nil)
 -> 59)
(barrier 34 33 35)
(code_label 35 34 36 5 130 "" [1 uses])
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 stream+0 S8 A64])) imalib.c:920 -1
     (nil))
(insn 38 37 39 5 (set (reg:QI 104 [ D.17846 ])
        (mem:QI (reg/f:DI 127) [0 *stream_5(D)+0 S1 A8])) imalib.c:920 -1
     (nil))
(insn 39 38 40 5 (set (reg:SI 105 [ D.17847 ])
        (zero_extend:SI (reg:QI 104 [ D.17846 ]))) imalib.c:920 -1
     (nil))
(insn 40 39 41 5 (parallel [
            (set (reg:SI 106 [ D.17847 ])
                (ashift:SI (reg:SI 105 [ D.17847 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:920 -1
     (nil))
(insn 41 40 42 5 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 stream+0 S8 A64])) imalib.c:921 -1
     (nil))
(insn 42 41 43 5 (parallel [
            (set (reg/f:DI 107 [ D.17848 ])
                (plus:DI (reg/f:DI 128)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:921 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 stream+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 43 42 44 5 (set (reg:QI 108 [ D.17846 ])
        (mem:QI (reg/f:DI 107 [ D.17848 ]) [0 *_27+0 S1 A8])) imalib.c:921 -1
     (nil))
(insn 44 43 45 5 (set (reg:SI 109 [ D.17847 ])
        (zero_extend:SI (reg:QI 108 [ D.17846 ]))) imalib.c:921 -1
     (nil))
(insn 45 44 46 5 (parallel [
            (set (reg:SI 110 [ D.17847 ])
                (ashift:SI (reg:SI 109 [ D.17847 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:921 -1
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg:SI 111 [ D.17847 ])
                (ior:SI (reg:SI 106 [ D.17847 ])
                    (reg:SI 110 [ D.17847 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:920 -1
     (nil))
(insn 47 46 48 5 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 stream+0 S8 A64])) imalib.c:922 -1
     (nil))
(insn 48 47 49 5 (parallel [
            (set (reg/f:DI 112 [ D.17848 ])
                (plus:DI (reg/f:DI 129)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:922 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 stream+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 49 48 50 5 (set (reg:QI 113 [ D.17846 ])
        (mem:QI (reg/f:DI 112 [ D.17848 ]) [0 *_32+0 S1 A8])) imalib.c:922 -1
     (nil))
(insn 50 49 51 5 (set (reg:SI 114 [ D.17847 ])
        (zero_extend:SI (reg:QI 113 [ D.17846 ]))) imalib.c:922 -1
     (nil))
(insn 51 50 52 5 (parallel [
            (set (reg:SI 115 [ D.17847 ])
                (ashift:SI (reg:SI 114 [ D.17847 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:922 -1
     (nil))
(insn 52 51 53 5 (parallel [
            (set (reg:SI 116 [ D.17847 ])
                (ior:SI (reg:SI 111 [ D.17847 ])
                    (reg:SI 115 [ D.17847 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:921 -1
     (nil))
(insn 53 52 54 5 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 stream+0 S8 A64])) imalib.c:923 -1
     (nil))
(insn 54 53 55 5 (parallel [
            (set (reg/f:DI 117 [ D.17848 ])
                (plus:DI (reg/f:DI 130)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:923 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 stream+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 55 54 56 5 (set (reg:QI 118 [ D.17846 ])
        (mem:QI (reg/f:DI 117 [ D.17848 ]) [0 *_37+0 S1 A8])) imalib.c:923 -1
     (nil))
(insn 56 55 57 5 (set (reg:SI 119 [ D.17847 ])
        (zero_extend:SI (reg:QI 118 [ D.17846 ]))) imalib.c:923 -1
     (nil))
(insn 57 56 58 5 (parallel [
            (set (reg:SI 120 [ D.17847 ])
                (ior:SI (reg:SI 116 [ D.17847 ])
                    (reg:SI 119 [ D.17847 ])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:922 -1
     (nil))
(insn 58 57 59 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 out+0 S4 A32])
        (reg:SI 120 [ D.17847 ])) imalib.c:920 -1
     (nil))
(code_label 59 58 60 6 131 "" [1 uses])
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 64 6 (set (reg:SI 121 [ D.17849 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 out+0 S4 A32])) imalib.c:925 -1
     (nil))
(insn 64 61 68 6 (set (reg:SI 122 [ <retval> ])
        (reg:SI 121 [ D.17849 ])) imalib.c:925 -1
     (nil))
(insn 68 64 69 6 (set (reg/i:SI 0 ax)
        (reg:SI 122 [ <retval> ])) imalib.c:926 -1
     (nil))
(insn 69 68 0 6 (use (reg/i:SI 0 ax)) imalib.c:926 -1
     (nil))

;; Function IMA_Strn2cpy (IMA_Strn2cpy, funcdef_no=13, decl_uid=16964, cgraph_uid=13, symbol_order=13)

Partition 1: size 4 align 4
	done_6
Partition 0: size 4 align 4
	rc_5

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 53.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 dest+0 S8 A64])
        (reg:DI 5 di [ dest ])) imalib.c:938 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 src+0 S8 A64])
        (reg:DI 4 si [ src ])) imalib.c:938 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 destLength+0 S8 A64])
        (reg:DI 1 dx [ destLength ])) imalib.c:938 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 srcLength+0 S8 A64])
        (reg:DI 2 cx [ srcLength ])) imalib.c:938 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 rc+0 S4 A32])
        (const_int 0 [0])) imalib.c:939 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 done+0 S4 A32])
        (const_int 0 [0])) imalib.c:940 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (label_ref 33)) imalib.c:942 -1
     (nil)
 -> 33)
(barrier 12 11 38)
(code_label 38 12 13 4 137 "" [1 uses])
(note 13 38 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 src+0 S8 A64])) imalib.c:943 -1
     (nil))
(insn 15 14 16 4 (set (reg:QI 87 [ D.17850 ])
        (mem:QI (reg/f:DI 92) [0 *src_2+0 S1 A8])) imalib.c:943 -1
     (nil))
(insn 16 15 17 4 (set (reg:QI 88 [ D.17851 ])
        (reg:QI 87 [ D.17850 ])) imalib.c:943 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 dest+0 S8 A64])) imalib.c:943 -1
     (nil))
(insn 18 17 19 4 (set (mem:QI (reg/f:DI 93) [0 *dest_1+0 S1 A8])
        (reg:QI 88 [ D.17851 ])) imalib.c:943 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 dest+0 S8 A64])) imalib.c:944 -1
     (nil))
(insn 20 19 21 4 (set (reg:QI 89 [ D.17851 ])
        (mem:QI (reg/f:DI 94) [0 *dest_1+0 S1 A8])) imalib.c:944 -1
     (nil))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ D.17851 ])
            (const_int 0 [0]))) imalib.c:944 -1
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) imalib.c:944 -1
     (nil)
 -> 27)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 done+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:945 -1
     (nil))
(jump_insn 25 24 26 5 (set (pc)
        (label_ref 41)) imalib.c:946 -1
     (nil)
 -> 41)
(barrier 26 25 27)
(code_label 27 26 28 6 135 "" [1 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 dest+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 dest+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:949 -1
     (nil))
(insn 30 29 31 6 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -32 [0xffffffffffffffe0])) [0 src+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 src+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:950 -1
     (nil))
(insn 31 30 32 6 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -40 [0xffffffffffffffd8])) [0 destLength+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -40 [0xffffffffffffffd8])) [0 destLength+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:951 -1
     (nil))
(insn 32 31 33 6 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -48 [0xffffffffffffffd0])) [0 srcLength+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -48 [0xffffffffffffffd0])) [0 srcLength+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:952 -1
     (nil))
(code_label 33 32 34 7 134 "" [1 uses])
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 destLength+0 S8 A64])
            (const_int 0 [0]))) imalib.c:942 -1
     (nil))
(jump_insn 36 35 37 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) imalib.c:942 -1
     (nil)
 -> 41)
(note 37 36 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 37 40 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 srcLength+0 S8 A64])
            (const_int 0 [0]))) imalib.c:942 -1
     (nil))
(jump_insn 40 39 41 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) imalib.c:942 -1
     (nil)
 -> 38)
(code_label 41 40 42 9 136 "" [2 uses])
(note 42 41 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 done+0 S4 A32])
            (const_int 0 [0]))) imalib.c:955 -1
     (nil))
(jump_insn 44 43 45 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) imalib.c:955 -1
     (nil)
 -> 47)
(note 45 44 46 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) imalib.c:956 -1
     (nil))
(code_label 47 46 48 11 138 "" [1 uses])
(note 48 47 49 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 52 11 (set (reg:SI 90 [ D.17852 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 rc+0 S4 A32])) imalib.c:958 -1
     (nil))
(insn 52 49 56 11 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.17852 ])) imalib.c:958 -1
     (nil))
(insn 56 52 57 11 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) imalib.c:959 -1
     (nil))
(insn 57 56 0 11 (use (reg/i:SI 0 ax)) imalib.c:959 -1
     (nil))

;; Function ImaEvent_Marshal (ImaEvent_Marshal, funcdef_no=14, decl_uid=16956, cgraph_uid=14, symbol_order=14)

Partition 0: size 4 align 4
	rc_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.
Removing jump 126.
Merging block 17 into block 15...
Merged blocks 15 and 17.
Merged 15 and 17 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 source+0 S8 A64])
        (reg:DI 5 di [ source ])) imalib.c:965 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 written+0 S8 A64])
        (reg:DI 4 si [ written ])) imalib.c:965 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])
        (reg:DI 1 dx [ buffer ])) imalib.c:965 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 size+0 S8 A64])
        (reg:DI 2 cx [ size ])) imalib.c:965 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (const_int 0 [0])) imalib.c:966 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:968 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) imalib.c:968 -1
     (nil)
 -> 24)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 87 [ D.17853 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 source+0 S8 A64])) imalib.c:969 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 size+0 S8 A64])) imalib.c:969 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:969 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 written+0 S8 A64])) imalib.c:969 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 2 cx)
        (reg:DI 101)) imalib.c:969 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 1 dx)
        (reg:DI 102)) imalib.c:969 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 4 si)
        (reg:DI 103)) imalib.c:969 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.17853 ])) imalib.c:969 -1
     (nil))
(call_insn 21 20 22 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_UINT32_Marshal") [flags 0x41]  <function_decl 0x7f6ee6f355e8 TSS_UINT32_Marshal>) [0 TSS_UINT32_Marshal S1 A8])
            (const_int 0 [0]))) imalib.c:969 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 22 21 23 4 (set (reg:SI 104)
        (reg:SI 0 ax)) imalib.c:969 -1
     (nil))
(insn 23 22 24 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 104)) imalib.c:969 -1
     (nil))
(code_label 24 23 25 5 141 "" [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:971 -1
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) imalib.c:971 -1
     (nil)
 -> 42)
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 source+0 S8 A64])) imalib.c:972 -1
     (nil))
(insn 30 29 31 6 (parallel [
            (set (reg/f:DI 88 [ D.17854 ])
                (plus:DI (reg/f:DI 105)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:972 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 source+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 31 30 32 6 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 size+0 S8 A64])) imalib.c:972 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:972 -1
     (nil))
(insn 33 32 34 6 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 written+0 S8 A64])) imalib.c:972 -1
     (nil))
(insn 34 33 35 6 (set (reg:DI 37 r8)
        (reg:DI 106)) imalib.c:972 -1
     (nil))
(insn 35 34 36 6 (set (reg:DI 2 cx)
        (reg:DI 107)) imalib.c:972 -1
     (nil))
(insn 36 35 37 6 (set (reg:DI 1 dx)
        (reg:DI 108)) imalib.c:972 -1
     (nil))
(insn 37 36 38 6 (set (reg:SI 4 si)
        (const_int 20 [0x14])) imalib.c:972 -1
     (nil))
(insn 38 37 39 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.17854 ])) imalib.c:972 -1
     (nil))
(call_insn 39 38 40 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Array_Marshal") [flags 0x41]  <function_decl 0x7f6ee6f35870 TSS_Array_Marshal>) [0 TSS_Array_Marshal S1 A8])
            (const_int 0 [0]))) imalib.c:972 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 40 39 41 6 (set (reg:SI 109)
        (reg:SI 0 ax)) imalib.c:972 -1
     (nil))
(insn 41 40 42 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 109)) imalib.c:972 -1
     (nil))
(code_label 42 41 43 7 142 "" [1 uses])
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:974 -1
     (nil))
(jump_insn 45 44 46 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) imalib.c:974 -1
     (nil)
 -> 59)
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 8 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 source+0 S8 A64])) imalib.c:975 -1
     (nil))
(insn 48 47 49 8 (parallel [
            (set (reg/f:DI 89 [ D.17853 ])
                (plus:DI (reg/f:DI 110)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:975 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 source+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))
(insn 49 48 50 8 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 size+0 S8 A64])) imalib.c:975 -1
     (nil))
(insn 50 49 51 8 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:975 -1
     (nil))
(insn 51 50 52 8 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 written+0 S8 A64])) imalib.c:975 -1
     (nil))
(insn 52 51 53 8 (set (reg:DI 2 cx)
        (reg:DI 111)) imalib.c:975 -1
     (nil))
(insn 53 52 54 8 (set (reg:DI 1 dx)
        (reg:DI 112)) imalib.c:975 -1
     (nil))
(insn 54 53 55 8 (set (reg:DI 4 si)
        (reg:DI 113)) imalib.c:975 -1
     (nil))
(insn 55 54 56 8 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.17853 ])) imalib.c:975 -1
     (nil))
(call_insn 56 55 57 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_UINT32_Marshal") [flags 0x41]  <function_decl 0x7f6ee6f355e8 TSS_UINT32_Marshal>) [0 TSS_UINT32_Marshal S1 A8])
            (const_int 0 [0]))) imalib.c:975 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 57 56 58 8 (set (reg:SI 114)
        (reg:SI 0 ax)) imalib.c:975 -1
     (nil))
(insn 58 57 59 8 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 114)) imalib.c:975 -1
     (nil))
(code_label 59 58 60 9 143 "" [1 uses])
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:977 -1
     (nil))
(jump_insn 62 61 63 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) imalib.c:977 -1
     (nil)
 -> 81)
(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 10 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 source+0 S8 A64])) imalib.c:978 -1
     (nil))
(insn 65 64 66 10 (set (reg:SI 90 [ D.17855 ])
        (mem/j:SI (plus:DI (reg/f:DI 115)
                (const_int 24 [0x18])) [0 source_15(D)->name_len+0 S4 A64])) imalib.c:978 -1
     (nil))
(insn 66 65 67 10 (set (reg:SI 91 [ D.17856 ])
        (reg:SI 90 [ D.17855 ])) imalib.c:978 -1
     (nil))
(insn 67 66 68 10 (set (reg:SI 92 [ D.17856 ])
        (zero_extend:SI (subreg:HI (reg:SI 91 [ D.17856 ]) 0))) imalib.c:978 -1
     (nil))
(insn 68 67 69 10 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 source+0 S8 A64])) imalib.c:978 -1
     (nil))
(insn 69 68 70 10 (parallel [
            (set (reg/f:DI 93 [ D.17857 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:978 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 source+0 S8 A64])
            (const_int 28 [0x1c]))
        (nil)))
(insn 70 69 71 10 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 size+0 S8 A64])) imalib.c:978 -1
     (nil))
(insn 71 70 72 10 (set (reg:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:978 -1
     (nil))
(insn 72 71 73 10 (set (reg:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 written+0 S8 A64])) imalib.c:978 -1
     (nil))
(insn 73 72 74 10 (set (reg:DI 37 r8)
        (reg:DI 117)) imalib.c:978 -1
     (nil))
(insn 74 73 75 10 (set (reg:DI 2 cx)
        (reg:DI 118)) imalib.c:978 -1
     (nil))
(insn 75 74 76 10 (set (reg:DI 1 dx)
        (reg:DI 119)) imalib.c:978 -1
     (nil))
(insn 76 75 77 10 (set (reg:SI 4 si)
        (reg:SI 92 [ D.17856 ])) imalib.c:978 -1
     (nil))
(insn 77 76 78 10 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.17857 ])) imalib.c:978 -1
     (nil))
(call_insn 78 77 79 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Array_Marshal") [flags 0x41]  <function_decl 0x7f6ee6f35870 TSS_Array_Marshal>) [0 TSS_Array_Marshal S1 A8])
            (const_int 0 [0]))) imalib.c:978 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 79 78 80 10 (set (reg:SI 120)
        (reg:SI 0 ax)) imalib.c:978 -1
     (nil))
(insn 80 79 81 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 120)) imalib.c:978 -1
     (nil))
(code_label 81 80 82 11 144 "" [1 uses])
(note 82 81 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:980 -1
     (nil))
(jump_insn 84 83 85 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) imalib.c:980 -1
     (nil)
 -> 98)
(note 85 84 86 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 12 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 source+0 S8 A64])) imalib.c:981 -1
     (nil))
(insn 87 86 88 12 (parallel [
            (set (reg/f:DI 94 [ D.17853 ])
                (plus:DI (reg/f:DI 121)
                    (const_int 296 [0x128])))
            (clobber (reg:CC 17 flags))
        ]) imalib.c:981 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 source+0 S8 A64])
            (const_int 296 [0x128]))
        (nil)))
(insn 88 87 89 12 (set (reg:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 size+0 S8 A64])) imalib.c:981 -1
     (nil))
(insn 89 88 90 12 (set (reg:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:981 -1
     (nil))
(insn 90 89 91 12 (set (reg:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 written+0 S8 A64])) imalib.c:981 -1
     (nil))
(insn 91 90 92 12 (set (reg:DI 2 cx)
        (reg:DI 122)) imalib.c:981 -1
     (nil))
(insn 92 91 93 12 (set (reg:DI 1 dx)
        (reg:DI 123)) imalib.c:981 -1
     (nil))
(insn 93 92 94 12 (set (reg:DI 4 si)
        (reg:DI 124)) imalib.c:981 -1
     (nil))
(insn 94 93 95 12 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.17853 ])) imalib.c:981 -1
     (nil))
(call_insn 95 94 96 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_UINT32_Marshal") [flags 0x41]  <function_decl 0x7f6ee6f355e8 TSS_UINT32_Marshal>) [0 TSS_UINT32_Marshal S1 A8])
            (const_int 0 [0]))) imalib.c:981 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 96 95 97 12 (set (reg:SI 125)
        (reg:SI 0 ax)) imalib.c:981 -1
     (nil))
(insn 97 96 98 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 125)) imalib.c:981 -1
     (nil))
(code_label 98 97 99 13 145 "" [1 uses])
(note 99 98 100 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) imalib.c:983 -1
     (nil))
(jump_insn 101 100 102 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) imalib.c:983 -1
     (nil)
 -> 120)
(note 102 101 103 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 14 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 source+0 S8 A64])) imalib.c:984 -1
     (nil))
(insn 104 103 105 14 (set (reg:SI 95 [ D.17855 ])
        (mem/j:SI (plus:DI (reg/f:DI 126)
                (const_int 296 [0x128])) [0 source_15(D)->template_data_len+0 S4 A64])) imalib.c:984 -1
     (nil))
(insn 105 104 106 14 (set (reg:SI 96 [ D.17856 ])
        (reg:SI 95 [ D.17855 ])) imalib.c:984 -1
     (nil))
(insn 106 105 107 14 (set (reg:SI 97 [ D.17856 ])
        (zero_extend:SI (subreg:HI (reg:SI 96 [ D.17856 ]) 0))) imalib.c:984 -1
     (nil))
(insn 107 106 108 14 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 source+0 S8 A64])) imalib.c:984 -1
     (nil))
(insn 108 107 109 14 (set (reg/f:DI 98 [ D.17858 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 127)
                (const_int 304 [0x130])) [0 source_15(D)->template_data+0 S8 A64])) imalib.c:984 -1
     (nil))
(insn 109 108 110 14 (set (reg:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 size+0 S8 A64])) imalib.c:984 -1
     (nil))
(insn 110 109 111 14 (set (reg:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 buffer+0 S8 A64])) imalib.c:984 -1
     (nil))
(insn 111 110 112 14 (set (reg:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 written+0 S8 A64])) imalib.c:984 -1
     (nil))
(insn 112 111 113 14 (set (reg:DI 37 r8)
        (reg:DI 128)) imalib.c:984 -1
     (nil))
(insn 113 112 114 14 (set (reg:DI 2 cx)
        (reg:DI 129)) imalib.c:984 -1
     (nil))
(insn 114 113 115 14 (set (reg:DI 1 dx)
        (reg:DI 130)) imalib.c:984 -1
     (nil))
(insn 115 114 116 14 (set (reg:SI 4 si)
        (reg:SI 97 [ D.17856 ])) imalib.c:984 -1
     (nil))
(insn 116 115 117 14 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.17858 ])) imalib.c:984 -1
     (nil))
(call_insn 117 116 118 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TSS_Array_Marshal") [flags 0x41]  <function_decl 0x7f6ee6f35870 TSS_Array_Marshal>) [0 TSS_Array_Marshal S1 A8])
            (const_int 0 [0]))) imalib.c:984 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 118 117 119 14 (set (reg:SI 131)
        (reg:SI 0 ax)) imalib.c:984 -1
     (nil))
(insn 119 118 120 14 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 131)) imalib.c:984 -1
     (nil))
(code_label 120 119 121 15 146 "" [1 uses])
(note 121 120 122 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 125 15 (set (reg:SI 99 [ D.17859 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) imalib.c:987 -1
     (nil))
(insn 125 122 129 15 (set (reg:SI 100 [ <retval> ])
        (reg:SI 99 [ D.17859 ])) imalib.c:987 -1
     (nil))
(insn 129 125 130 15 (set (reg/i:SI 0 ax)
        (reg:SI 100 [ <retval> ])) imalib.c:988 -1
     (nil))
(insn 130 129 0 15 (use (reg/i:SI 0 ax)) imalib.c:988 -1
     (nil))
