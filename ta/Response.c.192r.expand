
;; Function BuildResponseHeader (BuildResponseHeader, funcdef_no=2, decl_uid=11955, cgraph_uid=2, symbol_order=2)

Partition 1: size 4 align 4
	size
Partition 0: size 2 align 2
	tag

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 command+0 S8 A64])
        (reg:DI 5 di [ command ])) Response.c:77 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) Response.c:77 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 result+0 S4 A32])
        (reg:SI 1 dx [ result ])) Response.c:77 -1
     (nil))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.12899+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) Response.c:77 -1
     (nil))
(insn 9 6 10 2 (set (reg:SI 88 [ D.12894 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 result+0 S4 A32])) Response.c:80 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.12894 ])
            (const_int 0 [0]))) Response.c:80 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) Response.c:80 -1
     (nil)
 -> 17)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -14 [0xfffffffffffffff2])) [0 tag+0 S2 A16])
        (const_int -32767 [0xffffffffffff8001])) Response.c:82 -1
     (nil))
(insn 14 13 15 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 size+0 S4 A32])
        (const_int 10 [0xa])) Response.c:83 -1
     (nil))
(jump_insn 15 14 16 4 (set (pc)
        (label_ref 52)) -1
     (nil)
 -> 52)
(barrier 16 15 17)
(code_label 17 16 18 5 2 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 command+0 S8 A64])) Response.c:87 -1
     (nil))
(insn 20 19 21 5 (set (reg:HI 89 [ D.12895 ])
        (mem/j:HI (reg/f:DI 109) [0 command_9(D)->tag+0 S2 A64])) Response.c:87 -1
     (nil))
(insn 21 20 22 5 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -14 [0xfffffffffffffff2])) [0 tag+0 S2 A16])
        (reg:HI 89 [ D.12895 ])) Response.c:87 -1
     (nil))
(insn 22 21 23 5 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 command+0 S8 A64])) Response.c:89 -1
     (nil))
(insn 23 22 24 5 (set (reg:SI 90 [ D.12894 ])
        (mem/j:SI (plus:DI (reg/f:DI 110)
                (const_int 12 [0xc])) [0 command_9(D)->handleNum+0 S4 A32])) Response.c:89 -1
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg:SI 91 [ D.12894 ])
                (ashift:SI (reg:SI 90 [ D.12894 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Response.c:89 -1
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg:SI 92 [ D.12894 ])
                (plus:SI (reg:SI 91 [ D.12894 ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) Response.c:89 -1
     (nil))
(insn 26 25 27 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 size+0 S4 A32])
        (reg:SI 92 [ D.12894 ])) Response.c:89 -1
     (nil))
(insn 27 26 28 5 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 command+0 S8 A64])) Response.c:90 -1
     (nil))
(insn 28 27 29 5 (set (reg:SI 93 [ D.12896 ])
        (mem/j:SI (plus:DI (reg/f:DI 111)
                (const_int 32 [0x20])) [0 command_9(D)->parameterSize+0 S4 A64])) Response.c:90 -1
     (nil))
(insn 29 28 30 5 (set (reg:SI 94 [ D.12894 ])
        (reg:SI 93 [ D.12896 ])) Response.c:90 -1
     (nil))
(insn 30 29 31 5 (set (reg:SI 95 [ D.12894 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 size+0 S4 A32])) Response.c:90 -1
     (nil))
(insn 31 30 32 5 (parallel [
            (set (reg:SI 96 [ D.12894 ])
                (plus:SI (reg:SI 94 [ D.12894 ])
                    (reg:SI 95 [ D.12894 ])))
            (clobber (reg:CC 17 flags))
        ]) Response.c:90 -1
     (nil))
(insn 32 31 33 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 size+0 S4 A32])
        (reg:SI 96 [ D.12894 ])) Response.c:90 -1
     (nil))
(insn 33 32 34 5 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 command+0 S8 A64])) Response.c:91 -1
     (nil))
(insn 34 33 35 5 (set (reg:HI 97 [ D.12895 ])
        (mem/j:HI (reg/f:DI 112) [0 command_9(D)->tag+0 S2 A64])) Response.c:91 -1
     (nil))
(insn 35 34 36 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 97 [ D.12895 ])
            (const_int -32766 [0xffffffffffff8002]))) Response.c:91 -1
     (nil))
(jump_insn 36 35 37 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) Response.c:91 -1
     (nil)
 -> 44)
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 6 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 command+0 S8 A64])) Response.c:92 -1
     (nil))
(insn 39 38 40 6 (set (reg:SI 98 [ D.12896 ])
        (mem/j:SI (plus:DI (reg/f:DI 113)
                (const_int 36 [0x24])) [0 command_9(D)->authSize+0 S4 A32])) Response.c:92 -1
     (nil))
(insn 40 39 41 6 (set (reg:SI 99 [ D.12894 ])
        (reg:SI 98 [ D.12896 ])) Response.c:91 -1
     (nil))
(insn 41 40 42 6 (parallel [
            (set (reg:SI 87 [ D.12893 ])
                (plus:SI (reg:SI 99 [ D.12894 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Response.c:91 -1
     (nil))
(jump_insn 42 41 43 6 (set (pc)
        (label_ref 47)) -1
     (nil)
 -> 47)
(barrier 43 42 44)
(code_label 44 43 45 7 4 "" [1 uses])
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 7 (set (reg:SI 87 [ D.12893 ])
        (const_int 0 [0])) Response.c:91 -1
     (nil))
(code_label 47 46 48 8 5 "" [1 uses])
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 8 (set (reg:SI 100 [ D.12894 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 size+0 S4 A32])) Response.c:91 -1
     (nil))
(insn 50 49 51 8 (parallel [
            (set (reg:SI 101 [ D.12894 ])
                (plus:SI (reg:SI 87 [ D.12893 ])
                    (reg:SI 100 [ D.12894 ])))
            (clobber (reg:CC 17 flags))
        ]) Response.c:91 -1
     (nil))
(insn 51 50 52 8 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 size+0 S4 A32])
        (reg:SI 101 [ D.12894 ])) Response.c:91 -1
     (nil))
(code_label 52 51 53 9 3 "" [1 uses])
(note 53 52 54 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 9 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) Response.c:94 -1
     (nil))
(insn 55 54 56 9 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -14 [0xfffffffffffffff2])))
            (clobber (reg:CC 17 flags))
        ]) Response.c:94 -1
     (nil))
(insn 56 55 57 9 (set (reg:DI 1 dx)
        (const_int 0 [0])) Response.c:94 -1
     (nil))
(insn 57 56 58 9 (set (reg:DI 4 si)
        (reg:DI 114)) Response.c:94 -1
     (nil))
(insn 58 57 59 9 (set (reg:DI 5 di)
        (reg:DI 115)) Response.c:94 -1
     (nil))
(call_insn 59 58 60 9 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM_ST_Marshal") [flags 0x41]  <function_decl 0x7f70c5fe21b0 TPM_ST_Marshal>) [0 TPM_ST_Marshal S1 A8])
            (const_int 0 [0]))) Response.c:94 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 60 59 61 9 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) Response.c:95 -1
     (nil))
(insn 61 60 62 9 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) Response.c:95 -1
     (nil))
(insn 62 61 63 9 (set (reg:DI 1 dx)
        (const_int 0 [0])) Response.c:95 -1
     (nil))
(insn 63 62 64 9 (set (reg:DI 4 si)
        (reg:DI 116)) Response.c:95 -1
     (nil))
(insn 64 63 65 9 (set (reg:DI 5 di)
        (reg:DI 117)) Response.c:95 -1
     (nil))
(call_insn 65 64 66 9 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT32_Marshal") [flags 0x41]  <function_decl 0x7f70c5fdd798 UINT32_Marshal>) [0 UINT32_Marshal S1 A8])
            (const_int 0 [0]))) Response.c:95 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 66 65 67 9 (parallel [
            (set (reg:DI 118)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) Response.c:96 -1
     (nil))
(insn 67 66 68 9 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) Response.c:96 -1
     (nil))
(insn 68 67 69 9 (set (reg:DI 1 dx)
        (const_int 0 [0])) Response.c:96 -1
     (nil))
(insn 69 68 70 9 (set (reg:DI 4 si)
        (reg:DI 118)) Response.c:96 -1
     (nil))
(insn 70 69 71 9 (set (reg:DI 5 di)
        (reg:DI 119)) Response.c:96 -1
     (nil))
(call_insn 71 70 72 9 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM_RC_Marshal") [flags 0x41]  <function_decl 0x7f70c5fe20d8 TPM_RC_Marshal>) [0 TPM_RC_Marshal S1 A8])
            (const_int 0 [0]))) Response.c:96 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 72 71 73 9 (set (reg:SI 102 [ D.12894 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 result+0 S4 A32])) Response.c:97 -1
     (nil))
(insn 73 72 74 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.12894 ])
            (const_int 0 [0]))) Response.c:97 -1
     (nil))
(jump_insn 74 73 75 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) Response.c:97 -1
     (nil)
 -> 101)
(note 75 74 76 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 10 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 command+0 S8 A64])) Response.c:99 -1
     (nil))
(insn 77 76 78 10 (set (reg:SI 103 [ D.12894 ])
        (mem/j:SI (plus:DI (reg/f:DI 120)
                (const_int 12 [0xc])) [0 command_9(D)->handleNum+0 S4 A32])) Response.c:99 -1
     (nil))
(insn 78 77 79 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103 [ D.12894 ])
            (const_int 0 [0]))) Response.c:99 -1
     (nil))
(jump_insn 79 78 80 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) Response.c:99 -1
     (nil)
 -> 88)
(note 80 79 81 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 11 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 command+0 S8 A64])) Response.c:100 -1
     (nil))
(insn 82 81 83 11 (parallel [
            (set (reg/f:DI 104 [ D.12897 ])
                (plus:DI (reg/f:DI 121)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) Response.c:100 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 command+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 83 82 84 11 (parallel [
            (set (reg:DI 122)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) Response.c:100 -1
     (nil))
(insn 84 83 85 11 (set (reg:DI 1 dx)
        (const_int 0 [0])) Response.c:100 -1
     (nil))
(insn 85 84 86 11 (set (reg:DI 4 si)
        (reg:DI 122)) Response.c:100 -1
     (nil))
(insn 86 85 87 11 (set (reg:DI 5 di)
        (reg/f:DI 104 [ D.12897 ])) Response.c:100 -1
     (nil))
(call_insn 87 86 88 11 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM_HANDLE_Marshal") [flags 0x41]  <function_decl 0x7f70c5fe2510 TPM_HANDLE_Marshal>) [0 TPM_HANDLE_Marshal S1 A8])
            (const_int 0 [0]))) Response.c:100 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(code_label 88 87 89 12 7 "" [1 uses])
(note 89 88 90 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 12 (set (reg:HI 105 [ D.12895 ])
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -14 [0xfffffffffffffff2])) [0 tag+0 S2 A16])) Response.c:101 -1
     (nil))
(insn 91 90 92 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 105 [ D.12895 ])
            (const_int -32766 [0xffffffffffff8002]))) Response.c:101 -1
     (nil))
(jump_insn 92 91 93 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) Response.c:101 -1
     (nil)
 -> 101)
(note 93 92 94 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 13 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 command+0 S8 A64])) Response.c:102 -1
     (nil))
(insn 95 94 96 13 (parallel [
            (set (reg/f:DI 106 [ D.12898 ])
                (plus:DI (reg/f:DI 123)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) Response.c:102 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 command+0 S8 A64])
            (const_int 32 [0x20]))
        (nil)))
(insn 96 95 97 13 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) Response.c:102 -1
     (nil))
(insn 97 96 98 13 (set (reg:DI 1 dx)
        (const_int 0 [0])) Response.c:102 -1
     (nil))
(insn 98 97 99 13 (set (reg:DI 4 si)
        (reg:DI 124)) Response.c:102 -1
     (nil))
(insn 99 98 100 13 (set (reg:DI 5 di)
        (reg/f:DI 106 [ D.12898 ])) Response.c:102 -1
     (nil))
(call_insn 100 99 101 13 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT32_Marshal") [flags 0x41]  <function_decl 0x7f70c5fdd798 UINT32_Marshal>) [0 UINT32_Marshal S1 A8])
            (const_int 0 [0]))) Response.c:102 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(code_label 101 100 102 14 6 "" [2 uses])
(note 102 101 103 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 14 (set (reg:SI 107 [ D.12894 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 size+0 S4 A32])) Response.c:104 -1
     (nil))
(insn 104 103 105 14 (set (reg:SI 108 [ D.12896 ])
        (reg:SI 107 [ D.12894 ])) Response.c:104 -1
     (nil))
(insn 105 104 106 14 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 command+0 S8 A64])) Response.c:104 -1
     (nil))
(insn 106 105 116 14 (set (mem/j:SI (plus:DI (reg/f:DI 125)
                (const_int 32 [0x20])) [0 command_9(D)->parameterSize+0 S4 A64])
        (reg:SI 108 [ D.12896 ])) Response.c:104 -1
     (nil))
(insn 116 106 108 14 (const_int 0 [0]) Response.c:105 -1
     (nil))
(insn 108 116 109 14 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.12899+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) Response.c:105 -1
     (nil))
(jump_insn 109 108 114 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) Response.c:105 -1
     (nil)
 -> 112)
(note 114 109 110 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(call_insn 110 114 111 16 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f70c60d1288 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) Response.c:105 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 111 110 112)
(code_label 112 111 115 17 8 "" [1 uses])
(note 115 112 0 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
