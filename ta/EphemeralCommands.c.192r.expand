
;; Function TPM2_Commit (TPM2_Commit, funcdef_no=2, decl_uid=12864, cgraph_uid=2, symbol_order=2)

Partition 5: size 100 align 16
	P2
Partition 8: size 50 align 16
	x2
Partition 7: size 50 align 16
	p
Partition 6: size 50 align 16
	r
Partition 3: size 8 align 8
	parms_16
Partition 2: size 8 align 8
	eccKey_15
Partition 1: size 8 align 8
	pP1_2
Partition 0: size 8 align 8
	pP2_1
Partition 4: size 4 align 4
	result_84

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 28 from 30 to 31.
Redirecting jump 42 from 30 to 31.
Redirecting jump 59 from 30 to 31.
Redirecting jump 76 from 30 to 31.
Redirecting jump 96 from 30 to 31.
Redirecting jump 145 from 23 to 31.
Edge 20->22 redirected to 24
deleting block 22
Removing jump 191.
Redirecting jump 199 from 30 to 31.
Redirecting jump 226 from 30 to 31.
Redirecting jump 260 from 30 to 31.
Merging block 30 into block 29...
Merged blocks 29 and 30.
Merged 29 and 30 without moving.
Removing jump 274.
Merging block 32 into block 31...
Merged blocks 31 and 32.
Merged 31 and 32 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -360 [0xfffffffffffffe98])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EphemeralCommands.c:71 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -368 [0xfffffffffffffe90])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) EphemeralCommands.c:71 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.12998+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:71 -1
     (nil))
(insn 8 5 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -336 [0xfffffffffffffeb0])) [0 pP2+0 S8 A64])
        (const_int 0 [0])) EphemeralCommands.c:74 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -328 [0xfffffffffffffeb8])) [0 pP1+0 S8 A64])
        (const_int 0 [0])) EphemeralCommands.c:75 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -360 [0xfffffffffffffe98])) [0 in+0 S8 A64])) EphemeralCommands.c:81 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 88 [ D.12989 ])
        (mem/j:SI (reg/f:DI 132) [0 in_12(D)->signHandle+0 S4 A32])) EphemeralCommands.c:81 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.12989 ])) EphemeralCommands.c:81 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7fc5827480d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) EphemeralCommands.c:81 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 14 13 15 2 (set (reg:DI 133)
        (reg:DI 0 ax)) EphemeralCommands.c:81 -1
     (nil))
(insn 15 14 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -320 [0xfffffffffffffec0])) [0 eccKey+0 S8 A64])
        (reg:DI 133)) EphemeralCommands.c:81 -1
     (nil))
(insn 19 15 20 2 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -320 [0xfffffffffffffec0])) [0 eccKey+0 S8 A64])) EphemeralCommands.c:82 -1
     (nil))
(insn 20 19 21 2 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/f:DI 137)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:82 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -320 [0xfffffffffffffec0])) [0 eccKey+0 S8 A64])
            (const_int 64 [0x40]))
        (nil)))
(insn 21 20 22 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 parms+0 S8 A64])
        (reg:DI 136)) EphemeralCommands.c:82 -1
     (nil))
(insn 22 21 23 2 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -320 [0xfffffffffffffec0])) [0 eccKey+0 S8 A64])) EphemeralCommands.c:84 -1
     (nil))
(insn 23 22 24 2 (set (reg:HI 89 [ D.12990 ])
        (mem/j:HI (plus:DI (reg/f:DI 138)
                (const_int 4 [0x4])) [0 eccKey_15->publicArea.type+0 S2 A32])) EphemeralCommands.c:84 -1
     (nil))
(insn 24 23 25 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 89 [ D.12990 ])
            (const_int 35 [0x23]))) EphemeralCommands.c:84 -1
     (nil))
(jump_insn 25 24 26 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) EphemeralCommands.c:84 -1
     (nil)
 -> 30)
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg:SI 87 [ D.12988 ])
        (const_int 412 [0x19c])) EphemeralCommands.c:85 -1
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (label_ref:DI 271)) EphemeralCommands.c:85 654 {jump}
     (nil)
 -> 271)
(barrier 29 28 30)
(code_label 30 29 31 5 2 "" [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 parms+0 S8 A64])) EphemeralCommands.c:91 -1
     (nil))
(insn 33 32 34 5 (set (reg:HI 90 [ D.12990 ])
        (mem/j:HI (plus:DI (reg/f:DI 139)
                (const_int 6 [0x6])) [0 parms_16->scheme.scheme+0 S2 A16])) EphemeralCommands.c:91 -1
     (nil))
(insn 34 33 35 5 (set (reg:SI 91 [ D.12991 ])
        (zero_extend:SI (reg:HI 90 [ D.12990 ]))) EphemeralCommands.c:91 -1
     (nil))
(insn 35 34 36 5 (set (reg:SI 5 di)
        (reg:SI 91 [ D.12991 ])) EphemeralCommands.c:91 -1
     (nil))
(call_insn 36 35 37 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptIsSchemeAnonymous") [flags 0x41]  <function_decl 0x7fc5828290d8 CryptIsSchemeAnonymous>) [0 CryptIsSchemeAnonymous S1 A8])
            (const_int 0 [0]))) EphemeralCommands.c:91 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 37 36 38 5 (set (reg:SI 92 [ D.12991 ])
        (reg:SI 0 ax)) EphemeralCommands.c:91 -1
     (nil))
(insn 38 37 39 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.12991 ])
            (const_int 0 [0]))) EphemeralCommands.c:91 -1
     (nil))
(jump_insn 39 38 40 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) EphemeralCommands.c:91 -1
     (nil)
 -> 44)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (reg:SI 87 [ D.12988 ])
        (const_int 402 [0x192])) EphemeralCommands.c:92 -1
     (nil))
(jump_insn 42 41 43 6 (set (pc)
        (label_ref:DI 271)) EphemeralCommands.c:92 654 {jump}
     (nil)
 -> 271)
(barrier 43 42 44)
(code_label 44 43 45 7 4 "" [1 uses])
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 7 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -360 [0xfffffffffffffe98])) [0 in+0 S8 A64])) EphemeralCommands.c:94 -1
     (nil))
(insn 47 46 48 7 (set (reg:HI 93 [ D.12990 ])
        (mem/j:HI (plus:DI (reg/f:DI 140)
                (const_int 106 [0x6a])) [0 in_12(D)->s2.t.size+0 S2 A16])) EphemeralCommands.c:94 -1
     (nil))
(insn 48 47 49 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 93 [ D.12990 ])
            (const_int 0 [0]))) EphemeralCommands.c:94 -1
     (nil))
(insn 49 48 50 7 (set (reg:QI 94 [ D.12992 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) EphemeralCommands.c:94 -1
     (nil))
(insn 50 49 51 7 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -360 [0xfffffffffffffe98])) [0 in+0 S8 A64])) EphemeralCommands.c:94 -1
     (nil))
(insn 51 50 52 7 (set (reg:HI 95 [ D.12990 ])
        (mem/j:HI (plus:DI (reg/f:DI 141)
                (const_int 236 [0xec])) [0 in_12(D)->y2.t.size+0 S2 A32])) EphemeralCommands.c:94 -1
     (nil))
(insn 52 51 53 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 95 [ D.12990 ])
            (const_int 0 [0]))) EphemeralCommands.c:94 -1
     (nil))
(insn 53 52 54 7 (set (reg:QI 96 [ D.12992 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) EphemeralCommands.c:94 -1
     (nil))
(insn 54 53 55 7 (parallel [
            (set (reg:QI 97 [ D.12992 ])
                (xor:QI (reg:QI 94 [ D.12992 ])
                    (reg:QI 96 [ D.12992 ])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:94 -1
     (nil))
(insn 55 54 56 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ D.12992 ])
            (const_int 0 [0]))) EphemeralCommands.c:94 -1
     (nil))
(jump_insn 56 55 57 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) EphemeralCommands.c:94 -1
     (nil)
 -> 61)
(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 8 (set (reg:SI 87 [ D.12988 ])
        (const_int 981 [0x3d5])) EphemeralCommands.c:95 -1
     (nil))
(jump_insn 59 58 60 8 (set (pc)
        (label_ref:DI 271)) EphemeralCommands.c:95 654 {jump}
     (nil)
 -> 271)
(barrier 60 59 61)
(code_label 61 60 62 9 5 "" [1 uses])
(note 62 61 63 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 9 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 parms+0 S8 A64])) EphemeralCommands.c:98 -1
     (nil))
(insn 64 63 65 9 (set (reg:HI 98 [ D.12990 ])
        (mem/j:HI (plus:DI (reg/f:DI 142)
                (const_int 12 [0xc])) [0 parms_16->curveID+0 S2 A16])) EphemeralCommands.c:98 -1
     (nil))
(insn 65 64 66 9 (set (reg:SI 99 [ D.12991 ])
        (zero_extend:SI (reg:HI 98 [ D.12990 ]))) EphemeralCommands.c:98 -1
     (nil))
(insn 66 65 67 9 (parallel [
            (set (reg:DI 143)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:98 -1
     (nil))
(insn 67 66 68 9 (set (reg:SI 1 dx)
        (reg:SI 99 [ D.12991 ])) EphemeralCommands.c:98 -1
     (nil))
(insn 68 67 69 9 (set (reg:SI 4 si)
        (const_int 112 [0x70])) EphemeralCommands.c:98 -1
     (nil))
(insn 69 68 70 9 (set (reg:DI 5 di)
        (reg:DI 143)) EphemeralCommands.c:98 -1
     (nil))
(call_insn 70 69 71 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptEccGetParameter") [flags 0x41]  <function_decl 0x7fc58284ee58 CryptEccGetParameter>) [0 CryptEccGetParameter S1 A8])
            (const_int 0 [0]))) EphemeralCommands.c:98 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 71 70 72 9 (set (reg:SI 100 [ D.12991 ])
        (reg:SI 0 ax)) EphemeralCommands.c:98 -1
     (nil))
(insn 72 71 73 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.12991 ])
            (const_int 0 [0]))) EphemeralCommands.c:98 -1
     (nil))
(jump_insn 73 72 74 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) EphemeralCommands.c:98 -1
     (nil)
 -> 78)
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 10 (set (reg:SI 87 [ D.12988 ])
        (const_int 412 [0x19c])) EphemeralCommands.c:99 -1
     (nil))
(jump_insn 76 75 77 10 (set (pc)
        (label_ref:DI 271)) EphemeralCommands.c:99 654 {jump}
     (nil)
 -> 271)
(barrier 77 76 78)
(code_label 78 77 79 11 6 "" [1 uses])
(note 79 78 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 11 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -320 [0xfffffffffffffec0])) [0 eccKey+0 S8 A64])) EphemeralCommands.c:102 -1
     (nil))
(insn 81 80 82 11 (parallel [
            (set (reg/f:DI 101 [ D.12993 ])
                (plus:DI (reg/f:DI 144)
                    (const_int 1756 [0x6dc])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:102 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -320 [0xfffffffffffffec0])) [0 eccKey+0 S8 A64])
            (const_int 1756 [0x6dc]))
        (nil)))
(insn 82 81 83 11 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 parms+0 S8 A64])) EphemeralCommands.c:102 -1
     (nil))
(insn 83 82 84 11 (set (reg:HI 102 [ D.12990 ])
        (mem/j:HI (plus:DI (reg/f:DI 145)
                (const_int 12 [0xc])) [0 parms_16->curveID+0 S2 A16])) EphemeralCommands.c:102 -1
     (nil))
(insn 84 83 85 11 (set (reg:SI 103 [ D.12991 ])
        (zero_extend:SI (reg:HI 102 [ D.12990 ]))) EphemeralCommands.c:102 -1
     (nil))
(insn 85 84 86 11 (parallel [
            (set (reg:DI 146)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:102 -1
     (nil))
(insn 86 85 87 11 (set (reg:DI 2 cx)
        (reg/f:DI 101 [ D.12993 ])) EphemeralCommands.c:102 -1
     (nil))
(insn 87 86 88 11 (set (reg:SI 1 dx)
        (reg:SI 103 [ D.12991 ])) EphemeralCommands.c:102 -1
     (nil))
(insn 88 87 89 11 (set (reg:DI 4 si)
        (const_int 0 [0])) EphemeralCommands.c:102 -1
     (nil))
(insn 89 88 90 11 (set (reg:DI 5 di)
        (reg:DI 146)) EphemeralCommands.c:102 -1
     (nil))
(call_insn 90 89 91 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptGenerateR") [flags 0x41]  <function_decl 0x7fc5828541b0 CryptGenerateR>) [0 CryptGenerateR S1 A8])
            (const_int 0 [0]))) EphemeralCommands.c:102 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 91 90 92 11 (set (reg:SI 104 [ D.12991 ])
        (reg:SI 0 ax)) EphemeralCommands.c:102 -1
     (nil))
(insn 92 91 93 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.12991 ])
            (const_int 0 [0]))) EphemeralCommands.c:102 -1
     (nil))
(jump_insn 93 92 94 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) EphemeralCommands.c:102 -1
     (nil)
 -> 98)
(note 94 93 95 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 12 (set (reg:SI 87 [ D.12988 ])
        (const_int 340 [0x154])) EphemeralCommands.c:103 -1
     (nil))
(jump_insn 96 95 97 12 (set (pc)
        (label_ref:DI 271)) EphemeralCommands.c:103 654 {jump}
     (nil)
 -> 271)
(barrier 97 96 98)
(code_label 98 97 99 13 7 "" [1 uses])
(note 99 98 100 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 13 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -360 [0xfffffffffffffe98])) [0 in+0 S8 A64])) EphemeralCommands.c:105 -1
     (nil))
(insn 101 100 102 13 (set (reg:HI 105 [ D.12990 ])
        (mem/j:HI (plus:DI (reg/f:DI 147)
                (const_int 106 [0x6a])) [0 in_12(D)->s2.t.size+0 S2 A16])) EphemeralCommands.c:105 -1
     (nil))
(insn 102 101 103 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 105 [ D.12990 ])
            (const_int 0 [0]))) EphemeralCommands.c:105 -1
     (nil))
(jump_insn 103 102 104 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 201)
            (pc))) EphemeralCommands.c:105 -1
     (nil)
 -> 201)
(note 104 103 105 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 14 (parallel [
            (set (reg:DI 148)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:108 -1
     (nil))
(insn 106 105 107 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -336 [0xfffffffffffffeb0])) [0 pP2+0 S8 A64])
        (reg:DI 148)) EphemeralCommands.c:108 -1
     (nil))
(insn 107 106 108 14 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -360 [0xfffffffffffffe98])) [0 in+0 S8 A64])) EphemeralCommands.c:110 -1
     (nil))
(insn 108 107 109 14 (set (reg:DI 150)
        (mem/j:DI (plus:DI (reg/f:DI 149)
                (const_int 236 [0xec])) [0 in_12(D)->y2+0 S8 A32])) EphemeralCommands.c:110 -1
     (nil))
(insn 109 108 110 14 (set (mem/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -62 [0xffffffffffffffc2])) [0 P2.y+0 S8 A16])
        (reg:DI 150)) EphemeralCommands.c:110 -1
     (nil))
(insn 110 109 111 14 (set (reg:DI 151)
        (mem/j:DI (plus:DI (reg/f:DI 149)
                (const_int 244 [0xf4])) [0 in_12(D)->y2+8 S8 A32])) EphemeralCommands.c:110 -1
     (nil))
(insn 111 110 112 14 (set (mem/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -54 [0xffffffffffffffca])) [0 P2.y+8 S8 A16])
        (reg:DI 151)) EphemeralCommands.c:110 -1
     (nil))
(insn 112 111 113 14 (set (reg:DI 152)
        (mem/j:DI (plus:DI (reg/f:DI 149)
                (const_int 252 [0xfc])) [0 in_12(D)->y2+16 S8 A32])) EphemeralCommands.c:110 -1
     (nil))
(insn 113 112 114 14 (set (mem/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -46 [0xffffffffffffffd2])) [0 P2.y+16 S8 A16])
        (reg:DI 152)) EphemeralCommands.c:110 -1
     (nil))
(insn 114 113 115 14 (set (reg:DI 153)
        (mem/j:DI (plus:DI (reg/f:DI 149)
                (const_int 260 [0x104])) [0 in_12(D)->y2+24 S8 A32])) EphemeralCommands.c:110 -1
     (nil))
(insn 115 114 116 14 (set (mem/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -38 [0xffffffffffffffda])) [0 P2.y+24 S8 A16])
        (reg:DI 153)) EphemeralCommands.c:110 -1
     (nil))
(insn 116 115 117 14 (set (reg:DI 154)
        (mem/j:DI (plus:DI (reg/f:DI 149)
                (const_int 268 [0x10c])) [0 in_12(D)->y2+32 S8 A32])) EphemeralCommands.c:110 -1
     (nil))
(insn 117 116 118 14 (set (mem/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -30 [0xffffffffffffffe2])) [0 P2.y+32 S8 A16])
        (reg:DI 154)) EphemeralCommands.c:110 -1
     (nil))
(insn 118 117 119 14 (set (reg:DI 155)
        (mem/j:DI (plus:DI (reg/f:DI 149)
                (const_int 276 [0x114])) [0 in_12(D)->y2+40 S8 A32])) EphemeralCommands.c:110 -1
     (nil))
(insn 119 118 120 14 (set (mem/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -22 [0xffffffffffffffea])) [0 P2.y+40 S8 A16])
        (reg:DI 155)) EphemeralCommands.c:110 -1
     (nil))
(insn 120 119 121 14 (set (reg:HI 156)
        (mem/j:HI (plus:DI (reg/f:DI 149)
                (const_int 284 [0x11c])) [0 in_12(D)->y2+48 S2 A32])) EphemeralCommands.c:110 -1
     (nil))
(insn 121 120 122 14 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -14 [0xfffffffffffffff2])) [0 P2.y+48 S2 A16])
        (reg:HI 156)) EphemeralCommands.c:110 -1
     (nil))
(insn 122 121 123 14 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -360 [0xfffffffffffffe98])) [0 in+0 S8 A64])) EphemeralCommands.c:115 -1
     (nil))
(insn 123 122 124 14 (parallel [
            (set (reg/f:DI 106 [ D.12994 ])
                (plus:DI (reg/f:DI 157)
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:115 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -360 [0xfffffffffffffe98])) [0 in+0 S8 A64])
            (const_int 108 [0x6c]))
        (nil)))
(insn 124 123 125 14 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -360 [0xfffffffffffffe98])) [0 in+0 S8 A64])) EphemeralCommands.c:114 -1
     (nil))
(insn 125 124 126 14 (set (reg:HI 107 [ D.12990 ])
        (mem/j:HI (plus:DI (reg/f:DI 158)
                (const_int 106 [0x6a])) [0 in_12(D)->s2.t.size+0 S2 A16])) EphemeralCommands.c:114 -1
     (nil))
(insn 126 125 127 14 (set (reg:SI 108 [ D.12989 ])
        (zero_extend:SI (reg:HI 107 [ D.12990 ]))) EphemeralCommands.c:113 -1
     (nil))
(insn 127 126 128 14 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -320 [0xfffffffffffffec0])) [0 eccKey+0 S8 A64])) EphemeralCommands.c:113 -1
     (nil))
(insn 128 127 129 14 (set (reg:HI 109 [ D.12990 ])
        (mem/j:HI (plus:DI (reg/f:DI 159)
                (const_int 6 [0x6])) [0 eccKey_15->publicArea.nameAlg+0 S2 A16])) EphemeralCommands.c:113 -1
     (nil))
(insn 129 128 130 14 (set (reg:SI 110 [ D.12991 ])
        (zero_extend:SI (reg:HI 109 [ D.12990 ]))) EphemeralCommands.c:113 -1
     (nil))
(insn 130 129 131 14 (parallel [
            (set (reg:DI 160)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:113 -1
     (nil))
(insn 131 130 132 14 (parallel [
            (set (reg:DI 161)
                (plus:DI (reg:DI 160)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:113 -1
     (nil))
(insn 132 131 133 14 (set (reg:DI 37 r8)
        (reg:DI 161)) EphemeralCommands.c:113 -1
     (nil))
(insn 133 132 134 14 (set (reg:SI 2 cx)
        (const_int 48 [0x30])) EphemeralCommands.c:113 -1
     (nil))
(insn 134 133 135 14 (set (reg:DI 1 dx)
        (reg/f:DI 106 [ D.12994 ])) EphemeralCommands.c:113 -1
     (nil))
(insn 135 134 136 14 (set (reg:SI 4 si)
        (reg:SI 108 [ D.12989 ])) EphemeralCommands.c:113 -1
     (nil))
(insn 136 135 137 14 (set (reg:SI 5 di)
        (reg:SI 110 [ D.12991 ])) EphemeralCommands.c:113 -1
     (nil))
(call_insn 137 136 138 14 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashBlock") [flags 0x41]  <function_decl 0x7fc582835798 CryptHashBlock>) [0 CryptHashBlock S1 A8])
            (const_int 0 [0]))) EphemeralCommands.c:113 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 138 137 139 14 (set (reg:HI 111 [ D.12990 ])
        (reg:HI 0 ax)) EphemeralCommands.c:113 -1
     (nil))
(insn 139 138 140 14 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [0 x2.t.size+0 S2 A64])
        (reg:HI 111 [ D.12990 ])) EphemeralCommands.c:113 -1
     (nil))
(insn 140 139 141 14 (set (reg:HI 112 [ D.12990 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [0 x2.t.size+0 S2 A64])) EphemeralCommands.c:120 -1
     (nil))
(insn 141 140 142 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 112 [ D.12990 ])
            (const_int 0 [0]))) EphemeralCommands.c:120 -1
     (nil))
(jump_insn 142 141 143 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) EphemeralCommands.c:120 -1
     (nil)
 -> 147)
(note 143 142 144 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 15 (set (reg:SI 87 [ D.12988 ])
        (const_int 387 [0x183])) EphemeralCommands.c:121 -1
     (nil))
(jump_insn 145 144 146 15 (set (pc)
        (label_ref:DI 271)) EphemeralCommands.c:121 654 {jump}
     (nil)
 -> 271)
(barrier 146 145 147)
(code_label 147 146 148 16 9 "" [1 uses])
(note 148 147 149 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 16 (set (reg:HI 113 [ D.12990 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 p.t.size+0 S2 A64])) EphemeralCommands.c:124 -1
     (nil))
(insn 150 149 151 16 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 P2.x.t.size+0 S2 A64])
        (reg:HI 113 [ D.12990 ])) EphemeralCommands.c:124 -1
     (nil))
(insn 151 150 152 16 (parallel [
            (set (reg:DI 162)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:126 -1
     (nil))
(insn 152 151 153 16 (parallel [
            (set (reg:DI 163)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:126 -1
     (nil))
(insn 153 152 154 16 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:126 -1
     (nil))
(insn 154 153 155 16 (set (reg:DI 2 cx)
        (reg:DI 162)) EphemeralCommands.c:126 -1
     (nil))
(insn 155 154 156 16 (set (reg:DI 1 dx)
        (const_int 0 [0])) EphemeralCommands.c:126 -1
     (nil))
(insn 156 155 157 16 (set (reg:DI 4 si)
        (reg:DI 163)) EphemeralCommands.c:126 -1
     (nil))
(insn 157 156 158 16 (set (reg:DI 5 di)
        (reg:DI 164)) EphemeralCommands.c:126 -1
     (nil))
(call_insn 158 157 159 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("DivideB") [flags 0x41]  <function_decl 0x7fc582848510 DivideB>) [0 DivideB S1 A8])
            (const_int 0 [0]))) EphemeralCommands.c:126 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 159 158 160 16 (set (reg:SI 114 [ D.12989 ])
        (reg:SI 0 ax)) EphemeralCommands.c:126 -1
     (nil))
(insn 160 159 161 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 114 [ D.12989 ])
            (const_int 0 [0]))) EphemeralCommands.c:126 -1
     (nil))
(jump_insn 161 160 162 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 166)
            (pc))) EphemeralCommands.c:126 -1
     (nil)
 -> 166)
(note 162 161 163 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 17 (set (reg:SI 87 [ D.12988 ])
        (const_int 340 [0x154])) EphemeralCommands.c:127 -1
     (nil))
(jump_insn 164 163 165 17 (set (pc)
        (label_ref 197)) EphemeralCommands.c:127 -1
     (nil)
 -> 197)
(barrier 165 164 166)
(code_label 166 165 167 18 11 "" [1 uses])
(note 167 166 168 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 18 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 parms+0 S8 A64])) EphemeralCommands.c:128 -1
     (nil))
(insn 169 168 170 18 (set (reg:HI 115 [ D.12990 ])
        (mem/j:HI (plus:DI (reg/f:DI 165)
                (const_int 12 [0xc])) [0 parms_16->curveID+0 S2 A16])) EphemeralCommands.c:128 -1
     (nil))
(insn 170 169 171 18 (set (reg:SI 116 [ D.12991 ])
        (zero_extend:SI (reg:HI 115 [ D.12990 ]))) EphemeralCommands.c:128 -1
     (nil))
(insn 171 170 172 18 (set (reg:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -336 [0xfffffffffffffeb0])) [0 pP2+0 S8 A64])) EphemeralCommands.c:128 -1
     (nil))
(insn 172 171 173 18 (set (reg:DI 4 si)
        (reg:DI 166)) EphemeralCommands.c:128 -1
     (nil))
(insn 173 172 174 18 (set (reg:SI 5 di)
        (reg:SI 116 [ D.12991 ])) EphemeralCommands.c:128 -1
     (nil))
(call_insn 174 173 175 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptEccIsPointOnCurve") [flags 0x41]  <function_decl 0x7fc582854d80 CryptEccIsPointOnCurve>) [0 CryptEccIsPointOnCurve S1 A8])
            (const_int 0 [0]))) EphemeralCommands.c:128 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 175 174 176 18 (set (reg:SI 117 [ D.12991 ])
        (reg:SI 0 ax)) EphemeralCommands.c:128 -1
     (nil))
(insn 176 175 177 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.12991 ])
            (const_int 0 [0]))) EphemeralCommands.c:128 -1
     (nil))
(jump_insn 177 176 178 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) EphemeralCommands.c:128 -1
     (nil)
 -> 182)
(note 178 177 179 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 19 (set (reg:SI 87 [ D.12988 ])
        (const_int 743 [0x2e7])) EphemeralCommands.c:129 -1
     (nil))
(jump_insn 180 179 181 19 (set (pc)
        (label_ref 197)) EphemeralCommands.c:129 -1
     (nil)
 -> 197)
(barrier 181 180 182)
(code_label 182 181 183 20 12 "" [1 uses])
(note 183 182 184 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 20 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -320 [0xfffffffffffffec0])) [0 eccKey+0 S8 A64])) EphemeralCommands.c:130 -1
     (nil))
(insn 185 184 186 20 (set (reg:QI 118 [ D.12995 ])
        (mem:QI (reg/f:DI 167) [0 *eccKey_15+0 S1 A64])) EphemeralCommands.c:130 -1
     (nil))
(insn 186 185 187 20 (parallel [
            (set (reg:QI 119 [ D.12995 ])
                (and:QI (reg:QI 118 [ D.12995 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:130 -1
     (nil))
(insn 187 186 188 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ D.12995 ])
            (const_int 0 [0]))) EphemeralCommands.c:130 -1
     (nil))
(jump_insn 188 187 189 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 201)
            (pc))) EphemeralCommands.c:130 612 {*jcc_1}
     (nil)
 -> 201)
(note 189 188 190 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 197 21 (set (reg:SI 87 [ D.12988 ])
        (const_int 412 [0x19c])) EphemeralCommands.c:131 -1
     (nil))
(code_label 197 190 198 23 10 "" [2 uses])
(note 198 197 199 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 199 198 200 23 (set (pc)
        (label_ref:DI 271)) EphemeralCommands.c:121 654 {jump}
     (nil)
 -> 271)
(barrier 200 199 201)
(code_label 201 200 202 24 8 "" [2 uses])
(note 202 201 203 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 204 24 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -360 [0xfffffffffffffe98])) [0 in+0 S8 A64])) EphemeralCommands.c:136 -1
     (nil))
(insn 204 203 205 24 (set (reg:HI 120 [ D.12990 ])
        (mem/j:HI (plus:DI (reg/f:DI 168)
                (const_int 4 [0x4])) [0 in_12(D)->P1.size+0 S2 A32])) EphemeralCommands.c:136 -1
     (nil))
(insn 205 204 206 24 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 120 [ D.12990 ])
            (const_int 4 [0x4]))) EphemeralCommands.c:136 -1
     (nil))
(jump_insn 206 205 207 24 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 228)
            (pc))) EphemeralCommands.c:136 -1
     (nil)
 -> 228)
(note 207 206 211 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 211 207 212 25 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -360 [0xfffffffffffffe98])) [0 in+0 S8 A64])) EphemeralCommands.c:138 -1
     (nil))
(insn 212 211 213 25 (parallel [
            (set (reg:DI 171)
                (plus:DI (reg/f:DI 172)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:138 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -360 [0xfffffffffffffe98])) [0 in+0 S8 A64])
            (const_int 6 [0x6]))
        (nil)))
(insn 213 212 214 25 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -328 [0xfffffffffffffeb8])) [0 pP1+0 S8 A64])
        (reg:DI 171)) EphemeralCommands.c:138 -1
     (nil))
(insn 214 213 215 25 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 parms+0 S8 A64])) EphemeralCommands.c:139 -1
     (nil))
(insn 215 214 216 25 (set (reg:HI 121 [ D.12990 ])
        (mem/j:HI (plus:DI (reg/f:DI 173)
                (const_int 12 [0xc])) [0 parms_16->curveID+0 S2 A16])) EphemeralCommands.c:139 -1
     (nil))
(insn 216 215 217 25 (set (reg:SI 122 [ D.12991 ])
        (zero_extend:SI (reg:HI 121 [ D.12990 ]))) EphemeralCommands.c:139 -1
     (nil))
(insn 217 216 218 25 (set (reg:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -328 [0xfffffffffffffeb8])) [0 pP1+0 S8 A64])) EphemeralCommands.c:139 -1
     (nil))
(insn 218 217 219 25 (set (reg:DI 4 si)
        (reg:DI 174)) EphemeralCommands.c:139 -1
     (nil))
(insn 219 218 220 25 (set (reg:SI 5 di)
        (reg:SI 122 [ D.12991 ])) EphemeralCommands.c:139 -1
     (nil))
(call_insn 220 219 221 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptEccIsPointOnCurve") [flags 0x41]  <function_decl 0x7fc582854d80 CryptEccIsPointOnCurve>) [0 CryptEccIsPointOnCurve S1 A8])
            (const_int 0 [0]))) EphemeralCommands.c:139 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 221 220 222 25 (set (reg:SI 123 [ D.12991 ])
        (reg:SI 0 ax)) EphemeralCommands.c:139 -1
     (nil))
(insn 222 221 223 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 123 [ D.12991 ])
            (const_int 0 [0]))) EphemeralCommands.c:139 -1
     (nil))
(jump_insn 223 222 224 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 228)
            (pc))) EphemeralCommands.c:139 -1
     (nil)
 -> 228)
(note 224 223 225 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 225 224 226 26 (set (reg:SI 87 [ D.12988 ])
        (const_int 487 [0x1e7])) EphemeralCommands.c:140 -1
     (nil))
(jump_insn 226 225 227 26 (set (pc)
        (label_ref:DI 271)) EphemeralCommands.c:140 654 {jump}
     (nil)
 -> 271)
(barrier 227 226 228)
(code_label 228 227 229 27 14 "" [2 uses])
(note 229 228 230 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 231 27 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -320 [0xfffffffffffffec0])) [0 eccKey+0 S8 A64])) EphemeralCommands.c:146 -1
     (nil))
(insn 231 230 232 27 (parallel [
            (set (reg/f:DI 124 [ D.12996 ])
                (plus:DI (reg/f:DI 175)
                    (const_int 446 [0x1be])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:146 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -320 [0xfffffffffffffec0])) [0 eccKey+0 S8 A64])
            (const_int 446 [0x1be]))
        (nil)))
(insn 232 231 233 27 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 parms+0 S8 A64])) EphemeralCommands.c:149 -1
     (nil))
(insn 233 232 234 27 (set (reg:HI 125 [ D.12990 ])
        (mem/j:HI (plus:DI (reg/f:DI 176)
                (const_int 12 [0xc])) [0 parms_16->curveID+0 S2 A16])) EphemeralCommands.c:149 -1
     (nil))
(insn 234 233 235 27 (set (reg:SI 126 [ D.12991 ])
        (zero_extend:SI (reg:HI 125 [ D.12990 ]))) EphemeralCommands.c:146 -1
     (nil))
(insn 235 234 236 27 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -368 [0xfffffffffffffe90])) [0 out+0 S8 A64])) EphemeralCommands.c:146 -1
     (nil))
(insn 236 235 237 27 (parallel [
            (set (reg/f:DI 127 [ D.12997 ])
                (plus:DI (reg/f:DI 177)
                    (const_int 206 [0xce])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:146 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -368 [0xfffffffffffffe90])) [0 out+0 S8 A64])
            (const_int 206 [0xce]))
        (nil)))
(insn 237 236 238 27 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -368 [0xfffffffffffffe90])) [0 out+0 S8 A64])) EphemeralCommands.c:146 -1
     (nil))
(insn 238 237 239 27 (parallel [
            (set (reg/f:DI 128 [ D.12997 ])
                (plus:DI (reg/f:DI 178)
                    (const_int 104 [0x68])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:146 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -368 [0xfffffffffffffe90])) [0 out+0 S8 A64])
            (const_int 104 [0x68]))
        (nil)))
(insn 239 238 240 27 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -368 [0xfffffffffffffe90])) [0 out+0 S8 A64])) EphemeralCommands.c:146 -1
     (nil))
(insn 240 239 241 27 (parallel [
            (set (reg/f:DI 129 [ D.12997 ])
                (plus:DI (reg/f:DI 179)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:146 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -368 [0xfffffffffffffe90])) [0 out+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 241 240 242 27 (set (reg:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -336 [0xfffffffffffffeb0])) [0 pP2+0 S8 A64])) EphemeralCommands.c:146 -1
     (nil))
(insn 242 241 243 27 (set (reg:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -328 [0xfffffffffffffeb8])) [0 pP1+0 S8 A64])) EphemeralCommands.c:146 -1
     (nil))
(insn 243 242 244 27 (parallel [
            (set (reg:DI 182)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:146 -1
     (nil))
(insn 244 243 245 27 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 182)) EphemeralCommands.c:146 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 245 244 246 27 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg/f:DI 124 [ D.12996 ])) EphemeralCommands.c:146 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 246 245 247 27 (set (reg:DI 38 r9)
        (reg:DI 180)) EphemeralCommands.c:146 -1
     (nil))
(insn 247 246 248 27 (set (reg:DI 37 r8)
        (reg:DI 181)) EphemeralCommands.c:146 -1
     (nil))
(insn 248 247 249 27 (set (reg:SI 2 cx)
        (reg:SI 126 [ D.12991 ])) EphemeralCommands.c:146 -1
     (nil))
(insn 249 248 250 27 (set (reg:DI 1 dx)
        (reg/f:DI 127 [ D.12997 ])) EphemeralCommands.c:146 -1
     (nil))
(insn 250 249 251 27 (set (reg:DI 4 si)
        (reg/f:DI 128 [ D.12997 ])) EphemeralCommands.c:146 -1
     (nil))
(insn 251 250 252 27 (set (reg:DI 5 di)
        (reg/f:DI 129 [ D.12997 ])) EphemeralCommands.c:146 -1
     (nil))
(call_insn 252 251 253 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptEccCommitCompute") [flags 0x41]  <function_decl 0x7fc582859360 CryptEccCommitCompute>) [0 CryptEccCommitCompute S1 A8])
            (const_int 16 [0x10]))) EphemeralCommands.c:146 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 253 252 254 27 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:146 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 254 253 255 27 (set (reg:SI 183)
        (reg:SI 0 ax)) EphemeralCommands.c:146 -1
     (nil))
(insn 255 254 256 27 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -340 [0xfffffffffffffeac])) [0 result+0 S4 A32])
        (reg:SI 183)) EphemeralCommands.c:146 -1
     (nil))
(insn 256 255 257 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -340 [0xfffffffffffffeac])) [0 result+0 S4 A32])
            (const_int 0 [0]))) EphemeralCommands.c:154 -1
     (nil))
(jump_insn 257 256 258 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 262)
            (pc))) EphemeralCommands.c:154 -1
     (nil)
 -> 262)
(note 258 257 259 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 28 (set (reg:SI 87 [ D.12988 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -340 [0xfffffffffffffeac])) [0 result+0 S4 A32])) EphemeralCommands.c:155 -1
     (nil))
(jump_insn 260 259 261 28 (set (pc)
        (label_ref:DI 271)) EphemeralCommands.c:155 654 {jump}
     (nil)
 -> 271)
(barrier 261 260 262)
(code_label 262 261 263 29 15 "" [1 uses])
(note 263 262 264 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(call_insn 264 263 265 29 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptCommit") [flags 0x41]  <function_decl 0x7fc582854288 CryptCommit>) [0 CryptCommit S1 A8])
            (const_int 0 [0]))) EphemeralCommands.c:158 -1
     (nil)
    (nil))
(insn 265 264 266 29 (set (reg:HI 130 [ D.12990 ])
        (reg:HI 0 ax)) EphemeralCommands.c:158 -1
     (nil))
(insn 266 265 267 29 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -368 [0xfffffffffffffe90])) [0 out+0 S8 A64])) EphemeralCommands.c:158 -1
     (nil))
(insn 267 266 268 29 (set (mem/j:HI (plus:DI (reg/f:DI 184)
                (const_int 306 [0x132])) [0 out_79(D)->counter+0 S2 A16])
        (reg:HI 130 [ D.12990 ])) EphemeralCommands.c:158 -1
     (nil))
(insn 268 267 271 29 (set (reg:SI 87 [ D.12988 ])
        (const_int 0 [0])) EphemeralCommands.c:159 -1
     (nil))
(code_label 271 268 272 31 16 "" [9 uses])
(note 272 271 273 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 277 31 (set (reg:SI 131 [ <retval> ])
        (reg:SI 87 [ D.12988 ])) -1
     (nil))
(insn 277 273 278 31 (set (reg/i:SI 0 ax)
        (reg:SI 131 [ <retval> ])) EphemeralCommands.c:160 -1
     (nil))
(insn 278 277 279 31 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.12998+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EphemeralCommands.c:160 -1
     (nil))
(jump_insn 279 278 285 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 282)
            (pc))) EphemeralCommands.c:160 -1
     (nil)
 -> 282)
(note 285 279 280 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(call_insn 280 285 281 33 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fc582876af8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EphemeralCommands.c:160 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 281 280 282)
(code_label 282 281 286 34 17 "" [1 uses])
(note 286 282 283 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 283 286 0 34 (use (reg/i:SI 0 ax)) EphemeralCommands.c:160 -1
     (nil))

;; Function TPM2_EC_Ephemeral (TPM2_EC_Ephemeral, funcdef_no=3, decl_uid=12887, cgraph_uid=3, symbol_order=3)

Partition 1: size 50 align 16
	r
Partition 0: size 4 align 4
	result_16

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10


try_optimize_cfg iteration 1

Redirecting jump 22 from 10 to 11.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Removing jump 64.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EphemeralCommands.c:172 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) EphemeralCommands.c:172 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 54 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13005+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:172 -1
     (nil))
(code_label 54 5 7 3 23 "" [1 uses])
(note 7 54 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 3 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 in+0 S8 A64])) EphemeralCommands.c:180 -1
     (nil))
(insn 9 8 10 3 (set (reg:HI 88 [ D.13002 ])
        (mem/j:HI (reg/f:DI 96) [0 in_6(D)->curveID+0 S2 A16])) EphemeralCommands.c:180 -1
     (nil))
(insn 10 9 11 3 (set (reg:SI 89 [ D.13003 ])
        (zero_extend:SI (reg:HI 88 [ D.13002 ]))) EphemeralCommands.c:180 -1
     (nil))
(insn 11 10 12 3 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:180 -1
     (nil))
(insn 12 11 13 3 (set (reg:DI 2 cx)
        (const_int 0 [0])) EphemeralCommands.c:180 -1
     (nil))
(insn 13 12 14 3 (set (reg:SI 1 dx)
        (reg:SI 89 [ D.13003 ])) EphemeralCommands.c:180 -1
     (nil))
(insn 14 13 15 3 (set (reg:DI 4 si)
        (const_int 0 [0])) EphemeralCommands.c:180 -1
     (nil))
(insn 15 14 16 3 (set (reg:DI 5 di)
        (reg:DI 97)) EphemeralCommands.c:180 -1
     (nil))
(call_insn 16 15 17 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptGenerateR") [flags 0x41]  <function_decl 0x7fc5828541b0 CryptGenerateR>) [0 CryptGenerateR S1 A8])
            (const_int 0 [0]))) EphemeralCommands.c:180 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 17 16 18 3 (set (reg:SI 90 [ D.13003 ])
        (reg:SI 0 ax)) EphemeralCommands.c:180 -1
     (nil))
(insn 18 17 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.13003 ])
            (const_int 0 [0]))) EphemeralCommands.c:180 -1
     (nil))
(jump_insn 19 18 20 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) EphemeralCommands.c:180 -1
     (nil)
 -> 24)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:SI 87 [ D.13001 ])
        (const_int 340 [0x154])) EphemeralCommands.c:181 -1
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (label_ref:DI 61)) EphemeralCommands.c:181 654 {jump}
     (nil)
 -> 61)
(barrier 23 22 24)
(code_label 24 23 25 5 19 "" [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 in+0 S8 A64])) EphemeralCommands.c:183 -1
     (nil))
(insn 27 26 28 5 (set (reg:HI 91 [ D.13002 ])
        (mem/j:HI (reg/f:DI 98) [0 in_6(D)->curveID+0 S2 A16])) EphemeralCommands.c:183 -1
     (nil))
(insn 28 27 29 5 (set (reg:SI 92 [ D.13003 ])
        (zero_extend:SI (reg:HI 91 [ D.13002 ]))) EphemeralCommands.c:183 -1
     (nil))
(insn 29 28 30 5 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 out+0 S8 A64])) EphemeralCommands.c:183 -1
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg/f:DI 93 [ D.13004 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:183 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [0 out+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 31 30 32 5 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) EphemeralCommands.c:183 -1
     (nil))
(insn 32 31 33 5 (set (reg:DI 38 r9)
        (const_int 0 [0])) EphemeralCommands.c:183 -1
     (nil))
(insn 33 32 34 5 (set (reg:DI 37 r8)
        (const_int 0 [0])) EphemeralCommands.c:183 -1
     (nil))
(insn 34 33 35 5 (set (reg:DI 2 cx)
        (reg:DI 100)) EphemeralCommands.c:183 -1
     (nil))
(insn 35 34 36 5 (set (reg:DI 1 dx)
        (const_int 0 [0])) EphemeralCommands.c:183 -1
     (nil))
(insn 36 35 37 5 (set (reg:SI 4 si)
        (reg:SI 92 [ D.13003 ])) EphemeralCommands.c:183 -1
     (nil))
(insn 37 36 38 5 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.13004 ])) EphemeralCommands.c:183 -1
     (nil))
(call_insn 38 37 39 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptEccPointMultiply") [flags 0x41]  <function_decl 0x7fc582854ca8 CryptEccPointMultiply>) [0 CryptEccPointMultiply S1 A8])
            (const_int 0 [0]))) EphemeralCommands.c:183 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 39 38 40 5 (set (reg:SI 101)
        (reg:SI 0 ax)) EphemeralCommands.c:183 -1
     (nil))
(insn 40 39 41 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -68 [0xffffffffffffffbc])) [0 result+0 S4 A32])
        (reg:SI 101)) EphemeralCommands.c:183 -1
     (nil))
(insn 41 40 42 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -68 [0xffffffffffffffbc])) [0 result+0 S4 A32])
            (const_int 0 [0]))) EphemeralCommands.c:188 -1
     (nil))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) EphemeralCommands.c:188 -1
     (nil)
 -> 46)
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -68 [0xffffffffffffffbc])) [0 result+0 S4 A32])
            (const_int 340 [0x154]))) EphemeralCommands.c:188 -1
     (nil))
(jump_insn 45 44 46 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) EphemeralCommands.c:188 -1
     (nil)
 -> 52)
(code_label 46 45 47 7 21 "" [1 uses])
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn 48 47 49 7 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptCommit") [flags 0x41]  <function_decl 0x7fc582854288 CryptCommit>) [0 CryptCommit S1 A8])
            (const_int 0 [0]))) EphemeralCommands.c:189 -1
     (nil)
    (nil))
(insn 49 48 50 7 (set (reg:HI 94 [ D.13002 ])
        (reg:HI 0 ax)) EphemeralCommands.c:189 -1
     (nil))
(insn 50 49 51 7 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 out+0 S8 A64])) EphemeralCommands.c:189 -1
     (nil))
(insn 51 50 52 7 (set (mem/j:HI (plus:DI (reg/f:DI 102)
                (const_int 102 [0x66])) [0 out_13(D)->counter+0 S2 A16])
        (reg:HI 94 [ D.13002 ])) EphemeralCommands.c:189 -1
     (nil))
(code_label 52 51 53 8 22 "" [1 uses])
(note 53 52 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 55 53 56 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -68 [0xffffffffffffffbc])) [0 result+0 S4 A32])
            (const_int 340 [0x154]))) EphemeralCommands.c:190 -1
     (nil))
(jump_insn 56 55 57 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) EphemeralCommands.c:190 -1
     (nil)
 -> 54)
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 61 9 (set (reg:SI 87 [ D.13001 ])
        (const_int 0 [0])) EphemeralCommands.c:191 -1
     (nil))
(code_label 61 58 62 11 24 "" [1 uses])
(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 67 11 (set (reg:SI 95 [ <retval> ])
        (reg:SI 87 [ D.13001 ])) -1
     (nil))
(insn 67 63 68 11 (set (reg/i:SI 0 ax)
        (reg:SI 95 [ <retval> ])) EphemeralCommands.c:192 -1
     (nil))
(insn 68 67 69 11 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13005+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EphemeralCommands.c:192 -1
     (nil))
(jump_insn 69 68 75 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) EphemeralCommands.c:192 -1
     (nil)
 -> 72)
(note 75 69 70 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(call_insn 70 75 71 13 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fc582876af8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EphemeralCommands.c:192 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 71 70 72)
(code_label 72 71 76 14 25 "" [1 uses])
(note 76 72 73 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 73 76 0 14 (use (reg/i:SI 0 ax)) EphemeralCommands.c:192 -1
     (nil))
