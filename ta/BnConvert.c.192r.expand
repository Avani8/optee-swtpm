
;; Function BnFromBytes (BnFromBytes, funcdef_no=2, decl_uid=12035, cgraph_uid=2, symbol_order=2)

Partition 2: size 8 align 8
	size_17
Partition 1: size 8 align 8
	pTo_3
Partition 0: size 8 align 8
	pFrom_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 98.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])
        (reg:DI 5 di [ bn ])) BnConvert.c:79 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 bytes+0 S8 A64])
        (reg:DI 4 si [ bytes ])) BnConvert.c:79 -1
     (nil))
(insn 4 3 5 2 (set (reg:SI 103)
        (reg:SI 1 dx [ nBytes ])) BnConvert.c:79 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 nBytes+0 S2 A32])
        (subreg:HI (reg:SI 103) 0)) BnConvert.c:79 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 bytes+0 S8 A64])
            (const_int 0 [0]))) BnConvert.c:84 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) BnConvert.c:84 -1
     (nil)
 -> 19)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:SI 89 [ D.13081 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [0 nBytes+0 S2 A32]))) BnConvert.c:84 -1
     (nil))
(insn 13 12 14 4 (parallel [
            (set (reg:SI 90 [ D.13081 ])
                (ashift:SI (reg:SI 89 [ D.13081 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:84 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg:SI 91 [ D.13081 ])
                (plus:SI (reg:SI 90 [ D.13081 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:84 -1
     (nil))
(insn 15 14 16 4 (parallel [
            (set (reg:SI 92 [ D.13081 ])
                (ashiftrt:SI (reg:SI 91 [ D.13081 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:84 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 87 [ D.13079 ])
        (sign_extend:DI (reg:SI 92 [ D.13081 ]))) BnConvert.c:84 -1
     (nil))
(jump_insn 17 16 18 4 (set (pc)
        (label_ref 22)) -1
     (nil)
 -> 22)
(barrier 18 17 19)
(code_label 19 18 20 5 2 "" [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg:DI 87 [ D.13079 ])
        (const_int 0 [0])) BnConvert.c:84 -1
     (nil))
(code_label 22 21 23 6 3 "" [1 uses])
(note 23 22 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 6 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 size+0 S8 A64])
        (reg:DI 87 [ D.13079 ])) BnConvert.c:84 -1
     (nil))
(insn 25 24 26 6 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])) BnConvert.c:86 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 93 [ D.13082 ])
        (mem/j:DI (reg/f:DI 104) [0 bn_19(D)->allocated+0 S8 A64])) BnConvert.c:86 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 94 [ D.13082 ])
        (zero_extend:DI (subreg:SI (reg:DI 93 [ D.13082 ]) 0))) BnConvert.c:86 -1
     (nil))
(insn 28 27 29 6 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 94 [ D.13082 ])
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 size+0 S8 A64]))) BnConvert.c:86 -1
     (nil))
(jump_insn 29 28 30 6 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) BnConvert.c:86 -1
     (nil)
 -> 36)
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 7 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) BnConvert.c:86 -1
     (nil))
(insn 32 31 33 7 (set (reg:SI 4 si)
        (const_int 86 [0x56])) BnConvert.c:86 -1
     (nil))
(insn 33 32 34 7 (set (reg:DI 5 di)
        (const_int 0 [0])) BnConvert.c:86 -1
     (nil))
(call_insn 34 33 35 7 (call (mem:QI (symbol_ref:DI ("TpmFail") [flags 0x41]  <function_decl 0x7fdbb216a0d8 TpmFail>) [0 TpmFail S1 A8])
        (const_int 0 [0])) BnConvert.c:86 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 35 34 36)
(code_label 36 35 37 8 4 "" [1 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])
            (const_int 0 [0]))) BnConvert.c:88 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) BnConvert.c:88 -1
     (nil)
 -> 44)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg/f:DI 88 [ D.13080 ])
        (const_int 0 [0])) BnConvert.c:89 -1
     (nil))
(jump_insn 42 41 43 9 (set (pc)
        (label_ref 95)) BnConvert.c:89 -1
     (nil)
 -> 95)
(barrier 43 42 44)
(code_label 44 43 45 10 5 "" [1 uses])
(note 45 44 46 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 size+0 S8 A64])
            (const_int 0 [0]))) BnConvert.c:90 -1
     (nil))
(jump_insn 47 46 48 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) BnConvert.c:90 -1
     (nil)
 -> 87)
(note 48 47 49 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 11 (set (reg:DI 105)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 size+0 S8 A64])) BnConvert.c:93 -1
     (nil))
(insn 50 49 51 11 (parallel [
            (set (reg:DI 95 [ D.13082 ])
                (plus:DI (reg:DI 105)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:93 -1
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 size+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 51 50 52 11 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])) BnConvert.c:93 -1
     (nil))
(insn 52 51 53 11 (parallel [
            (set (reg:DI 107)
                (plus:DI (reg:DI 95 [ D.13082 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:93 -1
     (nil))
(insn 53 52 54 11 (set (mem/j:DI (plus:DI (mult:DI (reg:DI 107)
                    (const_int 8 [0x8]))
                (reg/f:DI 106)) [0 bn_19(D)->d S8 A64])
        (const_int 0 [0])) BnConvert.c:93 -1
     (nil))
(insn 54 53 55 11 (set (reg:DI 96 [ D.13083 ])
        (zero_extend:DI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [0 nBytes+0 S2 A32]))) BnConvert.c:95 -1
     (nil))
(insn 55 54 59 11 (parallel [
            (set (reg:DI 97 [ D.13083 ])
                (plus:DI (reg:DI 96 [ D.13083 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:95 -1
     (nil))
(insn 59 55 60 11 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 bytes+0 S8 A64])) BnConvert.c:95 -1
     (nil))
(insn 60 59 61 11 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg:DI 97 [ D.13083 ])
                    (reg/f:DI 111)))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:95 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 bytes+0 S8 A64])
            (reg:DI 97 [ D.13083 ]))
        (nil)))
(insn 61 60 65 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 pFrom+0 S8 A64])
        (reg:DI 110)) BnConvert.c:95 -1
     (nil))
(insn 65 61 66 11 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])) BnConvert.c:97 -1
     (nil))
(insn 66 65 67 11 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg/f:DI 115)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:97 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 67 66 68 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 pTo+0 S8 A64])
        (reg:DI 114)) BnConvert.c:97 -1
     (nil))
(jump_insn 68 67 69 11 (set (pc)
        (label_ref 82)) BnConvert.c:98 -1
     (nil)
 -> 82)
(barrier 69 68 84)
(code_label 84 69 70 12 9 "" [1 uses])
(note 70 84 71 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 12 (set (reg/f:DI 98 [ D.13084 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 pTo+0 S8 A64])) BnConvert.c:99 -1
     (nil))
(insn 72 71 73 12 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 98 [ D.13084 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:99 -1
     (nil))
(insn 73 72 74 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 pTo+0 S8 A64])
        (reg:DI 116)) BnConvert.c:99 -1
     (nil))
(insn 74 73 75 12 (set (reg/f:DI 99 [ D.13085 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 pFrom+0 S8 A64])) BnConvert.c:99 -1
     (nil))
(insn 75 74 76 12 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg/f:DI 99 [ D.13085 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:99 -1
     (nil))
(insn 76 75 77 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 pFrom+0 S8 A64])
        (reg:DI 117)) BnConvert.c:99 -1
     (nil))
(insn 77 76 78 12 (set (reg:QI 100 [ D.13086 ])
        (mem:QI (reg/f:DI 99 [ D.13085 ]) [0 *_31+0 S1 A8])) BnConvert.c:99 -1
     (nil))
(insn 78 77 79 12 (set (mem:QI (reg/f:DI 98 [ D.13084 ]) [0 *_29+0 S1 A8])
        (reg:QI 100 [ D.13086 ])) BnConvert.c:99 -1
     (nil))
(insn 79 78 80 12 (set (reg:HI 101 [ D.13087 ])
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 nBytes+0 S2 A32])) BnConvert.c:98 -1
     (nil))
(insn 80 79 81 12 (parallel [
            (set (reg:HI 118)
                (plus:HI (reg:HI 101 [ D.13087 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:98 -1
     (nil))
(insn 81 80 82 12 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 nBytes+0 S2 A32])
        (reg:HI 118)) BnConvert.c:98 -1
     (nil))
(code_label 82 81 83 13 8 "" [1 uses])
(note 83 82 85 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 85 83 86 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [0 nBytes+0 S2 A32])
            (const_int 0 [0]))) BnConvert.c:98 -1
     (nil))
(jump_insn 86 85 87 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) BnConvert.c:98 -1
     (nil)
 -> 84)
(code_label 87 86 88 14 7 "" [1 uses])
(note 88 87 89 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 14 (set (reg:DI 119)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 size+0 S8 A64])) BnConvert.c:111 -1
     (nil))
(insn 90 89 91 14 (set (reg:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])) BnConvert.c:111 -1
     (nil))
(insn 91 90 92 14 (set (reg:DI 4 si)
        (reg:DI 119)) BnConvert.c:111 -1
     (nil))
(insn 92 91 93 14 (set (reg:DI 5 di)
        (reg:DI 120)) BnConvert.c:111 -1
     (nil))
(call_insn 93 92 94 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("BnSetTop") [flags 0x41]  <function_decl 0x7fdbb220f5e8 BnSetTop>) [0 BnSetTop S1 A8])
            (const_int 0 [0]))) BnConvert.c:111 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 94 93 95 14 (set (reg/f:DI 88 [ D.13080 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])) BnConvert.c:112 -1
     (nil))
(code_label 95 94 96 15 6 "" [1 uses])
(note 96 95 97 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 101 15 (set (reg:DI 102 [ <retval> ])
        (reg/f:DI 88 [ D.13080 ])) -1
     (nil))
(insn 101 97 102 15 (set (reg/i:DI 0 ax)
        (reg:DI 102 [ <retval> ])) BnConvert.c:113 -1
     (nil))
(insn 102 101 0 15 (use (reg/i:DI 0 ax)) BnConvert.c:113 -1
     (nil))

;; Function BnFrom2B (BnFrom2B, funcdef_no=3, decl_uid=12038, cgraph_uid=3, symbol_order=3)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 33.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 bn+0 S8 A64])
        (reg:DI 5 di [ bn ])) BnConvert.c:122 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 a2B+0 S8 A64])
        (reg:DI 4 si [ a2B ])) BnConvert.c:122 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 a2B+0 S8 A64])
            (const_int 0 [0]))) BnConvert.c:123 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) BnConvert.c:123 -1
     (nil)
 -> 23)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 a2B+0 S8 A64])) BnConvert.c:124 -1
     (nil))
(insn 11 10 12 4 (set (reg:HI 88 [ D.13089 ])
        (mem/j:HI (reg/f:DI 92) [0 a2B_3(D)->size+0 S2 A16])) BnConvert.c:124 -1
     (nil))
(insn 12 11 13 4 (set (reg:SI 89 [ D.13090 ])
        (zero_extend:SI (reg:HI 88 [ D.13089 ]))) BnConvert.c:124 -1
     (nil))
(insn 13 12 14 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 a2B+0 S8 A64])) BnConvert.c:124 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg/f:DI 90 [ D.13091 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:124 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 a2B+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 15 14 16 4 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 bn+0 S8 A64])) BnConvert.c:124 -1
     (nil))
(insn 16 15 17 4 (set (reg:SI 1 dx)
        (reg:SI 89 [ D.13090 ])) BnConvert.c:124 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.13091 ])) BnConvert.c:124 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg:DI 94)) BnConvert.c:124 -1
     (nil))
(call_insn 19 18 20 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("BnFromBytes") [flags 0x3]  <function_decl 0x7fdbb220c0d8 BnFromBytes>) [0 BnFromBytes S1 A8])
            (const_int 0 [0]))) BnConvert.c:124 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 20 19 21 4 (set (reg/f:DI 87 [ D.13088 ])
        (reg:DI 0 ax)) BnConvert.c:124 -1
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (label_ref 30)) BnConvert.c:124 -1
     (nil)
 -> 30)
(barrier 22 21 23)
(code_label 23 22 24 5 11 "" [1 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 bn+0 S8 A64])) BnConvert.c:127 -1
     (nil))
(insn 26 25 27 5 (set (reg:DI 4 si)
        (const_int 0 [0])) BnConvert.c:127 -1
     (nil))
(insn 27 26 28 5 (set (reg:DI 5 di)
        (reg:DI 95)) BnConvert.c:127 -1
     (nil))
(call_insn 28 27 29 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("BnSetTop") [flags 0x41]  <function_decl 0x7fdbb220f5e8 BnSetTop>) [0 BnSetTop S1 A8])
            (const_int 0 [0]))) BnConvert.c:127 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 29 28 30 5 (set (reg/f:DI 87 [ D.13088 ])
        (const_int 0 [0])) BnConvert.c:128 -1
     (nil))
(code_label 30 29 31 6 12 "" [1 uses])
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 36 6 (set (reg:DI 91 [ <retval> ])
        (reg/f:DI 87 [ D.13088 ])) -1
     (nil))
(insn 36 32 37 6 (set (reg/i:DI 0 ax)
        (reg:DI 91 [ <retval> ])) BnConvert.c:129 -1
     (nil))
(insn 37 36 0 6 (use (reg/i:DI 0 ax)) BnConvert.c:129 -1
     (nil))

;; Function BnFromHex (BnFromHex, funcdef_no=4, decl_uid=12041, cgraph_uid=4, symbol_order=4)

Partition 2: size 8 align 8
	d_4
Partition 1: size 8 align 8
	p_3
Partition 3: size 4 align 4
	wordCount_24
Partition 0: size 4 align 4
	i_1
Partition 4: size 1 align 1
	a_40

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 74 from 11 to 13.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Redirecting jump 108 from 17 to 19.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.
Redirecting jump 152 from 26 to 28.
Merging block 26 into block 25...
Merged blocks 25 and 26.
Merged 25 and 26 without moving.
Merging block 33 into block 32...
Merged blocks 32 and 33.
Merged 32 and 33 without moving.
Removing jump 201.
Merging block 34 into block 32...
Merged blocks 32 and 34.
Merged 32 and 34 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])
        (reg:DI 5 di [ bn ])) BnConvert.c:137 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 hex+0 S8 A64])
        (reg:DI 4 si [ hex ])) BnConvert.c:137 -1
     (nil))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 4 11 2 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])) BnConvert.c:143 -1
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg/f:DI 125)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:143 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 d+0 S8 A64])
        (reg:DI 124)) BnConvert.c:143 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 hex+0 S8 A64])) BnConvert.c:144 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 126)) BnConvert.c:144 -1
     (nil))
(call_insn/i 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fdbb2e23948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) BnConvert.c:144 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 2 (set (reg:DI 90 [ D.13093 ])
        (reg:DI 0 ax)) BnConvert.c:144 -1
     (nil))
(insn 17 16 18 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
        (subreg:SI (reg:DI 90 [ D.13093 ]) 0)) BnConvert.c:144 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) BnConvert.c:145 -1
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg:SI 91 [ D.13094 ])
                (plus:SI (reg:SI 127)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:145 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 20 19 21 2 (parallel [
            (set (reg:SI 92 [ D.13094 ])
                (lshiftrt:SI (reg:SI 91 [ D.13094 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:145 -1
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 91 [ D.13094 ])
            (const_int 2 [0x2]))
        (nil)))
(insn 21 20 22 2 (parallel [
            (set (reg:SI 93 [ D.13094 ])
                (ashift:SI (reg:SI 92 [ D.13094 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:145 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:SI 94 [ D.13094 ])
                (plus:SI (reg:SI 93 [ D.13094 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:145 -1
     (nil))
(insn 23 22 24 2 (parallel [
            (set (reg:SI 128)
                (lshiftrt:SI (reg:SI 94 [ D.13094 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:145 -1
     (nil))
(insn 24 23 25 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 wordCount+0 S4 A32])
        (reg:SI 128)) BnConvert.c:145 -1
     (nil))
(insn 25 24 26 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
            (const_int 0 [0]))) BnConvert.c:146 -1
     (nil))
(jump_insn 26 25 27 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) BnConvert.c:146 -1
     (nil)
 -> 33)
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])) BnConvert.c:146 -1
     (nil))
(insn 29 28 30 4 (set (reg:DI 95 [ D.13093 ])
        (mem/j:DI (reg/f:DI 129) [0 bn_14(D)->allocated+0 S8 A64])) BnConvert.c:146 -1
     (nil))
(insn 30 29 31 4 (set (reg:SI 96 [ D.13094 ])
        (subreg:SI (reg:DI 95 [ D.13093 ]) 0)) BnConvert.c:146 -1
     (nil))
(insn 31 30 32 4 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 96 [ D.13094 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 wordCount+0 S4 A32]))) BnConvert.c:146 -1
     (nil))
(jump_insn 32 31 33 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) BnConvert.c:146 -1
     (nil)
 -> 41)
(code_label 33 32 34 5 14 "" [1 uses])
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])) BnConvert.c:147 -1
     (nil))
(insn 36 35 37 5 (set (reg:DI 4 si)
        (const_int 0 [0])) BnConvert.c:147 -1
     (nil))
(insn 37 36 38 5 (set (reg:DI 5 di)
        (reg:DI 130)) BnConvert.c:147 -1
     (nil))
(call_insn 38 37 39 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("BnSetWord") [flags 0x41]  <function_decl 0x7fdbb220f000 BnSetWord>) [0 BnSetWord S1 A8])
            (const_int 0 [0]))) BnConvert.c:147 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 39 38 40 5 (set (pc)
        (label_ref 169)) BnConvert.c:147 -1
     (nil)
 -> 169)
(barrier 40 39 41)
(code_label 41 40 42 6 15 "" [1 uses])
(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 6 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 wordCount+0 S4 A32])) BnConvert.c:150 -1
     (nil))
(insn 44 43 45 6 (parallel [
            (set (reg:SI 97 [ D.13094 ])
                (plus:SI (reg:SI 131)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:150 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 wordCount+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 45 44 46 6 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])) BnConvert.c:150 -1
     (nil))
(insn 46 45 47 6 (set (reg:DI 133)
        (zero_extend:DI (reg:SI 97 [ D.13094 ]))) BnConvert.c:150 -1
     (nil))
(insn 47 46 48 6 (parallel [
            (set (reg:DI 134)
                (plus:DI (reg:DI 133)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:150 -1
     (nil))
(insn 48 47 49 6 (set (mem/j:DI (plus:DI (mult:DI (reg:DI 134)
                    (const_int 8 [0x8]))
                (reg/f:DI 132)) [0 bn_14(D)->d S8 A64])
        (const_int 0 [0])) BnConvert.c:150 -1
     (nil))
(insn 49 48 50 6 (set (reg:DI 98 [ D.13095 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32]))) BnConvert.c:151 -1
     (nil))
(insn 50 49 54 6 (parallel [
            (set (reg:DI 99 [ D.13095 ])
                (plus:DI (reg:DI 98 [ D.13095 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:151 -1
     (nil))
(insn 54 50 55 6 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 hex+0 S8 A64])) BnConvert.c:151 -1
     (nil))
(insn 55 54 56 6 (parallel [
            (set (reg:DI 137)
                (plus:DI (reg:DI 99 [ D.13095 ])
                    (reg/f:DI 138)))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:151 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 hex+0 S8 A64])
            (reg:DI 99 [ D.13095 ]))
        (nil)))
(insn 56 55 57 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])
        (reg:DI 137)) BnConvert.c:151 -1
     (nil))
(jump_insn 57 56 58 6 (set (pc)
        (label_ref 129)) BnConvert.c:152 -1
     (nil)
 -> 129)
(barrier 58 57 131)
(code_label 131 58 59 7 26 "" [1 uses])
(note 59 131 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 7 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])) BnConvert.c:155 -1
     (nil))
(insn 61 60 62 7 (set (reg:QI 100 [ D.13096 ])
        (mem:QI (reg/f:DI 139) [0 *p_3+0 S1 A8])) BnConvert.c:155 -1
     (nil))
(insn 62 61 63 7 (set (reg:QI 101 [ D.13097 ])
        (reg:QI 100 [ D.13096 ])) BnConvert.c:155 -1
     (nil))
(insn 63 62 64 7 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])) BnConvert.c:155 -1
     (nil))
(insn 64 63 65 7 (set (reg:QI 102 [ D.13096 ])
        (mem:QI (reg/f:DI 140) [0 *p_3+0 S1 A8])) BnConvert.c:155 -1
     (nil))
(insn 65 64 66 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 102 [ D.13096 ])
            (const_int 97 [0x61]))) BnConvert.c:155 -1
     (nil))
(jump_insn 66 65 67 7 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) BnConvert.c:155 -1
     (nil)
 -> 83)
(note 67 66 68 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 8 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])) BnConvert.c:155 -1
     (nil))
(insn 69 68 70 8 (set (reg:QI 103 [ D.13096 ])
        (mem:QI (reg/f:DI 141) [0 *p_3+0 S1 A8])) BnConvert.c:155 -1
     (nil))
(insn 70 69 71 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 103 [ D.13096 ])
            (const_int 65 [0x41]))) BnConvert.c:155 -1
     (nil))
(jump_insn 71 70 72 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) BnConvert.c:155 -1
     (nil)
 -> 76)
(note 72 71 73 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 9 (set (reg:QI 87 [ D.13092 ])
        (const_int 55 [0x37])) BnConvert.c:155 -1
     (nil))
(jump_insn 74 73 75 9 (set (pc)
        (label_ref:DI 86)) 654 {jump}
     (nil)
 -> 86)
(barrier 75 74 76)
(code_label 76 75 77 10 19 "" [1 uses])
(note 77 76 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 81 10 (set (reg:QI 87 [ D.13092 ])
        (const_int 48 [0x30])) BnConvert.c:155 -1
     (nil))
(jump_insn 81 78 82 10 (set (pc)
        (label_ref 86)) -1
     (nil)
 -> 86)
(barrier 82 81 83)
(code_label 83 82 84 12 18 "" [1 uses])
(note 84 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 12 (set (reg:QI 87 [ D.13092 ])
        (const_int 107 [0x6b])) BnConvert.c:155 -1
     (nil))
(code_label 86 85 87 13 21 "" [2 uses])
(note 87 86 88 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 13 (parallel [
            (set (reg:QI 142)
                (minus:QI (reg:QI 101 [ D.13097 ])
                    (reg:QI 87 [ D.13092 ])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:155 -1
     (nil))
(insn 89 88 90 13 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -25 [0xffffffffffffffe7])) [0 a+0 S1 A8])
        (reg:QI 142)) BnConvert.c:155 -1
     (nil))
(insn 90 89 91 13 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:156 -1
     (nil))
(insn 91 90 92 13 (set (reg/f:DI 104 [ D.13098 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 d+0 S8 A64])) BnConvert.c:157 -1
     (nil))
(insn 92 91 93 13 (parallel [
            (set (reg:DI 143)
                (plus:DI (reg/f:DI 104 [ D.13098 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:157 -1
     (nil))
(insn 93 92 94 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 d+0 S8 A64])
        (reg:DI 143)) BnConvert.c:157 -1
     (nil))
(insn 94 93 95 13 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])) BnConvert.c:157 -1
     (nil))
(insn 95 94 96 13 (set (reg:QI 105 [ D.13096 ])
        (mem:QI (reg/f:DI 144) [0 *p_41+0 S1 A8])) BnConvert.c:157 -1
     (nil))
(insn 96 95 97 13 (set (reg:QI 106 [ D.13097 ])
        (reg:QI 105 [ D.13096 ])) BnConvert.c:157 -1
     (nil))
(insn 97 96 98 13 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])) BnConvert.c:157 -1
     (nil))
(insn 98 97 99 13 (set (reg:QI 107 [ D.13096 ])
        (mem:QI (reg/f:DI 145) [0 *p_41+0 S1 A8])) BnConvert.c:157 -1
     (nil))
(insn 99 98 100 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 107 [ D.13096 ])
            (const_int 97 [0x61]))) BnConvert.c:157 -1
     (nil))
(jump_insn 100 99 101 13 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) BnConvert.c:157 -1
     (nil)
 -> 117)
(note 101 100 102 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 14 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])) BnConvert.c:157 -1
     (nil))
(insn 103 102 104 14 (set (reg:QI 108 [ D.13096 ])
        (mem:QI (reg/f:DI 146) [0 *p_41+0 S1 A8])) BnConvert.c:157 -1
     (nil))
(insn 104 103 105 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 108 [ D.13096 ])
            (const_int 65 [0x41]))) BnConvert.c:157 -1
     (nil))
(jump_insn 105 104 106 14 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) BnConvert.c:157 -1
     (nil)
 -> 110)
(note 106 105 107 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 15 (set (reg:QI 88 [ D.13092 ])
        (const_int 55 [0x37])) BnConvert.c:157 -1
     (nil))
(jump_insn 108 107 109 15 (set (pc)
        (label_ref:DI 120)) 654 {jump}
     (nil)
 -> 120)
(barrier 109 108 110)
(code_label 110 109 111 16 23 "" [1 uses])
(note 111 110 112 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 115 16 (set (reg:QI 88 [ D.13092 ])
        (const_int 48 [0x30])) BnConvert.c:157 -1
     (nil))
(jump_insn 115 112 116 16 (set (pc)
        (label_ref 120)) -1
     (nil)
 -> 120)
(barrier 116 115 117)
(code_label 117 116 118 18 22 "" [1 uses])
(note 118 117 119 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 18 (set (reg:QI 88 [ D.13092 ])
        (const_int 107 [0x6b])) BnConvert.c:157 -1
     (nil))
(code_label 120 119 121 19 25 "" [2 uses])
(note 121 120 122 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 19 (parallel [
            (set (reg:QI 109 [ D.13097 ])
                (minus:QI (reg:QI 106 [ D.13097 ])
                    (reg:QI 88 [ D.13092 ])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:157 -1
     (nil))
(insn 123 122 124 19 (parallel [
            (set (reg:QI 110 [ D.13097 ])
                (ashift:QI (reg:QI 109 [ D.13097 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:157 -1
     (nil))
(insn 124 123 125 19 (set (reg:QI 147)
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -25 [0xffffffffffffffe7])) [0 a+0 S1 A8])) BnConvert.c:157 -1
     (nil))
(insn 125 124 126 19 (parallel [
            (set (reg:QI 111 [ D.13097 ])
                (plus:QI (reg:QI 110 [ D.13097 ])
                    (reg:QI 147)))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:157 -1
     (expr_list:REG_EQUAL (plus:QI (reg:QI 110 [ D.13097 ])
            (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -25 [0xffffffffffffffe7])) [0 a+0 S1 A8]))
        (nil)))
(insn 126 125 127 19 (set (mem:QI (reg/f:DI 104 [ D.13098 ]) [0 *_42+0 S1 A8])
        (reg:QI 111 [ D.13097 ])) BnConvert.c:157 -1
     (nil))
(insn 127 126 128 19 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:158 -1
     (nil))
(insn 128 127 129 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:152 -1
     (nil))
(code_label 129 128 130 20 17 "" [1 uses])
(note 130 129 132 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 132 130 133 20 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) BnConvert.c:152 -1
     (nil))
(jump_insn 133 132 134 20 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) BnConvert.c:152 -1
     (nil)
 -> 131)
(note 134 133 135 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) BnConvert.c:160 -1
     (nil))
(jump_insn 136 135 137 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) BnConvert.c:160 -1
     (nil)
 -> 169)
(note 137 136 138 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 22 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])) BnConvert.c:161 -1
     (nil))
(insn 139 138 140 22 (set (reg:QI 112 [ D.13096 ])
        (mem:QI (reg/f:DI 148) [0 *p_3+0 S1 A8])) BnConvert.c:161 -1
     (nil))
(insn 140 139 141 22 (set (reg:QI 113 [ D.13097 ])
        (reg:QI 112 [ D.13096 ])) BnConvert.c:161 -1
     (nil))
(insn 141 140 142 22 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])) BnConvert.c:161 -1
     (nil))
(insn 142 141 143 22 (set (reg:QI 114 [ D.13096 ])
        (mem:QI (reg/f:DI 149) [0 *p_3+0 S1 A8])) BnConvert.c:161 -1
     (nil))
(insn 143 142 144 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 114 [ D.13096 ])
            (const_int 97 [0x61]))) BnConvert.c:161 -1
     (nil))
(jump_insn 144 143 145 22 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 161)
            (pc))) BnConvert.c:161 -1
     (nil)
 -> 161)
(note 145 144 146 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 23 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])) BnConvert.c:161 -1
     (nil))
(insn 147 146 148 23 (set (reg:QI 115 [ D.13096 ])
        (mem:QI (reg/f:DI 150) [0 *p_3+0 S1 A8])) BnConvert.c:161 -1
     (nil))
(insn 148 147 149 23 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 115 [ D.13096 ])
            (const_int 65 [0x41]))) BnConvert.c:161 -1
     (nil))
(jump_insn 149 148 150 23 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 154)
            (pc))) BnConvert.c:161 -1
     (nil)
 -> 154)
(note 150 149 151 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 24 (set (reg:QI 89 [ D.13092 ])
        (const_int 55 [0x37])) BnConvert.c:161 -1
     (nil))
(jump_insn 152 151 153 24 (set (pc)
        (label_ref:DI 164)) 654 {jump}
     (nil)
 -> 164)
(barrier 153 152 154)
(code_label 154 153 155 25 28 "" [1 uses])
(note 155 154 156 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 159 25 (set (reg:QI 89 [ D.13092 ])
        (const_int 48 [0x30])) BnConvert.c:161 -1
     (nil))
(jump_insn 159 156 160 25 (set (pc)
        (label_ref 164)) -1
     (nil)
 -> 164)
(barrier 160 159 161)
(code_label 161 160 162 27 27 "" [1 uses])
(note 162 161 163 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 27 (set (reg:QI 89 [ D.13092 ])
        (const_int 107 [0x6b])) BnConvert.c:161 -1
     (nil))
(code_label 164 163 165 28 30 "" [2 uses])
(note 165 164 166 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 28 (parallel [
            (set (reg:QI 116 [ D.13097 ])
                (minus:QI (reg:QI 113 [ D.13097 ])
                    (reg:QI 89 [ D.13092 ])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:161 -1
     (nil))
(insn 167 166 168 28 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 d+0 S8 A64])) BnConvert.c:161 -1
     (nil))
(insn 168 167 169 28 (set (mem:QI (reg/f:DI 151) [0 *d_4+0 S1 A8])
        (reg:QI 116 [ D.13097 ])) BnConvert.c:161 -1
     (nil))
(code_label 169 168 170 29 16 "" [2 uses])
(note 170 169 171 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 29 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
        (const_int 0 [0])) BnConvert.c:164 -1
     (nil))
(jump_insn 172 171 173 29 (set (pc)
        (label_ref 185)) BnConvert.c:164 -1
     (nil)
 -> 185)
(barrier 173 172 187)
(code_label 187 173 174 30 32 "" [1 uses])
(note 174 187 175 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 30 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])) BnConvert.c:165 -1
     (nil))
(insn 176 175 177 30 (set (reg:DI 153)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32]))) BnConvert.c:165 -1
     (nil))
(insn 177 176 178 30 (parallel [
            (set (reg:DI 154)
                (plus:DI (reg:DI 153)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:165 -1
     (nil))
(insn 178 177 179 30 (set (reg:DI 117 [ D.13093 ])
        (mem/j:DI (plus:DI (mult:DI (reg:DI 154)
                    (const_int 8 [0x8]))
                (reg/f:DI 152)) [0 bn_14(D)->d S8 A64])) BnConvert.c:165 -1
     (nil))
(insn 179 178 180 30 (set (reg:DI 118 [ D.13093 ])
        (bswap:DI (reg:DI 117 [ D.13093 ]))) BnConvert.c:165 -1
     (nil))
(insn 180 179 181 30 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])) BnConvert.c:165 -1
     (nil))
(insn 181 180 182 30 (set (reg:DI 156)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32]))) BnConvert.c:165 -1
     (nil))
(insn 182 181 183 30 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg:DI 156)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:165 -1
     (nil))
(insn 183 182 184 30 (set (mem/j:DI (plus:DI (mult:DI (reg:DI 157)
                    (const_int 8 [0x8]))
                (reg/f:DI 155)) [0 bn_14(D)->d S8 A64])
        (reg:DI 118 [ D.13093 ])) BnConvert.c:165 -1
     (nil))
(insn 184 183 185 30 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:164 -1
     (nil))
(code_label 185 184 186 31 31 "" [1 uses])
(note 186 185 188 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 188 186 189 31 (set (reg:SI 158)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) BnConvert.c:164 -1
     (nil))
(insn 189 188 190 31 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 158)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 wordCount+0 S4 A32]))) BnConvert.c:164 -1
     (nil))
(jump_insn 190 189 191 31 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) BnConvert.c:164 -1
     (nil)
 -> 187)
(note 191 190 192 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 32 (set (reg:DI 119 [ D.13093 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 wordCount+0 S4 A32]))) BnConvert.c:167 -1
     (nil))
(insn 193 192 194 32 (set (reg:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])) BnConvert.c:167 -1
     (nil))
(insn 194 193 195 32 (set (reg:DI 4 si)
        (reg:DI 119 [ D.13093 ])) BnConvert.c:167 -1
     (nil))
(insn 195 194 196 32 (set (reg:DI 5 di)
        (reg:DI 159)) BnConvert.c:167 -1
     (nil))
(call_insn 196 195 197 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("BnSetTop") [flags 0x41]  <function_decl 0x7fdbb220f5e8 BnSetTop>) [0 BnSetTop S1 A8])
            (const_int 0 [0]))) BnConvert.c:167 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 197 196 200 32 (set (reg/f:DI 120 [ D.13099 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])) BnConvert.c:168 -1
     (nil))
(insn 200 197 204 32 (set (reg:DI 121 [ <retval> ])
        (reg/f:DI 120 [ D.13099 ])) BnConvert.c:168 -1
     (nil))
(insn 204 200 205 32 (set (reg/i:DI 0 ax)
        (reg:DI 121 [ <retval> ])) BnConvert.c:169 -1
     (nil))
(insn 205 204 0 32 (use (reg/i:DI 0 ax)) BnConvert.c:169 -1
     (nil))

;; Function BnToBytes (BnToBytes, funcdef_no=5, decl_uid=12045, cgraph_uid=5, symbol_order=5)

Partition 3: size 8 align 8
	count_5
Partition 2: size 8 align 8
	pTo_3
Partition 1: size 8 align 8
	pFrom_2
Partition 0: size 8 align 8
	requiredSize_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 20 into block 19...
Merged blocks 19 and 20.
Merged 19 and 20 without moving.
Removing jump 121.
Merging block 21 into block 19...
Merged blocks 19 and 21.
Merged 19 and 21 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])
        (reg:DI 5 di [ bn ])) BnConvert.c:187 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) BnConvert.c:187 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 size+0 S8 A64])
        (reg:DI 1 dx [ size ])) BnConvert.c:187 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])
            (const_int 0 [0]))) BnConvert.c:194 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) BnConvert.c:194 -1
     (nil)
 -> 16)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 buffer+0 S8 A64])
            (const_int 0 [0]))) BnConvert.c:194 -1
     (nil))
(jump_insn 12 11 13 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) BnConvert.c:194 -1
     (nil)
 -> 16)
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 size+0 S8 A64])
            (const_int 0 [0]))) BnConvert.c:194 -1
     (nil))
(jump_insn 15 14 16 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) BnConvert.c:194 -1
     (nil)
 -> 23)
(code_label 16 15 17 6 35 "" [2 uses])
(note 17 16 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 6 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) BnConvert.c:194 -1
     (nil))
(insn 19 18 20 6 (set (reg:SI 4 si)
        (const_int 194 [0xc2])) BnConvert.c:194 -1
     (nil))
(insn 20 19 21 6 (set (reg:DI 5 di)
        (const_int 0 [0])) BnConvert.c:194 -1
     (nil))
(call_insn 21 20 22 6 (call (mem:QI (symbol_ref:DI ("TpmFail") [flags 0x41]  <function_decl 0x7fdbb216a0d8 TpmFail>) [0 TpmFail S1 A8])
        (const_int 0 [0])) BnConvert.c:194 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 22 21 23)
(code_label 23 22 24 7 36 "" [1 uses])
(note 24 23 25 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 7 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])) BnConvert.c:195 -1
     (nil))
(insn 26 25 27 7 (set (reg:DI 5 di)
        (reg:DI 104)) BnConvert.c:195 -1
     (nil))
(call_insn 27 26 28 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("BnSizeInBits") [flags 0x41]  <function_decl 0x7fdbb220ce58 BnSizeInBits>) [0 BnSizeInBits S1 A8])
            (const_int 0 [0]))) BnConvert.c:195 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 28 27 29 7 (set (reg:SI 87 [ D.13100 ])
        (reg:SI 0 ax)) BnConvert.c:195 -1
     (nil))
(insn 29 28 30 7 (parallel [
            (set (reg:SI 88 [ D.13100 ])
                (plus:SI (reg:SI 87 [ D.13100 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:195 -1
     (nil))
(insn 30 29 31 7 (parallel [
            (set (reg:SI 89 [ D.13100 ])
                (lshiftrt:SI (reg:SI 88 [ D.13100 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:195 -1
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 88 [ D.13100 ])
            (const_int 8 [0x8]))
        (nil)))
(insn 31 30 32 7 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 requiredSize+0 S8 A64])
        (zero_extend:DI (reg:SI 89 [ D.13100 ]))) BnConvert.c:195 -1
     (nil))
(insn 32 31 33 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 requiredSize+0 S8 A64])
            (const_int 0 [0]))) BnConvert.c:196 -1
     (nil))
(jump_insn 33 32 34 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) BnConvert.c:196 -1
     (nil)
 -> 41)
(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 8 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 size+0 S8 A64])) BnConvert.c:199 -1
     (nil))
(insn 36 35 37 8 (set (mem:HI (reg/f:DI 105) [0 *size_12(D)+0 S2 A16])
        (const_int 1 [0x1])) BnConvert.c:199 -1
     (nil))
(insn 37 36 38 8 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 buffer+0 S8 A64])) BnConvert.c:200 -1
     (nil))
(insn 38 37 39 8 (set (mem:QI (reg/f:DI 106) [0 *buffer_11(D)+0 S1 A8])
        (const_int 0 [0])) BnConvert.c:200 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (label_ref 115)) -1
     (nil)
 -> 115)
(barrier 40 39 41)
(code_label 41 40 42 9 37 "" [1 uses])
(note 42 41 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 9 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 size+0 S8 A64])) BnConvert.c:213 -1
     (nil))
(insn 44 43 45 9 (set (reg:HI 90 [ D.13101 ])
        (mem:HI (reg/f:DI 107) [0 *size_12(D)+0 S2 A16])) BnConvert.c:213 -1
     (nil))
(insn 45 44 46 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 90 [ D.13101 ])
            (const_int 0 [0]))) BnConvert.c:213 -1
     (nil))
(jump_insn 46 45 47 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) BnConvert.c:213 -1
     (nil)
 -> 52)
(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 10 (set (reg:DI 108)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 requiredSize+0 S8 A64])) BnConvert.c:214 -1
     (nil))
(insn 49 48 50 10 (set (reg:HI 91 [ D.13101 ])
        (subreg:HI (reg:DI 108) 0)) BnConvert.c:214 -1
     (nil))
(insn 50 49 51 10 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 size+0 S8 A64])) BnConvert.c:214 -1
     (nil))
(insn 51 50 52 10 (set (mem:HI (reg/f:DI 109) [0 *size_12(D)+0 S2 A16])
        (reg:HI 91 [ D.13101 ])) BnConvert.c:214 -1
     (nil))
(code_label 52 51 53 11 39 "" [1 uses])
(note 53 52 54 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 11 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 size+0 S8 A64])) BnConvert.c:215 -1
     (nil))
(insn 55 54 56 11 (set (reg:HI 92 [ D.13101 ])
        (mem:HI (reg/f:DI 110) [0 *size_12(D)+0 S2 A16])) BnConvert.c:215 -1
     (nil))
(insn 56 55 57 11 (set (reg:DI 93 [ D.13102 ])
        (zero_extend:DI (reg:HI 92 [ D.13101 ]))) BnConvert.c:215 -1
     (nil))
(insn 57 56 58 11 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 93 [ D.13102 ])
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 requiredSize+0 S8 A64]))) BnConvert.c:215 -1
     (nil))
(jump_insn 58 57 59 11 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) BnConvert.c:215 -1
     (nil)
 -> 65)
(note 59 58 60 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 12 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) BnConvert.c:215 -1
     (nil))
(insn 61 60 62 12 (set (reg:SI 4 si)
        (const_int 215 [0xd7])) BnConvert.c:215 -1
     (nil))
(insn 62 61 63 12 (set (reg:DI 5 di)
        (const_int 0 [0])) BnConvert.c:215 -1
     (nil))
(call_insn 63 62 64 12 (call (mem:QI (symbol_ref:DI ("TpmFail") [flags 0x41]  <function_decl 0x7fdbb216a0d8 TpmFail>) [0 TpmFail S1 A8])
        (const_int 0 [0])) BnConvert.c:215 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 64 63 65)
(code_label 65 64 66 13 40 "" [1 uses])
(note 66 65 67 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 13 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 size+0 S8 A64])) BnConvert.c:217 -1
     (nil))
(insn 68 67 69 13 (set (reg:HI 94 [ D.13101 ])
        (mem:HI (reg/f:DI 111) [0 *size_12(D)+0 S2 A16])) BnConvert.c:217 -1
     (nil))
(insn 69 68 70 13 (set (reg:DI 112)
        (zero_extend:DI (reg:HI 94 [ D.13101 ]))) BnConvert.c:217 -1
     (nil))
(insn 70 69 71 13 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 count+0 S8 A64])
        (reg:DI 112)) BnConvert.c:217 -1
     (nil))
(insn 71 70 72 13 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])) BnConvert.c:220 -1
     (nil))
(insn 72 71 73 13 (parallel [
            (set (reg/f:DI 95 [ D.13103 ])
                (plus:DI (reg/f:DI 113)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:220 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 bn+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 73 72 74 13 (set (reg:DI 114)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 requiredSize+0 S8 A64])) BnConvert.c:220 -1
     (nil))
(insn 74 73 75 13 (parallel [
            (set (reg:DI 96 [ D.13104 ])
                (plus:DI (reg:DI 114)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:220 -1
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 requiredSize+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 75 74 76 13 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg/f:DI 95 [ D.13103 ])
                    (reg:DI 96 [ D.13104 ])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:220 -1
     (nil))
(insn 76 75 77 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 pFrom+0 S8 A64])
        (reg:DI 115)) BnConvert.c:220 -1
     (nil))
(insn 77 76 78 13 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 buffer+0 S8 A64])) BnConvert.c:221 -1
     (nil))
(insn 78 77 79 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 pTo+0 S8 A64])
        (reg/f:DI 116)) BnConvert.c:221 -1
     (nil))
(insn 79 78 80 13 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 size+0 S8 A64])) BnConvert.c:224 -1
     (nil))
(insn 80 79 81 13 (set (reg:HI 97 [ D.13101 ])
        (mem:HI (reg/f:DI 117) [0 *size_12(D)+0 S2 A16])) BnConvert.c:224 -1
     (nil))
(insn 81 80 82 13 (set (reg:DI 118)
        (zero_extend:DI (reg:HI 97 [ D.13101 ]))) BnConvert.c:224 -1
     (nil))
(insn 82 81 83 13 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 count+0 S8 A64])
        (reg:DI 118)) BnConvert.c:224 -1
     (nil))
(jump_insn 83 82 84 13 (set (pc)
        (label_ref 91)) BnConvert.c:224 -1
     (nil)
 -> 91)
(barrier 84 83 93)
(code_label 93 84 85 14 42 "" [1 uses])
(note 85 93 86 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 14 (set (reg/f:DI 98 [ D.13105 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 pTo+0 S8 A64])) BnConvert.c:225 -1
     (nil))
(insn 87 86 88 14 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 98 [ D.13105 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:225 -1
     (nil))
(insn 88 87 89 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 pTo+0 S8 A64])
        (reg:DI 119)) BnConvert.c:225 -1
     (nil))
(insn 89 88 90 14 (set (mem:QI (reg/f:DI 98 [ D.13105 ]) [0 *_34+0 S1 A8])
        (const_int 0 [0])) BnConvert.c:225 -1
     (nil))
(insn 90 89 91 14 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 count+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 count+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:224 -1
     (nil))
(code_label 91 90 92 15 41 "" [1 uses])
(note 92 91 94 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 94 92 95 15 (set (reg:DI 120)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 count+0 S8 A64])) BnConvert.c:224 -1
     (nil))
(insn 95 94 96 15 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 120)
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 requiredSize+0 S8 A64]))) BnConvert.c:224 -1
     (nil))
(jump_insn 96 95 97 15 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) BnConvert.c:224 -1
     (nil)
 -> 93)
(note 97 96 98 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(jump_insn 98 97 99 16 (set (pc)
        (label_ref 110)) BnConvert.c:228 -1
     (nil)
 -> 110)
(barrier 99 98 112)
(code_label 112 99 100 17 44 "" [1 uses])
(note 100 112 101 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 17 (set (reg/f:DI 99 [ D.13105 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 pTo+0 S8 A64])) BnConvert.c:229 -1
     (nil))
(insn 102 101 103 17 (parallel [
            (set (reg:DI 121)
                (plus:DI (reg/f:DI 99 [ D.13105 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:229 -1
     (nil))
(insn 103 102 104 17 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 pTo+0 S8 A64])
        (reg:DI 121)) BnConvert.c:229 -1
     (nil))
(insn 104 103 105 17 (set (reg/f:DI 100 [ D.13105 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 pFrom+0 S8 A64])) BnConvert.c:229 -1
     (nil))
(insn 105 104 106 17 (parallel [
            (set (reg:DI 122)
                (plus:DI (reg/f:DI 100 [ D.13105 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:229 -1
     (nil))
(insn 106 105 107 17 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 pFrom+0 S8 A64])
        (reg:DI 122)) BnConvert.c:229 -1
     (nil))
(insn 107 106 108 17 (set (reg:QI 101 [ D.13106 ])
        (mem:QI (reg/f:DI 100 [ D.13105 ]) [0 *_40+0 S1 A8])) BnConvert.c:229 -1
     (nil))
(insn 108 107 109 17 (set (mem:QI (reg/f:DI 99 [ D.13105 ]) [0 *_38+0 S1 A8])
        (reg:QI 101 [ D.13106 ])) BnConvert.c:229 -1
     (nil))
(insn 109 108 110 17 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -32 [0xffffffffffffffe0])) [0 requiredSize+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 requiredSize+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:228 -1
     (nil))
(code_label 110 109 111 18 43 "" [1 uses])
(note 111 110 113 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 113 111 114 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 requiredSize+0 S8 A64])
            (const_int 0 [0]))) BnConvert.c:228 -1
     (nil))
(jump_insn 114 113 115 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) BnConvert.c:228 -1
     (nil)
 -> 112)
(code_label 115 114 116 19 38 "" [1 uses])
(note 116 115 117 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 120 19 (set (reg:SI 102 [ D.13107 ])
        (const_int 1 [0x1])) BnConvert.c:231 -1
     (nil))
(insn 120 117 124 19 (set (reg:SI 103 [ <retval> ])
        (reg:SI 102 [ D.13107 ])) BnConvert.c:231 -1
     (nil))
(insn 124 120 125 19 (set (reg/i:SI 0 ax)
        (reg:SI 103 [ <retval> ])) BnConvert.c:232 -1
     (nil))
(insn 125 124 0 19 (use (reg/i:SI 0 ax)) BnConvert.c:232 -1
     (nil))

;; Function BnTo2B (BnTo2B, funcdef_no=6, decl_uid=12049, cgraph_uid=6, symbol_order=6)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 24.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 bn+0 S8 A64])
        (reg:DI 5 di [ bn ])) BnConvert.c:244 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 a2B+0 S8 A64])
        (reg:DI 4 si [ a2B ])) BnConvert.c:244 -1
     (nil))
(insn 4 3 5 2 (set (reg:SI 91)
        (reg:SI 1 dx [ size ])) BnConvert.c:244 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 size+0 S2 A32])
        (subreg:HI (reg:SI 91) 0)) BnConvert.c:244 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 a2B+0 S8 A64])) BnConvert.c:246 -1
     (nil))
(insn 10 9 11 2 (set (reg:HI 93)
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 size+0 S2 A32])) BnConvert.c:246 -1
     (nil))
(insn 11 10 12 2 (set (mem/j:HI (reg/f:DI 92) [0 a2B_2(D)->size+0 S2 A16])
        (reg:HI 93)) BnConvert.c:246 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 87 [ D.13108 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 a2B+0 S8 A64])) BnConvert.c:247 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 a2B+0 S8 A64])) BnConvert.c:247 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg/f:DI 88 [ D.13109 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:247 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 a2B+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 bn+0 S8 A64])) BnConvert.c:247 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 1 dx)
        (reg/f:DI 87 [ D.13108 ])) BnConvert.c:247 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.13109 ])) BnConvert.c:247 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 95)) BnConvert.c:247 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("BnToBytes") [flags 0x3]  <function_decl 0x7fdbb220c360 BnToBytes>) [0 BnToBytes S1 A8])
            (const_int 0 [0]))) BnConvert.c:247 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 23 2 (set (reg:SI 89 [ D.13110 ])
        (reg:SI 0 ax)) BnConvert.c:247 -1
     (nil))
(insn 23 20 27 2 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.13110 ])) BnConvert.c:247 -1
     (nil))
(insn 27 23 28 2 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) BnConvert.c:248 -1
     (nil))
(insn 28 27 0 2 (use (reg/i:SI 0 ax)) BnConvert.c:248 -1
     (nil))

;; Function BnPointFrom2B (BnPointFrom2B, funcdef_no=7, decl_uid=12052, cgraph_uid=7, symbol_order=7)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 42.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ecP+0 S8 A64])
        (reg:DI 5 di [ ecP ])) BnConvert.c:259 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])
        (reg:DI 4 si [ p ])) BnConvert.c:259 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])
            (const_int 0 [0]))) BnConvert.c:260 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) BnConvert.c:260 -1
     (nil)
 -> 13)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg/f:DI 87 [ D.13111 ])
        (const_int 0 [0])) BnConvert.c:261 -1
     (nil))
(jump_insn 11 10 12 4 (set (pc)
        (label_ref 39)) BnConvert.c:261 -1
     (nil)
 -> 39)
(barrier 12 11 13)
(code_label 13 12 14 5 49 "" [1 uses])
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 ecP+0 S8 A64])
            (const_int 0 [0]))) BnConvert.c:262 -1
     (nil))
(jump_insn 16 15 17 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) BnConvert.c:262 -1
     (nil)
 -> 36)
(note 17 16 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 6 (set (reg/f:DI 88 [ D.13112 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])) BnConvert.c:264 -1
     (nil))
(insn 19 18 20 6 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ecP+0 S8 A64])) BnConvert.c:264 -1
     (nil))
(insn 20 19 21 6 (set (reg/f:DI 89 [ D.13113 ])
        (mem/f/j:DI (reg/f:DI 94) [0 ecP_7(D)->x+0 S8 A64])) BnConvert.c:264 -1
     (nil))
(insn 21 20 22 6 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.13112 ])) BnConvert.c:264 -1
     (nil))
(insn 22 21 23 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.13113 ])) BnConvert.c:264 -1
     (nil))
(call_insn 23 22 24 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("BnFrom2B") [flags 0x3]  <function_decl 0x7fdbb220c1b0 BnFrom2B>) [0 BnFrom2B S1 A8])
            (const_int 0 [0]))) BnConvert.c:264 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 24 23 25 6 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])) BnConvert.c:265 -1
     (nil))
(insn 25 24 26 6 (parallel [
            (set (reg/f:DI 90 [ D.13112 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 50 [0x32])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:265 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 p+0 S8 A64])
            (const_int 50 [0x32]))
        (nil)))
(insn 26 25 27 6 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ecP+0 S8 A64])) BnConvert.c:265 -1
     (nil))
(insn 27 26 28 6 (set (reg/f:DI 91 [ D.13113 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 96)
                (const_int 8 [0x8])) [0 ecP_7(D)->y+0 S8 A64])) BnConvert.c:265 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.13112 ])) BnConvert.c:265 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.13113 ])) BnConvert.c:265 -1
     (nil))
(call_insn 30 29 31 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("BnFrom2B") [flags 0x3]  <function_decl 0x7fdbb220c1b0 BnFrom2B>) [0 BnFrom2B S1 A8])
            (const_int 0 [0]))) BnConvert.c:265 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 31 30 32 6 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ecP+0 S8 A64])) BnConvert.c:266 -1
     (nil))
(insn 32 31 33 6 (set (reg/f:DI 92 [ D.13113 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 97)
                (const_int 16 [0x10])) [0 ecP_7(D)->z+0 S8 A64])) BnConvert.c:266 -1
     (nil))
(insn 33 32 34 6 (set (reg:DI 4 si)
        (const_int 1 [0x1])) BnConvert.c:266 -1
     (nil))
(insn 34 33 35 6 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.13113 ])) BnConvert.c:266 -1
     (nil))
(call_insn 35 34 36 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("BnSetWord") [flags 0x41]  <function_decl 0x7fdbb220f000 BnSetWord>) [0 BnSetWord S1 A8])
            (const_int 0 [0]))) BnConvert.c:266 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(code_label 36 35 37 7 51 "" [1 uses])
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (reg/f:DI 87 [ D.13111 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ecP+0 S8 A64])) BnConvert.c:268 -1
     (nil))
(code_label 39 38 40 8 50 "" [1 uses])
(note 40 39 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 45 8 (set (reg:DI 93 [ <retval> ])
        (reg/f:DI 87 [ D.13111 ])) -1
     (nil))
(insn 45 41 46 8 (set (reg/i:DI 0 ax)
        (reg:DI 93 [ <retval> ])) BnConvert.c:269 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:DI 0 ax)) BnConvert.c:269 -1
     (nil))

;; Function BnPointTo2B (BnPointTo2B, funcdef_no=8, decl_uid=12056, cgraph_uid=8, symbol_order=8)

Partition 0: size 2 align 2
	size_9

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 75.
Merging block 12 into block 10...
Merged blocks 10 and 12.
Merged 10 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) BnConvert.c:281 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 ecP+0 S8 A64])
        (reg:DI 4 si [ ecP ])) BnConvert.c:281 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 E+0 S8 A64])
        (reg:DI 1 dx [ E ])) BnConvert.c:281 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 E+0 S8 A64])) BnConvert.c:282 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 87 [ D.13114 ])
        (mem/f/j:DI (reg/f:DI 104) [0 E_2(D)->C+0 S8 A64])) BnConvert.c:282 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 88 [ D.13115 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 87 [ D.13114 ])
                (const_int 8 [0x8])) [0 _3->order+0 S8 A64])) BnConvert.c:282 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.13115 ])) BnConvert.c:282 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("BnMsb") [flags 0x41]  <function_decl 0x7fdbb220cd80 BnMsb>) [0 BnMsb S1 A8])
            (const_int 0 [0]))) BnConvert.c:282 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:SI 89 [ D.13116 ])
        (reg:SI 0 ax)) BnConvert.c:282 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:SI 90 [ D.13116 ])
                (plus:SI (reg:SI 89 [ D.13116 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:282 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:SI 91 [ D.13116 ])
                (ashiftrt:SI (reg:SI 90 [ D.13116 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:282 -1
     (nil))
(insn 16 15 17 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 size+0 S2 A16])
        (subreg:HI (reg:SI 91 [ D.13116 ]) 0)) BnConvert.c:282 -1
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])
            (const_int 0 [0]))) BnConvert.c:284 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) BnConvert.c:284 -1
     (nil)
 -> 25)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 ecP+0 S8 A64])
            (const_int 0 [0]))) BnConvert.c:284 -1
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) BnConvert.c:284 -1
     (nil)
 -> 25)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 E+0 S8 A64])
            (const_int 0 [0]))) BnConvert.c:284 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) BnConvert.c:284 -1
     (nil)
 -> 32)
(code_label 25 24 26 6 53 "" [2 uses])
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) BnConvert.c:284 -1
     (nil))
(insn 28 27 29 6 (set (reg:SI 4 si)
        (const_int 284 [0x11c])) BnConvert.c:284 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 5 di)
        (const_int 0 [0])) BnConvert.c:284 -1
     (nil))
(call_insn 30 29 31 6 (call (mem:QI (symbol_ref:DI ("TpmFail") [flags 0x41]  <function_decl 0x7fdbb216a0d8 TpmFail>) [0 TpmFail S1 A8])
        (const_int 0 [0])) BnConvert.c:284 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 31 30 32)
(code_label 32 31 33 7 54 "" [1 uses])
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 ecP+0 S8 A64])) BnConvert.c:285 -1
     (nil))
(insn 35 34 36 7 (set (reg/f:DI 92 [ D.13117 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 105)
                (const_int 16 [0x10])) [0 ecP_11(D)->z+0 S8 A64])) BnConvert.c:285 -1
     (nil))
(insn 36 35 37 7 (set (reg:DI 93 [ D.13118 ])
        (mem/j:DI (plus:DI (reg/f:DI 92 [ D.13117 ])
                (const_int 8 [0x8])) [0 _12->size+0 S8 A64])) BnConvert.c:285 -1
     (nil))
(insn 37 36 38 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 93 [ D.13118 ])
            (const_int 1 [0x1]))) BnConvert.c:285 -1
     (nil))
(jump_insn 38 37 39 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) BnConvert.c:285 -1
     (nil)
 -> 45)
(note 39 38 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 8 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 ecP+0 S8 A64])) BnConvert.c:285 -1
     (nil))
(insn 41 40 42 8 (set (reg/f:DI 94 [ D.13117 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 106)
                (const_int 16 [0x10])) [0 ecP_11(D)->z+0 S8 A64])) BnConvert.c:285 -1
     (nil))
(insn 42 41 43 8 (set (reg:DI 95 [ D.13118 ])
        (mem/j:DI (plus:DI (reg/f:DI 94 [ D.13117 ])
                (const_int 16 [0x10])) [0 _14->d+0 S8 A64])) BnConvert.c:285 -1
     (nil))
(insn 43 42 44 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 95 [ D.13118 ])
            (const_int 1 [0x1]))) BnConvert.c:285 -1
     (nil))
(jump_insn 44 43 45 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) BnConvert.c:285 -1
     (nil)
 -> 52)
(code_label 45 44 46 9 55 "" [1 uses])
(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 9 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) BnConvert.c:285 -1
     (nil))
(insn 48 47 49 9 (set (reg:SI 4 si)
        (const_int 285 [0x11d])) BnConvert.c:285 -1
     (nil))
(insn 49 48 50 9 (set (reg:DI 5 di)
        (const_int 0 [0])) BnConvert.c:285 -1
     (nil))
(call_insn 50 49 51 9 (call (mem:QI (symbol_ref:DI ("TpmFail") [flags 0x41]  <function_decl 0x7fdbb216a0d8 TpmFail>) [0 TpmFail S1 A8])
        (const_int 0 [0])) BnConvert.c:285 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 51 50 52)
(code_label 52 51 53 10 56 "" [1 uses])
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (set (reg:SI 96 [ D.13116 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 size+0 S2 A16]))) BnConvert.c:286 -1
     (nil))
(insn 55 54 56 10 (set (reg/f:DI 97 [ D.13119 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) BnConvert.c:286 -1
     (nil))
(insn 56 55 57 10 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 ecP+0 S8 A64])) BnConvert.c:286 -1
     (nil))
(insn 57 56 58 10 (set (reg/f:DI 98 [ D.13117 ])
        (mem/f/j:DI (reg/f:DI 107) [0 ecP_11(D)->x+0 S8 A64])) BnConvert.c:286 -1
     (nil))
(insn 58 57 59 10 (set (reg:SI 1 dx)
        (reg:SI 96 [ D.13116 ])) BnConvert.c:286 -1
     (nil))
(insn 59 58 60 10 (set (reg:DI 4 si)
        (reg/f:DI 97 [ D.13119 ])) BnConvert.c:286 -1
     (nil))
(insn 60 59 61 10 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.13117 ])) BnConvert.c:286 -1
     (nil))
(call_insn 61 60 62 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("BnTo2B") [flags 0x3]  <function_decl 0x7fdbb220c438 BnTo2B>) [0 BnTo2B S1 A8])
            (const_int 0 [0]))) BnConvert.c:286 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 62 61 63 10 (set (reg:SI 99 [ D.13116 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 size+0 S2 A16]))) BnConvert.c:287 -1
     (nil))
(insn 63 62 64 10 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) BnConvert.c:287 -1
     (nil))
(insn 64 63 65 10 (parallel [
            (set (reg/f:DI 100 [ D.13119 ])
                (plus:DI (reg/f:DI 108)
                    (const_int 50 [0x32])))
            (clobber (reg:CC 17 flags))
        ]) BnConvert.c:287 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])
            (const_int 50 [0x32]))
        (nil)))
(insn 65 64 66 10 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 ecP+0 S8 A64])) BnConvert.c:287 -1
     (nil))
(insn 66 65 67 10 (set (reg/f:DI 101 [ D.13117 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 109)
                (const_int 8 [0x8])) [0 ecP_11(D)->y+0 S8 A64])) BnConvert.c:287 -1
     (nil))
(insn 67 66 68 10 (set (reg:SI 1 dx)
        (reg:SI 99 [ D.13116 ])) BnConvert.c:287 -1
     (nil))
(insn 68 67 69 10 (set (reg:DI 4 si)
        (reg/f:DI 100 [ D.13119 ])) BnConvert.c:287 -1
     (nil))
(insn 69 68 70 10 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.13117 ])) BnConvert.c:287 -1
     (nil))
(call_insn 70 69 71 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("BnTo2B") [flags 0x3]  <function_decl 0x7fdbb220c438 BnTo2B>) [0 BnTo2B S1 A8])
            (const_int 0 [0]))) BnConvert.c:287 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 71 70 74 10 (set (reg:SI 102 [ D.13120 ])
        (const_int 1 [0x1])) BnConvert.c:288 -1
     (nil))
(insn 74 71 78 10 (set (reg:SI 103 [ <retval> ])
        (reg:SI 102 [ D.13120 ])) BnConvert.c:288 -1
     (nil))
(insn 78 74 79 10 (set (reg/i:SI 0 ax)
        (reg:SI 103 [ <retval> ])) BnConvert.c:289 -1
     (nil))
(insn 79 78 0 10 (use (reg/i:SI 0 ax)) BnConvert.c:289 -1
     (nil))
