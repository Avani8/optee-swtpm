
;; Function TPM2_NV_DefineSpace (TPM2_NV_DefineSpace, funcdef_no=2, decl_uid=12856, cgraph_uid=2, symbol_order=2)

Partition 0: size 4 align 4
	attributes_5
Partition 1: size 2 align 2
	nameSize_9

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66
Purged edges from bb 71
Purged edges from bb 74


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 12->13 redirected to 15
deleting block 13
Forwarding edge 16->17 to 24 failed.
Edge 18->20 redirected to 27
deleting block 20
Edge 21->23 redirected to 27
deleting block 23
Edge 24->26 redirected to 27
deleting block 26
Forwarding edge 29->30 to 41 failed.
Redirecting jump 147 from 41 to 42.
Edge 31->33 redirected to 42
deleting block 33
Edge 38->40 redirected to 42
deleting block 40
deleting block 41
Removing jump 369.
Merging block 74 into block 73...
Merged blocks 73 and 74.
Merged 73 and 74 without moving.


try_optimize_cfg iteration 2

Forwarding edge 16->17 to 24 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) NVCommands.c:69 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:70 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 140)
        (mem/j:SI (plus:DI (reg/f:DI 139)
                (const_int 68 [0x44])) [0 in_4(D)->publicInfo.nvPublic.attributes+0 S4 A32])) NVCommands.c:70 -1
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
        (reg:SI 140)) NVCommands.c:70 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:72 -1
     (nil))
(insn 10 9 11 2 (set (reg:HI 88 [ D.13494 ])
        (mem/j:HI (plus:DI (reg/f:DI 141)
                (const_int 64 [0x40])) [0 in_4(D)->publicInfo.nvPublic.nameAlg+0 S2 A32])) NVCommands.c:72 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 89 [ D.13495 ])
        (zero_extend:SI (reg:HI 88 [ D.13494 ]))) NVCommands.c:72 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (reg:SI 89 [ D.13495 ])) NVCommands.c:72 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashGetDigestSize") [flags 0x41]  <function_decl 0x7efeeaf2be58 CryptHashGetDigestSize>) [0 CryptHashGetDigestSize S1 A8])
            (const_int 0 [0]))) NVCommands.c:72 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 14 13 15 2 (set (reg:HI 142)
        (reg:HI 0 ax)) NVCommands.c:72 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 nameSize+0 S2 A16])
        (reg:HI 142)) NVCommands.c:72 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:82 -1
     (nil))
(insn 17 16 18 2 (set (reg:HI 90 [ D.13494 ])
        (mem/j:HI (plus:DI (reg/f:DI 143)
                (const_int 72 [0x48])) [0 in_4(D)->publicInfo.nvPublic.authPolicy.t.size+0 S2 A32])) NVCommands.c:82 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 90 [ D.13494 ])
            (const_int 0 [0]))) NVCommands.c:82 -1
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) NVCommands.c:82 -1
     (nil)
 -> 29)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:83 -1
     (nil))
(insn 22 21 23 4 (set (reg:HI 91 [ D.13494 ])
        (mem/j:HI (plus:DI (reg/f:DI 144)
                (const_int 72 [0x48])) [0 in_4(D)->publicInfo.nvPublic.authPolicy.t.size+0 S2 A32])) NVCommands.c:83 -1
     (nil))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 91 [ D.13494 ])
            (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -6 [0xfffffffffffffffa])) [0 nameSize+0 S2 A16]))) NVCommands.c:83 -1
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) NVCommands.c:83 -1
     (nil)
 -> 29)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:SI 87 [ D.13493 ])
        (const_int 725 [0x2d5])) NVCommands.c:84 -1
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (label_ref 366)) NVCommands.c:84 -1
     (nil)
 -> 366)
(barrier 28 27 29)
(code_label 29 28 30 6 2 "" [2 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:86 -1
     (nil))
(insn 32 31 33 6 (parallel [
            (set (reg/f:DI 92 [ D.13496 ])
                (plus:DI (reg/f:DI 145)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:86 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 33 32 34 6 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.13496 ])) NVCommands.c:86 -1
     (nil))
(call_insn 34 33 35 6 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("MemoryRemoveTrailingZeros") [flags 0x41]  <function_decl 0x7efeeae4f948 MemoryRemoveTrailingZeros>) [0 MemoryRemoveTrailingZeros S1 A8])
            (const_int 0 [0]))) NVCommands.c:86 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 35 34 36 6 (set (reg:HI 93 [ D.13494 ])
        (reg:HI 0 ax)) NVCommands.c:86 -1
     (nil))
(insn 36 35 37 6 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:87 -1
     (nil))
(insn 37 36 38 6 (set (reg:HI 94 [ D.13494 ])
        (mem/j:HI (plus:DI (reg/f:DI 146)
                (const_int 64 [0x40])) [0 in_4(D)->publicInfo.nvPublic.nameAlg+0 S2 A32])) NVCommands.c:87 -1
     (nil))
(insn 38 37 39 6 (set (reg:SI 95 [ D.13495 ])
        (zero_extend:SI (reg:HI 94 [ D.13494 ]))) NVCommands.c:87 -1
     (nil))
(insn 39 38 40 6 (set (reg:SI 5 di)
        (reg:SI 95 [ D.13495 ])) NVCommands.c:87 -1
     (nil))
(call_insn 40 39 41 6 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashGetDigestSize") [flags 0x41]  <function_decl 0x7efeeaf2be58 CryptHashGetDigestSize>) [0 CryptHashGetDigestSize S1 A8])
            (const_int 0 [0]))) NVCommands.c:87 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 41 40 42 6 (set (reg:HI 96 [ D.13494 ])
        (reg:HI 0 ax)) NVCommands.c:87 -1
     (nil))
(insn 42 41 43 6 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 93 [ D.13494 ])
            (reg:HI 96 [ D.13494 ]))) NVCommands.c:86 -1
     (nil))
(jump_insn 43 42 44 6 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) NVCommands.c:86 -1
     (nil)
 -> 48)
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (set (reg:SI 87 [ D.13493 ])
        (const_int 469 [0x1d5])) NVCommands.c:88 -1
     (nil))
(jump_insn 46 45 47 7 (set (pc)
        (label_ref 366)) NVCommands.c:88 -1
     (nil)
 -> 366)
(barrier 47 46 48)
(code_label 48 47 49 8 4 "" [1 uses])
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:93 -1
     (nil))
(insn 51 50 52 8 (set (reg:SI 97 [ D.13497 ])
        (mem/j:SI (reg/f:DI 147) [0 in_4(D)->authHandle+0 S4 A32])) NVCommands.c:93 -1
     (nil))
(insn 52 51 53 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.13497 ])
            (const_int 1073741836 [0x4000000c]))) NVCommands.c:93 -1
     (nil))
(jump_insn 53 52 54 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) NVCommands.c:93 -1
     (nil)
 -> 62)
(note 54 53 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 9 (set (reg:SI 98 [ D.13495 ])
        (mem/j/c:SI (const:DI (plus:DI (symbol_ref:DI ("gc") [flags 0x40]  <var_decl 0x7efeeae36000 gc>)
                    (const_int 8 [0x8]))) [0 gc.phEnableNV+0 S4 A32])) NVCommands.c:93 -1
     (nil))
(insn 56 55 57 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.13495 ])
            (const_int 0 [0]))) NVCommands.c:93 -1
     (nil))
(jump_insn 57 56 58 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) NVCommands.c:93 -1
     (nil)
 -> 62)
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (set (reg:SI 87 [ D.13493 ])
        (const_int 389 [0x185])) NVCommands.c:94 -1
     (nil))
(jump_insn 60 59 61 10 (set (pc)
        (label_ref 366)) NVCommands.c:94 -1
     (nil)
 -> 366)
(barrier 61 60 62)
(code_label 62 61 63 11 5 "" [2 uses])
(note 63 62 64 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 11 (set (reg:SI 148)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:97 -1
     (nil))
(insn 65 64 66 11 (parallel [
            (set (reg:SI 99 [ D.13497 ])
                (and:SI (reg:SI 148)
                    (const_int 240 [0xf0])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:97 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 240 [0xf0]))
        (nil)))
(insn 66 65 67 11 (parallel [
            (set (reg:SI 100 [ D.13497 ])
                (lshiftrt:SI (reg:SI 99 [ D.13497 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:97 -1
     (nil))
(insn 67 66 68 11 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 100 [ D.13497 ])
            (const_int 9 [0x9]))) NVCommands.c:97 -1
     (nil))
(jump_insn 68 67 375 11 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) NVCommands.c:97 -1
     (nil)
 -> 80)
(note 375 68 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 69 375 70 12 (set (reg:DI 149)
        (zero_extend:DI (reg:SI 100 [ D.13497 ]))) NVCommands.c:97 -1
     (nil))
(insn 70 69 71 12 (set (reg:DI 150)
        (mem/u/c:DI (plus:DI (ashift:DI (reg:DI 149)
                    (const_int 3 [0x3]))
                (label_ref:DI 73)) [0  S8 A8])) NVCommands.c:97 -1
     (insn_list:REG_LABEL_OPERAND 73 (nil)))
(jump_insn 71 70 72 12 (parallel [
            (set (pc)
                (reg:DI 150))
            (use (label_ref 73))
        ]) NVCommands.c:97 -1
     (nil)
 -> 73)
(barrier 72 71 73)
(code_label 73 72 74 8 "" [2 uses])
(jump_table_data 74 73 75 (addr_vec:DI [
            (label_ref:DI 85)
            (label_ref:DI 85)
            (label_ref:DI 85)
            (label_ref:DI 80)
            (label_ref:DI 85)
            (label_ref:DI 80)
            (label_ref:DI 80)
            (label_ref:DI 80)
            (label_ref:DI 85)
            (label_ref:DI 85)
        ]))
(barrier 75 74 80)
(code_label 80 75 81 14 6 "" [5 uses])
(note 81 80 82 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 14 (set (reg:SI 87 [ D.13493 ])
        (const_int 706 [0x2c2])) NVCommands.c:115 -1
     (nil))
(jump_insn 83 82 84 14 (set (pc)
        (label_ref 366)) NVCommands.c:115 -1
     (nil)
 -> 366)
(barrier 84 83 85)
(code_label 85 84 86 15 9 "" [6 uses])
(note 86 85 87 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 15 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:119 -1
     (nil))
(insn 88 87 89 15 (parallel [
            (set (reg:SI 101 [ D.13497 ])
                (and:SI (reg:SI 151)
                    (const_int 240 [0xf0])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:119 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 240 [0xf0]))
        (nil)))
(insn 89 88 90 15 (parallel [
            (set (reg:SI 102 [ D.13497 ])
                (lshiftrt:SI (reg:SI 101 [ D.13497 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:119 -1
     (nil))
(insn 90 89 91 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:119 -1
     (nil))
(jump_insn 91 90 376 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) NVCommands.c:119 -1
     (nil)
 -> 96)
(note 376 91 92 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 92 376 93 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.13497 ])
            (const_int 4 [0x4]))) NVCommands.c:119 -1
     (nil))
(jump_insn 93 92 377 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) NVCommands.c:119 -1
     (nil)
 -> 110)
(note 377 93 94 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn 94 377 95 17 (set (pc)
        (label_ref 124)) NVCommands.c:119 -1
     (nil)
 -> 124)
(barrier 95 94 96)
(code_label 96 95 97 18 11 "" [1 uses])
(note 97 96 98 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 18 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:123 -1
     (nil))
(insn 99 98 100 18 (set (reg:HI 103 [ D.13494 ])
        (mem/j:HI (plus:DI (reg/f:DI 152)
                (const_int 122 [0x7a])) [0 in_4(D)->publicInfo.nvPublic.dataSize+0 S2 A16])) NVCommands.c:123 -1
     (nil))
(insn 100 99 101 18 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 103 [ D.13494 ])
            (const_int 2048 [0x800]))) NVCommands.c:123 -1
     (nil))
(jump_insn 101 100 102 18 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 136)
            (pc))) NVCommands.c:123 612 {*jcc_1}
     (nil)
 -> 136)
(note 102 101 103 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 19 (set (reg:SI 87 [ D.13493 ])
        (const_int 725 [0x2d5])) NVCommands.c:124 -1
     (nil))
(jump_insn 104 103 105 19 (set (pc)
        (label_ref 366)) NVCommands.c:124 -1
     (nil)
 -> 366)
(barrier 105 104 110)
(code_label 110 105 111 21 12 "" [1 uses])
(note 111 110 112 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 21 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:127 -1
     (nil))
(insn 113 112 114 21 (set (reg:HI 104 [ D.13494 ])
        (mem/j:HI (plus:DI (reg/f:DI 153)
                (const_int 122 [0x7a])) [0 in_4(D)->publicInfo.nvPublic.dataSize+0 S2 A16])) NVCommands.c:127 -1
     (nil))
(insn 114 113 115 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 104 [ D.13494 ])
            (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -6 [0xfffffffffffffffa])) [0 nameSize+0 S2 A16]))) NVCommands.c:127 -1
     (nil))
(jump_insn 115 114 116 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 136)
            (pc))) NVCommands.c:127 612 {*jcc_1}
     (nil)
 -> 136)
(note 116 115 117 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 22 (set (reg:SI 87 [ D.13493 ])
        (const_int 725 [0x2d5])) NVCommands.c:128 -1
     (nil))
(jump_insn 118 117 119 22 (set (pc)
        (label_ref 366)) NVCommands.c:128 -1
     (nil)
 -> 366)
(barrier 119 118 124)
(code_label 124 119 125 24 10 "" [1 uses])
(note 125 124 126 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 24 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:132 -1
     (nil))
(insn 127 126 128 24 (set (reg:HI 105 [ D.13494 ])
        (mem/j:HI (plus:DI (reg/f:DI 154)
                (const_int 122 [0x7a])) [0 in_4(D)->publicInfo.nvPublic.dataSize+0 S2 A16])) NVCommands.c:132 -1
     (nil))
(insn 128 127 129 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 105 [ D.13494 ])
            (const_int 8 [0x8]))) NVCommands.c:132 -1
     (nil))
(jump_insn 129 128 130 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 136)
            (pc))) NVCommands.c:132 612 {*jcc_1}
     (nil)
 -> 136)
(note 130 129 131 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 25 (set (reg:SI 87 [ D.13493 ])
        (const_int 725 [0x2d5])) NVCommands.c:133 -1
     (nil))
(jump_insn 132 131 133 25 (set (pc)
        (label_ref 366)) NVCommands.c:133 -1
     (nil)
 -> 366)
(barrier 133 132 136)
(code_label 136 133 137 27 14 "" [3 uses])
(note 137 136 138 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 27 (set (reg:SI 155)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:137 -1
     (nil))
(insn 139 138 140 27 (parallel [
            (set (reg:SI 106 [ D.13497 ])
                (and:SI (reg:SI 155)
                    (const_int 240 [0xf0])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:137 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 240 [0xf0]))
        (nil)))
(insn 140 139 141 27 (parallel [
            (set (reg:SI 107 [ D.13497 ])
                (lshiftrt:SI (reg:SI 106 [ D.13497 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:137 -1
     (nil))
(insn 141 140 142 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ D.13497 ])
            (const_int 8 [0x8]))) NVCommands.c:137 -1
     (nil))
(jump_insn 142 141 378 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) NVCommands.c:137 -1
     (nil)
 -> 163)
(note 378 142 143 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 143 378 144 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ D.13497 ])
            (const_int 9 [0x9]))) NVCommands.c:137 -1
     (nil))
(jump_insn 144 143 379 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) NVCommands.c:137 -1
     (nil)
 -> 173)
(note 379 144 145 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 145 379 146 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ D.13497 ])
            (const_int 1 [0x1]))) NVCommands.c:137 -1
     (nil))
(jump_insn 146 145 380 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) NVCommands.c:137 -1
     (nil)
 -> 149)
(note 380 146 147 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(jump_insn 147 380 148 30 (set (pc)
        (label_ref:DI 200)) NVCommands.c:137 654 {jump}
     (nil)
 -> 200)
(barrier 148 147 149)
(code_label 149 148 150 31 20 "" [1 uses])
(note 150 149 151 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 31 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:141 -1
     (nil))
(insn 152 151 153 31 (parallel [
            (set (reg:SI 108 [ D.13497 ])
                (and:SI (reg:SI 156)
                    (const_int 134217728 [0x8000000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:141 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 134217728 [0x8000000]))
        (nil)))
(insn 153 152 154 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:141 -1
     (nil))
(jump_insn 154 153 155 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 200)
            (pc))) NVCommands.c:141 612 {*jcc_1}
     (nil)
 -> 200)
(note 155 154 156 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 32 (set (reg:SI 87 [ D.13493 ])
        (const_int 706 [0x2c2])) NVCommands.c:142 -1
     (nil))
(jump_insn 157 156 158 32 (set (pc)
        (label_ref 366)) NVCommands.c:142 -1
     (nil)
 -> 366)
(barrier 158 157 163)
(code_label 163 158 164 34 18 "" [1 uses])
(note 164 163 165 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 34 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:156 -1
     (nil))
(insn 166 165 167 34 (parallel [
            (set (reg:SI 109 [ D.13497 ])
                (and:SI (reg:SI 157)
                    (const_int 33554432 [0x2000000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:156 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 33554432 [0x2000000]))
        (nil)))
(insn 167 166 168 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:156 -1
     (nil))
(jump_insn 168 167 169 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) NVCommands.c:156 -1
     (nil)
 -> 173)
(note 169 168 170 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 35 (set (reg:SI 87 [ D.13493 ])
        (const_int 706 [0x2c2])) NVCommands.c:157 -1
     (nil))
(jump_insn 171 170 172 35 (set (pc)
        (label_ref 366)) NVCommands.c:157 -1
     (nil)
 -> 366)
(barrier 172 171 173)
(code_label 173 172 174 36 19 "" [2 uses])
(note 174 173 175 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 36 (set (reg:SI 158)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:162 -1
     (nil))
(insn 176 175 177 36 (parallel [
            (set (reg:SI 110 [ D.13497 ])
                (and:SI (reg:SI 158)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:162 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 177 176 178 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 110 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:162 -1
     (nil))
(jump_insn 178 177 179 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 189)
            (pc))) NVCommands.c:162 -1
     (nil)
 -> 189)
(note 179 178 180 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 37 (set (reg:SI 159)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:163 -1
     (nil))
(insn 181 180 182 37 (parallel [
            (set (reg:SI 111 [ D.13497 ])
                (and:SI (reg:SI 159)
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:163 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 32768 [0x8000]))
        (nil)))
(insn 182 181 183 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:163 -1
     (nil))
(jump_insn 183 182 184 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 189)
            (pc))) NVCommands.c:163 -1
     (nil)
 -> 189)
(note 184 183 185 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 38 (set (reg:SI 160)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:164 -1
     (nil))
(insn 186 185 187 38 (parallel [
            (set (reg:SI 112 [ D.13497 ])
                (and:SI (reg:SI 160)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:164 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 187 186 188 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:164 -1
     (nil))
(jump_insn 188 187 189 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 200)
            (pc))) NVCommands.c:164 612 {*jcc_1}
     (nil)
 -> 200)
(code_label 189 188 190 39 23 "" [2 uses])
(note 190 189 191 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 39 (set (reg:SI 87 [ D.13493 ])
        (const_int 706 [0x2c2])) NVCommands.c:165 -1
     (nil))
(jump_insn 192 191 193 39 (set (pc)
        (label_ref 366)) NVCommands.c:165 -1
     (nil)
 -> 366)
(barrier 193 192 200)
(code_label 200 193 201 42 22 "" [3 uses])
(note 201 200 202 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 42 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:172 -1
     (nil))
(insn 203 202 204 42 (parallel [
            (set (reg:SI 113 [ D.13497 ])
                (and:SI (reg:SI 161)
                    (const_int 536870912 [0x20000000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:172 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 536870912 [0x20000000]))
        (nil)))
(insn 204 203 205 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:172 -1
     (nil))
(jump_insn 205 204 206 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) NVCommands.c:172 -1
     (nil)
 -> 216)
(note 206 205 207 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 43 (set (reg:SI 162)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:173 -1
     (nil))
(insn 208 207 209 43 (parallel [
            (set (reg:SI 114 [ D.13497 ])
                (and:SI (reg:SI 162)
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:173 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 2048 [0x800]))
        (nil)))
(insn 209 208 210 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 114 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:173 -1
     (nil))
(jump_insn 210 209 211 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) NVCommands.c:173 -1
     (nil)
 -> 216)
(note 211 210 212 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 44 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:174 -1
     (nil))
(insn 213 212 214 44 (parallel [
            (set (reg:SI 115 [ D.13497 ])
                (and:SI (reg:SI 163)
                    (const_int 268435456 [0x10000000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:174 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 268435456 [0x10000000]))
        (nil)))
(insn 214 213 215 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 115 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:174 -1
     (nil))
(jump_insn 215 214 216 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 221)
            (pc))) NVCommands.c:174 -1
     (nil)
 -> 221)
(code_label 216 215 217 45 25 "" [2 uses])
(note 217 216 218 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 45 (set (reg:SI 87 [ D.13493 ])
        (const_int 706 [0x2c2])) NVCommands.c:175 -1
     (nil))
(jump_insn 219 218 220 45 (set (pc)
        (label_ref 366)) NVCommands.c:175 -1
     (nil)
 -> 366)
(barrier 220 219 221)
(code_label 221 220 222 46 26 "" [1 uses])
(note 222 221 223 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 46 (set (reg:SI 164)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:177 -1
     (nil))
(insn 224 223 225 46 (parallel [
            (set (reg:SI 116 [ D.13497 ])
                (and:SI (reg:SI 164)
                    (const_int 131072 [0x20000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:177 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 131072 [0x20000]))
        (nil)))
(insn 225 224 226 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:177 -1
     (nil))
(jump_insn 226 225 227 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) NVCommands.c:177 -1
     (nil)
 -> 246)
(note 227 226 228 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 47 (set (reg:SI 165)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:178 -1
     (nil))
(insn 229 228 230 47 (parallel [
            (set (reg:SI 117 [ D.13497 ])
                (and:SI (reg:SI 165)
                    (const_int 65536 [0x10000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:178 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 65536 [0x10000]))
        (nil)))
(insn 230 229 231 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:178 -1
     (nil))
(jump_insn 231 230 232 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) NVCommands.c:178 -1
     (nil)
 -> 246)
(note 232 231 233 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 234 48 (set (reg:SI 166)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:179 -1
     (nil))
(insn 234 233 235 48 (parallel [
            (set (reg:SI 118 [ D.13497 ])
                (and:SI (reg:SI 166)
                    (const_int 262144 [0x40000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:179 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 262144 [0x40000]))
        (nil)))
(insn 235 234 236 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:179 -1
     (nil))
(jump_insn 236 235 237 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) NVCommands.c:179 -1
     (nil)
 -> 246)
(note 237 236 238 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 238 237 239 49 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:180 -1
     (nil))
(insn 239 238 240 49 (parallel [
            (set (reg:SI 119 [ D.13497 ])
                (and:SI (reg:SI 167)
                    (const_int 524288 [0x80000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:180 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 524288 [0x80000]))
        (nil)))
(insn 240 239 241 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:180 -1
     (nil))
(jump_insn 241 240 242 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) NVCommands.c:180 -1
     (nil)
 -> 246)
(note 242 241 243 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 243 242 244 50 (set (reg:SI 87 [ D.13493 ])
        (const_int 706 [0x2c2])) NVCommands.c:181 -1
     (nil))
(jump_insn 244 243 245 50 (set (pc)
        (label_ref 366)) NVCommands.c:181 -1
     (nil)
 -> 366)
(barrier 245 244 246)
(code_label 246 245 247 51 27 "" [4 uses])
(note 247 246 248 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 51 (set (reg:SI 168)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:183 -1
     (nil))
(insn 249 248 250 51 (parallel [
            (set (reg:SI 120 [ D.13497 ])
                (and:SI (reg:SI 168)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:183 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 250 249 251 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:183 -1
     (nil))
(jump_insn 251 250 252 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 271)
            (pc))) NVCommands.c:183 -1
     (nil)
 -> 271)
(note 252 251 253 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 52 (set (reg:SI 169)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:184 -1
     (nil))
(insn 254 253 255 52 (parallel [
            (set (reg:SI 121 [ D.13497 ])
                (and:SI (reg:SI 169)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:184 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 255 254 256 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 121 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:184 -1
     (nil))
(jump_insn 256 255 257 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 271)
            (pc))) NVCommands.c:184 -1
     (nil)
 -> 271)
(note 257 256 258 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 258 257 259 53 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:185 -1
     (nil))
(insn 259 258 260 53 (parallel [
            (set (reg:SI 122 [ D.13497 ])
                (and:SI (reg:SI 170)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:185 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 260 259 261 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:185 -1
     (nil))
(jump_insn 261 260 262 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 271)
            (pc))) NVCommands.c:185 -1
     (nil)
 -> 271)
(note 262 261 263 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 54 (set (reg:SI 171)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:186 -1
     (nil))
(insn 264 263 265 54 (parallel [
            (set (reg:SI 123 [ D.13497 ])
                (and:SI (reg:SI 171)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:186 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 265 264 266 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 123 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:186 -1
     (nil))
(jump_insn 266 265 267 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 271)
            (pc))) NVCommands.c:186 -1
     (nil)
 -> 271)
(note 267 266 268 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 55 (set (reg:SI 87 [ D.13493 ])
        (const_int 706 [0x2c2])) NVCommands.c:187 -1
     (nil))
(jump_insn 269 268 270 55 (set (pc)
        (label_ref 366)) NVCommands.c:187 -1
     (nil)
 -> 366)
(barrier 270 269 271)
(code_label 271 270 272 56 28 "" [4 uses])
(note 272 271 273 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 56 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:189 -1
     (nil))
(insn 274 273 275 56 (parallel [
            (set (reg:SI 124 [ D.13497 ])
                (and:SI (reg:SI 172)
                    (const_int 134217728 [0x8000000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:189 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 134217728 [0x8000000]))
        (nil)))
(insn 275 274 276 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 124 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:189 -1
     (nil))
(jump_insn 276 275 277 56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 286)
            (pc))) NVCommands.c:189 -1
     (nil)
 -> 286)
(note 277 276 278 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 278 277 279 57 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:190 -1
     (nil))
(insn 279 278 280 57 (parallel [
            (set (reg:SI 125 [ D.13497 ])
                (and:SI (reg:SI 173)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:190 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 280 279 281 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 125 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:190 -1
     (nil))
(jump_insn 281 280 282 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 286)
            (pc))) NVCommands.c:190 -1
     (nil)
 -> 286)
(note 282 281 283 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 58 (set (reg:SI 87 [ D.13493 ])
        (const_int 706 [0x2c2])) NVCommands.c:191 -1
     (nil))
(jump_insn 284 283 285 58 (set (pc)
        (label_ref 366)) NVCommands.c:191 -1
     (nil)
 -> 366)
(barrier 285 284 286)
(code_label 286 285 287 59 29 "" [2 uses])
(note 287 286 288 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 288 287 289 59 (set (reg:SI 174)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:193 -1
     (nil))
(insn 289 288 290 59 (parallel [
            (set (reg:SI 126 [ D.13497 ])
                (and:SI (reg:SI 174)
                    (const_int 1073741824 [0x40000000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:193 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 1073741824 [0x40000000]))
        (nil)))
(insn 290 289 291 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 126 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:193 -1
     (nil))
(jump_insn 291 290 292 59 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) NVCommands.c:193 -1
     (nil)
 -> 297)
(note 292 291 293 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 60 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:194 -1
     (nil))
(insn 294 293 295 60 (set (reg:SI 127 [ D.13497 ])
        (mem/j:SI (reg/f:DI 175) [0 in_4(D)->authHandle+0 S4 A32])) NVCommands.c:194 -1
     (nil))
(insn 295 294 296 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 127 [ D.13497 ])
            (const_int 1073741825 [0x40000001]))) NVCommands.c:194 -1
     (nil))
(jump_insn 296 295 297 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) NVCommands.c:194 -1
     (nil)
 -> 308)
(code_label 297 296 298 61 30 "" [1 uses])
(note 298 297 299 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 300 61 (set (reg:SI 176)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:195 -1
     (nil))
(insn 300 299 301 61 (parallel [
            (set (reg:SI 128 [ D.13497 ])
                (and:SI (reg:SI 176)
                    (const_int 1073741824 [0x40000000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:195 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 1073741824 [0x40000000]))
        (nil)))
(insn 301 300 302 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 128 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:195 -1
     (nil))
(jump_insn 302 301 303 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 313)
            (pc))) NVCommands.c:195 -1
     (nil)
 -> 313)
(note 303 302 304 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 62 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:196 -1
     (nil))
(insn 305 304 306 62 (set (reg:SI 129 [ D.13497 ])
        (mem/j:SI (reg/f:DI 177) [0 in_4(D)->authHandle+0 S4 A32])) NVCommands.c:196 -1
     (nil))
(insn 306 305 307 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 129 [ D.13497 ])
            (const_int 1073741836 [0x4000000c]))) NVCommands.c:196 -1
     (nil))
(jump_insn 307 306 308 62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 313)
            (pc))) NVCommands.c:196 -1
     (nil)
 -> 313)
(code_label 308 307 309 63 31 "" [1 uses])
(note 309 308 310 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 310 309 311 63 (set (reg:SI 87 [ D.13493 ])
        (const_int 386 [0x182])) NVCommands.c:197 -1
     (nil))
(jump_insn 311 310 312 63 (set (pc)
        (label_ref 366)) NVCommands.c:197 -1
     (nil)
 -> 366)
(barrier 312 311 313)
(code_label 313 312 314 64 32 "" [2 uses])
(note 314 313 315 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 315 314 316 64 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:200 -1
     (nil))
(insn 316 315 317 64 (parallel [
            (set (reg:SI 130 [ D.13497 ])
                (and:SI (reg:SI 178)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:200 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 1024 [0x400]))
        (nil)))
(insn 317 316 318 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:200 -1
     (nil))
(jump_insn 318 317 319 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 328)
            (pc))) NVCommands.c:200 -1
     (nil)
 -> 328)
(note 319 318 320 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 320 319 321 65 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:201 -1
     (nil))
(insn 321 320 322 65 (set (reg:SI 131 [ D.13497 ])
        (mem/j:SI (reg/f:DI 179) [0 in_4(D)->authHandle+0 S4 A32])) NVCommands.c:201 -1
     (nil))
(insn 322 321 323 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 131 [ D.13497 ])
            (const_int 1073741836 [0x4000000c]))) NVCommands.c:201 -1
     (nil))
(jump_insn 323 322 324 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 328)
            (pc))) NVCommands.c:201 -1
     (nil)
 -> 328)
(note 324 323 325 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 325 324 326 66 (set (reg:SI 87 [ D.13493 ])
        (const_int 706 [0x2c2])) NVCommands.c:202 -1
     (nil))
(jump_insn 326 325 327 66 (set (pc)
        (label_ref 366)) NVCommands.c:202 -1
     (nil)
 -> 366)
(barrier 327 326 328)
(code_label 328 327 329 67 33 "" [2 uses])
(note 329 328 330 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 330 329 331 67 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:205 -1
     (nil))
(insn 331 330 332 67 (set (reg:HI 132 [ D.13494 ])
        (mem/j:HI (plus:DI (reg/f:DI 180)
                (const_int 122 [0x7a])) [0 in_4(D)->publicInfo.nvPublic.dataSize+0 S2 A16])) NVCommands.c:205 -1
     (nil))
(insn 332 331 333 67 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 132 [ D.13494 ])
            (const_int 1024 [0x400]))) NVCommands.c:205 -1
     (nil))
(jump_insn 333 332 334 67 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 343)
            (pc))) NVCommands.c:205 -1
     (nil)
 -> 343)
(note 334 333 335 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 335 334 336 68 (set (reg:SI 181)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])) NVCommands.c:206 -1
     (nil))
(insn 336 335 337 68 (parallel [
            (set (reg:SI 133 [ D.13497 ])
                (and:SI (reg:SI 181)
                    (const_int 4096 [0x1000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:206 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 attributes+0 S4 A32])
            (const_int 4096 [0x1000]))
        (nil)))
(insn 337 336 338 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 133 [ D.13497 ])
            (const_int 0 [0]))) NVCommands.c:206 -1
     (nil))
(jump_insn 338 337 339 68 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 343)
            (pc))) NVCommands.c:206 -1
     (nil)
 -> 343)
(note 339 338 340 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 340 339 341 69 (set (reg:SI 87 [ D.13493 ])
        (const_int 725 [0x2d5])) NVCommands.c:207 -1
     (nil))
(jump_insn 341 340 342 69 (set (pc)
        (label_ref 366)) NVCommands.c:207 -1
     (nil)
 -> 366)
(barrier 342 341 343)
(code_label 343 342 344 70 34 "" [2 uses])
(note 344 343 345 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 345 344 346 70 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:209 -1
     (nil))
(insn 346 345 347 70 (set (reg:SI 134 [ D.13497 ])
        (mem/j:SI (plus:DI (reg/f:DI 182)
                (const_int 60 [0x3c])) [0 in_4(D)->publicInfo.nvPublic.nvIndex+0 S4 A32])) NVCommands.c:209 -1
     (nil))
(insn 347 346 348 70 (set (reg:SI 5 di)
        (reg:SI 134 [ D.13497 ])) NVCommands.c:209 -1
     (nil))
(call_insn 348 347 349 70 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvIndexIsDefined") [flags 0x41]  <function_decl 0x7efeeae63360 NvIndexIsDefined>) [0 NvIndexIsDefined S1 A8])
            (const_int 0 [0]))) NVCommands.c:209 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 349 348 350 70 (set (reg:SI 135 [ D.13495 ])
        (reg:SI 0 ax)) NVCommands.c:209 -1
     (nil))
(insn 350 349 351 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135 [ D.13495 ])
            (const_int 0 [0]))) NVCommands.c:209 -1
     (nil))
(jump_insn 351 350 352 70 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 356)
            (pc))) NVCommands.c:209 -1
     (nil)
 -> 356)
(note 352 351 353 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 353 352 354 71 (set (reg:SI 87 [ D.13493 ])
        (const_int 332 [0x14c])) NVCommands.c:210 -1
     (nil))
(jump_insn 354 353 355 71 (set (pc)
        (label_ref 366)) NVCommands.c:210 -1
     (nil)
 -> 366)
(barrier 355 354 356)
(code_label 356 355 357 72 35 "" [1 uses])
(note 357 356 358 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 72 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:213 -1
     (nil))
(insn 359 358 360 72 (parallel [
            (set (reg/f:DI 136 [ D.13496 ])
                (plus:DI (reg/f:DI 183)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:213 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 360 359 361 72 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:213 -1
     (nil))
(insn 361 360 362 72 (parallel [
            (set (reg/f:DI 137 [ D.13498 ])
                (plus:DI (reg/f:DI 184)
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:213 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])
            (const_int 60 [0x3c]))
        (nil)))
(insn 362 361 363 72 (set (reg:DI 4 si)
        (reg/f:DI 136 [ D.13496 ])) NVCommands.c:213 -1
     (nil))
(insn 363 362 364 72 (set (reg:DI 5 di)
        (reg/f:DI 137 [ D.13498 ])) NVCommands.c:213 -1
     (nil))
(call_insn 364 363 365 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvDefineIndex") [flags 0x41]  <function_decl 0x7efeeae670d8 NvDefineIndex>) [0 NvDefineIndex S1 A8])
            (const_int 0 [0]))) NVCommands.c:213 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 365 364 366 72 (set (reg:SI 87 [ D.13493 ])
        (reg:SI 0 ax)) NVCommands.c:213 -1
     (nil))
(code_label 366 365 367 73 3 "" [18 uses])
(note 367 366 368 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 372 73 (set (reg:SI 138 [ <retval> ])
        (reg:SI 87 [ D.13493 ])) -1
     (nil))
(insn 372 368 373 73 (set (reg/i:SI 0 ax)
        (reg:SI 138 [ <retval> ])) NVCommands.c:214 -1
     (nil))
(insn 373 372 0 73 (use (reg/i:SI 0 ax)) NVCommands.c:214 -1
     (nil))

;; Function TPM2_NV_UndefineSpace (TPM2_NV_UndefineSpace, funcdef_no=3, decl_uid=12884, cgraph_uid=3, symbol_order=3)

Partition 0: size 8 align 8
	nvIndex_7
Partition 1: size 4 align 4
	locator

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 22 from 9 to 10.
Redirecting jump 38 from 9 to 10.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 53.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) NVCommands.c:223 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13501+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:223 -1
     (nil))
(insn 7 4 8 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:225 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.13500 ])
        (mem/j:SI (plus:DI (reg/f:DI 96)
                (const_int 4 [0x4])) [0 in_4(D)->nvIndex+0 S4 A32])) NVCommands.c:225 -1
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:225 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 97)) NVCommands.c:225 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13500 ])) NVCommands.c:225 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetIndexInfo") [flags 0x41]  <function_decl 0x7efeeae63bd0 NvGetIndexInfo>) [0 NvGetIndexInfo S1 A8])
            (const_int 0 [0]))) NVCommands.c:225 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 98)
        (reg:DI 0 ax)) NVCommands.c:225 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])
        (reg:DI 98)) NVCommands.c:225 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:228 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 89 [ D.13500 ])
        (mem/j:SI (plus:DI (reg/f:DI 99)
                (const_int 8 [0x8])) [0 nvIndex_7->publicArea.attributes+0 S4 A32])) NVCommands.c:228 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:SI 90 [ D.13500 ])
                (and:SI (reg:SI 89 [ D.13500 ])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:228 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.13500 ])
            (const_int 0 [0]))) NVCommands.c:228 -1
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) NVCommands.c:228 -1
     (nil)
 -> 24)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:SI 87 [ D.13499 ])
        (const_int 642 [0x282])) NVCommands.c:229 -1
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (label_ref:DI 50)) NVCommands.c:229 654 {jump}
     (nil)
 -> 50)
(barrier 23 22 24)
(code_label 24 23 25 5 44 "" [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:232 -1
     (nil))
(insn 27 26 28 5 (set (reg:SI 91 [ D.13500 ])
        (mem/j:SI (reg/f:DI 100) [0 in_4(D)->authHandle+0 S4 A32])) NVCommands.c:232 -1
     (nil))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.13500 ])
            (const_int 1073741825 [0x40000001]))) NVCommands.c:232 -1
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) NVCommands.c:232 -1
     (nil)
 -> 40)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:233 -1
     (nil))
(insn 32 31 33 6 (set (reg:SI 92 [ D.13500 ])
        (mem/j:SI (plus:DI (reg/f:DI 101)
                (const_int 8 [0x8])) [0 nvIndex_7->publicArea.attributes+0 S4 A32])) NVCommands.c:233 -1
     (nil))
(insn 33 32 34 6 (parallel [
            (set (reg:SI 93 [ D.13500 ])
                (and:SI (reg:SI 92 [ D.13500 ])
                    (const_int 1073741824 [0x40000000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:233 -1
     (nil))
(insn 34 33 35 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.13500 ])
            (const_int 0 [0]))) NVCommands.c:233 -1
     (nil))
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) NVCommands.c:233 -1
     (nil)
 -> 40)
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg:SI 87 [ D.13499 ])
        (const_int 329 [0x149])) NVCommands.c:234 -1
     (nil))
(jump_insn 38 37 39 7 (set (pc)
        (label_ref:DI 50)) NVCommands.c:234 654 {jump}
     (nil)
 -> 50)
(barrier 39 38 40)
(code_label 40 39 41 8 46 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:SI 94 [ D.13500 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 locator+0 S4 A32])) NVCommands.c:237 -1
     (nil))
(insn 43 42 44 8 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:237 -1
     (nil))
(insn 44 43 45 8 (set (reg:SI 4 si)
        (reg:SI 94 [ D.13500 ])) NVCommands.c:237 -1
     (nil))
(insn 45 44 46 8 (set (reg:DI 5 di)
        (reg:DI 102)) NVCommands.c:237 -1
     (nil))
(call_insn 46 45 47 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvDeleteIndex") [flags 0x41]  <function_decl 0x7efeeae67288 NvDeleteIndex>) [0 NvDeleteIndex S1 A8])
            (const_int 0 [0]))) NVCommands.c:237 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 47 46 50 8 (set (reg:SI 87 [ D.13499 ])
        (reg:SI 0 ax)) NVCommands.c:237 -1
     (nil))
(code_label 50 47 51 10 47 "" [2 uses])
(note 51 50 52 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 56 10 (set (reg:SI 95 [ <retval> ])
        (reg:SI 87 [ D.13499 ])) -1
     (nil))
(insn 56 52 57 10 (set (reg/i:SI 0 ax)
        (reg:SI 95 [ <retval> ])) NVCommands.c:238 -1
     (nil))
(insn 57 56 58 10 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13501+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) NVCommands.c:238 -1
     (nil))
(jump_insn 58 57 64 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) NVCommands.c:238 -1
     (nil)
 -> 61)
(note 64 58 59 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 59 64 60 12 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7efeea6e2438 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) NVCommands.c:238 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 60 59 61)
(code_label 61 60 65 13 48 "" [1 uses])
(note 65 61 62 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 62 65 0 13 (use (reg/i:SI 0 ax)) NVCommands.c:238 -1
     (nil))

;; Function TPM2_NV_UndefineSpaceSpecial (TPM2_NV_UndefineSpaceSpecial, funcdef_no=4, decl_uid=12895, cgraph_uid=4, symbol_order=4)

Partition 0: size 8 align 8
	nvIndex_8
Partition 1: size 4 align 4
	result_14
Partition 2: size 4 align 4
	locator

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 22 from 8 to 9.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Removing jump 48.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) NVCommands.c:248 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13506+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:248 -1
     (nil))
(insn 7 4 8 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:251 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.13505 ])
        (mem/j:SI (reg/f:DI 94) [0 in_5(D)->nvIndex+0 S4 A32])) NVCommands.c:251 -1
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:251 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 95)) NVCommands.c:251 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13505 ])) NVCommands.c:251 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetIndexInfo") [flags 0x41]  <function_decl 0x7efeeae63bd0 NvGetIndexInfo>) [0 NvGetIndexInfo S1 A8])
            (const_int 0 [0]))) NVCommands.c:251 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 96)
        (reg:DI 0 ax)) NVCommands.c:251 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])
        (reg:DI 96)) NVCommands.c:251 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:254 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 89 [ D.13505 ])
        (mem/j:SI (plus:DI (reg/f:DI 97)
                (const_int 8 [0x8])) [0 nvIndex_8->publicArea.attributes+0 S4 A32])) NVCommands.c:254 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:SI 90 [ D.13505 ])
                (and:SI (reg:SI 89 [ D.13505 ])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:254 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.13505 ])
            (const_int 0 [0]))) NVCommands.c:254 -1
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) NVCommands.c:254 -1
     (nil)
 -> 24)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:SI 87 [ D.13504 ])
        (const_int 386 [0x182])) NVCommands.c:255 -1
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (label_ref:DI 45)) NVCommands.c:255 654 {jump}
     (nil)
 -> 45)
(barrier 23 22 24)
(code_label 24 23 25 5 50 "" [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:SI 91 [ D.13505 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 locator+0 S4 A64])) NVCommands.c:258 -1
     (nil))
(insn 27 26 28 5 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:258 -1
     (nil))
(insn 28 27 29 5 (set (reg:SI 4 si)
        (reg:SI 91 [ D.13505 ])) NVCommands.c:258 -1
     (nil))
(insn 29 28 30 5 (set (reg:DI 5 di)
        (reg:DI 98)) NVCommands.c:258 -1
     (nil))
(call_insn 30 29 31 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvDeleteIndex") [flags 0x41]  <function_decl 0x7efeeae67288 NvDeleteIndex>) [0 NvDeleteIndex S1 A8])
            (const_int 0 [0]))) NVCommands.c:258 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 31 30 32 5 (set (reg:SI 99)
        (reg:SI 0 ax)) NVCommands.c:258 -1
     (nil))
(insn 32 31 33 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 result+0 S4 A32])
        (reg:SI 99)) NVCommands.c:258 -1
     (nil))
(insn 33 32 34 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 result+0 S4 A32])
            (const_int 0 [0]))) NVCommands.c:262 -1
     (nil))
(jump_insn 34 33 35 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) NVCommands.c:262 -1
     (nil)
 -> 40)
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:263 -1
     (nil))
(insn 37 36 38 6 (set (reg:SI 92 [ D.13505 ])
        (mem/j:SI (reg/f:DI 100) [0 in_5(D)->nvIndex+0 S4 A32])) NVCommands.c:263 -1
     (nil))
(insn 38 37 39 6 (set (reg:SI 5 di)
        (reg:SI 92 [ D.13505 ])) NVCommands.c:263 -1
     (nil))
(call_insn 39 38 40 6 (call (mem:QI (symbol_ref:DI ("SessionRemoveAssociationToHandle") [flags 0x41]  <function_decl 0x7efeeae76870 SessionRemoveAssociationToHandle>) [0 SessionRemoveAssociationToHandle S1 A8])
        (const_int 0 [0])) NVCommands.c:263 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(code_label 40 39 41 7 52 "" [1 uses])
(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 45 7 (set (reg:SI 87 [ D.13504 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 result+0 S4 A32])) NVCommands.c:264 -1
     (nil))
(code_label 45 42 46 9 53 "" [1 uses])
(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 51 9 (set (reg:SI 93 [ <retval> ])
        (reg:SI 87 [ D.13504 ])) -1
     (nil))
(insn 51 47 52 9 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) NVCommands.c:265 -1
     (nil))
(insn 52 51 53 9 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13506+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) NVCommands.c:265 -1
     (nil))
(jump_insn 53 52 59 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) NVCommands.c:265 -1
     (nil)
 -> 56)
(note 59 53 54 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(call_insn 54 59 55 11 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7efeea6e2438 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) NVCommands.c:265 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 55 54 56)
(code_label 56 55 60 12 54 "" [1 uses])
(note 60 56 57 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 57 60 0 12 (use (reg/i:SI 0 ax)) NVCommands.c:265 -1
     (nil))

;; Function TPM2_NV_ReadPublic (TPM2_NV_ReadPublic, funcdef_no=5, decl_uid=12911, cgraph_uid=5, symbol_order=5)

Partition 0: size 8 align 8
	nvIndex_5

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 42.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) NVCommands.c:275 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) NVCommands.c:275 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:276 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 87 [ D.13507 ])
        (mem/j:SI (reg/f:DI 91) [0 in_2(D)->nvIndex+0 S4 A32])) NVCommands.c:276 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (const_int 0 [0])) NVCommands.c:276 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 87 [ D.13507 ])) NVCommands.c:276 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetIndexInfo") [flags 0x41]  <function_decl 0x7efeeae63bd0 NvGetIndexInfo>) [0 NvGetIndexInfo S1 A8])
            (const_int 0 [0]))) NVCommands.c:276 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg:DI 92)
        (reg:DI 0 ax)) NVCommands.c:276 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 nvIndex+0 S8 A64])
        (reg:DI 92)) NVCommands.c:276 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) NVCommands.c:279 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 nvIndex+0 S8 A64])) NVCommands.c:279 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 95)
        (mem/j:DI (reg/f:DI 94) [0 nvIndex_5->publicArea+0 S8 A32])) NVCommands.c:279 -1
     (nil))
(insn 17 16 18 2 (set (mem/j:DI (plus:DI (reg/f:DI 93)
                (const_int 4 [0x4])) [0 out_6(D)->nvPublic.nvPublic+0 S8 A32])
        (reg:DI 95)) NVCommands.c:279 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 96)
        (mem/j:DI (plus:DI (reg/f:DI 94)
                (const_int 8 [0x8])) [0 nvIndex_5->publicArea+8 S8 A32])) NVCommands.c:279 -1
     (nil))
(insn 19 18 20 2 (set (mem/j:DI (plus:DI (reg/f:DI 93)
                (const_int 12 [0xc])) [0 out_6(D)->nvPublic.nvPublic+8 S8 A32])
        (reg:DI 96)) NVCommands.c:279 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 97)
        (mem/j:DI (plus:DI (reg/f:DI 94)
                (const_int 16 [0x10])) [0 nvIndex_5->publicArea+16 S8 A32])) NVCommands.c:279 -1
     (nil))
(insn 21 20 22 2 (set (mem/j:DI (plus:DI (reg/f:DI 93)
                (const_int 20 [0x14])) [0 out_6(D)->nvPublic.nvPublic+16 S8 A32])
        (reg:DI 97)) NVCommands.c:279 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 98)
        (mem/j:DI (plus:DI (reg/f:DI 94)
                (const_int 24 [0x18])) [0 nvIndex_5->publicArea+24 S8 A32])) NVCommands.c:279 -1
     (nil))
(insn 23 22 24 2 (set (mem/j:DI (plus:DI (reg/f:DI 93)
                (const_int 28 [0x1c])) [0 out_6(D)->nvPublic.nvPublic+24 S8 A32])
        (reg:DI 98)) NVCommands.c:279 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 99)
        (mem/j:DI (plus:DI (reg/f:DI 94)
                (const_int 32 [0x20])) [0 nvIndex_5->publicArea+32 S8 A32])) NVCommands.c:279 -1
     (nil))
(insn 25 24 26 2 (set (mem/j:DI (plus:DI (reg/f:DI 93)
                (const_int 36 [0x24])) [0 out_6(D)->nvPublic.nvPublic+32 S8 A32])
        (reg:DI 99)) NVCommands.c:279 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 100)
        (mem/j:DI (plus:DI (reg/f:DI 94)
                (const_int 40 [0x28])) [0 nvIndex_5->publicArea+40 S8 A32])) NVCommands.c:279 -1
     (nil))
(insn 27 26 28 2 (set (mem/j:DI (plus:DI (reg/f:DI 93)
                (const_int 44 [0x2c])) [0 out_6(D)->nvPublic.nvPublic+40 S8 A32])
        (reg:DI 100)) NVCommands.c:279 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 101)
        (mem/j:DI (plus:DI (reg/f:DI 94)
                (const_int 48 [0x30])) [0 nvIndex_5->publicArea+48 S8 A32])) NVCommands.c:279 -1
     (nil))
(insn 29 28 30 2 (set (mem/j:DI (plus:DI (reg/f:DI 93)
                (const_int 52 [0x34])) [0 out_6(D)->nvPublic.nvPublic+48 S8 A32])
        (reg:DI 101)) NVCommands.c:279 -1
     (nil))
(insn 30 29 31 2 (set (reg:DI 102)
        (mem/j:DI (plus:DI (reg/f:DI 94)
                (const_int 56 [0x38])) [0 nvIndex_5->publicArea+56 S8 A32])) NVCommands.c:279 -1
     (nil))
(insn 31 30 32 2 (set (mem/j:DI (plus:DI (reg/f:DI 93)
                (const_int 60 [0x3c])) [0 out_6(D)->nvPublic.nvPublic+56 S8 A32])
        (reg:DI 102)) NVCommands.c:279 -1
     (nil))
(insn 32 31 33 2 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) NVCommands.c:281 -1
     (nil))
(insn 33 32 34 2 (parallel [
            (set (reg/f:DI 88 [ D.13508 ])
                (plus:DI (reg/f:DI 103)
                    (const_int 68 [0x44])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:281 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])
            (const_int 68 [0x44]))
        (nil)))
(insn 34 33 35 2 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 nvIndex+0 S8 A64])) NVCommands.c:281 -1
     (nil))
(insn 35 34 36 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.13508 ])) NVCommands.c:281 -1
     (nil))
(insn 36 35 37 2 (set (reg:DI 5 di)
        (reg:DI 104)) NVCommands.c:281 -1
     (nil))
(call_insn 37 36 38 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetIndexName") [flags 0x41]  <function_decl 0x7efeeae63e58 NvGetIndexName>) [0 NvGetIndexName S1 A8])
            (const_int 0 [0]))) NVCommands.c:281 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 38 37 41 2 (set (reg:SI 89 [ D.13509 ])
        (const_int 0 [0])) NVCommands.c:282 -1
     (nil))
(insn 41 38 45 2 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.13509 ])) NVCommands.c:282 -1
     (nil))
(insn 45 41 46 2 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) NVCommands.c:283 -1
     (nil))
(insn 46 45 0 2 (use (reg/i:SI 0 ax)) NVCommands.c:283 -1
     (nil))

;; Function TPM2_NV_Write (TPM2_NV_Write, funcdef_no=6, decl_uid=12924, cgraph_uid=6, symbol_order=6)

Partition 0: size 8 align 8
	nvIndex_7
Partition 2: size 4 align 4
	result_12
Partition 1: size 4 align 4
	attributes_8

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 124.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) NVCommands.c:292 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:293 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 88 [ D.13511 ])
        (mem/j:SI (plus:DI (reg/f:DI 115)
                (const_int 4 [0x4])) [0 in_4(D)->nvIndex+0 S4 A32])) NVCommands.c:293 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (const_int 0 [0])) NVCommands.c:293 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13511 ])) NVCommands.c:293 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetIndexInfo") [flags 0x41]  <function_decl 0x7efeeae63bd0 NvGetIndexInfo>) [0 NvGetIndexInfo S1 A8])
            (const_int 0 [0]))) NVCommands.c:293 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 11 10 12 2 (set (reg:DI 116)
        (reg:DI 0 ax)) NVCommands.c:293 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 nvIndex+0 S8 A64])
        (reg:DI 116)) NVCommands.c:293 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 nvIndex+0 S8 A64])) NVCommands.c:294 -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 118)
        (mem/j:SI (plus:DI (reg/f:DI 117)
                (const_int 8 [0x8])) [0 nvIndex_7->publicArea.attributes+0 S4 A32])) NVCommands.c:294 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 attributes+0 S4 A32])
        (reg:SI 118)) NVCommands.c:294 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:299 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 89 [ D.13511 ])
        (mem/j:SI (plus:DI (reg/f:DI 119)
                (const_int 4 [0x4])) [0 in_4(D)->nvIndex+0 S4 A32])) NVCommands.c:299 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:299 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 90 [ D.13511 ])
        (mem/j:SI (reg/f:DI 120) [0 in_4(D)->authHandle+0 S4 A32])) NVCommands.c:299 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 attributes+0 S4 A32])) NVCommands.c:299 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 1 dx)
        (reg:SI 121)) NVCommands.c:299 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 4 si)
        (reg:SI 89 [ D.13511 ])) NVCommands.c:299 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 5 di)
        (reg:SI 90 [ D.13511 ])) NVCommands.c:299 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvWriteAccessChecks") [flags 0x41]  <function_decl 0x7efeeae6b288 NvWriteAccessChecks>) [0 NvWriteAccessChecks S1 A8])
            (const_int 0 [0]))) NVCommands.c:299 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 25 24 26 2 (set (reg:SI 122)
        (reg:SI 0 ax)) NVCommands.c:299 -1
     (nil))
(insn 26 25 27 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 result+0 S4 A32])
        (reg:SI 122)) NVCommands.c:299 -1
     (nil))
(insn 27 26 28 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 result+0 S4 A32])
            (const_int 0 [0]))) NVCommands.c:302 -1
     (nil))
(jump_insn 28 27 29 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) NVCommands.c:302 -1
     (nil)
 -> 33)
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg:SI 87 [ D.13510 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 result+0 S4 A32])) NVCommands.c:303 -1
     (nil))
(jump_insn 31 30 32 4 (set (pc)
        (label_ref 121)) NVCommands.c:303 -1
     (nil)
 -> 121)
(barrier 32 31 33)
(code_label 33 32 34 5 58 "" [1 uses])
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg:SI 123)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 attributes+0 S4 A32])) NVCommands.c:306 -1
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg:SI 91 [ D.13511 ])
                (and:SI (reg:SI 123)
                    (const_int 240 [0xf0])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:306 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 attributes+0 S4 A32])
            (const_int 240 [0xf0]))
        (nil)))
(insn 37 36 38 5 (parallel [
            (set (reg:SI 92 [ D.13511 ])
                (lshiftrt:SI (reg:SI 91 [ D.13511 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:306 -1
     (nil))
(insn 38 37 39 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.13511 ])
            (const_int 1 [0x1]))) NVCommands.c:306 -1
     (nil))
(jump_insn 39 38 40 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) NVCommands.c:306 -1
     (nil)
 -> 52)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (reg:SI 124)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 attributes+0 S4 A32])) NVCommands.c:307 -1
     (nil))
(insn 42 41 43 6 (parallel [
            (set (reg:SI 93 [ D.13511 ])
                (and:SI (reg:SI 124)
                    (const_int 240 [0xf0])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:307 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 attributes+0 S4 A32])
            (const_int 240 [0xf0]))
        (nil)))
(insn 43 42 44 6 (parallel [
            (set (reg:SI 94 [ D.13511 ])
                (lshiftrt:SI (reg:SI 93 [ D.13511 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:307 -1
     (nil))
(insn 44 43 45 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.13511 ])
            (const_int 2 [0x2]))) NVCommands.c:307 -1
     (nil))
(jump_insn 45 44 46 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) NVCommands.c:307 -1
     (nil)
 -> 52)
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 attributes+0 S4 A32])) NVCommands.c:308 -1
     (nil))
(insn 48 47 49 7 (parallel [
            (set (reg:SI 95 [ D.13511 ])
                (and:SI (reg:SI 125)
                    (const_int 240 [0xf0])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:308 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 attributes+0 S4 A32])
            (const_int 240 [0xf0]))
        (nil)))
(insn 49 48 50 7 (parallel [
            (set (reg:SI 96 [ D.13511 ])
                (lshiftrt:SI (reg:SI 95 [ D.13511 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:308 -1
     (nil))
(insn 50 49 51 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.13511 ])
            (const_int 4 [0x4]))) NVCommands.c:308 -1
     (nil))
(jump_insn 51 50 52 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) NVCommands.c:308 -1
     (nil)
 -> 57)
(code_label 52 51 53 8 60 "" [2 uses])
(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 8 (set (reg:SI 87 [ D.13510 ])
        (const_int 130 [0x82])) NVCommands.c:309 -1
     (nil))
(jump_insn 55 54 56 8 (set (pc)
        (label_ref 121)) NVCommands.c:309 -1
     (nil)
 -> 121)
(barrier 56 55 57)
(code_label 57 56 58 9 61 "" [1 uses])
(note 58 57 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 9 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:311 -1
     (nil))
(insn 60 59 61 9 (set (reg:HI 97 [ D.13512 ])
        (mem/j:HI (plus:DI (reg/f:DI 126)
                (const_int 1034 [0x40a])) [0 in_4(D)->offset+0 S2 A16])) NVCommands.c:311 -1
     (nil))
(insn 61 60 62 9 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 nvIndex+0 S8 A64])) NVCommands.c:311 -1
     (nil))
(insn 62 61 63 9 (set (reg:HI 98 [ D.13512 ])
        (mem/j:HI (plus:DI (reg/f:DI 127)
                (const_int 62 [0x3e])) [0 nvIndex_7->publicArea.dataSize+0 S2 A16])) NVCommands.c:311 -1
     (nil))
(insn 63 62 64 9 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 97 [ D.13512 ])
            (reg:HI 98 [ D.13512 ]))) NVCommands.c:311 -1
     (nil))
(jump_insn 64 63 65 9 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) NVCommands.c:311 -1
     (nil)
 -> 69)
(note 65 64 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 10 (set (reg:SI 87 [ D.13510 ])
        (const_int 708 [0x2c4])) NVCommands.c:312 -1
     (nil))
(jump_insn 67 66 68 10 (set (pc)
        (label_ref 121)) NVCommands.c:312 -1
     (nil)
 -> 121)
(barrier 68 67 69)
(code_label 69 68 70 11 62 "" [1 uses])
(note 70 69 71 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 11 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:314 -1
     (nil))
(insn 72 71 73 11 (set (reg:HI 99 [ D.13512 ])
        (mem/j:HI (plus:DI (reg/f:DI 128)
                (const_int 8 [0x8])) [0 in_4(D)->data.t.size+0 S2 A32])) NVCommands.c:314 -1
     (nil))
(insn 73 72 74 11 (set (reg:SI 100 [ D.13513 ])
        (zero_extend:SI (reg:HI 99 [ D.13512 ]))) NVCommands.c:314 -1
     (nil))
(insn 74 73 75 11 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 nvIndex+0 S8 A64])) NVCommands.c:314 -1
     (nil))
(insn 75 74 76 11 (set (reg:HI 101 [ D.13512 ])
        (mem/j:HI (plus:DI (reg/f:DI 129)
                (const_int 62 [0x3e])) [0 nvIndex_7->publicArea.dataSize+0 S2 A16])) NVCommands.c:314 -1
     (nil))
(insn 76 75 77 11 (set (reg:SI 102 [ D.13513 ])
        (zero_extend:SI (reg:HI 101 [ D.13512 ]))) NVCommands.c:314 -1
     (nil))
(insn 77 76 78 11 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:314 -1
     (nil))
(insn 78 77 79 11 (set (reg:HI 103 [ D.13512 ])
        (mem/j:HI (plus:DI (reg/f:DI 130)
                (const_int 1034 [0x40a])) [0 in_4(D)->offset+0 S2 A16])) NVCommands.c:314 -1
     (nil))
(insn 79 78 80 11 (set (reg:SI 104 [ D.13513 ])
        (zero_extend:SI (reg:HI 103 [ D.13512 ]))) NVCommands.c:314 -1
     (nil))
(insn 80 79 81 11 (parallel [
            (set (reg:SI 105 [ D.13513 ])
                (minus:SI (reg:SI 102 [ D.13513 ])
                    (reg:SI 104 [ D.13513 ])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:314 -1
     (nil))
(insn 81 80 82 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 100 [ D.13513 ])
            (reg:SI 105 [ D.13513 ]))) NVCommands.c:314 -1
     (nil))
(jump_insn 82 81 83 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) NVCommands.c:314 -1
     (nil)
 -> 87)
(note 83 82 84 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 12 (set (reg:SI 87 [ D.13510 ])
        (const_int 326 [0x146])) NVCommands.c:315 -1
     (nil))
(jump_insn 85 84 86 12 (set (pc)
        (label_ref 121)) NVCommands.c:315 -1
     (nil)
 -> 121)
(barrier 86 85 87)
(code_label 87 86 88 13 63 "" [1 uses])
(note 88 87 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 13 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 attributes+0 S4 A32])) NVCommands.c:320 -1
     (nil))
(insn 90 89 91 13 (parallel [
            (set (reg:SI 106 [ D.13511 ])
                (and:SI (reg:SI 131)
                    (const_int 4096 [0x1000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:320 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 attributes+0 S4 A32])
            (const_int 4096 [0x1000]))
        (nil)))
(insn 91 90 92 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 106 [ D.13511 ])
            (const_int 0 [0]))) NVCommands.c:320 -1
     (nil))
(jump_insn 92 91 93 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) NVCommands.c:320 -1
     (nil)
 -> 104)
(note 93 92 94 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 14 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:321 -1
     (nil))
(insn 95 94 96 14 (set (reg:HI 107 [ D.13512 ])
        (mem/j:HI (plus:DI (reg/f:DI 132)
                (const_int 8 [0x8])) [0 in_4(D)->data.t.size+0 S2 A32])) NVCommands.c:321 -1
     (nil))
(insn 96 95 97 14 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 nvIndex+0 S8 A64])) NVCommands.c:321 -1
     (nil))
(insn 97 96 98 14 (set (reg:HI 108 [ D.13512 ])
        (mem/j:HI (plus:DI (reg/f:DI 133)
                (const_int 62 [0x3e])) [0 nvIndex_7->publicArea.dataSize+0 S2 A16])) NVCommands.c:321 -1
     (nil))
(insn 98 97 99 14 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 107 [ D.13512 ])
            (reg:HI 108 [ D.13512 ]))) NVCommands.c:321 -1
     (nil))
(jump_insn 99 98 100 14 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) NVCommands.c:321 -1
     (nil)
 -> 104)
(note 100 99 101 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 15 (set (reg:SI 87 [ D.13510 ])
        (const_int 326 [0x146])) NVCommands.c:322 -1
     (nil))
(jump_insn 102 101 103 15 (set (pc)
        (label_ref 121)) NVCommands.c:322 -1
     (nil)
 -> 121)
(barrier 103 102 104)
(code_label 104 103 105 16 64 "" [2 uses])
(note 105 104 106 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 16 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:328 -1
     (nil))
(insn 107 106 108 16 (parallel [
            (set (reg/f:DI 109 [ D.13514 ])
                (plus:DI (reg/f:DI 134)
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:328 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])
            (const_int 10 [0xa]))
        (nil)))
(insn 108 107 109 16 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:327 -1
     (nil))
(insn 109 108 110 16 (set (reg:HI 110 [ D.13512 ])
        (mem/j:HI (plus:DI (reg/f:DI 135)
                (const_int 8 [0x8])) [0 in_4(D)->data.t.size+0 S2 A32])) NVCommands.c:327 -1
     (nil))
(insn 110 109 111 16 (set (reg:SI 111 [ D.13511 ])
        (zero_extend:SI (reg:HI 110 [ D.13512 ]))) NVCommands.c:327 -1
     (nil))
(insn 111 110 112 16 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) NVCommands.c:327 -1
     (nil))
(insn 112 111 113 16 (set (reg:HI 112 [ D.13512 ])
        (mem/j:HI (plus:DI (reg/f:DI 136)
                (const_int 1034 [0x40a])) [0 in_4(D)->offset+0 S2 A16])) NVCommands.c:327 -1
     (nil))
(insn 113 112 114 16 (set (reg:SI 113 [ D.13511 ])
        (zero_extend:SI (reg:HI 112 [ D.13512 ]))) NVCommands.c:327 -1
     (nil))
(insn 114 113 115 16 (set (reg:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 nvIndex+0 S8 A64])) NVCommands.c:327 -1
     (nil))
(insn 115 114 116 16 (set (reg:DI 2 cx)
        (reg/f:DI 109 [ D.13514 ])) NVCommands.c:327 -1
     (nil))
(insn 116 115 117 16 (set (reg:SI 1 dx)
        (reg:SI 111 [ D.13511 ])) NVCommands.c:327 -1
     (nil))
(insn 117 116 118 16 (set (reg:SI 4 si)
        (reg:SI 113 [ D.13511 ])) NVCommands.c:327 -1
     (nil))
(insn 118 117 119 16 (set (reg:DI 5 di)
        (reg:DI 137)) NVCommands.c:327 -1
     (nil))
(call_insn 119 118 120 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvWriteIndexData") [flags 0x41]  <function_decl 0x7efeeae63ca8 NvWriteIndexData>) [0 NvWriteIndexData S1 A8])
            (const_int 0 [0]))) NVCommands.c:327 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 120 119 121 16 (set (reg:SI 87 [ D.13510 ])
        (reg:SI 0 ax)) NVCommands.c:327 -1
     (nil))
(code_label 121 120 122 17 59 "" [5 uses])
(note 122 121 123 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 127 17 (set (reg:SI 114 [ <retval> ])
        (reg:SI 87 [ D.13510 ])) -1
     (nil))
(insn 127 123 128 17 (set (reg/i:SI 0 ax)
        (reg:SI 114 [ <retval> ])) NVCommands.c:329 -1
     (nil))
(insn 128 127 0 17 (use (reg/i:SI 0 ax)) NVCommands.c:329 -1
     (nil))

;; Function TPM2_NV_Increment (TPM2_NV_Increment, funcdef_no=7, decl_uid=12936, cgraph_uid=7, symbol_order=7)

Partition 1: size 8 align 8
	nvIndex_10
Partition 0: size 8 align 8
	countValue_1
Partition 2: size 4 align 4
	result_15
Partition 3: size 4 align 4
	locator

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 31 from 15 to 16.
Redirecting jump 43 from 15 to 16.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 102.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) NVCommands.c:338 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13519+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:338 -1
     (nil))
(insn 7 4 8 2 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:341 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.13516 ])
        (mem/j:SI (plus:DI (reg/f:DI 104)
                (const_int 4 [0x4])) [0 in_7(D)->nvIndex+0 S4 A32])) NVCommands.c:341 -1
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:341 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 105)) NVCommands.c:341 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13516 ])) NVCommands.c:341 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetIndexInfo") [flags 0x41]  <function_decl 0x7efeeae63bd0 NvGetIndexInfo>) [0 NvGetIndexInfo S1 A8])
            (const_int 0 [0]))) NVCommands.c:341 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 106)
        (reg:DI 0 ax)) NVCommands.c:341 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])
        (reg:DI 106)) NVCommands.c:341 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:346 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 89 [ D.13516 ])
        (mem/j:SI (plus:DI (reg/f:DI 107)
                (const_int 8 [0x8])) [0 nvIndex_10->publicArea.attributes+0 S4 A32])) NVCommands.c:346 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:346 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 90 [ D.13516 ])
        (mem/j:SI (plus:DI (reg/f:DI 108)
                (const_int 4 [0x4])) [0 in_7(D)->nvIndex+0 S4 A32])) NVCommands.c:346 -1
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:346 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 91 [ D.13516 ])
        (mem/j:SI (reg/f:DI 109) [0 in_7(D)->authHandle+0 S4 A32])) NVCommands.c:346 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 1 dx)
        (reg:SI 89 [ D.13516 ])) NVCommands.c:346 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 4 si)
        (reg:SI 90 [ D.13516 ])) NVCommands.c:346 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 5 di)
        (reg:SI 91 [ D.13516 ])) NVCommands.c:346 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvWriteAccessChecks") [flags 0x41]  <function_decl 0x7efeeae6b288 NvWriteAccessChecks>) [0 NvWriteAccessChecks S1 A8])
            (const_int 0 [0]))) NVCommands.c:346 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 25 24 26 2 (set (reg:SI 110)
        (reg:SI 0 ax)) NVCommands.c:346 -1
     (nil))
(insn 26 25 27 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 result+0 S4 A32])
        (reg:SI 110)) NVCommands.c:346 -1
     (nil))
(insn 27 26 28 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 result+0 S4 A32])
            (const_int 0 [0]))) NVCommands.c:349 -1
     (nil))
(jump_insn 28 27 29 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) NVCommands.c:349 -1
     (nil)
 -> 33)
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg:SI 87 [ D.13515 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 result+0 S4 A32])) NVCommands.c:350 -1
     (nil))
(jump_insn 31 30 32 4 (set (pc)
        (label_ref:DI 99)) NVCommands.c:350 654 {jump}
     (nil)
 -> 99)
(barrier 32 31 33)
(code_label 33 32 34 5 66 "" [1 uses])
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:352 -1
     (nil))
(insn 36 35 37 5 (set (reg:SI 92 [ D.13516 ])
        (mem/j:SI (plus:DI (reg/f:DI 111)
                (const_int 8 [0x8])) [0 nvIndex_10->publicArea.attributes+0 S4 A32])) NVCommands.c:352 -1
     (nil))
(insn 37 36 38 5 (parallel [
            (set (reg:SI 93 [ D.13516 ])
                (and:SI (reg:SI 92 [ D.13516 ])
                    (const_int 240 [0xf0])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:352 -1
     (nil))
(insn 38 37 39 5 (parallel [
            (set (reg:SI 94 [ D.13516 ])
                (lshiftrt:SI (reg:SI 93 [ D.13516 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:352 -1
     (nil))
(insn 39 38 40 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.13516 ])
            (const_int 1 [0x1]))) NVCommands.c:352 -1
     (nil))
(jump_insn 40 39 41 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) NVCommands.c:352 -1
     (nil)
 -> 45)
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg:SI 87 [ D.13515 ])
        (const_int 642 [0x282])) NVCommands.c:353 -1
     (nil))
(jump_insn 43 42 44 6 (set (pc)
        (label_ref:DI 99)) NVCommands.c:353 654 {jump}
     (nil)
 -> 99)
(barrier 44 43 45)
(code_label 45 44 46 7 68 "" [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:356 -1
     (nil))
(insn 48 47 49 7 (set (reg:SI 95 [ D.13516 ])
        (mem/j:SI (plus:DI (reg/f:DI 112)
                (const_int 8 [0x8])) [0 nvIndex_10->publicArea.attributes+0 S4 A32])) NVCommands.c:356 -1
     (nil))
(insn 49 48 50 7 (parallel [
            (set (reg:SI 96 [ D.13516 ])
                (and:SI (reg:SI 95 [ D.13516 ])
                    (const_int 536870912 [0x20000000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:356 -1
     (nil))
(insn 50 49 51 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.13516 ])
            (const_int 0 [0]))) NVCommands.c:356 -1
     (nil))
(jump_insn 51 50 52 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) NVCommands.c:356 -1
     (nil)
 -> 58)
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 53 52 54 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvReadMaxCount") [flags 0x41]  <function_decl 0x7efeeae67d80 NvReadMaxCount>) [0 NvReadMaxCount S1 A8])
            (const_int 0 [0]))) NVCommands.c:357 -1
     (nil)
    (nil))
(insn 54 53 55 8 (set (reg:DI 113)
        (reg:DI 0 ax)) NVCommands.c:357 -1
     (nil))
(insn 55 54 56 8 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 countValue+0 S8 A64])
        (reg:DI 113)) NVCommands.c:357 -1
     (nil))
(jump_insn 56 55 57 8 (set (pc)
        (label_ref 67)) -1
     (nil)
 -> 67)
(barrier 57 56 58)
(code_label 58 57 59 9 69 "" [1 uses])
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 9 (set (reg:SI 97 [ D.13516 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 locator+0 S4 A64])) NVCommands.c:360 -1
     (nil))
(insn 61 60 62 9 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:360 -1
     (nil))
(insn 62 61 63 9 (set (reg:SI 4 si)
        (reg:SI 97 [ D.13516 ])) NVCommands.c:360 -1
     (nil))
(insn 63 62 64 9 (set (reg:DI 5 di)
        (reg:DI 114)) NVCommands.c:360 -1
     (nil))
(call_insn 64 63 65 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetUINT64Data") [flags 0x41]  <function_decl 0x7efeeae63948 NvGetUINT64Data>) [0 NvGetUINT64Data S1 A8])
            (const_int 0 [0]))) NVCommands.c:360 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 65 64 66 9 (set (reg:DI 115)
        (reg:DI 0 ax)) NVCommands.c:360 -1
     (nil))
(insn 66 65 67 9 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 countValue+0 S8 A64])
        (reg:DI 115)) NVCommands.c:360 -1
     (nil))
(code_label 67 66 68 10 70 "" [1 uses])
(note 68 67 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 10 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 countValue+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 countValue+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:362 -1
     (nil))
(insn 70 69 71 10 (set (reg:DI 116)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 countValue+0 S8 A64])) NVCommands.c:366 -1
     (nil))
(insn 71 70 72 10 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:366 -1
     (nil))
(insn 72 71 73 10 (set (reg:DI 4 si)
        (reg:DI 116)) NVCommands.c:366 -1
     (nil))
(insn 73 72 74 10 (set (reg:DI 5 di)
        (reg:DI 117)) NVCommands.c:366 -1
     (nil))
(call_insn 74 73 75 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvWriteUINT64Data") [flags 0x41]  <function_decl 0x7efeeae63d80 NvWriteUINT64Data>) [0 NvWriteUINT64Data S1 A8])
            (const_int 0 [0]))) NVCommands.c:366 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 75 74 76 10 (set (reg:SI 118)
        (reg:SI 0 ax)) NVCommands.c:366 -1
     (nil))
(insn 76 75 77 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 result+0 S4 A32])
        (reg:SI 118)) NVCommands.c:366 -1
     (nil))
(insn 77 76 78 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 result+0 S4 A32])
            (const_int 0 [0]))) NVCommands.c:367 -1
     (nil))
(jump_insn 78 77 79 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) NVCommands.c:367 -1
     (nil)
 -> 94)
(note 79 78 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 11 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:372 -1
     (nil))
(insn 81 80 82 11 (set (reg:SI 98 [ D.13516 ])
        (mem/j:SI (plus:DI (reg/f:DI 119)
                (const_int 8 [0x8])) [0 nvIndex_10->publicArea.attributes+0 S4 A32])) NVCommands.c:372 -1
     (nil))
(insn 82 81 83 11 (parallel [
            (set (reg:SI 99 [ D.13516 ])
                (and:SI (reg:SI 98 [ D.13516 ])
                    (const_int 67108864 [0x4000000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:372 -1
     (nil))
(insn 83 82 84 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.13516 ])
            (const_int 0 [0]))) NVCommands.c:372 -1
     (nil))
(jump_insn 84 83 85 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) NVCommands.c:372 -1
     (nil)
 -> 94)
(note 85 84 86 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 12 (set (reg:DI 120)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 countValue+0 S8 A64])) NVCommands.c:373 -1
     (nil))
(insn 87 86 88 12 (set (reg:DI 100 [ D.13517 ])
        (zero_extend:DI (subreg:QI (reg:DI 120) 0))) NVCommands.c:373 -1
     (expr_list:REG_EQUAL (and:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 countValue+0 S8 A64])
            (const_int 255 [0xff]))
        (nil)))
(insn 88 87 89 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 100 [ D.13517 ])
            (const_int 0 [0]))) NVCommands.c:373 -1
     (nil))
(jump_insn 89 88 90 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) NVCommands.c:373 -1
     (nil)
 -> 94)
(note 90 89 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 13 (set (reg:QI 101 [ D.13518 ])
        (mem/c:QI (symbol_ref:DI ("g_updateNV") [flags 0x40]  <var_decl 0x7efeeadf4a20 g_updateNV>) [0 g_updateNV+0 S1 A8])) NVCommands.c:376 -1
     (nil))
(insn 92 91 93 13 (parallel [
            (set (reg:QI 102 [ D.13518 ])
                (ior:QI (reg:QI 101 [ D.13518 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:376 -1
     (nil))
(insn 93 92 94 13 (set (mem/c:QI (symbol_ref:DI ("g_updateNV") [flags 0x40]  <var_decl 0x7efeeadf4a20 g_updateNV>) [0 g_updateNV+0 S1 A8])
        (reg:QI 102 [ D.13518 ])) NVCommands.c:376 -1
     (nil))
(code_label 94 93 95 14 71 "" [3 uses])
(note 95 94 96 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 99 14 (set (reg:SI 87 [ D.13515 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 result+0 S4 A32])) NVCommands.c:379 -1
     (nil))
(code_label 99 96 100 16 72 "" [2 uses])
(note 100 99 101 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 105 16 (set (reg:SI 103 [ <retval> ])
        (reg:SI 87 [ D.13515 ])) -1
     (nil))
(insn 105 101 106 16 (set (reg/i:SI 0 ax)
        (reg:SI 103 [ <retval> ])) NVCommands.c:380 -1
     (nil))
(insn 106 105 107 16 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13519+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) NVCommands.c:380 -1
     (nil))
(jump_insn 107 106 113 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) NVCommands.c:380 -1
     (nil)
 -> 110)
(note 113 107 108 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(call_insn 108 113 109 18 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7efeea6e2438 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) NVCommands.c:380 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 109 108 110)
(code_label 110 109 114 19 73 "" [1 uses])
(note 114 110 111 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 111 114 0 19 (use (reg/i:SI 0 ax)) NVCommands.c:380 -1
     (nil))

;; Function TPM2_NV_Extend (TPM2_NV_Extend, funcdef_no=8, decl_uid=12950, cgraph_uid=8, symbol_order=8)

Partition 5: size 232 align 16
	hashState
Partition 4: size 50 align 16
	newDigest
Partition 3: size 50 align 16
	oldDigest
Partition 0: size 8 align 8
	nvIndex_8
Partition 1: size 4 align 4
	result_13
Partition 2: size 4 align 4
	locator

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 31 from 13 to 14.
Redirecting jump 43 from 13 to 14.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Removing jump 138.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) NVCommands.c:389 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13526+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:389 -1
     (nil))
(insn 7 4 8 2 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) NVCommands.c:392 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.13521 ])
        (mem/j:SI (plus:DI (reg/f:DI 113)
                (const_int 4 [0x4])) [0 in_5(D)->nvIndex+0 S4 A32])) NVCommands.c:392 -1
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:392 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 114)) NVCommands.c:392 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13521 ])) NVCommands.c:392 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetIndexInfo") [flags 0x41]  <function_decl 0x7efeeae63bd0 NvGetIndexInfo>) [0 NvGetIndexInfo S1 A8])
            (const_int 0 [0]))) NVCommands.c:392 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 115)
        (reg:DI 0 ax)) NVCommands.c:392 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 nvIndex+0 S8 A64])
        (reg:DI 115)) NVCommands.c:392 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 nvIndex+0 S8 A64])) NVCommands.c:399 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 89 [ D.13521 ])
        (mem/j:SI (plus:DI (reg/f:DI 116)
                (const_int 8 [0x8])) [0 nvIndex_8->publicArea.attributes+0 S4 A32])) NVCommands.c:399 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) NVCommands.c:399 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 90 [ D.13521 ])
        (mem/j:SI (plus:DI (reg/f:DI 117)
                (const_int 4 [0x4])) [0 in_5(D)->nvIndex+0 S4 A32])) NVCommands.c:399 -1
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) NVCommands.c:399 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 91 [ D.13521 ])
        (mem/j:SI (reg/f:DI 118) [0 in_5(D)->authHandle+0 S4 A32])) NVCommands.c:399 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 1 dx)
        (reg:SI 89 [ D.13521 ])) NVCommands.c:399 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 4 si)
        (reg:SI 90 [ D.13521 ])) NVCommands.c:399 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 5 di)
        (reg:SI 91 [ D.13521 ])) NVCommands.c:399 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvWriteAccessChecks") [flags 0x41]  <function_decl 0x7efeeae6b288 NvWriteAccessChecks>) [0 NvWriteAccessChecks S1 A8])
            (const_int 0 [0]))) NVCommands.c:399 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 25 24 26 2 (set (reg:SI 119)
        (reg:SI 0 ax)) NVCommands.c:399 -1
     (nil))
(insn 26 25 27 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -380 [0xfffffffffffffe84])) [0 result+0 S4 A32])
        (reg:SI 119)) NVCommands.c:399 -1
     (nil))
(insn 27 26 28 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -380 [0xfffffffffffffe84])) [0 result+0 S4 A32])
            (const_int 0 [0]))) NVCommands.c:402 -1
     (nil))
(jump_insn 28 27 29 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) NVCommands.c:402 -1
     (nil)
 -> 33)
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg:SI 87 [ D.13520 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -380 [0xfffffffffffffe84])) [0 result+0 S4 A32])) NVCommands.c:403 -1
     (nil))
(jump_insn 31 30 32 4 (set (pc)
        (label_ref:DI 135)) NVCommands.c:403 654 {jump}
     (nil)
 -> 135)
(barrier 32 31 33)
(code_label 33 32 34 5 75 "" [1 uses])
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 nvIndex+0 S8 A64])) NVCommands.c:405 -1
     (nil))
(insn 36 35 37 5 (set (reg:SI 92 [ D.13521 ])
        (mem/j:SI (plus:DI (reg/f:DI 120)
                (const_int 8 [0x8])) [0 nvIndex_8->publicArea.attributes+0 S4 A32])) NVCommands.c:405 -1
     (nil))
(insn 37 36 38 5 (parallel [
            (set (reg:SI 93 [ D.13521 ])
                (and:SI (reg:SI 92 [ D.13521 ])
                    (const_int 240 [0xf0])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:405 -1
     (nil))
(insn 38 37 39 5 (parallel [
            (set (reg:SI 94 [ D.13521 ])
                (lshiftrt:SI (reg:SI 93 [ D.13521 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:405 -1
     (nil))
(insn 39 38 40 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.13521 ])
            (const_int 4 [0x4]))) NVCommands.c:405 -1
     (nil))
(jump_insn 40 39 41 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) NVCommands.c:405 -1
     (nil)
 -> 45)
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg:SI 87 [ D.13520 ])
        (const_int 642 [0x282])) NVCommands.c:406 -1
     (nil))
(jump_insn 43 42 44 6 (set (pc)
        (label_ref:DI 135)) NVCommands.c:406 654 {jump}
     (nil)
 -> 135)
(barrier 44 43 45)
(code_label 45 44 46 7 77 "" [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 nvIndex+0 S8 A64])) NVCommands.c:409 -1
     (nil))
(insn 48 47 49 7 (set (reg:HI 95 [ D.13522 ])
        (mem/j:HI (plus:DI (reg/f:DI 121)
                (const_int 4 [0x4])) [0 nvIndex_8->publicArea.nameAlg+0 S2 A32])) NVCommands.c:409 -1
     (nil))
(insn 49 48 50 7 (set (reg:SI 96 [ D.13523 ])
        (zero_extend:SI (reg:HI 95 [ D.13522 ]))) NVCommands.c:409 -1
     (nil))
(insn 50 49 51 7 (set (reg:SI 5 di)
        (reg:SI 96 [ D.13523 ])) NVCommands.c:409 -1
     (nil))
(call_insn 51 50 52 7 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashGetDigestSize") [flags 0x41]  <function_decl 0x7efeeaf2be58 CryptHashGetDigestSize>) [0 CryptHashGetDigestSize S1 A8])
            (const_int 0 [0]))) NVCommands.c:409 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 52 51 53 7 (set (reg:HI 97 [ D.13522 ])
        (reg:HI 0 ax)) NVCommands.c:409 -1
     (nil))
(insn 53 52 54 7 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -368 [0xfffffffffffffe90])) [0 oldDigest.t.size+0 S2 A64])
        (reg:HI 97 [ D.13522 ])) NVCommands.c:409 -1
     (nil))
(insn 54 53 55 7 (set (reg:HI 98 [ D.13522 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -368 [0xfffffffffffffe90])) [0 oldDigest.t.size+0 S2 A64])) NVCommands.c:410 -1
     (nil))
(insn 55 54 56 7 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 98 [ D.13522 ])
            (const_int 48 [0x30]))) NVCommands.c:410 -1
     (nil))
(jump_insn 56 55 57 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) NVCommands.c:410 -1
     (nil)
 -> 63)
(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 8 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) NVCommands.c:410 -1
     (nil))
(insn 59 58 60 8 (set (reg:SI 4 si)
        (const_int 410 [0x19a])) NVCommands.c:410 -1
     (nil))
(insn 60 59 61 8 (set (reg:DI 5 di)
        (const_int 0 [0])) NVCommands.c:410 -1
     (nil))
(call_insn 61 60 62 8 (call (mem:QI (symbol_ref:DI ("TpmFail") [flags 0x41]  <function_decl 0x7efeeae760d8 TpmFail>) [0 TpmFail S1 A8])
        (const_int 0 [0])) NVCommands.c:410 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 62 61 63)
(code_label 63 62 64 9 78 "" [1 uses])
(note 64 63 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 9 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 nvIndex+0 S8 A64])) NVCommands.c:411 -1
     (nil))
(insn 66 65 67 9 (set (reg:SI 99 [ D.13521 ])
        (mem/j:SI (plus:DI (reg/f:DI 122)
                (const_int 8 [0x8])) [0 nvIndex_8->publicArea.attributes+0 S4 A32])) NVCommands.c:411 -1
     (nil))
(insn 67 66 68 9 (parallel [
            (set (reg:SI 100 [ D.13521 ])
                (and:SI (reg:SI 99 [ D.13521 ])
                    (const_int 536870912 [0x20000000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:411 -1
     (nil))
(insn 68 67 69 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.13521 ])
            (const_int 0 [0]))) NVCommands.c:411 -1
     (nil))
(jump_insn 69 68 70 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) NVCommands.c:411 -1
     (nil)
 -> 85)
(note 70 69 71 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 10 (set (reg:HI 101 [ D.13522 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -368 [0xfffffffffffffe90])) [0 oldDigest.t.size+0 S2 A64])) NVCommands.c:413 -1
     (nil))
(insn 72 71 73 10 (set (reg:SI 102 [ D.13523 ])
        (zero_extend:SI (reg:HI 101 [ D.13522 ]))) NVCommands.c:413 -1
     (nil))
(insn 73 72 74 10 (set (reg:SI 103 [ D.13521 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -384 [0xfffffffffffffe80])) [0 locator+0 S4 A64])) NVCommands.c:413 -1
     (nil))
(insn 74 73 75 10 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -368 [0xfffffffffffffe90])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:413 -1
     (nil))
(insn 75 74 76 10 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg:DI 123)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:413 -1
     (nil))
(insn 76 75 77 10 (set (reg:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 nvIndex+0 S8 A64])) NVCommands.c:413 -1
     (nil))
(insn 77 76 78 10 (set (reg:DI 37 r8)
        (reg:DI 124)) NVCommands.c:413 -1
     (nil))
(insn 78 77 79 10 (set (reg:SI 2 cx)
        (reg:SI 102 [ D.13523 ])) NVCommands.c:413 -1
     (nil))
(insn 79 78 80 10 (set (reg:SI 1 dx)
        (const_int 0 [0])) NVCommands.c:413 -1
     (nil))
(insn 80 79 81 10 (set (reg:SI 4 si)
        (reg:SI 103 [ D.13521 ])) NVCommands.c:413 -1
     (nil))
(insn 81 80 82 10 (set (reg:DI 5 di)
        (reg:DI 125)) NVCommands.c:413 -1
     (nil))
(call_insn 82 81 83 10 (call (mem:QI (symbol_ref:DI ("NvGetIndexData") [flags 0x41]  <function_decl 0x7efeeae63870 NvGetIndexData>) [0 NvGetIndexData S1 A8])
        (const_int 0 [0])) NVCommands.c:413 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(jump_insn 83 82 84 10 (set (pc)
        (label_ref 95)) -1
     (nil)
 -> 95)
(barrier 84 83 85)
(code_label 85 84 86 11 79 "" [1 uses])
(note 86 85 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 11 (set (reg:HI 104 [ D.13522 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -368 [0xfffffffffffffe90])) [0 oldDigest.t.size+0 S2 A64])) NVCommands.c:417 -1
     (nil))
(insn 88 87 89 11 (set (reg:DI 105 [ D.13524 ])
        (zero_extend:DI (reg:HI 104 [ D.13522 ]))) NVCommands.c:417 -1
     (nil))
(insn 89 88 90 11 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -368 [0xfffffffffffffe90])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:417 -1
     (nil))
(insn 90 89 91 11 (parallel [
            (set (reg:DI 127)
                (plus:DI (reg:DI 126)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:417 -1
     (nil))
(insn 91 90 92 11 (set (reg:DI 1 dx)
        (reg:DI 105 [ D.13524 ])) NVCommands.c:417 -1
     (nil))
(insn 92 91 93 11 (set (reg:SI 4 si)
        (const_int 0 [0])) NVCommands.c:417 -1
     (nil))
(insn 93 92 94 11 (set (reg:DI 5 di)
        (reg:DI 127)) NVCommands.c:417 -1
     (nil))
(call_insn 94 93 95 11 (call (mem:QI (symbol_ref:DI ("MemorySet") [flags 0x41]  <function_decl 0x7efeeaf11870 MemorySet>) [0 MemorySet S1 A8])
        (const_int 0 [0])) NVCommands.c:417 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(code_label 95 94 96 12 80 "" [1 uses])
(note 96 95 97 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 12 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 nvIndex+0 S8 A64])) NVCommands.c:420 -1
     (nil))
(insn 98 97 99 12 (set (reg:HI 106 [ D.13522 ])
        (mem/j:HI (plus:DI (reg/f:DI 128)
                (const_int 4 [0x4])) [0 nvIndex_8->publicArea.nameAlg+0 S2 A32])) NVCommands.c:420 -1
     (nil))
(insn 99 98 100 12 (set (reg:SI 107 [ D.13523 ])
        (zero_extend:SI (reg:HI 106 [ D.13522 ]))) NVCommands.c:420 -1
     (nil))
(insn 100 99 101 12 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:420 -1
     (nil))
(insn 101 100 102 12 (set (reg:SI 4 si)
        (reg:SI 107 [ D.13523 ])) NVCommands.c:420 -1
     (nil))
(insn 102 101 103 12 (set (reg:DI 5 di)
        (reg:DI 129)) NVCommands.c:420 -1
     (nil))
(call_insn 103 102 104 12 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7efeeaf30510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) NVCommands.c:420 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 104 103 105 12 (set (reg:HI 108 [ D.13522 ])
        (reg:HI 0 ax)) NVCommands.c:420 -1
     (nil))
(insn 105 104 106 12 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -304 [0xfffffffffffffed0])) [0 newDigest.t.size+0 S2 A64])
        (reg:HI 108 [ D.13522 ])) NVCommands.c:420 -1
     (nil))
(insn 106 105 107 12 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -368 [0xfffffffffffffe90])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:422 -1
     (nil))
(insn 107 106 108 12 (parallel [
            (set (reg:DI 131)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:422 -1
     (nil))
(insn 108 107 109 12 (set (reg:DI 4 si)
        (reg:DI 130)) NVCommands.c:422 -1
     (nil))
(insn 109 108 110 12 (set (reg:DI 5 di)
        (reg:DI 131)) NVCommands.c:422 -1
     (nil))
(call_insn 110 109 111 12 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7efeeaf30870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) NVCommands.c:422 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 111 110 112 12 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) NVCommands.c:424 -1
     (nil))
(insn 112 111 113 12 (parallel [
            (set (reg/f:DI 109 [ D.13525 ])
                (plus:DI (reg/f:DI 132)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:424 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 113 112 114 12 (parallel [
            (set (reg:DI 133)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:424 -1
     (nil))
(insn 114 113 115 12 (set (reg:DI 4 si)
        (reg/f:DI 109 [ D.13525 ])) NVCommands.c:424 -1
     (nil))
(insn 115 114 116 12 (set (reg:DI 5 di)
        (reg:DI 133)) NVCommands.c:424 -1
     (nil))
(call_insn 116 115 117 12 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7efeeaf30870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) NVCommands.c:424 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 117 116 118 12 (parallel [
            (set (reg:DI 134)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:426 -1
     (nil))
(insn 118 117 119 12 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:426 -1
     (nil))
(insn 119 118 120 12 (set (reg:DI 4 si)
        (reg:DI 134)) NVCommands.c:426 -1
     (nil))
(insn 120 119 121 12 (set (reg:DI 5 di)
        (reg:DI 135)) NVCommands.c:426 -1
     (nil))
(call_insn 121 120 122 12 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7efeeaf30948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) NVCommands.c:426 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 122 121 123 12 (set (reg:HI 110 [ D.13522 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -304 [0xfffffffffffffed0])) [0 newDigest.t.size+0 S2 A64])) NVCommands.c:429 -1
     (nil))
(insn 123 122 124 12 (set (reg:SI 111 [ D.13521 ])
        (zero_extend:SI (reg:HI 110 [ D.13522 ]))) NVCommands.c:429 -1
     (nil))
(insn 124 123 125 12 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:429 -1
     (nil))
(insn 125 124 126 12 (parallel [
            (set (reg:DI 137)
                (plus:DI (reg:DI 136)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:429 -1
     (nil))
(insn 126 125 127 12 (set (reg:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 nvIndex+0 S8 A64])) NVCommands.c:429 -1
     (nil))
(insn 127 126 128 12 (set (reg:DI 2 cx)
        (reg:DI 137)) NVCommands.c:429 -1
     (nil))
(insn 128 127 129 12 (set (reg:SI 1 dx)
        (reg:SI 111 [ D.13521 ])) NVCommands.c:429 -1
     (nil))
(insn 129 128 130 12 (set (reg:SI 4 si)
        (const_int 0 [0])) NVCommands.c:429 -1
     (nil))
(insn 130 129 131 12 (set (reg:DI 5 di)
        (reg:DI 138)) NVCommands.c:429 -1
     (nil))
(call_insn 131 130 132 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvWriteIndexData") [flags 0x41]  <function_decl 0x7efeeae63ca8 NvWriteIndexData>) [0 NvWriteIndexData S1 A8])
            (const_int 0 [0]))) NVCommands.c:429 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 132 131 135 12 (set (reg:SI 87 [ D.13520 ])
        (reg:SI 0 ax)) NVCommands.c:429 -1
     (nil))
(code_label 135 132 136 14 81 "" [2 uses])
(note 136 135 137 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 141 14 (set (reg:SI 112 [ <retval> ])
        (reg:SI 87 [ D.13520 ])) -1
     (nil))
(insn 141 137 142 14 (set (reg/i:SI 0 ax)
        (reg:SI 112 [ <retval> ])) NVCommands.c:430 -1
     (nil))
(insn 142 141 143 14 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13526+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) NVCommands.c:430 -1
     (nil))
(jump_insn 143 142 149 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) NVCommands.c:430 -1
     (nil)
 -> 146)
(note 149 143 144 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(call_insn 144 149 145 16 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7efeea6e2438 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) NVCommands.c:430 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 145 144 146)
(code_label 146 145 150 17 82 "" [1 uses])
(note 150 146 147 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 147 150 0 17 (use (reg/i:SI 0 ax)) NVCommands.c:430 -1
     (nil))

;; Function TPM2_NV_SetBits (TPM2_NV_SetBits, funcdef_no=9, decl_uid=12966, cgraph_uid=9, symbol_order=9)

Partition 3: size 8 align 8
	newValue_27
Partition 1: size 8 align 8
	nvIndex_9
Partition 0: size 8 align 8
	oldValue_1
Partition 2: size 4 align 4
	result_14
Partition 4: size 4 align 4
	locator

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 31 from 11 to 12.
Redirecting jump 43 from 11 to 12.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 84.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) NVCommands.c:439 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13530+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:439 -1
     (nil))
(insn 7 4 8 2 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 in+0 S8 A64])) NVCommands.c:442 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.13528 ])
        (mem/j:SI (plus:DI (reg/f:DI 100)
                (const_int 4 [0x4])) [0 in_6(D)->nvIndex+0 S4 A32])) NVCommands.c:442 -1
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:442 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 101)) NVCommands.c:442 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13528 ])) NVCommands.c:442 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetIndexInfo") [flags 0x41]  <function_decl 0x7efeeae63bd0 NvGetIndexInfo>) [0 NvGetIndexInfo S1 A8])
            (const_int 0 [0]))) NVCommands.c:442 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 102)
        (reg:DI 0 ax)) NVCommands.c:442 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nvIndex+0 S8 A64])
        (reg:DI 102)) NVCommands.c:442 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nvIndex+0 S8 A64])) NVCommands.c:448 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 89 [ D.13528 ])
        (mem/j:SI (plus:DI (reg/f:DI 103)
                (const_int 8 [0x8])) [0 nvIndex_9->publicArea.attributes+0 S4 A32])) NVCommands.c:448 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 in+0 S8 A64])) NVCommands.c:448 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 90 [ D.13528 ])
        (mem/j:SI (plus:DI (reg/f:DI 104)
                (const_int 4 [0x4])) [0 in_6(D)->nvIndex+0 S4 A32])) NVCommands.c:448 -1
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 in+0 S8 A64])) NVCommands.c:448 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 91 [ D.13528 ])
        (mem/j:SI (reg/f:DI 105) [0 in_6(D)->authHandle+0 S4 A64])) NVCommands.c:448 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 1 dx)
        (reg:SI 89 [ D.13528 ])) NVCommands.c:448 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 4 si)
        (reg:SI 90 [ D.13528 ])) NVCommands.c:448 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 5 di)
        (reg:SI 91 [ D.13528 ])) NVCommands.c:448 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvWriteAccessChecks") [flags 0x41]  <function_decl 0x7efeeae6b288 NvWriteAccessChecks>) [0 NvWriteAccessChecks S1 A8])
            (const_int 0 [0]))) NVCommands.c:448 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 25 24 26 2 (set (reg:SI 106)
        (reg:SI 0 ax)) NVCommands.c:448 -1
     (nil))
(insn 26 25 27 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 result+0 S4 A32])
        (reg:SI 106)) NVCommands.c:448 -1
     (nil))
(insn 27 26 28 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [0 result+0 S4 A32])
            (const_int 0 [0]))) NVCommands.c:451 -1
     (nil))
(jump_insn 28 27 29 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) NVCommands.c:451 -1
     (nil)
 -> 33)
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg:SI 87 [ D.13527 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 result+0 S4 A32])) NVCommands.c:452 -1
     (nil))
(jump_insn 31 30 32 4 (set (pc)
        (label_ref:DI 81)) NVCommands.c:452 654 {jump}
     (nil)
 -> 81)
(barrier 32 31 33)
(code_label 33 32 34 5 84 "" [1 uses])
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nvIndex+0 S8 A64])) NVCommands.c:454 -1
     (nil))
(insn 36 35 37 5 (set (reg:SI 92 [ D.13528 ])
        (mem/j:SI (plus:DI (reg/f:DI 107)
                (const_int 8 [0x8])) [0 nvIndex_9->publicArea.attributes+0 S4 A32])) NVCommands.c:454 -1
     (nil))
(insn 37 36 38 5 (parallel [
            (set (reg:SI 93 [ D.13528 ])
                (and:SI (reg:SI 92 [ D.13528 ])
                    (const_int 240 [0xf0])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:454 -1
     (nil))
(insn 38 37 39 5 (parallel [
            (set (reg:SI 94 [ D.13528 ])
                (lshiftrt:SI (reg:SI 93 [ D.13528 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:454 -1
     (nil))
(insn 39 38 40 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.13528 ])
            (const_int 2 [0x2]))) NVCommands.c:454 -1
     (nil))
(jump_insn 40 39 41 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) NVCommands.c:454 -1
     (nil)
 -> 45)
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg:SI 87 [ D.13527 ])
        (const_int 642 [0x282])) NVCommands.c:455 -1
     (nil))
(jump_insn 43 42 44 6 (set (pc)
        (label_ref:DI 81)) NVCommands.c:455 654 {jump}
     (nil)
 -> 81)
(barrier 44 43 45)
(code_label 45 44 46 7 86 "" [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nvIndex+0 S8 A64])) NVCommands.c:457 -1
     (nil))
(insn 48 47 49 7 (set (reg:SI 95 [ D.13528 ])
        (mem/j:SI (plus:DI (reg/f:DI 108)
                (const_int 8 [0x8])) [0 nvIndex_9->publicArea.attributes+0 S4 A32])) NVCommands.c:457 -1
     (nil))
(insn 49 48 50 7 (parallel [
            (set (reg:SI 96 [ D.13528 ])
                (and:SI (reg:SI 95 [ D.13528 ])
                    (const_int 536870912 [0x20000000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:457 -1
     (nil))
(insn 50 49 51 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.13528 ])
            (const_int 0 [0]))) NVCommands.c:457 -1
     (nil))
(jump_insn 51 50 52 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) NVCommands.c:457 -1
     (nil)
 -> 56)
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 oldValue+0 S8 A64])
        (const_int 0 [0])) NVCommands.c:458 -1
     (nil))
(jump_insn 54 53 55 8 (set (pc)
        (label_ref 65)) -1
     (nil)
 -> 65)
(barrier 55 54 56)
(code_label 56 55 57 9 87 "" [1 uses])
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 9 (set (reg:SI 97 [ D.13528 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 locator+0 S4 A64])) NVCommands.c:461 -1
     (nil))
(insn 59 58 60 9 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nvIndex+0 S8 A64])) NVCommands.c:461 -1
     (nil))
(insn 60 59 61 9 (set (reg:SI 4 si)
        (reg:SI 97 [ D.13528 ])) NVCommands.c:461 -1
     (nil))
(insn 61 60 62 9 (set (reg:DI 5 di)
        (reg:DI 109)) NVCommands.c:461 -1
     (nil))
(call_insn 62 61 63 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetUINT64Data") [flags 0x41]  <function_decl 0x7efeeae63948 NvGetUINT64Data>) [0 NvGetUINT64Data S1 A8])
            (const_int 0 [0]))) NVCommands.c:461 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 63 62 64 9 (set (reg:DI 110)
        (reg:DI 0 ax)) NVCommands.c:461 -1
     (nil))
(insn 64 63 65 9 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 oldValue+0 S8 A64])
        (reg:DI 110)) NVCommands.c:461 -1
     (nil))
(code_label 65 64 66 10 88 "" [1 uses])
(note 66 65 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 10 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 in+0 S8 A64])) NVCommands.c:463 -1
     (nil))
(insn 68 67 71 10 (set (reg:DI 98 [ D.13529 ])
        (mem/j:DI (plus:DI (reg/f:DI 111)
                (const_int 8 [0x8])) [0 in_6(D)->bits+0 S8 A64])) NVCommands.c:463 -1
     (nil))
(insn 71 68 72 10 (parallel [
            (set (reg:DI 113)
                (ior:DI (reg:DI 98 [ D.13529 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 oldValue+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:463 -1
     (nil))
(insn 72 71 73 10 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 newValue+0 S8 A64])
        (reg:DI 113)) NVCommands.c:463 -1
     (nil))
(insn 73 72 74 10 (set (reg:DI 114)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 newValue+0 S8 A64])) NVCommands.c:465 -1
     (nil))
(insn 74 73 75 10 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nvIndex+0 S8 A64])) NVCommands.c:465 -1
     (nil))
(insn 75 74 76 10 (set (reg:DI 4 si)
        (reg:DI 114)) NVCommands.c:465 -1
     (nil))
(insn 76 75 77 10 (set (reg:DI 5 di)
        (reg:DI 115)) NVCommands.c:465 -1
     (nil))
(call_insn 77 76 78 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvWriteUINT64Data") [flags 0x41]  <function_decl 0x7efeeae63d80 NvWriteUINT64Data>) [0 NvWriteUINT64Data S1 A8])
            (const_int 0 [0]))) NVCommands.c:465 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 78 77 81 10 (set (reg:SI 87 [ D.13527 ])
        (reg:SI 0 ax)) NVCommands.c:465 -1
     (nil))
(code_label 81 78 82 12 89 "" [2 uses])
(note 82 81 83 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 87 12 (set (reg:SI 99 [ <retval> ])
        (reg:SI 87 [ D.13527 ])) -1
     (nil))
(insn 87 83 88 12 (set (reg/i:SI 0 ax)
        (reg:SI 99 [ <retval> ])) NVCommands.c:466 -1
     (nil))
(insn 88 87 89 12 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13530+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) NVCommands.c:466 -1
     (nil))
(jump_insn 89 88 95 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) NVCommands.c:466 -1
     (nil)
 -> 92)
(note 95 89 90 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(call_insn 90 95 91 14 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7efeea6e2438 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) NVCommands.c:466 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 91 90 92)
(code_label 92 91 96 15 90 "" [1 uses])
(note 96 92 93 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 93 96 0 15 (use (reg/i:SI 0 ax)) NVCommands.c:466 -1
     (nil))

;; Function TPM2_NV_WriteLock (TPM2_NV_WriteLock, funcdef_no=10, decl_uid=12980, cgraph_uid=10, symbol_order=10)

Partition 0: size 8 align 8
	nvIndex_7
Partition 2: size 4 align 4
	result_12
Partition 1: size 4 align 4
	nvAttributes_8
Partition 3: size 4 align 4
	locator

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 36 from 11 to 12.
Redirecting jump 41 from 11 to 12.
Redirecting jump 56 from 11 to 12.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 75.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) NVCommands.c:475 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13533+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:475 -1
     (nil))
(insn 7 4 8 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:478 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.13532 ])
        (mem/j:SI (plus:DI (reg/f:DI 96)
                (const_int 4 [0x4])) [0 in_4(D)->nvIndex+0 S4 A32])) NVCommands.c:478 -1
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:478 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 97)) NVCommands.c:478 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13532 ])) NVCommands.c:478 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetIndexInfo") [flags 0x41]  <function_decl 0x7efeeae63bd0 NvGetIndexInfo>) [0 NvGetIndexInfo S1 A8])
            (const_int 0 [0]))) NVCommands.c:478 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 98)
        (reg:DI 0 ax)) NVCommands.c:478 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])
        (reg:DI 98)) NVCommands.c:478 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:479 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 100)
        (mem/j:SI (plus:DI (reg/f:DI 99)
                (const_int 8 [0x8])) [0 nvIndex_7->publicArea.attributes+0 S4 A32])) NVCommands.c:479 -1
     (nil))
(insn 17 16 18 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nvAttributes+0 S4 A32])
        (reg:SI 100)) NVCommands.c:479 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:483 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 89 [ D.13532 ])
        (mem/j:SI (plus:DI (reg/f:DI 101)
                (const_int 4 [0x4])) [0 in_4(D)->nvIndex+0 S4 A32])) NVCommands.c:483 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:483 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 90 [ D.13532 ])
        (mem/j:SI (reg/f:DI 102) [0 in_4(D)->authHandle+0 S4 A32])) NVCommands.c:483 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nvAttributes+0 S4 A32])) NVCommands.c:483 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 1 dx)
        (reg:SI 103)) NVCommands.c:483 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (reg:SI 89 [ D.13532 ])) NVCommands.c:483 -1
     (nil))
(insn 25 24 26 2 (set (reg:SI 5 di)
        (reg:SI 90 [ D.13532 ])) NVCommands.c:483 -1
     (nil))
(call_insn 26 25 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvWriteAccessChecks") [flags 0x41]  <function_decl 0x7efeeae6b288 NvWriteAccessChecks>) [0 NvWriteAccessChecks S1 A8])
            (const_int 0 [0]))) NVCommands.c:483 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 27 26 28 2 (set (reg:SI 104)
        (reg:SI 0 ax)) NVCommands.c:483 -1
     (nil))
(insn 28 27 29 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 result+0 S4 A32])
        (reg:SI 104)) NVCommands.c:483 -1
     (nil))
(insn 29 28 30 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 result+0 S4 A32])
            (const_int 0 [0]))) NVCommands.c:484 -1
     (nil))
(jump_insn 30 29 31 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) NVCommands.c:484 -1
     (nil)
 -> 43)
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 result+0 S4 A32])
            (const_int 329 [0x149]))) NVCommands.c:486 -1
     (nil))
(jump_insn 33 32 34 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) NVCommands.c:486 -1
     (nil)
 -> 38)
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg:SI 87 [ D.13531 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 result+0 S4 A32])) NVCommands.c:487 -1
     (nil))
(jump_insn 36 35 37 5 (set (pc)
        (label_ref:DI 72)) NVCommands.c:487 654 {jump}
     (nil)
 -> 72)
(barrier 37 36 38)
(code_label 38 37 39 6 93 "" [1 uses])
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (set (reg:SI 87 [ D.13531 ])
        (const_int 0 [0])) NVCommands.c:490 -1
     (nil))
(jump_insn 41 40 42 6 (set (pc)
        (label_ref:DI 72)) NVCommands.c:490 654 {jump}
     (nil)
 -> 72)
(barrier 42 41 43)
(code_label 43 42 44 7 92 "" [1 uses])
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nvAttributes+0 S4 A32])) NVCommands.c:494 -1
     (nil))
(insn 46 45 47 7 (parallel [
            (set (reg:SI 91 [ D.13532 ])
                (and:SI (reg:SI 105)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:494 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 nvAttributes+0 S4 A32])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 47 46 48 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.13532 ])
            (const_int 0 [0]))) NVCommands.c:494 -1
     (nil))
(jump_insn 48 47 49 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) NVCommands.c:494 -1
     (nil)
 -> 58)
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nvAttributes+0 S4 A32])) NVCommands.c:495 -1
     (nil))
(insn 51 50 52 8 (parallel [
            (set (reg:SI 92 [ D.13532 ])
                (and:SI (reg:SI 106)
                    (const_int 16384 [0x4000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:495 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 nvAttributes+0 S4 A32])
            (const_int 16384 [0x4000]))
        (nil)))
(insn 52 51 53 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.13532 ])
            (const_int 0 [0]))) NVCommands.c:495 -1
     (nil))
(jump_insn 53 52 54 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) NVCommands.c:495 -1
     (nil)
 -> 58)
(note 54 53 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 9 (set (reg:SI 87 [ D.13531 ])
        (const_int 642 [0x282])) NVCommands.c:496 -1
     (nil))
(jump_insn 56 55 57 9 (set (pc)
        (label_ref:DI 72)) NVCommands.c:496 654 {jump}
     (nil)
 -> 72)
(barrier 57 56 58)
(code_label 58 57 59 10 95 "" [2 uses])
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 nvAttributes+0 S4 A32])
                (ior:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 nvAttributes+0 S4 A32])
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:501 -1
     (nil))
(insn 61 60 62 10 (set (reg:SI 93 [ D.13532 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 locator+0 S4 A32])) NVCommands.c:503 -1
     (nil))
(insn 62 61 63 10 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:503 -1
     (nil))
(insn 63 62 64 10 (set (reg:SI 94 [ D.13532 ])
        (mem/j:SI (reg/f:DI 107) [0 nvIndex_7->publicArea.nvIndex+0 S4 A32])) NVCommands.c:503 -1
     (nil))
(insn 64 63 65 10 (set (reg:SI 108)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nvAttributes+0 S4 A32])) NVCommands.c:503 -1
     (nil))
(insn 65 64 66 10 (set (reg:SI 1 dx)
        (reg:SI 108)) NVCommands.c:503 -1
     (nil))
(insn 66 65 67 10 (set (reg:SI 4 si)
        (reg:SI 93 [ D.13532 ])) NVCommands.c:503 -1
     (nil))
(insn 67 66 68 10 (set (reg:SI 5 di)
        (reg:SI 94 [ D.13532 ])) NVCommands.c:503 -1
     (nil))
(call_insn 68 67 69 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvWriteIndexAttributes") [flags 0x41]  <function_decl 0x7efeeae63a20 NvWriteIndexAttributes>) [0 NvWriteIndexAttributes S1 A8])
            (const_int 0 [0]))) NVCommands.c:503 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 69 68 72 10 (set (reg:SI 87 [ D.13531 ])
        (reg:SI 0 ax)) NVCommands.c:503 -1
     (nil))
(code_label 72 69 73 12 96 "" [3 uses])
(note 73 72 74 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 78 12 (set (reg:SI 95 [ <retval> ])
        (reg:SI 87 [ D.13531 ])) -1
     (nil))
(insn 78 74 79 12 (set (reg/i:SI 0 ax)
        (reg:SI 95 [ <retval> ])) NVCommands.c:505 -1
     (nil))
(insn 79 78 80 12 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13533+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) NVCommands.c:505 -1
     (nil))
(jump_insn 80 79 86 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) NVCommands.c:505 -1
     (nil)
 -> 83)
(note 86 80 81 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(call_insn 81 86 82 14 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7efeea6e2438 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) NVCommands.c:505 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 82 81 83)
(code_label 83 82 87 15 97 "" [1 uses])
(note 87 83 84 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 84 87 0 15 (use (reg/i:SI 0 ax)) NVCommands.c:505 -1
     (nil))

;; Function TPM2_NV_GlobalWriteLock (TPM2_NV_GlobalWriteLock, funcdef_no=11, decl_uid=12992, cgraph_uid=11, symbol_order=11)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 11.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) NVCommands.c:514 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvSetGlobalLock") [flags 0x41]  <function_decl 0x7efeeae67510 NvSetGlobalLock>) [0 NvSetGlobalLock S1 A8])
            (const_int 0 [0]))) NVCommands.c:519 -1
     (nil)
    (nil))
(insn 7 6 10 2 (set (reg:SI 87 [ D.13534 ])
        (reg:SI 0 ax)) NVCommands.c:519 -1
     (nil))
(insn 10 7 14 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.13534 ])) NVCommands.c:519 -1
     (nil))
(insn 14 10 15 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) NVCommands.c:520 -1
     (nil))
(insn 15 14 0 2 (use (reg/i:SI 0 ax)) NVCommands.c:520 -1
     (nil))

;; Function TPM2_NV_Read (TPM2_NV_Read, funcdef_no=12, decl_uid=13007, cgraph_uid=12, symbol_order=12)

Partition 0: size 8 align 8
	nvIndex_7
Partition 1: size 4 align 4
	result_12
Partition 2: size 4 align 4
	locator

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 32 from 12 to 13.
Redirecting jump 42 from 12 to 13.
Redirecting jump 54 from 12 to 13.
Redirecting jump 72 from 12 to 13.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 102.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) NVCommands.c:537 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) NVCommands.c:537 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13540+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:537 -1
     (nil))
(insn 8 5 9 2 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:539 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ D.13536 ])
        (mem/j:SI (plus:DI (reg/f:DI 110)
                (const_int 4 [0x4])) [0 in_4(D)->nvIndex+0 S4 A32])) NVCommands.c:539 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:539 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg:DI 111)) NVCommands.c:539 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13536 ])) NVCommands.c:539 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetIndexInfo") [flags 0x41]  <function_decl 0x7efeeae63bd0 NvGetIndexInfo>) [0 NvGetIndexInfo S1 A8])
            (const_int 0 [0]))) NVCommands.c:539 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg:DI 112)
        (reg:DI 0 ax)) NVCommands.c:539 -1
     (nil))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])
        (reg:DI 112)) NVCommands.c:539 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:544 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 89 [ D.13536 ])
        (mem/j:SI (plus:DI (reg/f:DI 113)
                (const_int 8 [0x8])) [0 nvIndex_7->publicArea.attributes+0 S4 A32])) NVCommands.c:544 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:544 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 90 [ D.13536 ])
        (mem/j:SI (plus:DI (reg/f:DI 114)
                (const_int 4 [0x4])) [0 in_4(D)->nvIndex+0 S4 A32])) NVCommands.c:544 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:544 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 91 [ D.13536 ])
        (mem/j:SI (reg/f:DI 115) [0 in_4(D)->authHandle+0 S4 A32])) NVCommands.c:544 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 1 dx)
        (reg:SI 89 [ D.13536 ])) NVCommands.c:544 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 4 si)
        (reg:SI 90 [ D.13536 ])) NVCommands.c:544 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 5 di)
        (reg:SI 91 [ D.13536 ])) NVCommands.c:544 -1
     (nil))
(call_insn 25 24 26 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvReadAccessChecks") [flags 0x41]  <function_decl 0x7efeeae6b1b0 NvReadAccessChecks>) [0 NvReadAccessChecks S1 A8])
            (const_int 0 [0]))) NVCommands.c:544 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 26 25 27 2 (set (reg:SI 116)
        (reg:SI 0 ax)) NVCommands.c:544 -1
     (nil))
(insn 27 26 28 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 result+0 S4 A32])
        (reg:SI 116)) NVCommands.c:544 -1
     (nil))
(insn 28 27 29 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 result+0 S4 A32])
            (const_int 0 [0]))) NVCommands.c:546 -1
     (nil))
(jump_insn 29 28 30 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) NVCommands.c:546 -1
     (nil)
 -> 34)
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 4 (set (reg:SI 87 [ D.13535 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 result+0 S4 A32])) NVCommands.c:547 -1
     (nil))
(jump_insn 32 31 33 4 (set (pc)
        (label_ref:DI 99)) NVCommands.c:547 654 {jump}
     (nil)
 -> 99)
(barrier 33 32 34)
(code_label 34 33 35 5 101 "" [1 uses])
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:549 -1
     (nil))
(insn 37 36 38 5 (set (reg:HI 92 [ D.13537 ])
        (mem/j:HI (plus:DI (reg/f:DI 117)
                (const_int 8 [0x8])) [0 in_4(D)->size+0 S2 A32])) NVCommands.c:549 -1
     (nil))
(insn 38 37 39 5 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 92 [ D.13537 ])
            (const_int 1024 [0x400]))) NVCommands.c:549 -1
     (nil))
(jump_insn 39 38 40 5 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) NVCommands.c:549 -1
     (nil)
 -> 44)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (reg:SI 87 [ D.13535 ])
        (const_int 452 [0x1c4])) NVCommands.c:550 -1
     (nil))
(jump_insn 42 41 43 6 (set (pc)
        (label_ref:DI 99)) NVCommands.c:550 654 {jump}
     (nil)
 -> 99)
(barrier 43 42 44)
(code_label 44 43 45 7 103 "" [1 uses])
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 7 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:552 -1
     (nil))
(insn 47 46 48 7 (set (reg:HI 93 [ D.13537 ])
        (mem/j:HI (plus:DI (reg/f:DI 118)
                (const_int 10 [0xa])) [0 in_4(D)->offset+0 S2 A16])) NVCommands.c:552 -1
     (nil))
(insn 48 47 49 7 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:552 -1
     (nil))
(insn 49 48 50 7 (set (reg:HI 94 [ D.13537 ])
        (mem/j:HI (plus:DI (reg/f:DI 119)
                (const_int 62 [0x3e])) [0 nvIndex_7->publicArea.dataSize+0 S2 A16])) NVCommands.c:552 -1
     (nil))
(insn 50 49 51 7 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 93 [ D.13537 ])
            (reg:HI 94 [ D.13537 ]))) NVCommands.c:552 -1
     (nil))
(jump_insn 51 50 52 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) NVCommands.c:552 -1
     (nil)
 -> 56)
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (set (reg:SI 87 [ D.13535 ])
        (const_int 708 [0x2c4])) NVCommands.c:553 -1
     (nil))
(jump_insn 54 53 55 8 (set (pc)
        (label_ref:DI 99)) NVCommands.c:553 654 {jump}
     (nil)
 -> 99)
(barrier 55 54 56)
(code_label 56 55 57 9 104 "" [1 uses])
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 9 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:555 -1
     (nil))
(insn 59 58 60 9 (set (reg:HI 95 [ D.13537 ])
        (mem/j:HI (plus:DI (reg/f:DI 120)
                (const_int 8 [0x8])) [0 in_4(D)->size+0 S2 A32])) NVCommands.c:555 -1
     (nil))
(insn 60 59 61 9 (set (reg:SI 96 [ D.13538 ])
        (zero_extend:SI (reg:HI 95 [ D.13537 ]))) NVCommands.c:555 -1
     (nil))
(insn 61 60 62 9 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:555 -1
     (nil))
(insn 62 61 63 9 (set (reg:HI 97 [ D.13537 ])
        (mem/j:HI (plus:DI (reg/f:DI 121)
                (const_int 62 [0x3e])) [0 nvIndex_7->publicArea.dataSize+0 S2 A16])) NVCommands.c:555 -1
     (nil))
(insn 63 62 64 9 (set (reg:SI 98 [ D.13538 ])
        (zero_extend:SI (reg:HI 97 [ D.13537 ]))) NVCommands.c:555 -1
     (nil))
(insn 64 63 65 9 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:555 -1
     (nil))
(insn 65 64 66 9 (set (reg:HI 99 [ D.13537 ])
        (mem/j:HI (plus:DI (reg/f:DI 122)
                (const_int 10 [0xa])) [0 in_4(D)->offset+0 S2 A16])) NVCommands.c:555 -1
     (nil))
(insn 66 65 67 9 (set (reg:SI 100 [ D.13538 ])
        (zero_extend:SI (reg:HI 99 [ D.13537 ]))) NVCommands.c:555 -1
     (nil))
(insn 67 66 68 9 (parallel [
            (set (reg:SI 101 [ D.13538 ])
                (minus:SI (reg:SI 98 [ D.13538 ])
                    (reg:SI 100 [ D.13538 ])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:555 -1
     (nil))
(insn 68 67 69 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 96 [ D.13538 ])
            (reg:SI 101 [ D.13538 ]))) NVCommands.c:555 -1
     (nil))
(jump_insn 69 68 70 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) NVCommands.c:555 -1
     (nil)
 -> 74)
(note 70 69 71 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 10 (set (reg:SI 87 [ D.13535 ])
        (const_int 326 [0x146])) NVCommands.c:556 -1
     (nil))
(jump_insn 72 71 73 10 (set (pc)
        (label_ref:DI 99)) NVCommands.c:556 654 {jump}
     (nil)
 -> 99)
(barrier 73 72 74)
(code_label 74 73 75 11 105 "" [1 uses])
(note 75 74 76 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 11 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:559 -1
     (nil))
(insn 77 76 78 11 (set (reg:HI 102 [ D.13537 ])
        (mem/j:HI (plus:DI (reg/f:DI 123)
                (const_int 8 [0x8])) [0 in_4(D)->size+0 S2 A32])) NVCommands.c:559 -1
     (nil))
(insn 78 77 79 11 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])) NVCommands.c:559 -1
     (nil))
(insn 79 78 80 11 (set (mem/j:HI (reg/f:DI 124) [0 out_28(D)->data.t.size+0 S2 A16])
        (reg:HI 102 [ D.13537 ])) NVCommands.c:559 -1
     (nil))
(insn 80 79 81 11 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])) NVCommands.c:561 -1
     (nil))
(insn 81 80 82 11 (parallel [
            (set (reg/f:DI 103 [ D.13539 ])
                (plus:DI (reg/f:DI 125)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:561 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 82 81 83 11 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:561 -1
     (nil))
(insn 83 82 84 11 (set (reg:HI 104 [ D.13537 ])
        (mem/j:HI (plus:DI (reg/f:DI 126)
                (const_int 8 [0x8])) [0 in_4(D)->size+0 S2 A32])) NVCommands.c:561 -1
     (nil))
(insn 84 83 85 11 (set (reg:SI 105 [ D.13538 ])
        (zero_extend:SI (reg:HI 104 [ D.13537 ]))) NVCommands.c:561 -1
     (nil))
(insn 85 84 86 11 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:561 -1
     (nil))
(insn 86 85 87 11 (set (reg:HI 106 [ D.13537 ])
        (mem/j:HI (plus:DI (reg/f:DI 127)
                (const_int 10 [0xa])) [0 in_4(D)->offset+0 S2 A16])) NVCommands.c:561 -1
     (nil))
(insn 87 86 88 11 (set (reg:SI 107 [ D.13536 ])
        (zero_extend:SI (reg:HI 106 [ D.13537 ]))) NVCommands.c:561 -1
     (nil))
(insn 88 87 89 11 (set (reg:SI 108 [ D.13536 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 locator+0 S4 A64])) NVCommands.c:561 -1
     (nil))
(insn 89 88 90 11 (set (reg:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:561 -1
     (nil))
(insn 90 89 91 11 (set (reg:DI 37 r8)
        (reg/f:DI 103 [ D.13539 ])) NVCommands.c:561 -1
     (nil))
(insn 91 90 92 11 (set (reg:SI 2 cx)
        (reg:SI 105 [ D.13538 ])) NVCommands.c:561 -1
     (nil))
(insn 92 91 93 11 (set (reg:SI 1 dx)
        (reg:SI 107 [ D.13536 ])) NVCommands.c:561 -1
     (nil))
(insn 93 92 94 11 (set (reg:SI 4 si)
        (reg:SI 108 [ D.13536 ])) NVCommands.c:561 -1
     (nil))
(insn 94 93 95 11 (set (reg:DI 5 di)
        (reg:DI 128)) NVCommands.c:561 -1
     (nil))
(call_insn 95 94 96 11 (call (mem:QI (symbol_ref:DI ("NvGetIndexData") [flags 0x41]  <function_decl 0x7efeeae63870 NvGetIndexData>) [0 NvGetIndexData S1 A8])
        (const_int 0 [0])) NVCommands.c:561 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 96 95 99 11 (set (reg:SI 87 [ D.13535 ])
        (const_int 0 [0])) NVCommands.c:562 -1
     (nil))
(code_label 99 96 100 13 106 "" [4 uses])
(note 100 99 101 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 105 13 (set (reg:SI 109 [ <retval> ])
        (reg:SI 87 [ D.13535 ])) -1
     (nil))
(insn 105 101 106 13 (set (reg/i:SI 0 ax)
        (reg:SI 109 [ <retval> ])) NVCommands.c:563 -1
     (nil))
(insn 106 105 107 13 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13540+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) NVCommands.c:563 -1
     (nil))
(jump_insn 107 106 113 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) NVCommands.c:563 -1
     (nil)
 -> 110)
(note 113 107 108 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(call_insn 108 113 109 15 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7efeea6e2438 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) NVCommands.c:563 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 109 108 110)
(code_label 110 109 114 16 107 "" [1 uses])
(note 114 110 111 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 111 114 0 16 (use (reg/i:SI 0 ax)) NVCommands.c:563 -1
     (nil))

;; Function TPM2_NV_ReadLock (TPM2_NV_ReadLock, funcdef_no=13, decl_uid=13020, cgraph_uid=13, symbol_order=13)

Partition 0: size 8 align 8
	nvIndex_7
Partition 2: size 4 align 4
	result_12
Partition 1: size 4 align 4
	nvAttributes_8
Partition 3: size 4 align 4
	locator

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 33 from 10 to 11.
Redirecting jump 41 from 10 to 11.
Redirecting jump 50 from 10 to 11.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Removing jump 69.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) NVCommands.c:572 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13544+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:572 -1
     (nil))
(insn 7 4 8 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:577 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.13542 ])
        (mem/j:SI (plus:DI (reg/f:DI 95)
                (const_int 4 [0x4])) [0 in_4(D)->nvIndex+0 S4 A32])) NVCommands.c:577 -1
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:577 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 96)) NVCommands.c:577 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13542 ])) NVCommands.c:577 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetIndexInfo") [flags 0x41]  <function_decl 0x7efeeae63bd0 NvGetIndexInfo>) [0 NvGetIndexInfo S1 A8])
            (const_int 0 [0]))) NVCommands.c:577 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 97)
        (reg:DI 0 ax)) NVCommands.c:577 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])
        (reg:DI 97)) NVCommands.c:577 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:578 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 99)
        (mem/j:SI (plus:DI (reg/f:DI 98)
                (const_int 8 [0x8])) [0 nvIndex_7->publicArea.attributes+0 S4 A32])) NVCommands.c:578 -1
     (nil))
(insn 17 16 18 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nvAttributes+0 S4 A32])
        (reg:SI 99)) NVCommands.c:578 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:582 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 89 [ D.13542 ])
        (mem/j:SI (plus:DI (reg/f:DI 100)
                (const_int 4 [0x4])) [0 in_4(D)->nvIndex+0 S4 A32])) NVCommands.c:582 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:582 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 90 [ D.13542 ])
        (mem/j:SI (reg/f:DI 101) [0 in_4(D)->authHandle+0 S4 A32])) NVCommands.c:582 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nvAttributes+0 S4 A32])) NVCommands.c:582 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 1 dx)
        (reg:SI 102)) NVCommands.c:582 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (reg:SI 89 [ D.13542 ])) NVCommands.c:582 -1
     (nil))
(insn 25 24 26 2 (set (reg:SI 5 di)
        (reg:SI 90 [ D.13542 ])) NVCommands.c:582 -1
     (nil))
(call_insn 26 25 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvReadAccessChecks") [flags 0x41]  <function_decl 0x7efeeae6b1b0 NvReadAccessChecks>) [0 NvReadAccessChecks S1 A8])
            (const_int 0 [0]))) NVCommands.c:582 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 27 26 28 2 (set (reg:SI 103)
        (reg:SI 0 ax)) NVCommands.c:582 -1
     (nil))
(insn 28 27 29 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 result+0 S4 A32])
        (reg:SI 103)) NVCommands.c:582 -1
     (nil))
(insn 29 28 30 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 result+0 S4 A32])
            (const_int 329 [0x149]))) NVCommands.c:585 -1
     (nil))
(jump_insn 30 29 31 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) NVCommands.c:585 -1
     (nil)
 -> 35)
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (reg:SI 87 [ D.13541 ])
        (const_int 329 [0x149])) NVCommands.c:586 -1
     (nil))
(jump_insn 33 32 34 4 (set (pc)
        (label_ref:DI 66)) NVCommands.c:586 654 {jump}
     (nil)
 -> 66)
(barrier 34 33 35)
(code_label 35 34 36 5 109 "" [1 uses])
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 result+0 S4 A32])
            (const_int 328 [0x148]))) NVCommands.c:588 -1
     (nil))
(jump_insn 38 37 39 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) NVCommands.c:588 -1
     (nil)
 -> 43)
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (set (reg:SI 87 [ D.13541 ])
        (const_int 0 [0])) NVCommands.c:589 -1
     (nil))
(jump_insn 41 40 42 6 (set (pc)
        (label_ref:DI 66)) NVCommands.c:589 654 {jump}
     (nil)
 -> 66)
(barrier 42 41 43)
(code_label 43 42 44 7 111 "" [1 uses])
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (set (reg:SI 91 [ D.13543 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nvAttributes+0 S4 A32])) NVCommands.c:593 -1
     (nil))
(insn 46 45 47 7 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 91 [ D.13543 ])
            (const_int 0 [0]))) NVCommands.c:593 -1
     (nil))
(jump_insn 47 46 48 7 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) NVCommands.c:593 -1
     (nil)
 -> 52)
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 8 (set (reg:SI 87 [ D.13541 ])
        (const_int 642 [0x282])) NVCommands.c:594 -1
     (nil))
(jump_insn 50 49 51 8 (set (pc)
        (label_ref:DI 66)) NVCommands.c:594 654 {jump}
     (nil)
 -> 66)
(barrier 51 50 52)
(code_label 52 51 53 9 112 "" [1 uses])
(note 53 52 54 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 nvAttributes+0 S4 A32])
                (ior:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 nvAttributes+0 S4 A32])
                    (const_int 268435456 [0x10000000])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:597 -1
     (nil))
(insn 55 54 56 9 (set (reg:SI 92 [ D.13542 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 locator+0 S4 A32])) NVCommands.c:599 -1
     (nil))
(insn 56 55 57 9 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:599 -1
     (nil))
(insn 57 56 58 9 (set (reg:SI 93 [ D.13542 ])
        (mem/j:SI (reg/f:DI 104) [0 nvIndex_7->publicArea.nvIndex+0 S4 A32])) NVCommands.c:599 -1
     (nil))
(insn 58 57 59 9 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 nvAttributes+0 S4 A32])) NVCommands.c:599 -1
     (nil))
(insn 59 58 60 9 (set (reg:SI 1 dx)
        (reg:SI 105)) NVCommands.c:599 -1
     (nil))
(insn 60 59 61 9 (set (reg:SI 4 si)
        (reg:SI 92 [ D.13542 ])) NVCommands.c:599 -1
     (nil))
(insn 61 60 62 9 (set (reg:SI 5 di)
        (reg:SI 93 [ D.13542 ])) NVCommands.c:599 -1
     (nil))
(call_insn 62 61 63 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvWriteIndexAttributes") [flags 0x41]  <function_decl 0x7efeeae63a20 NvWriteIndexAttributes>) [0 NvWriteIndexAttributes S1 A8])
            (const_int 0 [0]))) NVCommands.c:599 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 63 62 66 9 (set (reg:SI 87 [ D.13541 ])
        (reg:SI 0 ax)) NVCommands.c:599 -1
     (nil))
(code_label 66 63 67 11 113 "" [3 uses])
(note 67 66 68 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 72 11 (set (reg:SI 94 [ <retval> ])
        (reg:SI 87 [ D.13541 ])) -1
     (nil))
(insn 72 68 73 11 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) NVCommands.c:602 -1
     (nil))
(insn 73 72 74 11 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13544+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) NVCommands.c:602 -1
     (nil))
(jump_insn 74 73 80 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) NVCommands.c:602 -1
     (nil)
 -> 77)
(note 80 74 75 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(call_insn 75 80 76 13 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7efeea6e2438 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) NVCommands.c:602 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 76 75 77)
(code_label 77 76 81 14 114 "" [1 uses])
(note 81 77 78 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 78 81 0 14 (use (reg/i:SI 0 ax)) NVCommands.c:602 -1
     (nil))

;; Function TPM2_NV_ChangeAuth (TPM2_NV_ChangeAuth, funcdef_no=14, decl_uid=13033, cgraph_uid=14, symbol_order=14)

Partition 0: size 8 align 8
	nvIndex_7
Partition 1: size 4 align 4
	locator

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 30 from 6 to 7.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 46.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) NVCommands.c:611 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13550+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:611 -1
     (nil))
(insn 7 4 8 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:613 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.13546 ])
        (mem/j:SI (reg/f:DI 97) [0 in_4(D)->nvIndex+0 S4 A32])) NVCommands.c:613 -1
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:613 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 98)) NVCommands.c:613 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13546 ])) NVCommands.c:613 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetIndexInfo") [flags 0x41]  <function_decl 0x7efeeae63bd0 NvGetIndexInfo>) [0 NvGetIndexInfo S1 A8])
            (const_int 0 [0]))) NVCommands.c:613 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 99)
        (reg:DI 0 ax)) NVCommands.c:613 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])
        (reg:DI 99)) NVCommands.c:613 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:617 -1
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 89 [ D.13547 ])
                (plus:DI (reg/f:DI 100)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:617 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.13547 ])) NVCommands.c:617 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("MemoryRemoveTrailingZeros") [flags 0x41]  <function_decl 0x7efeeae4f948 MemoryRemoveTrailingZeros>) [0 MemoryRemoveTrailingZeros S1 A8])
            (const_int 0 [0]))) NVCommands.c:617 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:HI 90 [ D.13548 ])
        (reg:HI 0 ax)) NVCommands.c:617 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 nvIndex+0 S8 A64])) NVCommands.c:618 -1
     (nil))
(insn 21 20 22 2 (set (reg:HI 91 [ D.13548 ])
        (mem/j:HI (plus:DI (reg/f:DI 101)
                (const_int 4 [0x4])) [0 nvIndex_7->publicArea.nameAlg+0 S2 A32])) NVCommands.c:618 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 92 [ D.13549 ])
        (zero_extend:SI (reg:HI 91 [ D.13548 ]))) NVCommands.c:618 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 5 di)
        (reg:SI 92 [ D.13549 ])) NVCommands.c:618 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashGetDigestSize") [flags 0x41]  <function_decl 0x7efeeaf2be58 CryptHashGetDigestSize>) [0 CryptHashGetDigestSize S1 A8])
            (const_int 0 [0]))) NVCommands.c:618 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 25 24 26 2 (set (reg:HI 93 [ D.13548 ])
        (reg:HI 0 ax)) NVCommands.c:618 -1
     (nil))
(insn 26 25 27 2 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 90 [ D.13548 ])
            (reg:HI 93 [ D.13548 ]))) NVCommands.c:617 -1
     (nil))
(jump_insn 27 26 28 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) NVCommands.c:617 -1
     (nil)
 -> 32)
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:SI 87 [ D.13545 ])
        (const_int 469 [0x1d5])) NVCommands.c:619 -1
     (nil))
(jump_insn 30 29 31 4 (set (pc)
        (label_ref:DI 43)) NVCommands.c:619 654 {jump}
     (nil)
 -> 43)
(barrier 31 30 32)
(code_label 32 31 33 5 116 "" [1 uses])
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) NVCommands.c:622 -1
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg/f:DI 94 [ D.13547 ])
                (plus:DI (reg/f:DI 102)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:622 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 36 35 37 5 (set (reg:SI 95 [ D.13546 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 locator+0 S4 A32])) NVCommands.c:622 -1
     (nil))
(insn 37 36 38 5 (set (reg:DI 4 si)
        (reg/f:DI 94 [ D.13547 ])) NVCommands.c:622 -1
     (nil))
(insn 38 37 39 5 (set (reg:SI 5 di)
        (reg:SI 95 [ D.13546 ])) NVCommands.c:622 -1
     (nil))
(call_insn 39 38 40 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvWriteIndexAuth") [flags 0x41]  <function_decl 0x7efeeae63af8 NvWriteIndexAuth>) [0 NvWriteIndexAuth S1 A8])
            (const_int 0 [0]))) NVCommands.c:622 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 40 39 43 5 (set (reg:SI 87 [ D.13545 ])
        (reg:SI 0 ax)) NVCommands.c:622 -1
     (nil))
(code_label 43 40 44 7 118 "" [1 uses])
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 49 7 (set (reg:SI 96 [ <retval> ])
        (reg:SI 87 [ D.13545 ])) -1
     (nil))
(insn 49 45 50 7 (set (reg/i:SI 0 ax)
        (reg:SI 96 [ <retval> ])) NVCommands.c:623 -1
     (nil))
(insn 50 49 51 7 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13550+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) NVCommands.c:623 -1
     (nil))
(jump_insn 51 50 57 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) NVCommands.c:623 -1
     (nil)
 -> 54)
(note 57 51 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 52 57 53 9 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7efeea6e2438 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) NVCommands.c:623 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 53 52 54)
(code_label 54 53 58 10 119 "" [1 uses])
(note 58 54 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 58 0 10 (use (reg/i:SI 0 ax)) NVCommands.c:623 -1
     (nil))

;; Function TPM2_NV_Certify (TPM2_NV_Certify, funcdef_no=15, decl_uid=13068, cgraph_uid=15, symbol_order=15)

Partition 4: size 1232 align 16
	certifyInfo
Partition 1: size 8 align 8
	signObject_10
Partition 0: size 8 align 8
	nvIndex_7
Partition 2: size 4 align 4
	result_22
Partition 3: size 4 align 4
	locator

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 30 from 14 to 15.
Redirecting jump 45 from 14 to 15.
Redirecting jump 65 from 14 to 15.
Redirecting jump 83 from 14 to 15.
Redirecting jump 93 from 14 to 15.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.
Removing jump 160.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) NVCommands.c:634 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1296 [0xfffffffffffffaf0])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) NVCommands.c:634 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13559+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:634 -1
     (nil))
(insn 8 5 9 2 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])) NVCommands.c:637 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ D.13552 ])
        (mem/j:SI (plus:DI (reg/f:DI 119)
                (const_int 8 [0x8])) [0 in_4(D)->nvIndex+0 S4 A32])) NVCommands.c:637 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 120)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1272 [0xfffffffffffffb08])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:637 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg:DI 120)) NVCommands.c:637 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13552 ])) NVCommands.c:637 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetIndexInfo") [flags 0x41]  <function_decl 0x7efeeae63bd0 NvGetIndexInfo>) [0 NvGetIndexInfo S1 A8])
            (const_int 0 [0]))) NVCommands.c:637 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg:DI 121)
        (reg:DI 0 ax)) NVCommands.c:637 -1
     (nil))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 nvIndex+0 S8 A64])
        (reg:DI 121)) NVCommands.c:637 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])) NVCommands.c:639 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 89 [ D.13552 ])
        (mem/j:SI (reg/f:DI 122) [0 in_4(D)->signHandle+0 S4 A32])) NVCommands.c:639 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 5 di)
        (reg:SI 89 [ D.13552 ])) NVCommands.c:639 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7efeeae430d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) NVCommands.c:639 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 20 19 21 2 (set (reg:DI 123)
        (reg:DI 0 ax)) NVCommands.c:639 -1
     (nil))
(insn 21 20 22 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1256 [0xfffffffffffffb18])) [0 signObject+0 S8 A64])
        (reg:DI 123)) NVCommands.c:639 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1256 [0xfffffffffffffb18])) [0 signObject+0 S8 A64])) NVCommands.c:641 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg:DI 124)) NVCommands.c:641 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("IsSigningObject") [flags 0x41]  <function_decl 0x7efeeaf716c0 IsSigningObject>) [0 IsSigningObject S1 A8])
            (const_int 0 [0]))) NVCommands.c:641 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 2 (set (reg:SI 90 [ D.13553 ])
        (reg:SI 0 ax)) NVCommands.c:641 -1
     (nil))
(insn 26 25 27 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.13553 ])
            (const_int 0 [0]))) NVCommands.c:641 -1
     (nil))
(jump_insn 27 26 28 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) NVCommands.c:641 -1
     (nil)
 -> 32)
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:SI 87 [ D.13551 ])
        (const_int 412 [0x19c])) NVCommands.c:642 -1
     (nil))
(jump_insn 30 29 31 4 (set (pc)
        (label_ref:DI 157)) NVCommands.c:642 654 {jump}
     (nil)
 -> 157)
(barrier 31 30 32)
(code_label 32 31 33 5 121 "" [1 uses])
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])) NVCommands.c:643 -1
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg/f:DI 91 [ D.13554 ])
                (plus:DI (reg/f:DI 125)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:643 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])
            (const_int 64 [0x40]))
        (nil)))
(insn 36 35 37 5 (set (reg:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1256 [0xfffffffffffffb18])) [0 signObject+0 S8 A64])) NVCommands.c:643 -1
     (nil))
(insn 37 36 38 5 (set (reg:DI 4 si)
        (reg/f:DI 91 [ D.13554 ])) NVCommands.c:643 -1
     (nil))
(insn 38 37 39 5 (set (reg:DI 5 di)
        (reg:DI 126)) NVCommands.c:643 -1
     (nil))
(call_insn 39 38 40 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptSelectSignScheme") [flags 0x41]  <function_decl 0x7efeeaf2b000 CryptSelectSignScheme>) [0 CryptSelectSignScheme S1 A8])
            (const_int 0 [0]))) NVCommands.c:643 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 40 39 41 5 (set (reg:SI 92 [ D.13553 ])
        (reg:SI 0 ax)) NVCommands.c:643 -1
     (nil))
(insn 41 40 42 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.13553 ])
            (const_int 0 [0]))) NVCommands.c:643 -1
     (nil))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) NVCommands.c:643 -1
     (nil)
 -> 47)
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg:SI 87 [ D.13551 ])
        (const_int 722 [0x2d2])) NVCommands.c:644 -1
     (nil))
(jump_insn 45 44 46 6 (set (pc)
        (label_ref:DI 157)) NVCommands.c:644 654 {jump}
     (nil)
 -> 157)
(barrier 46 45 47)
(code_label 47 46 48 7 123 "" [1 uses])
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 7 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 nvIndex+0 S8 A64])) NVCommands.c:647 -1
     (nil))
(insn 50 49 51 7 (set (reg:SI 93 [ D.13552 ])
        (mem/j:SI (plus:DI (reg/f:DI 127)
                (const_int 8 [0x8])) [0 nvIndex_7->publicArea.attributes+0 S4 A32])) NVCommands.c:647 -1
     (nil))
(insn 51 50 52 7 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])) NVCommands.c:647 -1
     (nil))
(insn 52 51 53 7 (set (reg:SI 94 [ D.13552 ])
        (mem/j:SI (plus:DI (reg/f:DI 128)
                (const_int 8 [0x8])) [0 in_4(D)->nvIndex+0 S4 A32])) NVCommands.c:647 -1
     (nil))
(insn 53 52 54 7 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])) NVCommands.c:647 -1
     (nil))
(insn 54 53 55 7 (set (reg:SI 95 [ D.13552 ])
        (mem/j:SI (plus:DI (reg/f:DI 129)
                (const_int 4 [0x4])) [0 in_4(D)->authHandle+0 S4 A32])) NVCommands.c:647 -1
     (nil))
(insn 55 54 56 7 (set (reg:SI 1 dx)
        (reg:SI 93 [ D.13552 ])) NVCommands.c:647 -1
     (nil))
(insn 56 55 57 7 (set (reg:SI 4 si)
        (reg:SI 94 [ D.13552 ])) NVCommands.c:647 -1
     (nil))
(insn 57 56 58 7 (set (reg:SI 5 di)
        (reg:SI 95 [ D.13552 ])) NVCommands.c:647 -1
     (nil))
(call_insn 58 57 59 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvReadAccessChecks") [flags 0x41]  <function_decl 0x7efeeae6b1b0 NvReadAccessChecks>) [0 NvReadAccessChecks S1 A8])
            (const_int 0 [0]))) NVCommands.c:647 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 59 58 60 7 (set (reg:SI 130)
        (reg:SI 0 ax)) NVCommands.c:647 -1
     (nil))
(insn 60 59 61 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1268 [0xfffffffffffffb0c])) [0 result+0 S4 A32])
        (reg:SI 130)) NVCommands.c:647 -1
     (nil))
(insn 61 60 62 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1268 [0xfffffffffffffb0c])) [0 result+0 S4 A32])
            (const_int 0 [0]))) NVCommands.c:649 -1
     (nil))
(jump_insn 62 61 63 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) NVCommands.c:649 -1
     (nil)
 -> 67)
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 8 (set (reg:SI 87 [ D.13551 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1268 [0xfffffffffffffb0c])) [0 result+0 S4 A32])) NVCommands.c:650 -1
     (nil))
(jump_insn 65 64 66 8 (set (pc)
        (label_ref:DI 157)) NVCommands.c:650 654 {jump}
     (nil)
 -> 157)
(barrier 66 65 67)
(code_label 67 66 68 9 124 "" [1 uses])
(note 68 67 69 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 9 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])) NVCommands.c:653 -1
     (nil))
(insn 70 69 71 9 (set (reg:HI 96 [ D.13555 ])
        (mem/j:HI (plus:DI (reg/f:DI 131)
                (const_int 70 [0x46])) [0 in_4(D)->size+0 S2 A16])) NVCommands.c:653 -1
     (nil))
(insn 71 70 72 9 (set (reg:SI 97 [ D.13552 ])
        (zero_extend:SI (reg:HI 96 [ D.13555 ]))) NVCommands.c:653 -1
     (nil))
(insn 72 71 73 9 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])) NVCommands.c:653 -1
     (nil))
(insn 73 72 74 9 (set (reg:HI 98 [ D.13555 ])
        (mem/j:HI (plus:DI (reg/f:DI 132)
                (const_int 72 [0x48])) [0 in_4(D)->offset+0 S2 A32])) NVCommands.c:653 -1
     (nil))
(insn 74 73 75 9 (set (reg:SI 99 [ D.13552 ])
        (zero_extend:SI (reg:HI 98 [ D.13555 ]))) NVCommands.c:653 -1
     (nil))
(insn 75 74 76 9 (parallel [
            (set (reg:SI 100 [ D.13552 ])
                (plus:SI (reg:SI 97 [ D.13552 ])
                    (reg:SI 99 [ D.13552 ])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:653 -1
     (nil))
(insn 76 75 77 9 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 nvIndex+0 S8 A64])) NVCommands.c:653 -1
     (nil))
(insn 77 76 78 9 (set (reg:HI 101 [ D.13555 ])
        (mem/j:HI (plus:DI (reg/f:DI 133)
                (const_int 62 [0x3e])) [0 nvIndex_7->publicArea.dataSize+0 S2 A16])) NVCommands.c:653 -1
     (nil))
(insn 78 77 79 9 (set (reg:SI 102 [ D.13552 ])
        (zero_extend:SI (reg:HI 101 [ D.13555 ]))) NVCommands.c:653 -1
     (nil))
(insn 79 78 80 9 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 100 [ D.13552 ])
            (reg:SI 102 [ D.13552 ]))) NVCommands.c:653 -1
     (nil))
(jump_insn 80 79 81 9 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) NVCommands.c:653 -1
     (nil)
 -> 85)
(note 81 80 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 10 (set (reg:SI 87 [ D.13551 ])
        (const_int 326 [0x146])) NVCommands.c:654 -1
     (nil))
(jump_insn 83 82 84 10 (set (pc)
        (label_ref:DI 157)) NVCommands.c:654 654 {jump}
     (nil)
 -> 157)
(barrier 84 83 85)
(code_label 85 84 86 11 125 "" [1 uses])
(note 86 85 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 11 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])) NVCommands.c:660 -1
     (nil))
(insn 88 87 89 11 (set (reg:HI 103 [ D.13555 ])
        (mem/j:HI (plus:DI (reg/f:DI 134)
                (const_int 70 [0x46])) [0 in_4(D)->size+0 S2 A16])) NVCommands.c:660 -1
     (nil))
(insn 89 88 90 11 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 103 [ D.13555 ])
            (const_int 1024 [0x400]))) NVCommands.c:660 -1
     (nil))
(jump_insn 90 89 91 11 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) NVCommands.c:660 -1
     (nil)
 -> 95)
(note 91 90 92 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 12 (set (reg:SI 87 [ D.13551 ])
        (const_int 964 [0x3c4])) NVCommands.c:661 -1
     (nil))
(jump_insn 93 92 94 12 (set (pc)
        (label_ref:DI 157)) NVCommands.c:661 654 {jump}
     (nil)
 -> 157)
(barrier 94 93 95)
(code_label 95 94 96 13 126 "" [1 uses])
(note 96 95 97 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 13 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])) NVCommands.c:664 -1
     (nil))
(insn 98 97 99 13 (parallel [
            (set (reg/f:DI 104 [ D.13556 ])
                (plus:DI (reg/f:DI 135)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:664 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])
            (const_int 12 [0xc]))
        (nil)))
(insn 99 98 100 13 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])) NVCommands.c:664 -1
     (nil))
(insn 100 99 101 13 (parallel [
            (set (reg/f:DI 105 [ D.13554 ])
                (plus:DI (reg/f:DI 136)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:664 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])
            (const_int 64 [0x40]))
        (nil)))
(insn 101 100 102 13 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])) NVCommands.c:664 -1
     (nil))
(insn 102 101 103 13 (set (reg:SI 106 [ D.13552 ])
        (mem/j:SI (reg/f:DI 137) [0 in_4(D)->signHandle+0 S4 A32])) NVCommands.c:664 -1
     (nil))
(insn 103 102 104 13 (parallel [
            (set (reg:DI 138)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1248 [0xfffffffffffffb20])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:664 -1
     (nil))
(insn 104 103 105 13 (set (reg:DI 2 cx)
        (reg:DI 138)) NVCommands.c:664 -1
     (nil))
(insn 105 104 106 13 (set (reg:DI 1 dx)
        (reg/f:DI 104 [ D.13556 ])) NVCommands.c:664 -1
     (nil))
(insn 106 105 107 13 (set (reg:DI 4 si)
        (reg/f:DI 105 [ D.13554 ])) NVCommands.c:664 -1
     (nil))
(insn 107 106 108 13 (set (reg:SI 5 di)
        (reg:SI 106 [ D.13552 ])) NVCommands.c:664 -1
     (nil))
(call_insn 108 107 109 13 (call (mem:QI (symbol_ref:DI ("FillInAttestInfo") [flags 0x41]  <function_decl 0x7efeeaf71360 FillInAttestInfo>) [0 FillInAttestInfo S1 A8])
        (const_int 0 [0])) NVCommands.c:664 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 109 108 110 13 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1244 [0xfffffffffffffb24])) [0 certifyInfo.type+0 S2 A32])
        (const_int -32748 [0xffffffffffff8014])) NVCommands.c:668 -1
     (nil))
(insn 110 109 111 13 (parallel [
            (set (reg:DI 139)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1248 [0xfffffffffffffb20])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:670 -1
     (nil))
(insn 111 110 112 13 (parallel [
            (set (reg:DI 140)
                (plus:DI (reg:DI 139)
                    (const_int 144 [0x90])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:670 -1
     (nil))
(insn 112 111 113 13 (set (reg:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 nvIndex+0 S8 A64])) NVCommands.c:670 -1
     (nil))
(insn 113 112 114 13 (set (reg:DI 4 si)
        (reg:DI 140)) NVCommands.c:670 -1
     (nil))
(insn 114 113 115 13 (set (reg:DI 5 di)
        (reg:DI 141)) NVCommands.c:670 -1
     (nil))
(call_insn 115 114 116 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetIndexName") [flags 0x41]  <function_decl 0x7efeeae63e58 NvGetIndexName>) [0 NvGetIndexName S1 A8])
            (const_int 0 [0]))) NVCommands.c:670 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 116 115 117 13 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])) NVCommands.c:672 -1
     (nil))
(insn 117 116 118 13 (set (reg:HI 107 [ D.13555 ])
        (mem/j:HI (plus:DI (reg/f:DI 142)
                (const_int 70 [0x46])) [0 in_4(D)->size+0 S2 A16])) NVCommands.c:672 -1
     (nil))
(insn 118 117 119 13 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1048 [0xfffffffffffffbe8])) [0 certifyInfo.attested.nv.nvContents.t.size+0 S2 A64])
        (reg:HI 107 [ D.13555 ])) NVCommands.c:672 -1
     (nil))
(insn 119 118 120 13 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])) NVCommands.c:674 -1
     (nil))
(insn 120 119 121 13 (set (reg:HI 108 [ D.13555 ])
        (mem/j:HI (plus:DI (reg/f:DI 143)
                (const_int 72 [0x48])) [0 in_4(D)->offset+0 S2 A32])) NVCommands.c:674 -1
     (nil))
(insn 121 120 122 13 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1050 [0xfffffffffffffbe6])) [0 certifyInfo.attested.nv.offset+0 S2 A16])
        (reg:HI 108 [ D.13555 ])) NVCommands.c:674 -1
     (nil))
(insn 122 121 123 13 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])) NVCommands.c:676 -1
     (nil))
(insn 123 122 124 13 (set (reg:HI 109 [ D.13555 ])
        (mem/j:HI (plus:DI (reg/f:DI 144)
                (const_int 70 [0x46])) [0 in_4(D)->size+0 S2 A16])) NVCommands.c:676 -1
     (nil))
(insn 124 123 125 13 (set (reg:SI 110 [ D.13553 ])
        (zero_extend:SI (reg:HI 109 [ D.13555 ]))) NVCommands.c:676 -1
     (nil))
(insn 125 124 126 13 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])) NVCommands.c:676 -1
     (nil))
(insn 126 125 127 13 (set (reg:HI 111 [ D.13555 ])
        (mem/j:HI (plus:DI (reg/f:DI 145)
                (const_int 72 [0x48])) [0 in_4(D)->offset+0 S2 A32])) NVCommands.c:676 -1
     (nil))
(insn 127 126 128 13 (set (reg:SI 112 [ D.13552 ])
        (zero_extend:SI (reg:HI 111 [ D.13555 ]))) NVCommands.c:676 -1
     (nil))
(insn 128 127 129 13 (set (reg:SI 113 [ D.13552 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1272 [0xfffffffffffffb08])) [0 locator+0 S4 A64])) NVCommands.c:676 -1
     (nil))
(insn 129 128 130 13 (parallel [
            (set (reg:DI 146)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1248 [0xfffffffffffffb20])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:676 -1
     (nil))
(insn 130 129 131 13 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg:DI 146)
                    (const_int 202 [0xca])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:676 -1
     (nil))
(insn 131 130 132 13 (set (reg:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1264 [0xfffffffffffffb10])) [0 nvIndex+0 S8 A64])) NVCommands.c:676 -1
     (nil))
(insn 132 131 133 13 (set (reg:DI 37 r8)
        (reg:DI 147)) NVCommands.c:676 -1
     (nil))
(insn 133 132 134 13 (set (reg:SI 2 cx)
        (reg:SI 110 [ D.13553 ])) NVCommands.c:676 -1
     (nil))
(insn 134 133 135 13 (set (reg:SI 1 dx)
        (reg:SI 112 [ D.13552 ])) NVCommands.c:676 -1
     (nil))
(insn 135 134 136 13 (set (reg:SI 4 si)
        (reg:SI 113 [ D.13552 ])) NVCommands.c:676 -1
     (nil))
(insn 136 135 137 13 (set (reg:DI 5 di)
        (reg:DI 148)) NVCommands.c:676 -1
     (nil))
(call_insn 137 136 138 13 (call (mem:QI (symbol_ref:DI ("NvGetIndexData") [flags 0x41]  <function_decl 0x7efeeae63870 NvGetIndexData>) [0 NvGetIndexData S1 A8])
        (const_int 0 [0])) NVCommands.c:676 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 138 137 139 13 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1296 [0xfffffffffffffaf0])) [0 out+0 S8 A64])) NVCommands.c:680 -1
     (nil))
(insn 139 138 140 13 (parallel [
            (set (reg/f:DI 114 [ D.13557 ])
                (plus:DI (reg/f:DI 149)
                    (const_int 1234 [0x4d2])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:680 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1296 [0xfffffffffffffaf0])) [0 out+0 S8 A64])
            (const_int 1234 [0x4d2]))
        (nil)))
(insn 140 139 141 13 (set (reg/f:DI 115 [ D.13558 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1296 [0xfffffffffffffaf0])) [0 out+0 S8 A64])) NVCommands.c:680 -1
     (nil))
(insn 141 140 142 13 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])) NVCommands.c:680 -1
     (nil))
(insn 142 141 143 13 (parallel [
            (set (reg/f:DI 116 [ D.13556 ])
                (plus:DI (reg/f:DI 150)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:680 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])
            (const_int 12 [0xc]))
        (nil)))
(insn 143 142 144 13 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])) NVCommands.c:680 -1
     (nil))
(insn 144 143 145 13 (parallel [
            (set (reg/f:DI 117 [ D.13554 ])
                (plus:DI (reg/f:DI 151)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:680 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1288 [0xfffffffffffffaf8])) [0 in+0 S8 A64])
            (const_int 64 [0x40]))
        (nil)))
(insn 145 144 146 13 (parallel [
            (set (reg:DI 152)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1248 [0xfffffffffffffb20])))
            (clobber (reg:CC 17 flags))
        ]) NVCommands.c:680 -1
     (nil))
(insn 146 145 147 13 (set (reg:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1256 [0xfffffffffffffb18])) [0 signObject+0 S8 A64])) NVCommands.c:680 -1
     (nil))
(insn 147 146 148 13 (set (reg:DI 38 r9)
        (reg/f:DI 114 [ D.13557 ])) NVCommands.c:680 -1
     (nil))
(insn 148 147 149 13 (set (reg:DI 37 r8)
        (reg/f:DI 115 [ D.13558 ])) NVCommands.c:680 -1
     (nil))
(insn 149 148 150 13 (set (reg:DI 2 cx)
        (reg/f:DI 116 [ D.13556 ])) NVCommands.c:680 -1
     (nil))
(insn 150 149 151 13 (set (reg:DI 1 dx)
        (reg:DI 152)) NVCommands.c:680 -1
     (nil))
(insn 151 150 152 13 (set (reg:DI 4 si)
        (reg/f:DI 117 [ D.13554 ])) NVCommands.c:680 -1
     (nil))
(insn 152 151 153 13 (set (reg:DI 5 di)
        (reg:DI 153)) NVCommands.c:680 -1
     (nil))
(call_insn 153 152 154 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SignAttestInfo") [flags 0x41]  <function_decl 0x7efeeaf71510 SignAttestInfo>) [0 SignAttestInfo S1 A8])
            (const_int 0 [0]))) NVCommands.c:680 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 154 153 157 13 (set (reg:SI 87 [ D.13551 ])
        (reg:SI 0 ax)) NVCommands.c:680 -1
     (nil))
(code_label 157 154 158 15 127 "" [5 uses])
(note 158 157 159 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 163 15 (set (reg:SI 118 [ <retval> ])
        (reg:SI 87 [ D.13551 ])) -1
     (nil))
(insn 163 159 164 15 (set (reg/i:SI 0 ax)
        (reg:SI 118 [ <retval> ])) NVCommands.c:682 -1
     (nil))
(insn 164 163 165 15 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13559+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) NVCommands.c:682 -1
     (nil))
(jump_insn 165 164 171 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) NVCommands.c:682 -1
     (nil)
 -> 168)
(note 171 165 166 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(call_insn 166 171 167 17 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7efeea6e2438 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) NVCommands.c:682 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 167 166 168)
(code_label 168 167 172 18 128 "" [1 uses])
(note 172 168 169 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 169 172 0 18 (use (reg/i:SI 0 ax)) NVCommands.c:682 -1
     (nil))
