
;; Function TPM2_Create (TPM2_Create, funcdef_no=2, decl_uid=12866, cgraph_uid=2, symbol_order=2)

Partition 3: size 8 align 8
	publicArea_15
Partition 2: size 8 align 8
	newObject_13
Partition 1: size 8 align 8
	parentObject_8
Partition 0: size 4 align 4
	result_3

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 214.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) ObjectCommands.c:71 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) ObjectCommands.c:71 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 result+0 S4 A32])
        (const_int 0 [0])) ObjectCommands.c:72 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:77 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ D.13332 ])
        (mem/j:SI (reg/f:DI 115) [0 in_5(D)->parentHandle+0 S4 A32])) ObjectCommands.c:77 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13332 ])) ObjectCommands.c:77 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7fcb479140d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:77 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 116)
        (reg:DI 0 ax)) ObjectCommands.c:77 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 parentObject+0 S8 A64])
        (reg:DI 116)) ObjectCommands.c:77 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 parentObject+0 S8 A64])
            (const_int 0 [0]))) ObjectCommands.c:78 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) ObjectCommands.c:78 -1
     (nil)
 -> 22)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) ObjectCommands.c:78 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 4 si)
        (const_int 78 [0x4e])) ObjectCommands.c:78 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 5 di)
        (const_int 0 [0])) ObjectCommands.c:78 -1
     (nil))
(call_insn 20 19 21 4 (call (mem:QI (symbol_ref:DI ("TpmFail") [flags 0x41]  <function_decl 0x7fcb479470d8 TpmFail>) [0 TpmFail S1 A8])
        (const_int 0 [0])) ObjectCommands.c:78 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 21 20 22)
(code_label 22 21 23 5 2 "" [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 parentObject+0 S8 A64])) ObjectCommands.c:80 -1
     (nil))
(insn 25 24 26 5 (set (reg:DI 5 di)
        (reg:DI 117)) ObjectCommands.c:80 -1
     (nil))
(call_insn 26 25 27 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ObjectIsParent") [flags 0x41]  <function_decl 0x7fcb4791aca8 ObjectIsParent>) [0 ObjectIsParent S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:80 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 28 5 (set (reg:SI 89 [ D.13333 ])
        (reg:SI 0 ax)) ObjectCommands.c:80 -1
     (nil))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.13333 ])
            (const_int 0 [0]))) ObjectCommands.c:80 -1
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) ObjectCommands.c:80 -1
     (nil)
 -> 34)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg:SI 87 [ D.13331 ])
        (const_int 394 [0x18a])) ObjectCommands.c:81 -1
     (nil))
(jump_insn 32 31 33 6 (set (pc)
        (label_ref 211)) ObjectCommands.c:81 -1
     (nil)
 -> 211)
(barrier 33 32 34)
(code_label 34 33 35 7 3 "" [1 uses])
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (set (reg:DI 5 di)
        (const_int 0 [0])) ObjectCommands.c:83 -1
     (nil))
(call_insn 37 36 38 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("FindEmptyObjectSlot") [flags 0x41]  <function_decl 0x7fcb479145e8 FindEmptyObjectSlot>) [0 FindEmptyObjectSlot S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:83 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 38 37 39 7 (set (reg:DI 118)
        (reg:DI 0 ax)) ObjectCommands.c:83 -1
     (nil))
(insn 39 38 40 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 newObject+0 S8 A64])
        (reg:DI 118)) ObjectCommands.c:83 -1
     (nil))
(insn 40 39 41 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 newObject+0 S8 A64])
            (const_int 0 [0]))) ObjectCommands.c:84 -1
     (nil))
(jump_insn 41 40 42 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) ObjectCommands.c:84 -1
     (nil)
 -> 46)
(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 8 (set (reg:SI 87 [ D.13331 ])
        (const_int 2306 [0x902])) ObjectCommands.c:85 -1
     (nil))
(jump_insn 44 43 45 8 (set (pc)
        (label_ref 211)) ObjectCommands.c:85 -1
     (nil)
 -> 211)
(barrier 45 44 46)
(code_label 46 45 47 9 5 "" [1 uses])
(note 47 46 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 47 52 9 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 newObject+0 S8 A64])) ObjectCommands.c:89 -1
     (nil))
(insn 52 51 53 9 (parallel [
            (set (reg:DI 121)
                (plus:DI (reg/f:DI 122)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:89 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 newObject+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 53 52 54 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 publicArea+0 S8 A64])
        (reg:DI 121)) ObjectCommands.c:89 -1
     (nil))
(insn 54 53 55 9 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 publicArea+0 S8 A64])) ObjectCommands.c:91 -1
     (nil))
(insn 55 54 56 9 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:91 -1
     (nil))
(insn 56 55 57 9 (set (reg/f:DI 125)
        (reg/f:DI 123)) ObjectCommands.c:91 -1
     (nil))
(insn 57 56 58 9 (parallel [
            (set (reg/f:DI 126)
                (plus:DI (reg/f:DI 124)
                    (const_int 192 [0xc0])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:91 -1
     (nil))
(insn 58 57 59 9 (set (reg:SI 127)
        (const_int 340 [0x154])) ObjectCommands.c:91 -1
     (nil))
(insn 59 58 60 9 (set (reg:DI 128)
        (mem/j:DI (reg/f:DI 126) [0  S8 A8])) ObjectCommands.c:91 -1
     (nil))
(insn 60 59 61 9 (set (mem:DI (reg/f:DI 125) [0  S8 A8])
        (reg:DI 128)) ObjectCommands.c:91 -1
     (nil))
(insn 61 60 62 9 (set (reg:DI 129)
        (zero_extend:DI (reg:SI 127))) ObjectCommands.c:91 -1
     (nil))
(insn 62 61 63 9 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg/f:DI 125)
                    (reg:DI 129)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:91 -1
     (nil))
(insn 63 62 64 9 (parallel [
            (set (reg/f:DI 131)
                (plus:DI (reg:DI 130)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:91 -1
     (nil))
(insn 64 63 65 9 (set (reg:DI 132)
        (zero_extend:DI (reg:SI 127))) ObjectCommands.c:91 -1
     (nil))
(insn 65 64 66 9 (parallel [
            (set (reg:DI 133)
                (plus:DI (reg/f:DI 126)
                    (reg:DI 132)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:91 -1
     (nil))
(insn 66 65 67 9 (parallel [
            (set (reg/f:DI 134)
                (plus:DI (reg:DI 133)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:91 -1
     (nil))
(insn 67 66 68 9 (set (reg:DI 135)
        (mem/j:DI (plus:DI (reg/f:DI 134)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])) ObjectCommands.c:91 -1
     (nil))
(insn 68 67 69 9 (set (mem:DI (plus:DI (reg/f:DI 131)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
        (reg:DI 135)) ObjectCommands.c:91 -1
     (nil))
(insn 69 68 70 9 (parallel [
            (set (reg/f:DI 136)
                (plus:DI (reg/f:DI 125)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:91 -1
     (nil))
(insn 70 69 71 9 (parallel [
            (set (reg/f:DI 136)
                (and:DI (reg/f:DI 136)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:91 -1
     (nil))
(insn 71 70 72 9 (parallel [
            (set (reg/f:DI 125)
                (minus:DI (reg/f:DI 125)
                    (reg/f:DI 136)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:91 -1
     (nil))
(insn 72 71 73 9 (parallel [
            (set (reg/f:DI 126)
                (minus:DI (reg/f:DI 126)
                    (reg/f:DI 125)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:91 -1
     (nil))
(insn 73 72 74 9 (parallel [
            (set (reg:SI 127)
                (plus:SI (reg:SI 127)
                    (subreg:SI (reg/f:DI 125) 0)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:91 -1
     (nil))
(insn 74 73 75 9 (parallel [
            (set (reg:SI 127)
                (and:SI (reg:SI 127)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:91 -1
     (nil))
(insn 75 74 76 9 (parallel [
            (set (reg:SI 137)
                (lshiftrt:SI (reg:SI 127)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:91 -1
     (nil))
(insn 76 75 77 9 (set (reg:DI 138)
        (zero_extend:DI (reg:SI 137))) ObjectCommands.c:91 -1
     (nil))
(insn 77 76 78 9 (parallel [
            (set (reg:DI 138)
                (const_int 0 [0]))
            (set (reg/f:DI 136)
                (plus:DI (ashift:DI (reg:DI 138)
                        (const_int 3 [0x3]))
                    (reg/f:DI 136)))
            (set (reg/f:DI 126)
                (plus:DI (ashift:DI (reg:DI 138)
                        (const_int 3 [0x3]))
                    (reg/f:DI 126)))
            (set (mem:BLK (reg/f:DI 136) [0  A64])
                (mem/j:BLK (reg/f:DI 126) [0  A8]))
            (use (reg:DI 138))
        ]) ObjectCommands.c:91 -1
     (nil))
(insn 78 77 79 9 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:96 -1
     (nil))
(insn 79 78 80 9 (set (reg:HI 90 [ D.13334 ])
        (mem/j:HI (plus:DI (reg/f:DI 139)
                (const_int 56 [0x38])) [0 in_5(D)->inSensitive.sensitive.data.t.size+0 S2 A32])) ObjectCommands.c:96 -1
     (nil))
(insn 80 79 81 9 (set (reg:SI 91 [ D.13333 ])
        (zero_extend:SI (reg:HI 90 [ D.13334 ]))) ObjectCommands.c:95 -1
     (nil))
(insn 81 80 82 9 (set (reg:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 publicArea+0 S8 A64])) ObjectCommands.c:95 -1
     (nil))
(insn 82 81 83 9 (set (reg:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 parentObject+0 S8 A64])) ObjectCommands.c:95 -1
     (nil))
(insn 83 82 84 9 (set (reg:SI 1 dx)
        (reg:SI 91 [ D.13333 ])) ObjectCommands.c:95 -1
     (nil))
(insn 84 83 85 9 (set (reg:DI 4 si)
        (reg:DI 140)) ObjectCommands.c:95 -1
     (nil))
(insn 85 84 86 9 (set (reg:DI 5 di)
        (reg:DI 141)) ObjectCommands.c:95 -1
     (nil))
(call_insn 86 85 87 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CreateChecks") [flags 0x41]  <function_decl 0x7fcb4791ad80 CreateChecks>) [0 CreateChecks S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:95 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 87 86 88 9 (set (reg:SI 142)
        (reg:SI 0 ax)) ObjectCommands.c:95 -1
     (nil))
(insn 88 87 89 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 result+0 S4 A32])
        (reg:SI 142)) ObjectCommands.c:95 -1
     (nil))
(insn 89 88 90 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ObjectCommands.c:97 -1
     (nil))
(jump_insn 90 89 91 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) ObjectCommands.c:97 -1
     (nil)
 -> 99)
(note 91 90 92 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 10 (set (reg:SI 143)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 result+0 S4 A32])) ObjectCommands.c:98 -1
     (nil))
(insn 93 92 94 10 (set (reg:SI 4 si)
        (const_int 576 [0x240])) ObjectCommands.c:98 -1
     (nil))
(insn 94 93 95 10 (set (reg:SI 5 di)
        (reg:SI 143)) ObjectCommands.c:98 -1
     (nil))
(call_insn 95 94 96 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("RcSafeAddToResult") [flags 0x41]  <function_decl 0x7fcb479e9000 RcSafeAddToResult>) [0 RcSafeAddToResult S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:98 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 96 95 97 10 (set (reg:SI 87 [ D.13331 ])
        (reg:SI 0 ax)) ObjectCommands.c:98 -1
     (nil))
(jump_insn 97 96 98 10 (set (pc)
        (label_ref 211)) ObjectCommands.c:98 -1
     (nil)
 -> 211)
(barrier 98 97 99)
(code_label 99 98 100 11 6 "" [1 uses])
(note 100 99 101 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 11 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 publicArea+0 S8 A64])) ObjectCommands.c:100 -1
     (nil))
(insn 102 101 103 11 (set (reg:HI 92 [ D.13334 ])
        (mem/j:HI (plus:DI (reg/f:DI 144)
                (const_int 2 [0x2])) [0 publicArea_15->nameAlg+0 S2 A16])) ObjectCommands.c:100 -1
     (nil))
(insn 103 102 104 11 (set (reg:SI 93 [ D.13333 ])
        (zero_extend:SI (reg:HI 92 [ D.13334 ]))) ObjectCommands.c:100 -1
     (nil))
(insn 104 103 105 11 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:100 -1
     (nil))
(insn 105 104 106 11 (parallel [
            (set (reg/f:DI 94 [ D.13335 ])
                (plus:DI (reg/f:DI 145)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:100 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
            (const_int 6 [0x6]))
        (nil)))
(insn 106 105 107 11 (set (reg:SI 4 si)
        (reg:SI 93 [ D.13333 ])) ObjectCommands.c:100 -1
     (nil))
(insn 107 106 108 11 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.13335 ])) ObjectCommands.c:100 -1
     (nil))
(call_insn 108 107 109 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("AdjustAuthSize") [flags 0x41]  <function_decl 0x7fcb4791abd0 AdjustAuthSize>) [0 AdjustAuthSize S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:100 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 109 108 110 11 (set (reg:SI 95 [ D.13333 ])
        (reg:SI 0 ax)) ObjectCommands.c:100 -1
     (nil))
(insn 110 109 111 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.13333 ])
            (const_int 0 [0]))) ObjectCommands.c:100 -1
     (nil))
(jump_insn 111 110 112 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) ObjectCommands.c:100 -1
     (nil)
 -> 116)
(note 112 111 113 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 12 (set (reg:SI 87 [ D.13331 ])
        (const_int 469 [0x1d5])) ObjectCommands.c:101 -1
     (nil))
(jump_insn 114 113 115 12 (set (pc)
        (label_ref 211)) ObjectCommands.c:101 -1
     (nil)
 -> 211)
(barrier 115 114 116)
(code_label 116 115 117 13 7 "" [1 uses])
(note 117 116 118 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 13 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:104 -1
     (nil))
(insn 119 118 120 13 (parallel [
            (set (reg/f:DI 96 [ D.13336 ])
                (plus:DI (reg/f:DI 146)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:104 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
            (const_int 6 [0x6]))
        (nil)))
(insn 120 119 121 13 (set (reg:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 newObject+0 S8 A64])) ObjectCommands.c:104 -1
     (nil))
(insn 121 120 122 13 (set (reg:DI 1 dx)
        (const_int 0 [0])) ObjectCommands.c:104 -1
     (nil))
(insn 122 121 123 13 (set (reg:DI 4 si)
        (reg/f:DI 96 [ D.13336 ])) ObjectCommands.c:104 -1
     (nil))
(insn 123 122 124 13 (set (reg:DI 5 di)
        (reg:DI 147)) ObjectCommands.c:104 -1
     (nil))
(call_insn 124 123 125 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptCreateObject") [flags 0x41]  <function_decl 0x7fcb479f5af8 CryptCreateObject>) [0 CryptCreateObject S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:104 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 125 124 126 13 (set (reg:SI 148)
        (reg:SI 0 ax)) ObjectCommands.c:104 -1
     (nil))
(insn 126 125 127 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 result+0 S4 A32])
        (reg:SI 148)) ObjectCommands.c:104 -1
     (nil))
(insn 127 126 128 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ObjectCommands.c:105 -1
     (nil))
(jump_insn 128 127 129 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 133)
            (pc))) ObjectCommands.c:105 -1
     (nil)
 -> 133)
(note 129 128 130 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 14 (set (reg:SI 87 [ D.13331 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 result+0 S4 A32])) ObjectCommands.c:106 -1
     (nil))
(jump_insn 131 130 132 14 (set (pc)
        (label_ref 211)) ObjectCommands.c:106 -1
     (nil)
 -> 211)
(barrier 132 131 133)
(code_label 133 132 134 15 8 "" [1 uses])
(note 134 133 135 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 15 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])) ObjectCommands.c:108 -1
     (nil))
(insn 136 135 137 15 (parallel [
            (set (reg/f:DI 97 [ D.13337 ])
                (plus:DI (reg/f:DI 149)
                    (const_int 1436 [0x59c])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:108 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])
            (const_int 1436 [0x59c]))
        (nil)))
(insn 137 136 138 15 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])) ObjectCommands.c:108 -1
     (nil))
(insn 138 137 139 15 (parallel [
            (set (reg/f:DI 98 [ D.13338 ])
                (plus:DI (reg/f:DI 150)
                    (const_int 1192 [0x4a8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:108 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])
            (const_int 1192 [0x4a8]))
        (nil)))
(insn 139 138 140 15 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:108 -1
     (nil))
(insn 140 139 141 15 (parallel [
            (set (reg/f:DI 99 [ D.13339 ])
                (plus:DI (reg/f:DI 151)
                    (const_int 532 [0x214])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:108 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
            (const_int 532 [0x214]))
        (nil)))
(insn 141 140 142 15 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:108 -1
     (nil))
(insn 142 141 143 15 (parallel [
            (set (reg/f:DI 100 [ D.13340 ])
                (plus:DI (reg/f:DI 152)
                    (const_int 584 [0x248])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:108 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
            (const_int 584 [0x248]))
        (nil)))
(insn 143 142 144 15 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 publicArea+0 S8 A64])) ObjectCommands.c:108 -1
     (nil))
(insn 144 143 145 15 (set (reg:HI 101 [ D.13334 ])
        (mem/j:HI (plus:DI (reg/f:DI 153)
                (const_int 2 [0x2])) [0 publicArea_15->nameAlg+0 S2 A16])) ObjectCommands.c:108 -1
     (nil))
(insn 145 144 146 15 (set (reg:SI 102 [ D.13333 ])
        (zero_extend:SI (reg:HI 101 [ D.13334 ]))) ObjectCommands.c:108 -1
     (nil))
(insn 146 145 147 15 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:108 -1
     (nil))
(insn 147 146 148 15 (set (reg:SI 103 [ D.13332 ])
        (mem/j:SI (reg/f:DI 154) [0 in_5(D)->parentHandle+0 S4 A32])) ObjectCommands.c:108 -1
     (nil))
(insn 148 147 149 15 (set (reg:DI 38 r9)
        (reg/f:DI 97 [ D.13337 ])) ObjectCommands.c:108 -1
     (nil))
(insn 149 148 150 15 (set (reg:DI 37 r8)
        (reg/f:DI 98 [ D.13338 ])) ObjectCommands.c:108 -1
     (nil))
(insn 150 149 151 15 (set (reg:DI 2 cx)
        (reg/f:DI 99 [ D.13339 ])) ObjectCommands.c:108 -1
     (nil))
(insn 151 150 152 15 (set (reg:DI 1 dx)
        (reg/f:DI 100 [ D.13340 ])) ObjectCommands.c:108 -1
     (nil))
(insn 152 151 153 15 (set (reg:SI 4 si)
        (reg:SI 102 [ D.13333 ])) ObjectCommands.c:108 -1
     (nil))
(insn 153 152 154 15 (set (reg:SI 5 di)
        (reg:SI 103 [ D.13332 ])) ObjectCommands.c:108 -1
     (nil))
(call_insn 154 153 155 15 (call (mem:QI (symbol_ref:DI ("FillInCreationData") [flags 0x41]  <function_decl 0x7fcb479200d8 FillInCreationData>) [0 FillInCreationData S1 A8])
        (const_int 0 [0])) ObjectCommands.c:108 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 155 154 156 15 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])) ObjectCommands.c:112 -1
     (nil))
(insn 156 155 157 15 (parallel [
            (set (reg/f:DI 104 [ D.13341 ])
                (plus:DI (reg/f:DI 155)
                    (const_int 1488 [0x5d0])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:112 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])
            (const_int 1488 [0x5d0]))
        (nil)))
(insn 157 156 158 15 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])) ObjectCommands.c:112 -1
     (nil))
(insn 158 157 159 15 (parallel [
            (set (reg/f:DI 105 [ D.13337 ])
                (plus:DI (reg/f:DI 156)
                    (const_int 1436 [0x59c])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:112 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])
            (const_int 1436 [0x59c]))
        (nil)))
(insn 159 158 160 15 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 newObject+0 S8 A64])) ObjectCommands.c:112 -1
     (nil))
(insn 160 159 161 15 (parallel [
            (set (reg/f:DI 106 [ D.13342 ])
                (plus:DI (reg/f:DI 157)
                    (const_int 1756 [0x6dc])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:112 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 newObject+0 S8 A64])
            (const_int 1756 [0x6dc]))
        (nil)))
(insn 161 160 162 15 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:112 -1
     (nil))
(insn 162 161 163 15 (set (reg:SI 107 [ D.13332 ])
        (mem/j:SI (reg/f:DI 158) [0 in_5(D)->parentHandle+0 S4 A32])) ObjectCommands.c:112 -1
     (nil))
(insn 163 162 164 15 (set (reg:SI 5 di)
        (reg:SI 107 [ D.13332 ])) ObjectCommands.c:112 -1
     (nil))
(call_insn 164 163 165 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("EntityGetHierarchy") [flags 0x41]  <function_decl 0x7fcb4792b1b0 EntityGetHierarchy>) [0 EntityGetHierarchy S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:112 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 165 164 166 15 (set (reg:SI 108 [ D.13332 ])
        (reg:SI 0 ax)) ObjectCommands.c:112 -1
     (nil))
(insn 166 165 167 15 (set (reg:DI 2 cx)
        (reg/f:DI 104 [ D.13341 ])) ObjectCommands.c:112 -1
     (nil))
(insn 167 166 168 15 (set (reg:DI 1 dx)
        (reg/f:DI 105 [ D.13337 ])) ObjectCommands.c:112 -1
     (nil))
(insn 168 167 169 15 (set (reg:DI 4 si)
        (reg/f:DI 106 [ D.13342 ])) ObjectCommands.c:112 -1
     (nil))
(insn 169 168 170 15 (set (reg:SI 5 di)
        (reg:SI 108 [ D.13332 ])) ObjectCommands.c:112 -1
     (nil))
(call_insn 170 169 171 15 (call (mem:QI (symbol_ref:DI ("TicketComputeCreation") [flags 0x41]  <function_decl 0x7fcb479f5000 TicketComputeCreation>) [0 TicketComputeCreation S1 A8])
        (const_int 0 [0])) ObjectCommands.c:112 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 171 170 172 15 (set (reg/f:DI 109 [ D.13343 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])) ObjectCommands.c:115 -1
     (nil))
(insn 172 171 173 15 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 publicArea+0 S8 A64])) ObjectCommands.c:116 -1
     (nil))
(insn 173 172 174 15 (set (reg:HI 110 [ D.13334 ])
        (mem/j:HI (plus:DI (reg/f:DI 159)
                (const_int 2 [0x2])) [0 publicArea_15->nameAlg+0 S2 A16])) ObjectCommands.c:116 -1
     (nil))
(insn 174 173 175 15 (set (reg:SI 111 [ D.13333 ])
        (zero_extend:SI (reg:HI 110 [ D.13334 ]))) ObjectCommands.c:115 -1
     (nil))
(insn 175 174 176 15 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 newObject+0 S8 A64])) ObjectCommands.c:115 -1
     (nil))
(insn 176 175 177 15 (parallel [
            (set (reg/f:DI 112 [ D.13344 ])
                (plus:DI (reg/f:DI 160)
                    (const_int 1756 [0x6dc])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:115 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 newObject+0 S8 A64])
            (const_int 1756 [0x6dc]))
        (nil)))
(insn 177 176 178 15 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 newObject+0 S8 A64])) ObjectCommands.c:115 -1
     (nil))
(insn 178 177 179 15 (parallel [
            (set (reg/f:DI 113 [ D.13345 ])
                (plus:DI (reg/f:DI 161)
                    (const_int 344 [0x158])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:115 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 newObject+0 S8 A64])
            (const_int 344 [0x158]))
        (nil)))
(insn 179 178 180 15 (set (reg:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 parentObject+0 S8 A64])) ObjectCommands.c:115 -1
     (nil))
(insn 180 179 181 15 (set (reg:DI 37 r8)
        (reg/f:DI 109 [ D.13343 ])) ObjectCommands.c:115 -1
     (nil))
(insn 181 180 182 15 (set (reg:SI 2 cx)
        (reg:SI 111 [ D.13333 ])) ObjectCommands.c:115 -1
     (nil))
(insn 182 181 183 15 (set (reg:DI 1 dx)
        (reg:DI 162)) ObjectCommands.c:115 -1
     (nil))
(insn 183 182 184 15 (set (reg:DI 4 si)
        (reg/f:DI 112 [ D.13344 ])) ObjectCommands.c:115 -1
     (nil))
(insn 184 183 185 15 (set (reg:DI 5 di)
        (reg/f:DI 113 [ D.13345 ])) ObjectCommands.c:115 -1
     (nil))
(call_insn 185 184 186 15 (call (mem:QI (symbol_ref:DI ("SensitiveToPrivate") [flags 0x41]  <function_decl 0x7fcb47920438 SensitiveToPrivate>) [0 SensitiveToPrivate S1 A8])
        (const_int 0 [0])) ObjectCommands.c:115 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 186 185 187 15 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])) ObjectCommands.c:119 -1
     (nil))
(insn 187 186 188 15 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 newObject+0 S8 A64])) ObjectCommands.c:119 -1
     (nil))
(insn 188 187 189 15 (parallel [
            (set (reg/f:DI 165)
                (plus:DI (reg/f:DI 163)
                    (const_int 852 [0x354])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:119 -1
     (nil))
(insn 189 188 190 15 (parallel [
            (set (reg/f:DI 166)
                (plus:DI (reg/f:DI 164)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:119 -1
     (nil))
(insn 190 189 191 15 (set (reg:SI 167)
        (const_int 340 [0x154])) ObjectCommands.c:119 -1
     (nil))
(insn 191 190 192 15 (set (reg:DI 168)
        (mem/j:DI (reg/f:DI 166) [0  S8 A8])) ObjectCommands.c:119 -1
     (nil))
(insn 192 191 193 15 (set (mem/j:DI (reg/f:DI 165) [0  S8 A8])
        (reg:DI 168)) ObjectCommands.c:119 -1
     (nil))
(insn 193 192 194 15 (set (reg:DI 169)
        (zero_extend:DI (reg:SI 167))) ObjectCommands.c:119 -1
     (nil))
(insn 194 193 195 15 (parallel [
            (set (reg:DI 170)
                (plus:DI (reg/f:DI 165)
                    (reg:DI 169)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:119 -1
     (nil))
(insn 195 194 196 15 (parallel [
            (set (reg/f:DI 171)
                (plus:DI (reg:DI 170)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:119 -1
     (nil))
(insn 196 195 197 15 (set (reg:DI 172)
        (zero_extend:DI (reg:SI 167))) ObjectCommands.c:119 -1
     (nil))
(insn 197 196 198 15 (parallel [
            (set (reg:DI 173)
                (plus:DI (reg/f:DI 166)
                    (reg:DI 172)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:119 -1
     (nil))
(insn 198 197 199 15 (parallel [
            (set (reg/f:DI 174)
                (plus:DI (reg:DI 173)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:119 -1
     (nil))
(insn 199 198 200 15 (set (reg:DI 175)
        (mem/j:DI (plus:DI (reg/f:DI 174)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])) ObjectCommands.c:119 -1
     (nil))
(insn 200 199 201 15 (set (mem/j:DI (plus:DI (reg/f:DI 171)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
        (reg:DI 175)) ObjectCommands.c:119 -1
     (nil))
(insn 201 200 202 15 (parallel [
            (set (reg/f:DI 176)
                (plus:DI (reg/f:DI 165)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:119 -1
     (nil))
(insn 202 201 203 15 (parallel [
            (set (reg/f:DI 176)
                (and:DI (reg/f:DI 176)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:119 -1
     (nil))
(insn 203 202 204 15 (parallel [
            (set (reg/f:DI 165)
                (minus:DI (reg/f:DI 165)
                    (reg/f:DI 176)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:119 -1
     (nil))
(insn 204 203 205 15 (parallel [
            (set (reg/f:DI 166)
                (minus:DI (reg/f:DI 166)
                    (reg/f:DI 165)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:119 -1
     (nil))
(insn 205 204 206 15 (parallel [
            (set (reg:SI 167)
                (plus:SI (reg:SI 167)
                    (subreg:SI (reg/f:DI 165) 0)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:119 -1
     (nil))
(insn 206 205 207 15 (parallel [
            (set (reg:SI 167)
                (and:SI (reg:SI 167)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:119 -1
     (nil))
(insn 207 206 208 15 (parallel [
            (set (reg:SI 177)
                (lshiftrt:SI (reg:SI 167)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:119 -1
     (nil))
(insn 208 207 209 15 (set (reg:DI 178)
        (zero_extend:DI (reg:SI 177))) ObjectCommands.c:119 -1
     (nil))
(insn 209 208 210 15 (parallel [
            (set (reg:DI 178)
                (const_int 0 [0]))
            (set (reg/f:DI 176)
                (plus:DI (ashift:DI (reg:DI 178)
                        (const_int 3 [0x3]))
                    (reg/f:DI 176)))
            (set (reg/f:DI 166)
                (plus:DI (ashift:DI (reg:DI 178)
                        (const_int 3 [0x3]))
                    (reg/f:DI 166)))
            (set (mem/j:BLK (reg/f:DI 176) [0  A64])
                (mem/j:BLK (reg/f:DI 166) [0  A8]))
            (use (reg:DI 178))
        ]) ObjectCommands.c:119 -1
     (nil))
(insn 210 209 211 15 (set (reg:SI 87 [ D.13331 ])
        (const_int 0 [0])) ObjectCommands.c:120 -1
     (nil))
(code_label 211 210 212 16 4 "" [5 uses])
(note 212 211 213 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 213 212 217 16 (set (reg:SI 114 [ <retval> ])
        (reg:SI 87 [ D.13331 ])) -1
     (nil))
(insn 217 213 218 16 (set (reg/i:SI 0 ax)
        (reg:SI 114 [ <retval> ])) ObjectCommands.c:121 -1
     (nil))
(insn 218 217 0 16 (use (reg/i:SI 0 ax)) ObjectCommands.c:121 -1
     (nil))

;; Function TPM2_Load (TPM2_Load, funcdef_no=3, decl_uid=12886, cgraph_uid=3, symbol_order=3)

Partition 3: size 744 align 16
	sensitive
Partition 2: size 8 align 8
	parentObject_16
Partition 1: size 8 align 8
	newObject_9
Partition 0: size 4 align 4
	result_4

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 18 from 18 to 19.
Redirecting jump 28 from 18 to 19.
Redirecting jump 56 from 18 to 19.
Redirecting jump 73 from 18 to 19.
Redirecting jump 102 from 18 to 19.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Removing jump 142.
Merging block 20 into block 19...
Merged blocks 19 and 20.
Merged 19 and 20 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -792 [0xfffffffffffffce8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) ObjectCommands.c:132 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -800 [0xfffffffffffffce0])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) ObjectCommands.c:132 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13354+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:132 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 result+0 S4 A32])
        (const_int 0 [0])) ObjectCommands.c:133 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 88 [ D.13347 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -800 [0xfffffffffffffce0])) [0 out+0 S8 A64])) ObjectCommands.c:139 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.13347 ])) ObjectCommands.c:139 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("FindEmptyObjectSlot") [flags 0x41]  <function_decl 0x7fcb479145e8 FindEmptyObjectSlot>) [0 FindEmptyObjectSlot S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:139 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 103)
        (reg:DI 0 ax)) ObjectCommands.c:139 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -768 [0xfffffffffffffd00])) [0 newObject+0 S8 A64])
        (reg:DI 103)) ObjectCommands.c:139 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -768 [0xfffffffffffffd00])) [0 newObject+0 S8 A64])
            (const_int 0 [0]))) ObjectCommands.c:140 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) ObjectCommands.c:140 -1
     (nil)
 -> 20)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:SI 87 [ D.13346 ])
        (const_int 2306 [0x902])) ObjectCommands.c:141 -1
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (label_ref:DI 139)) ObjectCommands.c:141 654 {jump}
     (nil)
 -> 139)
(barrier 19 18 20)
(code_label 20 19 21 5 10 "" [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -792 [0xfffffffffffffce8])) [0 in+0 S8 A64])) ObjectCommands.c:142 -1
     (nil))
(insn 23 22 24 5 (set (reg:HI 89 [ D.13348 ])
        (mem/j:HI (plus:DI (reg/f:DI 104)
                (const_int 4 [0x4])) [0 in_11(D)->inPrivate.t.size+0 S2 A32])) ObjectCommands.c:142 -1
     (nil))
(insn 24 23 25 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 89 [ D.13348 ])
            (const_int 0 [0]))) ObjectCommands.c:142 -1
     (nil))
(jump_insn 25 24 26 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) ObjectCommands.c:142 -1
     (nil)
 -> 30)
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg:SI 87 [ D.13346 ])
        (const_int 469 [0x1d5])) ObjectCommands.c:143 -1
     (nil))
(jump_insn 28 27 29 6 (set (pc)
        (label_ref:DI 139)) ObjectCommands.c:143 654 {jump}
     (nil)
 -> 139)
(barrier 29 28 30)
(code_label 30 29 31 7 12 "" [1 uses])
(note 31 30 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 7 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -792 [0xfffffffffffffce8])) [0 in+0 S8 A64])) ObjectCommands.c:144 -1
     (nil))
(insn 33 32 34 7 (set (reg:SI 90 [ D.13349 ])
        (mem/j:SI (reg/f:DI 105) [0 in_11(D)->parentHandle+0 S4 A32])) ObjectCommands.c:144 -1
     (nil))
(insn 34 33 35 7 (set (reg:SI 5 di)
        (reg:SI 90 [ D.13349 ])) ObjectCommands.c:144 -1
     (nil))
(call_insn 35 34 36 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7fcb479140d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:144 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 36 35 37 7 (set (reg:DI 106)
        (reg:DI 0 ax)) ObjectCommands.c:144 -1
     (nil))
(insn 37 36 38 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -760 [0xfffffffffffffd08])) [0 parentObject+0 S8 A64])
        (reg:DI 106)) ObjectCommands.c:144 -1
     (nil))
(insn 38 37 39 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -760 [0xfffffffffffffd08])) [0 parentObject+0 S8 A64])
            (const_int 0 [0]))) ObjectCommands.c:145 -1
     (nil))
(jump_insn 39 38 40 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) ObjectCommands.c:145 -1
     (nil)
 -> 46)
(note 40 39 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 8 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) ObjectCommands.c:145 -1
     (nil))
(insn 42 41 43 8 (set (reg:SI 4 si)
        (const_int 145 [0x91])) ObjectCommands.c:145 -1
     (nil))
(insn 43 42 44 8 (set (reg:DI 5 di)
        (const_int 0 [0])) ObjectCommands.c:145 -1
     (nil))
(call_insn 44 43 45 8 (call (mem:QI (symbol_ref:DI ("TpmFail") [flags 0x41]  <function_decl 0x7fcb479470d8 TpmFail>) [0 TpmFail S1 A8])
        (const_int 0 [0])) ObjectCommands.c:145 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 45 44 46)
(code_label 46 45 47 9 13 "" [1 uses])
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 9 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -760 [0xfffffffffffffd08])) [0 parentObject+0 S8 A64])) ObjectCommands.c:147 -1
     (nil))
(insn 49 48 50 9 (set (reg:DI 5 di)
        (reg:DI 107)) ObjectCommands.c:147 -1
     (nil))
(call_insn 50 49 51 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ObjectIsParent") [flags 0x41]  <function_decl 0x7fcb4791aca8 ObjectIsParent>) [0 ObjectIsParent S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:147 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 51 50 52 9 (set (reg:SI 91 [ D.13350 ])
        (reg:SI 0 ax)) ObjectCommands.c:147 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.13350 ])
            (const_int 0 [0]))) ObjectCommands.c:147 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) ObjectCommands.c:147 -1
     (nil)
 -> 58)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (set (reg:SI 87 [ D.13346 ])
        (const_int 394 [0x18a])) ObjectCommands.c:148 -1
     (nil))
(jump_insn 56 55 57 10 (set (pc)
        (label_ref:DI 139)) ObjectCommands.c:148 654 {jump}
     (nil)
 -> 139)
(barrier 57 56 58)
(code_label 58 57 59 11 14 "" [1 uses])
(note 59 58 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 11 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -800 [0xfffffffffffffce0])) [0 out+0 S8 A64])) ObjectCommands.c:151 -1
     (nil))
(insn 61 60 62 11 (parallel [
            (set (reg/f:DI 92 [ D.13351 ])
                (plus:DI (reg/f:DI 108)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:151 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -800 [0xfffffffffffffce0])) [0 out+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 62 61 63 11 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -792 [0xfffffffffffffce8])) [0 in+0 S8 A64])) ObjectCommands.c:151 -1
     (nil))
(insn 63 62 64 11 (parallel [
            (set (reg/f:DI 93 [ D.13352 ])
                (plus:DI (reg/f:DI 109)
                    (const_int 856 [0x358])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:151 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -792 [0xfffffffffffffce8])) [0 in+0 S8 A64])
            (const_int 856 [0x358]))
        (nil)))
(insn 64 63 65 11 (set (reg:DI 4 si)
        (reg/f:DI 92 [ D.13351 ])) ObjectCommands.c:151 -1
     (nil))
(insn 65 64 66 11 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.13352 ])) ObjectCommands.c:151 -1
     (nil))
(call_insn 66 65 67 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PublicMarshalAndComputeName") [flags 0x41]  <function_decl 0x7fcb4791a1b0 PublicMarshalAndComputeName>) [0 PublicMarshalAndComputeName S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:151 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 67 66 68 11 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -800 [0xfffffffffffffce0])) [0 out+0 S8 A64])) ObjectCommands.c:152 -1
     (nil))
(insn 68 67 69 11 (set (reg:HI 94 [ D.13348 ])
        (mem/j:HI (plus:DI (reg/f:DI 110)
                (const_int 4 [0x4])) [0 out_5(D)->name.t.size+0 S2 A32])) ObjectCommands.c:152 -1
     (nil))
(insn 69 68 70 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 94 [ D.13348 ])
            (const_int 0 [0]))) ObjectCommands.c:152 -1
     (nil))
(jump_insn 70 69 71 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) ObjectCommands.c:152 -1
     (nil)
 -> 75)
(note 71 70 72 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 12 (set (reg:SI 87 [ D.13346 ])
        (const_int 707 [0x2c3])) ObjectCommands.c:153 -1
     (nil))
(jump_insn 73 72 74 12 (set (pc)
        (label_ref:DI 139)) ObjectCommands.c:153 654 {jump}
     (nil)
 -> 139)
(barrier 74 73 75)
(code_label 75 74 76 13 15 "" [1 uses])
(note 76 75 77 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 13 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -792 [0xfffffffffffffce8])) [0 in+0 S8 A64])) ObjectCommands.c:156 -1
     (nil))
(insn 78 77 79 13 (set (reg:HI 95 [ D.13348 ])
        (mem/j:HI (plus:DI (reg/f:DI 111)
                (const_int 858 [0x35a])) [0 in_11(D)->inPublic.publicArea.nameAlg+0 S2 A16])) ObjectCommands.c:156 -1
     (nil))
(insn 79 78 80 13 (set (reg:SI 96 [ D.13350 ])
        (zero_extend:SI (reg:HI 95 [ D.13348 ]))) ObjectCommands.c:155 -1
     (nil))
(insn 80 79 81 13 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -800 [0xfffffffffffffce0])) [0 out+0 S8 A64])) ObjectCommands.c:155 -1
     (nil))
(insn 81 80 82 13 (parallel [
            (set (reg/f:DI 97 [ D.13353 ])
                (plus:DI (reg/f:DI 112)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:155 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -800 [0xfffffffffffffce0])) [0 out+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 82 81 83 13 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -792 [0xfffffffffffffce8])) [0 in+0 S8 A64])) ObjectCommands.c:155 -1
     (nil))
(insn 83 82 84 13 (parallel [
            (set (reg/f:DI 98 [ D.13353 ])
                (plus:DI (reg/f:DI 113)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:155 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -792 [0xfffffffffffffce8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 84 83 85 13 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -752 [0xfffffffffffffd10])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:155 -1
     (nil))
(insn 85 84 86 13 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -760 [0xfffffffffffffd08])) [0 parentObject+0 S8 A64])) ObjectCommands.c:155 -1
     (nil))
(insn 86 85 87 13 (set (reg:DI 37 r8)
        (reg:DI 114)) ObjectCommands.c:155 -1
     (nil))
(insn 87 86 88 13 (set (reg:SI 2 cx)
        (reg:SI 96 [ D.13350 ])) ObjectCommands.c:155 -1
     (nil))
(insn 88 87 89 13 (set (reg:DI 1 dx)
        (reg:DI 115)) ObjectCommands.c:155 -1
     (nil))
(insn 89 88 90 13 (set (reg:DI 4 si)
        (reg/f:DI 97 [ D.13353 ])) ObjectCommands.c:155 -1
     (nil))
(insn 90 89 91 13 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.13353 ])) ObjectCommands.c:155 -1
     (nil))
(call_insn 91 90 92 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PrivateToSensitive") [flags 0x41]  <function_decl 0x7fcb47920510 PrivateToSensitive>) [0 PrivateToSensitive S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:155 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 92 91 93 13 (set (reg:SI 116)
        (reg:SI 0 ax)) ObjectCommands.c:155 -1
     (nil))
(insn 93 92 94 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 result+0 S4 A32])
        (reg:SI 116)) ObjectCommands.c:155 -1
     (nil))
(insn 94 93 95 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -772 [0xfffffffffffffcfc])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ObjectCommands.c:158 -1
     (nil))
(jump_insn 95 94 96 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) ObjectCommands.c:158 -1
     (nil)
 -> 104)
(note 96 95 97 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 14 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 result+0 S4 A32])) ObjectCommands.c:159 -1
     (nil))
(insn 98 97 99 14 (set (reg:SI 4 si)
        (const_int 320 [0x140])) ObjectCommands.c:159 -1
     (nil))
(insn 99 98 100 14 (set (reg:SI 5 di)
        (reg:SI 117)) ObjectCommands.c:159 -1
     (nil))
(call_insn 100 99 101 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("RcSafeAddToResult") [flags 0x41]  <function_decl 0x7fcb479e9000 RcSafeAddToResult>) [0 RcSafeAddToResult S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:159 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 101 100 102 14 (set (reg:SI 87 [ D.13346 ])
        (reg:SI 0 ax)) ObjectCommands.c:159 -1
     (nil))
(jump_insn 102 101 103 14 (set (pc)
        (label_ref:DI 139)) ObjectCommands.c:159 654 {jump}
     (nil)
 -> 139)
(barrier 103 102 104)
(code_label 104 103 105 15 16 "" [1 uses])
(note 105 104 106 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 15 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -800 [0xfffffffffffffce0])) [0 out+0 S8 A64])) ObjectCommands.c:162 -1
     (nil))
(insn 107 106 108 15 (parallel [
            (set (reg/f:DI 99 [ D.13351 ])
                (plus:DI (reg/f:DI 118)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:162 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -800 [0xfffffffffffffce0])) [0 out+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 108 107 109 15 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -792 [0xfffffffffffffce8])) [0 in+0 S8 A64])) ObjectCommands.c:162 -1
     (nil))
(insn 109 108 110 15 (parallel [
            (set (reg/f:DI 100 [ D.13352 ])
                (plus:DI (reg/f:DI 119)
                    (const_int 856 [0x358])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:162 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -792 [0xfffffffffffffce8])) [0 in+0 S8 A64])
            (const_int 856 [0x358]))
        (nil)))
(insn 110 109 111 15 (parallel [
            (set (reg:DI 120)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -752 [0xfffffffffffffd10])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:162 -1
     (nil))
(insn 111 110 112 15 (set (reg:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -760 [0xfffffffffffffd08])) [0 parentObject+0 S8 A64])) ObjectCommands.c:162 -1
     (nil))
(insn 112 111 113 15 (set (reg:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -768 [0xfffffffffffffd00])) [0 newObject+0 S8 A64])) ObjectCommands.c:162 -1
     (nil))
(insn 113 112 114 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:162 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 114 113 115 15 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg/f:DI 99 [ D.13351 ])) ObjectCommands.c:162 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 115 114 116 15 (set (reg:SI 38 r9)
        (const_int 320 [0x140])) ObjectCommands.c:162 -1
     (nil))
(insn 116 115 117 15 (set (reg:SI 37 r8)
        (const_int 576 [0x240])) ObjectCommands.c:162 -1
     (nil))
(insn 117 116 118 15 (set (reg:DI 2 cx)
        (reg:DI 120)) ObjectCommands.c:162 -1
     (nil))
(insn 118 117 119 15 (set (reg:DI 1 dx)
        (reg/f:DI 100 [ D.13352 ])) ObjectCommands.c:162 -1
     (nil))
(insn 119 118 120 15 (set (reg:DI 4 si)
        (reg:DI 121)) ObjectCommands.c:162 -1
     (nil))
(insn 120 119 121 15 (set (reg:DI 5 di)
        (reg:DI 122)) ObjectCommands.c:162 -1
     (nil))
(call_insn 121 120 122 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ObjectLoad") [flags 0x41]  <function_decl 0x7fcb47914870 ObjectLoad>) [0 ObjectLoad S1 A8])
            (const_int 16 [0x10]))) ObjectCommands.c:162 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 122 121 123 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:162 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 123 122 124 15 (set (reg:SI 123)
        (reg:SI 0 ax)) ObjectCommands.c:162 -1
     (nil))
(insn 124 123 125 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 result+0 S4 A32])
        (reg:SI 123)) ObjectCommands.c:162 -1
     (nil))
(insn 125 124 126 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -772 [0xfffffffffffffcfc])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ObjectCommands.c:166 -1
     (nil))
(jump_insn 126 125 127 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 134)
            (pc))) ObjectCommands.c:166 -1
     (nil)
 -> 134)
(note 127 126 128 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 16 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -792 [0xfffffffffffffce8])) [0 in+0 S8 A64])) ObjectCommands.c:169 -1
     (nil))
(insn 129 128 130 16 (set (reg:SI 101 [ D.13349 ])
        (mem/j:SI (reg/f:DI 124) [0 in_11(D)->parentHandle+0 S4 A32])) ObjectCommands.c:169 -1
     (nil))
(insn 130 129 131 16 (set (reg:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -768 [0xfffffffffffffd00])) [0 newObject+0 S8 A64])) ObjectCommands.c:169 -1
     (nil))
(insn 131 130 132 16 (set (reg:SI 4 si)
        (reg:SI 101 [ D.13349 ])) ObjectCommands.c:169 -1
     (nil))
(insn 132 131 133 16 (set (reg:DI 5 di)
        (reg:DI 125)) ObjectCommands.c:169 -1
     (nil))
(call_insn 133 132 134 16 (call (mem:QI (symbol_ref:DI ("ObjectSetLoadedAttributes") [flags 0x41]  <function_decl 0x7fcb47914798 ObjectSetLoadedAttributes>) [0 ObjectSetLoadedAttributes S1 A8])
        (const_int 0 [0])) ObjectCommands.c:169 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(code_label 134 133 135 17 17 "" [1 uses])
(note 135 134 136 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 139 17 (set (reg:SI 87 [ D.13346 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -772 [0xfffffffffffffcfc])) [0 result+0 S4 A32])) ObjectCommands.c:171 -1
     (nil))
(code_label 139 136 140 19 18 "" [5 uses])
(note 140 139 141 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 145 19 (set (reg:SI 102 [ <retval> ])
        (reg:SI 87 [ D.13346 ])) -1
     (nil))
(insn 145 141 146 19 (set (reg/i:SI 0 ax)
        (reg:SI 102 [ <retval> ])) ObjectCommands.c:172 -1
     (nil))
(insn 146 145 147 19 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13354+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) ObjectCommands.c:172 -1
     (nil))
(jump_insn 147 146 153 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) ObjectCommands.c:172 -1
     (nil)
 -> 150)
(note 153 147 148 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(call_insn 148 153 149 21 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fcb47ab06c0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ObjectCommands.c:172 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 149 148 150)
(code_label 150 149 154 22 19 "" [1 uses])
(note 154 150 151 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 151 154 0 22 (use (reg/i:SI 0 ax)) ObjectCommands.c:172 -1
     (nil))

;; Function TPM2_LoadExternal (TPM2_LoadExternal, funcdef_no=4, decl_uid=12906, cgraph_uid=4, symbol_order=4)

Partition 1: size 8 align 8
	object_10
Partition 0: size 8 align 8
	sensitive_1
Partition 2: size 4 align 4
	result_34

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 127.
Merging block 19 into block 18...
Merged blocks 18 and 19.
Merged 18 and 19 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) ObjectCommands.c:183 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) ObjectCommands.c:183 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 sensitive+0 S8 A64])
        (const_int 0 [0])) ObjectCommands.c:186 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 88 [ D.13358 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])) ObjectCommands.c:189 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.13358 ])) ObjectCommands.c:189 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("FindEmptyObjectSlot") [flags 0x41]  <function_decl 0x7fcb479145e8 FindEmptyObjectSlot>) [0 FindEmptyObjectSlot S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:189 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 105)
        (reg:DI 0 ax)) ObjectCommands.c:189 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 object+0 S8 A64])
        (reg:DI 105)) ObjectCommands.c:189 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 object+0 S8 A64])
            (const_int 0 [0]))) ObjectCommands.c:190 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ObjectCommands.c:190 -1
     (nil)
 -> 19)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 87 [ D.13357 ])
        (const_int 2306 [0x902])) ObjectCommands.c:191 -1
     (nil))
(jump_insn 17 16 18 4 (set (pc)
        (label_ref 124)) ObjectCommands.c:191 -1
     (nil)
 -> 124)
(barrier 18 17 19)
(code_label 19 18 20 5 21 "" [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:194 -1
     (nil))
(insn 22 21 23 5 (set (reg:SI 89 [ D.13359 ])
        (mem/j:SI (plus:DI (reg/f:DI 106)
                (const_int 1092 [0x444])) [0 in_12(D)->hierarchy+0 S4 A32])) ObjectCommands.c:194 -1
     (nil))
(insn 23 22 24 5 (set (reg:SI 5 di)
        (reg:SI 89 [ D.13359 ])) ObjectCommands.c:194 -1
     (nil))
(call_insn 24 23 25 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HierarchyIsEnabled") [flags 0x41]  <function_decl 0x7fcb4792e6c0 HierarchyIsEnabled>) [0 HierarchyIsEnabled S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:194 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 25 24 26 5 (set (reg:SI 90 [ D.13360 ])
        (reg:SI 0 ax)) ObjectCommands.c:194 -1
     (nil))
(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.13360 ])
            (const_int 0 [0]))) ObjectCommands.c:194 -1
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) ObjectCommands.c:194 -1
     (nil)
 -> 32)
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg:SI 87 [ D.13357 ])
        (const_int 965 [0x3c5])) ObjectCommands.c:195 -1
     (nil))
(jump_insn 30 29 31 6 (set (pc)
        (label_ref 124)) ObjectCommands.c:195 -1
     (nil)
 -> 124)
(barrier 31 30 32)
(code_label 32 31 33 7 23 "" [1 uses])
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:197 -1
     (nil))
(insn 35 34 36 7 (set (reg:HI 91 [ D.13361 ])
        (mem/j:HI (reg/f:DI 107) [0 in_12(D)->inPrivate.size+0 S2 A32])) ObjectCommands.c:197 -1
     (nil))
(insn 36 35 37 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 91 [ D.13361 ])
            (const_int 0 [0]))) ObjectCommands.c:197 -1
     (nil))
(jump_insn 37 36 38 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) ObjectCommands.c:197 -1
     (nil)
 -> 79)
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 8 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:201 -1
     (nil))
(insn 40 39 41 8 (set (reg:SI 92 [ D.13359 ])
        (mem/j:SI (plus:DI (reg/f:DI 108)
                (const_int 1092 [0x444])) [0 in_12(D)->hierarchy+0 S4 A32])) ObjectCommands.c:201 -1
     (nil))
(insn 41 40 42 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.13359 ])
            (const_int 1073741831 [0x40000007]))) ObjectCommands.c:201 -1
     (nil))
(jump_insn 42 41 43 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) ObjectCommands.c:201 -1
     (nil)
 -> 47)
(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 9 (set (reg:SI 87 [ D.13357 ])
        (const_int 965 [0x3c5])) ObjectCommands.c:202 -1
     (nil))
(jump_insn 45 44 46 9 (set (pc)
        (label_ref 124)) ObjectCommands.c:202 -1
     (nil)
 -> 124)
(barrier 46 45 47)
(code_label 47 46 48 10 25 "" [1 uses])
(note 48 47 49 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 10 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:206 -1
     (nil))
(insn 50 49 51 10 (set (reg:SI 93 [ D.13359 ])
        (mem/j:SI (plus:DI (reg/f:DI 109)
                (const_int 756 [0x2f4])) [0 in_12(D)->inPublic.publicArea.objectAttributes+0 S4 A32])) ObjectCommands.c:206 -1
     (nil))
(insn 51 50 52 10 (parallel [
            (set (reg:SI 94 [ D.13359 ])
                (and:SI (reg:SI 93 [ D.13359 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:206 -1
     (nil))
(insn 52 51 53 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.13359 ])
            (const_int 0 [0]))) ObjectCommands.c:206 -1
     (nil))
(jump_insn 53 52 54 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) ObjectCommands.c:206 -1
     (nil)
 -> 66)
(note 54 53 55 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 11 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:207 -1
     (nil))
(insn 56 55 57 11 (set (reg:SI 95 [ D.13359 ])
        (mem/j:SI (plus:DI (reg/f:DI 110)
                (const_int 756 [0x2f4])) [0 in_12(D)->inPublic.publicArea.objectAttributes+0 S4 A32])) ObjectCommands.c:207 -1
     (nil))
(insn 57 56 58 11 (parallel [
            (set (reg:SI 96 [ D.13359 ])
                (and:SI (reg:SI 95 [ D.13359 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:207 -1
     (nil))
(insn 58 57 59 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.13359 ])
            (const_int 0 [0]))) ObjectCommands.c:207 -1
     (nil))
(jump_insn 59 58 60 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) ObjectCommands.c:207 -1
     (nil)
 -> 66)
(note 60 59 61 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 12 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:209 -1
     (nil))
(insn 62 61 63 12 (set (reg:SI 97 [ D.13359 ])
        (mem/j:SI (plus:DI (reg/f:DI 111)
                (const_int 756 [0x2f4])) [0 in_12(D)->inPublic.publicArea.objectAttributes+0 S4 A32])) ObjectCommands.c:209 -1
     (nil))
(insn 63 62 64 12 (parallel [
            (set (reg:SI 98 [ D.13359 ])
                (and:SI (reg:SI 97 [ D.13359 ])
                    (const_int 65536 [0x10000])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:209 -1
     (nil))
(insn 64 63 65 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.13359 ])
            (const_int 0 [0]))) ObjectCommands.c:209 -1
     (nil))
(jump_insn 65 64 66 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) ObjectCommands.c:209 -1
     (nil)
 -> 71)
(code_label 66 65 67 13 26 "" [2 uses])
(note 67 66 68 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 13 (set (reg:SI 87 [ D.13357 ])
        (const_int 706 [0x2c2])) ObjectCommands.c:211 -1
     (nil))
(jump_insn 69 68 70 13 (set (pc)
        (label_ref 124)) ObjectCommands.c:211 -1
     (nil)
 -> 124)
(barrier 70 69 71)
(code_label 71 70 72 14 27 "" [1 uses])
(note 72 71 76 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 76 72 77 14 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:214 -1
     (nil))
(insn 77 76 78 14 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg/f:DI 115)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:214 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 78 77 79 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 sensitive+0 S8 A64])
        (reg:DI 114)) ObjectCommands.c:214 -1
     (nil))
(code_label 79 78 80 15 24 "" [1 uses])
(note 80 79 81 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 15 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])) ObjectCommands.c:217 -1
     (nil))
(insn 82 81 83 15 (parallel [
            (set (reg/f:DI 99 [ D.13362 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:217 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 83 82 84 15 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:217 -1
     (nil))
(insn 84 83 85 15 (parallel [
            (set (reg/f:DI 100 [ D.13363 ])
                (plus:DI (reg/f:DI 117)
                    (const_int 752 [0x2f0])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:217 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
            (const_int 752 [0x2f0]))
        (nil)))
(insn 85 84 86 15 (set (reg:DI 4 si)
        (reg/f:DI 99 [ D.13362 ])) ObjectCommands.c:217 -1
     (nil))
(insn 86 85 87 15 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.13363 ])) ObjectCommands.c:217 -1
     (nil))
(call_insn 87 86 88 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PublicMarshalAndComputeName") [flags 0x41]  <function_decl 0x7fcb4791a1b0 PublicMarshalAndComputeName>) [0 PublicMarshalAndComputeName S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:217 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 88 87 89 15 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])) ObjectCommands.c:219 -1
     (nil))
(insn 89 88 90 15 (parallel [
            (set (reg/f:DI 101 [ D.13362 ])
                (plus:DI (reg/f:DI 118)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:219 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 90 89 91 15 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:219 -1
     (nil))
(insn 91 90 92 15 (parallel [
            (set (reg/f:DI 102 [ D.13363 ])
                (plus:DI (reg/f:DI 119)
                    (const_int 752 [0x2f0])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:219 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
            (const_int 752 [0x2f0]))
        (nil)))
(insn 92 91 93 15 (set (reg:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 sensitive+0 S8 A64])) ObjectCommands.c:219 -1
     (nil))
(insn 93 92 94 15 (set (reg:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 object+0 S8 A64])) ObjectCommands.c:219 -1
     (nil))
(insn 94 93 95 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:219 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 95 94 96 15 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg/f:DI 101 [ D.13362 ])) ObjectCommands.c:219 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 96 95 97 15 (set (reg:SI 38 r9)
        (const_int 320 [0x140])) ObjectCommands.c:219 -1
     (nil))
(insn 97 96 98 15 (set (reg:SI 37 r8)
        (const_int 576 [0x240])) ObjectCommands.c:219 -1
     (nil))
(insn 98 97 99 15 (set (reg:DI 2 cx)
        (reg:DI 120)) ObjectCommands.c:219 -1
     (nil))
(insn 99 98 100 15 (set (reg:DI 1 dx)
        (reg/f:DI 102 [ D.13363 ])) ObjectCommands.c:219 -1
     (nil))
(insn 100 99 101 15 (set (reg:DI 4 si)
        (const_int 0 [0])) ObjectCommands.c:219 -1
     (nil))
(insn 101 100 102 15 (set (reg:DI 5 di)
        (reg:DI 121)) ObjectCommands.c:219 -1
     (nil))
(call_insn 102 101 103 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ObjectLoad") [flags 0x41]  <function_decl 0x7fcb47914870 ObjectLoad>) [0 ObjectLoad S1 A8])
            (const_int 16 [0x10]))) ObjectCommands.c:219 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 103 102 104 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:219 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 104 103 105 15 (set (reg:SI 122)
        (reg:SI 0 ax)) ObjectCommands.c:219 -1
     (nil))
(insn 105 104 106 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 result+0 S4 A32])
        (reg:SI 122)) ObjectCommands.c:219 -1
     (nil))
(insn 106 105 107 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ObjectCommands.c:223 -1
     (nil))
(jump_insn 107 106 108 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) ObjectCommands.c:223 -1
     (nil)
 -> 121)
(note 108 107 109 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 112 16 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 object+0 S8 A64])) ObjectCommands.c:225 -1
     (nil))
(insn 112 109 113 16 (set (reg:QI 126)
        (mem/j:QI (plus:DI (reg/f:DI 123)
                (const_int 2 [0x2])) [0 object_10->attributes.external+0 S1 A16])) ObjectCommands.c:225 -1
     (nil))
(insn 113 112 114 16 (parallel [
            (set (reg:QI 127)
                (ior:QI (reg:QI 126)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:225 -1
     (nil))
(insn 114 113 115 16 (set (mem/j:QI (plus:DI (reg/f:DI 123)
                (const_int 2 [0x2])) [0 object_10->attributes.external+0 S1 A16])
        (reg:QI 127)) ObjectCommands.c:225 -1
     (nil))
(insn 115 114 116 16 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) ObjectCommands.c:227 -1
     (nil))
(insn 116 115 117 16 (set (reg:SI 103 [ D.13359 ])
        (mem/j:SI (plus:DI (reg/f:DI 128)
                (const_int 1092 [0x444])) [0 in_12(D)->hierarchy+0 S4 A32])) ObjectCommands.c:227 -1
     (nil))
(insn 117 116 118 16 (set (reg:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 object+0 S8 A64])) ObjectCommands.c:227 -1
     (nil))
(insn 118 117 119 16 (set (reg:SI 4 si)
        (reg:SI 103 [ D.13359 ])) ObjectCommands.c:227 -1
     (nil))
(insn 119 118 120 16 (set (reg:DI 5 di)
        (reg:DI 129)) ObjectCommands.c:227 -1
     (nil))
(call_insn 120 119 121 16 (call (mem:QI (symbol_ref:DI ("ObjectSetLoadedAttributes") [flags 0x41]  <function_decl 0x7fcb47914798 ObjectSetLoadedAttributes>) [0 ObjectSetLoadedAttributes S1 A8])
        (const_int 0 [0])) ObjectCommands.c:227 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(code_label 121 120 122 17 28 "" [1 uses])
(note 122 121 123 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 17 (set (reg:SI 87 [ D.13357 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 result+0 S4 A32])) ObjectCommands.c:229 -1
     (nil))
(code_label 124 123 125 18 22 "" [4 uses])
(note 125 124 126 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 130 18 (set (reg:SI 104 [ <retval> ])
        (reg:SI 87 [ D.13357 ])) -1
     (nil))
(insn 130 126 131 18 (set (reg/i:SI 0 ax)
        (reg:SI 104 [ <retval> ])) ObjectCommands.c:230 -1
     (nil))
(insn 131 130 0 18 (use (reg/i:SI 0 ax)) ObjectCommands.c:230 -1
     (nil))

;; Function TPM2_ReadPublic (TPM2_ReadPublic, funcdef_no=5, decl_uid=12924, cgraph_uid=5, symbol_order=5)

Partition 0: size 8 align 8
	object_7

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 89.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) ObjectCommands.c:240 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) ObjectCommands.c:240 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) ObjectCommands.c:241 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.13365 ])
        (mem/j:SI (reg/f:DI 91) [0 in_4(D)->objectHandle+0 S4 A32])) ObjectCommands.c:241 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13365 ])) ObjectCommands.c:241 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7fcb479140d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:241 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 92)
        (reg:DI 0 ax)) ObjectCommands.c:241 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 object+0 S8 A64])
        (reg:DI 92)) ObjectCommands.c:241 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 object+0 S8 A64])) ObjectCommands.c:244 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 93)) ObjectCommands.c:244 -1
     (nil))
(call_insn 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ObjectIsSequence") [flags 0x41]  <function_decl 0x7fcb47914000 ObjectIsSequence>) [0 ObjectIsSequence S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:244 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 2 (set (reg:SI 89 [ D.13366 ])
        (reg:SI 0 ax)) ObjectCommands.c:244 -1
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.13366 ])
            (const_int 0 [0]))) ObjectCommands.c:244 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) ObjectCommands.c:244 -1
     (nil)
 -> 23)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg:SI 87 [ D.13364 ])
        (const_int 259 [0x103])) ObjectCommands.c:245 -1
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (label_ref 86)) ObjectCommands.c:245 -1
     (nil)
 -> 86)
(barrier 22 21 23)
(code_label 23 22 24 5 30 "" [1 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) ObjectCommands.c:247 -1
     (nil))
(insn 26 25 27 5 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 object+0 S8 A64])) ObjectCommands.c:247 -1
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg/f:DI 96)
                (plus:DI (reg/f:DI 94)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:247 -1
     (nil))
(insn 28 27 29 5 (parallel [
            (set (reg/f:DI 97)
                (plus:DI (reg/f:DI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:247 -1
     (nil))
(insn 29 28 30 5 (set (reg:SI 98)
        (const_int 340 [0x154])) ObjectCommands.c:247 -1
     (nil))
(insn 30 29 31 5 (set (reg:DI 99)
        (mem/j:DI (reg/f:DI 97) [0  S8 A8])) ObjectCommands.c:247 -1
     (nil))
(insn 31 30 32 5 (set (mem/j:DI (reg/f:DI 96) [0  S8 A8])
        (reg:DI 99)) ObjectCommands.c:247 -1
     (nil))
(insn 32 31 33 5 (set (reg:DI 100)
        (zero_extend:DI (reg:SI 98))) ObjectCommands.c:247 -1
     (nil))
(insn 33 32 34 5 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 96)
                    (reg:DI 100)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:247 -1
     (nil))
(insn 34 33 35 5 (parallel [
            (set (reg/f:DI 102)
                (plus:DI (reg:DI 101)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:247 -1
     (nil))
(insn 35 34 36 5 (set (reg:DI 103)
        (zero_extend:DI (reg:SI 98))) ObjectCommands.c:247 -1
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 97)
                    (reg:DI 103)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:247 -1
     (nil))
(insn 37 36 38 5 (parallel [
            (set (reg/f:DI 105)
                (plus:DI (reg:DI 104)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:247 -1
     (nil))
(insn 38 37 39 5 (set (reg:DI 106)
        (mem/j:DI (plus:DI (reg/f:DI 105)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])) ObjectCommands.c:247 -1
     (nil))
(insn 39 38 40 5 (set (mem/j:DI (plus:DI (reg/f:DI 102)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
        (reg:DI 106)) ObjectCommands.c:247 -1
     (nil))
(insn 40 39 41 5 (parallel [
            (set (reg/f:DI 107)
                (plus:DI (reg/f:DI 96)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:247 -1
     (nil))
(insn 41 40 42 5 (parallel [
            (set (reg/f:DI 107)
                (and:DI (reg/f:DI 107)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:247 -1
     (nil))
(insn 42 41 43 5 (parallel [
            (set (reg/f:DI 96)
                (minus:DI (reg/f:DI 96)
                    (reg/f:DI 107)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:247 -1
     (nil))
(insn 43 42 44 5 (parallel [
            (set (reg/f:DI 97)
                (minus:DI (reg/f:DI 97)
                    (reg/f:DI 96)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:247 -1
     (nil))
(insn 44 43 45 5 (parallel [
            (set (reg:SI 98)
                (plus:SI (reg:SI 98)
                    (subreg:SI (reg/f:DI 96) 0)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:247 -1
     (nil))
(insn 45 44 46 5 (parallel [
            (set (reg:SI 98)
                (and:SI (reg:SI 98)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:247 -1
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg:SI 108)
                (lshiftrt:SI (reg:SI 98)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:247 -1
     (nil))
(insn 47 46 48 5 (set (reg:DI 109)
        (zero_extend:DI (reg:SI 108))) ObjectCommands.c:247 -1
     (nil))
(insn 48 47 49 5 (parallel [
            (set (reg:DI 109)
                (const_int 0 [0]))
            (set (reg/f:DI 107)
                (plus:DI (ashift:DI (reg:DI 109)
                        (const_int 3 [0x3]))
                    (reg/f:DI 107)))
            (set (reg/f:DI 97)
                (plus:DI (ashift:DI (reg:DI 109)
                        (const_int 3 [0x3]))
                    (reg/f:DI 97)))
            (set (mem/j:BLK (reg/f:DI 107) [0  A64])
                (mem/j:BLK (reg/f:DI 97) [0  A8]))
            (use (reg:DI 109))
        ]) ObjectCommands.c:247 -1
     (nil))
(insn 49 48 50 5 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) ObjectCommands.c:248 -1
     (nil))
(insn 50 49 51 5 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 object+0 S8 A64])) ObjectCommands.c:248 -1
     (nil))
(insn 51 50 52 5 (set (reg:DI 112)
        (mem/j:DI (plus:DI (reg/f:DI 111)
                (const_int 1756 [0x6dc])) [0 object_7->name+0 S8 A32])) ObjectCommands.c:248 -1
     (nil))
(insn 52 51 53 5 (set (mem/j:DI (plus:DI (reg/f:DI 110)
                (const_int 344 [0x158])) [0 out_11(D)->name+0 S8 A32])
        (reg:DI 112)) ObjectCommands.c:248 -1
     (nil))
(insn 53 52 54 5 (set (reg:DI 113)
        (mem/j:DI (plus:DI (reg/f:DI 111)
                (const_int 1764 [0x6e4])) [0 object_7->name+8 S8 A32])) ObjectCommands.c:248 -1
     (nil))
(insn 54 53 55 5 (set (mem/j:DI (plus:DI (reg/f:DI 110)
                (const_int 352 [0x160])) [0 out_11(D)->name+8 S8 A32])
        (reg:DI 113)) ObjectCommands.c:248 -1
     (nil))
(insn 55 54 56 5 (set (reg:DI 114)
        (mem/j:DI (plus:DI (reg/f:DI 111)
                (const_int 1772 [0x6ec])) [0 object_7->name+16 S8 A32])) ObjectCommands.c:248 -1
     (nil))
(insn 56 55 57 5 (set (mem/j:DI (plus:DI (reg/f:DI 110)
                (const_int 360 [0x168])) [0 out_11(D)->name+16 S8 A32])
        (reg:DI 114)) ObjectCommands.c:248 -1
     (nil))
(insn 57 56 58 5 (set (reg:DI 115)
        (mem/j:DI (plus:DI (reg/f:DI 111)
                (const_int 1780 [0x6f4])) [0 object_7->name+24 S8 A32])) ObjectCommands.c:248 -1
     (nil))
(insn 58 57 59 5 (set (mem/j:DI (plus:DI (reg/f:DI 110)
                (const_int 368 [0x170])) [0 out_11(D)->name+24 S8 A32])
        (reg:DI 115)) ObjectCommands.c:248 -1
     (nil))
(insn 59 58 60 5 (set (reg:DI 116)
        (mem/j:DI (plus:DI (reg/f:DI 111)
                (const_int 1788 [0x6fc])) [0 object_7->name+32 S8 A32])) ObjectCommands.c:248 -1
     (nil))
(insn 60 59 61 5 (set (mem/j:DI (plus:DI (reg/f:DI 110)
                (const_int 376 [0x178])) [0 out_11(D)->name+32 S8 A32])
        (reg:DI 116)) ObjectCommands.c:248 -1
     (nil))
(insn 61 60 62 5 (set (reg:DI 117)
        (mem/j:DI (plus:DI (reg/f:DI 111)
                (const_int 1796 [0x704])) [0 object_7->name+40 S8 A32])) ObjectCommands.c:248 -1
     (nil))
(insn 62 61 63 5 (set (mem/j:DI (plus:DI (reg/f:DI 110)
                (const_int 384 [0x180])) [0 out_11(D)->name+40 S8 A32])
        (reg:DI 117)) ObjectCommands.c:248 -1
     (nil))
(insn 63 62 64 5 (set (reg:SI 118)
        (mem/j:SI (plus:DI (reg/f:DI 111)
                (const_int 1804 [0x70c])) [0 object_7->name+48 S4 A32])) ObjectCommands.c:248 -1
     (nil))
(insn 64 63 65 5 (set (mem/j:SI (plus:DI (reg/f:DI 110)
                (const_int 392 [0x188])) [0 out_11(D)->name+48 S4 A32])
        (reg:SI 118)) ObjectCommands.c:248 -1
     (nil))
(insn 65 64 66 5 (set (reg:HI 119)
        (mem/j:HI (plus:DI (reg/f:DI 111)
                (const_int 1808 [0x710])) [0 object_7->name+52 S2 A32])) ObjectCommands.c:248 -1
     (nil))
(insn 66 65 67 5 (set (mem/j:HI (plus:DI (reg/f:DI 110)
                (const_int 396 [0x18c])) [0 out_11(D)->name+52 S2 A32])
        (reg:HI 119)) ObjectCommands.c:248 -1
     (nil))
(insn 67 66 68 5 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) ObjectCommands.c:249 -1
     (nil))
(insn 68 67 69 5 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 object+0 S8 A64])) ObjectCommands.c:249 -1
     (nil))
(insn 69 68 70 5 (set (reg:DI 122)
        (mem/j:DI (plus:DI (reg/f:DI 121)
                (const_int 1696 [0x6a0])) [0 object_7->qualifiedName+0 S8 A64])) ObjectCommands.c:249 -1
     (nil))
(insn 70 69 71 5 (set (mem/j:DI (plus:DI (reg/f:DI 120)
                (const_int 398 [0x18e])) [0 out_11(D)->qualifiedName+0 S8 A16])
        (reg:DI 122)) ObjectCommands.c:249 -1
     (nil))
(insn 71 70 72 5 (set (reg:DI 123)
        (mem/j:DI (plus:DI (reg/f:DI 121)
                (const_int 1704 [0x6a8])) [0 object_7->qualifiedName+8 S8 A64])) ObjectCommands.c:249 -1
     (nil))
(insn 72 71 73 5 (set (mem/j:DI (plus:DI (reg/f:DI 120)
                (const_int 406 [0x196])) [0 out_11(D)->qualifiedName+8 S8 A16])
        (reg:DI 123)) ObjectCommands.c:249 -1
     (nil))
(insn 73 72 74 5 (set (reg:DI 124)
        (mem/j:DI (plus:DI (reg/f:DI 121)
                (const_int 1712 [0x6b0])) [0 object_7->qualifiedName+16 S8 A64])) ObjectCommands.c:249 -1
     (nil))
(insn 74 73 75 5 (set (mem/j:DI (plus:DI (reg/f:DI 120)
                (const_int 414 [0x19e])) [0 out_11(D)->qualifiedName+16 S8 A16])
        (reg:DI 124)) ObjectCommands.c:249 -1
     (nil))
(insn 75 74 76 5 (set (reg:DI 125)
        (mem/j:DI (plus:DI (reg/f:DI 121)
                (const_int 1720 [0x6b8])) [0 object_7->qualifiedName+24 S8 A64])) ObjectCommands.c:249 -1
     (nil))
(insn 76 75 77 5 (set (mem/j:DI (plus:DI (reg/f:DI 120)
                (const_int 422 [0x1a6])) [0 out_11(D)->qualifiedName+24 S8 A16])
        (reg:DI 125)) ObjectCommands.c:249 -1
     (nil))
(insn 77 76 78 5 (set (reg:DI 126)
        (mem/j:DI (plus:DI (reg/f:DI 121)
                (const_int 1728 [0x6c0])) [0 object_7->qualifiedName+32 S8 A64])) ObjectCommands.c:249 -1
     (nil))
(insn 78 77 79 5 (set (mem/j:DI (plus:DI (reg/f:DI 120)
                (const_int 430 [0x1ae])) [0 out_11(D)->qualifiedName+32 S8 A16])
        (reg:DI 126)) ObjectCommands.c:249 -1
     (nil))
(insn 79 78 80 5 (set (reg:DI 127)
        (mem/j:DI (plus:DI (reg/f:DI 121)
                (const_int 1736 [0x6c8])) [0 object_7->qualifiedName+40 S8 A64])) ObjectCommands.c:249 -1
     (nil))
(insn 80 79 81 5 (set (mem/j:DI (plus:DI (reg/f:DI 120)
                (const_int 438 [0x1b6])) [0 out_11(D)->qualifiedName+40 S8 A16])
        (reg:DI 127)) ObjectCommands.c:249 -1
     (nil))
(insn 81 80 82 5 (set (reg:SI 128)
        (mem/j:SI (plus:DI (reg/f:DI 121)
                (const_int 1744 [0x6d0])) [0 object_7->qualifiedName+48 S4 A64])) ObjectCommands.c:249 -1
     (nil))
(insn 82 81 83 5 (set (mem/j:SI (plus:DI (reg/f:DI 120)
                (const_int 446 [0x1be])) [0 out_11(D)->qualifiedName+48 S4 A16])
        (reg:SI 128)) ObjectCommands.c:249 -1
     (nil))
(insn 83 82 84 5 (set (reg:HI 129)
        (mem/j:HI (plus:DI (reg/f:DI 121)
                (const_int 1748 [0x6d4])) [0 object_7->qualifiedName+52 S2 A32])) ObjectCommands.c:249 -1
     (nil))
(insn 84 83 85 5 (set (mem/j:HI (plus:DI (reg/f:DI 120)
                (const_int 450 [0x1c2])) [0 out_11(D)->qualifiedName+52 S2 A16])
        (reg:HI 129)) ObjectCommands.c:249 -1
     (nil))
(insn 85 84 86 5 (set (reg:SI 87 [ D.13364 ])
        (const_int 0 [0])) ObjectCommands.c:250 -1
     (nil))
(code_label 86 85 87 6 31 "" [1 uses])
(note 87 86 88 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 92 6 (set (reg:SI 90 [ <retval> ])
        (reg:SI 87 [ D.13364 ])) -1
     (nil))
(insn 92 88 93 6 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) ObjectCommands.c:251 -1
     (nil))
(insn 93 92 0 6 (use (reg/i:SI 0 ax)) ObjectCommands.c:251 -1
     (nil))

;; Function TPM2_ActivateCredential (TPM2_ActivateCredential, funcdef_no=6, decl_uid=12941, cgraph_uid=6, symbol_order=6)

Partition 3: size 52 align 16
	data
Partition 2: size 8 align 8
	activateObject_11
Partition 1: size 8 align 8
	object_8
Partition 0: size 4 align 4
	result_3

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 44 from 14 to 15.
Redirecting jump 68 from 14 to 15.
Redirecting jump 77 from 14 to 15.
Redirecting jump 104 from 14 to 15.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.
Removing jump 114.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) ObjectCommands.c:262 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) ObjectCommands.c:262 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13375+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:262 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [0 result+0 S4 A32])
        (const_int 0 [0])) ObjectCommands.c:263 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) ObjectCommands.c:269 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 88 [ D.13368 ])
        (mem/j:SI (plus:DI (reg/f:DI 103)
                (const_int 4 [0x4])) [0 in_5(D)->keyHandle+0 S4 A32])) ObjectCommands.c:269 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13368 ])) ObjectCommands.c:269 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7fcb479140d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:269 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 104)
        (reg:DI 0 ax)) ObjectCommands.c:269 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 object+0 S8 A64])
        (reg:DI 104)) ObjectCommands.c:269 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) ObjectCommands.c:271 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 89 [ D.13368 ])
        (mem/j:SI (reg/f:DI 105) [0 in_5(D)->activateHandle+0 S4 A32])) ObjectCommands.c:271 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 5 di)
        (reg:SI 89 [ D.13368 ])) ObjectCommands.c:271 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7fcb479140d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:271 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:DI 106)
        (reg:DI 0 ax)) ObjectCommands.c:271 -1
     (nil))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 activateObject+0 S8 A64])
        (reg:DI 106)) ObjectCommands.c:271 -1
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 object+0 S8 A64])) ObjectCommands.c:273 -1
     (nil))
(insn 22 21 23 2 (set (reg:HI 90 [ D.13369 ])
        (mem/j:HI (plus:DI (reg/f:DI 107)
                (const_int 4 [0x4])) [0 object_8->publicArea.type+0 S2 A32])) ObjectCommands.c:273 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 91 [ D.13370 ])
        (zero_extend:SI (reg:HI 90 [ D.13369 ]))) ObjectCommands.c:273 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 5 di)
        (reg:SI 91 [ D.13370 ])) ObjectCommands.c:273 -1
     (nil))
(call_insn 25 24 26 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptIsAsymAlgorithm") [flags 0x41]  <function_decl 0x7fcb479f55e8 CryptIsAsymAlgorithm>) [0 CryptIsAsymAlgorithm S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:273 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 26 25 27 2 (set (reg:SI 92 [ D.13370 ])
        (reg:SI 0 ax)) ObjectCommands.c:273 -1
     (nil))
(insn 27 26 28 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.13370 ])
            (const_int 0 [0]))) ObjectCommands.c:273 -1
     (nil))
(jump_insn 28 27 29 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) ObjectCommands.c:273 -1
     (nil)
 -> 41)
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 object+0 S8 A64])) ObjectCommands.c:274 -1
     (nil))
(insn 31 30 32 4 (set (reg:SI 93 [ D.13368 ])
        (mem/j:SI (plus:DI (reg/f:DI 108)
                (const_int 8 [0x8])) [0 object_8->publicArea.objectAttributes+0 S4 A64])) ObjectCommands.c:274 -1
     (nil))
(insn 32 31 33 4 (parallel [
            (set (reg:SI 94 [ D.13368 ])
                (and:SI (reg:SI 93 [ D.13368 ])
                    (const_int 131072 [0x20000])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:274 -1
     (nil))
(insn 33 32 34 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.13368 ])
            (const_int 0 [0]))) ObjectCommands.c:274 -1
     (nil))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) ObjectCommands.c:274 -1
     (nil)
 -> 41)
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 object+0 S8 A64])) ObjectCommands.c:275 -1
     (nil))
(insn 37 36 38 5 (set (reg:SI 95 [ D.13368 ])
        (mem/j:SI (plus:DI (reg/f:DI 109)
                (const_int 8 [0x8])) [0 object_8->publicArea.objectAttributes+0 S4 A64])) ObjectCommands.c:275 -1
     (nil))
(insn 38 37 39 5 (parallel [
            (set (reg:SI 96 [ D.13368 ])
                (and:SI (reg:SI 95 [ D.13368 ])
                    (const_int 65536 [0x10000])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:275 -1
     (nil))
(insn 39 38 40 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.13368 ])
            (const_int 0 [0]))) ObjectCommands.c:275 -1
     (nil))
(jump_insn 40 39 41 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) ObjectCommands.c:275 -1
     (nil)
 -> 46)
(code_label 41 40 42 6 33 "" [2 uses])
(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 6 (set (reg:SI 87 [ D.13367 ])
        (const_int 650 [0x28a])) ObjectCommands.c:277 -1
     (nil))
(jump_insn 44 43 45 6 (set (pc)
        (label_ref:DI 111)) ObjectCommands.c:277 654 {jump}
     (nil)
 -> 111)
(barrier 45 44 46)
(code_label 46 45 47 7 34 "" [1 uses])
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) ObjectCommands.c:282 -1
     (nil))
(insn 49 48 50 7 (parallel [
            (set (reg/f:DI 97 [ D.13371 ])
                (plus:DI (reg/f:DI 110)
                    (const_int 110 [0x6e])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:282 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])
            (const_int 110 [0x6e]))
        (nil)))
(insn 50 49 51 7 (set (reg/f:DI 98 [ D.13372 ])
        (mem/f/c:DI (symbol_ref:DI ("IDENTITY_STRING") [flags 0x40]  <var_decl 0x7fcb47907750 IDENTITY_STRING>) [0 IDENTITY_STRING+0 S8 A64])) ObjectCommands.c:282 -1
     (nil))
(insn 51 50 52 7 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:282 -1
     (nil))
(insn 52 51 53 7 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 object+0 S8 A64])) ObjectCommands.c:282 -1
     (nil))
(insn 53 52 54 7 (set (reg:DI 37 r8)
        (reg:DI 111)) ObjectCommands.c:282 -1
     (nil))
(insn 54 53 55 7 (set (reg:DI 2 cx)
        (reg/f:DI 97 [ D.13371 ])) ObjectCommands.c:282 -1
     (nil))
(insn 55 54 56 7 (set (reg:DI 1 dx)
        (reg/f:DI 98 [ D.13372 ])) ObjectCommands.c:282 -1
     (nil))
(insn 56 55 57 7 (set (reg:DI 4 si)
        (const_int 0 [0])) ObjectCommands.c:282 -1
     (nil))
(insn 57 56 58 7 (set (reg:DI 5 di)
        (reg:DI 112)) ObjectCommands.c:282 -1
     (nil))
(call_insn 58 57 59 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptSecretDecrypt") [flags 0x41]  <function_decl 0x7fcb479f5798 CryptSecretDecrypt>) [0 CryptSecretDecrypt S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:282 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 59 58 60 7 (set (reg:SI 113)
        (reg:SI 0 ax)) ObjectCommands.c:282 -1
     (nil))
(insn 60 59 61 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [0 result+0 S4 A32])
        (reg:SI 113)) ObjectCommands.c:282 -1
     (nil))
(insn 61 60 62 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -84 [0xffffffffffffffac])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ObjectCommands.c:283 -1
     (nil))
(jump_insn 62 61 63 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) ObjectCommands.c:283 -1
     (nil)
 -> 79)
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -84 [0xffffffffffffffac])) [0 result+0 S4 A32])
            (const_int 156 [0x9c]))) ObjectCommands.c:285 -1
     (nil))
(jump_insn 65 64 66 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) ObjectCommands.c:285 -1
     (nil)
 -> 70)
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 9 (set (reg:SI 87 [ D.13367 ])
        (const_int 257 [0x101])) ObjectCommands.c:286 -1
     (nil))
(jump_insn 68 67 69 9 (set (pc)
        (label_ref:DI 111)) ObjectCommands.c:286 654 {jump}
     (nil)
 -> 111)
(barrier 69 68 70)
(code_label 70 69 71 10 37 "" [1 uses])
(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 10 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [0 result+0 S4 A32])) ObjectCommands.c:287 -1
     (nil))
(insn 73 72 74 10 (set (reg:SI 4 si)
        (const_int 576 [0x240])) ObjectCommands.c:287 -1
     (nil))
(insn 74 73 75 10 (set (reg:SI 5 di)
        (reg:SI 114)) ObjectCommands.c:287 -1
     (nil))
(call_insn 75 74 76 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("RcSafeAddToResult") [flags 0x41]  <function_decl 0x7fcb479e9000 RcSafeAddToResult>) [0 RcSafeAddToResult S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:287 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 76 75 77 10 (set (reg:SI 87 [ D.13367 ])
        (reg:SI 0 ax)) ObjectCommands.c:287 -1
     (nil))
(jump_insn 77 76 78 10 (set (pc)
        (label_ref:DI 111)) ObjectCommands.c:287 654 {jump}
     (nil)
 -> 111)
(barrier 78 77 79)
(code_label 79 78 80 11 36 "" [1 uses])
(note 80 79 81 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 11 (set (reg/f:DI 99 [ D.13373 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 out+0 S8 A64])) ObjectCommands.c:291 -1
     (nil))
(insn 82 81 83 11 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 activateObject+0 S8 A64])) ObjectCommands.c:291 -1
     (nil))
(insn 83 82 84 11 (parallel [
            (set (reg/f:DI 100 [ D.13374 ])
                (plus:DI (reg/f:DI 115)
                    (const_int 1756 [0x6dc])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:291 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -72 [0xffffffffffffffb8])) [0 activateObject+0 S8 A64])
            (const_int 1756 [0x6dc]))
        (nil)))
(insn 84 83 85 11 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) ObjectCommands.c:291 -1
     (nil))
(insn 85 84 86 11 (parallel [
            (set (reg/f:DI 101 [ D.13374 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:291 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 86 85 87 11 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 object+0 S8 A64])) ObjectCommands.c:291 -1
     (nil))
(insn 87 86 88 11 (parallel [
            (set (reg:DI 118)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:291 -1
     (nil))
(insn 88 87 89 11 (set (reg:DI 37 r8)
        (reg/f:DI 99 [ D.13373 ])) ObjectCommands.c:291 -1
     (nil))
(insn 89 88 90 11 (set (reg:DI 2 cx)
        (reg:DI 117)) ObjectCommands.c:291 -1
     (nil))
(insn 90 89 91 11 (set (reg:DI 1 dx)
        (reg:DI 118)) ObjectCommands.c:291 -1
     (nil))
(insn 91 90 92 11 (set (reg:DI 4 si)
        (reg/f:DI 100 [ D.13374 ])) ObjectCommands.c:291 -1
     (nil))
(insn 92 91 93 11 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.13374 ])) ObjectCommands.c:291 -1
     (nil))
(call_insn 93 92 94 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CredentialToSecret") [flags 0x41]  <function_decl 0x7fcb47920870 CredentialToSecret>) [0 CredentialToSecret S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:291 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 94 93 95 11 (set (reg:SI 119)
        (reg:SI 0 ax)) ObjectCommands.c:291 -1
     (nil))
(insn 95 94 96 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [0 result+0 S4 A32])
        (reg:SI 119)) ObjectCommands.c:291 -1
     (nil))
(insn 96 95 97 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -84 [0xffffffffffffffac])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ObjectCommands.c:296 -1
     (nil))
(jump_insn 97 96 98 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) ObjectCommands.c:296 -1
     (nil)
 -> 106)
(note 98 97 99 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 12 (set (reg:SI 120)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [0 result+0 S4 A32])) ObjectCommands.c:297 -1
     (nil))
(insn 100 99 101 12 (set (reg:SI 4 si)
        (const_int 320 [0x140])) ObjectCommands.c:297 -1
     (nil))
(insn 101 100 102 12 (set (reg:SI 5 di)
        (reg:SI 120)) ObjectCommands.c:297 -1
     (nil))
(call_insn 102 101 103 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("RcSafeAddToResult") [flags 0x41]  <function_decl 0x7fcb479e9000 RcSafeAddToResult>) [0 RcSafeAddToResult S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:297 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 103 102 104 12 (set (reg:SI 87 [ D.13367 ])
        (reg:SI 0 ax)) ObjectCommands.c:297 -1
     (nil))
(jump_insn 104 103 105 12 (set (pc)
        (label_ref:DI 111)) ObjectCommands.c:297 654 {jump}
     (nil)
 -> 111)
(barrier 105 104 106)
(code_label 106 105 107 13 38 "" [1 uses])
(note 107 106 108 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 111 13 (set (reg:SI 87 [ D.13367 ])
        (const_int 0 [0])) ObjectCommands.c:298 -1
     (nil))
(code_label 111 108 112 15 39 "" [4 uses])
(note 112 111 113 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 117 15 (set (reg:SI 102 [ <retval> ])
        (reg:SI 87 [ D.13367 ])) -1
     (nil))
(insn 117 113 118 15 (set (reg/i:SI 0 ax)
        (reg:SI 102 [ <retval> ])) ObjectCommands.c:299 -1
     (nil))
(insn 118 117 119 15 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13375+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) ObjectCommands.c:299 -1
     (nil))
(jump_insn 119 118 125 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) ObjectCommands.c:299 -1
     (nil)
 -> 122)
(note 125 119 120 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(call_insn 120 125 121 17 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fcb47ab06c0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ObjectCommands.c:299 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 121 120 122)
(code_label 122 121 126 18 40 "" [1 uses])
(note 126 122 123 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 123 126 0 18 (use (reg/i:SI 0 ax)) ObjectCommands.c:299 -1
     (nil))

;; Function TPM2_MakeCredential (TPM2_MakeCredential, funcdef_no=7, decl_uid=12961, cgraph_uid=7, symbol_order=7)

Partition 2: size 52 align 16
	data
Partition 1: size 8 align 8
	object_8
Partition 0: size 4 align 4
	result_3

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 38 from 12 to 13.
Redirecting jump 54 from 12 to 13.
Redirecting jump 76 from 12 to 13.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 99.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) ObjectCommands.c:310 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) ObjectCommands.c:310 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13385+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:310 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [0 result+0 S4 A32])
        (const_int 0 [0])) ObjectCommands.c:311 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 in+0 S8 A64])) ObjectCommands.c:316 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 88 [ D.13377 ])
        (mem/j:SI (reg/f:DI 106) [0 in_5(D)->handle+0 S4 A32])) ObjectCommands.c:316 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13377 ])) ObjectCommands.c:316 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7fcb479140d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:316 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 107)
        (reg:DI 0 ax)) ObjectCommands.c:316 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 object+0 S8 A64])
        (reg:DI 107)) ObjectCommands.c:316 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 object+0 S8 A64])) ObjectCommands.c:319 -1
     (nil))
(insn 16 15 17 2 (set (reg:HI 89 [ D.13378 ])
        (mem/j:HI (plus:DI (reg/f:DI 108)
                (const_int 4 [0x4])) [0 object_8->publicArea.type+0 S2 A32])) ObjectCommands.c:319 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 90 [ D.13379 ])
        (zero_extend:SI (reg:HI 89 [ D.13378 ]))) ObjectCommands.c:319 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 5 di)
        (reg:SI 90 [ D.13379 ])) ObjectCommands.c:319 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptIsAsymAlgorithm") [flags 0x41]  <function_decl 0x7fcb479f55e8 CryptIsAsymAlgorithm>) [0 CryptIsAsymAlgorithm S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:319 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 20 19 21 2 (set (reg:SI 91 [ D.13379 ])
        (reg:SI 0 ax)) ObjectCommands.c:319 -1
     (nil))
(insn 21 20 22 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.13379 ])
            (const_int 0 [0]))) ObjectCommands.c:319 -1
     (nil))
(jump_insn 22 21 23 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) ObjectCommands.c:319 -1
     (nil)
 -> 35)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 object+0 S8 A64])) ObjectCommands.c:320 -1
     (nil))
(insn 25 24 26 4 (set (reg:SI 92 [ D.13377 ])
        (mem/j:SI (plus:DI (reg/f:DI 109)
                (const_int 8 [0x8])) [0 object_8->publicArea.objectAttributes+0 S4 A64])) ObjectCommands.c:320 -1
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg:SI 93 [ D.13377 ])
                (and:SI (reg:SI 92 [ D.13377 ])
                    (const_int 131072 [0x20000])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:320 -1
     (nil))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.13377 ])
            (const_int 0 [0]))) ObjectCommands.c:320 -1
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) ObjectCommands.c:320 -1
     (nil)
 -> 35)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 object+0 S8 A64])) ObjectCommands.c:321 -1
     (nil))
(insn 31 30 32 5 (set (reg:SI 94 [ D.13377 ])
        (mem/j:SI (plus:DI (reg/f:DI 110)
                (const_int 8 [0x8])) [0 object_8->publicArea.objectAttributes+0 S4 A64])) ObjectCommands.c:321 -1
     (nil))
(insn 32 31 33 5 (parallel [
            (set (reg:SI 95 [ D.13377 ])
                (and:SI (reg:SI 94 [ D.13377 ])
                    (const_int 65536 [0x10000])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:321 -1
     (nil))
(insn 33 32 34 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.13377 ])
            (const_int 0 [0]))) ObjectCommands.c:321 -1
     (nil))
(jump_insn 34 33 35 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) ObjectCommands.c:321 -1
     (nil)
 -> 40)
(code_label 35 34 36 6 42 "" [2 uses])
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg:SI 87 [ D.13376 ])
        (const_int 394 [0x18a])) ObjectCommands.c:322 -1
     (nil))
(jump_insn 38 37 39 6 (set (pc)
        (label_ref:DI 96)) ObjectCommands.c:322 654 {jump}
     (nil)
 -> 96)
(barrier 39 38 40)
(code_label 40 39 41 7 43 "" [1 uses])
(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 7 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 in+0 S8 A64])) ObjectCommands.c:325 -1
     (nil))
(insn 43 42 44 7 (set (reg:HI 96 [ D.13378 ])
        (mem/j:HI (plus:DI (reg/f:DI 111)
                (const_int 4 [0x4])) [0 in_5(D)->credential.t.size+0 S2 A32])) ObjectCommands.c:325 -1
     (nil))
(insn 44 43 45 7 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 object+0 S8 A64])) ObjectCommands.c:325 -1
     (nil))
(insn 45 44 46 7 (set (reg:HI 97 [ D.13378 ])
        (mem/j:HI (plus:DI (reg/f:DI 112)
                (const_int 6 [0x6])) [0 object_8->publicArea.nameAlg+0 S2 A16])) ObjectCommands.c:325 -1
     (nil))
(insn 46 45 47 7 (set (reg:SI 98 [ D.13379 ])
        (zero_extend:SI (reg:HI 97 [ D.13378 ]))) ObjectCommands.c:325 -1
     (nil))
(insn 47 46 48 7 (set (reg:SI 5 di)
        (reg:SI 98 [ D.13379 ])) ObjectCommands.c:325 -1
     (nil))
(call_insn 48 47 49 7 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashGetDigestSize") [flags 0x41]  <function_decl 0x7fcb479fce58 CryptHashGetDigestSize>) [0 CryptHashGetDigestSize S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:325 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 49 48 50 7 (set (reg:HI 99 [ D.13378 ])
        (reg:HI 0 ax)) ObjectCommands.c:325 -1
     (nil))
(insn 50 49 51 7 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 96 [ D.13378 ])
            (reg:HI 99 [ D.13378 ]))) ObjectCommands.c:325 -1
     (nil))
(jump_insn 51 50 52 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) ObjectCommands.c:325 -1
     (nil)
 -> 56)
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (set (reg:SI 87 [ D.13376 ])
        (const_int 469 [0x1d5])) ObjectCommands.c:326 -1
     (nil))
(jump_insn 54 53 55 8 (set (pc)
        (label_ref:DI 96)) ObjectCommands.c:326 654 {jump}
     (nil)
 -> 96)
(barrier 55 54 56)
(code_label 56 55 57 9 45 "" [1 uses])
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 9 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 out+0 S8 A64])) ObjectCommands.c:329 -1
     (nil))
(insn 59 58 60 9 (set (mem/j:HI (plus:DI (reg/f:DI 113)
                (const_int 102 [0x66])) [0 out_23(D)->secret.t.size+0 S2 A16])
        (const_int 256 [0x100])) ObjectCommands.c:329 -1
     (nil))
(insn 60 59 61 9 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 out+0 S8 A64])) ObjectCommands.c:330 -1
     (nil))
(insn 61 60 62 9 (parallel [
            (set (reg/f:DI 100 [ D.13380 ])
                (plus:DI (reg/f:DI 114)
                    (const_int 102 [0x66])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:330 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [0 out+0 S8 A64])
            (const_int 102 [0x66]))
        (nil)))
(insn 62 61 63 9 (set (reg/f:DI 101 [ D.13381 ])
        (mem/f/c:DI (symbol_ref:DI ("IDENTITY_STRING") [flags 0x40]  <var_decl 0x7fcb47907750 IDENTITY_STRING>) [0 IDENTITY_STRING+0 S8 A64])) ObjectCommands.c:330 -1
     (nil))
(insn 63 62 64 9 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:330 -1
     (nil))
(insn 64 63 65 9 (set (reg:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 object+0 S8 A64])) ObjectCommands.c:330 -1
     (nil))
(insn 65 64 66 9 (set (reg:DI 2 cx)
        (reg/f:DI 100 [ D.13380 ])) ObjectCommands.c:330 -1
     (nil))
(insn 66 65 67 9 (set (reg:DI 1 dx)
        (reg:DI 115)) ObjectCommands.c:330 -1
     (nil))
(insn 67 66 68 9 (set (reg:DI 4 si)
        (reg/f:DI 101 [ D.13381 ])) ObjectCommands.c:330 -1
     (nil))
(insn 68 67 69 9 (set (reg:DI 5 di)
        (reg:DI 116)) ObjectCommands.c:330 -1
     (nil))
(call_insn 69 68 70 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptSecretEncrypt") [flags 0x41]  <function_decl 0x7fcb479f56c0 CryptSecretEncrypt>) [0 CryptSecretEncrypt S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:330 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 70 69 71 9 (set (reg:SI 117)
        (reg:SI 0 ax)) ObjectCommands.c:330 -1
     (nil))
(insn 71 70 72 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [0 result+0 S4 A32])
        (reg:SI 117)) ObjectCommands.c:330 -1
     (nil))
(insn 72 71 73 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -76 [0xffffffffffffffb4])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ObjectCommands.c:331 -1
     (nil))
(jump_insn 73 72 74 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) ObjectCommands.c:331 -1
     (nil)
 -> 78)
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 10 (set (reg:SI 87 [ D.13376 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [0 result+0 S4 A32])) ObjectCommands.c:332 -1
     (nil))
(jump_insn 76 75 77 10 (set (pc)
        (label_ref:DI 96)) ObjectCommands.c:332 654 {jump}
     (nil)
 -> 96)
(barrier 77 76 78)
(code_label 78 77 79 11 46 "" [1 uses])
(note 79 78 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 11 (set (reg/f:DI 102 [ D.13382 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 out+0 S8 A64])) ObjectCommands.c:334 -1
     (nil))
(insn 81 80 82 11 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 in+0 S8 A64])) ObjectCommands.c:334 -1
     (nil))
(insn 82 81 83 11 (parallel [
            (set (reg/f:DI 103 [ D.13383 ])
                (plus:DI (reg/f:DI 118)
                    (const_int 54 [0x36])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:334 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 in+0 S8 A64])
            (const_int 54 [0x36]))
        (nil)))
(insn 83 82 84 11 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 in+0 S8 A64])) ObjectCommands.c:334 -1
     (nil))
(insn 84 83 85 11 (parallel [
            (set (reg/f:DI 104 [ D.13384 ])
                (plus:DI (reg/f:DI 119)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:334 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 85 84 86 11 (set (reg:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 object+0 S8 A64])) ObjectCommands.c:334 -1
     (nil))
(insn 86 85 87 11 (parallel [
            (set (reg:DI 121)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:334 -1
     (nil))
(insn 87 86 88 11 (set (reg:DI 37 r8)
        (reg/f:DI 102 [ D.13382 ])) ObjectCommands.c:334 -1
     (nil))
(insn 88 87 89 11 (set (reg:DI 2 cx)
        (reg:DI 120)) ObjectCommands.c:334 -1
     (nil))
(insn 89 88 90 11 (set (reg:DI 1 dx)
        (reg:DI 121)) ObjectCommands.c:334 -1
     (nil))
(insn 90 89 91 11 (set (reg:DI 4 si)
        (reg/f:DI 103 [ D.13383 ])) ObjectCommands.c:334 -1
     (nil))
(insn 91 90 92 11 (set (reg:DI 5 di)
        (reg/f:DI 104 [ D.13384 ])) ObjectCommands.c:334 -1
     (nil))
(call_insn 92 91 93 11 (call (mem:QI (symbol_ref:DI ("SecretToCredential") [flags 0x41]  <function_decl 0x7fcb47920798 SecretToCredential>) [0 SecretToCredential S1 A8])
        (const_int 0 [0])) ObjectCommands.c:334 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 93 92 96 11 (set (reg:SI 87 [ D.13376 ])
        (const_int 0 [0])) ObjectCommands.c:336 -1
     (nil))
(code_label 96 93 97 13 47 "" [3 uses])
(note 97 96 98 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 102 13 (set (reg:SI 105 [ <retval> ])
        (reg:SI 87 [ D.13376 ])) -1
     (nil))
(insn 102 98 103 13 (set (reg/i:SI 0 ax)
        (reg:SI 105 [ <retval> ])) ObjectCommands.c:337 -1
     (nil))
(insn 103 102 104 13 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13385+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) ObjectCommands.c:337 -1
     (nil))
(jump_insn 104 103 110 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) ObjectCommands.c:337 -1
     (nil)
 -> 107)
(note 110 104 105 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(call_insn 105 110 106 15 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fcb47ab06c0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ObjectCommands.c:337 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 106 105 107)
(code_label 107 106 111 16 48 "" [1 uses])
(note 111 107 108 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 108 111 0 16 (use (reg/i:SI 0 ax)) ObjectCommands.c:337 -1
     (nil))

;; Function TPM2_Unseal (TPM2_Unseal, funcdef_no=8, decl_uid=12977, cgraph_uid=8, symbol_order=8)

Partition 0: size 8 align 8
	object_7

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 75.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) ObjectCommands.c:347 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) ObjectCommands.c:347 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) ObjectCommands.c:351 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.13387 ])
        (mem/j:SI (reg/f:DI 97) [0 in_4(D)->itemHandle+0 S4 A32])) ObjectCommands.c:351 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13387 ])) ObjectCommands.c:351 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7fcb479140d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:351 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 98)
        (reg:DI 0 ax)) ObjectCommands.c:351 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 object+0 S8 A64])
        (reg:DI 98)) ObjectCommands.c:351 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 object+0 S8 A64])) ObjectCommands.c:353 -1
     (nil))
(insn 14 13 15 2 (set (reg:HI 89 [ D.13388 ])
        (mem/j:HI (plus:DI (reg/f:DI 99)
                (const_int 4 [0x4])) [0 object_7->publicArea.type+0 S2 A32])) ObjectCommands.c:353 -1
     (nil))
(insn 15 14 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 89 [ D.13388 ])
            (const_int 8 [0x8]))) ObjectCommands.c:353 -1
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) ObjectCommands.c:353 -1
     (nil)
 -> 21)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:SI 87 [ D.13386 ])
        (const_int 394 [0x18a])) ObjectCommands.c:354 -1
     (nil))
(jump_insn 19 18 20 4 (set (pc)
        (label_ref 72)) ObjectCommands.c:354 -1
     (nil)
 -> 72)
(barrier 20 19 21)
(code_label 21 20 22 5 50 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 object+0 S8 A64])) ObjectCommands.c:355 -1
     (nil))
(insn 24 23 25 5 (set (reg:SI 90 [ D.13387 ])
        (mem/j:SI (plus:DI (reg/f:DI 100)
                (const_int 8 [0x8])) [0 object_7->publicArea.objectAttributes+0 S4 A64])) ObjectCommands.c:355 -1
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg:SI 91 [ D.13387 ])
                (and:SI (reg:SI 90 [ D.13387 ])
                    (const_int 131072 [0x20000])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:355 -1
     (nil))
(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.13387 ])
            (const_int 0 [0]))) ObjectCommands.c:355 -1
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) ObjectCommands.c:355 -1
     (nil)
 -> 40)
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 object+0 S8 A64])) ObjectCommands.c:356 -1
     (nil))
(insn 30 29 31 6 (set (reg:SI 92 [ D.13387 ])
        (mem/j:SI (plus:DI (reg/f:DI 101)
                (const_int 8 [0x8])) [0 object_7->publicArea.objectAttributes+0 S4 A64])) ObjectCommands.c:356 -1
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg:SI 93 [ D.13387 ])
                (and:SI (reg:SI 92 [ D.13387 ])
                    (const_int 262144 [0x40000])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:356 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.13387 ])
            (const_int 0 [0]))) ObjectCommands.c:356 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) ObjectCommands.c:356 -1
     (nil)
 -> 40)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 object+0 S8 A64])) ObjectCommands.c:357 -1
     (nil))
(insn 36 35 37 7 (set (reg:SI 94 [ D.13387 ])
        (mem/j:SI (plus:DI (reg/f:DI 102)
                (const_int 8 [0x8])) [0 object_7->publicArea.objectAttributes+0 S4 A64])) ObjectCommands.c:357 -1
     (nil))
(insn 37 36 38 7 (parallel [
            (set (reg:SI 95 [ D.13387 ])
                (and:SI (reg:SI 94 [ D.13387 ])
                    (const_int 65536 [0x10000])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:357 -1
     (nil))
(insn 38 37 39 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.13387 ])
            (const_int 0 [0]))) ObjectCommands.c:357 -1
     (nil))
(jump_insn 39 38 40 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) ObjectCommands.c:357 -1
     (nil)
 -> 45)
(code_label 40 39 41 8 52 "" [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:SI 87 [ D.13386 ])
        (const_int 386 [0x182])) ObjectCommands.c:358 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (label_ref 72)) ObjectCommands.c:358 -1
     (nil)
 -> 72)
(barrier 44 43 45)
(code_label 45 44 46 9 53 "" [1 uses])
(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 9 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) ObjectCommands.c:361 -1
     (nil))
(insn 48 47 49 9 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 object+0 S8 A64])) ObjectCommands.c:361 -1
     (nil))
(insn 49 48 50 9 (set (reg/f:DI 105)
        (reg/f:DI 103)) ObjectCommands.c:361 -1
     (nil))
(insn 50 49 51 9 (parallel [
            (set (reg/f:DI 106)
                (plus:DI (reg/f:DI 104)
                    (const_int 446 [0x1be])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:361 -1
     (nil))
(insn 51 50 52 9 (set (reg:SI 107)
        (const_int 130 [0x82])) ObjectCommands.c:361 -1
     (nil))
(insn 52 51 53 9 (set (reg:DI 108)
        (mem/j:DI (reg/f:DI 106) [0  S8 A8])) ObjectCommands.c:361 -1
     (nil))
(insn 53 52 54 9 (set (mem/j:DI (reg/f:DI 105) [0  S8 A8])
        (reg:DI 108)) ObjectCommands.c:361 -1
     (nil))
(insn 54 53 55 9 (set (reg:DI 109)
        (zero_extend:DI (reg:SI 107))) ObjectCommands.c:361 -1
     (nil))
(insn 55 54 56 9 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 105)
                    (reg:DI 109)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:361 -1
     (nil))
(insn 56 55 57 9 (parallel [
            (set (reg/f:DI 111)
                (plus:DI (reg:DI 110)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:361 -1
     (nil))
(insn 57 56 58 9 (set (reg:DI 112)
        (zero_extend:DI (reg:SI 107))) ObjectCommands.c:361 -1
     (nil))
(insn 58 57 59 9 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg/f:DI 106)
                    (reg:DI 112)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:361 -1
     (nil))
(insn 59 58 60 9 (parallel [
            (set (reg/f:DI 114)
                (plus:DI (reg:DI 113)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:361 -1
     (nil))
(insn 60 59 61 9 (set (reg:DI 115)
        (mem/j:DI (plus:DI (reg/f:DI 114)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])) ObjectCommands.c:361 -1
     (nil))
(insn 61 60 62 9 (set (mem/j:DI (plus:DI (reg/f:DI 111)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
        (reg:DI 115)) ObjectCommands.c:361 -1
     (nil))
(insn 62 61 63 9 (parallel [
            (set (reg/f:DI 116)
                (plus:DI (reg/f:DI 105)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:361 -1
     (nil))
(insn 63 62 64 9 (parallel [
            (set (reg/f:DI 116)
                (and:DI (reg/f:DI 116)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:361 -1
     (nil))
(insn 64 63 65 9 (parallel [
            (set (reg/f:DI 105)
                (minus:DI (reg/f:DI 105)
                    (reg/f:DI 116)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:361 -1
     (nil))
(insn 65 64 66 9 (parallel [
            (set (reg/f:DI 106)
                (minus:DI (reg/f:DI 106)
                    (reg/f:DI 105)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:361 -1
     (nil))
(insn 66 65 67 9 (parallel [
            (set (reg:SI 107)
                (plus:SI (reg:SI 107)
                    (subreg:SI (reg/f:DI 105) 0)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:361 -1
     (nil))
(insn 67 66 68 9 (parallel [
            (set (reg:SI 107)
                (and:SI (reg:SI 107)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:361 -1
     (nil))
(insn 68 67 69 9 (parallel [
            (set (reg:SI 117)
                (lshiftrt:SI (reg:SI 107)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:361 -1
     (nil))
(insn 69 68 70 9 (set (reg:DI 118)
        (zero_extend:DI (reg:SI 117))) ObjectCommands.c:361 -1
     (nil))
(insn 70 69 71 9 (parallel [
            (set (reg:DI 118)
                (const_int 0 [0]))
            (set (reg/f:DI 116)
                (plus:DI (ashift:DI (reg:DI 118)
                        (const_int 3 [0x3]))
                    (reg/f:DI 116)))
            (set (reg/f:DI 106)
                (plus:DI (ashift:DI (reg:DI 118)
                        (const_int 3 [0x3]))
                    (reg/f:DI 106)))
            (set (mem/j:BLK (reg/f:DI 116) [0  A64])
                (mem/j:BLK (reg/f:DI 106) [0  A8]))
            (use (reg:DI 118))
        ]) ObjectCommands.c:361 -1
     (nil))
(insn 71 70 72 9 (set (reg:SI 87 [ D.13386 ])
        (const_int 0 [0])) ObjectCommands.c:362 -1
     (nil))
(code_label 72 71 73 10 51 "" [2 uses])
(note 73 72 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 78 10 (set (reg:SI 96 [ <retval> ])
        (reg:SI 87 [ D.13386 ])) -1
     (nil))
(insn 78 74 79 10 (set (reg/i:SI 0 ax)
        (reg:SI 96 [ <retval> ])) ObjectCommands.c:363 -1
     (nil))
(insn 79 78 0 10 (use (reg/i:SI 0 ax)) ObjectCommands.c:363 -1
     (nil))

;; Function TPM2_ObjectChangeAuth (TPM2_ObjectChangeAuth, funcdef_no=9, decl_uid=12993, cgraph_uid=9, symbol_order=9)

Partition 1: size 744 align 16
	sensitive
Partition 2: size 54 align 16
	QNCompare
Partition 0: size 8 align 8
	object_7

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 22 from 10 to 11.
Redirecting jump 39 from 10 to 11.
Redirecting jump 67 from 10 to 11.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Removing jump 115.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -840 [0xfffffffffffffcb8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) ObjectCommands.c:374 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -848 [0xfffffffffffffcb0])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) ObjectCommands.c:374 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13398+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:374 -1
     (nil))
(insn 8 5 9 2 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -840 [0xfffffffffffffcb8])) [0 in+0 S8 A64])) ObjectCommands.c:376 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ D.13390 ])
        (mem/j:SI (reg/f:DI 107) [0 in_4(D)->objectHandle+0 S4 A32])) ObjectCommands.c:376 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13390 ])) ObjectCommands.c:376 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7fcb479140d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:376 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 108)
        (reg:DI 0 ax)) ObjectCommands.c:376 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -824 [0xfffffffffffffcc8])) [0 object+0 S8 A64])
        (reg:DI 108)) ObjectCommands.c:376 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -824 [0xfffffffffffffcc8])) [0 object+0 S8 A64])) ObjectCommands.c:380 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 109)) ObjectCommands.c:380 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ObjectIsSequence") [flags 0x41]  <function_decl 0x7fcb47914000 ObjectIsSequence>) [0 ObjectIsSequence S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:380 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:SI 89 [ D.13391 ])
        (reg:SI 0 ax)) ObjectCommands.c:380 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.13391 ])
            (const_int 0 [0]))) ObjectCommands.c:380 -1
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) ObjectCommands.c:380 -1
     (nil)
 -> 24)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:SI 87 [ D.13389 ])
        (const_int 394 [0x18a])) ObjectCommands.c:381 -1
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (label_ref:DI 112)) ObjectCommands.c:381 654 {jump}
     (nil)
 -> 112)
(barrier 23 22 24)
(code_label 24 23 25 5 55 "" [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -824 [0xfffffffffffffcc8])) [0 object+0 S8 A64])) ObjectCommands.c:383 -1
     (nil))
(insn 27 26 28 5 (set (reg:HI 90 [ D.13392 ])
        (mem/j:HI (plus:DI (reg/f:DI 110)
                (const_int 6 [0x6])) [0 object_7->publicArea.nameAlg+0 S2 A16])) ObjectCommands.c:383 -1
     (nil))
(insn 28 27 29 5 (set (reg:SI 91 [ D.13391 ])
        (zero_extend:SI (reg:HI 90 [ D.13392 ]))) ObjectCommands.c:383 -1
     (nil))
(insn 29 28 30 5 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -840 [0xfffffffffffffcb8])) [0 in+0 S8 A64])) ObjectCommands.c:383 -1
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg/f:DI 92 [ D.13393 ])
                (plus:DI (reg/f:DI 111)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:383 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -840 [0xfffffffffffffcb8])) [0 in+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 31 30 32 5 (set (reg:SI 4 si)
        (reg:SI 91 [ D.13391 ])) ObjectCommands.c:383 -1
     (nil))
(insn 32 31 33 5 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.13393 ])) ObjectCommands.c:383 -1
     (nil))
(call_insn 33 32 34 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("AdjustAuthSize") [flags 0x41]  <function_decl 0x7fcb4791abd0 AdjustAuthSize>) [0 AdjustAuthSize S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:383 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 34 33 35 5 (set (reg:SI 93 [ D.13391 ])
        (reg:SI 0 ax)) ObjectCommands.c:383 -1
     (nil))
(insn 35 34 36 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.13391 ])
            (const_int 0 [0]))) ObjectCommands.c:383 -1
     (nil))
(jump_insn 36 35 37 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) ObjectCommands.c:383 -1
     (nil)
 -> 41)
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 6 (set (reg:SI 87 [ D.13389 ])
        (const_int 469 [0x1d5])) ObjectCommands.c:384 -1
     (nil))
(jump_insn 39 38 40 6 (set (pc)
        (label_ref:DI 112)) ObjectCommands.c:384 654 {jump}
     (nil)
 -> 112)
(barrier 40 39 41)
(code_label 41 40 42 7 57 "" [1 uses])
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 7 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -824 [0xfffffffffffffcc8])) [0 object+0 S8 A64])) ObjectCommands.c:388 -1
     (nil))
(insn 44 43 45 7 (parallel [
            (set (reg/f:DI 94 [ D.13394 ])
                (plus:DI (reg/f:DI 112)
                    (const_int 1756 [0x6dc])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:388 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -824 [0xfffffffffffffcc8])) [0 object+0 S8 A64])
            (const_int 1756 [0x6dc]))
        (nil)))
(insn 45 44 46 7 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -824 [0xfffffffffffffcc8])) [0 object+0 S8 A64])) ObjectCommands.c:389 -1
     (nil))
(insn 46 45 47 7 (set (reg:HI 95 [ D.13392 ])
        (mem/j:HI (plus:DI (reg/f:DI 113)
                (const_int 6 [0x6])) [0 object_7->publicArea.nameAlg+0 S2 A16])) ObjectCommands.c:389 -1
     (nil))
(insn 47 46 48 7 (set (reg:SI 96 [ D.13391 ])
        (zero_extend:SI (reg:HI 95 [ D.13392 ]))) ObjectCommands.c:388 -1
     (nil))
(insn 48 47 49 7 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -840 [0xfffffffffffffcb8])) [0 in+0 S8 A64])) ObjectCommands.c:388 -1
     (nil))
(insn 49 48 50 7 (set (reg:SI 97 [ D.13390 ])
        (mem/j:SI (plus:DI (reg/f:DI 114)
                (const_int 4 [0x4])) [0 in_4(D)->parentHandle+0 S4 A32])) ObjectCommands.c:388 -1
     (nil))
(insn 50 49 51 7 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:388 -1
     (nil))
(insn 51 50 52 7 (set (reg:DI 2 cx)
        (reg:DI 115)) ObjectCommands.c:388 -1
     (nil))
(insn 52 51 53 7 (set (reg:DI 1 dx)
        (reg/f:DI 94 [ D.13394 ])) ObjectCommands.c:388 -1
     (nil))
(insn 53 52 54 7 (set (reg:SI 4 si)
        (reg:SI 96 [ D.13391 ])) ObjectCommands.c:388 -1
     (nil))
(insn 54 53 55 7 (set (reg:SI 5 di)
        (reg:SI 97 [ D.13390 ])) ObjectCommands.c:388 -1
     (nil))
(call_insn 55 54 56 7 (call (mem:QI (symbol_ref:DI ("ComputeQualifiedName") [flags 0x41]  <function_decl 0x7fcb4791a360 ComputeQualifiedName>) [0 ComputeQualifiedName S1 A8])
        (const_int 0 [0])) ObjectCommands.c:388 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 56 55 57 7 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -824 [0xfffffffffffffcc8])) [0 object+0 S8 A64])) ObjectCommands.c:391 -1
     (nil))
(insn 57 56 58 7 (parallel [
            (set (reg/f:DI 98 [ D.13395 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 1696 [0x6a0])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:391 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -824 [0xfffffffffffffcc8])) [0 object+0 S8 A64])
            (const_int 1696 [0x6a0]))
        (nil)))
(insn 58 57 59 7 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:391 -1
     (nil))
(insn 59 58 60 7 (set (reg:DI 4 si)
        (reg:DI 117)) ObjectCommands.c:391 -1
     (nil))
(insn 60 59 61 7 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.13395 ])) ObjectCommands.c:391 -1
     (nil))
(call_insn 61 60 62 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("MemoryEqual2B") [flags 0x41]  <function_decl 0x7fcb479e2798 MemoryEqual2B>) [0 MemoryEqual2B S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:391 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 62 61 63 7 (set (reg:SI 99 [ D.13391 ])
        (reg:SI 0 ax)) ObjectCommands.c:391 -1
     (nil))
(insn 63 62 64 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.13391 ])
            (const_int 0 [0]))) ObjectCommands.c:391 -1
     (nil))
(jump_insn 64 63 65 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) ObjectCommands.c:391 -1
     (nil)
 -> 69)
(note 65 64 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 8 (set (reg:SI 87 [ D.13389 ])
        (const_int 650 [0x28a])) ObjectCommands.c:392 -1
     (nil))
(jump_insn 67 66 68 8 (set (pc)
        (label_ref:DI 112)) ObjectCommands.c:392 654 {jump}
     (nil)
 -> 112)
(barrier 68 67 69)
(code_label 69 68 70 9 58 "" [1 uses])
(note 70 69 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 9 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -824 [0xfffffffffffffcc8])) [0 object+0 S8 A64])) ObjectCommands.c:395 -1
     (nil))
(insn 72 71 73 9 (parallel [
            (set (reg/f:DI 119)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -752 [0xfffffffffffffd10])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:395 -1
     (nil))
(insn 73 72 74 9 (parallel [
            (set (reg/f:DI 120)
                (plus:DI (reg/f:DI 118)
                    (const_int 344 [0x158])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:395 -1
     (nil))
(insn 74 73 75 9 (set (reg:DI 121)
        (const_int 93 [0x5d])) ObjectCommands.c:395 -1
     (nil))
(insn 75 74 76 9 (parallel [
            (set (reg:DI 121)
                (const_int 0 [0]))
            (set (reg/f:DI 119)
                (plus:DI (ashift:DI (reg:DI 121)
                        (const_int 3 [0x3]))
                    (reg/f:DI 119)))
            (set (reg/f:DI 120)
                (plus:DI (ashift:DI (reg:DI 121)
                        (const_int 3 [0x3]))
                    (reg/f:DI 120)))
            (set (mem/c:BLK (reg/f:DI 119) [0 sensitive+0 S744 A64])
                (mem/j:BLK (reg/f:DI 120) [0 object_7->sensitive+0 S744 A64]))
            (use (reg:DI 121))
        ]) ObjectCommands.c:395 -1
     (nil))
(insn 76 75 77 9 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -840 [0xfffffffffffffcb8])) [0 in+0 S8 A64])) ObjectCommands.c:396 -1
     (nil))
(insn 77 76 78 9 (set (reg:DI 123)
        (mem/j:DI (plus:DI (reg/f:DI 122)
                (const_int 8 [0x8])) [0 in_4(D)->newAuth+0 S8 A32])) ObjectCommands.c:396 -1
     (nil))
(insn 78 77 79 9 (set (mem/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -750 [0xfffffffffffffd12])) [0 sensitive.authValue+0 S8 A16])
        (reg:DI 123)) ObjectCommands.c:396 -1
     (nil))
(insn 79 78 80 9 (set (reg:DI 124)
        (mem/j:DI (plus:DI (reg/f:DI 122)
                (const_int 16 [0x10])) [0 in_4(D)->newAuth+8 S8 A32])) ObjectCommands.c:396 -1
     (nil))
(insn 80 79 81 9 (set (mem/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -742 [0xfffffffffffffd1a])) [0 sensitive.authValue+8 S8 A16])
        (reg:DI 124)) ObjectCommands.c:396 -1
     (nil))
(insn 81 80 82 9 (set (reg:DI 125)
        (mem/j:DI (plus:DI (reg/f:DI 122)
                (const_int 24 [0x18])) [0 in_4(D)->newAuth+16 S8 A32])) ObjectCommands.c:396 -1
     (nil))
(insn 82 81 83 9 (set (mem/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -734 [0xfffffffffffffd22])) [0 sensitive.authValue+16 S8 A16])
        (reg:DI 125)) ObjectCommands.c:396 -1
     (nil))
(insn 83 82 84 9 (set (reg:DI 126)
        (mem/j:DI (plus:DI (reg/f:DI 122)
                (const_int 32 [0x20])) [0 in_4(D)->newAuth+24 S8 A32])) ObjectCommands.c:396 -1
     (nil))
(insn 84 83 85 9 (set (mem/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -726 [0xfffffffffffffd2a])) [0 sensitive.authValue+24 S8 A16])
        (reg:DI 126)) ObjectCommands.c:396 -1
     (nil))
(insn 85 84 86 9 (set (reg:DI 127)
        (mem/j:DI (plus:DI (reg/f:DI 122)
                (const_int 40 [0x28])) [0 in_4(D)->newAuth+32 S8 A32])) ObjectCommands.c:396 -1
     (nil))
(insn 86 85 87 9 (set (mem/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -718 [0xfffffffffffffd32])) [0 sensitive.authValue+32 S8 A16])
        (reg:DI 127)) ObjectCommands.c:396 -1
     (nil))
(insn 87 86 88 9 (set (reg:DI 128)
        (mem/j:DI (plus:DI (reg/f:DI 122)
                (const_int 48 [0x30])) [0 in_4(D)->newAuth+40 S8 A32])) ObjectCommands.c:396 -1
     (nil))
(insn 88 87 89 9 (set (mem/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -710 [0xfffffffffffffd3a])) [0 sensitive.authValue+40 S8 A16])
        (reg:DI 128)) ObjectCommands.c:396 -1
     (nil))
(insn 89 88 90 9 (set (reg:HI 129)
        (mem/j:HI (plus:DI (reg/f:DI 122)
                (const_int 56 [0x38])) [0 in_4(D)->newAuth+48 S2 A32])) ObjectCommands.c:396 -1
     (nil))
(insn 90 89 91 9 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -702 [0xfffffffffffffd42])) [0 sensitive.authValue+48 S2 A16])
        (reg:HI 129)) ObjectCommands.c:396 -1
     (nil))
(insn 91 90 92 9 (set (reg/f:DI 100 [ D.13396 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -848 [0xfffffffffffffcb0])) [0 out+0 S8 A64])) ObjectCommands.c:398 -1
     (nil))
(insn 92 91 93 9 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -824 [0xfffffffffffffcc8])) [0 object+0 S8 A64])) ObjectCommands.c:399 -1
     (nil))
(insn 93 92 94 9 (set (reg:HI 101 [ D.13392 ])
        (mem/j:HI (plus:DI (reg/f:DI 130)
                (const_int 6 [0x6])) [0 object_7->publicArea.nameAlg+0 S2 A16])) ObjectCommands.c:399 -1
     (nil))
(insn 94 93 95 9 (set (reg:SI 102 [ D.13391 ])
        (zero_extend:SI (reg:HI 101 [ D.13392 ]))) ObjectCommands.c:398 -1
     (nil))
(insn 95 94 96 9 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -840 [0xfffffffffffffcb8])) [0 in+0 S8 A64])) ObjectCommands.c:398 -1
     (nil))
(insn 96 95 97 9 (set (reg:SI 103 [ D.13390 ])
        (mem/j:SI (plus:DI (reg/f:DI 131)
                (const_int 4 [0x4])) [0 in_4(D)->parentHandle+0 S4 A32])) ObjectCommands.c:398 -1
     (nil))
(insn 97 96 98 9 (set (reg:SI 5 di)
        (reg:SI 103 [ D.13390 ])) ObjectCommands.c:398 -1
     (nil))
(call_insn 98 97 99 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7fcb479140d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:398 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 99 98 100 9 (set (reg/f:DI 104 [ D.13397 ])
        (reg:DI 0 ax)) ObjectCommands.c:398 -1
     (nil))
(insn 100 99 101 9 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -824 [0xfffffffffffffcc8])) [0 object+0 S8 A64])) ObjectCommands.c:398 -1
     (nil))
(insn 101 100 102 9 (parallel [
            (set (reg/f:DI 105 [ D.13395 ])
                (plus:DI (reg/f:DI 132)
                    (const_int 1756 [0x6dc])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:398 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -824 [0xfffffffffffffcc8])) [0 object+0 S8 A64])
            (const_int 1756 [0x6dc]))
        (nil)))
(insn 102 101 103 9 (parallel [
            (set (reg:DI 133)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -752 [0xfffffffffffffd10])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:398 -1
     (nil))
(insn 103 102 104 9 (set (reg:DI 37 r8)
        (reg/f:DI 100 [ D.13396 ])) ObjectCommands.c:398 -1
     (nil))
(insn 104 103 105 9 (set (reg:SI 2 cx)
        (reg:SI 102 [ D.13391 ])) ObjectCommands.c:398 -1
     (nil))
(insn 105 104 106 9 (set (reg:DI 1 dx)
        (reg/f:DI 104 [ D.13397 ])) ObjectCommands.c:398 -1
     (nil))
(insn 106 105 107 9 (set (reg:DI 4 si)
        (reg/f:DI 105 [ D.13395 ])) ObjectCommands.c:398 -1
     (nil))
(insn 107 106 108 9 (set (reg:DI 5 di)
        (reg:DI 133)) ObjectCommands.c:398 -1
     (nil))
(call_insn 108 107 109 9 (call (mem:QI (symbol_ref:DI ("SensitiveToPrivate") [flags 0x41]  <function_decl 0x7fcb47920438 SensitiveToPrivate>) [0 SensitiveToPrivate S1 A8])
        (const_int 0 [0])) ObjectCommands.c:398 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 109 108 112 9 (set (reg:SI 87 [ D.13389 ])
        (const_int 0 [0])) ObjectCommands.c:401 -1
     (nil))
(code_label 112 109 113 11 59 "" [3 uses])
(note 113 112 114 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 118 11 (set (reg:SI 106 [ <retval> ])
        (reg:SI 87 [ D.13389 ])) -1
     (nil))
(insn 118 114 119 11 (set (reg/i:SI 0 ax)
        (reg:SI 106 [ <retval> ])) ObjectCommands.c:402 -1
     (nil))
(insn 119 118 120 11 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13398+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) ObjectCommands.c:402 -1
     (nil))
(jump_insn 120 119 126 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) ObjectCommands.c:402 -1
     (nil)
 -> 123)
(note 126 120 121 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(call_insn 121 126 122 13 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fcb47ab06c0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ObjectCommands.c:402 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 122 121 123)
(code_label 123 122 127 14 60 "" [1 uses])
(note 127 123 124 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 124 127 0 14 (use (reg/i:SI 0 ax)) ObjectCommands.c:402 -1
     (nil))

;; Function TPM2_CreateLoaded (TPM2_CreateLoaded, funcdef_no=10, decl_uid=13014, cgraph_uid=10, symbol_order=10)

Partition 7: size 96 align 16
	randState
Partition 8: size 68 align 16
	labelContext
Partition 9: size 54 align 16
	name
Partition 6: size 8 align 8
	scheme_39
Partition 5: size 8 align 8
	publicArea_28
Partition 4: size 8 align 8
	newObject_26
Partition 2: size 8 align 8
	parent_13
Partition 0: size 8 align 8
	rand_1
Partition 3: size 4 align 4
	derivation_19
Partition 1: size 4 align 4
	result_8

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 48 from 44 to 45.
Redirecting jump 61 from 44 to 45.
Redirecting jump 88 from 44 to 45.
Redirecting jump 105 from 44 to 45.
Redirecting jump 142 from 44 to 45.
Redirecting jump 153 from 44 to 45.
Redirecting jump 172 from 44 to 45.
Redirecting jump 188 from 44 to 45.
Redirecting jump 239 from 44 to 45.
Redirecting jump 308 from 44 to 45.
Merging block 44 into block 43...
Merged blocks 43 and 44.
Merged 43 and 44 without moving.
Removing jump 396.
Merging block 46 into block 45...
Merged blocks 45 and 46.
Merged 45 and 46 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) ObjectCommands.c:412 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -320 [0xfffffffffffffec0])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) ObjectCommands.c:412 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13415+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:412 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])
        (const_int 0 [0])) ObjectCommands.c:413 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 in+0 S8 A64])) ObjectCommands.c:414 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 89 [ D.13401 ])
        (mem/j:SI (reg/f:DI 128) [0 in_10(D)->parentHandle+0 S4 A32])) ObjectCommands.c:414 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (reg:SI 89 [ D.13401 ])) ObjectCommands.c:414 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7fcb479140d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:414 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 129)
        (reg:DI 0 ax)) ObjectCommands.c:414 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 parent+0 S8 A64])
        (reg:DI 129)) ObjectCommands.c:414 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:419 -1
     (nil))
(insn 16 15 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 rand+0 S8 A64])
        (reg:DI 130)) ObjectCommands.c:419 -1
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 parent+0 S8 A64])
            (const_int 0 [0]))) ObjectCommands.c:424 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ObjectCommands.c:424 -1
     (nil)
 -> 29)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 parent+0 S8 A64])) ObjectCommands.c:424 -1
     (nil))
(insn 21 20 22 4 (set (reg:QI 90 [ D.13402 ])
        (mem:QI (plus:DI (reg/f:DI 131)
                (const_int 2 [0x2])) [0 *parent_13+2 S1 A16])) ObjectCommands.c:424 -1
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:QI 91 [ D.13402 ])
                (and:QI (reg:QI 90 [ D.13402 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:424 -1
     (nil))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 91 [ D.13402 ])
            (const_int 0 [0]))) ObjectCommands.c:424 -1
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ObjectCommands.c:424 -1
     (nil)
 -> 29)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:SI 87 [ D.13399 ])
        (const_int 1 [0x1])) ObjectCommands.c:424 -1
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (label_ref 32)) ObjectCommands.c:424 -1
     (nil)
 -> 32)
(barrier 28 27 29)
(code_label 29 28 30 6 62 "" [2 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg:SI 87 [ D.13399 ])
        (const_int 0 [0])) ObjectCommands.c:424 -1
     (nil))
(code_label 32 31 33 7 63 "" [1 uses])
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -300 [0xfffffffffffffed4])) [0 derivation+0 S4 A32])
        (reg:SI 87 [ D.13399 ])) ObjectCommands.c:424 -1
     (nil))
(insn 35 34 36 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 parent+0 S8 A64])
            (const_int 0 [0]))) ObjectCommands.c:427 -1
     (nil))
(jump_insn 36 35 37 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) ObjectCommands.c:427 -1
     (nil)
 -> 50)
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 parent+0 S8 A64])) ObjectCommands.c:427 -1
     (nil))
(insn 39 38 40 8 (set (reg:QI 92 [ D.13402 ])
        (mem:QI (plus:DI (reg/f:DI 132)
                (const_int 1 [0x1])) [0 *parent_13+1 S1 A8])) ObjectCommands.c:427 -1
     (nil))
(insn 40 39 41 8 (parallel [
            (set (reg:QI 93 [ D.13402 ])
                (and:QI (reg:QI 92 [ D.13402 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:427 -1
     (nil))
(insn 41 40 42 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ D.13402 ])
            (const_int 0 [0]))) ObjectCommands.c:427 -1
     (nil))
(jump_insn 42 41 43 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) ObjectCommands.c:427 -1
     (nil)
 -> 50)
(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -300 [0xfffffffffffffed4])) [0 derivation+0 S4 A32])
            (const_int 0 [0]))) ObjectCommands.c:427 -1
     (nil))
(jump_insn 45 44 46 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) ObjectCommands.c:427 -1
     (nil)
 -> 50)
(note 46 45 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 10 (set (reg:SI 88 [ D.13400 ])
        (const_int 394 [0x18a])) ObjectCommands.c:428 -1
     (nil))
(jump_insn 48 47 49 10 (set (pc)
        (label_ref:DI 393)) ObjectCommands.c:428 654 {jump}
     (nil)
 -> 393)
(barrier 49 48 50)
(code_label 50 49 51 11 64 "" [3 uses])
(note 51 50 52 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 11 (set (reg/f:DI 94 [ D.13403 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -320 [0xfffffffffffffec0])) [0 out+0 S8 A64])) ObjectCommands.c:430 -1
     (nil))
(insn 53 52 54 11 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.13403 ])) ObjectCommands.c:430 -1
     (nil))
(call_insn 54 53 55 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("FindEmptyObjectSlot") [flags 0x41]  <function_decl 0x7fcb479145e8 FindEmptyObjectSlot>) [0 FindEmptyObjectSlot S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:430 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 55 54 56 11 (set (reg:DI 133)
        (reg:DI 0 ax)) ObjectCommands.c:430 -1
     (nil))
(insn 56 55 57 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [0 newObject+0 S8 A64])
        (reg:DI 133)) ObjectCommands.c:430 -1
     (nil))
(insn 57 56 58 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -280 [0xfffffffffffffee8])) [0 newObject+0 S8 A64])
            (const_int 0 [0]))) ObjectCommands.c:431 -1
     (nil))
(jump_insn 58 57 59 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) ObjectCommands.c:431 -1
     (nil)
 -> 63)
(note 59 58 60 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 12 (set (reg:SI 88 [ D.13400 ])
        (const_int 2306 [0x902])) ObjectCommands.c:432 -1
     (nil))
(jump_insn 61 60 62 12 (set (pc)
        (label_ref:DI 393)) ObjectCommands.c:432 654 {jump}
     (nil)
 -> 393)
(barrier 62 61 63)
(code_label 63 62 64 13 66 "" [1 uses])
(note 64 63 68 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 68 64 69 13 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [0 newObject+0 S8 A64])) ObjectCommands.c:434 -1
     (nil))
(insn 69 68 70 13 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/f:DI 137)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:434 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -280 [0xfffffffffffffee8])) [0 newObject+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 70 69 71 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 publicArea+0 S8 A64])
        (reg:DI 136)) ObjectCommands.c:434 -1
     (nil))
(insn 71 70 72 13 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 in+0 S8 A64])) ObjectCommands.c:443 -1
     (nil))
(insn 72 71 73 13 (parallel [
            (set (reg/f:DI 95 [ D.13404 ])
                (plus:DI (reg/f:DI 138)
                    (const_int 186 [0xba])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:443 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -312 [0xfffffffffffffec8])) [0 in+0 S8 A64])
            (const_int 186 [0xba]))
        (nil)))
(insn 73 72 74 13 (parallel [
            (set (reg:DI 139)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:443 -1
     (nil))
(insn 74 73 75 13 (set (reg:SI 140)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -300 [0xfffffffffffffed4])) [0 derivation+0 S4 A32])) ObjectCommands.c:443 -1
     (nil))
(insn 75 74 76 13 (set (reg:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 publicArea+0 S8 A64])) ObjectCommands.c:443 -1
     (nil))
(insn 76 75 77 13 (set (reg:DI 2 cx)
        (reg:DI 139)) ObjectCommands.c:443 -1
     (nil))
(insn 77 76 78 13 (set (reg:SI 1 dx)
        (reg:SI 140)) ObjectCommands.c:443 -1
     (nil))
(insn 78 77 79 13 (set (reg:DI 4 si)
        (reg/f:DI 95 [ D.13404 ])) ObjectCommands.c:443 -1
     (nil))
(insn 79 78 80 13 (set (reg:DI 5 di)
        (reg:DI 141)) ObjectCommands.c:443 -1
     (nil))
(call_insn 80 79 81 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UnmarshalToPublic") [flags 0x41]  <function_decl 0x7fcb47920af8 UnmarshalToPublic>) [0 UnmarshalToPublic S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:443 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 81 80 82 13 (set (reg:SI 142)
        (reg:SI 0 ax)) ObjectCommands.c:443 -1
     (nil))
(insn 82 81 83 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])
        (reg:SI 142)) ObjectCommands.c:443 -1
     (nil))
(insn 83 82 84 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ObjectCommands.c:445 -1
     (nil))
(jump_insn 84 83 85 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) ObjectCommands.c:445 -1
     (nil)
 -> 90)
(note 85 84 86 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 14 (set (reg:SI 143)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])) ObjectCommands.c:446 -1
     (nil))
(insn 87 86 88 14 (parallel [
            (set (reg:SI 88 [ D.13400 ])
                (plus:SI (reg:SI 143)
                    (const_int 576 [0x240])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:446 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])
            (const_int 576 [0x240]))
        (nil)))
(jump_insn 88 87 89 14 (set (pc)
        (label_ref:DI 393)) ObjectCommands.c:446 654 {jump}
     (nil)
 -> 393)
(barrier 89 88 90)
(code_label 90 89 91 15 67 "" [1 uses])
(note 91 90 92 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 15 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 publicArea+0 S8 A64])) ObjectCommands.c:448 -1
     (nil))
(insn 93 92 94 15 (set (reg:HI 96 [ D.13405 ])
        (mem/j:HI (plus:DI (reg/f:DI 144)
                (const_int 2 [0x2])) [0 publicArea_28->nameAlg+0 S2 A16])) ObjectCommands.c:448 -1
     (nil))
(insn 94 93 95 15 (set (reg:SI 97 [ D.13399 ])
        (zero_extend:SI (reg:HI 96 [ D.13405 ]))) ObjectCommands.c:448 -1
     (nil))
(insn 95 94 96 15 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 in+0 S8 A64])) ObjectCommands.c:448 -1
     (nil))
(insn 96 95 97 15 (parallel [
            (set (reg/f:DI 98 [ D.13406 ])
                (plus:DI (reg/f:DI 145)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:448 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -312 [0xfffffffffffffec8])) [0 in+0 S8 A64])
            (const_int 6 [0x6]))
        (nil)))
(insn 97 96 98 15 (set (reg:SI 4 si)
        (reg:SI 97 [ D.13399 ])) ObjectCommands.c:448 -1
     (nil))
(insn 98 97 99 15 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.13406 ])) ObjectCommands.c:448 -1
     (nil))
(call_insn 99 98 100 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("AdjustAuthSize") [flags 0x41]  <function_decl 0x7fcb4791abd0 AdjustAuthSize>) [0 AdjustAuthSize S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:448 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 100 99 101 15 (set (reg:SI 99 [ D.13399 ])
        (reg:SI 0 ax)) ObjectCommands.c:448 -1
     (nil))
(insn 101 100 102 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.13399 ])
            (const_int 0 [0]))) ObjectCommands.c:448 -1
     (nil))
(jump_insn 102 101 103 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) ObjectCommands.c:448 -1
     (nil)
 -> 107)
(note 103 102 104 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 16 (set (reg:SI 88 [ D.13400 ])
        (const_int 469 [0x1d5])) ObjectCommands.c:449 -1
     (nil))
(jump_insn 105 104 106 16 (set (pc)
        (label_ref:DI 393)) ObjectCommands.c:449 654 {jump}
     (nil)
 -> 393)
(barrier 106 105 107)
(code_label 107 106 108 17 68 "" [1 uses])
(note 108 107 109 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -300 [0xfffffffffffffed4])) [0 derivation+0 S4 A32])
            (const_int 0 [0]))) ObjectCommands.c:451 -1
     (nil))
(jump_insn 110 109 111 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 218)
            (pc))) ObjectCommands.c:451 -1
     (nil)
 -> 218)
(note 111 110 115 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 115 111 116 18 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 parent+0 S8 A64])) ObjectCommands.c:454 -1
     (nil))
(insn 116 115 117 18 (parallel [
            (set (reg:DI 148)
                (plus:DI (reg/f:DI 149)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:454 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 parent+0 S8 A64])
            (const_int 64 [0x40]))
        (nil)))
(insn 117 116 118 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 scheme+0 S8 A64])
        (reg:DI 148)) ObjectCommands.c:454 -1
     (nil))
(insn 118 117 119 18 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 scheme+0 S8 A64])) ObjectCommands.c:457 -1
     (nil))
(insn 119 118 120 18 (set (reg:HI 100 [ D.13405 ])
        (mem/j:HI (plus:DI (reg/f:DI 150)
                (const_int 2 [0x2])) [0 scheme_39->details.xorr.hashAlg+0 S2 A16])) ObjectCommands.c:457 -1
     (nil))
(insn 120 119 121 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 100 [ D.13405 ])
            (const_int 16 [0x10]))) ObjectCommands.c:457 -1
     (nil))
(jump_insn 121 120 122 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) ObjectCommands.c:457 -1
     (nil)
 -> 127)
(note 122 121 123 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 19 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 scheme+0 S8 A64])) ObjectCommands.c:457 -1
     (nil))
(insn 124 123 125 19 (set (reg:HI 101 [ D.13405 ])
        (mem/j:HI (plus:DI (reg/f:DI 151)
                (const_int 4 [0x4])) [0 scheme_39->details.xorr.kdf+0 S2 A16])) ObjectCommands.c:457 -1
     (nil))
(insn 125 124 126 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 101 [ D.13405 ])
            (const_int 34 [0x22]))) ObjectCommands.c:457 -1
     (nil))
(jump_insn 126 125 127 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 134)
            (pc))) ObjectCommands.c:457 -1
     (nil)
 -> 134)
(code_label 127 126 128 20 70 "" [1 uses])
(note 128 127 129 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 20 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) ObjectCommands.c:457 -1
     (nil))
(insn 130 129 131 20 (set (reg:SI 4 si)
        (const_int 458 [0x1ca])) ObjectCommands.c:457 -1
     (nil))
(insn 131 130 132 20 (set (reg:DI 5 di)
        (const_int 0 [0])) ObjectCommands.c:457 -1
     (nil))
(call_insn 132 131 133 20 (call (mem:QI (symbol_ref:DI ("TpmFail") [flags 0x41]  <function_decl 0x7fcb479470d8 TpmFail>) [0 TpmFail S1 A8])
        (const_int 0 [0])) ObjectCommands.c:457 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 133 132 134)
(code_label 134 133 135 21 71 "" [1 uses])
(note 135 134 136 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 21 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 publicArea+0 S8 A64])) ObjectCommands.c:460 -1
     (nil))
(insn 137 136 138 21 (set (reg:HI 102 [ D.13405 ])
        (mem/j:HI (reg/f:DI 152) [0 publicArea_28->type+0 S2 A32])) ObjectCommands.c:460 -1
     (nil))
(insn 138 137 139 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 102 [ D.13405 ])
            (const_int 1 [0x1]))) ObjectCommands.c:460 -1
     (nil))
(jump_insn 139 138 140 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) ObjectCommands.c:460 -1
     (nil)
 -> 144)
(note 140 139 141 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 22 (set (reg:SI 88 [ D.13400 ])
        (const_int 714 [0x2ca])) ObjectCommands.c:461 -1
     (nil))
(jump_insn 142 141 143 22 (set (pc)
        (label_ref:DI 393)) ObjectCommands.c:461 654 {jump}
     (nil)
 -> 393)
(barrier 143 142 144)
(code_label 144 143 145 23 72 "" [1 uses])
(note 145 144 146 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 23 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 publicArea+0 S8 A64])) ObjectCommands.c:464 -1
     (nil))
(insn 147 146 148 23 (set (reg:SI 103 [ D.13401 ])
        (mem/j:SI (plus:DI (reg/f:DI 153)
                (const_int 4 [0x4])) [0 publicArea_28->objectAttributes+0 S4 A32])) ObjectCommands.c:464 -1
     (nil))
(insn 148 147 149 23 (parallel [
            (set (reg:SI 104 [ D.13401 ])
                (and:SI (reg:SI 103 [ D.13401 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:464 -1
     (nil))
(insn 149 148 150 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.13401 ])
            (const_int 0 [0]))) ObjectCommands.c:464 -1
     (nil))
(jump_insn 150 149 151 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 155)
            (pc))) ObjectCommands.c:464 -1
     (nil)
 -> 155)
(note 151 150 152 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 24 (set (reg:SI 88 [ D.13400 ])
        (const_int 130 [0x82])) ObjectCommands.c:466 -1
     (nil))
(jump_insn 153 152 154 24 (set (pc)
        (label_ref:DI 393)) ObjectCommands.c:466 654 {jump}
     (nil)
 -> 393)
(barrier 154 153 155)
(code_label 155 154 156 25 73 "" [1 uses])
(note 156 155 157 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 25 (set (reg:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 publicArea+0 S8 A64])) ObjectCommands.c:468 -1
     (nil))
(insn 158 157 159 25 (set (reg:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 parent+0 S8 A64])) ObjectCommands.c:468 -1
     (nil))
(insn 159 158 160 25 (set (reg:DI 4 si)
        (reg:DI 154)) ObjectCommands.c:468 -1
     (nil))
(insn 160 159 161 25 (set (reg:DI 5 di)
        (reg:DI 155)) ObjectCommands.c:468 -1
     (nil))
(call_insn 161 160 162 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PublicAttributesValidation") [flags 0x41]  <function_decl 0x7fcb47920000 PublicAttributesValidation>) [0 PublicAttributesValidation S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:468 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 162 161 163 25 (set (reg:SI 156)
        (reg:SI 0 ax)) ObjectCommands.c:468 -1
     (nil))
(insn 163 162 164 25 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])
        (reg:SI 156)) ObjectCommands.c:468 -1
     (nil))
(insn 164 163 165 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ObjectCommands.c:469 -1
     (nil))
(jump_insn 165 164 166 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) ObjectCommands.c:469 -1
     (nil)
 -> 174)
(note 166 165 167 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 26 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])) ObjectCommands.c:470 -1
     (nil))
(insn 168 167 169 26 (set (reg:SI 4 si)
        (const_int 576 [0x240])) ObjectCommands.c:470 -1
     (nil))
(insn 169 168 170 26 (set (reg:SI 5 di)
        (reg:SI 157)) ObjectCommands.c:470 -1
     (nil))
(call_insn 170 169 171 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("RcSafeAddToResult") [flags 0x41]  <function_decl 0x7fcb479e9000 RcSafeAddToResult>) [0 RcSafeAddToResult S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:470 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 171 170 172 26 (set (reg:SI 88 [ D.13400 ])
        (reg:SI 0 ax)) ObjectCommands.c:470 -1
     (nil))
(jump_insn 172 171 173 26 (set (pc)
        (label_ref:DI 393)) ObjectCommands.c:470 654 {jump}
     (nil)
 -> 393)
(barrier 173 172 174)
(code_label 174 173 175 27 74 "" [1 uses])
(note 175 174 176 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 27 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 in+0 S8 A64])) ObjectCommands.c:473 -1
     (nil))
(insn 177 176 178 27 (parallel [
            (set (reg/f:DI 105 [ D.13407 ])
                (plus:DI (reg/f:DI 158)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:473 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -312 [0xfffffffffffffec8])) [0 in+0 S8 A64])
            (const_int 56 [0x38]))
        (nil)))
(insn 178 177 179 27 (parallel [
            (set (reg:DI 159)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:473 -1
     (nil))
(insn 179 178 180 27 (set (reg:DI 4 si)
        (reg/f:DI 105 [ D.13407 ])) ObjectCommands.c:473 -1
     (nil))
(insn 180 179 181 27 (set (reg:DI 5 di)
        (reg:DI 159)) ObjectCommands.c:473 -1
     (nil))
(call_insn 181 180 182 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SetLabelAndContext") [flags 0x41]  <function_decl 0x7fcb47920a20 SetLabelAndContext>) [0 SetLabelAndContext S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:473 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 182 181 183 27 (set (reg:SI 160)
        (reg:SI 0 ax)) ObjectCommands.c:473 -1
     (nil))
(insn 183 182 184 27 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])
        (reg:SI 160)) ObjectCommands.c:473 -1
     (nil))
(insn 184 183 185 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ObjectCommands.c:474 -1
     (nil))
(jump_insn 185 184 186 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) ObjectCommands.c:474 -1
     (nil)
 -> 190)
(note 186 185 187 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 188 28 (set (reg:SI 88 [ D.13400 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])) ObjectCommands.c:475 -1
     (nil))
(jump_insn 188 187 189 28 (set (pc)
        (label_ref:DI 393)) ObjectCommands.c:475 654 {jump}
     (nil)
 -> 393)
(barrier 189 188 190)
(code_label 190 189 191 29 75 "" [1 uses])
(note 191 190 192 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 29 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 parent+0 S8 A64])) ObjectCommands.c:477 -1
     (nil))
(insn 193 192 194 29 (parallel [
            (set (reg/f:DI 106 [ D.13408 ])
                (plus:DI (reg/f:DI 161)
                    (const_int 446 [0x1be])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:477 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 parent+0 S8 A64])
            (const_int 446 [0x1be]))
        (nil)))
(insn 194 193 195 29 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 scheme+0 S8 A64])) ObjectCommands.c:479 -1
     (nil))
(insn 195 194 196 29 (set (reg:HI 107 [ D.13405 ])
        (mem/j:HI (plus:DI (reg/f:DI 162)
                (const_int 4 [0x4])) [0 scheme_39->details.xorr.kdf+0 S2 A16])) ObjectCommands.c:479 -1
     (nil))
(insn 196 195 197 29 (set (reg:SI 108 [ D.13399 ])
        (zero_extend:SI (reg:HI 107 [ D.13405 ]))) ObjectCommands.c:477 -1
     (nil))
(insn 197 196 198 29 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 scheme+0 S8 A64])) ObjectCommands.c:478 -1
     (nil))
(insn 198 197 199 29 (set (reg:HI 109 [ D.13405 ])
        (mem/j:HI (plus:DI (reg/f:DI 163)
                (const_int 2 [0x2])) [0 scheme_39->details.xorr.hashAlg+0 S2 A16])) ObjectCommands.c:478 -1
     (nil))
(insn 199 198 200 29 (set (reg:SI 110 [ D.13399 ])
        (zero_extend:SI (reg:HI 109 [ D.13405 ]))) ObjectCommands.c:477 -1
     (nil))
(insn 200 199 201 29 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:477 -1
     (nil))
(insn 201 200 202 29 (parallel [
            (set (reg:DI 165)
                (plus:DI (reg:DI 164)
                    (const_int 34 [0x22])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:477 -1
     (nil))
(insn 202 201 203 29 (parallel [
            (set (reg:DI 166)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:477 -1
     (nil))
(insn 203 202 204 29 (set (reg:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 rand+0 S8 A64])) ObjectCommands.c:477 -1
     (nil))
(insn 204 203 205 29 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:477 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 205 204 206 29 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 8192 [0x2000])) ObjectCommands.c:477 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 206 205 207 29 (set (reg:DI 38 r9)
        (reg:DI 165)) ObjectCommands.c:477 -1
     (nil))
(insn 207 206 208 29 (set (reg:DI 37 r8)
        (reg:DI 166)) ObjectCommands.c:477 -1
     (nil))
(insn 208 207 209 29 (set (reg:DI 2 cx)
        (reg/f:DI 106 [ D.13408 ])) ObjectCommands.c:477 -1
     (nil))
(insn 209 208 210 29 (set (reg:SI 1 dx)
        (reg:SI 108 [ D.13399 ])) ObjectCommands.c:477 -1
     (nil))
(insn 210 209 211 29 (set (reg:SI 4 si)
        (reg:SI 110 [ D.13399 ])) ObjectCommands.c:477 -1
     (nil))
(insn 211 210 212 29 (set (reg:DI 5 di)
        (reg:DI 167)) ObjectCommands.c:477 -1
     (nil))
(call_insn 212 211 213 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("DRBG_InstantiateSeededKdf") [flags 0x41]  <function_decl 0x7fcb47a0d6c0 DRBG_InstantiateSeededKdf>) [0 DRBG_InstantiateSeededKdf S1 A8])
            (const_int 16 [0x10]))) ObjectCommands.c:477 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 213 212 214 29 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:477 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 214 213 215 29 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 in+0 S8 A64])) ObjectCommands.c:486 -1
     (nil))
(insn 215 214 216 29 (set (mem/j:HI (plus:DI (reg/f:DI 168)
                (const_int 56 [0x38])) [0 in_10(D)->inSensitive.sensitive.data.t.size+0 S2 A32])
        (const_int 0 [0])) ObjectCommands.c:486 -1
     (nil))
(jump_insn 216 215 217 29 (set (pc)
        (label_ref 292)) -1
     (nil)
 -> 292)
(barrier 217 216 218)
(code_label 218 217 219 30 69 "" [1 uses])
(note 219 218 220 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 30 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 in+0 S8 A64])) ObjectCommands.c:494 -1
     (nil))
(insn 221 220 222 30 (set (reg:HI 111 [ D.13405 ])
        (mem/j:HI (plus:DI (reg/f:DI 169)
                (const_int 56 [0x38])) [0 in_10(D)->inSensitive.sensitive.data.t.size+0 S2 A32])) ObjectCommands.c:494 -1
     (nil))
(insn 222 221 223 30 (set (reg:SI 112 [ D.13399 ])
        (zero_extend:SI (reg:HI 111 [ D.13405 ]))) ObjectCommands.c:493 -1
     (nil))
(insn 223 222 224 30 (set (reg:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 publicArea+0 S8 A64])) ObjectCommands.c:493 -1
     (nil))
(insn 224 223 225 30 (set (reg:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 parent+0 S8 A64])) ObjectCommands.c:493 -1
     (nil))
(insn 225 224 226 30 (set (reg:SI 1 dx)
        (reg:SI 112 [ D.13399 ])) ObjectCommands.c:493 -1
     (nil))
(insn 226 225 227 30 (set (reg:DI 4 si)
        (reg:DI 170)) ObjectCommands.c:493 -1
     (nil))
(insn 227 226 228 30 (set (reg:DI 5 di)
        (reg:DI 171)) ObjectCommands.c:493 -1
     (nil))
(call_insn 228 227 229 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CreateChecks") [flags 0x41]  <function_decl 0x7fcb4791ad80 CreateChecks>) [0 CreateChecks S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:493 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 229 228 230 30 (set (reg:SI 172)
        (reg:SI 0 ax)) ObjectCommands.c:493 -1
     (nil))
(insn 230 229 231 30 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])
        (reg:SI 172)) ObjectCommands.c:493 -1
     (nil))
(insn 231 230 232 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ObjectCommands.c:495 -1
     (nil))
(jump_insn 232 231 233 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 241)
            (pc))) ObjectCommands.c:495 -1
     (nil)
 -> 241)
(note 233 232 234 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 31 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])) ObjectCommands.c:496 -1
     (nil))
(insn 235 234 236 31 (set (reg:SI 4 si)
        (const_int 576 [0x240])) ObjectCommands.c:496 -1
     (nil))
(insn 236 235 237 31 (set (reg:SI 5 di)
        (reg:SI 173)) ObjectCommands.c:496 -1
     (nil))
(call_insn 237 236 238 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("RcSafeAddToResult") [flags 0x41]  <function_decl 0x7fcb479e9000 RcSafeAddToResult>) [0 RcSafeAddToResult S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:496 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 238 237 239 31 (set (reg:SI 88 [ D.13400 ])
        (reg:SI 0 ax)) ObjectCommands.c:496 -1
     (nil))
(jump_insn 239 238 240 31 (set (pc)
        (label_ref:DI 393)) ObjectCommands.c:496 654 {jump}
     (nil)
 -> 393)
(barrier 240 239 241)
(code_label 241 240 242 32 77 "" [1 uses])
(note 242 241 243 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 243 242 244 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 parent+0 S8 A64])
            (const_int 0 [0]))) ObjectCommands.c:498 -1
     (nil))
(jump_insn 244 243 245 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 289)
            (pc))) ObjectCommands.c:498 -1
     (nil)
 -> 289)
(note 245 244 246 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 249 33 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [0 newObject+0 S8 A64])) ObjectCommands.c:501 -1
     (nil))
(insn 249 246 250 33 (set (reg:QI 177)
        (mem/j:QI (reg/f:DI 174) [0 newObject_26->attributes.primary+0 S1 A64])) ObjectCommands.c:501 -1
     (nil))
(insn 250 249 251 33 (parallel [
            (set (reg:QI 178)
                (ior:QI (reg:QI 177)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:501 -1
     (nil))
(insn 251 250 252 33 (set (mem/j:QI (reg/f:DI 174) [0 newObject_26->attributes.primary+0 S1 A64])
        (reg:QI 178)) ObjectCommands.c:501 -1
     (nil))
(insn 252 251 253 33 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 in+0 S8 A64])) ObjectCommands.c:502 -1
     (nil))
(insn 253 252 254 33 (set (reg:SI 113 [ D.13401 ])
        (mem/j:SI (reg/f:DI 179) [0 in_10(D)->parentHandle+0 S4 A32])) ObjectCommands.c:502 -1
     (nil))
(insn 254 253 255 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ D.13401 ])
            (const_int 1073741835 [0x4000000b]))) ObjectCommands.c:502 -1
     (nil))
(jump_insn 255 254 256 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) ObjectCommands.c:502 -1
     (nil)
 -> 263)
(note 256 255 257 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 257 256 260 34 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [0 newObject+0 S8 A64])) ObjectCommands.c:503 -1
     (nil))
(insn 260 257 261 34 (set (reg:QI 183)
        (mem/j:QI (reg/f:DI 180) [0 newObject_26->attributes.epsHierarchy+0 S1 A64])) ObjectCommands.c:503 -1
     (nil))
(insn 261 260 262 34 (parallel [
            (set (reg:QI 184)
                (ior:QI (reg:QI 183)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:503 -1
     (nil))
(insn 262 261 263 34 (set (mem/j:QI (reg/f:DI 180) [0 newObject_26->attributes.epsHierarchy+0 S1 A64])
        (reg:QI 184)) ObjectCommands.c:503 -1
     (nil))
(code_label 263 262 264 35 79 "" [1 uses])
(note 264 263 265 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 35 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 in+0 S8 A64])) ObjectCommands.c:511 -1
     (nil))
(insn 266 265 267 35 (parallel [
            (set (reg/f:DI 114 [ D.13408 ])
                (plus:DI (reg/f:DI 185)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:511 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -312 [0xfffffffffffffec8])) [0 in+0 S8 A64])
            (const_int 56 [0x38]))
        (nil)))
(insn 267 266 268 35 (parallel [
            (set (reg:DI 186)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:509 -1
     (nil))
(insn 268 267 269 35 (set (reg:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 publicArea+0 S8 A64])) ObjectCommands.c:509 -1
     (nil))
(insn 269 268 270 35 (set (reg:DI 4 si)
        (reg:DI 186)) ObjectCommands.c:509 -1
     (nil))
(insn 270 269 271 35 (set (reg:DI 5 di)
        (reg:DI 187)) ObjectCommands.c:509 -1
     (nil))
(call_insn 271 270 272 35 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PublicMarshalAndComputeName") [flags 0x41]  <function_decl 0x7fcb4791a1b0 PublicMarshalAndComputeName>) [0 PublicMarshalAndComputeName S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:509 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 272 271 273 35 (set (reg/f:DI 115 [ D.13409 ])
        (reg:DI 0 ax)) ObjectCommands.c:509 -1
     (nil))
(insn 273 272 274 35 (set (reg/f:DI 116 [ D.13410 ])
        (mem/f/c:DI (symbol_ref:DI ("PRIMARY_OBJECT_CREATION") [flags 0x40]  <var_decl 0x7fcb479071b0 PRIMARY_OBJECT_CREATION>) [0 PRIMARY_OBJECT_CREATION+0 S8 A64])) ObjectCommands.c:506 -1
     (nil))
(insn 274 273 275 35 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 in+0 S8 A64])) ObjectCommands.c:507 -1
     (nil))
(insn 275 274 276 35 (set (reg:SI 117 [ D.13401 ])
        (mem/j:SI (reg/f:DI 188) [0 in_10(D)->parentHandle+0 S4 A32])) ObjectCommands.c:507 -1
     (nil))
(insn 276 275 277 35 (set (reg:SI 5 di)
        (reg:SI 117 [ D.13401 ])) ObjectCommands.c:507 -1
     (nil))
(call_insn 277 276 278 35 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HierarchyGetPrimarySeed") [flags 0x41]  <function_decl 0x7fcb4792e5e8 HierarchyGetPrimarySeed>) [0 HierarchyGetPrimarySeed S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:507 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 278 277 279 35 (set (reg/f:DI 118 [ D.13411 ])
        (reg:DI 0 ax)) ObjectCommands.c:507 -1
     (nil))
(insn 279 278 280 35 (set (reg/f:DI 119 [ D.13408 ])
        (reg/f:DI 118 [ D.13411 ])) ObjectCommands.c:507 -1
     (nil))
(insn 280 279 281 35 (set (reg:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 rand+0 S8 A64])) ObjectCommands.c:506 -1
     (nil))
(insn 281 280 282 35 (set (reg:DI 37 r8)
        (reg/f:DI 114 [ D.13408 ])) ObjectCommands.c:506 -1
     (nil))
(insn 282 281 283 35 (set (reg:DI 2 cx)
        (reg/f:DI 115 [ D.13409 ])) ObjectCommands.c:506 -1
     (nil))
(insn 283 282 284 35 (set (reg:DI 1 dx)
        (reg/f:DI 116 [ D.13410 ])) ObjectCommands.c:506 -1
     (nil))
(insn 284 283 285 35 (set (reg:DI 4 si)
        (reg/f:DI 119 [ D.13408 ])) ObjectCommands.c:506 -1
     (nil))
(insn 285 284 286 35 (set (reg:DI 5 di)
        (reg:DI 189)) ObjectCommands.c:506 -1
     (nil))
(call_insn 286 285 287 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("DRBG_InstantiateSeeded") [flags 0x41]  <function_decl 0x7fcb47a0d870 DRBG_InstantiateSeeded>) [0 DRBG_InstantiateSeeded S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:506 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(jump_insn 287 286 288 35 (set (pc)
        (label_ref 292)) -1
     (nil)
 -> 292)
(barrier 288 287 289)
(code_label 289 288 290 36 78 "" [1 uses])
(note 290 289 291 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 36 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 rand+0 S8 A64])
        (const_int 0 [0])) ObjectCommands.c:515 -1
     (nil))
(code_label 292 291 293 37 76 "" [2 uses])
(note 293 292 294 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 294 293 295 37 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 in+0 S8 A64])) ObjectCommands.c:519 -1
     (nil))
(insn 295 294 296 37 (parallel [
            (set (reg/f:DI 120 [ D.13412 ])
                (plus:DI (reg/f:DI 190)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:519 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -312 [0xfffffffffffffec8])) [0 in+0 S8 A64])
            (const_int 6 [0x6]))
        (nil)))
(insn 296 295 297 37 (set (reg:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 rand+0 S8 A64])) ObjectCommands.c:519 -1
     (nil))
(insn 297 296 298 37 (set (reg:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [0 newObject+0 S8 A64])) ObjectCommands.c:519 -1
     (nil))
(insn 298 297 299 37 (set (reg:DI 1 dx)
        (reg:DI 191)) ObjectCommands.c:519 -1
     (nil))
(insn 299 298 300 37 (set (reg:DI 4 si)
        (reg/f:DI 120 [ D.13412 ])) ObjectCommands.c:519 -1
     (nil))
(insn 300 299 301 37 (set (reg:DI 5 di)
        (reg:DI 192)) ObjectCommands.c:519 -1
     (nil))
(call_insn 301 300 302 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptCreateObject") [flags 0x41]  <function_decl 0x7fcb479f5af8 CryptCreateObject>) [0 CryptCreateObject S1 A8])
            (const_int 0 [0]))) ObjectCommands.c:519 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 302 301 303 37 (set (reg:SI 193)
        (reg:SI 0 ax)) ObjectCommands.c:519 -1
     (nil))
(insn 303 302 304 37 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])
        (reg:SI 193)) ObjectCommands.c:519 -1
     (nil))
(insn 304 303 305 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ObjectCommands.c:520 -1
     (nil))
(jump_insn 305 304 306 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 310)
            (pc))) ObjectCommands.c:520 -1
     (nil)
 -> 310)
(note 306 305 307 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 307 306 308 38 (set (reg:SI 88 [ D.13400 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])) ObjectCommands.c:521 -1
     (nil))
(jump_insn 308 307 309 38 (set (pc)
        (label_ref:DI 393)) ObjectCommands.c:521 654 {jump}
     (nil)
 -> 393)
(barrier 309 308 310)
(code_label 310 309 311 39 80 "" [1 uses])
(note 311 310 312 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])) [0 parent+0 S8 A64])
            (const_int 0 [0]))) ObjectCommands.c:524 -1
     (nil))
(jump_insn 313 312 314 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 336)
            (pc))) ObjectCommands.c:524 -1
     (nil)
 -> 336)
(note 314 313 315 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 315 314 316 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -300 [0xfffffffffffffed4])) [0 derivation+0 S4 A32])
            (const_int 0 [0]))) ObjectCommands.c:524 -1
     (nil))
(jump_insn 316 315 317 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 336)
            (pc))) ObjectCommands.c:524 -1
     (nil)
 -> 336)
(note 317 316 318 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 318 317 319 41 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -320 [0xfffffffffffffec0])) [0 out+0 S8 A64])) ObjectCommands.c:526 -1
     (nil))
(insn 319 318 320 41 (parallel [
            (set (reg/f:DI 121 [ D.13413 ])
                (plus:DI (reg/f:DI 194)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:526 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -320 [0xfffffffffffffec0])) [0 out+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 320 319 321 41 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [0 newObject+0 S8 A64])) ObjectCommands.c:527 -1
     (nil))
(insn 321 320 322 41 (set (reg:HI 122 [ D.13405 ])
        (mem/j:HI (plus:DI (reg/f:DI 195)
                (const_int 6 [0x6])) [0 newObject_26->publicArea.nameAlg+0 S2 A16])) ObjectCommands.c:527 -1
     (nil))
(insn 322 321 323 41 (set (reg:SI 123 [ D.13399 ])
        (zero_extend:SI (reg:HI 122 [ D.13405 ]))) ObjectCommands.c:526 -1
     (nil))
(insn 323 322 324 41 (set (reg/f:DI 196)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [0 newObject+0 S8 A64])) ObjectCommands.c:526 -1
     (nil))
(insn 324 323 325 41 (parallel [
            (set (reg/f:DI 124 [ D.13408 ])
                (plus:DI (reg/f:DI 196)
                    (const_int 1756 [0x6dc])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:526 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -280 [0xfffffffffffffee8])) [0 newObject+0 S8 A64])
            (const_int 1756 [0x6dc]))
        (nil)))
(insn 325 324 326 41 (set (reg/f:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [0 newObject+0 S8 A64])) ObjectCommands.c:526 -1
     (nil))
(insn 326 325 327 41 (parallel [
            (set (reg/f:DI 125 [ D.13414 ])
                (plus:DI (reg/f:DI 197)
                    (const_int 344 [0x158])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:526 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -280 [0xfffffffffffffee8])) [0 newObject+0 S8 A64])
            (const_int 344 [0x158]))
        (nil)))
(insn 327 326 328 41 (set (reg:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 parent+0 S8 A64])) ObjectCommands.c:526 -1
     (nil))
(insn 328 327 329 41 (set (reg:DI 37 r8)
        (reg/f:DI 121 [ D.13413 ])) ObjectCommands.c:526 -1
     (nil))
(insn 329 328 330 41 (set (reg:SI 2 cx)
        (reg:SI 123 [ D.13399 ])) ObjectCommands.c:526 -1
     (nil))
(insn 330 329 331 41 (set (reg:DI 1 dx)
        (reg:DI 198)) ObjectCommands.c:526 -1
     (nil))
(insn 331 330 332 41 (set (reg:DI 4 si)
        (reg/f:DI 124 [ D.13408 ])) ObjectCommands.c:526 -1
     (nil))
(insn 332 331 333 41 (set (reg:DI 5 di)
        (reg/f:DI 125 [ D.13414 ])) ObjectCommands.c:526 -1
     (nil))
(call_insn 333 332 334 41 (call (mem:QI (symbol_ref:DI ("SensitiveToPrivate") [flags 0x41]  <function_decl 0x7fcb47920438 SensitiveToPrivate>) [0 SensitiveToPrivate S1 A8])
        (const_int 0 [0])) ObjectCommands.c:526 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(jump_insn 334 333 335 41 (set (pc)
        (label_ref 340)) ObjectCommands.c:526 -1
     (nil)
 -> 340)
(barrier 335 334 336)
(code_label 336 335 337 42 81 "" [2 uses])
(note 337 336 338 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 42 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -320 [0xfffffffffffffec0])) [0 out+0 S8 A64])) ObjectCommands.c:530 -1
     (nil))
(insn 339 338 340 42 (set (mem/j:HI (plus:DI (reg/f:DI 199)
                (const_int 4 [0x4])) [0 out_23(D)->outPrivate.t.size+0 S2 A32])
        (const_int 0 [0])) ObjectCommands.c:530 -1
     (nil))
(code_label 340 339 341 43 82 "" [1 uses])
(note 341 340 342 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 342 341 343 43 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -320 [0xfffffffffffffec0])) [0 out+0 S8 A64])) ObjectCommands.c:532 -1
     (nil))
(insn 343 342 344 43 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [0 newObject+0 S8 A64])) ObjectCommands.c:532 -1
     (nil))
(insn 344 343 345 43 (parallel [
            (set (reg/f:DI 202)
                (plus:DI (reg/f:DI 200)
                    (const_int 856 [0x358])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:532 -1
     (nil))
(insn 345 344 346 43 (parallel [
            (set (reg/f:DI 203)
                (plus:DI (reg/f:DI 201)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:532 -1
     (nil))
(insn 346 345 347 43 (set (reg:SI 204)
        (const_int 340 [0x154])) ObjectCommands.c:532 -1
     (nil))
(insn 347 346 348 43 (set (reg:DI 205)
        (mem/j:DI (reg/f:DI 203) [0  S8 A8])) ObjectCommands.c:532 -1
     (nil))
(insn 348 347 349 43 (set (mem/j:DI (reg/f:DI 202) [0  S8 A8])
        (reg:DI 205)) ObjectCommands.c:532 -1
     (nil))
(insn 349 348 350 43 (set (reg:DI 206)
        (zero_extend:DI (reg:SI 204))) ObjectCommands.c:532 -1
     (nil))
(insn 350 349 351 43 (parallel [
            (set (reg:DI 207)
                (plus:DI (reg/f:DI 202)
                    (reg:DI 206)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:532 -1
     (nil))
(insn 351 350 352 43 (parallel [
            (set (reg/f:DI 208)
                (plus:DI (reg:DI 207)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:532 -1
     (nil))
(insn 352 351 353 43 (set (reg:DI 209)
        (zero_extend:DI (reg:SI 204))) ObjectCommands.c:532 -1
     (nil))
(insn 353 352 354 43 (parallel [
            (set (reg:DI 210)
                (plus:DI (reg/f:DI 203)
                    (reg:DI 209)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:532 -1
     (nil))
(insn 354 353 355 43 (parallel [
            (set (reg/f:DI 211)
                (plus:DI (reg:DI 210)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:532 -1
     (nil))
(insn 355 354 356 43 (set (reg:DI 212)
        (mem/j:DI (plus:DI (reg/f:DI 211)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])) ObjectCommands.c:532 -1
     (nil))
(insn 356 355 357 43 (set (mem/j:DI (plus:DI (reg/f:DI 208)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
        (reg:DI 212)) ObjectCommands.c:532 -1
     (nil))
(insn 357 356 358 43 (parallel [
            (set (reg/f:DI 213)
                (plus:DI (reg/f:DI 202)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:532 -1
     (nil))
(insn 358 357 359 43 (parallel [
            (set (reg/f:DI 213)
                (and:DI (reg/f:DI 213)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:532 -1
     (nil))
(insn 359 358 360 43 (parallel [
            (set (reg/f:DI 202)
                (minus:DI (reg/f:DI 202)
                    (reg/f:DI 213)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:532 -1
     (nil))
(insn 360 359 361 43 (parallel [
            (set (reg/f:DI 203)
                (minus:DI (reg/f:DI 203)
                    (reg/f:DI 202)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:532 -1
     (nil))
(insn 361 360 362 43 (parallel [
            (set (reg:SI 204)
                (plus:SI (reg:SI 204)
                    (subreg:SI (reg/f:DI 202) 0)))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:532 -1
     (nil))
(insn 362 361 363 43 (parallel [
            (set (reg:SI 204)
                (and:SI (reg:SI 204)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:532 -1
     (nil))
(insn 363 362 364 43 (parallel [
            (set (reg:SI 214)
                (lshiftrt:SI (reg:SI 204)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ObjectCommands.c:532 -1
     (nil))
(insn 364 363 365 43 (set (reg:DI 215)
        (zero_extend:DI (reg:SI 214))) ObjectCommands.c:532 -1
     (nil))
(insn 365 364 366 43 (parallel [
            (set (reg:DI 215)
                (const_int 0 [0]))
            (set (reg/f:DI 213)
                (plus:DI (ashift:DI (reg:DI 215)
                        (const_int 3 [0x3]))
                    (reg/f:DI 213)))
            (set (reg/f:DI 203)
                (plus:DI (ashift:DI (reg:DI 215)
                        (const_int 3 [0x3]))
                    (reg/f:DI 203)))
            (set (mem/j:BLK (reg/f:DI 213) [0  A64])
                (mem/j:BLK (reg/f:DI 203) [0  A8]))
            (use (reg:DI 215))
        ]) ObjectCommands.c:532 -1
     (nil))
(insn 366 365 367 43 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -320 [0xfffffffffffffec0])) [0 out+0 S8 A64])) ObjectCommands.c:533 -1
     (nil))
(insn 367 366 368 43 (set (reg/f:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [0 newObject+0 S8 A64])) ObjectCommands.c:533 -1
     (nil))
(insn 368 367 369 43 (set (reg:DI 218)
        (mem/j:DI (plus:DI (reg/f:DI 217)
                (const_int 1756 [0x6dc])) [0 newObject_26->name+0 S8 A32])) ObjectCommands.c:533 -1
     (nil))
(insn 369 368 370 43 (set (mem/j:DI (plus:DI (reg/f:DI 216)
                (const_int 1196 [0x4ac])) [0 out_23(D)->name+0 S8 A32])
        (reg:DI 218)) ObjectCommands.c:533 -1
     (nil))
(insn 370 369 371 43 (set (reg:DI 219)
        (mem/j:DI (plus:DI (reg/f:DI 217)
                (const_int 1764 [0x6e4])) [0 newObject_26->name+8 S8 A32])) ObjectCommands.c:533 -1
     (nil))
(insn 371 370 372 43 (set (mem/j:DI (plus:DI (reg/f:DI 216)
                (const_int 1204 [0x4b4])) [0 out_23(D)->name+8 S8 A32])
        (reg:DI 219)) ObjectCommands.c:533 -1
     (nil))
(insn 372 371 373 43 (set (reg:DI 220)
        (mem/j:DI (plus:DI (reg/f:DI 217)
                (const_int 1772 [0x6ec])) [0 newObject_26->name+16 S8 A32])) ObjectCommands.c:533 -1
     (nil))
(insn 373 372 374 43 (set (mem/j:DI (plus:DI (reg/f:DI 216)
                (const_int 1212 [0x4bc])) [0 out_23(D)->name+16 S8 A32])
        (reg:DI 220)) ObjectCommands.c:533 -1
     (nil))
(insn 374 373 375 43 (set (reg:DI 221)
        (mem/j:DI (plus:DI (reg/f:DI 217)
                (const_int 1780 [0x6f4])) [0 newObject_26->name+24 S8 A32])) ObjectCommands.c:533 -1
     (nil))
(insn 375 374 376 43 (set (mem/j:DI (plus:DI (reg/f:DI 216)
                (const_int 1220 [0x4c4])) [0 out_23(D)->name+24 S8 A32])
        (reg:DI 221)) ObjectCommands.c:533 -1
     (nil))
(insn 376 375 377 43 (set (reg:DI 222)
        (mem/j:DI (plus:DI (reg/f:DI 217)
                (const_int 1788 [0x6fc])) [0 newObject_26->name+32 S8 A32])) ObjectCommands.c:533 -1
     (nil))
(insn 377 376 378 43 (set (mem/j:DI (plus:DI (reg/f:DI 216)
                (const_int 1228 [0x4cc])) [0 out_23(D)->name+32 S8 A32])
        (reg:DI 222)) ObjectCommands.c:533 -1
     (nil))
(insn 378 377 379 43 (set (reg:DI 223)
        (mem/j:DI (plus:DI (reg/f:DI 217)
                (const_int 1796 [0x704])) [0 newObject_26->name+40 S8 A32])) ObjectCommands.c:533 -1
     (nil))
(insn 379 378 380 43 (set (mem/j:DI (plus:DI (reg/f:DI 216)
                (const_int 1236 [0x4d4])) [0 out_23(D)->name+40 S8 A32])
        (reg:DI 223)) ObjectCommands.c:533 -1
     (nil))
(insn 380 379 381 43 (set (reg:SI 224)
        (mem/j:SI (plus:DI (reg/f:DI 217)
                (const_int 1804 [0x70c])) [0 newObject_26->name+48 S4 A32])) ObjectCommands.c:533 -1
     (nil))
(insn 381 380 382 43 (set (mem/j:SI (plus:DI (reg/f:DI 216)
                (const_int 1244 [0x4dc])) [0 out_23(D)->name+48 S4 A32])
        (reg:SI 224)) ObjectCommands.c:533 -1
     (nil))
(insn 382 381 383 43 (set (reg:HI 225)
        (mem/j:HI (plus:DI (reg/f:DI 217)
                (const_int 1808 [0x710])) [0 newObject_26->name+52 S2 A32])) ObjectCommands.c:533 -1
     (nil))
(insn 383 382 384 43 (set (mem/j:HI (plus:DI (reg/f:DI 216)
                (const_int 1248 [0x4e0])) [0 out_23(D)->name+52 S2 A32])
        (reg:HI 225)) ObjectCommands.c:533 -1
     (nil))
(insn 384 383 385 43 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 in+0 S8 A64])) ObjectCommands.c:535 -1
     (nil))
(insn 385 384 386 43 (set (reg:SI 126 [ D.13401 ])
        (mem/j:SI (reg/f:DI 226) [0 in_10(D)->parentHandle+0 S4 A32])) ObjectCommands.c:535 -1
     (nil))
(insn 386 385 387 43 (set (reg:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [0 newObject+0 S8 A64])) ObjectCommands.c:535 -1
     (nil))
(insn 387 386 388 43 (set (reg:SI 4 si)
        (reg:SI 126 [ D.13401 ])) ObjectCommands.c:535 -1
     (nil))
(insn 388 387 389 43 (set (reg:DI 5 di)
        (reg:DI 227)) ObjectCommands.c:535 -1
     (nil))
(call_insn 389 388 390 43 (call (mem:QI (symbol_ref:DI ("ObjectSetLoadedAttributes") [flags 0x41]  <function_decl 0x7fcb47914798 ObjectSetLoadedAttributes>) [0 ObjectSetLoadedAttributes S1 A8])
        (const_int 0 [0])) ObjectCommands.c:535 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 390 389 393 43 (set (reg:SI 88 [ D.13400 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -304 [0xfffffffffffffed0])) [0 result+0 S4 A32])) ObjectCommands.c:536 -1
     (nil))
(code_label 393 390 394 45 83 "" [10 uses])
(note 394 393 395 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 395 394 399 45 (set (reg:SI 127 [ <retval> ])
        (reg:SI 88 [ D.13400 ])) -1
     (nil))
(insn 399 395 400 45 (set (reg/i:SI 0 ax)
        (reg:SI 127 [ <retval> ])) ObjectCommands.c:537 -1
     (nil))
(insn 400 399 401 45 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13415+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) ObjectCommands.c:537 -1
     (nil))
(jump_insn 401 400 407 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 404)
            (pc))) ObjectCommands.c:537 -1
     (nil)
 -> 404)
(note 407 401 402 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(call_insn 402 407 403 47 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fcb47ab06c0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ObjectCommands.c:537 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 403 402 404)
(code_label 404 403 408 48 84 "" [1 uses])
(note 408 404 405 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 405 408 0 48 (use (reg/i:SI 0 ax)) ObjectCommands.c:537 -1
     (nil))
