
;; Function ExecuteCommand (ExecuteCommand, funcdef_no=2, decl_uid=12854, cgraph_uid=2, symbol_order=2)

Partition 3: size 272 align 16
	command
Partition 1: size 4 align 4
	maxResponse_15
Partition 0: size 4 align 4
	result_1
Partition 2: size 4 align 4
	commandSize

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 28 from 60 to 62.
Forwarding edge 7->8 to 44 failed.
Forwarding edge 9->10 to 44 failed.
Forwarding edge 14->15 to 44 failed.
Forwarding edge 23->24 to 44 failed.
Forwarding edge 25->26 to 44 failed.
Forwarding edge 28->29 to 44 failed.
Forwarding edge 33->34 to 44 failed.
Forwarding edge 35->36 to 44 failed.
Forwarding edge 41->42 to 44 failed.
Merging block 60 into block 59...
Merged blocks 59 and 60.
Merged 59 and 60 without moving.
Merging block 61 into block 59...
Merged blocks 59 and 61.
Merged 59 and 61 without moving.


try_optimize_cfg iteration 2

Forwarding edge 7->8 to 44 failed.
Forwarding edge 9->10 to 44 failed.
Forwarding edge 14->15 to 44 failed.
Forwarding edge 23->24 to 44 failed.
Forwarding edge 25->26 to 44 failed.
Forwarding edge 28->29 to 44 failed.
Forwarding edge 33->34 to 44 failed.
Forwarding edge 35->36 to 44 failed.
Forwarding edge 41->42 to 44 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -308 [0xfffffffffffffecc])) [0 requestSize+0 S4 A32])
        (reg:SI 5 di [ requestSize ])) ExecCommand.c:104 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -320 [0xfffffffffffffec0])) [0 request+0 S8 A64])
        (reg:DI 4 si [ request ])) ExecCommand.c:104 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -328 [0xfffffffffffffeb8])) [0 responseSize+0 S8 A64])
        (reg:DI 1 dx [ responseSize ])) ExecCommand.c:104 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -336 [0xfffffffffffffeb0])) [0 response+0 S8 A64])
        (reg:DI 2 cx [ response ])) ExecCommand.c:104 -1
     (nil))
(note 6 5 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 6 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.12988+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:104 -1
     (nil))
(insn 10 7 11 2 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -328 [0xfffffffffffffeb8])) [0 responseSize+0 S8 A64])) ExecCommand.c:109 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 137)
        (mem:SI (reg/f:DI 136) [0 *responseSize_14(D)+0 S4 A32])) ExecCommand.c:109 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -292 [0xfffffffffffffedc])) [0 maxResponse+0 S4 A32])
        (reg:SI 137)) ExecCommand.c:109 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:QI (symbol_ref:DI ("g_updateNV") [flags 0x40]  <var_decl 0x7f15235b4a20 g_updateNV>) [0 g_updateNV+0 S1 A8])
        (const_int 0 [0])) ExecCommand.c:121 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (symbol_ref:DI ("g_clearOrderly") [flags 0x40]  <var_decl 0x7f15235b4b40 g_clearOrderly>) [0 g_clearOrderly+0 S4 A32])
        (const_int 0 [0])) ExecCommand.c:122 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 88 [ D.12979 ])
        (mem/c:SI (symbol_ref:DI ("g_inFailureMode") [flags 0x40]  <var_decl 0x7f15235f6a20 g_inFailureMode>) [0 g_inFailureMode+0 S4 A32])) ExecCommand.c:123 -1
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.12979 ])
            (const_int 0 [0]))) ExecCommand.c:123 -1
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) ExecCommand.c:123 -1
     (nil)
 -> 30)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -336 [0xfffffffffffffeb0])) [0 response+0 S8 A64])) ExecCommand.c:126 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -328 [0xfffffffffffffeb8])) [0 responseSize+0 S8 A64])) ExecCommand.c:126 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -320 [0xfffffffffffffec0])) [0 request+0 S8 A64])) ExecCommand.c:126 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 141)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -308 [0xfffffffffffffecc])) [0 requestSize+0 S4 A32])) ExecCommand.c:126 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 2 cx)
        (reg:DI 138)) ExecCommand.c:126 -1
     (nil))
(insn 24 23 25 4 (set (reg:DI 1 dx)
        (reg:DI 139)) ExecCommand.c:126 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 4 si)
        (reg:DI 140)) ExecCommand.c:126 -1
     (nil))
(insn 26 25 27 4 (set (reg:SI 5 di)
        (reg:SI 141)) ExecCommand.c:126 -1
     (nil))
(call_insn 27 26 28 4 (call (mem:QI (symbol_ref:DI ("TpmFailureMode") [flags 0x41]  <function_decl 0x7f15236361b0 TpmFailureMode>) [0 TpmFailureMode S1 A8])
        (const_int 0 [0])) ExecCommand.c:126 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 28 27 29 4 (set (pc)
        (label_ref:DI 392)) ExecCommand.c:127 654 {jump}
     (nil)
 -> 392)
(barrier 29 28 30)
(code_label 30 29 31 5 2 "" [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 32 31 33 5 (call (mem:QI (symbol_ref:DI ("NvCheckState") [flags 0x41]  <function_decl 0x7f152361d798 NvCheckState>) [0 NvCheckState S1 A8])
        (const_int 0 [0])) ExecCommand.c:135 -1
     (nil)
    (nil))
(call_insn 33 32 34 5 (call (mem:QI (symbol_ref:DI ("TimeUpdateToCurrent") [flags 0x41]  <function_decl 0x7f15236c81b0 TimeUpdateToCurrent>) [0 TimeUpdateToCurrent S1 A8])
        (const_int 0 [0])) ExecCommand.c:141 -1
     (nil)
    (nil))
(insn 34 33 35 5 (set (reg:SI 89 [ D.12980 ])
        (mem/c:SI (symbol_ref:DI ("g_DRTMHandle") [flags 0x40]  <var_decl 0x7f15235b46c0 g_DRTMHandle>) [0 g_DRTMHandle+0 S4 A32])) ExecCommand.c:144 -1
     (nil))
(insn 35 34 36 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.12980 ])
            (const_int 1073741832 [0x40000008]))) ExecCommand.c:144 -1
     (nil))
(jump_insn 36 35 37 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) ExecCommand.c:144 -1
     (nil)
 -> 39)
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 38 37 39 6 (call (mem:QI (symbol_ref:DI ("ObjectTerminateEvent") [flags 0x41]  <function_decl 0x7f1523603bd0 ObjectTerminateEvent>) [0 ObjectTerminateEvent S1 A8])
        (const_int 0 [0])) ExecCommand.c:145 -1
     (nil)
    (nil))
(code_label 39 38 40 7 4 "" [1 uses])
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -320 [0xfffffffffffffec0])) [0 request+0 S8 A64])) ExecCommand.c:147 -1
     (nil))
(insn 42 41 43 7 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 command.parameterBuffer+0 S8 A64])
        (reg/f:DI 142)) ExecCommand.c:147 -1
     (nil))
(insn 43 42 44 7 (set (reg:SI 90 [ D.12979 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -308 [0xfffffffffffffecc])) [0 requestSize+0 S4 A32])) ExecCommand.c:148 -1
     (nil))
(insn 44 43 45 7 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 command.parameterSize+0 S4 A64])
        (reg:SI 90 [ D.12979 ])) ExecCommand.c:148 -1
     (nil))
(insn 45 44 46 7 (parallel [
            (set (reg:DI 143)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:152 -1
     (nil))
(insn 46 45 47 7 (parallel [
            (set (reg:DI 144)
                (plus:DI (reg:DI 143)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:152 -1
     (nil))
(insn 47 46 48 7 (parallel [
            (set (reg:DI 145)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:152 -1
     (nil))
(insn 48 47 49 7 (parallel [
            (set (reg:DI 146)
                (plus:DI (reg:DI 145)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:152 -1
     (nil))
(insn 49 48 50 7 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:152 -1
     (nil))
(insn 50 49 51 7 (set (reg:DI 1 dx)
        (reg:DI 144)) ExecCommand.c:152 -1
     (nil))
(insn 51 50 52 7 (set (reg:DI 4 si)
        (reg:DI 146)) ExecCommand.c:152 -1
     (nil))
(insn 52 51 53 7 (set (reg:DI 5 di)
        (reg:DI 147)) ExecCommand.c:152 -1
     (nil))
(call_insn 53 52 54 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMI_ST_COMMAND_TAG_Unmarshal") [flags 0x41]  <function_decl 0x7f152368cbd0 TPMI_ST_COMMAND_TAG_Unmarshal>) [0 TPMI_ST_COMMAND_TAG_Unmarshal S1 A8])
            (const_int 0 [0]))) ExecCommand.c:152 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 54 53 55 7 (set (reg:SI 148)
        (reg:SI 0 ax)) ExecCommand.c:152 -1
     (nil))
(insn 55 54 56 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
        (reg:SI 148)) ExecCommand.c:152 -1
     (nil))
(insn 56 55 57 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ExecCommand.c:155 -1
     (nil))
(jump_insn 57 56 58 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) ExecCommand.c:155 -1
     (nil)
 -> 61)
(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 59 58 60 8 (set (pc)
        (label_ref 289)) ExecCommand.c:156 -1
     (nil)
 -> 289)
(barrier 60 59 61)
(code_label 61 60 62 9 5 "" [1 uses])
(note 62 61 63 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 9 (parallel [
            (set (reg:DI 149)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:158 -1
     (nil))
(insn 64 63 65 9 (parallel [
            (set (reg:DI 150)
                (plus:DI (reg:DI 149)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:158 -1
     (nil))
(insn 65 64 66 9 (parallel [
            (set (reg:DI 151)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:158 -1
     (nil))
(insn 66 65 67 9 (parallel [
            (set (reg:DI 152)
                (plus:DI (reg:DI 151)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:158 -1
     (nil))
(insn 67 66 68 9 (parallel [
            (set (reg:DI 153)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -300 [0xfffffffffffffed4])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:158 -1
     (nil))
(insn 68 67 69 9 (set (reg:DI 1 dx)
        (reg:DI 150)) ExecCommand.c:158 -1
     (nil))
(insn 69 68 70 9 (set (reg:DI 4 si)
        (reg:DI 152)) ExecCommand.c:158 -1
     (nil))
(insn 70 69 71 9 (set (reg:DI 5 di)
        (reg:DI 153)) ExecCommand.c:158 -1
     (nil))
(call_insn 71 70 72 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT32_Unmarshal") [flags 0x41]  <function_decl 0x7f1523676d80 UINT32_Unmarshal>) [0 UINT32_Unmarshal S1 A8])
            (const_int 0 [0]))) ExecCommand.c:158 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 72 71 73 9 (set (reg:SI 154)
        (reg:SI 0 ax)) ExecCommand.c:158 -1
     (nil))
(insn 73 72 74 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
        (reg:SI 154)) ExecCommand.c:158 -1
     (nil))
(insn 74 73 75 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ExecCommand.c:161 -1
     (nil))
(jump_insn 75 74 76 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) ExecCommand.c:161 -1
     (nil)
 -> 79)
(note 76 75 77 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 77 76 78 10 (set (pc)
        (label_ref 289)) ExecCommand.c:162 -1
     (nil)
 -> 289)
(barrier 78 77 79)
(code_label 79 78 80 11 7 "" [1 uses])
(note 80 79 81 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 11 (set (reg:SI 91 [ D.12980 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -300 [0xfffffffffffffed4])) [0 commandSize+0 S4 A32])) ExecCommand.c:170 -1
     (nil))
(insn 82 81 83 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.12980 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -308 [0xfffffffffffffecc])) [0 requestSize+0 S4 A32]))) ExecCommand.c:170 -1
     (nil))
(jump_insn 83 82 84 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) ExecCommand.c:170 -1
     (nil)
 -> 88)
(note 84 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 12 (set (reg:SI 92 [ D.12980 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -300 [0xfffffffffffffed4])) [0 commandSize+0 S4 A32])) ExecCommand.c:170 -1
     (nil))
(insn 86 85 87 12 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 92 [ D.12980 ])
            (const_int 4096 [0x1000]))) ExecCommand.c:170 -1
     (nil))
(jump_insn 87 86 88 12 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) ExecCommand.c:170 -1
     (nil)
 -> 93)
(code_label 88 87 89 13 8 "" [1 uses])
(note 89 88 90 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
        (const_int 322 [0x142])) ExecCommand.c:172 -1
     (nil))
(jump_insn 91 90 92 13 (set (pc)
        (label_ref 289)) ExecCommand.c:173 -1
     (nil)
 -> 289)
(barrier 92 91 93)
(code_label 93 92 94 14 9 "" [1 uses])
(note 94 93 95 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 14 (parallel [
            (set (reg:DI 155)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:176 -1
     (nil))
(insn 96 95 97 14 (parallel [
            (set (reg:DI 156)
                (plus:DI (reg:DI 155)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:176 -1
     (nil))
(insn 97 96 98 14 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:176 -1
     (nil))
(insn 98 97 99 14 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg:DI 157)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:176 -1
     (nil))
(insn 99 98 100 14 (parallel [
            (set (reg:DI 159)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:176 -1
     (nil))
(insn 100 99 101 14 (parallel [
            (set (reg:DI 160)
                (plus:DI (reg:DI 159)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:176 -1
     (nil))
(insn 101 100 102 14 (set (reg:DI 1 dx)
        (reg:DI 156)) ExecCommand.c:176 -1
     (nil))
(insn 102 101 103 14 (set (reg:DI 4 si)
        (reg:DI 158)) ExecCommand.c:176 -1
     (nil))
(insn 103 102 104 14 (set (reg:DI 5 di)
        (reg:DI 160)) ExecCommand.c:176 -1
     (nil))
(call_insn 104 103 105 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPM_CC_Unmarshal") [flags 0x41]  <function_decl 0x7f152367e5e8 TPM_CC_Unmarshal>) [0 TPM_CC_Unmarshal S1 A8])
            (const_int 0 [0]))) ExecCommand.c:176 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 105 104 106 14 (set (reg:SI 161)
        (reg:SI 0 ax)) ExecCommand.c:176 -1
     (nil))
(insn 106 105 107 14 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
        (reg:SI 161)) ExecCommand.c:176 -1
     (nil))
(insn 107 106 108 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ExecCommand.c:178 -1
     (nil))
(jump_insn 108 107 109 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) ExecCommand.c:178 -1
     (nil)
 -> 112)
(note 109 108 110 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(jump_insn 110 109 111 15 (set (pc)
        (label_ref 289)) ExecCommand.c:179 -1
     (nil)
 -> 289)
(barrier 111 110 112)
(code_label 112 111 113 16 10 "" [1 uses])
(note 113 112 114 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 16 (set (reg:SI 93 [ D.12980 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -284 [0xfffffffffffffee4])) [0 command.code+0 S4 A32])) ExecCommand.c:181 -1
     (nil))
(insn 115 114 116 16 (set (reg:SI 5 di)
        (reg:SI 93 [ D.12980 ])) ExecCommand.c:181 -1
     (nil))
(call_insn 116 115 117 16 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CommandCodeToCommandIndex") [flags 0x41]  <function_decl 0x7f1523636a20 CommandCodeToCommandIndex>) [0 CommandCodeToCommandIndex S1 A8])
            (const_int 0 [0]))) ExecCommand.c:181 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 117 116 118 16 (set (reg:HI 94 [ D.12981 ])
        (reg:HI 0 ax)) ExecCommand.c:181 -1
     (nil))
(insn 118 117 119 16 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [0 command.index+0 S2 A64])
        (reg:HI 94 [ D.12981 ])) ExecCommand.c:181 -1
     (nil))
(insn 119 118 120 16 (set (reg:HI 95 [ D.12981 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [0 command.index+0 S2 A64])) ExecCommand.c:182 -1
     (nil))
(insn 120 119 121 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 95 [ D.12981 ])
            (const_int -1 [0xffffffffffffffff]))) ExecCommand.c:182 -1
     (nil))
(jump_insn 121 120 122 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 126)
            (pc))) ExecCommand.c:182 -1
     (nil)
 -> 126)
(note 122 121 123 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
        (const_int 323 [0x143])) ExecCommand.c:184 -1
     (nil))
(jump_insn 124 123 125 17 (set (pc)
        (label_ref 289)) ExecCommand.c:185 -1
     (nil)
 -> 289)
(barrier 125 124 126)
(code_label 126 125 127 18 11 "" [1 uses])
(note 127 126 128 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(call_insn 128 127 129 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMIsStarted") [flags 0x41]  <function_decl 0x7f15236cd870 TPMIsStarted>) [0 TPMIsStarted S1 A8])
            (const_int 0 [0]))) ExecCommand.c:200 -1
     (nil)
    (nil))
(insn 129 128 130 18 (set (reg:SI 96 [ D.12979 ])
        (reg:SI 0 ax)) ExecCommand.c:200 -1
     (nil))
(insn 130 129 131 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.12979 ])
            (const_int 0 [0]))) ExecCommand.c:200 -1
     (nil))
(jump_insn 131 130 132 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) ExecCommand.c:200 -1
     (nil)
 -> 136)
(note 132 131 133 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 19 (set (reg:SI 97 [ D.12980 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -284 [0xfffffffffffffee4])) [0 command.code+0 S4 A32])) ExecCommand.c:200 -1
     (nil))
(insn 134 133 135 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.12980 ])
            (const_int 324 [0x144]))) ExecCommand.c:200 -1
     (nil))
(jump_insn 135 134 136 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) ExecCommand.c:200 -1
     (nil)
 -> 146)
(code_label 136 135 137 20 12 "" [1 uses])
(note 137 136 138 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn 138 137 139 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMIsStarted") [flags 0x41]  <function_decl 0x7f15236cd870 TPMIsStarted>) [0 TPMIsStarted S1 A8])
            (const_int 0 [0]))) ExecCommand.c:201 -1
     (nil)
    (nil))
(insn 139 138 140 20 (set (reg:SI 98 [ D.12979 ])
        (reg:SI 0 ax)) ExecCommand.c:201 -1
     (nil))
(insn 140 139 141 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.12979 ])
            (const_int 0 [0]))) ExecCommand.c:201 -1
     (nil))
(jump_insn 141 140 142 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) ExecCommand.c:201 -1
     (nil)
 -> 151)
(note 142 141 143 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 21 (set (reg:SI 99 [ D.12980 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -284 [0xfffffffffffffee4])) [0 command.code+0 S4 A32])) ExecCommand.c:201 -1
     (nil))
(insn 144 143 145 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.12980 ])
            (const_int 324 [0x144]))) ExecCommand.c:201 -1
     (nil))
(jump_insn 145 144 146 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) ExecCommand.c:201 -1
     (nil)
 -> 151)
(code_label 146 145 147 22 13 "" [1 uses])
(note 147 146 148 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 22 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
        (const_int 256 [0x100])) ExecCommand.c:203 -1
     (nil))
(jump_insn 149 148 150 22 (set (pc)
        (label_ref 289)) ExecCommand.c:204 -1
     (nil)
 -> 289)
(barrier 150 149 151)
(code_label 151 150 152 23 14 "" [2 uses])
(note 152 151 153 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(call_insn 153 152 154 23 (call (mem:QI (symbol_ref:DI ("NvIndexCacheInit") [flags 0x41]  <function_decl 0x7f1523623798 NvIndexCacheInit>) [0 NvIndexCacheInit S1 A8])
        (const_int 0 [0])) ExecCommand.c:207 -1
     (nil)
    (nil))
(insn 154 153 155 23 (parallel [
            (set (reg:DI 162)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:209 -1
     (nil))
(insn 155 154 156 23 (set (reg:DI 5 di)
        (reg:DI 162)) ExecCommand.c:209 -1
     (nil))
(call_insn 156 155 157 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ParseHandleBuffer") [flags 0x41]  <function_decl 0x7f15236cdaf8 ParseHandleBuffer>) [0 ParseHandleBuffer S1 A8])
            (const_int 0 [0]))) ExecCommand.c:209 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 157 156 158 23 (set (reg:SI 163)
        (reg:SI 0 ax)) ExecCommand.c:209 -1
     (nil))
(insn 158 157 159 23 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
        (reg:SI 163)) ExecCommand.c:209 -1
     (nil))
(insn 159 158 160 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ExecCommand.c:210 -1
     (nil))
(jump_insn 160 159 161 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 164)
            (pc))) ExecCommand.c:210 -1
     (nil)
 -> 164)
(note 161 160 162 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 162 161 163 24 (set (pc)
        (label_ref 289)) ExecCommand.c:211 -1
     (nil)
 -> 289)
(barrier 163 162 164)
(code_label 164 163 165 25 15 "" [1 uses])
(note 165 164 166 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 25 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:214 -1
     (nil))
(insn 167 166 168 25 (set (reg:DI 5 di)
        (reg:DI 164)) ExecCommand.c:214 -1
     (nil))
(call_insn 168 167 169 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("EntityGetLoadStatus") [flags 0x41]  <function_decl 0x7f152360fd80 EntityGetLoadStatus>) [0 EntityGetLoadStatus S1 A8])
            (const_int 0 [0]))) ExecCommand.c:214 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 169 168 170 25 (set (reg:SI 165)
        (reg:SI 0 ax)) ExecCommand.c:214 -1
     (nil))
(insn 170 169 171 25 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
        (reg:SI 165)) ExecCommand.c:214 -1
     (nil))
(insn 171 170 172 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ExecCommand.c:215 -1
     (nil))
(jump_insn 172 171 173 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 176)
            (pc))) ExecCommand.c:215 -1
     (nil)
 -> 176)
(note 173 172 174 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(jump_insn 174 173 175 26 (set (pc)
        (label_ref 289)) ExecCommand.c:216 -1
     (nil)
 -> 289)
(barrier 175 174 176)
(code_label 176 175 177 27 16 "" [1 uses])
(note 177 176 178 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 178 177 179 27 (parallel [
            (set (reg:DI 166)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:218 -1
     (nil))
(insn 179 178 180 27 (set (reg:DI 5 di)
        (reg:DI 166)) ExecCommand.c:218 -1
     (nil))
(call_insn 180 179 181 27 (call (mem:QI (symbol_ref:DI ("ClearCpRpHashes") [flags 0x41]  <function_decl 0x7f1523636438 ClearCpRpHashes>) [0 ClearCpRpHashes S1 A8])
        (const_int 0 [0])) ExecCommand.c:218 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 181 180 182 27 (set (reg:HI 100 [ D.12981 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 command.tag+0 S2 A64])) ExecCommand.c:219 -1
     (nil))
(insn 182 181 183 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 100 [ D.12981 ])
            (const_int -32766 [0xffffffffffff8002]))) ExecCommand.c:219 -1
     (nil))
(jump_insn 183 182 184 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 233)
            (pc))) ExecCommand.c:219 -1
     (nil)
 -> 233)
(note 184 183 185 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 28 (parallel [
            (set (reg:DI 167)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:222 -1
     (nil))
(insn 186 185 187 28 (parallel [
            (set (reg:DI 168)
                (plus:DI (reg:DI 167)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:222 -1
     (nil))
(insn 187 186 188 28 (parallel [
            (set (reg:DI 169)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:222 -1
     (nil))
(insn 188 187 189 28 (parallel [
            (set (reg:DI 170)
                (plus:DI (reg:DI 169)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:222 -1
     (nil))
(insn 189 188 190 28 (parallel [
            (set (reg:DI 171)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:222 -1
     (nil))
(insn 190 189 191 28 (parallel [
            (set (reg:DI 172)
                (plus:DI (reg:DI 171)
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:222 -1
     (nil))
(insn 191 190 192 28 (set (reg:DI 1 dx)
        (reg:DI 168)) ExecCommand.c:222 -1
     (nil))
(insn 192 191 193 28 (set (reg:DI 4 si)
        (reg:DI 170)) ExecCommand.c:222 -1
     (nil))
(insn 193 192 194 28 (set (reg:DI 5 di)
        (reg:DI 172)) ExecCommand.c:222 -1
     (nil))
(call_insn 194 193 195 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("UINT32_Unmarshal") [flags 0x41]  <function_decl 0x7f1523676d80 UINT32_Unmarshal>) [0 UINT32_Unmarshal S1 A8])
            (const_int 0 [0]))) ExecCommand.c:222 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 195 194 196 28 (set (reg:SI 173)
        (reg:SI 0 ax)) ExecCommand.c:222 -1
     (nil))
(insn 196 195 197 28 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
        (reg:SI 173)) ExecCommand.c:222 -1
     (nil))
(insn 197 196 198 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ExecCommand.c:225 -1
     (nil))
(jump_insn 198 197 199 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 202)
            (pc))) ExecCommand.c:225 -1
     (nil)
 -> 202)
(note 199 198 200 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(jump_insn 200 199 201 29 (set (pc)
        (label_ref 289)) ExecCommand.c:226 -1
     (nil)
 -> 289)
(barrier 201 200 202)
(code_label 202 201 203 30 18 "" [1 uses])
(note 203 202 204 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 204 203 205 30 (set (reg:SI 101 [ D.12979 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 command.authSize+0 S4 A32])) ExecCommand.c:232 -1
     (nil))
(insn 205 204 206 30 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 101 [ D.12979 ])
            (const_int 8 [0x8]))) ExecCommand.c:232 -1
     (nil))
(jump_insn 206 205 207 30 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 212)
            (pc))) ExecCommand.c:232 -1
     (nil)
 -> 212)
(note 207 206 208 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 31 (set (reg:SI 102 [ D.12979 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 command.authSize+0 S4 A32])) ExecCommand.c:233 -1
     (nil))
(insn 209 208 210 31 (set (reg:SI 103 [ D.12979 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 command.parameterSize+0 S4 A64])) ExecCommand.c:233 -1
     (nil))
(insn 210 209 211 31 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 102 [ D.12979 ])
            (reg:SI 103 [ D.12979 ]))) ExecCommand.c:233 -1
     (nil))
(jump_insn 211 210 212 31 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 217)
            (pc))) ExecCommand.c:233 -1
     (nil)
 -> 217)
(code_label 212 211 213 32 19 "" [1 uses])
(note 213 212 214 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 32 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
        (const_int 149 [0x95])) ExecCommand.c:235 -1
     (nil))
(jump_insn 215 214 216 32 (set (pc)
        (label_ref 289)) ExecCommand.c:236 -1
     (nil)
 -> 289)
(barrier 216 215 217)
(code_label 217 216 218 33 20 "" [1 uses])
(note 218 217 219 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 33 (set (reg:SI 104 [ D.12979 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 command.parameterSize+0 S4 A64])) ExecCommand.c:238 -1
     (nil))
(insn 220 219 221 33 (set (reg:SI 105 [ D.12979 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 command.authSize+0 S4 A32])) ExecCommand.c:238 -1
     (nil))
(insn 221 220 222 33 (parallel [
            (set (reg:SI 106 [ D.12979 ])
                (minus:SI (reg:SI 104 [ D.12979 ])
                    (reg:SI 105 [ D.12979 ])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:238 -1
     (nil))
(insn 222 221 223 33 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 command.parameterSize+0 S4 A64])
        (reg:SI 106 [ D.12979 ])) ExecCommand.c:238 -1
     (nil))
(insn 223 222 224 33 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:243 -1
     (nil))
(insn 224 223 225 33 (set (reg:DI 5 di)
        (reg:DI 174)) ExecCommand.c:243 -1
     (nil))
(call_insn 225 224 226 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ParseSessionBuffer") [flags 0x41]  <function_decl 0x7f15236365e8 ParseSessionBuffer>) [0 ParseSessionBuffer S1 A8])
            (const_int 0 [0]))) ExecCommand.c:243 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 226 225 227 33 (set (reg:SI 175)
        (reg:SI 0 ax)) ExecCommand.c:243 -1
     (nil))
(insn 227 226 228 33 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
        (reg:SI 175)) ExecCommand.c:243 -1
     (nil))
(insn 228 227 229 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ExecCommand.c:244 -1
     (nil))
(jump_insn 229 228 230 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) ExecCommand.c:244 -1
     (nil)
 -> 246)
(note 230 229 231 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(jump_insn 231 230 232 34 (set (pc)
        (label_ref 289)) ExecCommand.c:245 -1
     (nil)
 -> 289)
(barrier 232 231 233)
(code_label 233 232 234 35 17 "" [1 uses])
(note 234 233 235 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 35 (set (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 command.authSize+0 S4 A32])
        (const_int 0 [0])) ExecCommand.c:249 -1
     (nil))
(insn 236 235 237 35 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:253 -1
     (nil))
(insn 237 236 238 35 (set (reg:DI 5 di)
        (reg:DI 176)) ExecCommand.c:253 -1
     (nil))
(call_insn 238 237 239 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CheckAuthNoSession") [flags 0x41]  <function_decl 0x7f15236366c0 CheckAuthNoSession>) [0 CheckAuthNoSession S1 A8])
            (const_int 0 [0]))) ExecCommand.c:253 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 239 238 240 35 (set (reg:SI 177)
        (reg:SI 0 ax)) ExecCommand.c:253 -1
     (nil))
(insn 240 239 241 35 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
        (reg:SI 177)) ExecCommand.c:253 -1
     (nil))
(insn 241 240 242 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ExecCommand.c:254 -1
     (nil))
(jump_insn 242 241 243 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) ExecCommand.c:254 -1
     (nil)
 -> 246)
(note 243 242 244 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(jump_insn 244 243 245 36 (set (pc)
        (label_ref 289)) ExecCommand.c:255 -1
     (nil)
 -> 289)
(barrier 245 244 246)
(code_label 246 245 247 37 21 "" [2 uses])
(note 247 246 248 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 37 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -336 [0xfffffffffffffeb0])) [0 response+0 S8 A64])) ExecCommand.c:261 -1
     (nil))
(insn 249 248 250 37 (set (reg/f:DI 107 [ D.12982 ])
        (mem/f:DI (reg/f:DI 178) [0 *response_21(D)+0 S8 A64])) ExecCommand.c:261 -1
     (nil))
(insn 250 249 251 37 (parallel [
            (set (reg/f:DI 108 [ D.12983 ])
                (plus:DI (reg/f:DI 107 [ D.12982 ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:261 -1
     (nil))
(insn 251 250 252 37 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 command.responseBuffer+0 S8 A64])
        (reg/f:DI 108 [ D.12983 ])) ExecCommand.c:261 -1
     (nil))
(insn 252 251 253 37 (set (reg:HI 109 [ D.12981 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 command.tag+0 S2 A64])) ExecCommand.c:263 -1
     (nil))
(insn 253 252 254 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 109 [ D.12981 ])
            (const_int -32766 [0xffffffffffff8002]))) ExecCommand.c:263 -1
     (nil))
(jump_insn 254 253 255 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 259)
            (pc))) ExecCommand.c:263 -1
     (nil)
 -> 259)
(note 255 254 256 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 256 255 257 38 (set (reg/f:DI 110 [ D.12983 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 command.responseBuffer+0 S8 A64])) ExecCommand.c:264 -1
     (nil))
(insn 257 256 258 38 (parallel [
            (set (reg/f:DI 111 [ D.12983 ])
                (plus:DI (reg/f:DI 110 [ D.12983 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:264 -1
     (nil))
(insn 258 257 259 38 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 command.responseBuffer+0 S8 A64])
        (reg/f:DI 111 [ D.12983 ])) ExecCommand.c:264 -1
     (nil))
(code_label 259 258 260 39 22 "" [1 uses])
(note 260 259 261 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 262 39 (set (reg:HI 112 [ D.12981 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [0 command.index+0 S2 A64])) ExecCommand.c:265 -1
     (nil))
(insn 262 261 263 39 (set (reg:SI 113 [ D.12979 ])
        (zero_extend:SI (reg:HI 112 [ D.12981 ]))) ExecCommand.c:265 -1
     (nil))
(insn 263 262 264 39 (set (reg:SI 5 di)
        (reg:SI 113 [ D.12979 ])) ExecCommand.c:265 -1
     (nil))
(call_insn 264 263 265 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("IsHandleInResponse") [flags 0x41]  <function_decl 0x7f152363d0d8 IsHandleInResponse>) [0 IsHandleInResponse S1 A8])
            (const_int 0 [0]))) ExecCommand.c:265 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 265 264 266 39 (set (reg:SI 114 [ D.12979 ])
        (reg:SI 0 ax)) ExecCommand.c:265 -1
     (nil))
(insn 266 265 267 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 114 [ D.12979 ])
            (const_int 0 [0]))) ExecCommand.c:265 -1
     (nil))
(jump_insn 267 266 268 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 272)
            (pc))) ExecCommand.c:265 -1
     (nil)
 -> 272)
(note 268 267 269 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 269 268 270 40 (set (reg/f:DI 115 [ D.12983 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 command.responseBuffer+0 S8 A64])) ExecCommand.c:266 -1
     (nil))
(insn 270 269 271 40 (parallel [
            (set (reg/f:DI 116 [ D.12983 ])
                (plus:DI (reg/f:DI 115 [ D.12983 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:266 -1
     (nil))
(insn 271 270 272 40 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [0 command.responseBuffer+0 S8 A64])
        (reg/f:DI 116 [ D.12983 ])) ExecCommand.c:266 -1
     (nil))
(code_label 272 271 273 41 23 "" [1 uses])
(note 273 272 274 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 41 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:270 -1
     (nil))
(insn 275 274 276 41 (set (reg:DI 5 di)
        (reg:DI 179)) ExecCommand.c:270 -1
     (nil))
(call_insn 276 275 277 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CommandDispatcher") [flags 0x41]  <function_decl 0x7f15236cda20 CommandDispatcher>) [0 CommandDispatcher S1 A8])
            (const_int 0 [0]))) ExecCommand.c:270 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 277 276 278 41 (set (reg:SI 180)
        (reg:SI 0 ax)) ExecCommand.c:270 -1
     (nil))
(insn 278 277 279 41 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
        (reg:SI 180)) ExecCommand.c:270 -1
     (nil))
(insn 279 278 280 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])
            (const_int 0 [0]))) ExecCommand.c:271 -1
     (nil))
(jump_insn 280 279 281 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) ExecCommand.c:271 -1
     (nil)
 -> 284)
(note 281 280 282 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(jump_insn 282 281 283 42 (set (pc)
        (label_ref 289)) ExecCommand.c:272 -1
     (nil)
 -> 289)
(barrier 283 282 284)
(code_label 284 283 285 43 24 "" [1 uses])
(note 285 284 286 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 43 (parallel [
            (set (reg:DI 181)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:274 -1
     (nil))
(insn 287 286 288 43 (set (reg:DI 5 di)
        (reg:DI 181)) ExecCommand.c:274 -1
     (nil))
(call_insn 288 287 289 43 (call (mem:QI (symbol_ref:DI ("BuildResponseSession") [flags 0x41]  <function_decl 0x7f1523636798 BuildResponseSession>) [0 BuildResponseSession S1 A8])
        (const_int 0 [0])) ExecCommand.c:274 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 289 288 290 44 6 ("Cleanup") [13 uses])
(note 290 289 291 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 44 (set (reg:SI 117 [ D.12979 ])
        (mem/c:SI (symbol_ref:DI ("g_clearOrderly") [flags 0x40]  <var_decl 0x7f15235b4b40 g_clearOrderly>) [0 g_clearOrderly+0 S4 A32])) ExecCommand.c:276 -1
     (nil))
(insn 292 291 293 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.12979 ])
            (const_int 1 [0x1]))) ExecCommand.c:276 -1
     (nil))
(jump_insn 293 292 294 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 316)
            (pc))) ExecCommand.c:276 -1
     (nil)
 -> 316)
(note 294 293 295 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 45 (set (reg:HI 118 [ D.12981 ])
        (mem/j/c:HI (const:DI (plus:DI (symbol_ref:DI ("gp") [flags 0x40]  <var_decl 0x7f15235b4ea0 gp>)
                    (const_int 888 [0x378]))) [0 gp.orderlyState+0 S2 A64])) ExecCommand.c:277 -1
     (nil))
(insn 296 295 297 45 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 118 [ D.12981 ])
            (const_int -3 [0xfffffffffffffffd]))) ExecCommand.c:277 -1
     (nil))
(jump_insn 297 296 298 45 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 316)
            (pc))) ExecCommand.c:277 -1
     (nil)
 -> 316)
(note 298 297 299 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 300 46 (set (reg:SI 119 [ D.12979 ])
        (mem/c:SI (symbol_ref:DI ("g_daUsed") [flags 0x40]  <var_decl 0x7f15235b4990 g_daUsed>) [0 g_daUsed+0 S4 A32])) ExecCommand.c:280 -1
     (nil))
(insn 300 299 301 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ D.12979 ])
            (const_int 0 [0]))) ExecCommand.c:280 -1
     (nil))
(jump_insn 301 300 302 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 306)
            (pc))) ExecCommand.c:280 -1
     (nil)
 -> 306)
(note 302 301 303 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 47 (set (reg:HI 87 [ D.12978 ])
        (const_int -2 [0xfffffffffffffffe])) ExecCommand.c:280 -1
     (nil))
(jump_insn 304 303 305 47 (set (pc)
        (label_ref 309)) -1
     (nil)
 -> 309)
(barrier 305 304 306)
(code_label 306 305 307 48 26 "" [1 uses])
(note 307 306 308 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 48 (set (reg:HI 87 [ D.12978 ])
        (const_int -1 [0xffffffffffffffff])) ExecCommand.c:280 -1
     (nil))
(code_label 309 308 310 49 27 "" [1 uses])
(note 310 309 311 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 311 310 312 49 (set (mem/j/c:HI (const:DI (plus:DI (symbol_ref:DI ("gp") [flags 0x40]  <var_decl 0x7f15235b4ea0 gp>)
                    (const_int 888 [0x378]))) [0 gp.orderlyState+0 S2 A64])
        (reg:HI 87 [ D.12978 ])) ExecCommand.c:280 -1
     (nil))
(insn 312 311 313 49 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("gp") [flags 0x40]  <var_decl 0x7f15235b4ea0 gp>)
                (const_int 888 [0x378])))) ExecCommand.c:284 -1
     (nil))
(insn 313 312 314 49 (set (reg:SI 4 si)
        (const_int 2 [0x2])) ExecCommand.c:284 -1
     (nil))
(insn 314 313 315 49 (set (reg:SI 5 di)
        (const_int 888 [0x378])) ExecCommand.c:284 -1
     (nil))
(call_insn 315 314 316 49 (call (mem:QI (symbol_ref:DI ("NvWrite") [flags 0x41]  <function_decl 0x7f152361dbd0 NvWrite>) [0 NvWrite S1 A8])
        (const_int 0 [0])) ExecCommand.c:284 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(code_label 316 315 317 50 25 "" [2 uses])
(note 317 316 318 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(call_insn 318 317 319 50 (call (mem:QI (symbol_ref:DI ("ObjectCleanupEvict") [flags 0x41]  <function_decl 0x7f15235d6d80 ObjectCleanupEvict>) [0 ObjectCleanupEvict S1 A8])
        (const_int 0 [0])) ExecCommand.c:290 -1
     (nil)
    (nil))
(insn 319 318 320 50 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -336 [0xfffffffffffffeb0])) [0 response+0 S8 A64])) ExecCommand.c:293 -1
     (nil))
(insn 320 319 321 50 (set (reg/f:DI 120 [ D.12982 ])
        (mem/f:DI (reg/f:DI 182) [0 *response_21(D)+0 S8 A64])) ExecCommand.c:293 -1
     (nil))
(insn 321 320 322 50 (set (reg:SI 183)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 result+0 S4 A32])) ExecCommand.c:293 -1
     (nil))
(insn 322 321 323 50 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:293 -1
     (nil))
(insn 323 322 324 50 (set (reg:SI 1 dx)
        (reg:SI 183)) ExecCommand.c:293 -1
     (nil))
(insn 324 323 325 50 (set (reg:DI 4 si)
        (reg/f:DI 120 [ D.12982 ])) ExecCommand.c:293 -1
     (nil))
(insn 325 324 326 50 (set (reg:DI 5 di)
        (reg:DI 184)) ExecCommand.c:293 -1
     (nil))
(call_insn 326 325 327 50 (call (mem:QI (symbol_ref:DI ("BuildResponseHeader") [flags 0x41]  <function_decl 0x7f15236cd948 BuildResponseHeader>) [0 BuildResponseHeader S1 A8])
        (const_int 0 [0])) ExecCommand.c:293 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 327 326 328 50 (set (reg:QI 121 [ D.12984 ])
        (mem/c:QI (symbol_ref:DI ("g_updateNV") [flags 0x40]  <var_decl 0x7f15235b4a20 g_updateNV>) [0 g_updateNV+0 S1 A8])) ExecCommand.c:299 -1
     (nil))
(insn 328 327 329 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 121 [ D.12984 ])
            (const_int 0 [0]))) ExecCommand.c:299 -1
     (nil))
(jump_insn 329 328 330 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 355)
            (pc))) ExecCommand.c:299 -1
     (nil)
 -> 355)
(note 330 329 331 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 331 330 332 51 (set (reg:SI 122 [ D.12979 ])
        (mem/c:SI (symbol_ref:DI ("g_inFailureMode") [flags 0x40]  <var_decl 0x7f15235f6a20 g_inFailureMode>) [0 g_inFailureMode+0 S4 A32])) ExecCommand.c:299 -1
     (nil))
(insn 332 331 333 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.12979 ])
            (const_int 0 [0]))) ExecCommand.c:299 -1
     (nil))
(jump_insn 333 332 334 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 355)
            (pc))) ExecCommand.c:299 -1
     (nil)
 -> 355)
(note 334 333 335 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 335 334 336 52 (set (reg:QI 123 [ D.12984 ])
        (mem/c:QI (symbol_ref:DI ("g_updateNV") [flags 0x40]  <var_decl 0x7f15235b4a20 g_updateNV>) [0 g_updateNV+0 S1 A8])) ExecCommand.c:301 -1
     (nil))
(insn 336 335 337 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 123 [ D.12984 ])
            (const_int 3 [0x3]))) ExecCommand.c:301 -1
     (nil))
(jump_insn 337 336 338 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 340)
            (pc))) ExecCommand.c:301 -1
     (nil)
 -> 340)
(note 338 337 339 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(call_insn 339 338 340 53 (call (mem:QI (symbol_ref:DI ("NvUpdateIndexOrderlyData") [flags 0x41]  <function_decl 0x7f15236230d8 NvUpdateIndexOrderlyData>) [0 NvUpdateIndexOrderlyData S1 A8])
        (const_int 0 [0])) ExecCommand.c:302 -1
     (nil)
    (nil))
(code_label 340 339 341 54 29 "" [1 uses])
(note 341 340 342 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(call_insn 342 341 343 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvCommit") [flags 0x41]  <function_decl 0x7f152361d870 NvCommit>) [0 NvCommit S1 A8])
            (const_int 0 [0]))) ExecCommand.c:303 -1
     (nil)
    (nil))
(insn 343 342 344 54 (set (reg:SI 124 [ D.12979 ])
        (reg:SI 0 ax)) ExecCommand.c:303 -1
     (nil))
(insn 344 343 345 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 124 [ D.12979 ])
            (const_int 0 [0]))) ExecCommand.c:303 -1
     (nil))
(jump_insn 345 344 346 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 352)
            (pc))) ExecCommand.c:303 -1
     (nil)
 -> 352)
(note 346 345 347 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 348 55 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) ExecCommand.c:304 -1
     (nil))
(insn 348 347 349 55 (set (reg:SI 4 si)
        (const_int 304 [0x130])) ExecCommand.c:304 -1
     (nil))
(insn 349 348 350 55 (set (reg:DI 5 di)
        (const_int 0 [0])) ExecCommand.c:304 -1
     (nil))
(call_insn 350 349 351 55 (call (mem:QI (symbol_ref:DI ("TpmFail") [flags 0x41]  <function_decl 0x7f15236360d8 TpmFail>) [0 TpmFail S1 A8])
        (const_int 0 [0])) ExecCommand.c:304 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 351 350 352)
(code_label 352 351 353 56 30 "" [1 uses])
(note 353 352 354 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 354 353 355 56 (set (mem/c:QI (symbol_ref:DI ("g_updateNV") [flags 0x40]  <var_decl 0x7f15235b4a20 g_updateNV>) [0 g_updateNV+0 S1 A8])
        (const_int 0 [0])) ExecCommand.c:305 -1
     (nil))
(code_label 355 354 356 57 28 "" [2 uses])
(note 356 355 357 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 357 356 358 57 (set (reg:SI 125 [ D.12979 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 command.parameterSize+0 S4 A64])) ExecCommand.c:307 -1
     (nil))
(insn 358 357 359 57 (set (reg:SI 126 [ D.12980 ])
        (reg:SI 125 [ D.12979 ])) ExecCommand.c:307 -1
     (nil))
(insn 359 358 360 57 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 126 [ D.12980 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -292 [0xfffffffffffffedc])) [0 maxResponse+0 S4 A32]))) ExecCommand.c:307 -1
     (nil))
(jump_insn 360 359 361 57 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 367)
            (pc))) ExecCommand.c:307 -1
     (nil)
 -> 367)
(note 361 360 362 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 363 58 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) ExecCommand.c:307 -1
     (nil))
(insn 363 362 364 58 (set (reg:SI 4 si)
        (const_int 307 [0x133])) ExecCommand.c:307 -1
     (nil))
(insn 364 363 365 58 (set (reg:DI 5 di)
        (const_int 0 [0])) ExecCommand.c:307 -1
     (nil))
(call_insn 365 364 366 58 (call (mem:QI (symbol_ref:DI ("TpmFail") [flags 0x41]  <function_decl 0x7f15236360d8 TpmFail>) [0 TpmFail S1 A8])
        (const_int 0 [0])) ExecCommand.c:307 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 366 365 367)
(code_label 367 366 368 59 31 "" [1 uses])
(note 368 367 369 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 369 368 370 59 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -328 [0xfffffffffffffeb8])) [0 responseSize+0 S8 A64])) ExecCommand.c:309 -1
     (nil))
(insn 370 369 371 59 (set (reg:SI 127 [ D.12980 ])
        (mem:SI (reg/f:DI 185) [0 *responseSize_14(D)+0 S4 A32])) ExecCommand.c:309 -1
     (nil))
(insn 371 370 372 59 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -292 [0xfffffffffffffedc])) [0 maxResponse+0 S4 A32])) ExecCommand.c:309 -1
     (nil))
(insn 372 371 373 59 (parallel [
            (set (reg:SI 128 [ D.12980 ])
                (minus:SI (reg:SI 186)
                    (reg:SI 127 [ D.12980 ])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:309 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -292 [0xfffffffffffffedc])) [0 maxResponse+0 S4 A32])
            (reg:SI 127 [ D.12980 ]))
        (nil)))
(insn 373 372 374 59 (set (reg:DI 129 [ D.12985 ])
        (zero_extend:DI (reg:SI 128 [ D.12980 ]))) ExecCommand.c:309 -1
     (nil))
(insn 374 373 375 59 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -336 [0xfffffffffffffeb0])) [0 response+0 S8 A64])) ExecCommand.c:309 -1
     (nil))
(insn 375 374 376 59 (set (reg/f:DI 130 [ D.12982 ])
        (mem/f:DI (reg/f:DI 187) [0 *response_21(D)+0 S8 A64])) ExecCommand.c:309 -1
     (nil))
(insn 376 375 377 59 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -328 [0xfffffffffffffeb8])) [0 responseSize+0 S8 A64])) ExecCommand.c:309 -1
     (nil))
(insn 377 376 378 59 (set (reg:SI 131 [ D.12980 ])
        (mem:SI (reg/f:DI 188) [0 *responseSize_14(D)+0 S4 A32])) ExecCommand.c:309 -1
     (nil))
(insn 378 377 379 59 (set (reg:DI 132 [ D.12986 ])
        (zero_extend:DI (reg:SI 131 [ D.12980 ]))) ExecCommand.c:309 -1
     (nil))
(insn 379 378 380 59 (parallel [
            (set (reg/f:DI 133 [ D.12987 ])
                (plus:DI (reg/f:DI 130 [ D.12982 ])
                    (reg:DI 132 [ D.12986 ])))
            (clobber (reg:CC 17 flags))
        ]) ExecCommand.c:309 -1
     (nil))
(insn 380 379 381 59 (set (reg:DI 1 dx)
        (reg:DI 129 [ D.12985 ])) ExecCommand.c:309 -1
     (nil))
(insn 381 380 382 59 (set (reg:SI 4 si)
        (const_int 0 [0])) ExecCommand.c:309 -1
     (nil))
(insn 382 381 383 59 (set (reg:DI 5 di)
        (reg/f:DI 133 [ D.12987 ])) ExecCommand.c:309 -1
     (nil))
(call_insn 383 382 384 59 (call (mem:QI (symbol_ref:DI ("MemorySet") [flags 0x41]  <function_decl 0x7f15236d1870 MemorySet>) [0 MemorySet S1 A8])
        (const_int 0 [0])) ExecCommand.c:309 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 384 383 385 59 (set (reg:SI 134 [ D.12979 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 command.parameterSize+0 S4 A64])) ExecCommand.c:311 -1
     (nil))
(insn 385 384 386 59 (set (reg:SI 135 [ D.12980 ])
        (reg:SI 134 [ D.12979 ])) ExecCommand.c:311 -1
     (nil))
(insn 386 385 387 59 (set (reg/f:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -328 [0xfffffffffffffeb8])) [0 responseSize+0 S8 A64])) ExecCommand.c:311 -1
     (nil))
(insn 387 386 401 59 (set (mem:SI (reg/f:DI 189) [0 *responseSize_14(D)+0 S4 A32])
        (reg:SI 135 [ D.12980 ])) ExecCommand.c:311 -1
     (nil))
(insn 401 387 392 59 (const_int 0 [0]) ExecCommand.c:312 -1
     (nil))
(code_label 392 401 398 62 1 "" [1 uses])
(note 398 392 393 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 393 398 394 62 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.12988+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) ExecCommand.c:313 -1
     (nil))
(jump_insn 394 393 399 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 397)
            (pc))) ExecCommand.c:313 -1
     (nil)
 -> 397)
(note 399 394 395 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(call_insn 395 399 396 63 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f1523736948 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ExecCommand.c:313 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 396 395 397)
(code_label 397 396 400 64 33 "" [1 uses])
(note 400 397 0 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
