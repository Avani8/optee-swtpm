
;; Function TPM2_StartAuthSession (TPM2_StartAuthSession, funcdef_no=2, decl_uid=12865, cgraph_uid=2, symbol_order=2)

Partition 4: size 52 align 16
	salt
Partition 3: size 8 align 8
	nvIndex_53
Partition 2: size 8 align 8
	object_47
Partition 1: size 8 align 8
	tpmKey_18
Partition 0: size 4 align 4
	result_6

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34
Purged edges from bb 38


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 27 from 36 to 37.
Redirecting jump 52 from 36 to 37.
Redirecting jump 62 from 36 to 37.
Redirecting jump 73 from 36 to 37.
Redirecting jump 84 from 36 to 37.
Redirecting jump 107 from 36 to 37.
Redirecting jump 117 from 36 to 37.
Forwarding edge 21->22 to 30 failed.
Redirecting jump 134 from 30 to 31.
Edge 23->25 redirected to 31
Redirecting jump 151 from 36 to 37.
deleting block 25
Edge 27->29 redirected to 31
Redirecting jump 182 from 36 to 37.
deleting block 29
deleting block 30
Redirecting jump 208 from 36 to 37.
Merging block 36 into block 35...
Merged blocks 35 and 36.
Merged 35 and 36 without moving.
Removing jump 246.
Merging block 38 into block 37...
Merged blocks 37 and 38.
Merged 37 and 38 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) SessionCommands.c:70 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) SessionCommands.c:70 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.12980+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) SessionCommands.c:70 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [0 result+0 S4 A32])
        (const_int 0 [0])) SessionCommands.c:71 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:77 -1
     (nil))
(insn 10 9 11 2 (set (reg:HI 88 [ D.12971 ])
        (mem/j:HI (plus:DI (reg/f:DI 133)
                (const_int 8 [0x8])) [0 in_8(D)->nonceCaller.t.size+0 S2 A32])) SessionCommands.c:77 -1
     (nil))
(insn 11 10 12 2 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 88 [ D.12971 ])
            (const_int 15 [0xf]))) SessionCommands.c:77 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) SessionCommands.c:77 -1
     (nil)
 -> 24)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:78 -1
     (nil))
(insn 15 14 16 4 (set (reg:HI 89 [ D.12971 ])
        (mem/j:HI (plus:DI (reg/f:DI 134)
                (const_int 8 [0x8])) [0 in_8(D)->nonceCaller.t.size+0 S2 A32])) SessionCommands.c:78 -1
     (nil))
(insn 16 15 17 4 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:78 -1
     (nil))
(insn 17 16 18 4 (set (reg:HI 90 [ D.12971 ])
        (mem/j:HI (plus:DI (reg/f:DI 135)
                (const_int 324 [0x144])) [0 in_8(D)->authHash+0 S2 A32])) SessionCommands.c:78 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 91 [ D.12972 ])
        (zero_extend:SI (reg:HI 90 [ D.12971 ]))) SessionCommands.c:78 -1
     (nil))
(insn 19 18 20 4 (set (reg:SI 5 di)
        (reg:SI 91 [ D.12972 ])) SessionCommands.c:78 -1
     (nil))
(call_insn 20 19 21 4 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashGetDigestSize") [flags 0x41]  <function_decl 0x7fef32dfde58 CryptHashGetDigestSize>) [0 CryptHashGetDigestSize S1 A8])
            (const_int 0 [0]))) SessionCommands.c:78 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 21 20 22 4 (set (reg:HI 92 [ D.12971 ])
        (reg:HI 0 ax)) SessionCommands.c:78 -1
     (nil))
(insn 22 21 23 4 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 89 [ D.12971 ])
            (reg:HI 92 [ D.12971 ]))) SessionCommands.c:78 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) SessionCommands.c:78 -1
     (nil)
 -> 29)
(code_label 24 23 25 5 2 "" [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:SI 87 [ D.12970 ])
        (const_int 469 [0x1d5])) SessionCommands.c:79 -1
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (label_ref:DI 243)) SessionCommands.c:79 654 {jump}
     (nil)
 -> 243)
(barrier 28 27 29)
(code_label 29 28 30 6 3 "" [1 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:81 -1
     (nil))
(insn 32 31 33 6 (set (reg:SI 93 [ D.12973 ])
        (mem/j:SI (reg/f:DI 136) [0 in_8(D)->tpmKey+0 S4 A32])) SessionCommands.c:81 -1
     (nil))
(insn 33 32 34 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.12973 ])
            (const_int 1073741831 [0x40000007]))) SessionCommands.c:81 -1
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) SessionCommands.c:81 -1
     (nil)
 -> 109)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:84 -1
     (nil))
(insn 37 36 38 7 (set (reg:SI 94 [ D.12973 ])
        (mem/j:SI (reg/f:DI 137) [0 in_8(D)->tpmKey+0 S4 A32])) SessionCommands.c:84 -1
     (nil))
(insn 38 37 39 7 (set (reg:SI 5 di)
        (reg:SI 94 [ D.12973 ])) SessionCommands.c:84 -1
     (nil))
(call_insn 39 38 40 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7fef32d150d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) SessionCommands.c:84 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 40 39 41 7 (set (reg:DI 138)
        (reg:DI 0 ax)) SessionCommands.c:84 -1
     (nil))
(insn 41 40 42 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 tpmKey+0 S8 A64])
        (reg:DI 138)) SessionCommands.c:84 -1
     (nil))
(insn 42 41 43 7 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 tpmKey+0 S8 A64])) SessionCommands.c:89 -1
     (nil))
(insn 43 42 44 7 (set (reg:HI 95 [ D.12971 ])
        (mem/j:HI (plus:DI (reg/f:DI 139)
                (const_int 4 [0x4])) [0 tpmKey_18->publicArea.type+0 S2 A32])) SessionCommands.c:89 -1
     (nil))
(insn 44 43 45 7 (set (reg:SI 96 [ D.12972 ])
        (zero_extend:SI (reg:HI 95 [ D.12971 ]))) SessionCommands.c:89 -1
     (nil))
(insn 45 44 46 7 (set (reg:SI 5 di)
        (reg:SI 96 [ D.12972 ])) SessionCommands.c:89 -1
     (nil))
(call_insn 46 45 47 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptIsAsymAlgorithm") [flags 0x41]  <function_decl 0x7fef32df65e8 CryptIsAsymAlgorithm>) [0 CryptIsAsymAlgorithm S1 A8])
            (const_int 0 [0]))) SessionCommands.c:89 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 47 46 48 7 (set (reg:SI 97 [ D.12972 ])
        (reg:SI 0 ax)) SessionCommands.c:89 -1
     (nil))
(insn 48 47 49 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.12972 ])
            (const_int 0 [0]))) SessionCommands.c:89 -1
     (nil))
(jump_insn 49 48 50 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) SessionCommands.c:89 -1
     (nil)
 -> 54)
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 8 (set (reg:SI 87 [ D.12970 ])
        (const_int 412 [0x19c])) SessionCommands.c:90 -1
     (nil))
(jump_insn 52 51 53 8 (set (pc)
        (label_ref:DI 243)) SessionCommands.c:90 654 {jump}
     (nil)
 -> 243)
(barrier 53 52 54)
(code_label 54 53 55 9 6 "" [1 uses])
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:92 -1
     (nil))
(insn 57 56 58 9 (set (reg:HI 98 [ D.12971 ])
        (mem/j:HI (plus:DI (reg/f:DI 140)
                (const_int 58 [0x3a])) [0 in_8(D)->encryptedSalt.t.size+0 S2 A16])) SessionCommands.c:92 -1
     (nil))
(insn 58 57 59 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 98 [ D.12971 ])
            (const_int 0 [0]))) SessionCommands.c:92 -1
     (nil))
(jump_insn 59 58 60 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) SessionCommands.c:92 -1
     (nil)
 -> 64)
(note 60 59 61 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 10 (set (reg:SI 87 [ D.12970 ])
        (const_int 708 [0x2c4])) SessionCommands.c:93 -1
     (nil))
(jump_insn 62 61 63 10 (set (pc)
        (label_ref:DI 243)) SessionCommands.c:93 654 {jump}
     (nil)
 -> 243)
(barrier 63 62 64)
(code_label 64 63 65 11 7 "" [1 uses])
(note 65 64 66 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 11 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 tpmKey+0 S8 A64])) SessionCommands.c:96 -1
     (nil))
(insn 67 66 68 11 (set (reg:QI 99 [ D.12974 ])
        (mem:QI (reg/f:DI 141) [0 *tpmKey_18+0 S1 A64])) SessionCommands.c:96 -1
     (nil))
(insn 68 67 69 11 (parallel [
            (set (reg:QI 100 [ D.12974 ])
                (and:QI (reg:QI 99 [ D.12974 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) SessionCommands.c:96 -1
     (nil))
(insn 69 68 70 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 100 [ D.12974 ])
            (const_int 0 [0]))) SessionCommands.c:96 -1
     (nil))
(jump_insn 70 69 71 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) SessionCommands.c:96 -1
     (nil)
 -> 75)
(note 71 70 72 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 12 (set (reg:SI 87 [ D.12970 ])
        (const_int 395 [0x18b])) SessionCommands.c:97 -1
     (nil))
(jump_insn 73 72 74 12 (set (pc)
        (label_ref:DI 243)) SessionCommands.c:97 654 {jump}
     (nil)
 -> 243)
(barrier 74 73 75)
(code_label 75 74 76 13 8 "" [1 uses])
(note 76 75 77 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 13 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 tpmKey+0 S8 A64])) SessionCommands.c:100 -1
     (nil))
(insn 78 77 79 13 (set (reg:SI 101 [ D.12973 ])
        (mem/j:SI (plus:DI (reg/f:DI 142)
                (const_int 8 [0x8])) [0 tpmKey_18->publicArea.objectAttributes+0 S4 A64])) SessionCommands.c:100 -1
     (nil))
(insn 79 78 80 13 (parallel [
            (set (reg:SI 102 [ D.12973 ])
                (and:SI (reg:SI 101 [ D.12973 ])
                    (const_int 131072 [0x20000])))
            (clobber (reg:CC 17 flags))
        ]) SessionCommands.c:100 -1
     (nil))
(insn 80 79 81 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.12973 ])
            (const_int 0 [0]))) SessionCommands.c:100 -1
     (nil))
(jump_insn 81 80 82 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) SessionCommands.c:100 -1
     (nil)
 -> 86)
(note 82 81 83 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 14 (set (reg:SI 87 [ D.12970 ])
        (const_int 386 [0x182])) SessionCommands.c:101 -1
     (nil))
(jump_insn 84 83 85 14 (set (pc)
        (label_ref:DI 243)) SessionCommands.c:101 654 {jump}
     (nil)
 -> 243)
(barrier 85 84 86)
(code_label 86 85 87 15 9 "" [1 uses])
(note 87 86 88 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 15 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:104 -1
     (nil))
(insn 89 88 90 15 (parallel [
            (set (reg/f:DI 103 [ D.12975 ])
                (plus:DI (reg/f:DI 143)
                    (const_int 58 [0x3a])))
            (clobber (reg:CC 17 flags))
        ]) SessionCommands.c:104 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])
            (const_int 58 [0x3a]))
        (nil)))
(insn 90 89 91 15 (set (reg/f:DI 104 [ D.12976 ])
        (mem/f/c:DI (symbol_ref:DI ("SECRET_KEY") [flags 0x40]  <var_decl 0x7fef32d08240 SECRET_KEY>) [0 SECRET_KEY+0 S8 A64])) SessionCommands.c:104 -1
     (nil))
(insn 91 90 92 15 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:104 -1
     (nil))
(insn 92 91 93 15 (parallel [
            (set (reg/f:DI 105 [ D.12977 ])
                (plus:DI (reg/f:DI 144)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) SessionCommands.c:104 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 93 92 94 15 (parallel [
            (set (reg:DI 145)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) SessionCommands.c:104 -1
     (nil))
(insn 94 93 95 15 (set (reg:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 tpmKey+0 S8 A64])) SessionCommands.c:104 -1
     (nil))
(insn 95 94 96 15 (set (reg:DI 37 r8)
        (reg:DI 145)) SessionCommands.c:104 -1
     (nil))
(insn 96 95 97 15 (set (reg:DI 2 cx)
        (reg/f:DI 103 [ D.12975 ])) SessionCommands.c:104 -1
     (nil))
(insn 97 96 98 15 (set (reg:DI 1 dx)
        (reg/f:DI 104 [ D.12976 ])) SessionCommands.c:104 -1
     (nil))
(insn 98 97 99 15 (set (reg:DI 4 si)
        (reg/f:DI 105 [ D.12977 ])) SessionCommands.c:104 -1
     (nil))
(insn 99 98 100 15 (set (reg:DI 5 di)
        (reg:DI 146)) SessionCommands.c:104 -1
     (nil))
(call_insn 100 99 101 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptSecretDecrypt") [flags 0x41]  <function_decl 0x7fef32df6798 CryptSecretDecrypt>) [0 CryptSecretDecrypt S1 A8])
            (const_int 0 [0]))) SessionCommands.c:104 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 101 100 102 15 (set (reg:SI 147)
        (reg:SI 0 ax)) SessionCommands.c:104 -1
     (nil))
(insn 102 101 103 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [0 result+0 S4 A32])
        (reg:SI 147)) SessionCommands.c:104 -1
     (nil))
(insn 103 102 104 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -92 [0xffffffffffffffa4])) [0 result+0 S4 A32])
            (const_int 0 [0]))) SessionCommands.c:106 -1
     (nil))
(jump_insn 104 103 105 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) SessionCommands.c:106 -1
     (nil)
 -> 122)
(note 105 104 106 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 16 (set (reg:SI 87 [ D.12970 ])
        (const_int 708 [0x2c4])) SessionCommands.c:107 -1
     (nil))
(jump_insn 107 106 108 16 (set (pc)
        (label_ref:DI 243)) SessionCommands.c:107 654 {jump}
     (nil)
 -> 243)
(barrier 108 107 109)
(code_label 109 108 110 17 5 "" [1 uses])
(note 110 109 111 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 17 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:112 -1
     (nil))
(insn 112 111 113 17 (set (reg:HI 106 [ D.12971 ])
        (mem/j:HI (plus:DI (reg/f:DI 148)
                (const_int 58 [0x3a])) [0 in_8(D)->encryptedSalt.t.size+0 S2 A16])) SessionCommands.c:112 -1
     (nil))
(insn 113 112 114 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 106 [ D.12971 ])
            (const_int 0 [0]))) SessionCommands.c:112 -1
     (nil))
(jump_insn 114 113 115 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) SessionCommands.c:112 -1
     (nil)
 -> 119)
(note 115 114 116 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 18 (set (reg:SI 87 [ D.12970 ])
        (const_int 708 [0x2c4])) SessionCommands.c:113 -1
     (nil))
(jump_insn 117 116 118 18 (set (pc)
        (label_ref:DI 243)) SessionCommands.c:113 654 {jump}
     (nil)
 -> 243)
(barrier 118 117 119)
(code_label 119 118 120 19 11 "" [1 uses])
(note 120 119 121 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 19 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 salt.t.size+0 S2 A64])
        (const_int 0 [0])) SessionCommands.c:114 -1
     (nil))
(code_label 122 121 123 20 10 "" [1 uses])
(note 123 122 124 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 20 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:116 -1
     (nil))
(insn 125 124 126 20 (set (reg:SI 107 [ D.12973 ])
        (mem/j:SI (plus:DI (reg/f:DI 149)
                (const_int 4 [0x4])) [0 in_8(D)->bind+0 S4 A32])) SessionCommands.c:116 -1
     (nil))
(insn 126 125 127 20 (set (reg:SI 5 di)
        (reg:SI 107 [ D.12973 ])) SessionCommands.c:116 -1
     (nil))
(call_insn 127 126 128 20 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleGetType") [flags 0x41]  <function_decl 0x7fef32ddf360 HandleGetType>) [0 HandleGetType S1 A8])
            (const_int 0 [0]))) SessionCommands.c:116 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 128 127 129 20 (set (reg:QI 108 [ D.12974 ])
        (reg:QI 0 ax)) SessionCommands.c:116 -1
     (nil))
(insn 129 128 130 20 (set (reg:SI 109 [ D.12972 ])
        (zero_extend:SI (reg:QI 108 [ D.12974 ]))) SessionCommands.c:116 -1
     (nil))
(insn 130 129 131 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.12972 ])
            (const_int 1 [0x1]))) SessionCommands.c:116 -1
     (nil))
(jump_insn 131 130 257 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) SessionCommands.c:116 -1
     (nil)
 -> 157)
(note 257 131 132 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 132 257 133 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.12972 ])
            (const_int 128 [0x80]))) SessionCommands.c:116 -1
     (nil))
(jump_insn 133 132 258 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) SessionCommands.c:116 -1
     (nil)
 -> 136)
(note 258 133 134 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(jump_insn 134 258 135 22 (set (pc)
        (label_ref:DI 190)) SessionCommands.c:116 654 {jump}
     (nil)
 -> 190)
(barrier 135 134 136)
(code_label 136 135 137 23 14 "" [1 uses])
(note 137 136 138 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 23 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:120 -1
     (nil))
(insn 139 138 140 23 (set (reg:SI 110 [ D.12973 ])
        (mem/j:SI (plus:DI (reg/f:DI 150)
                (const_int 4 [0x4])) [0 in_8(D)->bind+0 S4 A32])) SessionCommands.c:120 -1
     (nil))
(insn 140 139 141 23 (set (reg:SI 5 di)
        (reg:SI 110 [ D.12973 ])) SessionCommands.c:120 -1
     (nil))
(call_insn 141 140 142 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7fef32d150d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) SessionCommands.c:120 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 142 141 143 23 (set (reg:DI 151)
        (reg:DI 0 ax)) SessionCommands.c:120 -1
     (nil))
(insn 143 142 144 23 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 object+0 S8 A64])
        (reg:DI 151)) SessionCommands.c:120 -1
     (nil))
(insn 144 143 145 23 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 object+0 S8 A64])) SessionCommands.c:128 -1
     (nil))
(insn 145 144 146 23 (set (reg:QI 111 [ D.12974 ])
        (mem:QI (reg/f:DI 152) [0 *object_47+0 S1 A64])) SessionCommands.c:128 -1
     (nil))
(insn 146 145 147 23 (parallel [
            (set (reg:QI 112 [ D.12974 ])
                (and:QI (reg:QI 111 [ D.12974 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) SessionCommands.c:128 -1
     (nil))
(insn 147 146 148 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 112 [ D.12974 ])
            (const_int 0 [0]))) SessionCommands.c:128 -1
     (nil))
(jump_insn 148 147 149 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 190)
            (pc))) SessionCommands.c:128 612 {*jcc_1}
     (nil)
 -> 190)
(note 149 148 150 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 24 (set (reg:SI 87 [ D.12970 ])
        (const_int 651 [0x28b])) SessionCommands.c:129 -1
     (nil))
(jump_insn 151 150 152 24 (set (pc)
        (label_ref:DI 243)) SessionCommands.c:129 654 {jump}
     (nil)
 -> 243)
(barrier 152 151 157)
(code_label 157 152 158 26 13 "" [1 uses])
(note 158 157 159 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 26 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:135 -1
     (nil))
(insn 160 159 161 26 (set (reg:SI 113 [ D.12973 ])
        (mem/j:SI (plus:DI (reg/f:DI 153)
                (const_int 4 [0x4])) [0 in_8(D)->bind+0 S4 A32])) SessionCommands.c:135 -1
     (nil))
(insn 161 160 162 26 (set (reg:DI 4 si)
        (const_int 0 [0])) SessionCommands.c:135 -1
     (nil))
(insn 162 161 163 26 (set (reg:SI 5 di)
        (reg:SI 113 [ D.12973 ])) SessionCommands.c:135 -1
     (nil))
(call_insn 163 162 164 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetIndexInfo") [flags 0x41]  <function_decl 0x7fef32d35bd0 NvGetIndexInfo>) [0 NvGetIndexInfo S1 A8])
            (const_int 0 [0]))) SessionCommands.c:135 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 164 163 165 26 (set (reg:DI 154)
        (reg:DI 0 ax)) SessionCommands.c:135 -1
     (nil))
(insn 165 164 166 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 nvIndex+0 S8 A64])
        (reg:DI 154)) SessionCommands.c:135 -1
     (nil))
(insn 166 165 167 26 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 nvIndex+0 S8 A64])) SessionCommands.c:136 -1
     (nil))
(insn 167 166 168 26 (set (reg:SI 114 [ D.12973 ])
        (mem/j:SI (plus:DI (reg/f:DI 155)
                (const_int 8 [0x8])) [0 nvIndex_53->publicArea.attributes+0 S4 A32])) SessionCommands.c:136 -1
     (nil))
(insn 168 167 169 26 (parallel [
            (set (reg:SI 115 [ D.12973 ])
                (and:SI (reg:SI 114 [ D.12973 ])
                    (const_int 240 [0xf0])))
            (clobber (reg:CC 17 flags))
        ]) SessionCommands.c:136 -1
     (nil))
(insn 169 168 170 26 (parallel [
            (set (reg:SI 116 [ D.12973 ])
                (lshiftrt:SI (reg:SI 115 [ D.12973 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) SessionCommands.c:136 -1
     (nil))
(insn 170 169 171 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ D.12973 ])
            (const_int 9 [0x9]))) SessionCommands.c:136 -1
     (nil))
(jump_insn 171 170 172 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) SessionCommands.c:136 -1
     (nil)
 -> 179)
(note 172 171 173 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 27 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 nvIndex+0 S8 A64])) SessionCommands.c:137 -1
     (nil))
(insn 174 173 175 27 (set (reg:SI 117 [ D.12973 ])
        (mem/j:SI (plus:DI (reg/f:DI 156)
                (const_int 8 [0x8])) [0 nvIndex_53->publicArea.attributes+0 S4 A32])) SessionCommands.c:137 -1
     (nil))
(insn 175 174 176 27 (parallel [
            (set (reg:SI 118 [ D.12973 ])
                (and:SI (reg:SI 117 [ D.12973 ])
                    (const_int 240 [0xf0])))
            (clobber (reg:CC 17 flags))
        ]) SessionCommands.c:137 -1
     (nil))
(insn 176 175 177 27 (parallel [
            (set (reg:SI 119 [ D.12973 ])
                (lshiftrt:SI (reg:SI 118 [ D.12973 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) SessionCommands.c:137 -1
     (nil))
(insn 177 176 178 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ D.12973 ])
            (const_int 8 [0x8]))) SessionCommands.c:137 -1
     (nil))
(jump_insn 178 177 179 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 190)
            (pc))) SessionCommands.c:137 612 {*jcc_1}
     (nil)
 -> 190)
(code_label 179 178 180 28 17 "" [1 uses])
(note 180 179 181 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 28 (set (reg:SI 87 [ D.12970 ])
        (const_int 651 [0x28b])) SessionCommands.c:138 -1
     (nil))
(jump_insn 182 181 183 28 (set (pc)
        (label_ref:DI 243)) SessionCommands.c:138 654 {jump}
     (nil)
 -> 243)
(barrier 183 182 190)
(code_label 190 183 191 31 16 "" [3 uses])
(note 191 190 192 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 31 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:146 -1
     (nil))
(insn 193 192 194 31 (set (reg:HI 120 [ D.12971 ])
        (mem/j:HI (plus:DI (reg/f:DI 157)
                (const_int 318 [0x13e])) [0 in_8(D)->symmetric.algorithm+0 S2 A16])) SessionCommands.c:146 -1
     (nil))
(insn 194 193 195 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 120 [ D.12971 ])
            (const_int 16 [0x10]))) SessionCommands.c:146 -1
     (nil))
(jump_insn 195 194 196 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) SessionCommands.c:146 -1
     (nil)
 -> 210)
(note 196 195 197 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 32 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:147 -1
     (nil))
(insn 198 197 199 32 (set (reg:HI 121 [ D.12971 ])
        (mem/j:HI (plus:DI (reg/f:DI 158)
                (const_int 318 [0x13e])) [0 in_8(D)->symmetric.algorithm+0 S2 A16])) SessionCommands.c:147 -1
     (nil))
(insn 199 198 200 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 121 [ D.12971 ])
            (const_int 10 [0xa]))) SessionCommands.c:147 -1
     (nil))
(jump_insn 200 199 201 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) SessionCommands.c:147 -1
     (nil)
 -> 210)
(note 201 200 202 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 33 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:148 -1
     (nil))
(insn 203 202 204 33 (set (reg:HI 122 [ D.12971 ])
        (mem/j:HI (plus:DI (reg/f:DI 159)
                (const_int 322 [0x142])) [0 in_8(D)->symmetric.mode.sym+0 S2 A16])) SessionCommands.c:148 -1
     (nil))
(insn 204 203 205 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 122 [ D.12971 ])
            (const_int 67 [0x43]))) SessionCommands.c:148 -1
     (nil))
(jump_insn 205 204 206 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) SessionCommands.c:148 -1
     (nil)
 -> 210)
(note 206 205 207 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 34 (set (reg:SI 87 [ D.12970 ])
        (const_int 1225 [0x4c9])) SessionCommands.c:149 -1
     (nil))
(jump_insn 208 207 209 34 (set (pc)
        (label_ref:DI 243)) SessionCommands.c:149 654 {jump}
     (nil)
 -> 243)
(barrier 209 208 210)
(code_label 210 209 211 35 19 "" [3 uses])
(note 211 210 212 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 35 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 out+0 S8 A64])) SessionCommands.c:157 -1
     (nil))
(insn 213 212 214 35 (parallel [
            (set (reg/f:DI 123 [ D.12977 ])
                (plus:DI (reg/f:DI 160)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) SessionCommands.c:157 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -112 [0xffffffffffffff90])) [0 out+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 214 213 215 35 (set (reg/f:DI 124 [ D.12978 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 out+0 S8 A64])) SessionCommands.c:158 -1
     (nil))
(insn 215 214 216 35 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:157 -1
     (nil))
(insn 216 215 217 35 (set (reg:SI 125 [ D.12973 ])
        (mem/j:SI (plus:DI (reg/f:DI 161)
                (const_int 4 [0x4])) [0 in_8(D)->bind+0 S4 A32])) SessionCommands.c:157 -1
     (nil))
(insn 217 216 218 35 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:157 -1
     (nil))
(insn 218 217 219 35 (parallel [
            (set (reg/f:DI 126 [ D.12979 ])
                (plus:DI (reg/f:DI 162)
                    (const_int 318 [0x13e])))
            (clobber (reg:CC 17 flags))
        ]) SessionCommands.c:157 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])
            (const_int 318 [0x13e]))
        (nil)))
(insn 219 218 220 35 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:157 -1
     (nil))
(insn 220 219 221 35 (parallel [
            (set (reg/f:DI 127 [ D.12977 ])
                (plus:DI (reg/f:DI 163)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) SessionCommands.c:157 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 221 220 222 35 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:157 -1
     (nil))
(insn 222 221 223 35 (set (reg:HI 128 [ D.12971 ])
        (mem/j:HI (plus:DI (reg/f:DI 164)
                (const_int 324 [0x144])) [0 in_8(D)->authHash+0 S2 A32])) SessionCommands.c:157 -1
     (nil))
(insn 223 222 224 35 (set (reg:SI 129 [ D.12972 ])
        (zero_extend:SI (reg:HI 128 [ D.12971 ]))) SessionCommands.c:157 -1
     (nil))
(insn 224 223 225 35 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) SessionCommands.c:157 -1
     (nil))
(insn 225 224 226 35 (set (reg:QI 130 [ D.12974 ])
        (mem/j:QI (plus:DI (reg/f:DI 165)
                (const_int 316 [0x13c])) [0 in_8(D)->sessionType+0 S1 A32])) SessionCommands.c:157 -1
     (nil))
(insn 226 225 227 35 (set (reg:SI 131 [ D.12972 ])
        (zero_extend:SI (reg:QI 130 [ D.12974 ]))) SessionCommands.c:157 -1
     (nil))
(insn 227 226 228 35 (parallel [
            (set (reg:DI 166)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) SessionCommands.c:157 -1
     (nil))
(insn 228 227 229 35 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg/f:DI 123 [ D.12977 ])) SessionCommands.c:157 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 229 228 230 35 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg/f:DI 124 [ D.12978 ])) SessionCommands.c:157 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 230 229 231 35 (set (reg:DI 38 r9)
        (reg:DI 166)) SessionCommands.c:157 -1
     (nil))
(insn 231 230 232 35 (set (reg:SI 37 r8)
        (reg:SI 125 [ D.12973 ])) SessionCommands.c:157 -1
     (nil))
(insn 232 231 233 35 (set (reg:DI 2 cx)
        (reg/f:DI 126 [ D.12979 ])) SessionCommands.c:157 -1
     (nil))
(insn 233 232 234 35 (set (reg:DI 1 dx)
        (reg/f:DI 127 [ D.12977 ])) SessionCommands.c:157 -1
     (nil))
(insn 234 233 235 35 (set (reg:SI 4 si)
        (reg:SI 129 [ D.12972 ])) SessionCommands.c:157 -1
     (nil))
(insn 235 234 236 35 (set (reg:SI 5 di)
        (reg:SI 131 [ D.12972 ])) SessionCommands.c:157 -1
     (nil))
(call_insn 236 235 237 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionCreate") [flags 0x41]  <function_decl 0x7fef32d2c798 SessionCreate>) [0 SessionCreate S1 A8])
            (const_int 16 [0x10]))) SessionCommands.c:157 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 237 236 238 35 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) SessionCommands.c:157 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 238 237 239 35 (set (reg:SI 167)
        (reg:SI 0 ax)) SessionCommands.c:157 -1
     (nil))
(insn 239 238 240 35 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [0 result+0 S4 A32])
        (reg:SI 167)) SessionCommands.c:157 -1
     (nil))
(insn 240 239 243 35 (set (reg:SI 87 [ D.12970 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [0 result+0 S4 A32])) SessionCommands.c:160 -1
     (nil))
(code_label 243 240 244 37 20 "" [10 uses])
(note 244 243 245 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 249 37 (set (reg:SI 132 [ <retval> ])
        (reg:SI 87 [ D.12970 ])) -1
     (nil))
(insn 249 245 250 37 (set (reg/i:SI 0 ax)
        (reg:SI 132 [ <retval> ])) SessionCommands.c:161 -1
     (nil))
(insn 250 249 251 37 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.12980+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) SessionCommands.c:161 -1
     (nil))
(jump_insn 251 250 259 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 254)
            (pc))) SessionCommands.c:161 -1
     (nil)
 -> 254)
(note 259 251 252 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(call_insn 252 259 253 39 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fef32e44948 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) SessionCommands.c:161 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 253 252 254)
(code_label 254 253 260 40 21 "" [1 uses])
(note 260 254 255 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 255 260 0 40 (use (reg/i:SI 0 ax)) SessionCommands.c:161 -1
     (nil))

;; Function TPM2_PolicyRestart (TPM2_PolicyRestart, funcdef_no=3, decl_uid=12883, cgraph_uid=3, symbol_order=3)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 17.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) SessionCommands.c:170 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 in+0 S8 A64])) SessionCommands.c:172 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 87 [ D.12983 ])
        (mem/j:SI (reg/f:DI 91) [0 in_2(D)->sessionHandle+0 S4 A32])) SessionCommands.c:172 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 5 di)
        (reg:SI 87 [ D.12983 ])) SessionCommands.c:172 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7fef32d2c6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) SessionCommands.c:172 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 88 [ D.12984 ])
        (reg:DI 0 ax)) SessionCommands.c:172 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.12984 ])) SessionCommands.c:172 -1
     (nil))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref:DI ("SessionResetPolicyData") [flags 0x41]  <function_decl 0x7fef32d2cca8 SessionResetPolicyData>) [0 SessionResetPolicyData S1 A8])
        (const_int 0 [0])) SessionCommands.c:172 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 16 2 (set (reg:SI 89 [ D.12985 ])
        (const_int 0 [0])) SessionCommands.c:173 -1
     (nil))
(insn 16 13 20 2 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ D.12985 ])) SessionCommands.c:173 -1
     (nil))
(insn 20 16 21 2 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) SessionCommands.c:174 -1
     (nil))
(insn 21 20 0 2 (use (reg/i:SI 0 ax)) SessionCommands.c:174 -1
     (nil))
