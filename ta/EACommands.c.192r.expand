
;; Function TPM2_PolicySigned (TPM2_PolicySigned, funcdef_no=2, decl_uid=12891, cgraph_uid=2, symbol_order=2)

Partition 6: size 232 align 16
	hashState
Partition 4: size 54 align 16
	entityName
Partition 5: size 50 align 16
	authHash
Partition 2: size 8 align 8
	session_13
Partition 0: size 8 align 8
	authTimeout_1
Partition 3: size 4 align 4
	expiresOnReset_61
Partition 1: size 4 align 4
	result_7

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 55 from 17 to 18.
Redirecting jump 76 from 17 to 18.
Redirecting jump 130 from 17 to 18.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.
Removing jump 232.
Merging block 19 into block 18...
Merged blocks 18 and 19.
Merged 18 and 19 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:78 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) EACommands.c:78 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13842+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:78 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 result+0 S4 A32])
        (const_int 0 [0])) EACommands.c:79 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -384 [0xfffffffffffffe80])) [0 authTimeout+0 S8 A64])
        (const_int 0 [0])) EACommands.c:84 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:87 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 88 [ D.13829 ])
        (mem/j:SI (plus:DI (reg/f:DI 123)
                (const_int 4 [0x4])) [0 in_10(D)->policySession+0 S4 A32])) EACommands.c:87 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13829 ])) EACommands.c:87 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:87 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 14 13 15 2 (set (reg:DI 124)
        (reg:DI 0 ax)) EACommands.c:87 -1
     (nil))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 session+0 S8 A64])
        (reg:DI 124)) EACommands.c:87 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 session+0 S8 A64])) EACommands.c:89 -1
     (nil))
(insn 17 16 18 2 (set (reg:QI 89 [ D.13830 ])
        (mem:QI (reg/f:DI 125) [0 *session_13+0 S1 A64])) EACommands.c:89 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:QI 90 [ D.13830 ])
                (and:QI (reg:QI 89 [ D.13830 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:89 -1
     (nil))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.13830 ])
            (const_int 0 [0]))) EACommands.c:89 -1
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 132)
            (pc))) EACommands.c:89 -1
     (nil)
 -> 132)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:91 -1
     (nil))
(insn 23 22 24 4 (parallel [
            (set (reg/f:DI 91 [ D.13831 ])
                (plus:DI (reg/f:DI 126)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:91 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 24 23 25 4 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:91 -1
     (nil))
(insn 25 24 26 4 (set (reg:SI 92 [ D.13832 ])
        (mem/j:SI (plus:DI (reg/f:DI 127)
                (const_int 160 [0xa0])) [0 in_10(D)->expiration+0 S4 A32])) EACommands.c:91 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 session+0 S8 A64])) EACommands.c:91 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 1 dx)
        (reg/f:DI 91 [ D.13831 ])) EACommands.c:91 -1
     (nil))
(insn 28 27 29 4 (set (reg:SI 4 si)
        (reg:SI 92 [ D.13832 ])) EACommands.c:91 -1
     (nil))
(insn 29 28 30 4 (set (reg:DI 5 di)
        (reg:DI 128)) EACommands.c:91 -1
     (nil))
(call_insn 30 29 31 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ComputeAuthTimeout") [flags 0x41]  <function_decl 0x7f3043fd6000 ComputeAuthTimeout>) [0 ComputeAuthTimeout S1 A8])
            (const_int 0 [0]))) EACommands.c:91 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 31 30 32 4 (set (reg:DI 129)
        (reg:DI 0 ax)) EACommands.c:91 -1
     (nil))
(insn 32 31 33 4 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -384 [0xfffffffffffffe80])) [0 authTimeout+0 S8 A64])
        (reg:DI 129)) EACommands.c:91 -1
     (nil))
(insn 33 32 34 4 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:92 -1
     (nil))
(insn 34 33 35 4 (parallel [
            (set (reg/f:DI 93 [ D.13831 ])
                (plus:DI (reg/f:DI 130)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:92 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 35 34 36 4 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:92 -1
     (nil))
(insn 36 35 37 4 (parallel [
            (set (reg/f:DI 94 [ D.13833 ])
                (plus:DI (reg/f:DI 131)
                    (const_int 58 [0x3a])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:92 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])
            (const_int 58 [0x3a]))
        (nil)))
(insn 37 36 38 4 (set (reg:DI 132)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -384 [0xfffffffffffffe80])) [0 authTimeout+0 S8 A64])) EACommands.c:92 -1
     (nil))
(insn 38 37 39 4 (set (reg:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 session+0 S8 A64])) EACommands.c:92 -1
     (nil))
(insn 39 38 40 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:92 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 40 39 41 4 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1088 [0x440])) EACommands.c:92 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 41 40 42 4 (set (reg:SI 38 r9)
        (const_int 576 [0x240])) EACommands.c:92 -1
     (nil))
(insn 42 41 43 4 (set (reg:SI 37 r8)
        (const_int 320 [0x140])) EACommands.c:92 -1
     (nil))
(insn 43 42 44 4 (set (reg:DI 2 cx)
        (reg/f:DI 93 [ D.13831 ])) EACommands.c:92 -1
     (nil))
(insn 44 43 45 4 (set (reg:DI 1 dx)
        (reg/f:DI 94 [ D.13833 ])) EACommands.c:92 -1
     (nil))
(insn 45 44 46 4 (set (reg:DI 4 si)
        (reg:DI 132)) EACommands.c:92 -1
     (nil))
(insn 46 45 47 4 (set (reg:DI 5 di)
        (reg:DI 133)) EACommands.c:92 -1
     (nil))
(call_insn 47 46 48 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PolicyParameterChecks") [flags 0x41]  <function_decl 0x7f3043fd1d80 PolicyParameterChecks>) [0 PolicyParameterChecks S1 A8])
            (const_int 16 [0x10]))) EACommands.c:92 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 48 47 49 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:92 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 49 48 50 4 (set (reg:SI 134)
        (reg:SI 0 ax)) EACommands.c:92 -1
     (nil))
(insn 50 49 51 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 result+0 S4 A32])
        (reg:SI 134)) EACommands.c:92 -1
     (nil))
(insn 51 50 52 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -392 [0xfffffffffffffe78])) [0 result+0 S4 A32])
            (const_int 0 [0]))) EACommands.c:97 -1
     (nil))
(jump_insn 52 51 53 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) EACommands.c:97 -1
     (nil)
 -> 57)
(note 53 52 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 5 (set (reg:SI 87 [ D.13828 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 result+0 S4 A32])) EACommands.c:98 -1
     (nil))
(jump_insn 55 54 56 5 (set (pc)
        (label_ref:DI 229)) EACommands.c:98 654 {jump}
     (nil)
 -> 229)
(barrier 56 55 57)
(code_label 57 56 58 6 3 "" [1 uses])
(note 58 57 59 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 6 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:120 -1
     (nil))
(insn 60 59 61 6 (parallel [
            (set (reg/f:DI 95 [ D.13834 ])
                (plus:DI (reg/f:DI 135)
                    (const_int 164 [0xa4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:120 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])
            (const_int 164 [0xa4]))
        (nil)))
(insn 61 60 62 6 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.13834 ])) EACommands.c:120 -1
     (nil))
(call_insn 62 61 63 6 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptGetSignHashAlg") [flags 0x41]  <function_decl 0x7f3043f95bd0 CryptGetSignHashAlg>) [0 CryptGetSignHashAlg S1 A8])
            (const_int 0 [0]))) EACommands.c:120 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 63 62 64 6 (set (reg:HI 96 [ D.13835 ])
        (reg:HI 0 ax)) EACommands.c:120 -1
     (nil))
(insn 64 63 65 6 (set (reg:SI 97 [ D.13832 ])
        (zero_extend:SI (reg:HI 96 [ D.13835 ]))) EACommands.c:119 -1
     (nil))
(insn 65 64 66 6 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:119 -1
     (nil))
(insn 66 65 67 6 (set (reg:SI 4 si)
        (reg:SI 97 [ D.13832 ])) EACommands.c:119 -1
     (nil))
(insn 67 66 68 6 (set (reg:DI 5 di)
        (reg:DI 136)) EACommands.c:119 -1
     (nil))
(call_insn 68 67 69 6 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:119 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 69 68 70 6 (set (reg:HI 98 [ D.13835 ])
        (reg:HI 0 ax)) EACommands.c:119 -1
     (nil))
(insn 70 69 71 6 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -368 [0xfffffffffffffe90])) [0 authHash.t.size+0 S2 A64])
        (reg:HI 98 [ D.13835 ])) EACommands.c:119 -1
     (nil))
(insn 71 70 72 6 (set (reg:HI 99 [ D.13835 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -368 [0xfffffffffffffe90])) [0 authHash.t.size+0 S2 A64])) EACommands.c:124 -1
     (nil))
(insn 72 71 73 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 99 [ D.13835 ])
            (const_int 0 [0]))) EACommands.c:124 -1
     (nil))
(jump_insn 73 72 74 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) EACommands.c:124 -1
     (nil)
 -> 78)
(note 74 73 75 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 7 (set (reg:SI 87 [ D.13828 ])
        (const_int 1490 [0x5d2])) EACommands.c:125 -1
     (nil))
(jump_insn 76 75 77 7 (set (pc)
        (label_ref:DI 229)) EACommands.c:125 654 {jump}
     (nil)
 -> 229)
(barrier 77 76 78)
(code_label 78 77 79 8 5 "" [1 uses])
(note 79 78 80 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 8 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:127 -1
     (nil))
(insn 81 80 82 8 (parallel [
            (set (reg/f:DI 100 [ D.13836 ])
                (plus:DI (reg/f:DI 137)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:127 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 82 81 83 8 (parallel [
            (set (reg:DI 138)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:127 -1
     (nil))
(insn 83 82 84 8 (set (reg:DI 4 si)
        (reg/f:DI 100 [ D.13836 ])) EACommands.c:127 -1
     (nil))
(insn 84 83 85 8 (set (reg:DI 5 di)
        (reg:DI 138)) EACommands.c:127 -1
     (nil))
(call_insn 85 84 86 8 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:127 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 86 85 87 8 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:129 -1
     (nil))
(insn 87 86 88 8 (set (reg:SI 101 [ D.13832 ])
        (mem/j:SI (plus:DI (reg/f:DI 139)
                (const_int 160 [0xa0])) [0 in_10(D)->expiration+0 S4 A32])) EACommands.c:129 -1
     (nil))
(insn 88 87 89 8 (set (reg:DI 102 [ D.13837 ])
        (sign_extend:DI (reg:SI 101 [ D.13832 ]))) EACommands.c:129 -1
     (nil))
(insn 89 88 90 8 (parallel [
            (set (reg:DI 140)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:129 -1
     (nil))
(insn 90 89 91 8 (set (reg:DI 1 dx)
        (reg:DI 102 [ D.13837 ])) EACommands.c:129 -1
     (nil))
(insn 91 90 92 8 (set (reg:SI 4 si)
        (const_int 4 [0x4])) EACommands.c:129 -1
     (nil))
(insn 92 91 93 8 (set (reg:DI 5 di)
        (reg:DI 140)) EACommands.c:129 -1
     (nil))
(call_insn 93 92 94 8 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:129 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 94 93 95 8 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:131 -1
     (nil))
(insn 95 94 96 8 (parallel [
            (set (reg/f:DI 103 [ D.13836 ])
                (plus:DI (reg/f:DI 141)
                    (const_int 58 [0x3a])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:131 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])
            (const_int 58 [0x3a]))
        (nil)))
(insn 96 95 97 8 (parallel [
            (set (reg:DI 142)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:131 -1
     (nil))
(insn 97 96 98 8 (set (reg:DI 4 si)
        (reg/f:DI 103 [ D.13836 ])) EACommands.c:131 -1
     (nil))
(insn 98 97 99 8 (set (reg:DI 5 di)
        (reg:DI 142)) EACommands.c:131 -1
     (nil))
(call_insn 99 98 100 8 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:131 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 100 99 101 8 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:133 -1
     (nil))
(insn 101 100 102 8 (parallel [
            (set (reg/f:DI 104 [ D.13836 ])
                (plus:DI (reg/f:DI 143)
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:133 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])
            (const_int 108 [0x6c]))
        (nil)))
(insn 102 101 103 8 (parallel [
            (set (reg:DI 144)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:133 -1
     (nil))
(insn 103 102 104 8 (set (reg:DI 4 si)
        (reg/f:DI 104 [ D.13836 ])) EACommands.c:133 -1
     (nil))
(insn 104 103 105 8 (set (reg:DI 5 di)
        (reg:DI 144)) EACommands.c:133 -1
     (nil))
(call_insn 105 104 106 8 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:133 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 106 105 107 8 (parallel [
            (set (reg:DI 145)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -368 [0xfffffffffffffe90])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:135 -1
     (nil))
(insn 107 106 108 8 (parallel [
            (set (reg:DI 146)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:135 -1
     (nil))
(insn 108 107 109 8 (set (reg:DI 4 si)
        (reg:DI 145)) EACommands.c:135 -1
     (nil))
(insn 109 108 110 8 (set (reg:DI 5 di)
        (reg:DI 146)) EACommands.c:135 -1
     (nil))
(call_insn 110 109 111 8 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:135 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 111 110 112 8 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:138 -1
     (nil))
(insn 112 111 113 8 (parallel [
            (set (reg/f:DI 105 [ D.13834 ])
                (plus:DI (reg/f:DI 147)
                    (const_int 164 [0xa4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:138 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])
            (const_int 164 [0xa4]))
        (nil)))
(insn 113 112 114 8 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:138 -1
     (nil))
(insn 114 113 115 8 (set (reg:SI 106 [ D.13829 ])
        (mem/j:SI (reg/f:DI 148) [0 in_10(D)->authObject+0 S4 A32])) EACommands.c:138 -1
     (nil))
(insn 115 114 116 8 (parallel [
            (set (reg:DI 149)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -368 [0xfffffffffffffe90])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:138 -1
     (nil))
(insn 116 115 117 8 (set (reg:DI 1 dx)
        (reg/f:DI 105 [ D.13834 ])) EACommands.c:138 -1
     (nil))
(insn 117 116 118 8 (set (reg:DI 4 si)
        (reg:DI 149)) EACommands.c:138 -1
     (nil))
(insn 118 117 119 8 (set (reg:SI 5 di)
        (reg:SI 106 [ D.13829 ])) EACommands.c:138 -1
     (nil))
(call_insn 119 118 120 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptValidateSignature") [flags 0x41]  <function_decl 0x7f3043f9c1b0 CryptValidateSignature>) [0 CryptValidateSignature S1 A8])
            (const_int 0 [0]))) EACommands.c:138 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 120 119 121 8 (set (reg:SI 150)
        (reg:SI 0 ax)) EACommands.c:138 -1
     (nil))
(insn 121 120 122 8 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 result+0 S4 A32])
        (reg:SI 150)) EACommands.c:138 -1
     (nil))
(insn 122 121 123 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -392 [0xfffffffffffffe78])) [0 result+0 S4 A32])
            (const_int 0 [0]))) EACommands.c:139 -1
     (nil))
(jump_insn 123 122 124 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 132)
            (pc))) EACommands.c:139 -1
     (nil)
 -> 132)
(note 124 123 125 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 9 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 result+0 S4 A32])) EACommands.c:140 -1
     (nil))
(insn 126 125 127 9 (set (reg:SI 4 si)
        (const_int 1344 [0x540])) EACommands.c:140 -1
     (nil))
(insn 127 126 128 9 (set (reg:SI 5 di)
        (reg:SI 151)) EACommands.c:140 -1
     (nil))
(call_insn 128 127 129 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("RcSafeAddToResult") [flags 0x41]  <function_decl 0x7f3043f89000 RcSafeAddToResult>) [0 RcSafeAddToResult S1 A8])
            (const_int 0 [0]))) EACommands.c:140 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 129 128 130 9 (set (reg:SI 87 [ D.13828 ])
        (reg:SI 0 ax)) EACommands.c:140 -1
     (nil))
(jump_insn 130 129 131 9 (set (pc)
        (label_ref:DI 229)) EACommands.c:140 654 {jump}
     (nil)
 -> 229)
(barrier 131 130 132)
(code_label 132 131 133 10 2 "" [2 uses])
(note 133 132 134 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 10 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:145 -1
     (nil))
(insn 135 134 136 10 (parallel [
            (set (reg/f:DI 107 [ D.13833 ])
                (plus:DI (reg/f:DI 152)
                    (const_int 58 [0x3a])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:145 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])
            (const_int 58 [0x3a]))
        (nil)))
(insn 136 135 137 10 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:145 -1
     (nil))
(insn 137 136 138 10 (parallel [
            (set (reg/f:DI 108 [ D.13831 ])
                (plus:DI (reg/f:DI 153)
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:145 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])
            (const_int 108 [0x6c]))
        (nil)))
(insn 138 137 139 10 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:145 -1
     (nil))
(insn 139 138 140 10 (set (reg:SI 109 [ D.13829 ])
        (mem/j:SI (reg/f:DI 154) [0 in_10(D)->authObject+0 S4 A32])) EACommands.c:145 -1
     (nil))
(insn 140 139 141 10 (parallel [
            (set (reg:DI 155)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:145 -1
     (nil))
(insn 141 140 142 10 (set (reg:DI 4 si)
        (reg:DI 155)) EACommands.c:145 -1
     (nil))
(insn 142 141 143 10 (set (reg:SI 5 di)
        (reg:SI 109 [ D.13829 ])) EACommands.c:145 -1
     (nil))
(call_insn 143 142 144 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("EntityGetName") [flags 0x41]  <function_decl 0x7f3043ecb0d8 EntityGetName>) [0 EntityGetName S1 A8])
            (const_int 0 [0]))) EACommands.c:145 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 144 143 145 10 (set (reg/f:DI 110 [ D.13838 ])
        (reg:DI 0 ax)) EACommands.c:145 -1
     (nil))
(insn 145 144 146 10 (set (reg:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 session+0 S8 A64])) EACommands.c:145 -1
     (nil))
(insn 146 145 147 10 (set (reg:DI 157)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -384 [0xfffffffffffffe80])) [0 authTimeout+0 S8 A64])) EACommands.c:145 -1
     (nil))
(insn 147 146 148 10 (set (reg:DI 38 r9)
        (reg:DI 156)) EACommands.c:145 -1
     (nil))
(insn 148 147 149 10 (set (reg:DI 37 r8)
        (reg:DI 157)) EACommands.c:145 -1
     (nil))
(insn 149 148 150 10 (set (reg:DI 2 cx)
        (reg/f:DI 107 [ D.13833 ])) EACommands.c:145 -1
     (nil))
(insn 150 149 151 10 (set (reg:DI 1 dx)
        (reg/f:DI 108 [ D.13831 ])) EACommands.c:145 -1
     (nil))
(insn 151 150 152 10 (set (reg:DI 4 si)
        (reg/f:DI 110 [ D.13838 ])) EACommands.c:145 -1
     (nil))
(insn 152 151 153 10 (set (reg:SI 5 di)
        (const_int 352 [0x160])) EACommands.c:145 -1
     (nil))
(call_insn 153 152 154 10 (call (mem:QI (symbol_ref:DI ("PolicyContextUpdate") [flags 0x41]  <function_decl 0x7f3043fd1e58 PolicyContextUpdate>) [0 PolicyContextUpdate S1 A8])
        (const_int 0 [0])) EACommands.c:145 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 154 153 155 10 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:154 -1
     (nil))
(insn 155 154 156 10 (set (reg:SI 111 [ D.13832 ])
        (mem/j:SI (plus:DI (reg/f:DI 158)
                (const_int 160 [0xa0])) [0 in_10(D)->expiration+0 S4 A32])) EACommands.c:154 -1
     (nil))
(insn 156 155 157 10 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 111 [ D.13832 ])
            (const_int 0 [0]))) EACommands.c:154 -1
     (nil))
(jump_insn 157 156 158 10 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 214)
            (pc))) EACommands.c:154 -1
     (nil)
 -> 214)
(note 158 157 159 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 11 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 session+0 S8 A64])) EACommands.c:155 -1
     (nil))
(insn 160 159 161 11 (set (reg:QI 112 [ D.13830 ])
        (mem:QI (reg/f:DI 159) [0 *session_13+0 S1 A64])) EACommands.c:155 -1
     (nil))
(insn 161 160 162 11 (parallel [
            (set (reg:QI 113 [ D.13830 ])
                (and:QI (reg:QI 112 [ D.13830 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:155 -1
     (nil))
(insn 162 161 163 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ D.13830 ])
            (const_int 0 [0]))) EACommands.c:155 -1
     (nil))
(jump_insn 163 162 164 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 214)
            (pc))) EACommands.c:155 -1
     (nil)
 -> 214)
(note 164 163 165 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 12 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:157 -1
     (nil))
(insn 166 165 167 12 (set (reg:HI 114 [ D.13835 ])
        (mem/j:HI (plus:DI (reg/f:DI 160)
                (const_int 8 [0x8])) [0 in_10(D)->nonceTPM.t.size+0 S2 A32])) EACommands.c:157 -1
     (nil))
(insn 167 166 168 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 114 [ D.13835 ])
            (const_int 0 [0]))) EACommands.c:157 -1
     (nil))
(insn 168 167 169 12 (set (reg:QI 115 [ D.13839 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) EACommands.c:157 -1
     (nil))
(insn 169 168 170 12 (set (reg:SI 161)
        (zero_extend:SI (reg:QI 115 [ D.13839 ]))) EACommands.c:157 -1
     (nil))
(insn 170 169 171 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -388 [0xfffffffffffffe7c])) [0 expiresOnReset+0 S4 A32])
        (reg:SI 161)) EACommands.c:157 -1
     (nil))
(insn 171 170 172 12 (set (reg:DI 162)
        (const_int 9223372036854775807 [0x7fffffffffffffff])) EACommands.c:159 -1
     (nil))
(insn 172 171 173 12 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -384 [0xfffffffffffffe80])) [0 authTimeout+0 S8 A64])
                (and:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -384 [0xfffffffffffffe80])) [0 authTimeout+0 S8 A64])
                    (reg:DI 162)))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:159 -1
     (nil))
(insn 173 172 174 12 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [0 out+0 S8 A64])) EACommands.c:160 -1
     (nil))
(insn 174 173 175 12 (parallel [
            (set (reg/f:DI 116 [ D.13840 ])
                (plus:DI (reg/f:DI 163)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:160 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])) [0 out+0 S8 A64])
            (const_int 12 [0xc]))
        (nil)))
(insn 175 174 176 12 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:160 -1
     (nil))
(insn 176 175 177 12 (parallel [
            (set (reg/f:DI 117 [ D.13831 ])
                (plus:DI (reg/f:DI 164)
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:160 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])
            (const_int 108 [0x6c]))
        (nil)))
(insn 177 176 178 12 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:160 -1
     (nil))
(insn 178 177 179 12 (parallel [
            (set (reg/f:DI 118 [ D.13833 ])
                (plus:DI (reg/f:DI 165)
                    (const_int 58 [0x3a])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:160 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])
            (const_int 58 [0x3a]))
        (nil)))
(insn 179 178 180 12 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -408 [0xfffffffffffffe68])) [0 in+0 S8 A64])) EACommands.c:160 -1
     (nil))
(insn 180 179 181 12 (set (reg:SI 119 [ D.13829 ])
        (mem/j:SI (reg/f:DI 166) [0 in_10(D)->authObject+0 S4 A32])) EACommands.c:160 -1
     (nil))
(insn 181 180 182 12 (set (reg:SI 5 di)
        (reg:SI 119 [ D.13829 ])) EACommands.c:160 -1
     (nil))
(call_insn 182 181 183 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("EntityGetHierarchy") [flags 0x41]  <function_decl 0x7f3043ecb1b0 EntityGetHierarchy>) [0 EntityGetHierarchy S1 A8])
            (const_int 0 [0]))) EACommands.c:160 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 183 182 184 12 (set (reg:SI 120 [ D.13829 ])
        (reg:SI 0 ax)) EACommands.c:160 -1
     (nil))
(insn 184 183 185 12 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -388 [0xfffffffffffffe7c])) [0 expiresOnReset+0 S4 A32])) EACommands.c:160 -1
     (nil))
(insn 185 184 186 12 (set (reg:DI 168)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -384 [0xfffffffffffffe80])) [0 authTimeout+0 S8 A64])) EACommands.c:160 -1
     (nil))
(insn 186 185 187 12 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg/f:DI 116 [ D.13840 ])) EACommands.c:160 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 187 186 188 12 (parallel [
            (set (reg:DI 169)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:160 -1
     (nil))
(insn 188 187 189 12 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 169)) EACommands.c:160 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 189 188 190 12 (set (reg:DI 38 r9)
        (reg/f:DI 117 [ D.13831 ])) EACommands.c:160 -1
     (nil))
(insn 190 189 191 12 (set (reg:DI 37 r8)
        (reg/f:DI 118 [ D.13833 ])) EACommands.c:160 -1
     (nil))
(insn 191 190 192 12 (set (reg:SI 2 cx)
        (reg:SI 167)) EACommands.c:160 -1
     (nil))
(insn 192 191 193 12 (set (reg:DI 1 dx)
        (reg:DI 168)) EACommands.c:160 -1
     (nil))
(insn 193 192 194 12 (set (reg:SI 4 si)
        (reg:SI 120 [ D.13829 ])) EACommands.c:160 -1
     (nil))
(insn 194 193 195 12 (set (reg:SI 5 di)
        (const_int 32805 [0x8025])) EACommands.c:160 -1
     (nil))
(call_insn 195 194 196 12 (call (mem:QI (symbol_ref:DI ("TicketComputeAuth") [flags 0x41]  <function_decl 0x7f3043f8cd80 TicketComputeAuth>) [0 TicketComputeAuth S1 A8])
        (const_int 16 [0x10])) EACommands.c:160 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 196 195 197 12 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:160 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 197 196 198 12 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [0 out+0 S8 A64])) EACommands.c:171 -1
     (nil))
(insn 198 197 199 12 (set (mem/j:HI (reg/f:DI 170) [0 out_63(D)->timeout.t.size+0 S2 A32])
        (const_int 8 [0x8])) EACommands.c:171 -1
     (nil))
(insn 199 198 200 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -388 [0xfffffffffffffe7c])) [0 expiresOnReset+0 S4 A32])
            (const_int 0 [0]))) EACommands.c:172 -1
     (nil))
(jump_insn 200 199 201 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 204)
            (pc))) EACommands.c:172 -1
     (nil)
 -> 204)
(note 201 200 202 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 13 (set (reg:DI 171)
        (const_int -9223372036854775808 [0x8000000000000000])) EACommands.c:173 -1
     (nil))
(insn 203 202 204 13 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -384 [0xfffffffffffffe80])) [0 authTimeout+0 S8 A64])
                (ior:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -384 [0xfffffffffffffe80])) [0 authTimeout+0 S8 A64])
                    (reg:DI 171)))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:173 -1
     (nil))
(code_label 204 203 205 14 7 "" [1 uses])
(note 205 204 206 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 14 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [0 out+0 S8 A64])) EACommands.c:174 -1
     (nil))
(insn 207 206 208 14 (parallel [
            (set (reg/f:DI 121 [ D.13841 ])
                (plus:DI (reg/f:DI 172)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:174 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -416 [0xfffffffffffffe60])) [0 out+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 208 207 209 14 (set (reg:DI 173)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -384 [0xfffffffffffffe80])) [0 authTimeout+0 S8 A64])) EACommands.c:174 -1
     (nil))
(insn 209 208 210 14 (set (reg:DI 4 si)
        (reg/f:DI 121 [ D.13841 ])) EACommands.c:174 -1
     (nil))
(insn 210 209 211 14 (set (reg:DI 5 di)
        (reg:DI 173)) EACommands.c:174 -1
     (nil))
(call_insn 211 210 212 14 (call (mem:QI (symbol_ref:DI ("Uint64ToByteArray") [flags 0x41]  <function_decl 0x7f3043f82bd0 Uint64ToByteArray>) [0 Uint64ToByteArray S1 A8])
        (const_int 0 [0])) EACommands.c:174 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 212 211 213 14 (set (pc)
        (label_ref 224)) EACommands.c:156 -1
     (nil)
 -> 224)
(barrier 213 212 214)
(code_label 214 213 215 15 6 "" [2 uses])
(note 215 214 216 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 216 215 217 15 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [0 out+0 S8 A64])) EACommands.c:180 -1
     (nil))
(insn 217 216 218 15 (set (mem/j:HI (reg/f:DI 174) [0 out_63(D)->timeout.t.size+0 S2 A32])
        (const_int 0 [0])) EACommands.c:180 -1
     (nil))
(insn 218 217 219 15 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [0 out+0 S8 A64])) EACommands.c:182 -1
     (nil))
(insn 219 218 220 15 (set (mem/j:HI (plus:DI (reg/f:DI 175)
                (const_int 12 [0xc])) [0 out_63(D)->policyTicket.tag+0 S2 A32])
        (const_int -32731 [0xffffffffffff8025])) EACommands.c:182 -1
     (nil))
(insn 220 219 221 15 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [0 out+0 S8 A64])) EACommands.c:183 -1
     (nil))
(insn 221 220 222 15 (set (mem/j:SI (plus:DI (reg/f:DI 176)
                (const_int 16 [0x10])) [0 out_63(D)->policyTicket.hierarchy+0 S4 A32])
        (const_int 1073741831 [0x40000007])) EACommands.c:183 -1
     (nil))
(insn 222 221 223 15 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -416 [0xfffffffffffffe60])) [0 out+0 S8 A64])) EACommands.c:184 -1
     (nil))
(insn 223 222 224 15 (set (mem/j:HI (plus:DI (reg/f:DI 177)
                (const_int 20 [0x14])) [0 out_63(D)->policyTicket.digest.t.size+0 S2 A32])
        (const_int 0 [0])) EACommands.c:184 -1
     (nil))
(code_label 224 223 225 16 8 "" [1 uses])
(note 225 224 226 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 229 16 (set (reg:SI 87 [ D.13828 ])
        (const_int 0 [0])) EACommands.c:186 -1
     (nil))
(code_label 229 226 230 18 9 "" [3 uses])
(note 230 229 231 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 235 18 (set (reg:SI 122 [ <retval> ])
        (reg:SI 87 [ D.13828 ])) -1
     (nil))
(insn 235 231 236 18 (set (reg/i:SI 0 ax)
        (reg:SI 122 [ <retval> ])) EACommands.c:187 -1
     (nil))
(insn 236 235 237 18 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13842+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:187 -1
     (nil))
(jump_insn 237 236 243 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) EACommands.c:187 -1
     (nil)
 -> 240)
(note 243 237 238 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn 238 243 239 20 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:187 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 239 238 240)
(code_label 240 239 244 21 10 "" [1 uses])
(note 244 240 241 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 241 244 0 21 (use (reg/i:SI 0 ax)) EACommands.c:187 -1
     (nil))

;; Function TPM2_PolicySecret (TPM2_PolicySecret, funcdef_no=3, decl_uid=12917, cgraph_uid=3, symbol_order=3)

Partition 4: size 54 align 16
	entityName
Partition 1: size 8 align 8
	session_13
Partition 0: size 8 align 8
	authTimeout_1
Partition 3: size 4 align 4
	expiresOnReset_39
Partition 2: size 4 align 4
	result_23

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 54 from 14 to 15.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.
Removing jump 164.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:203 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) EACommands.c:203 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13856+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:203 -1
     (nil))
(insn 8 5 9 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 authTimeout+0 S8 A64])
        (const_int 0 [0])) EACommands.c:207 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) EACommands.c:210 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 88 [ D.13846 ])
        (mem/j:SI (plus:DI (reg/f:DI 113)
                (const_int 4 [0x4])) [0 in_10(D)->policySession+0 S4 A32])) EACommands.c:210 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13846 ])) EACommands.c:210 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:210 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 114)
        (reg:DI 0 ax)) EACommands.c:210 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 session+0 S8 A64])
        (reg:DI 114)) EACommands.c:210 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 session+0 S8 A64])) EACommands.c:212 -1
     (nil))
(insn 16 15 17 2 (set (reg:QI 89 [ D.13847 ])
        (mem:QI (reg/f:DI 115) [0 *session_13+0 S1 A64])) EACommands.c:212 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:QI 90 [ D.13847 ])
                (and:QI (reg:QI 89 [ D.13847 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:212 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.13847 ])
            (const_int 0 [0]))) EACommands.c:212 -1
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) EACommands.c:212 -1
     (nil)
 -> 56)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) EACommands.c:214 -1
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg/f:DI 91 [ D.13848 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:214 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 23 22 24 4 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) EACommands.c:214 -1
     (nil))
(insn 24 23 25 4 (set (reg:SI 92 [ D.13849 ])
        (mem/j:SI (plus:DI (reg/f:DI 117)
                (const_int 160 [0xa0])) [0 in_10(D)->expiration+0 S4 A32])) EACommands.c:214 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 session+0 S8 A64])) EACommands.c:214 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 1 dx)
        (reg/f:DI 91 [ D.13848 ])) EACommands.c:214 -1
     (nil))
(insn 27 26 28 4 (set (reg:SI 4 si)
        (reg:SI 92 [ D.13849 ])) EACommands.c:214 -1
     (nil))
(insn 28 27 29 4 (set (reg:DI 5 di)
        (reg:DI 118)) EACommands.c:214 -1
     (nil))
(call_insn 29 28 30 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ComputeAuthTimeout") [flags 0x41]  <function_decl 0x7f3043fd6000 ComputeAuthTimeout>) [0 ComputeAuthTimeout S1 A8])
            (const_int 0 [0]))) EACommands.c:214 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 4 (set (reg:DI 119)
        (reg:DI 0 ax)) EACommands.c:214 -1
     (nil))
(insn 31 30 32 4 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 authTimeout+0 S8 A64])
        (reg:DI 119)) EACommands.c:214 -1
     (nil))
(insn 32 31 33 4 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) EACommands.c:215 -1
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg/f:DI 93 [ D.13848 ])
                (plus:DI (reg/f:DI 120)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:215 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 34 33 35 4 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) EACommands.c:215 -1
     (nil))
(insn 35 34 36 4 (parallel [
            (set (reg/f:DI 94 [ D.13850 ])
                (plus:DI (reg/f:DI 121)
                    (const_int 58 [0x3a])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:215 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])
            (const_int 58 [0x3a]))
        (nil)))
(insn 36 35 37 4 (set (reg:DI 122)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 authTimeout+0 S8 A64])) EACommands.c:215 -1
     (nil))
(insn 37 36 38 4 (set (reg:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 session+0 S8 A64])) EACommands.c:215 -1
     (nil))
(insn 38 37 39 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:215 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 39 38 40 4 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 1088 [0x440])) EACommands.c:215 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 40 39 41 4 (set (reg:SI 38 r9)
        (const_int 576 [0x240])) EACommands.c:215 -1
     (nil))
(insn 41 40 42 4 (set (reg:SI 37 r8)
        (const_int 320 [0x140])) EACommands.c:215 -1
     (nil))
(insn 42 41 43 4 (set (reg:DI 2 cx)
        (reg/f:DI 93 [ D.13848 ])) EACommands.c:215 -1
     (nil))
(insn 43 42 44 4 (set (reg:DI 1 dx)
        (reg/f:DI 94 [ D.13850 ])) EACommands.c:215 -1
     (nil))
(insn 44 43 45 4 (set (reg:DI 4 si)
        (reg:DI 122)) EACommands.c:215 -1
     (nil))
(insn 45 44 46 4 (set (reg:DI 5 di)
        (reg:DI 123)) EACommands.c:215 -1
     (nil))
(call_insn 46 45 47 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PolicyParameterChecks") [flags 0x41]  <function_decl 0x7f3043fd1d80 PolicyParameterChecks>) [0 PolicyParameterChecks S1 A8])
            (const_int 16 [0x10]))) EACommands.c:215 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 47 46 48 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:215 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 48 47 49 4 (set (reg:SI 124)
        (reg:SI 0 ax)) EACommands.c:215 -1
     (nil))
(insn 49 48 50 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 result+0 S4 A32])
        (reg:SI 124)) EACommands.c:215 -1
     (nil))
(insn 50 49 51 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 result+0 S4 A32])
            (const_int 0 [0]))) EACommands.c:220 -1
     (nil))
(jump_insn 51 50 52 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) EACommands.c:220 -1
     (nil)
 -> 56)
(note 52 51 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 5 (set (reg:SI 87 [ D.13845 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 result+0 S4 A32])) EACommands.c:221 -1
     (nil))
(jump_insn 54 53 55 5 (set (pc)
        (label_ref:DI 161)) EACommands.c:221 654 {jump}
     (nil)
 -> 161)
(barrier 55 54 56)
(code_label 56 55 57 6 12 "" [2 uses])
(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 6 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) EACommands.c:226 -1
     (nil))
(insn 59 58 60 6 (parallel [
            (set (reg/f:DI 95 [ D.13850 ])
                (plus:DI (reg/f:DI 125)
                    (const_int 58 [0x3a])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:226 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])
            (const_int 58 [0x3a]))
        (nil)))
(insn 60 59 61 6 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) EACommands.c:226 -1
     (nil))
(insn 61 60 62 6 (parallel [
            (set (reg/f:DI 96 [ D.13848 ])
                (plus:DI (reg/f:DI 126)
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:226 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])
            (const_int 108 [0x6c]))
        (nil)))
(insn 62 61 63 6 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) EACommands.c:226 -1
     (nil))
(insn 63 62 64 6 (set (reg:SI 97 [ D.13846 ])
        (mem/j:SI (reg/f:DI 127) [0 in_10(D)->authHandle+0 S4 A32])) EACommands.c:226 -1
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg:DI 128)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:226 -1
     (nil))
(insn 65 64 66 6 (set (reg:DI 4 si)
        (reg:DI 128)) EACommands.c:226 -1
     (nil))
(insn 66 65 67 6 (set (reg:SI 5 di)
        (reg:SI 97 [ D.13846 ])) EACommands.c:226 -1
     (nil))
(call_insn 67 66 68 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("EntityGetName") [flags 0x41]  <function_decl 0x7f3043ecb0d8 EntityGetName>) [0 EntityGetName S1 A8])
            (const_int 0 [0]))) EACommands.c:226 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 68 67 69 6 (set (reg/f:DI 98 [ D.13851 ])
        (reg:DI 0 ax)) EACommands.c:226 -1
     (nil))
(insn 69 68 70 6 (set (reg:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 session+0 S8 A64])) EACommands.c:226 -1
     (nil))
(insn 70 69 71 6 (set (reg:DI 130)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 authTimeout+0 S8 A64])) EACommands.c:226 -1
     (nil))
(insn 71 70 72 6 (set (reg:DI 38 r9)
        (reg:DI 129)) EACommands.c:226 -1
     (nil))
(insn 72 71 73 6 (set (reg:DI 37 r8)
        (reg:DI 130)) EACommands.c:226 -1
     (nil))
(insn 73 72 74 6 (set (reg:DI 2 cx)
        (reg/f:DI 95 [ D.13850 ])) EACommands.c:226 -1
     (nil))
(insn 74 73 75 6 (set (reg:DI 1 dx)
        (reg/f:DI 96 [ D.13848 ])) EACommands.c:226 -1
     (nil))
(insn 75 74 76 6 (set (reg:DI 4 si)
        (reg/f:DI 98 [ D.13851 ])) EACommands.c:226 -1
     (nil))
(insn 76 75 77 6 (set (reg:SI 5 di)
        (const_int 337 [0x151])) EACommands.c:226 -1
     (nil))
(call_insn 77 76 78 6 (call (mem:QI (symbol_ref:DI ("PolicyContextUpdate") [flags 0x41]  <function_decl 0x7f3043fd1e58 PolicyContextUpdate>) [0 PolicyContextUpdate S1 A8])
        (const_int 0 [0])) EACommands.c:226 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 78 77 79 6 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) EACommands.c:234 -1
     (nil))
(insn 79 78 80 6 (set (reg:SI 99 [ D.13849 ])
        (mem/j:SI (plus:DI (reg/f:DI 131)
                (const_int 160 [0xa0])) [0 in_10(D)->expiration+0 S4 A32])) EACommands.c:234 -1
     (nil))
(insn 80 79 81 6 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 99 [ D.13849 ])
            (const_int 0 [0]))) EACommands.c:234 -1
     (nil))
(jump_insn 81 80 82 6 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) EACommands.c:234 -1
     (nil)
 -> 146)
(note 82 81 83 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 7 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 session+0 S8 A64])) EACommands.c:235 -1
     (nil))
(insn 84 83 85 7 (set (reg:QI 100 [ D.13847 ])
        (mem:QI (reg/f:DI 132) [0 *session_13+0 S1 A64])) EACommands.c:235 -1
     (nil))
(insn 85 84 86 7 (parallel [
            (set (reg:QI 101 [ D.13847 ])
                (and:QI (reg:QI 100 [ D.13847 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:235 -1
     (nil))
(insn 86 85 87 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 101 [ D.13847 ])
            (const_int 0 [0]))) EACommands.c:235 -1
     (nil))
(jump_insn 87 86 88 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) EACommands.c:235 -1
     (nil)
 -> 146)
(note 88 87 89 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 8 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) EACommands.c:236 -1
     (nil))
(insn 90 89 91 8 (set (reg:SI 102 [ D.13846 ])
        (mem/j:SI (reg/f:DI 133) [0 in_10(D)->authHandle+0 S4 A32])) EACommands.c:236 -1
     (nil))
(insn 91 90 92 8 (set (reg:SI 5 di)
        (reg:SI 102 [ D.13846 ])) EACommands.c:236 -1
     (nil))
(call_insn 92 91 93 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvIsPinPassIndex") [flags 0x41]  <function_decl 0x7f3043edc438 NvIsPinPassIndex>) [0 NvIsPinPassIndex S1 A8])
            (const_int 0 [0]))) EACommands.c:236 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 93 92 94 8 (set (reg:SI 103 [ D.13849 ])
        (reg:SI 0 ax)) EACommands.c:236 -1
     (nil))
(insn 94 93 95 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103 [ D.13849 ])
            (const_int 0 [0]))) EACommands.c:236 -1
     (nil))
(jump_insn 95 94 96 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) EACommands.c:236 -1
     (nil)
 -> 146)
(note 96 95 97 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 9 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) EACommands.c:238 -1
     (nil))
(insn 98 97 99 9 (set (reg:HI 104 [ D.13852 ])
        (mem/j:HI (plus:DI (reg/f:DI 134)
                (const_int 8 [0x8])) [0 in_10(D)->nonceTPM.t.size+0 S2 A32])) EACommands.c:238 -1
     (nil))
(insn 99 98 100 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 104 [ D.13852 ])
            (const_int 0 [0]))) EACommands.c:238 -1
     (nil))
(insn 100 99 101 9 (set (reg:QI 105 [ D.13853 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) EACommands.c:238 -1
     (nil))
(insn 101 100 102 9 (set (reg:SI 135)
        (zero_extend:SI (reg:QI 105 [ D.13853 ]))) EACommands.c:238 -1
     (nil))
(insn 102 101 103 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [0 expiresOnReset+0 S4 A32])
        (reg:SI 135)) EACommands.c:238 -1
     (nil))
(insn 103 102 104 9 (set (reg:DI 136)
        (const_int 9223372036854775807 [0x7fffffffffffffff])) EACommands.c:240 -1
     (nil))
(insn 104 103 105 9 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -80 [0xffffffffffffffb0])) [0 authTimeout+0 S8 A64])
                (and:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -80 [0xffffffffffffffb0])) [0 authTimeout+0 S8 A64])
                    (reg:DI 136)))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:240 -1
     (nil))
(insn 105 104 106 9 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 out+0 S8 A64])) EACommands.c:241 -1
     (nil))
(insn 106 105 107 9 (parallel [
            (set (reg/f:DI 106 [ D.13854 ])
                (plus:DI (reg/f:DI 137)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:241 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -112 [0xffffffffffffff90])) [0 out+0 S8 A64])
            (const_int 12 [0xc]))
        (nil)))
(insn 107 106 108 9 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) EACommands.c:241 -1
     (nil))
(insn 108 107 109 9 (parallel [
            (set (reg/f:DI 107 [ D.13848 ])
                (plus:DI (reg/f:DI 138)
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:241 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])
            (const_int 108 [0x6c]))
        (nil)))
(insn 109 108 110 9 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) EACommands.c:241 -1
     (nil))
(insn 110 109 111 9 (parallel [
            (set (reg/f:DI 108 [ D.13850 ])
                (plus:DI (reg/f:DI 139)
                    (const_int 58 [0x3a])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:241 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])
            (const_int 58 [0x3a]))
        (nil)))
(insn 111 110 112 9 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 in+0 S8 A64])) EACommands.c:241 -1
     (nil))
(insn 112 111 113 9 (set (reg:SI 109 [ D.13846 ])
        (mem/j:SI (reg/f:DI 140) [0 in_10(D)->authHandle+0 S4 A32])) EACommands.c:241 -1
     (nil))
(insn 113 112 114 9 (set (reg:SI 5 di)
        (reg:SI 109 [ D.13846 ])) EACommands.c:241 -1
     (nil))
(call_insn 114 113 115 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("EntityGetHierarchy") [flags 0x41]  <function_decl 0x7f3043ecb1b0 EntityGetHierarchy>) [0 EntityGetHierarchy S1 A8])
            (const_int 0 [0]))) EACommands.c:241 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 115 114 116 9 (set (reg:SI 110 [ D.13846 ])
        (reg:SI 0 ax)) EACommands.c:241 -1
     (nil))
(insn 116 115 117 9 (set (reg:SI 141)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [0 expiresOnReset+0 S4 A32])) EACommands.c:241 -1
     (nil))
(insn 117 116 118 9 (set (reg:DI 142)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 authTimeout+0 S8 A64])) EACommands.c:241 -1
     (nil))
(insn 118 117 119 9 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg/f:DI 106 [ D.13854 ])) EACommands.c:241 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 119 118 120 9 (parallel [
            (set (reg:DI 143)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:241 -1
     (nil))
(insn 120 119 121 9 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 143)) EACommands.c:241 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 121 120 122 9 (set (reg:DI 38 r9)
        (reg/f:DI 107 [ D.13848 ])) EACommands.c:241 -1
     (nil))
(insn 122 121 123 9 (set (reg:DI 37 r8)
        (reg/f:DI 108 [ D.13850 ])) EACommands.c:241 -1
     (nil))
(insn 123 122 124 9 (set (reg:SI 2 cx)
        (reg:SI 141)) EACommands.c:241 -1
     (nil))
(insn 124 123 125 9 (set (reg:DI 1 dx)
        (reg:DI 142)) EACommands.c:241 -1
     (nil))
(insn 125 124 126 9 (set (reg:SI 4 si)
        (reg:SI 110 [ D.13846 ])) EACommands.c:241 -1
     (nil))
(insn 126 125 127 9 (set (reg:SI 5 di)
        (const_int 32803 [0x8023])) EACommands.c:241 -1
     (nil))
(call_insn 127 126 128 9 (call (mem:QI (symbol_ref:DI ("TicketComputeAuth") [flags 0x41]  <function_decl 0x7f3043f8cd80 TicketComputeAuth>) [0 TicketComputeAuth S1 A8])
        (const_int 16 [0x10])) EACommands.c:241 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 128 127 129 9 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:241 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 129 128 130 9 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 out+0 S8 A64])) EACommands.c:249 -1
     (nil))
(insn 130 129 131 9 (set (mem/j:HI (reg/f:DI 144) [0 out_41(D)->timeout.t.size+0 S2 A32])
        (const_int 8 [0x8])) EACommands.c:249 -1
     (nil))
(insn 131 130 132 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -84 [0xffffffffffffffac])) [0 expiresOnReset+0 S4 A32])
            (const_int 0 [0]))) EACommands.c:253 -1
     (nil))
(jump_insn 132 131 133 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) EACommands.c:253 -1
     (nil)
 -> 136)
(note 133 132 134 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 10 (set (reg:DI 145)
        (const_int -9223372036854775808 [0x8000000000000000])) EACommands.c:254 -1
     (nil))
(insn 135 134 136 10 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -80 [0xffffffffffffffb0])) [0 authTimeout+0 S8 A64])
                (ior:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -80 [0xffffffffffffffb0])) [0 authTimeout+0 S8 A64])
                    (reg:DI 145)))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:254 -1
     (nil))
(code_label 136 135 137 11 15 "" [1 uses])
(note 137 136 138 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 11 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 out+0 S8 A64])) EACommands.c:255 -1
     (nil))
(insn 139 138 140 11 (parallel [
            (set (reg/f:DI 111 [ D.13855 ])
                (plus:DI (reg/f:DI 146)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:255 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -112 [0xffffffffffffff90])) [0 out+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 140 139 141 11 (set (reg:DI 147)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 authTimeout+0 S8 A64])) EACommands.c:255 -1
     (nil))
(insn 141 140 142 11 (set (reg:DI 4 si)
        (reg/f:DI 111 [ D.13855 ])) EACommands.c:255 -1
     (nil))
(insn 142 141 143 11 (set (reg:DI 5 di)
        (reg:DI 147)) EACommands.c:255 -1
     (nil))
(call_insn 143 142 144 11 (call (mem:QI (symbol_ref:DI ("Uint64ToByteArray") [flags 0x41]  <function_decl 0x7f3043f82bd0 Uint64ToByteArray>) [0 Uint64ToByteArray S1 A8])
        (const_int 0 [0])) EACommands.c:255 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 144 143 145 11 (set (pc)
        (label_ref 156)) EACommands.c:237 -1
     (nil)
 -> 156)
(barrier 145 144 146)
(code_label 146 145 147 12 14 "" [3 uses])
(note 147 146 148 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 12 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 out+0 S8 A64])) EACommands.c:260 -1
     (nil))
(insn 149 148 150 12 (set (mem/j:HI (reg/f:DI 148) [0 out_41(D)->timeout.t.size+0 S2 A32])
        (const_int 0 [0])) EACommands.c:260 -1
     (nil))
(insn 150 149 151 12 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 out+0 S8 A64])) EACommands.c:262 -1
     (nil))
(insn 151 150 152 12 (set (mem/j:HI (plus:DI (reg/f:DI 149)
                (const_int 12 [0xc])) [0 out_41(D)->policyTicket.tag+0 S2 A32])
        (const_int -32733 [0xffffffffffff8023])) EACommands.c:262 -1
     (nil))
(insn 152 151 153 12 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 out+0 S8 A64])) EACommands.c:263 -1
     (nil))
(insn 153 152 154 12 (set (mem/j:SI (plus:DI (reg/f:DI 150)
                (const_int 16 [0x10])) [0 out_41(D)->policyTicket.hierarchy+0 S4 A32])
        (const_int 1073741831 [0x40000007])) EACommands.c:263 -1
     (nil))
(insn 154 153 155 12 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 out+0 S8 A64])) EACommands.c:264 -1
     (nil))
(insn 155 154 156 12 (set (mem/j:HI (plus:DI (reg/f:DI 151)
                (const_int 20 [0x14])) [0 out_41(D)->policyTicket.digest.t.size+0 S2 A32])
        (const_int 0 [0])) EACommands.c:264 -1
     (nil))
(code_label 156 155 157 13 16 "" [1 uses])
(note 157 156 158 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 161 13 (set (reg:SI 87 [ D.13845 ])
        (const_int 0 [0])) EACommands.c:266 -1
     (nil))
(code_label 161 158 162 15 17 "" [1 uses])
(note 162 161 163 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 167 15 (set (reg:SI 112 [ <retval> ])
        (reg:SI 87 [ D.13845 ])) -1
     (nil))
(insn 167 163 168 15 (set (reg/i:SI 0 ax)
        (reg:SI 112 [ <retval> ])) EACommands.c:267 -1
     (nil))
(insn 168 167 169 15 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13856+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:267 -1
     (nil))
(jump_insn 169 168 175 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) EACommands.c:267 -1
     (nil)
 -> 172)
(note 175 169 170 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(call_insn 170 175 171 17 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:267 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 171 170 172)
(code_label 172 171 176 18 18 "" [1 uses])
(note 176 172 173 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 173 176 0 18 (use (reg/i:SI 0 ax)) EACommands.c:267 -1
     (nil))

;; Function TPM2_PolicyTicket (TPM2_PolicyTicket, funcdef_no=4, decl_uid=12936, cgraph_uid=4, symbol_order=4)

Partition 5: size 60 align 16
	ticketToCompare
Partition 2: size 8 align 8
	authTimeout_17
Partition 1: size 8 align 8
	session_9
Partition 4: size 4 align 4
	result_24
Partition 3: size 4 align 4
	expiresOnReset_20
Partition 0: size 4 align 4
	commandCode_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 21 from 17 to 18.
Redirecting jump 31 from 17 to 18.
Redirecting jump 68 from 17 to 18.
Redirecting jump 108 from 17 to 18.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.
Removing jump 161.
Merging block 19 into block 18...
Merged blocks 18 and 19.
Merged 18 and 19 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:281 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13869+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:281 -1
     (nil))
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -108 [0xffffffffffffff94])) [0 commandCode+0 S4 A32])
        (const_int 337 [0x151])) EACommands.c:286 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])) EACommands.c:290 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ D.13858 ])
        (mem/j:SI (reg/f:DI 110) [0 in_6(D)->policySession+0 S4 A32])) EACommands.c:290 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13858 ])) EACommands.c:290 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:290 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 111)
        (reg:DI 0 ax)) EACommands.c:290 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 session+0 S8 A64])
        (reg:DI 111)) EACommands.c:290 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 session+0 S8 A64])) EACommands.c:297 -1
     (nil))
(insn 15 14 16 2 (set (reg:QI 89 [ D.13859 ])
        (mem:QI (reg/f:DI 112) [0 *session_9+0 S1 A64])) EACommands.c:297 -1
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg:QI 90 [ D.13859 ])
                (and:QI (reg:QI 89 [ D.13859 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:297 -1
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.13859 ])
            (const_int 0 [0]))) EACommands.c:297 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) EACommands.c:297 -1
     (nil)
 -> 23)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg:SI 87 [ D.13857 ])
        (const_int 386 [0x182])) EACommands.c:298 -1
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (label_ref:DI 158)) EACommands.c:298 654 {jump}
     (nil)
 -> 158)
(barrier 22 21 23)
(code_label 23 22 24 5 20 "" [1 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])) EACommands.c:304 -1
     (nil))
(insn 26 25 27 5 (set (reg:HI 91 [ D.13860 ])
        (mem/j:HI (plus:DI (reg/f:DI 113)
                (const_int 4 [0x4])) [0 in_6(D)->timeout.t.size+0 S2 A32])) EACommands.c:304 -1
     (nil))
(insn 27 26 28 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 91 [ D.13860 ])
            (const_int 8 [0x8]))) EACommands.c:304 -1
     (nil))
(jump_insn 28 27 29 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) EACommands.c:304 -1
     (nil)
 -> 33)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg:SI 87 [ D.13857 ])
        (const_int 469 [0x1d5])) EACommands.c:305 -1
     (nil))
(jump_insn 31 30 32 6 (set (pc)
        (label_ref:DI 158)) EACommands.c:305 654 {jump}
     (nil)
 -> 158)
(barrier 32 31 33)
(code_label 33 32 34 7 22 "" [1 uses])
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])) EACommands.c:306 -1
     (nil))
(insn 36 35 37 7 (parallel [
            (set (reg/f:DI 92 [ D.13861 ])
                (plus:DI (reg/f:DI 114)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:306 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])
            (const_int 6 [0x6]))
        (nil)))
(insn 37 36 38 7 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.13861 ])) EACommands.c:306 -1
     (nil))
(call_insn 38 37 39 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ByteArrayToUint64") [flags 0x41]  <function_decl 0x7f3043f82e58 ByteArrayToUint64>) [0 ByteArrayToUint64 S1 A8])
            (const_int 0 [0]))) EACommands.c:306 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 39 38 40 7 (set (reg:DI 115)
        (reg:DI 0 ax)) EACommands.c:306 -1
     (nil))
(insn 40 39 41 7 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 authTimeout+0 S8 A64])
        (reg:DI 115)) EACommands.c:306 -1
     (nil))
(insn 41 40 42 7 (set (reg:DI 93 [ D.13862 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 authTimeout+0 S8 A64])) EACommands.c:308 -1
     (nil))
(insn 42 41 43 7 (parallel [
            (set (reg:DI 116)
                (lshiftrt:DI (reg:DI 93 [ D.13862 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:308 -1
     (nil))
(insn 43 42 44 7 (set (reg:QI 94 [ D.13863 ])
        (subreg:QI (reg:DI 116) 0)) EACommands.c:308 -1
     (nil))
(insn 44 43 45 7 (set (reg:SI 117)
        (zero_extend:SI (reg:QI 94 [ D.13863 ]))) EACommands.c:308 -1
     (nil))
(insn 45 44 46 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 expiresOnReset+0 S4 A32])
        (reg:SI 117)) EACommands.c:308 -1
     (nil))
(insn 46 45 47 7 (set (reg:DI 118)
        (const_int 9223372036854775807 [0x7fffffffffffffff])) EACommands.c:309 -1
     (nil))
(insn 47 46 48 7 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -88 [0xffffffffffffffa8])) [0 authTimeout+0 S8 A64])
                (and:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -88 [0xffffffffffffffa8])) [0 authTimeout+0 S8 A64])
                    (reg:DI 118)))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:309 -1
     (nil))
(insn 48 47 49 7 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])) EACommands.c:311 -1
     (nil))
(insn 49 48 50 7 (parallel [
            (set (reg/f:DI 95 [ D.13864 ])
                (plus:DI (reg/f:DI 119)
                    (const_int 14 [0xe])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:311 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])
            (const_int 14 [0xe]))
        (nil)))
(insn 50 49 51 7 (set (reg:DI 120)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 authTimeout+0 S8 A64])) EACommands.c:311 -1
     (nil))
(insn 51 50 52 7 (set (reg:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 session+0 S8 A64])) EACommands.c:311 -1
     (nil))
(insn 52 51 53 7 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:311 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 53 52 54 7 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (const_int 320 [0x140])) EACommands.c:311 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 54 53 55 7 (set (reg:SI 38 r9)
        (const_int 576 [0x240])) EACommands.c:311 -1
     (nil))
(insn 55 54 56 7 (set (reg:SI 37 r8)
        (const_int 0 [0])) EACommands.c:311 -1
     (nil))
(insn 56 55 57 7 (set (reg:DI 2 cx)
        (const_int 0 [0])) EACommands.c:311 -1
     (nil))
(insn 57 56 58 7 (set (reg:DI 1 dx)
        (reg/f:DI 95 [ D.13864 ])) EACommands.c:311 -1
     (nil))
(insn 58 57 59 7 (set (reg:DI 4 si)
        (reg:DI 120)) EACommands.c:311 -1
     (nil))
(insn 59 58 60 7 (set (reg:DI 5 di)
        (reg:DI 121)) EACommands.c:311 -1
     (nil))
(call_insn 60 59 61 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PolicyParameterChecks") [flags 0x41]  <function_decl 0x7f3043fd1d80 PolicyParameterChecks>) [0 PolicyParameterChecks S1 A8])
            (const_int 16 [0x10]))) EACommands.c:311 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 61 60 62 7 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:311 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 62 61 63 7 (set (reg:SI 122)
        (reg:SI 0 ax)) EACommands.c:311 -1
     (nil))
(insn 63 62 64 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [0 result+0 S4 A32])
        (reg:SI 122)) EACommands.c:311 -1
     (nil))
(insn 64 63 65 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -100 [0xffffffffffffff9c])) [0 result+0 S4 A32])
            (const_int 0 [0]))) EACommands.c:317 -1
     (nil))
(jump_insn 65 64 66 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) EACommands.c:317 -1
     (nil)
 -> 70)
(note 66 65 67 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 8 (set (reg:SI 87 [ D.13857 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [0 result+0 S4 A32])) EACommands.c:318 -1
     (nil))
(jump_insn 68 67 69 8 (set (pc)
        (label_ref:DI 158)) EACommands.c:318 654 {jump}
     (nil)
 -> 158)
(barrier 69 68 70)
(code_label 70 69 71 9 23 "" [1 uses])
(note 71 70 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 9 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])) EACommands.c:321 -1
     (nil))
(insn 73 72 74 9 (parallel [
            (set (reg/f:DI 96 [ D.13865 ])
                (plus:DI (reg/f:DI 123)
                    (const_int 114 [0x72])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:321 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])
            (const_int 114 [0x72]))
        (nil)))
(insn 74 73 75 9 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])) EACommands.c:321 -1
     (nil))
(insn 75 74 76 9 (parallel [
            (set (reg/f:DI 97 [ D.13866 ])
                (plus:DI (reg/f:DI 124)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:321 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])
            (const_int 64 [0x40]))
        (nil)))
(insn 76 75 77 9 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])) EACommands.c:321 -1
     (nil))
(insn 77 76 78 9 (parallel [
            (set (reg/f:DI 98 [ D.13864 ])
                (plus:DI (reg/f:DI 125)
                    (const_int 14 [0xe])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:321 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])
            (const_int 14 [0xe]))
        (nil)))
(insn 78 77 79 9 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])) EACommands.c:321 -1
     (nil))
(insn 79 78 80 9 (set (reg:SI 99 [ D.13858 ])
        (mem/j:SI (plus:DI (reg/f:DI 126)
                (const_int 172 [0xac])) [0 in_6(D)->ticket.hierarchy+0 S4 A32])) EACommands.c:321 -1
     (nil))
(insn 80 79 81 9 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])) EACommands.c:321 -1
     (nil))
(insn 81 80 82 9 (set (reg:HI 100 [ D.13860 ])
        (mem/j:HI (plus:DI (reg/f:DI 127)
                (const_int 168 [0xa8])) [0 in_6(D)->ticket.tag+0 S2 A32])) EACommands.c:321 -1
     (nil))
(insn 82 81 83 9 (set (reg:SI 101 [ D.13867 ])
        (zero_extend:SI (reg:HI 100 [ D.13860 ]))) EACommands.c:321 -1
     (nil))
(insn 83 82 84 9 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 expiresOnReset+0 S4 A32])) EACommands.c:321 -1
     (nil))
(insn 84 83 85 9 (set (reg:DI 129)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 authTimeout+0 S8 A64])) EACommands.c:321 -1
     (nil))
(insn 85 84 86 9 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:321 -1
     (nil))
(insn 86 85 87 9 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 130)) EACommands.c:321 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 87 86 88 9 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg/f:DI 96 [ D.13865 ])) EACommands.c:321 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 88 87 89 9 (set (reg:DI 38 r9)
        (reg/f:DI 97 [ D.13866 ])) EACommands.c:321 -1
     (nil))
(insn 89 88 90 9 (set (reg:DI 37 r8)
        (reg/f:DI 98 [ D.13864 ])) EACommands.c:321 -1
     (nil))
(insn 90 89 91 9 (set (reg:SI 2 cx)
        (reg:SI 128)) EACommands.c:321 -1
     (nil))
(insn 91 90 92 9 (set (reg:DI 1 dx)
        (reg:DI 129)) EACommands.c:321 -1
     (nil))
(insn 92 91 93 9 (set (reg:SI 4 si)
        (reg:SI 99 [ D.13858 ])) EACommands.c:321 -1
     (nil))
(insn 93 92 94 9 (set (reg:SI 5 di)
        (reg:SI 101 [ D.13867 ])) EACommands.c:321 -1
     (nil))
(call_insn 94 93 95 9 (call (mem:QI (symbol_ref:DI ("TicketComputeAuth") [flags 0x41]  <function_decl 0x7f3043f8cd80 TicketComputeAuth>) [0 TicketComputeAuth S1 A8])
        (const_int 16 [0x10])) EACommands.c:321 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 95 94 96 9 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:321 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 96 95 97 9 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])) EACommands.c:325 -1
     (nil))
(insn 97 96 98 9 (parallel [
            (set (reg/f:DI 102 [ D.13868 ])
                (plus:DI (reg/f:DI 131)
                    (const_int 176 [0xb0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:325 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])
            (const_int 176 [0xb0]))
        (nil)))
(insn 98 97 99 9 (parallel [
            (set (reg:DI 132)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:325 -1
     (nil))
(insn 99 98 100 9 (parallel [
            (set (reg:DI 133)
                (plus:DI (reg:DI 132)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:325 -1
     (nil))
(insn 100 99 101 9 (set (reg:DI 4 si)
        (reg:DI 133)) EACommands.c:325 -1
     (nil))
(insn 101 100 102 9 (set (reg:DI 5 di)
        (reg/f:DI 102 [ D.13868 ])) EACommands.c:325 -1
     (nil))
(call_insn 102 101 103 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("MemoryEqual2B") [flags 0x41]  <function_decl 0x7f3043f82798 MemoryEqual2B>) [0 MemoryEqual2B S1 A8])
            (const_int 0 [0]))) EACommands.c:325 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 103 102 104 9 (set (reg:SI 103 [ D.13867 ])
        (reg:SI 0 ax)) EACommands.c:325 -1
     (nil))
(insn 104 103 105 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103 [ D.13867 ])
            (const_int 0 [0]))) EACommands.c:325 -1
     (nil))
(jump_insn 105 104 106 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) EACommands.c:325 -1
     (nil)
 -> 110)
(note 106 105 107 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 10 (set (reg:SI 87 [ D.13857 ])
        (const_int 1504 [0x5e0])) EACommands.c:326 -1
     (nil))
(jump_insn 108 107 109 10 (set (pc)
        (label_ref:DI 158)) EACommands.c:326 654 {jump}
     (nil)
 -> 158)
(barrier 109 108 110)
(code_label 110 109 111 11 24 "" [1 uses])
(note 111 110 112 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 11 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])) EACommands.c:330 -1
     (nil))
(insn 113 112 114 11 (set (reg:HI 104 [ D.13860 ])
        (mem/j:HI (plus:DI (reg/f:DI 134)
                (const_int 168 [0xa8])) [0 in_6(D)->ticket.tag+0 S2 A32])) EACommands.c:330 -1
     (nil))
(insn 114 113 115 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 104 [ D.13860 ])
            (const_int -32731 [0xffffffffffff8025]))) EACommands.c:330 -1
     (nil))
(jump_insn 115 114 116 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) EACommands.c:330 -1
     (nil)
 -> 120)
(note 116 115 117 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -108 [0xffffffffffffff94])) [0 commandCode+0 S4 A32])
        (const_int 352 [0x160])) EACommands.c:331 -1
     (nil))
(jump_insn 118 117 119 12 (set (pc)
        (label_ref 137)) -1
     (nil)
 -> 137)
(barrier 119 118 120)
(code_label 120 119 121 13 25 "" [1 uses])
(note 121 120 122 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 13 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])) EACommands.c:332 -1
     (nil))
(insn 123 122 124 13 (set (reg:HI 105 [ D.13860 ])
        (mem/j:HI (plus:DI (reg/f:DI 135)
                (const_int 168 [0xa8])) [0 in_6(D)->ticket.tag+0 S2 A32])) EACommands.c:332 -1
     (nil))
(insn 124 123 125 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 105 [ D.13860 ])
            (const_int -32733 [0xffffffffffff8023]))) EACommands.c:332 -1
     (nil))
(jump_insn 125 124 126 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) EACommands.c:332 -1
     (nil)
 -> 130)
(note 126 125 127 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 14 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -108 [0xffffffffffffff94])) [0 commandCode+0 S4 A32])
        (const_int 337 [0x151])) EACommands.c:333 -1
     (nil))
(jump_insn 128 127 129 14 (set (pc)
        (label_ref 137)) -1
     (nil)
 -> 137)
(barrier 129 128 130)
(code_label 130 129 131 15 27 "" [1 uses])
(note 131 130 132 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 15 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) EACommands.c:337 -1
     (nil))
(insn 133 132 134 15 (set (reg:SI 4 si)
        (const_int 337 [0x151])) EACommands.c:337 -1
     (nil))
(insn 134 133 135 15 (set (reg:DI 5 di)
        (const_int 0 [0])) EACommands.c:337 -1
     (nil))
(call_insn 135 134 136 15 (call (mem:QI (symbol_ref:DI ("TpmFail") [flags 0x41]  <function_decl 0x7f3043ee70d8 TpmFail>) [0 TpmFail S1 A8])
        (const_int 0 [0])) EACommands.c:337 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 136 135 137)
(code_label 137 136 138 16 26 "" [2 uses])
(note 138 137 139 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 16 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])) EACommands.c:339 -1
     (nil))
(insn 140 139 141 16 (parallel [
            (set (reg/f:DI 106 [ D.13864 ])
                (plus:DI (reg/f:DI 136)
                    (const_int 14 [0xe])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:339 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])
            (const_int 14 [0xe]))
        (nil)))
(insn 141 140 142 16 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])) EACommands.c:339 -1
     (nil))
(insn 142 141 143 16 (parallel [
            (set (reg/f:DI 107 [ D.13866 ])
                (plus:DI (reg/f:DI 137)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:339 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])
            (const_int 64 [0x40]))
        (nil)))
(insn 143 142 144 16 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])) EACommands.c:339 -1
     (nil))
(insn 144 143 145 16 (parallel [
            (set (reg/f:DI 108 [ D.13865 ])
                (plus:DI (reg/f:DI 138)
                    (const_int 114 [0x72])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:339 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -120 [0xffffffffffffff88])) [0 in+0 S8 A64])
            (const_int 114 [0x72]))
        (nil)))
(insn 145 144 146 16 (set (reg:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 session+0 S8 A64])) EACommands.c:339 -1
     (nil))
(insn 146 145 147 16 (set (reg:DI 140)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 authTimeout+0 S8 A64])) EACommands.c:339 -1
     (nil))
(insn 147 146 148 16 (set (reg:SI 141)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -108 [0xffffffffffffff94])) [0 commandCode+0 S4 A32])) EACommands.c:339 -1
     (nil))
(insn 148 147 149 16 (set (reg:DI 38 r9)
        (reg:DI 139)) EACommands.c:339 -1
     (nil))
(insn 149 148 150 16 (set (reg:DI 37 r8)
        (reg:DI 140)) EACommands.c:339 -1
     (nil))
(insn 150 149 151 16 (set (reg:DI 2 cx)
        (reg/f:DI 106 [ D.13864 ])) EACommands.c:339 -1
     (nil))
(insn 151 150 152 16 (set (reg:DI 1 dx)
        (reg/f:DI 107 [ D.13866 ])) EACommands.c:339 -1
     (nil))
(insn 152 151 153 16 (set (reg:DI 4 si)
        (reg/f:DI 108 [ D.13865 ])) EACommands.c:339 -1
     (nil))
(insn 153 152 154 16 (set (reg:SI 5 di)
        (reg:SI 141)) EACommands.c:339 -1
     (nil))
(call_insn 154 153 155 16 (call (mem:QI (symbol_ref:DI ("PolicyContextUpdate") [flags 0x41]  <function_decl 0x7f3043fd1e58 PolicyContextUpdate>) [0 PolicyContextUpdate S1 A8])
        (const_int 0 [0])) EACommands.c:339 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 155 154 158 16 (set (reg:SI 87 [ D.13857 ])
        (const_int 0 [0])) EACommands.c:341 -1
     (nil))
(code_label 158 155 159 18 28 "" [4 uses])
(note 159 158 160 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 164 18 (set (reg:SI 109 [ <retval> ])
        (reg:SI 87 [ D.13857 ])) -1
     (nil))
(insn 164 160 165 18 (set (reg/i:SI 0 ax)
        (reg:SI 109 [ <retval> ])) EACommands.c:342 -1
     (nil))
(insn 165 164 166 18 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13869+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:342 -1
     (nil))
(jump_insn 166 165 172 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) EACommands.c:342 -1
     (nil)
 -> 169)
(note 172 166 167 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn 167 172 168 20 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:342 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 168 167 169)
(code_label 169 168 173 21 29 "" [1 uses])
(note 173 169 170 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 170 173 0 21 (use (reg/i:SI 0 ax)) EACommands.c:342 -1
     (nil))

;; Function TPM2_PolicyOR (TPM2_PolicyOR, funcdef_no=5, decl_uid=12951, cgraph_uid=5, symbol_order=5)

Partition 3: size 232 align 16
	hashState
Partition 1: size 8 align 8
	session_12
Partition 2: size 4 align 4
	commandCode_22
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 128.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:352 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13878+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:352 -1
     (nil))
(insn 7 4 8 2 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:357 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.13871 ])
        (mem/j:SI (reg/f:DI 107) [0 in_9(D)->policySession+0 S4 A32])) EACommands.c:357 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13871 ])) EACommands.c:357 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:357 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 108)
        (reg:DI 0 ax)) EACommands.c:357 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
        (reg:DI 108)) EACommands.c:357 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 i+0 S4 A32])
        (const_int 0 [0])) EACommands.c:359 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (label_ref 116)) EACommands.c:359 -1
     (nil)
 -> 116)
(barrier 15 14 120)
(code_label 120 15 16 4 37 "" [1 uses])
(note 16 120 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:361 -1
     (nil))
(insn 18 17 19 4 (set (reg:QI 90 [ D.13872 ])
        (mem:QI (reg/f:DI 109) [0 *session_12+0 S1 A64])) EACommands.c:361 -1
     (nil))
(insn 19 18 20 4 (parallel [
            (set (reg:QI 91 [ D.13872 ])
                (and:QI (reg:QI 90 [ D.13872 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:361 -1
     (nil))
(insn 20 19 21 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 91 [ D.13872 ])
            (const_int 0 [0]))) EACommands.c:361 -1
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) EACommands.c:361 -1
     (nil)
 -> 42)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:DI 110)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])) [0 i+0 S4 A32]))) EACommands.c:363 -1
     (nil))
(insn 24 23 25 5 (set (reg:DI 111)
        (reg:DI 110)) EACommands.c:363 -1
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg:DI 111)
                (ashift:DI (reg:DI 111)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:363 -1
     (nil))
(insn 26 25 27 5 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg:DI 111)
                    (reg:DI 110)))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:363 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 110)
            (const_int 5 [0x5]))
        (nil)))
(insn 27 26 28 5 (parallel [
            (set (reg:DI 112)
                (ashift:DI (reg:DI 111)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:363 -1
     (nil))
(insn 28 27 29 5 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg:DI 111)
                    (reg:DI 112)))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:363 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 110)
            (const_int 25 [0x19]))
        (nil)))
(insn 29 28 30 5 (parallel [
            (set (reg:DI 113)
                (ashift:DI (reg:DI 111)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:363 -1
     (nil))
(insn 30 29 31 5 (set (reg:DI 111)
        (reg:DI 113)) EACommands.c:363 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 110)
            (const_int 50 [0x32]))
        (nil)))
(insn 31 30 32 5 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:363 -1
     (nil))
(insn 32 31 33 5 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg:DI 111)
                    (reg/f:DI 115)))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:363 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
            (reg:DI 111))
        (nil)))
(insn 33 32 34 5 (parallel [
            (set (reg/f:DI 92 [ D.13873 ])
                (plus:DI (reg:DI 114)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:363 -1
     (nil))
(insn 34 33 35 5 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:362 -1
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg/f:DI 93 [ D.13873 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:362 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 36 35 37 5 (set (reg:DI 4 si)
        (reg/f:DI 92 [ D.13873 ])) EACommands.c:362 -1
     (nil))
(insn 37 36 38 5 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.13873 ])) EACommands.c:362 -1
     (nil))
(call_insn 38 37 39 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("MemoryEqual2B") [flags 0x41]  <function_decl 0x7f3043f82798 MemoryEqual2B>) [0 MemoryEqual2B S1 A8])
            (const_int 0 [0]))) EACommands.c:362 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 39 38 40 5 (set (reg:SI 94 [ D.13874 ])
        (reg:SI 0 ax)) EACommands.c:362 -1
     (nil))
(insn 40 39 41 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.13874 ])
            (const_int 0 [0]))) EACommands.c:362 -1
     (nil))
(jump_insn 41 40 42 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) EACommands.c:362 -1
     (nil)
 -> 113)
(code_label 42 41 43 6 32 "" [1 uses])
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32])
        (const_int 369 [0x171])) EACommands.c:367 -1
     (nil))
(insn 45 44 46 6 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:370 -1
     (nil))
(insn 46 45 47 6 (set (reg:HI 95 [ D.13875 ])
        (mem/j:HI (plus:DI (reg/f:DI 117)
                (const_int 32 [0x20])) [0 session_12->authHashAlg+0 S2 A64])) EACommands.c:370 -1
     (nil))
(insn 47 46 48 6 (set (reg:SI 96 [ D.13874 ])
        (zero_extend:SI (reg:HI 95 [ D.13875 ]))) EACommands.c:370 -1
     (nil))
(insn 48 47 49 6 (parallel [
            (set (reg:DI 118)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:370 -1
     (nil))
(insn 49 48 50 6 (set (reg:SI 4 si)
        (reg:SI 96 [ D.13874 ])) EACommands.c:370 -1
     (nil))
(insn 50 49 51 6 (set (reg:DI 5 di)
        (reg:DI 118)) EACommands.c:370 -1
     (nil))
(call_insn 51 50 52 6 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:370 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 52 51 53 6 (set (reg:HI 97 [ D.13875 ])
        (reg:HI 0 ax)) EACommands.c:370 -1
     (nil))
(insn 53 52 54 6 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:370 -1
     (nil))
(insn 54 53 55 6 (set (mem/j:HI (plus:DI (reg/f:DI 119)
                (const_int 196 [0xc4])) [0 session_12->u2.policyDigest.t.size+0 S2 A32])
        (reg:HI 97 [ D.13875 ])) EACommands.c:370 -1
     (nil))
(insn 55 54 56 6 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:373 -1
     (nil))
(insn 56 55 57 6 (set (reg:HI 98 [ D.13875 ])
        (mem/j:HI (plus:DI (reg/f:DI 120)
                (const_int 196 [0xc4])) [0 session_12->u2.policyDigest.t.size+0 S2 A32])) EACommands.c:373 -1
     (nil))
(insn 57 56 58 6 (set (reg:DI 99 [ D.13876 ])
        (zero_extend:DI (reg:HI 98 [ D.13875 ]))) EACommands.c:372 -1
     (nil))
(insn 58 57 59 6 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:372 -1
     (nil))
(insn 59 58 60 6 (parallel [
            (set (reg/f:DI 100 [ D.13877 ])
                (plus:DI (reg/f:DI 121)
                    (const_int 198 [0xc6])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:372 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 198 [0xc6]))
        (nil)))
(insn 60 59 61 6 (set (reg:DI 1 dx)
        (reg:DI 99 [ D.13876 ])) EACommands.c:372 -1
     (nil))
(insn 61 60 62 6 (set (reg:SI 4 si)
        (const_int 0 [0])) EACommands.c:372 -1
     (nil))
(insn 62 61 63 6 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.13877 ])) EACommands.c:372 -1
     (nil))
(call_insn 63 62 64 6 (call (mem:QI (symbol_ref:DI ("MemorySet") [flags 0x41]  <function_decl 0x7f3043f82870 MemorySet>) [0 MemorySet S1 A8])
        (const_int 0 [0])) EACommands.c:372 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 64 63 65 6 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:374 -1
     (nil))
(insn 65 64 66 6 (parallel [
            (set (reg/f:DI 101 [ D.13873 ])
                (plus:DI (reg/f:DI 122)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:374 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 66 65 67 6 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:374 -1
     (nil))
(insn 67 66 68 6 (set (reg:DI 4 si)
        (reg/f:DI 101 [ D.13873 ])) EACommands.c:374 -1
     (nil))
(insn 68 67 69 6 (set (reg:DI 5 di)
        (reg:DI 123)) EACommands.c:374 -1
     (nil))
(call_insn 69 68 70 6 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:374 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 70 69 71 6 (set (reg:DI 102 [ D.13876 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32]))) EACommands.c:376 -1
     (nil))
(insn 71 70 72 6 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:376 -1
     (nil))
(insn 72 71 73 6 (set (reg:DI 1 dx)
        (reg:DI 102 [ D.13876 ])) EACommands.c:376 -1
     (nil))
(insn 73 72 74 6 (set (reg:SI 4 si)
        (const_int 4 [0x4])) EACommands.c:376 -1
     (nil))
(insn 74 73 75 6 (set (reg:DI 5 di)
        (reg:DI 124)) EACommands.c:376 -1
     (nil))
(call_insn 75 74 76 6 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:376 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 76 75 77 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [0 i+0 S4 A32])
        (const_int 0 [0])) EACommands.c:378 -1
     (nil))
(jump_insn 77 76 78 6 (set (pc)
        (label_ref 96)) EACommands.c:378 -1
     (nil)
 -> 96)
(barrier 78 77 100)
(code_label 100 78 79 7 35 "" [1 uses])
(note 79 100 80 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 7 (set (reg:DI 125)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])) [0 i+0 S4 A32]))) EACommands.c:381 -1
     (nil))
(insn 81 80 82 7 (set (reg:DI 126)
        (reg:DI 125)) EACommands.c:381 -1
     (nil))
(insn 82 81 83 7 (parallel [
            (set (reg:DI 126)
                (ashift:DI (reg:DI 126)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:381 -1
     (nil))
(insn 83 82 84 7 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg:DI 126)
                    (reg:DI 125)))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:381 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 125)
            (const_int 5 [0x5]))
        (nil)))
(insn 84 83 85 7 (parallel [
            (set (reg:DI 127)
                (ashift:DI (reg:DI 126)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:381 -1
     (nil))
(insn 85 84 86 7 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg:DI 126)
                    (reg:DI 127)))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:381 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 125)
            (const_int 25 [0x19]))
        (nil)))
(insn 86 85 87 7 (parallel [
            (set (reg:DI 128)
                (ashift:DI (reg:DI 126)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:381 -1
     (nil))
(insn 87 86 88 7 (set (reg:DI 126)
        (reg:DI 128)) EACommands.c:381 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 125)
            (const_int 50 [0x32]))
        (nil)))
(insn 88 87 89 7 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:381 -1
     (nil))
(insn 89 88 90 7 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg:DI 126)
                    (reg/f:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:381 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
            (reg:DI 126))
        (nil)))
(insn 90 89 91 7 (parallel [
            (set (reg/f:DI 104 [ D.13873 ])
                (plus:DI (reg:DI 129)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:381 -1
     (nil))
(insn 91 90 92 7 (parallel [
            (set (reg:DI 131)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:381 -1
     (nil))
(insn 92 91 93 7 (set (reg:DI 4 si)
        (reg/f:DI 104 [ D.13873 ])) EACommands.c:381 -1
     (nil))
(insn 93 92 94 7 (set (reg:DI 5 di)
        (reg:DI 131)) EACommands.c:381 -1
     (nil))
(call_insn 94 93 95 7 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:381 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 95 94 96 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -256 [0xffffffffffffff00])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -256 [0xffffffffffffff00])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:378 -1
     (nil))
(code_label 96 95 97 8 34 "" [1 uses])
(note 97 96 98 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 8 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:378 -1
     (nil))
(insn 99 98 101 8 (set (reg:SI 103 [ D.13871 ])
        (mem/j:SI (plus:DI (reg/f:DI 132)
                (const_int 4 [0x4])) [0 in_9(D)->pHashList.count+0 S4 A32])) EACommands.c:378 -1
     (nil))
(insn 101 99 102 8 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 103 [ D.13871 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])) [0 i+0 S4 A32]))) EACommands.c:378 -1
     (nil))
(jump_insn 102 101 103 8 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) EACommands.c:378 -1
     (nil)
 -> 100)
(note 103 102 104 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 9 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:384 -1
     (nil))
(insn 105 104 106 9 (parallel [
            (set (reg/f:DI 105 [ D.13873 ])
                (plus:DI (reg/f:DI 133)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:384 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 106 105 107 9 (parallel [
            (set (reg:DI 134)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:384 -1
     (nil))
(insn 107 106 108 9 (set (reg:DI 4 si)
        (reg/f:DI 105 [ D.13873 ])) EACommands.c:384 -1
     (nil))
(insn 108 107 109 9 (set (reg:DI 5 di)
        (reg:DI 134)) EACommands.c:384 -1
     (nil))
(call_insn 109 108 110 9 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:384 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 110 109 111 9 (set (reg:SI 87 [ D.13870 ])
        (const_int 0 [0])) EACommands.c:385 -1
     (nil))
(jump_insn 111 110 112 9 (set (pc)
        (label_ref 125)) -1
     (nil)
 -> 125)
(barrier 112 111 113)
(code_label 113 112 114 10 33 "" [1 uses])
(note 114 113 115 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -256 [0xffffffffffffff00])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -256 [0xffffffffffffff00])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:359 -1
     (nil))
(code_label 116 115 117 11 31 "" [1 uses])
(note 117 116 118 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 11 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:359 -1
     (nil))
(insn 119 118 121 11 (set (reg:SI 89 [ D.13871 ])
        (mem/j:SI (plus:DI (reg/f:DI 135)
                (const_int 4 [0x4])) [0 in_9(D)->pHashList.count+0 S4 A32])) EACommands.c:359 -1
     (nil))
(insn 121 119 122 11 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 89 [ D.13871 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])) [0 i+0 S4 A32]))) EACommands.c:359 -1
     (nil))
(jump_insn 122 121 123 11 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) EACommands.c:359 -1
     (nil)
 -> 120)
(note 123 122 124 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 12 (set (reg:SI 87 [ D.13870 ])
        (const_int 452 [0x1c4])) EACommands.c:389 -1
     (nil))
(code_label 125 124 126 13 36 "" [1 uses])
(note 126 125 127 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 131 13 (set (reg:SI 106 [ <retval> ])
        (reg:SI 87 [ D.13870 ])) -1
     (nil))
(insn 131 127 132 13 (set (reg/i:SI 0 ax)
        (reg:SI 106 [ <retval> ])) EACommands.c:390 -1
     (nil))
(insn 132 131 133 13 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13878+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:390 -1
     (nil))
(jump_insn 133 132 139 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) EACommands.c:390 -1
     (nil)
 -> 136)
(note 139 133 134 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(call_insn 134 139 135 15 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:390 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 135 134 136)
(code_label 136 135 140 16 38 "" [1 uses])
(note 140 136 137 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 137 140 0 16 (use (reg/i:SI 0 ax)) EACommands.c:390 -1
     (nil))

;; Function TPM2_PolicyPCR (TPM2_PolicyPCR, funcdef_no=6, decl_uid=12971, cgraph_uid=6, symbol_order=6)

Partition 6: size 232 align 16
	hashState
Partition 3: size 50 align 16
	pcrDigest
Partition 4: size 24 align 16
	pcrs
Partition 1: size 8 align 8
	session_10
Partition 5: size 8 align 8
	buffer
Partition 2: size 4 align 4
	pcrSize_39
Partition 0: size 4 align 4
	commandCode_5

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 42 from 15 to 16.
Redirecting jump 62 from 15 to 16.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 154.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:401 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13887+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:401 -1
     (nil))
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -360 [0xfffffffffffffe98])) [0 commandCode+0 S4 A32])
        (const_int 383 [0x17f])) EACommands.c:407 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 in+0 S8 A64])) EACommands.c:411 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ D.13880 ])
        (mem/j:SI (reg/f:DI 112) [0 in_7(D)->policySession+0 S4 A32])) EACommands.c:411 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13880 ])) EACommands.c:411 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:411 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 113)
        (reg:DI 0 ax)) EACommands.c:411 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -344 [0xfffffffffffffea8])) [0 session+0 S8 A64])
        (reg:DI 113)) EACommands.c:411 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 in+0 S8 A64])) EACommands.c:413 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg/f:DI 89 [ D.13881 ])
                (plus:DI (reg/f:DI 114)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:413 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -376 [0xfffffffffffffe88])) [0 in+0 S8 A64])
            (const_int 56 [0x38]))
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -344 [0xfffffffffffffea8])) [0 session+0 S8 A64])) EACommands.c:413 -1
     (nil))
(insn 17 16 18 2 (set (reg:HI 90 [ D.13882 ])
        (mem/j:HI (plus:DI (reg/f:DI 115)
                (const_int 32 [0x20])) [0 session_10->authHashAlg+0 S2 A64])) EACommands.c:413 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 91 [ D.13883 ])
        (zero_extend:SI (reg:HI 90 [ D.13882 ]))) EACommands.c:413 -1
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:413 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 1 dx)
        (reg:DI 116)) EACommands.c:413 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (reg/f:DI 89 [ D.13881 ])) EACommands.c:413 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 5 di)
        (reg:SI 91 [ D.13883 ])) EACommands.c:413 -1
     (nil))
(call_insn 23 22 24 2 (call (mem:QI (symbol_ref:DI ("PCRComputeCurrentDigest") [flags 0x41]  <function_decl 0x7f3043ee2360 PCRComputeCurrentDigest>) [0 PCRComputeCurrentDigest S1 A8])
        (const_int 0 [0])) EACommands.c:413 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 24 23 25 2 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -344 [0xfffffffffffffea8])) [0 session+0 S8 A64])) EACommands.c:415 -1
     (nil))
(insn 25 24 26 2 (set (reg:QI 92 [ D.13884 ])
        (mem:QI (reg/f:DI 117) [0 *session_10+0 S1 A64])) EACommands.c:415 -1
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg:QI 93 [ D.13884 ])
                (and:QI (reg:QI 92 [ D.13884 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:415 -1
     (nil))
(insn 27 26 28 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ D.13884 ])
            (const_int 0 [0]))) EACommands.c:415 -1
     (nil))
(jump_insn 28 27 29 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) EACommands.c:415 -1
     (nil)
 -> 64)
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -344 [0xfffffffffffffea8])) [0 session+0 S8 A64])) EACommands.c:418 -1
     (nil))
(insn 31 30 32 4 (set (reg:SI 94 [ D.13880 ])
        (mem/j:SI (plus:DI (reg/f:DI 118)
                (const_int 4 [0x4])) [0 session_10->pcrCounter+0 S4 A32])) EACommands.c:418 -1
     (nil))
(insn 32 31 33 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.13880 ])
            (const_int 0 [0]))) EACommands.c:418 -1
     (nil))
(jump_insn 33 32 34 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) EACommands.c:418 -1
     (nil)
 -> 44)
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -344 [0xfffffffffffffea8])) [0 session+0 S8 A64])) EACommands.c:418 -1
     (nil))
(insn 36 35 37 5 (set (reg:SI 95 [ D.13880 ])
        (mem/j:SI (plus:DI (reg/f:DI 119)
                (const_int 4 [0x4])) [0 session_10->pcrCounter+0 S4 A32])) EACommands.c:418 -1
     (nil))
(insn 37 36 38 5 (set (reg:SI 96 [ D.13880 ])
        (mem/j/c:SI (const:DI (plus:DI (symbol_ref:DI ("gr") [flags 0x40]  <var_decl 0x7f3043ea7090 gr>)
                    (const_int 272 [0x110]))) [0 gr.pcrCounter+0 S4 A64])) EACommands.c:418 -1
     (nil))
(insn 38 37 39 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.13880 ])
            (reg:SI 96 [ D.13880 ]))) EACommands.c:418 -1
     (nil))
(jump_insn 39 38 40 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) EACommands.c:418 -1
     (nil)
 -> 44)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (reg:SI 87 [ D.13879 ])
        (const_int 296 [0x128])) EACommands.c:419 -1
     (nil))
(jump_insn 42 41 43 6 (set (pc)
        (label_ref:DI 151)) EACommands.c:419 654 {jump}
     (nil)
 -> 151)
(barrier 43 42 44)
(code_label 44 43 45 7 41 "" [2 uses])
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 7 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 in+0 S8 A64])) EACommands.c:422 -1
     (nil))
(insn 47 46 48 7 (set (reg:HI 97 [ D.13882 ])
        (mem/j:HI (plus:DI (reg/f:DI 120)
                (const_int 4 [0x4])) [0 in_7(D)->pcrDigest.t.size+0 S2 A32])) EACommands.c:422 -1
     (nil))
(insn 48 47 49 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 97 [ D.13882 ])
            (const_int 0 [0]))) EACommands.c:422 -1
     (nil))
(jump_insn 49 48 50 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) EACommands.c:422 -1
     (nil)
 -> 86)
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 8 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 in+0 S8 A64])) EACommands.c:424 -1
     (nil))
(insn 52 51 53 8 (parallel [
            (set (reg/f:DI 98 [ D.13885 ])
                (plus:DI (reg/f:DI 121)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:424 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -376 [0xfffffffffffffe88])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 53 52 54 8 (parallel [
            (set (reg:DI 122)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:424 -1
     (nil))
(insn 54 53 55 8 (set (reg:DI 4 si)
        (reg:DI 122)) EACommands.c:424 -1
     (nil))
(insn 55 54 56 8 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.13885 ])) EACommands.c:424 -1
     (nil))
(call_insn 56 55 57 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("MemoryEqual2B") [flags 0x41]  <function_decl 0x7f3043f82798 MemoryEqual2B>) [0 MemoryEqual2B S1 A8])
            (const_int 0 [0]))) EACommands.c:424 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 57 56 58 8 (set (reg:SI 99 [ D.13883 ])
        (reg:SI 0 ax)) EACommands.c:424 -1
     (nil))
(insn 58 57 59 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.13883 ])
            (const_int 0 [0]))) EACommands.c:424 -1
     (nil))
(jump_insn 59 58 60 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) EACommands.c:424 -1
     (nil)
 -> 86)
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 9 (set (reg:SI 87 [ D.13879 ])
        (const_int 452 [0x1c4])) EACommands.c:425 -1
     (nil))
(jump_insn 62 61 63 9 (set (pc)
        (label_ref:DI 151)) EACommands.c:425 654 {jump}
     (nil)
 -> 151)
(barrier 63 62 64)
(code_label 64 63 65 10 40 "" [1 uses])
(note 65 64 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 10 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 in+0 S8 A64])) EACommands.c:433 -1
     (nil))
(insn 67 66 68 10 (set (reg:HI 100 [ D.13882 ])
        (mem/j:HI (plus:DI (reg/f:DI 123)
                (const_int 4 [0x4])) [0 in_7(D)->pcrDigest.t.size+0 S2 A32])) EACommands.c:433 -1
     (nil))
(insn 68 67 69 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 100 [ D.13882 ])
            (const_int 0 [0]))) EACommands.c:433 -1
     (nil))
(jump_insn 69 68 70 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) EACommands.c:433 -1
     (nil)
 -> 86)
(note 70 69 71 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 11 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 in+0 S8 A64])) EACommands.c:434 -1
     (nil))
(insn 72 71 73 11 (set (reg:DI 125)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 4 [0x4])) [0 in_7(D)->pcrDigest+0 S8 A32])) EACommands.c:434 -1
     (nil))
(insn 73 72 74 11 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -336 [0xfffffffffffffeb0])) [0 pcrDigest+0 S8 A64])
        (reg:DI 125)) EACommands.c:434 -1
     (nil))
(insn 74 73 75 11 (set (reg:DI 126)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 12 [0xc])) [0 in_7(D)->pcrDigest+8 S8 A32])) EACommands.c:434 -1
     (nil))
(insn 75 74 76 11 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -328 [0xfffffffffffffeb8])) [0 pcrDigest+8 S8 A64])
        (reg:DI 126)) EACommands.c:434 -1
     (nil))
(insn 76 75 77 11 (set (reg:DI 127)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 20 [0x14])) [0 in_7(D)->pcrDigest+16 S8 A32])) EACommands.c:434 -1
     (nil))
(insn 77 76 78 11 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -320 [0xfffffffffffffec0])) [0 pcrDigest+16 S8 A64])
        (reg:DI 127)) EACommands.c:434 -1
     (nil))
(insn 78 77 79 11 (set (reg:DI 128)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 28 [0x1c])) [0 in_7(D)->pcrDigest+24 S8 A32])) EACommands.c:434 -1
     (nil))
(insn 79 78 80 11 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -312 [0xfffffffffffffec8])) [0 pcrDigest+24 S8 A64])
        (reg:DI 128)) EACommands.c:434 -1
     (nil))
(insn 80 79 81 11 (set (reg:DI 129)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 36 [0x24])) [0 in_7(D)->pcrDigest+32 S8 A32])) EACommands.c:434 -1
     (nil))
(insn 81 80 82 11 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -304 [0xfffffffffffffed0])) [0 pcrDigest+32 S8 A64])
        (reg:DI 129)) EACommands.c:434 -1
     (nil))
(insn 82 81 83 11 (set (reg:DI 130)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 44 [0x2c])) [0 in_7(D)->pcrDigest+40 S8 A32])) EACommands.c:434 -1
     (nil))
(insn 83 82 84 11 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 pcrDigest+40 S8 A64])
        (reg:DI 130)) EACommands.c:434 -1
     (nil))
(insn 84 83 85 11 (set (reg:HI 131)
        (mem/j:HI (plus:DI (reg/f:DI 124)
                (const_int 52 [0x34])) [0 in_7(D)->pcrDigest+48 S2 A32])) EACommands.c:434 -1
     (nil))
(insn 85 84 86 11 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 pcrDigest+48 S2 A64])
        (reg:HI 131)) EACommands.c:434 -1
     (nil))
(code_label 86 85 87 12 43 "" [3 uses])
(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 12 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -344 [0xfffffffffffffea8])) [0 session+0 S8 A64])) EACommands.c:441 -1
     (nil))
(insn 89 88 90 12 (set (reg:HI 101 [ D.13882 ])
        (mem/j:HI (plus:DI (reg/f:DI 132)
                (const_int 32 [0x20])) [0 session_10->authHashAlg+0 S2 A64])) EACommands.c:441 -1
     (nil))
(insn 90 89 91 12 (set (reg:SI 102 [ D.13883 ])
        (zero_extend:SI (reg:HI 101 [ D.13882 ]))) EACommands.c:441 -1
     (nil))
(insn 91 90 92 12 (parallel [
            (set (reg:DI 133)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:441 -1
     (nil))
(insn 92 91 93 12 (set (reg:SI 4 si)
        (reg:SI 102 [ D.13883 ])) EACommands.c:441 -1
     (nil))
(insn 93 92 94 12 (set (reg:DI 5 di)
        (reg:DI 133)) EACommands.c:441 -1
     (nil))
(call_insn 94 93 95 12 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:441 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 95 94 96 12 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -344 [0xfffffffffffffea8])) [0 session+0 S8 A64])) EACommands.c:443 -1
     (nil))
(insn 96 95 97 12 (parallel [
            (set (reg/f:DI 103 [ D.13885 ])
                (plus:DI (reg/f:DI 134)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:443 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -344 [0xfffffffffffffea8])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 97 96 98 12 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:443 -1
     (nil))
(insn 98 97 99 12 (set (reg:DI 4 si)
        (reg/f:DI 103 [ D.13885 ])) EACommands.c:443 -1
     (nil))
(insn 99 98 100 12 (set (reg:DI 5 di)
        (reg:DI 135)) EACommands.c:443 -1
     (nil))
(call_insn 100 99 101 12 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:443 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 101 100 102 12 (set (reg:DI 104 [ D.13886 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -360 [0xfffffffffffffe98])) [0 commandCode+0 S4 A32]))) EACommands.c:445 -1
     (nil))
(insn 102 101 103 12 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:445 -1
     (nil))
(insn 103 102 104 12 (set (reg:DI 1 dx)
        (reg:DI 104 [ D.13886 ])) EACommands.c:445 -1
     (nil))
(insn 104 103 105 12 (set (reg:SI 4 si)
        (const_int 4 [0x4])) EACommands.c:445 -1
     (nil))
(insn 105 104 106 12 (set (reg:DI 5 di)
        (reg:DI 136)) EACommands.c:445 -1
     (nil))
(call_insn 106 105 107 12 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:445 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 107 106 108 12 (parallel [
            (set (reg:DI 137)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:447 -1
     (nil))
(insn 108 107 109 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -352 [0xfffffffffffffea0])) [0 buffer+0 S8 A64])
        (reg:DI 137)) EACommands.c:447 -1
     (nil))
(insn 109 108 110 12 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 in+0 S8 A64])) EACommands.c:448 -1
     (nil))
(insn 110 109 111 12 (parallel [
            (set (reg/f:DI 105 [ D.13881 ])
                (plus:DI (reg/f:DI 138)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:448 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -376 [0xfffffffffffffe88])) [0 in+0 S8 A64])
            (const_int 56 [0x38]))
        (nil)))
(insn 111 110 112 12 (parallel [
            (set (reg:DI 139)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -352 [0xfffffffffffffea0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:448 -1
     (nil))
(insn 112 111 113 12 (set (reg:DI 1 dx)
        (const_int 0 [0])) EACommands.c:448 -1
     (nil))
(insn 113 112 114 12 (set (reg:DI 4 si)
        (reg:DI 139)) EACommands.c:448 -1
     (nil))
(insn 114 113 115 12 (set (reg:DI 5 di)
        (reg/f:DI 105 [ D.13881 ])) EACommands.c:448 -1
     (nil))
(call_insn 115 114 116 12 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPML_PCR_SELECTION_Marshal") [flags 0x41]  <function_decl 0x7f3043f01a20 TPML_PCR_SELECTION_Marshal>) [0 TPML_PCR_SELECTION_Marshal S1 A8])
            (const_int 0 [0]))) EACommands.c:448 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 116 115 117 12 (set (reg:HI 106 [ D.13882 ])
        (reg:HI 0 ax)) EACommands.c:448 -1
     (nil))
(insn 117 116 118 12 (set (reg:SI 140)
        (zero_extend:SI (reg:HI 106 [ D.13882 ]))) EACommands.c:448 -1
     (nil))
(insn 118 117 119 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -356 [0xfffffffffffffe9c])) [0 pcrSize+0 S4 A32])
        (reg:SI 140)) EACommands.c:448 -1
     (nil))
(insn 119 118 120 12 (parallel [
            (set (reg:DI 141)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:449 -1
     (nil))
(insn 120 119 121 12 (set (reg:SI 142)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -356 [0xfffffffffffffe9c])) [0 pcrSize+0 S4 A32])) EACommands.c:449 -1
     (nil))
(insn 121 120 122 12 (parallel [
            (set (reg:DI 143)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:449 -1
     (nil))
(insn 122 121 123 12 (set (reg:DI 1 dx)
        (reg:DI 141)) EACommands.c:449 -1
     (nil))
(insn 123 122 124 12 (set (reg:SI 4 si)
        (reg:SI 142)) EACommands.c:449 -1
     (nil))
(insn 124 123 125 12 (set (reg:DI 5 di)
        (reg:DI 143)) EACommands.c:449 -1
     (nil))
(call_insn 125 124 126 12 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate") [flags 0x41]  <function_decl 0x7f3043fa15e8 CryptDigestUpdate>) [0 CryptDigestUpdate S1 A8])
        (const_int 0 [0])) EACommands.c:449 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 126 125 127 12 (parallel [
            (set (reg:DI 144)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -336 [0xfffffffffffffeb0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:451 -1
     (nil))
(insn 127 126 128 12 (parallel [
            (set (reg:DI 145)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:451 -1
     (nil))
(insn 128 127 129 12 (set (reg:DI 4 si)
        (reg:DI 144)) EACommands.c:451 -1
     (nil))
(insn 129 128 130 12 (set (reg:DI 5 di)
        (reg:DI 145)) EACommands.c:451 -1
     (nil))
(call_insn 130 129 131 12 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:451 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 131 130 132 12 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -344 [0xfffffffffffffea8])) [0 session+0 S8 A64])) EACommands.c:453 -1
     (nil))
(insn 132 131 133 12 (parallel [
            (set (reg/f:DI 107 [ D.13885 ])
                (plus:DI (reg/f:DI 146)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:453 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -344 [0xfffffffffffffea8])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 133 132 134 12 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:453 -1
     (nil))
(insn 134 133 135 12 (set (reg:DI 4 si)
        (reg/f:DI 107 [ D.13885 ])) EACommands.c:453 -1
     (nil))
(insn 135 134 136 12 (set (reg:DI 5 di)
        (reg:DI 147)) EACommands.c:453 -1
     (nil))
(call_insn 136 135 137 12 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:453 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 137 136 138 12 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -344 [0xfffffffffffffea8])) [0 session+0 S8 A64])) EACommands.c:455 -1
     (nil))
(insn 138 137 139 12 (set (reg:QI 108 [ D.13884 ])
        (mem:QI (reg/f:DI 148) [0 *session_10+0 S1 A64])) EACommands.c:455 -1
     (nil))
(insn 139 138 140 12 (parallel [
            (set (reg:QI 109 [ D.13884 ])
                (and:QI (reg:QI 108 [ D.13884 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:455 -1
     (nil))
(insn 140 139 141 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 109 [ D.13884 ])
            (const_int 0 [0]))) EACommands.c:455 -1
     (nil))
(jump_insn 141 140 142 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) EACommands.c:455 -1
     (nil)
 -> 146)
(note 142 141 143 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 13 (set (reg:SI 110 [ D.13880 ])
        (mem/j/c:SI (const:DI (plus:DI (symbol_ref:DI ("gr") [flags 0x40]  <var_decl 0x7f3043ea7090 gr>)
                    (const_int 272 [0x110]))) [0 gr.pcrCounter+0 S4 A64])) EACommands.c:457 -1
     (nil))
(insn 144 143 145 13 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -344 [0xfffffffffffffea8])) [0 session+0 S8 A64])) EACommands.c:457 -1
     (nil))
(insn 145 144 146 13 (set (mem/j:SI (plus:DI (reg/f:DI 149)
                (const_int 4 [0x4])) [0 session_10->pcrCounter+0 S4 A32])
        (reg:SI 110 [ D.13880 ])) EACommands.c:457 -1
     (nil))
(code_label 146 145 147 14 44 "" [1 uses])
(note 147 146 148 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 151 14 (set (reg:SI 87 [ D.13879 ])
        (const_int 0 [0])) EACommands.c:459 -1
     (nil))
(code_label 151 148 152 16 45 "" [2 uses])
(note 152 151 153 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 157 16 (set (reg:SI 111 [ <retval> ])
        (reg:SI 87 [ D.13879 ])) -1
     (nil))
(insn 157 153 158 16 (set (reg/i:SI 0 ax)
        (reg:SI 111 [ <retval> ])) EACommands.c:460 -1
     (nil))
(insn 158 157 159 16 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13887+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:460 -1
     (nil))
(jump_insn 159 158 165 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 162)
            (pc))) EACommands.c:460 -1
     (nil)
 -> 162)
(note 165 159 160 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(call_insn 160 165 161 18 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:460 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 161 160 162)
(code_label 162 161 166 19 46 "" [1 uses])
(note 166 162 163 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 163 166 0 19 (use (reg/i:SI 0 ax)) EACommands.c:460 -1
     (nil))

;; Function TPM2_PolicyLocality (TPM2_PolicyLocality, funcdef_no=7, decl_uid=12987, cgraph_uid=7, symbol_order=7)

Partition 6: size 232 align 16
	hashState
Partition 1: size 8 align 8
	session_10
Partition 5: size 8 align 8
	buffer
Partition 0: size 4 align 4
	commandCode_5
Partition 4: size 4 align 4
	marshalSize
Partition 3: size 1 align 1
	prevSetting
Partition 2: size 1 align 1
	marshalBuffer

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 32 from 18 to 19.
Redirecting jump 61 from 18 to 19.
Redirecting jump 85 from 18 to 19.
Redirecting jump 99 from 18 to 19.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Removing jump 155.
Merging block 20 into block 19...
Merged blocks 19 and 20.
Merged 19 and 20 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:469 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13897+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:469 -1
     (nil))
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -276 [0xfffffffffffffeec])) [0 commandCode+0 S4 A32])
        (const_int 367 [0x16f])) EACommands.c:475 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 in+0 S8 A64])) EACommands.c:479 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ D.13889 ])
        (mem/j:SI (reg/f:DI 118) [0 in_7(D)->policySession+0 S4 A32])) EACommands.c:479 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13889 ])) EACommands.c:479 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:479 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 119)
        (reg:DI 0 ax)) EACommands.c:479 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 session+0 S8 A64])
        (reg:DI 119)) EACommands.c:479 -1
     (nil))
(insn 14 13 15 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 marshalBuffer+0 S1 A16])
        (const_int 0 [0])) EACommands.c:481 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 120)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10 [0xfffffffffffffff6])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:482 -1
     (nil))
(insn 16 15 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 buffer+0 S8 A64])
        (reg:DI 120)) EACommands.c:482 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [0 in+0 S8 A64])) EACommands.c:483 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 89 [ D.13890 ])
                (plus:DI (reg/f:DI 121)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:483 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -296 [0xfffffffffffffed8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 19 18 20 2 (parallel [
            (set (reg:DI 122)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:483 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) EACommands.c:483 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (reg:DI 122)) EACommands.c:483 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.13890 ])) EACommands.c:483 -1
     (nil))
(call_insn 23 22 24 2 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMA_LOCALITY_Marshal") [flags 0x41]  <function_decl 0x7f3043ef3870 TPMA_LOCALITY_Marshal>) [0 TPMA_LOCALITY_Marshal S1 A8])
            (const_int 0 [0]))) EACommands.c:483 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 24 23 25 2 (set (reg:HI 90 [ D.13891 ])
        (reg:HI 0 ax)) EACommands.c:483 -1
     (nil))
(insn 25 24 26 2 (set (reg:SI 91 [ D.13889 ])
        (zero_extend:SI (reg:HI 90 [ D.13891 ]))) EACommands.c:483 -1
     (nil))
(insn 26 25 27 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [0 marshalSize+0 S4 A64])
        (reg:SI 91 [ D.13889 ])) EACommands.c:483 -1
     (nil))
(insn 27 26 28 2 (set (reg:QI 92 [ D.13892 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 marshalBuffer+0 S1 A16])) EACommands.c:485 -1
     (nil))
(insn 28 27 29 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ D.13892 ])
            (const_int 0 [0]))) EACommands.c:485 -1
     (nil))
(jump_insn 29 28 30 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) EACommands.c:485 -1
     (nil)
 -> 34)
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 4 (set (reg:SI 87 [ D.13888 ])
        (const_int 461 [0x1cd])) EACommands.c:486 -1
     (nil))
(jump_insn 32 31 33 4 (set (pc)
        (label_ref:DI 152)) EACommands.c:486 654 {jump}
     (nil)
 -> 152)
(barrier 33 32 34)
(code_label 34 33 35 5 48 "" [1 uses])
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -9 [0xfffffffffffffff7])) [0 prevSetting+0 S1 A8])
        (const_int 0 [0])) EACommands.c:488 -1
     (nil))
(insn 37 36 38 5 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -9 [0xfffffffffffffff7])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:489 -1
     (nil))
(insn 38 37 39 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 buffer+0 S8 A64])
        (reg:DI 123)) EACommands.c:489 -1
     (nil))
(insn 39 38 40 5 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 session+0 S8 A64])) EACommands.c:490 -1
     (nil))
(insn 40 39 41 5 (parallel [
            (set (reg/f:DI 93 [ D.13890 ])
                (plus:DI (reg/f:DI 124)
                    (const_int 34 [0x22])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:490 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 session+0 S8 A64])
            (const_int 34 [0x22]))
        (nil)))
(insn 41 40 42 5 (parallel [
            (set (reg:DI 125)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:490 -1
     (nil))
(insn 42 41 43 5 (set (reg:DI 1 dx)
        (const_int 0 [0])) EACommands.c:490 -1
     (nil))
(insn 43 42 44 5 (set (reg:DI 4 si)
        (reg:DI 125)) EACommands.c:490 -1
     (nil))
(insn 44 43 45 5 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.13890 ])) EACommands.c:490 -1
     (nil))
(call_insn 45 44 46 5 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMA_LOCALITY_Marshal") [flags 0x41]  <function_decl 0x7f3043ef3870 TPMA_LOCALITY_Marshal>) [0 TPMA_LOCALITY_Marshal S1 A8])
            (const_int 0 [0]))) EACommands.c:490 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 46 45 47 5 (set (reg:QI 94 [ D.13892 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -9 [0xfffffffffffffff7])) [0 prevSetting+0 S1 A8])) EACommands.c:492 -1
     (nil))
(insn 47 46 48 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 94 [ D.13892 ])
            (const_int 0 [0]))) EACommands.c:492 -1
     (nil))
(jump_insn 48 47 49 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) EACommands.c:492 -1
     (nil)
 -> 63)
(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 6 (set (reg:QI 95 [ D.13892 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -9 [0xfffffffffffffff7])) [0 prevSetting+0 S1 A8])) EACommands.c:495 -1
     (nil))
(insn 51 50 52 6 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 95 [ D.13892 ])
            (const_int 31 [0x1f]))) EACommands.c:495 -1
     (nil))
(insn 52 51 53 6 (set (reg:QI 96 [ D.13893 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) EACommands.c:495 -1
     (nil))
(insn 53 52 54 6 (set (reg:QI 97 [ D.13892 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 marshalBuffer+0 S1 A16])) EACommands.c:495 -1
     (nil))
(insn 54 53 55 6 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 97 [ D.13892 ])
            (const_int 31 [0x1f]))) EACommands.c:495 -1
     (nil))
(insn 55 54 56 6 (set (reg:QI 98 [ D.13893 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) EACommands.c:495 -1
     (nil))
(insn 56 55 57 6 (parallel [
            (set (reg:QI 99 [ D.13893 ])
                (xor:QI (reg:QI 96 [ D.13893 ])
                    (reg:QI 98 [ D.13893 ])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:495 -1
     (nil))
(insn 57 56 58 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 99 [ D.13893 ])
            (const_int 0 [0]))) EACommands.c:495 -1
     (nil))
(jump_insn 58 57 59 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) EACommands.c:495 -1
     (nil)
 -> 63)
(note 59 58 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 7 (set (reg:SI 87 [ D.13888 ])
        (const_int 461 [0x1cd])) EACommands.c:496 -1
     (nil))
(jump_insn 61 60 62 7 (set (pc)
        (label_ref:DI 152)) EACommands.c:496 654 {jump}
     (nil)
 -> 152)
(barrier 62 61 63)
(code_label 63 62 64 8 50 "" [2 uses])
(note 64 63 65 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 8 (set (reg:QI 100 [ D.13892 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 marshalBuffer+0 S1 A16])) EACommands.c:498 -1
     (nil))
(insn 66 65 67 8 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 100 [ D.13892 ])
            (const_int 31 [0x1f]))) EACommands.c:498 -1
     (nil))
(jump_insn 67 66 68 8 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) EACommands.c:498 -1
     (nil)
 -> 87)
(note 68 67 69 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 9 (set (reg:QI 101 [ D.13892 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -9 [0xfffffffffffffff7])) [0 prevSetting+0 S1 A8])) EACommands.c:502 -1
     (nil))
(insn 70 69 71 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 101 [ D.13892 ])
            (const_int 0 [0]))) EACommands.c:502 -1
     (nil))
(jump_insn 71 70 72 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) EACommands.c:502 -1
     (nil)
 -> 74)
(note 72 71 73 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 10 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -9 [0xfffffffffffffff7])) [0 prevSetting+0 S1 A8])
        (const_int 31 [0x1f])) EACommands.c:503 -1
     (nil))
(code_label 74 73 75 11 52 "" [1 uses])
(note 75 74 76 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 11 (set (reg:QI 102 [ D.13892 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -9 [0xfffffffffffffff7])) [0 prevSetting+0 S1 A8])) EACommands.c:505 -1
     (nil))
(insn 77 76 78 11 (set (reg:QI 103 [ D.13892 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 marshalBuffer+0 S1 A16])) EACommands.c:505 -1
     (nil))
(insn 78 77 79 11 (parallel [
            (set (reg:QI 104 [ D.13892 ])
                (and:QI (reg:QI 102 [ D.13892 ])
                    (reg:QI 103 [ D.13892 ])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:505 -1
     (nil))
(insn 79 78 80 11 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -9 [0xfffffffffffffff7])) [0 prevSetting+0 S1 A8])
        (reg:QI 104 [ D.13892 ])) EACommands.c:505 -1
     (nil))
(insn 80 79 81 11 (set (reg:QI 105 [ D.13892 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -9 [0xfffffffffffffff7])) [0 prevSetting+0 S1 A8])) EACommands.c:507 -1
     (nil))
(insn 81 80 82 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 105 [ D.13892 ])
            (const_int 0 [0]))) EACommands.c:507 -1
     (nil))
(jump_insn 82 81 83 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) EACommands.c:507 -1
     (nil)
 -> 105)
(note 83 82 84 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 12 (set (reg:SI 87 [ D.13888 ])
        (const_int 461 [0x1cd])) EACommands.c:508 -1
     (nil))
(jump_insn 85 84 86 12 (set (pc)
        (label_ref:DI 152)) EACommands.c:508 654 {jump}
     (nil)
 -> 152)
(barrier 86 85 87)
(code_label 87 86 88 13 51 "" [1 uses])
(note 88 87 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 13 (set (reg:QI 106 [ D.13892 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -9 [0xfffffffffffffff7])) [0 prevSetting+0 S1 A8])) EACommands.c:514 -1
     (nil))
(insn 90 89 91 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 106 [ D.13892 ])
            (const_int 0 [0]))) EACommands.c:514 -1
     (nil))
(jump_insn 91 90 92 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) EACommands.c:514 -1
     (nil)
 -> 101)
(note 92 91 93 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 14 (set (reg:QI 107 [ D.13892 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -9 [0xfffffffffffffff7])) [0 prevSetting+0 S1 A8])) EACommands.c:514 -1
     (nil))
(insn 94 93 95 14 (set (reg:QI 108 [ D.13892 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 marshalBuffer+0 S1 A16])) EACommands.c:514 -1
     (nil))
(insn 95 94 96 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 107 [ D.13892 ])
            (reg:QI 108 [ D.13892 ]))) EACommands.c:514 -1
     (nil))
(jump_insn 96 95 97 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) EACommands.c:514 -1
     (nil)
 -> 101)
(note 97 96 98 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 15 (set (reg:SI 87 [ D.13888 ])
        (const_int 461 [0x1cd])) EACommands.c:515 -1
     (nil))
(jump_insn 99 98 100 15 (set (pc)
        (label_ref:DI 152)) EACommands.c:515 654 {jump}
     (nil)
 -> 152)
(barrier 100 99 101)
(code_label 101 100 102 16 54 "" [2 uses])
(note 102 101 103 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 16 (set (reg:QI 109 [ D.13892 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 marshalBuffer+0 S1 A16])) EACommands.c:517 -1
     (nil))
(insn 104 103 105 16 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -9 [0xfffffffffffffff7])) [0 prevSetting+0 S1 A8])
        (reg:QI 109 [ D.13892 ])) EACommands.c:517 -1
     (nil))
(code_label 105 104 106 17 53 "" [1 uses])
(note 106 105 107 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 17 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 session+0 S8 A64])) EACommands.c:523 -1
     (nil))
(insn 108 107 109 17 (set (reg:HI 110 [ D.13891 ])
        (mem/j:HI (plus:DI (reg/f:DI 126)
                (const_int 32 [0x20])) [0 session_10->authHashAlg+0 S2 A64])) EACommands.c:523 -1
     (nil))
(insn 109 108 110 17 (set (reg:SI 111 [ D.13894 ])
        (zero_extend:SI (reg:HI 110 [ D.13891 ]))) EACommands.c:523 -1
     (nil))
(insn 110 109 111 17 (parallel [
            (set (reg:DI 127)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:523 -1
     (nil))
(insn 111 110 112 17 (set (reg:SI 4 si)
        (reg:SI 111 [ D.13894 ])) EACommands.c:523 -1
     (nil))
(insn 112 111 113 17 (set (reg:DI 5 di)
        (reg:DI 127)) EACommands.c:523 -1
     (nil))
(call_insn 113 112 114 17 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:523 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 114 113 115 17 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 session+0 S8 A64])) EACommands.c:525 -1
     (nil))
(insn 115 114 116 17 (parallel [
            (set (reg/f:DI 112 [ D.13895 ])
                (plus:DI (reg/f:DI 128)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:525 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 116 115 117 17 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:525 -1
     (nil))
(insn 117 116 118 17 (set (reg:DI 4 si)
        (reg/f:DI 112 [ D.13895 ])) EACommands.c:525 -1
     (nil))
(insn 118 117 119 17 (set (reg:DI 5 di)
        (reg:DI 129)) EACommands.c:525 -1
     (nil))
(call_insn 119 118 120 17 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:525 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 120 119 121 17 (set (reg:DI 113 [ D.13896 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -276 [0xfffffffffffffeec])) [0 commandCode+0 S4 A32]))) EACommands.c:527 -1
     (nil))
(insn 121 120 122 17 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:527 -1
     (nil))
(insn 122 121 123 17 (set (reg:DI 1 dx)
        (reg:DI 113 [ D.13896 ])) EACommands.c:527 -1
     (nil))
(insn 123 122 124 17 (set (reg:SI 4 si)
        (const_int 4 [0x4])) EACommands.c:527 -1
     (nil))
(insn 124 123 125 17 (set (reg:DI 5 di)
        (reg:DI 130)) EACommands.c:527 -1
     (nil))
(call_insn 125 124 126 17 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:527 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 126 125 127 17 (set (reg:SI 114 [ D.13889 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [0 marshalSize+0 S4 A64])) EACommands.c:529 -1
     (nil))
(insn 127 126 128 17 (parallel [
            (set (reg:DI 131)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10 [0xfffffffffffffff6])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:529 -1
     (nil))
(insn 128 127 129 17 (parallel [
            (set (reg:DI 132)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:529 -1
     (nil))
(insn 129 128 130 17 (set (reg:DI 1 dx)
        (reg:DI 131)) EACommands.c:529 -1
     (nil))
(insn 130 129 131 17 (set (reg:SI 4 si)
        (reg:SI 114 [ D.13889 ])) EACommands.c:529 -1
     (nil))
(insn 131 130 132 17 (set (reg:DI 5 di)
        (reg:DI 132)) EACommands.c:529 -1
     (nil))
(call_insn 132 131 133 17 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate") [flags 0x41]  <function_decl 0x7f3043fa15e8 CryptDigestUpdate>) [0 CryptDigestUpdate S1 A8])
        (const_int 0 [0])) EACommands.c:529 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 133 132 134 17 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 session+0 S8 A64])) EACommands.c:531 -1
     (nil))
(insn 134 133 135 17 (parallel [
            (set (reg/f:DI 115 [ D.13895 ])
                (plus:DI (reg/f:DI 133)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:531 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 135 134 136 17 (parallel [
            (set (reg:DI 134)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:531 -1
     (nil))
(insn 136 135 137 17 (set (reg:DI 4 si)
        (reg/f:DI 115 [ D.13895 ])) EACommands.c:531 -1
     (nil))
(insn 137 136 138 17 (set (reg:DI 5 di)
        (reg:DI 134)) EACommands.c:531 -1
     (nil))
(call_insn 138 137 139 17 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:531 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 139 138 140 17 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -9 [0xfffffffffffffff7])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:534 -1
     (nil))
(insn 140 139 141 17 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [0 buffer+0 S8 A64])
        (reg:DI 135)) EACommands.c:534 -1
     (nil))
(insn 141 140 142 17 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 session+0 S8 A64])) EACommands.c:535 -1
     (nil))
(insn 142 141 143 17 (parallel [
            (set (reg/f:DI 116 [ D.13890 ])
                (plus:DI (reg/f:DI 136)
                    (const_int 34 [0x22])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:535 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 session+0 S8 A64])
            (const_int 34 [0x22]))
        (nil)))
(insn 143 142 144 17 (parallel [
            (set (reg:DI 137)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -280 [0xfffffffffffffee8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:535 -1
     (nil))
(insn 144 143 145 17 (parallel [
            (set (reg:DI 138)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:535 -1
     (nil))
(insn 145 144 146 17 (set (reg:DI 1 dx)
        (reg:DI 137)) EACommands.c:535 -1
     (nil))
(insn 146 145 147 17 (set (reg:DI 4 si)
        (reg:DI 138)) EACommands.c:535 -1
     (nil))
(insn 147 146 148 17 (set (reg:DI 5 di)
        (reg/f:DI 116 [ D.13890 ])) EACommands.c:535 -1
     (nil))
(call_insn 148 147 149 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMA_LOCALITY_Unmarshal") [flags 0x41]  <function_decl 0x7f3043f34288 TPMA_LOCALITY_Unmarshal>) [0 TPMA_LOCALITY_Unmarshal S1 A8])
            (const_int 0 [0]))) EACommands.c:535 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 149 148 152 17 (set (reg:SI 87 [ D.13888 ])
        (const_int 0 [0])) EACommands.c:537 -1
     (nil))
(code_label 152 149 153 19 55 "" [4 uses])
(note 153 152 154 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 158 19 (set (reg:SI 117 [ <retval> ])
        (reg:SI 87 [ D.13888 ])) -1
     (nil))
(insn 158 154 159 19 (set (reg/i:SI 0 ax)
        (reg:SI 117 [ <retval> ])) EACommands.c:538 -1
     (nil))
(insn 159 158 160 19 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13897+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:538 -1
     (nil))
(jump_insn 160 159 166 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) EACommands.c:538 -1
     (nil)
 -> 163)
(note 166 160 161 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(call_insn 161 166 162 21 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:538 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 162 161 163)
(code_label 163 162 167 22 56 "" [1 uses])
(note 167 163 164 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 164 167 0 22 (use (reg/i:SI 0 ax)) EACommands.c:538 -1
     (nil))

;; Function TPM2_PolicyNV (TPM2_PolicyNV, funcdef_no=8, decl_uid=13007, cgraph_uid=8, symbol_order=8)

Partition 7: size 232 align 16
	hashState
Partition 6: size 54 align 16
	nvName
Partition 8: size 50 align 16
	argHash
Partition 5: size 48 align 16
	nvBuffer
Partition 2: size 8 align 8
	nvIndex_14
Partition 1: size 8 align 8
	session_9
Partition 3: size 4 align 4
	result_19
Partition 0: size 4 align 4
	commandCode_4
Partition 4: size 4 align 4
	locator

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 44 from 13 to 14.
Redirecting jump 56 from 13 to 14.
Redirecting jump 74 from 13 to 14.
Redirecting jump 112 from 13 to 14.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Removing jump 200.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:548 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13907+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:548 -1
     (nil))
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -456 [0xfffffffffffffe38])) [0 commandCode+0 S4 A32])
        (const_int 329 [0x149])) EACommands.c:555 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])) EACommands.c:560 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ D.13899 ])
        (mem/j:SI (plus:DI (reg/f:DI 132)
                (const_int 8 [0x8])) [0 in_6(D)->policySession+0 S4 A32])) EACommands.c:560 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13899 ])) EACommands.c:560 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:560 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 133)
        (reg:DI 0 ax)) EACommands.c:560 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -448 [0xfffffffffffffe40])) [0 session+0 S8 A64])
        (reg:DI 133)) EACommands.c:560 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -448 [0xfffffffffffffe40])) [0 session+0 S8 A64])) EACommands.c:562 -1
     (nil))
(insn 15 14 16 2 (set (reg:QI 89 [ D.13900 ])
        (mem:QI (reg/f:DI 134) [0 *session_9+0 S1 A64])) EACommands.c:562 -1
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg:QI 90 [ D.13900 ])
                (and:QI (reg:QI 89 [ D.13900 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:562 -1
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.13900 ])
            (const_int 0 [0]))) EACommands.c:562 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) EACommands.c:562 -1
     (nil)
 -> 114)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])) EACommands.c:565 -1
     (nil))
(insn 21 20 22 4 (set (reg:SI 91 [ D.13899 ])
        (mem/j:SI (plus:DI (reg/f:DI 135)
                (const_int 4 [0x4])) [0 in_6(D)->nvIndex+0 S4 A32])) EACommands.c:565 -1
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -460 [0xfffffffffffffe34])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:565 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 4 si)
        (reg:DI 136)) EACommands.c:565 -1
     (nil))
(insn 24 23 25 4 (set (reg:SI 5 di)
        (reg:SI 91 [ D.13899 ])) EACommands.c:565 -1
     (nil))
(call_insn 25 24 26 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetIndexInfo") [flags 0x41]  <function_decl 0x7f3043ed4bd0 NvGetIndexInfo>) [0 NvGetIndexInfo S1 A8])
            (const_int 0 [0]))) EACommands.c:565 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 26 25 27 4 (set (reg:DI 137)
        (reg:DI 0 ax)) EACommands.c:565 -1
     (nil))
(insn 27 26 28 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -440 [0xfffffffffffffe48])) [0 nvIndex+0 S8 A64])
        (reg:DI 137)) EACommands.c:565 -1
     (nil))
(insn 28 27 29 4 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -440 [0xfffffffffffffe48])) [0 nvIndex+0 S8 A64])) EACommands.c:568 -1
     (nil))
(insn 29 28 30 4 (set (reg:SI 92 [ D.13899 ])
        (mem/j:SI (plus:DI (reg/f:DI 138)
                (const_int 8 [0x8])) [0 nvIndex_14->publicArea.attributes+0 S4 A32])) EACommands.c:568 -1
     (nil))
(insn 30 29 31 4 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])) EACommands.c:568 -1
     (nil))
(insn 31 30 32 4 (set (reg:SI 93 [ D.13899 ])
        (mem/j:SI (plus:DI (reg/f:DI 139)
                (const_int 4 [0x4])) [0 in_6(D)->nvIndex+0 S4 A32])) EACommands.c:568 -1
     (nil))
(insn 32 31 33 4 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])) EACommands.c:568 -1
     (nil))
(insn 33 32 34 4 (set (reg:SI 94 [ D.13899 ])
        (mem/j:SI (reg/f:DI 140) [0 in_6(D)->authHandle+0 S4 A32])) EACommands.c:568 -1
     (nil))
(insn 34 33 35 4 (set (reg:SI 1 dx)
        (reg:SI 92 [ D.13899 ])) EACommands.c:568 -1
     (nil))
(insn 35 34 36 4 (set (reg:SI 4 si)
        (reg:SI 93 [ D.13899 ])) EACommands.c:568 -1
     (nil))
(insn 36 35 37 4 (set (reg:SI 5 di)
        (reg:SI 94 [ D.13899 ])) EACommands.c:568 -1
     (nil))
(call_insn 37 36 38 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvReadAccessChecks") [flags 0x41]  <function_decl 0x7f3043edc1b0 NvReadAccessChecks>) [0 NvReadAccessChecks S1 A8])
            (const_int 0 [0]))) EACommands.c:568 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 38 37 39 4 (set (reg:SI 141)
        (reg:SI 0 ax)) EACommands.c:568 -1
     (nil))
(insn 39 38 40 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -452 [0xfffffffffffffe3c])) [0 result+0 S4 A32])
        (reg:SI 141)) EACommands.c:568 -1
     (nil))
(insn 40 39 41 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -452 [0xfffffffffffffe3c])) [0 result+0 S4 A32])
            (const_int 0 [0]))) EACommands.c:571 -1
     (nil))
(jump_insn 41 40 42 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) EACommands.c:571 -1
     (nil)
 -> 46)
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 5 (set (reg:SI 87 [ D.13898 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -452 [0xfffffffffffffe3c])) [0 result+0 S4 A32])) EACommands.c:572 -1
     (nil))
(jump_insn 44 43 45 5 (set (pc)
        (label_ref:DI 197)) EACommands.c:572 654 {jump}
     (nil)
 -> 197)
(barrier 45 44 46)
(code_label 46 45 47 6 59 "" [1 uses])
(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 6 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])) EACommands.c:574 -1
     (nil))
(insn 49 48 50 6 (set (reg:HI 95 [ D.13901 ])
        (mem/j:HI (plus:DI (reg/f:DI 142)
                (const_int 62 [0x3e])) [0 in_6(D)->offset+0 S2 A16])) EACommands.c:574 -1
     (nil))
(insn 50 49 51 6 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -440 [0xfffffffffffffe48])) [0 nvIndex+0 S8 A64])) EACommands.c:574 -1
     (nil))
(insn 51 50 52 6 (set (reg:HI 96 [ D.13901 ])
        (mem/j:HI (plus:DI (reg/f:DI 143)
                (const_int 62 [0x3e])) [0 nvIndex_14->publicArea.dataSize+0 S2 A16])) EACommands.c:574 -1
     (nil))
(insn 52 51 53 6 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 95 [ D.13901 ])
            (reg:HI 96 [ D.13901 ]))) EACommands.c:574 -1
     (nil))
(jump_insn 53 52 54 6 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) EACommands.c:574 -1
     (nil)
 -> 58)
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 7 (set (reg:SI 87 [ D.13898 ])
        (const_int 708 [0x2c4])) EACommands.c:575 -1
     (nil))
(jump_insn 56 55 57 7 (set (pc)
        (label_ref:DI 197)) EACommands.c:575 654 {jump}
     (nil)
 -> 197)
(barrier 57 56 58)
(code_label 58 57 59 8 61 "" [1 uses])
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 8 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -440 [0xfffffffffffffe48])) [0 nvIndex+0 S8 A64])) EACommands.c:577 -1
     (nil))
(insn 61 60 62 8 (set (reg:HI 97 [ D.13901 ])
        (mem/j:HI (plus:DI (reg/f:DI 144)
                (const_int 62 [0x3e])) [0 nvIndex_14->publicArea.dataSize+0 S2 A16])) EACommands.c:577 -1
     (nil))
(insn 62 61 63 8 (set (reg:SI 98 [ D.13902 ])
        (zero_extend:SI (reg:HI 97 [ D.13901 ]))) EACommands.c:577 -1
     (nil))
(insn 63 62 64 8 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])) EACommands.c:577 -1
     (nil))
(insn 64 63 65 8 (set (reg:HI 99 [ D.13901 ])
        (mem/j:HI (plus:DI (reg/f:DI 145)
                (const_int 62 [0x3e])) [0 in_6(D)->offset+0 S2 A16])) EACommands.c:577 -1
     (nil))
(insn 65 64 66 8 (set (reg:SI 100 [ D.13902 ])
        (zero_extend:SI (reg:HI 99 [ D.13901 ]))) EACommands.c:577 -1
     (nil))
(insn 66 65 67 8 (parallel [
            (set (reg:SI 101 [ D.13902 ])
                (minus:SI (reg:SI 98 [ D.13902 ])
                    (reg:SI 100 [ D.13902 ])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:577 -1
     (nil))
(insn 67 66 68 8 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])) EACommands.c:577 -1
     (nil))
(insn 68 67 69 8 (set (reg:HI 102 [ D.13901 ])
        (mem/j:HI (plus:DI (reg/f:DI 146)
                (const_int 12 [0xc])) [0 in_6(D)->operandB.t.size+0 S2 A32])) EACommands.c:577 -1
     (nil))
(insn 69 68 70 8 (set (reg:SI 103 [ D.13902 ])
        (zero_extend:SI (reg:HI 102 [ D.13901 ]))) EACommands.c:577 -1
     (nil))
(insn 70 69 71 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 101 [ D.13902 ])
            (reg:SI 103 [ D.13902 ]))) EACommands.c:577 -1
     (nil))
(jump_insn 71 70 72 8 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) EACommands.c:577 -1
     (nil)
 -> 76)
(note 72 71 73 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 9 (set (reg:SI 87 [ D.13898 ])
        (const_int 469 [0x1d5])) EACommands.c:578 -1
     (nil))
(jump_insn 74 73 75 9 (set (pc)
        (label_ref:DI 197)) EACommands.c:578 654 {jump}
     (nil)
 -> 197)
(barrier 75 74 76)
(code_label 76 75 77 10 62 "" [1 uses])
(note 77 76 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 10 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])) EACommands.c:580 -1
     (nil))
(insn 79 78 80 10 (set (reg:HI 104 [ D.13901 ])
        (mem/j:HI (plus:DI (reg/f:DI 147)
                (const_int 12 [0xc])) [0 in_6(D)->operandB.t.size+0 S2 A32])) EACommands.c:580 -1
     (nil))
(insn 80 79 81 10 (set (reg:SI 105 [ D.13902 ])
        (zero_extend:SI (reg:HI 104 [ D.13901 ]))) EACommands.c:580 -1
     (nil))
(insn 81 80 82 10 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])) EACommands.c:580 -1
     (nil))
(insn 82 81 83 10 (set (reg:HI 106 [ D.13901 ])
        (mem/j:HI (plus:DI (reg/f:DI 148)
                (const_int 62 [0x3e])) [0 in_6(D)->offset+0 S2 A16])) EACommands.c:580 -1
     (nil))
(insn 83 82 84 10 (set (reg:SI 107 [ D.13899 ])
        (zero_extend:SI (reg:HI 106 [ D.13901 ]))) EACommands.c:580 -1
     (nil))
(insn 84 83 85 10 (set (reg:SI 108 [ D.13899 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -460 [0xfffffffffffffe34])) [0 locator+0 S4 A32])) EACommands.c:580 -1
     (nil))
(insn 85 84 86 10 (parallel [
            (set (reg:DI 149)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:580 -1
     (nil))
(insn 86 85 87 10 (set (reg:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -440 [0xfffffffffffffe48])) [0 nvIndex+0 S8 A64])) EACommands.c:580 -1
     (nil))
(insn 87 86 88 10 (set (reg:DI 37 r8)
        (reg:DI 149)) EACommands.c:580 -1
     (nil))
(insn 88 87 89 10 (set (reg:SI 2 cx)
        (reg:SI 105 [ D.13902 ])) EACommands.c:580 -1
     (nil))
(insn 89 88 90 10 (set (reg:SI 1 dx)
        (reg:SI 107 [ D.13899 ])) EACommands.c:580 -1
     (nil))
(insn 90 89 91 10 (set (reg:SI 4 si)
        (reg:SI 108 [ D.13899 ])) EACommands.c:580 -1
     (nil))
(insn 91 90 92 10 (set (reg:DI 5 di)
        (reg:DI 150)) EACommands.c:580 -1
     (nil))
(call_insn 92 91 93 10 (call (mem:QI (symbol_ref:DI ("NvGetIndexData") [flags 0x41]  <function_decl 0x7f3043ed4870 NvGetIndexData>) [0 NvGetIndexData S1 A8])
        (const_int 0 [0])) EACommands.c:580 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 93 92 94 10 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])) EACommands.c:583 -1
     (nil))
(insn 94 93 95 10 (set (reg:HI 109 [ D.13901 ])
        (mem/j:HI (plus:DI (reg/f:DI 151)
                (const_int 12 [0xc])) [0 in_6(D)->operandB.t.size+0 S2 A32])) EACommands.c:583 -1
     (nil))
(insn 95 94 96 10 (set (reg:SI 110 [ D.13902 ])
        (zero_extend:SI (reg:HI 109 [ D.13901 ]))) EACommands.c:582 -1
     (nil))
(insn 96 95 97 10 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])) EACommands.c:583 -1
     (nil))
(insn 97 96 98 10 (parallel [
            (set (reg/f:DI 111 [ D.13903 ])
                (plus:DI (reg/f:DI 152)
                    (const_int 14 [0xe])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:583 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])
            (const_int 14 [0xe]))
        (nil)))
(insn 98 97 99 10 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])) EACommands.c:582 -1
     (nil))
(insn 99 98 100 10 (set (reg:HI 112 [ D.13901 ])
        (mem/j:HI (plus:DI (reg/f:DI 153)
                (const_int 64 [0x40])) [0 in_6(D)->operation+0 S2 A32])) EACommands.c:582 -1
     (nil))
(insn 100 99 101 10 (set (reg:SI 113 [ D.13902 ])
        (zero_extend:SI (reg:HI 112 [ D.13901 ]))) EACommands.c:582 -1
     (nil))
(insn 101 100 102 10 (parallel [
            (set (reg:DI 154)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:582 -1
     (nil))
(insn 102 101 103 10 (set (reg:SI 2 cx)
        (reg:SI 110 [ D.13902 ])) EACommands.c:582 -1
     (nil))
(insn 103 102 104 10 (set (reg:DI 1 dx)
        (reg/f:DI 111 [ D.13903 ])) EACommands.c:582 -1
     (nil))
(insn 104 103 105 10 (set (reg:DI 4 si)
        (reg:DI 154)) EACommands.c:582 -1
     (nil))
(insn 105 104 106 10 (set (reg:SI 5 di)
        (reg:SI 113 [ D.13902 ])) EACommands.c:582 -1
     (nil))
(call_insn 106 105 107 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PolicySptCheckCondition") [flags 0x41]  <function_decl 0x7f3043fd61b0 PolicySptCheckCondition>) [0 PolicySptCheckCondition S1 A8])
            (const_int 0 [0]))) EACommands.c:582 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 107 106 108 10 (set (reg:SI 114 [ D.13902 ])
        (reg:SI 0 ax)) EACommands.c:582 -1
     (nil))
(insn 108 107 109 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 114 [ D.13902 ])
            (const_int 0 [0]))) EACommands.c:582 -1
     (nil))
(jump_insn 109 108 110 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) EACommands.c:582 -1
     (nil)
 -> 114)
(note 110 109 111 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 11 (set (reg:SI 87 [ D.13898 ])
        (const_int 294 [0x126])) EACommands.c:584 -1
     (nil))
(jump_insn 112 111 113 11 (set (pc)
        (label_ref:DI 197)) EACommands.c:584 654 {jump}
     (nil)
 -> 197)
(barrier 113 112 114)
(code_label 114 113 115 12 58 "" [2 uses])
(note 115 114 116 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 12 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -448 [0xfffffffffffffe40])) [0 session+0 S8 A64])) EACommands.c:588 -1
     (nil))
(insn 117 116 118 12 (set (reg:HI 115 [ D.13901 ])
        (mem/j:HI (plus:DI (reg/f:DI 155)
                (const_int 32 [0x20])) [0 session_9->authHashAlg+0 S2 A64])) EACommands.c:588 -1
     (nil))
(insn 118 117 119 12 (set (reg:SI 116 [ D.13902 ])
        (zero_extend:SI (reg:HI 115 [ D.13901 ]))) EACommands.c:588 -1
     (nil))
(insn 119 118 120 12 (parallel [
            (set (reg:DI 156)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:588 -1
     (nil))
(insn 120 119 121 12 (set (reg:SI 4 si)
        (reg:SI 116 [ D.13902 ])) EACommands.c:588 -1
     (nil))
(insn 121 120 122 12 (set (reg:DI 5 di)
        (reg:DI 156)) EACommands.c:588 -1
     (nil))
(call_insn 122 121 123 12 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:588 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 123 122 124 12 (set (reg:HI 117 [ D.13901 ])
        (reg:HI 0 ax)) EACommands.c:588 -1
     (nil))
(insn 124 123 125 12 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -432 [0xfffffffffffffe50])) [0 argHash.t.size+0 S2 A64])
        (reg:HI 117 [ D.13901 ])) EACommands.c:588 -1
     (nil))
(insn 125 124 126 12 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])) EACommands.c:590 -1
     (nil))
(insn 126 125 127 12 (parallel [
            (set (reg/f:DI 118 [ D.13904 ])
                (plus:DI (reg/f:DI 157)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:590 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])
            (const_int 12 [0xc]))
        (nil)))
(insn 127 126 128 12 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:590 -1
     (nil))
(insn 128 127 129 12 (set (reg:DI 4 si)
        (reg/f:DI 118 [ D.13904 ])) EACommands.c:590 -1
     (nil))
(insn 129 128 130 12 (set (reg:DI 5 di)
        (reg:DI 158)) EACommands.c:590 -1
     (nil))
(call_insn 130 129 131 12 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:590 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 131 130 132 12 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])) EACommands.c:592 -1
     (nil))
(insn 132 131 133 12 (set (reg:HI 119 [ D.13901 ])
        (mem/j:HI (plus:DI (reg/f:DI 159)
                (const_int 62 [0x3e])) [0 in_6(D)->offset+0 S2 A16])) EACommands.c:592 -1
     (nil))
(insn 133 132 134 12 (set (reg:DI 120 [ D.13905 ])
        (zero_extend:DI (reg:HI 119 [ D.13901 ]))) EACommands.c:592 -1
     (nil))
(insn 134 133 135 12 (parallel [
            (set (reg:DI 160)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:592 -1
     (nil))
(insn 135 134 136 12 (set (reg:DI 1 dx)
        (reg:DI 120 [ D.13905 ])) EACommands.c:592 -1
     (nil))
(insn 136 135 137 12 (set (reg:SI 4 si)
        (const_int 2 [0x2])) EACommands.c:592 -1
     (nil))
(insn 137 136 138 12 (set (reg:DI 5 di)
        (reg:DI 160)) EACommands.c:592 -1
     (nil))
(call_insn 138 137 139 12 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:592 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 139 138 140 12 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])) EACommands.c:594 -1
     (nil))
(insn 140 139 141 12 (set (reg:HI 121 [ D.13901 ])
        (mem/j:HI (plus:DI (reg/f:DI 161)
                (const_int 64 [0x40])) [0 in_6(D)->operation+0 S2 A32])) EACommands.c:594 -1
     (nil))
(insn 141 140 142 12 (set (reg:DI 122 [ D.13905 ])
        (zero_extend:DI (reg:HI 121 [ D.13901 ]))) EACommands.c:594 -1
     (nil))
(insn 142 141 143 12 (parallel [
            (set (reg:DI 162)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:594 -1
     (nil))
(insn 143 142 144 12 (set (reg:DI 1 dx)
        (reg:DI 122 [ D.13905 ])) EACommands.c:594 -1
     (nil))
(insn 144 143 145 12 (set (reg:SI 4 si)
        (const_int 2 [0x2])) EACommands.c:594 -1
     (nil))
(insn 145 144 146 12 (set (reg:DI 5 di)
        (reg:DI 162)) EACommands.c:594 -1
     (nil))
(call_insn 146 145 147 12 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:594 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 147 146 148 12 (parallel [
            (set (reg:DI 163)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -432 [0xfffffffffffffe50])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:596 -1
     (nil))
(insn 148 147 149 12 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:596 -1
     (nil))
(insn 149 148 150 12 (set (reg:DI 4 si)
        (reg:DI 163)) EACommands.c:596 -1
     (nil))
(insn 150 149 151 12 (set (reg:DI 5 di)
        (reg:DI 164)) EACommands.c:596 -1
     (nil))
(call_insn 151 150 152 12 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:596 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 152 151 153 12 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -448 [0xfffffffffffffe40])) [0 session+0 S8 A64])) EACommands.c:599 -1
     (nil))
(insn 153 152 154 12 (set (reg:HI 123 [ D.13901 ])
        (mem/j:HI (plus:DI (reg/f:DI 165)
                (const_int 32 [0x20])) [0 session_9->authHashAlg+0 S2 A64])) EACommands.c:599 -1
     (nil))
(insn 154 153 155 12 (set (reg:SI 124 [ D.13902 ])
        (zero_extend:SI (reg:HI 123 [ D.13901 ]))) EACommands.c:599 -1
     (nil))
(insn 155 154 156 12 (parallel [
            (set (reg:DI 166)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:599 -1
     (nil))
(insn 156 155 157 12 (set (reg:SI 4 si)
        (reg:SI 124 [ D.13902 ])) EACommands.c:599 -1
     (nil))
(insn 157 156 158 12 (set (reg:DI 5 di)
        (reg:DI 166)) EACommands.c:599 -1
     (nil))
(call_insn 158 157 159 12 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:599 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 159 158 160 12 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -448 [0xfffffffffffffe40])) [0 session+0 S8 A64])) EACommands.c:601 -1
     (nil))
(insn 160 159 161 12 (parallel [
            (set (reg/f:DI 125 [ D.13904 ])
                (plus:DI (reg/f:DI 167)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:601 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -448 [0xfffffffffffffe40])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 161 160 162 12 (parallel [
            (set (reg:DI 168)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:601 -1
     (nil))
(insn 162 161 163 12 (set (reg:DI 4 si)
        (reg/f:DI 125 [ D.13904 ])) EACommands.c:601 -1
     (nil))
(insn 163 162 164 12 (set (reg:DI 5 di)
        (reg:DI 168)) EACommands.c:601 -1
     (nil))
(call_insn 164 163 165 12 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:601 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 165 164 166 12 (set (reg:DI 126 [ D.13905 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -456 [0xfffffffffffffe38])) [0 commandCode+0 S4 A32]))) EACommands.c:603 -1
     (nil))
(insn 166 165 167 12 (parallel [
            (set (reg:DI 169)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:603 -1
     (nil))
(insn 167 166 168 12 (set (reg:DI 1 dx)
        (reg:DI 126 [ D.13905 ])) EACommands.c:603 -1
     (nil))
(insn 168 167 169 12 (set (reg:SI 4 si)
        (const_int 4 [0x4])) EACommands.c:603 -1
     (nil))
(insn 169 168 170 12 (set (reg:DI 5 di)
        (reg:DI 169)) EACommands.c:603 -1
     (nil))
(call_insn 170 169 171 12 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:603 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 171 170 172 12 (parallel [
            (set (reg:DI 170)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -432 [0xfffffffffffffe50])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:605 -1
     (nil))
(insn 172 171 173 12 (parallel [
            (set (reg:DI 171)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:605 -1
     (nil))
(insn 173 172 174 12 (set (reg:DI 4 si)
        (reg:DI 170)) EACommands.c:605 -1
     (nil))
(insn 174 173 175 12 (set (reg:DI 5 di)
        (reg:DI 171)) EACommands.c:605 -1
     (nil))
(call_insn 175 174 176 12 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:605 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 176 175 177 12 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [0 in+0 S8 A64])) EACommands.c:607 -1
     (nil))
(insn 177 176 178 12 (set (reg:SI 127 [ D.13899 ])
        (mem/j:SI (plus:DI (reg/f:DI 172)
                (const_int 4 [0x4])) [0 in_6(D)->nvIndex+0 S4 A32])) EACommands.c:607 -1
     (nil))
(insn 178 177 179 12 (parallel [
            (set (reg:DI 173)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -368 [0xfffffffffffffe90])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:607 -1
     (nil))
(insn 179 178 180 12 (set (reg:DI 4 si)
        (reg:DI 173)) EACommands.c:607 -1
     (nil))
(insn 180 179 181 12 (set (reg:SI 5 di)
        (reg:SI 127 [ D.13899 ])) EACommands.c:607 -1
     (nil))
(call_insn 181 180 182 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("EntityGetName") [flags 0x41]  <function_decl 0x7f3043ecb0d8 EntityGetName>) [0 EntityGetName S1 A8])
            (const_int 0 [0]))) EACommands.c:607 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 182 181 183 12 (set (reg/f:DI 128 [ D.13906 ])
        (reg:DI 0 ax)) EACommands.c:607 -1
     (nil))
(insn 183 182 184 12 (set (reg/f:DI 129 [ D.13904 ])
        (reg/f:DI 128 [ D.13906 ])) EACommands.c:607 -1
     (nil))
(insn 184 183 185 12 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:607 -1
     (nil))
(insn 185 184 186 12 (set (reg:DI 4 si)
        (reg/f:DI 129 [ D.13904 ])) EACommands.c:607 -1
     (nil))
(insn 186 185 187 12 (set (reg:DI 5 di)
        (reg:DI 174)) EACommands.c:607 -1
     (nil))
(call_insn 187 186 188 12 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:607 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 188 187 189 12 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -448 [0xfffffffffffffe40])) [0 session+0 S8 A64])) EACommands.c:609 -1
     (nil))
(insn 189 188 190 12 (parallel [
            (set (reg/f:DI 130 [ D.13904 ])
                (plus:DI (reg/f:DI 175)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:609 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -448 [0xfffffffffffffe40])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 190 189 191 12 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:609 -1
     (nil))
(insn 191 190 192 12 (set (reg:DI 4 si)
        (reg/f:DI 130 [ D.13904 ])) EACommands.c:609 -1
     (nil))
(insn 192 191 193 12 (set (reg:DI 5 di)
        (reg:DI 176)) EACommands.c:609 -1
     (nil))
(call_insn 193 192 194 12 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:609 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 194 193 197 12 (set (reg:SI 87 [ D.13898 ])
        (const_int 0 [0])) EACommands.c:610 -1
     (nil))
(code_label 197 194 198 14 63 "" [4 uses])
(note 198 197 199 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 199 198 203 14 (set (reg:SI 131 [ <retval> ])
        (reg:SI 87 [ D.13898 ])) -1
     (nil))
(insn 203 199 204 14 (set (reg/i:SI 0 ax)
        (reg:SI 131 [ <retval> ])) EACommands.c:611 -1
     (nil))
(insn 204 203 205 14 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13907+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:611 -1
     (nil))
(jump_insn 205 204 211 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 208)
            (pc))) EACommands.c:611 -1
     (nil)
 -> 208)
(note 211 205 206 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(call_insn 206 211 207 16 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:611 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 207 206 208)
(code_label 208 207 212 17 64 "" [1 uses])
(note 212 208 209 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 209 212 0 17 (use (reg/i:SI 0 ax)) EACommands.c:611 -1
     (nil))

;; Function TPM2_PolicyCounterTimer (TPM2_PolicyCounterTimer, funcdef_no=9, decl_uid=13027, cgraph_uid=9, symbol_order=9)

Partition 5: size 232 align 16
	hashState
Partition 6: size 50 align 16
	argHash
Partition 4: size 32 align 16
	infoData
Partition 3: size 8 align 8
	session_21
Partition 0: size 8 align 8
	pInfoData_4
Partition 1: size 4 align 4
	commandCode_5
Partition 2: size 2 align 2
	infoDataSize_8

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 21 from 14 to 15.
Redirecting jump 37 from 14 to 15.
Redirecting jump 63 from 14 to 15.
Redirecting jump 92 from 14 to 15.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.
Removing jump 168.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:621 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13918+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:621 -1
     (nil))
(insn 7 4 8 2 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:624 -1
     (nil))
(insn 8 7 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -368 [0xfffffffffffffe90])) [0 pInfoData+0 S8 A64])
        (reg:DI 123)) EACommands.c:624 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -372 [0xfffffffffffffe8c])) [0 commandCode+0 S4 A32])
        (const_int 365 [0x16d])) EACommands.c:626 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:631 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 124)) EACommands.c:631 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TimeGetMarshaled") [flags 0x41]  <function_decl 0x7f3043f79360 TimeGetMarshaled>) [0 TimeGetMarshaled S1 A8])
            (const_int 0 [0]))) EACommands.c:631 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:HI 125)
        (reg:HI 0 ax)) EACommands.c:631 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -374 [0xfffffffffffffe8a])) [0 infoDataSize+0 S2 A16])
        (reg:HI 125)) EACommands.c:631 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:636 -1
     (nil))
(insn 16 15 17 2 (set (reg:HI 88 [ D.13909 ])
        (mem/j:HI (plus:DI (reg/f:DI 126)
                (const_int 54 [0x36])) [0 in_9(D)->offset+0 S2 A16])) EACommands.c:636 -1
     (nil))
(insn 17 16 18 2 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 88 [ D.13909 ])
            (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -374 [0xfffffffffffffe8a])) [0 infoDataSize+0 S2 A16]))) EACommands.c:636 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) EACommands.c:636 -1
     (nil)
 -> 23)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg:SI 87 [ D.13908 ])
        (const_int 708 [0x2c4])) EACommands.c:637 -1
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (label_ref:DI 165)) EACommands.c:637 654 {jump}
     (nil)
 -> 165)
(barrier 22 21 23)
(code_label 23 22 24 5 66 "" [1 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:638 -1
     (nil))
(insn 26 25 27 5 (set (reg:HI 89 [ D.13909 ])
        (mem/j:HI (plus:DI (reg/f:DI 127)
                (const_int 54 [0x36])) [0 in_9(D)->offset+0 S2 A16])) EACommands.c:638 -1
     (nil))
(insn 27 26 28 5 (set (reg:SI 90 [ D.13910 ])
        (zero_extend:SI (reg:HI 89 [ D.13909 ]))) EACommands.c:638 -1
     (nil))
(insn 28 27 29 5 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:638 -1
     (nil))
(insn 29 28 30 5 (set (reg:HI 91 [ D.13909 ])
        (mem/j:HI (plus:DI (reg/f:DI 128)
                (const_int 4 [0x4])) [0 in_9(D)->operandB.t.size+0 S2 A32])) EACommands.c:638 -1
     (nil))
(insn 30 29 31 5 (set (reg:SI 92 [ D.13910 ])
        (zero_extend:SI (reg:HI 91 [ D.13909 ]))) EACommands.c:638 -1
     (nil))
(insn 31 30 32 5 (parallel [
            (set (reg:SI 93 [ D.13910 ])
                (plus:SI (reg:SI 90 [ D.13910 ])
                    (reg:SI 92 [ D.13910 ])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:638 -1
     (nil))
(insn 32 31 33 5 (set (reg:SI 94 [ D.13910 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -374 [0xfffffffffffffe8a])) [0 infoDataSize+0 S2 A16]))) EACommands.c:638 -1
     (nil))
(insn 33 32 34 5 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 93 [ D.13910 ])
            (reg:SI 94 [ D.13910 ]))) EACommands.c:638 -1
     (nil))
(jump_insn 34 33 35 5 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) EACommands.c:638 -1
     (nil)
 -> 39)
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg:SI 87 [ D.13908 ])
        (const_int 141 [0x8d])) EACommands.c:639 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (label_ref:DI 165)) EACommands.c:639 654 {jump}
     (nil)
 -> 165)
(barrier 38 37 39)
(code_label 39 38 40 7 68 "" [1 uses])
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:641 -1
     (nil))
(insn 42 41 43 7 (set (reg:SI 95 [ D.13910 ])
        (mem/j:SI (reg/f:DI 129) [0 in_9(D)->policySession+0 S4 A32])) EACommands.c:641 -1
     (nil))
(insn 43 42 44 7 (set (reg:SI 5 di)
        (reg:SI 95 [ D.13910 ])) EACommands.c:641 -1
     (nil))
(call_insn 44 43 45 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:641 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 45 44 46 7 (set (reg:DI 130)
        (reg:DI 0 ax)) EACommands.c:641 -1
     (nil))
(insn 46 45 47 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -360 [0xfffffffffffffe98])) [0 session+0 S8 A64])
        (reg:DI 130)) EACommands.c:641 -1
     (nil))
(insn 47 46 48 7 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -360 [0xfffffffffffffe98])) [0 session+0 S8 A64])) EACommands.c:643 -1
     (nil))
(insn 48 47 49 7 (set (reg:QI 96 [ D.13911 ])
        (mem:QI (reg/f:DI 131) [0 *session_21+0 S1 A64])) EACommands.c:643 -1
     (nil))
(insn 49 48 50 7 (parallel [
            (set (reg:QI 97 [ D.13911 ])
                (and:QI (reg:QI 96 [ D.13911 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:643 -1
     (nil))
(insn 50 49 51 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ D.13911 ])
            (const_int 0 [0]))) EACommands.c:643 -1
     (nil))
(jump_insn 51 50 52 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) EACommands.c:643 -1
     (nil)
 -> 94)
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:648 -1
     (nil))
(insn 54 53 55 8 (set (reg:HI 98 [ D.13909 ])
        (mem/j:HI (plus:DI (reg/f:DI 132)
                (const_int 54 [0x36])) [0 in_9(D)->offset+0 S2 A16])) EACommands.c:648 -1
     (nil))
(insn 55 54 56 8 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 98 [ D.13909 ])
            (const_int 15 [0xf]))) EACommands.c:648 -1
     (nil))
(jump_insn 56 55 57 8 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) EACommands.c:648 -1
     (nil)
 -> 65)
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 9 (set (reg:SI 99 [ D.13910 ])
        (mem/c:SI (symbol_ref:DI ("g_NvStatus") [flags 0x40]  <var_decl 0x7f3043e65cf0 g_NvStatus>) [0 g_NvStatus+0 S4 A32])) EACommands.c:653 -1
     (nil))
(insn 59 58 60 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.13910 ])
            (const_int 0 [0]))) EACommands.c:653 -1
     (nil))
(jump_insn 60 59 61 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) EACommands.c:653 -1
     (nil)
 -> 65)
(note 61 60 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 10 (set (reg:SI 87 [ D.13908 ])
        (mem/c:SI (symbol_ref:DI ("g_NvStatus") [flags 0x40]  <var_decl 0x7f3043e65cf0 g_NvStatus>) [0 g_NvStatus+0 S4 A32])) EACommands.c:653 -1
     (nil))
(jump_insn 63 62 64 10 (set (pc)
        (label_ref:DI 165)) EACommands.c:653 654 {jump}
     (nil)
 -> 165)
(barrier 64 63 65)
(code_label 65 64 66 11 70 "" [2 uses])
(note 66 65 67 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 11 (parallel [
            (set (reg:DI 133)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:656 -1
     (nil))
(insn 68 67 69 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -368 [0xfffffffffffffe90])) [0 pInfoData+0 S8 A64])
        (reg:DI 133)) EACommands.c:656 -1
     (nil))
(insn 69 68 70 11 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:659 -1
     (nil))
(insn 70 69 71 11 (set (reg:HI 100 [ D.13909 ])
        (mem/j:HI (plus:DI (reg/f:DI 134)
                (const_int 4 [0x4])) [0 in_9(D)->operandB.t.size+0 S2 A32])) EACommands.c:659 -1
     (nil))
(insn 71 70 72 11 (set (reg:SI 101 [ D.13912 ])
        (zero_extend:SI (reg:HI 100 [ D.13909 ]))) EACommands.c:658 -1
     (nil))
(insn 72 71 73 11 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:659 -1
     (nil))
(insn 73 72 74 11 (parallel [
            (set (reg/f:DI 102 [ D.13913 ])
                (plus:DI (reg/f:DI 135)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:659 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])
            (const_int 6 [0x6]))
        (nil)))
(insn 74 73 75 11 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:658 -1
     (nil))
(insn 75 74 76 11 (set (reg:HI 103 [ D.13909 ])
        (mem/j:HI (plus:DI (reg/f:DI 136)
                (const_int 54 [0x36])) [0 in_9(D)->offset+0 S2 A16])) EACommands.c:658 -1
     (nil))
(insn 76 75 77 11 (set (reg:DI 104 [ D.13914 ])
        (zero_extend:DI (reg:HI 103 [ D.13909 ]))) EACommands.c:658 -1
     (nil))
(insn 77 76 78 11 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -368 [0xfffffffffffffe90])) [0 pInfoData+0 S8 A64])) EACommands.c:658 -1
     (nil))
(insn 78 77 79 11 (parallel [
            (set (reg/f:DI 105 [ D.13915 ])
                (plus:DI (reg:DI 104 [ D.13914 ])
                    (reg/f:DI 137)))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:658 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -368 [0xfffffffffffffe90])) [0 pInfoData+0 S8 A64])
            (reg:DI 104 [ D.13914 ]))
        (nil)))
(insn 79 78 80 11 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:658 -1
     (nil))
(insn 80 79 81 11 (set (reg:HI 106 [ D.13909 ])
        (mem/j:HI (plus:DI (reg/f:DI 138)
                (const_int 56 [0x38])) [0 in_9(D)->operation+0 S2 A32])) EACommands.c:658 -1
     (nil))
(insn 81 80 82 11 (set (reg:SI 107 [ D.13912 ])
        (zero_extend:SI (reg:HI 106 [ D.13909 ]))) EACommands.c:658 -1
     (nil))
(insn 82 81 83 11 (set (reg:SI 2 cx)
        (reg:SI 101 [ D.13912 ])) EACommands.c:658 -1
     (nil))
(insn 83 82 84 11 (set (reg:DI 1 dx)
        (reg/f:DI 102 [ D.13913 ])) EACommands.c:658 -1
     (nil))
(insn 84 83 85 11 (set (reg:DI 4 si)
        (reg/f:DI 105 [ D.13915 ])) EACommands.c:658 -1
     (nil))
(insn 85 84 86 11 (set (reg:SI 5 di)
        (reg:SI 107 [ D.13912 ])) EACommands.c:658 -1
     (nil))
(call_insn 86 85 87 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PolicySptCheckCondition") [flags 0x41]  <function_decl 0x7f3043fd61b0 PolicySptCheckCondition>) [0 PolicySptCheckCondition S1 A8])
            (const_int 0 [0]))) EACommands.c:658 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 87 86 88 11 (set (reg:SI 108 [ D.13912 ])
        (reg:SI 0 ax)) EACommands.c:658 -1
     (nil))
(insn 88 87 89 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ D.13912 ])
            (const_int 0 [0]))) EACommands.c:658 -1
     (nil))
(jump_insn 89 88 90 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) EACommands.c:658 -1
     (nil)
 -> 94)
(note 90 89 91 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 12 (set (reg:SI 87 [ D.13908 ])
        (const_int 294 [0x126])) EACommands.c:660 -1
     (nil))
(jump_insn 92 91 93 12 (set (pc)
        (label_ref:DI 165)) EACommands.c:660 654 {jump}
     (nil)
 -> 165)
(barrier 93 92 94)
(code_label 94 93 95 13 69 "" [2 uses])
(note 95 94 96 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 13 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -360 [0xfffffffffffffe98])) [0 session+0 S8 A64])) EACommands.c:664 -1
     (nil))
(insn 97 96 98 13 (set (reg:HI 109 [ D.13909 ])
        (mem/j:HI (plus:DI (reg/f:DI 139)
                (const_int 32 [0x20])) [0 session_21->authHashAlg+0 S2 A64])) EACommands.c:664 -1
     (nil))
(insn 98 97 99 13 (set (reg:SI 110 [ D.13912 ])
        (zero_extend:SI (reg:HI 109 [ D.13909 ]))) EACommands.c:664 -1
     (nil))
(insn 99 98 100 13 (parallel [
            (set (reg:DI 140)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:664 -1
     (nil))
(insn 100 99 101 13 (set (reg:SI 4 si)
        (reg:SI 110 [ D.13912 ])) EACommands.c:664 -1
     (nil))
(insn 101 100 102 13 (set (reg:DI 5 di)
        (reg:DI 140)) EACommands.c:664 -1
     (nil))
(call_insn 102 101 103 13 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:664 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 103 102 104 13 (set (reg:HI 111 [ D.13909 ])
        (reg:HI 0 ax)) EACommands.c:664 -1
     (nil))
(insn 104 103 105 13 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -352 [0xfffffffffffffea0])) [0 argHash.t.size+0 S2 A64])
        (reg:HI 111 [ D.13909 ])) EACommands.c:664 -1
     (nil))
(insn 105 104 106 13 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:666 -1
     (nil))
(insn 106 105 107 13 (parallel [
            (set (reg/f:DI 112 [ D.13916 ])
                (plus:DI (reg/f:DI 141)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:666 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 107 106 108 13 (parallel [
            (set (reg:DI 142)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:666 -1
     (nil))
(insn 108 107 109 13 (set (reg:DI 4 si)
        (reg/f:DI 112 [ D.13916 ])) EACommands.c:666 -1
     (nil))
(insn 109 108 110 13 (set (reg:DI 5 di)
        (reg:DI 142)) EACommands.c:666 -1
     (nil))
(call_insn 110 109 111 13 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:666 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 111 110 112 13 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:668 -1
     (nil))
(insn 112 111 113 13 (set (reg:HI 113 [ D.13909 ])
        (mem/j:HI (plus:DI (reg/f:DI 143)
                (const_int 54 [0x36])) [0 in_9(D)->offset+0 S2 A16])) EACommands.c:668 -1
     (nil))
(insn 113 112 114 13 (set (reg:DI 114 [ D.13917 ])
        (zero_extend:DI (reg:HI 113 [ D.13909 ]))) EACommands.c:668 -1
     (nil))
(insn 114 113 115 13 (parallel [
            (set (reg:DI 144)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:668 -1
     (nil))
(insn 115 114 116 13 (set (reg:DI 1 dx)
        (reg:DI 114 [ D.13917 ])) EACommands.c:668 -1
     (nil))
(insn 116 115 117 13 (set (reg:SI 4 si)
        (const_int 2 [0x2])) EACommands.c:668 -1
     (nil))
(insn 117 116 118 13 (set (reg:DI 5 di)
        (reg:DI 144)) EACommands.c:668 -1
     (nil))
(call_insn 118 117 119 13 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:668 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 119 118 120 13 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:670 -1
     (nil))
(insn 120 119 121 13 (set (reg:HI 115 [ D.13909 ])
        (mem/j:HI (plus:DI (reg/f:DI 145)
                (const_int 56 [0x38])) [0 in_9(D)->operation+0 S2 A32])) EACommands.c:670 -1
     (nil))
(insn 121 120 122 13 (set (reg:DI 116 [ D.13917 ])
        (zero_extend:DI (reg:HI 115 [ D.13909 ]))) EACommands.c:670 -1
     (nil))
(insn 122 121 123 13 (parallel [
            (set (reg:DI 146)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:670 -1
     (nil))
(insn 123 122 124 13 (set (reg:DI 1 dx)
        (reg:DI 116 [ D.13917 ])) EACommands.c:670 -1
     (nil))
(insn 124 123 125 13 (set (reg:SI 4 si)
        (const_int 2 [0x2])) EACommands.c:670 -1
     (nil))
(insn 125 124 126 13 (set (reg:DI 5 di)
        (reg:DI 146)) EACommands.c:670 -1
     (nil))
(call_insn 126 125 127 13 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:670 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 127 126 128 13 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -352 [0xfffffffffffffea0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:672 -1
     (nil))
(insn 128 127 129 13 (parallel [
            (set (reg:DI 148)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:672 -1
     (nil))
(insn 129 128 130 13 (set (reg:DI 4 si)
        (reg:DI 147)) EACommands.c:672 -1
     (nil))
(insn 130 129 131 13 (set (reg:DI 5 di)
        (reg:DI 148)) EACommands.c:672 -1
     (nil))
(call_insn 131 130 132 13 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:672 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 132 131 133 13 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -360 [0xfffffffffffffe98])) [0 session+0 S8 A64])) EACommands.c:675 -1
     (nil))
(insn 133 132 134 13 (set (reg:HI 117 [ D.13909 ])
        (mem/j:HI (plus:DI (reg/f:DI 149)
                (const_int 32 [0x20])) [0 session_21->authHashAlg+0 S2 A64])) EACommands.c:675 -1
     (nil))
(insn 134 133 135 13 (set (reg:SI 118 [ D.13912 ])
        (zero_extend:SI (reg:HI 117 [ D.13909 ]))) EACommands.c:675 -1
     (nil))
(insn 135 134 136 13 (parallel [
            (set (reg:DI 150)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:675 -1
     (nil))
(insn 136 135 137 13 (set (reg:SI 4 si)
        (reg:SI 118 [ D.13912 ])) EACommands.c:675 -1
     (nil))
(insn 137 136 138 13 (set (reg:DI 5 di)
        (reg:DI 150)) EACommands.c:675 -1
     (nil))
(call_insn 138 137 139 13 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:675 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 139 138 140 13 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -360 [0xfffffffffffffe98])) [0 session+0 S8 A64])) EACommands.c:677 -1
     (nil))
(insn 140 139 141 13 (parallel [
            (set (reg/f:DI 119 [ D.13916 ])
                (plus:DI (reg/f:DI 151)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:677 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -360 [0xfffffffffffffe98])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 141 140 142 13 (parallel [
            (set (reg:DI 152)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:677 -1
     (nil))
(insn 142 141 143 13 (set (reg:DI 4 si)
        (reg/f:DI 119 [ D.13916 ])) EACommands.c:677 -1
     (nil))
(insn 143 142 144 13 (set (reg:DI 5 di)
        (reg:DI 152)) EACommands.c:677 -1
     (nil))
(call_insn 144 143 145 13 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:677 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 145 144 146 13 (set (reg:DI 120 [ D.13917 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -372 [0xfffffffffffffe8c])) [0 commandCode+0 S4 A32]))) EACommands.c:679 -1
     (nil))
(insn 146 145 147 13 (parallel [
            (set (reg:DI 153)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:679 -1
     (nil))
(insn 147 146 148 13 (set (reg:DI 1 dx)
        (reg:DI 120 [ D.13917 ])) EACommands.c:679 -1
     (nil))
(insn 148 147 149 13 (set (reg:SI 4 si)
        (const_int 4 [0x4])) EACommands.c:679 -1
     (nil))
(insn 149 148 150 13 (set (reg:DI 5 di)
        (reg:DI 153)) EACommands.c:679 -1
     (nil))
(call_insn 150 149 151 13 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:679 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 151 150 152 13 (parallel [
            (set (reg:DI 154)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -352 [0xfffffffffffffea0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:681 -1
     (nil))
(insn 152 151 153 13 (parallel [
            (set (reg:DI 155)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:681 -1
     (nil))
(insn 153 152 154 13 (set (reg:DI 4 si)
        (reg:DI 154)) EACommands.c:681 -1
     (nil))
(insn 154 153 155 13 (set (reg:DI 5 di)
        (reg:DI 155)) EACommands.c:681 -1
     (nil))
(call_insn 155 154 156 13 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:681 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 156 155 157 13 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -360 [0xfffffffffffffe98])) [0 session+0 S8 A64])) EACommands.c:683 -1
     (nil))
(insn 157 156 158 13 (parallel [
            (set (reg/f:DI 121 [ D.13916 ])
                (plus:DI (reg/f:DI 156)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:683 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -360 [0xfffffffffffffe98])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 158 157 159 13 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:683 -1
     (nil))
(insn 159 158 160 13 (set (reg:DI 4 si)
        (reg/f:DI 121 [ D.13916 ])) EACommands.c:683 -1
     (nil))
(insn 160 159 161 13 (set (reg:DI 5 di)
        (reg:DI 157)) EACommands.c:683 -1
     (nil))
(call_insn 161 160 162 13 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:683 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 162 161 165 13 (set (reg:SI 87 [ D.13908 ])
        (const_int 0 [0])) EACommands.c:684 -1
     (nil))
(code_label 165 162 166 15 71 "" [4 uses])
(note 166 165 167 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 171 15 (set (reg:SI 122 [ <retval> ])
        (reg:SI 87 [ D.13908 ])) -1
     (nil))
(insn 171 167 172 15 (set (reg/i:SI 0 ax)
        (reg:SI 122 [ <retval> ])) EACommands.c:685 -1
     (nil))
(insn 172 171 173 15 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13918+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:685 -1
     (nil))
(jump_insn 173 172 179 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 176)
            (pc))) EACommands.c:685 -1
     (nil)
 -> 176)
(note 179 173 174 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(call_insn 174 179 175 17 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:685 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 175 174 176)
(code_label 176 175 180 18 72 "" [1 uses])
(note 180 176 177 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 177 180 0 18 (use (reg/i:SI 0 ax)) EACommands.c:685 -1
     (nil))

;; Function TPM2_PolicyCommandCode (TPM2_PolicyCommandCode, funcdef_no=10, decl_uid=13043, cgraph_uid=10, symbol_order=10)

Partition 2: size 232 align 16
	hashState
Partition 1: size 8 align 8
	session_8
Partition 0: size 4 align 4
	commandCode_3

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 27 from 9 to 10.
Redirecting jump 40 from 9 to 10.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 87.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:696 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13925+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:696 -1
     (nil))
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32])
        (const_int 364 [0x16c])) EACommands.c:698 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:702 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ D.13920 ])
        (mem/j:SI (reg/f:DI 103) [0 in_5(D)->policySession+0 S4 A32])) EACommands.c:702 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13920 ])) EACommands.c:702 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:702 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 104)
        (reg:DI 0 ax)) EACommands.c:702 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
        (reg:DI 104)) EACommands.c:702 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:703 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 89 [ D.13920 ])
        (mem/j:SI (plus:DI (reg/f:DI 105)
                (const_int 28 [0x1c])) [0 session_8->commandCode+0 S4 A32])) EACommands.c:703 -1
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.13920 ])
            (const_int 0 [0]))) EACommands.c:703 -1
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) EACommands.c:703 -1
     (nil)
 -> 29)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:703 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 90 [ D.13920 ])
        (mem/j:SI (plus:DI (reg/f:DI 106)
                (const_int 28 [0x1c])) [0 session_8->commandCode+0 S4 A32])) EACommands.c:703 -1
     (nil))
(insn 21 20 22 4 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:703 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 91 [ D.13920 ])
        (mem/j:SI (plus:DI (reg/f:DI 107)
                (const_int 4 [0x4])) [0 in_5(D)->code+0 S4 A32])) EACommands.c:703 -1
     (nil))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.13920 ])
            (reg:SI 91 [ D.13920 ]))) EACommands.c:703 -1
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) EACommands.c:703 -1
     (nil)
 -> 29)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:SI 87 [ D.13919 ])
        (const_int 452 [0x1c4])) EACommands.c:704 -1
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (label_ref:DI 84)) EACommands.c:704 654 {jump}
     (nil)
 -> 84)
(barrier 28 27 29)
(code_label 29 28 30 6 74 "" [2 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:705 -1
     (nil))
(insn 32 31 33 6 (set (reg:SI 92 [ D.13920 ])
        (mem/j:SI (plus:DI (reg/f:DI 108)
                (const_int 4 [0x4])) [0 in_5(D)->code+0 S4 A32])) EACommands.c:705 -1
     (nil))
(insn 33 32 34 6 (set (reg:SI 5 di)
        (reg:SI 92 [ D.13920 ])) EACommands.c:705 -1
     (nil))
(call_insn 34 33 35 6 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CommandCodeToCommandIndex") [flags 0x41]  <function_decl 0x7f3043ee7a20 CommandCodeToCommandIndex>) [0 CommandCodeToCommandIndex S1 A8])
            (const_int 0 [0]))) EACommands.c:705 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 35 34 36 6 (set (reg:HI 93 [ D.13921 ])
        (reg:HI 0 ax)) EACommands.c:705 -1
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 93 [ D.13921 ])
            (const_int -1 [0xffffffffffffffff]))) EACommands.c:705 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) EACommands.c:705 -1
     (nil)
 -> 42)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (set (reg:SI 87 [ D.13919 ])
        (const_int 484 [0x1e4])) EACommands.c:706 -1
     (nil))
(jump_insn 40 39 41 7 (set (pc)
        (label_ref:DI 84)) EACommands.c:706 654 {jump}
     (nil)
 -> 84)
(barrier 41 40 42)
(code_label 42 41 43 8 76 "" [1 uses])
(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 8 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:711 -1
     (nil))
(insn 45 44 46 8 (set (reg:HI 94 [ D.13921 ])
        (mem/j:HI (plus:DI (reg/f:DI 109)
                (const_int 32 [0x20])) [0 session_8->authHashAlg+0 S2 A64])) EACommands.c:711 -1
     (nil))
(insn 46 45 47 8 (set (reg:SI 95 [ D.13922 ])
        (zero_extend:SI (reg:HI 94 [ D.13921 ]))) EACommands.c:711 -1
     (nil))
(insn 47 46 48 8 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:711 -1
     (nil))
(insn 48 47 49 8 (set (reg:SI 4 si)
        (reg:SI 95 [ D.13922 ])) EACommands.c:711 -1
     (nil))
(insn 49 48 50 8 (set (reg:DI 5 di)
        (reg:DI 110)) EACommands.c:711 -1
     (nil))
(call_insn 50 49 51 8 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:711 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 51 50 52 8 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:713 -1
     (nil))
(insn 52 51 53 8 (parallel [
            (set (reg/f:DI 96 [ D.13923 ])
                (plus:DI (reg/f:DI 111)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:713 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 53 52 54 8 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:713 -1
     (nil))
(insn 54 53 55 8 (set (reg:DI 4 si)
        (reg/f:DI 96 [ D.13923 ])) EACommands.c:713 -1
     (nil))
(insn 55 54 56 8 (set (reg:DI 5 di)
        (reg:DI 112)) EACommands.c:713 -1
     (nil))
(call_insn 56 55 57 8 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:713 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 57 56 58 8 (set (reg:DI 97 [ D.13924 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32]))) EACommands.c:715 -1
     (nil))
(insn 58 57 59 8 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:715 -1
     (nil))
(insn 59 58 60 8 (set (reg:DI 1 dx)
        (reg:DI 97 [ D.13924 ])) EACommands.c:715 -1
     (nil))
(insn 60 59 61 8 (set (reg:SI 4 si)
        (const_int 4 [0x4])) EACommands.c:715 -1
     (nil))
(insn 61 60 62 8 (set (reg:DI 5 di)
        (reg:DI 113)) EACommands.c:715 -1
     (nil))
(call_insn 62 61 63 8 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:715 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 63 62 64 8 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:717 -1
     (nil))
(insn 64 63 65 8 (set (reg:SI 98 [ D.13920 ])
        (mem/j:SI (plus:DI (reg/f:DI 114)
                (const_int 4 [0x4])) [0 in_5(D)->code+0 S4 A32])) EACommands.c:717 -1
     (nil))
(insn 65 64 66 8 (set (reg:DI 99 [ D.13924 ])
        (zero_extend:DI (reg:SI 98 [ D.13920 ]))) EACommands.c:717 -1
     (nil))
(insn 66 65 67 8 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:717 -1
     (nil))
(insn 67 66 68 8 (set (reg:DI 1 dx)
        (reg:DI 99 [ D.13924 ])) EACommands.c:717 -1
     (nil))
(insn 68 67 69 8 (set (reg:SI 4 si)
        (const_int 4 [0x4])) EACommands.c:717 -1
     (nil))
(insn 69 68 70 8 (set (reg:DI 5 di)
        (reg:DI 115)) EACommands.c:717 -1
     (nil))
(call_insn 70 69 71 8 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:717 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 71 70 72 8 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:719 -1
     (nil))
(insn 72 71 73 8 (parallel [
            (set (reg/f:DI 100 [ D.13923 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:719 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 73 72 74 8 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:719 -1
     (nil))
(insn 74 73 75 8 (set (reg:DI 4 si)
        (reg/f:DI 100 [ D.13923 ])) EACommands.c:719 -1
     (nil))
(insn 75 74 76 8 (set (reg:DI 5 di)
        (reg:DI 117)) EACommands.c:719 -1
     (nil))
(call_insn 76 75 77 8 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:719 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 77 76 78 8 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:721 -1
     (nil))
(insn 78 77 79 8 (set (reg:SI 101 [ D.13920 ])
        (mem/j:SI (plus:DI (reg/f:DI 118)
                (const_int 4 [0x4])) [0 in_5(D)->code+0 S4 A32])) EACommands.c:721 -1
     (nil))
(insn 79 78 80 8 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:721 -1
     (nil))
(insn 80 79 81 8 (set (mem/j:SI (plus:DI (reg/f:DI 119)
                (const_int 28 [0x1c])) [0 session_8->commandCode+0 S4 A32])
        (reg:SI 101 [ D.13920 ])) EACommands.c:721 -1
     (nil))
(insn 81 80 84 8 (set (reg:SI 87 [ D.13919 ])
        (const_int 0 [0])) EACommands.c:722 -1
     (nil))
(code_label 84 81 85 10 77 "" [2 uses])
(note 85 84 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 90 10 (set (reg:SI 102 [ <retval> ])
        (reg:SI 87 [ D.13919 ])) -1
     (nil))
(insn 90 86 91 10 (set (reg/i:SI 0 ax)
        (reg:SI 102 [ <retval> ])) EACommands.c:723 -1
     (nil))
(insn 91 90 92 10 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13925+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:723 -1
     (nil))
(jump_insn 92 91 98 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) EACommands.c:723 -1
     (nil)
 -> 95)
(note 98 92 93 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 93 98 94 12 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:723 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 94 93 95)
(code_label 95 94 99 13 78 "" [1 uses])
(note 99 95 96 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 96 99 0 13 (use (reg/i:SI 0 ax)) EACommands.c:723 -1
     (nil))

;; Function TPM2_PolicyPhysicalPresence (TPM2_PolicyPhysicalPresence, funcdef_no=11, decl_uid=13054, cgraph_uid=11, symbol_order=11)

Partition 2: size 232 align 16
	hashState
Partition 1: size 8 align 8
	session_6
Partition 0: size 4 align 4
	commandCode_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 49.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:732 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13932+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:732 -1
     (nil))
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32])
        (const_int 391 [0x187])) EACommands.c:734 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:738 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 87 [ D.13926 ])
        (mem/j:SI (reg/f:DI 95) [0 in_3(D)->policySession+0 S4 A32])) EACommands.c:738 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 87 [ D.13926 ])) EACommands.c:738 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:738 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 96)
        (reg:DI 0 ax)) EACommands.c:738 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
        (reg:DI 96)) EACommands.c:738 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:742 -1
     (nil))
(insn 15 14 16 2 (set (reg:HI 88 [ D.13927 ])
        (mem/j:HI (plus:DI (reg/f:DI 97)
                (const_int 32 [0x20])) [0 session_6->authHashAlg+0 S2 A64])) EACommands.c:742 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 89 [ D.13928 ])
        (zero_extend:SI (reg:HI 88 [ D.13927 ]))) EACommands.c:742 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:742 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 4 si)
        (reg:SI 89 [ D.13928 ])) EACommands.c:742 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg:DI 98)) EACommands.c:742 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:742 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 21 20 22 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:744 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg/f:DI 90 [ D.13929 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:744 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 23 22 24 2 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:744 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.13929 ])) EACommands.c:744 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg:DI 100)) EACommands.c:744 -1
     (nil))
(call_insn 26 25 27 2 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:744 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 27 26 28 2 (set (reg:DI 91 [ D.13930 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32]))) EACommands.c:746 -1
     (nil))
(insn 28 27 29 2 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:746 -1
     (nil))
(insn 29 28 30 2 (set (reg:DI 1 dx)
        (reg:DI 91 [ D.13930 ])) EACommands.c:746 -1
     (nil))
(insn 30 29 31 2 (set (reg:SI 4 si)
        (const_int 4 [0x4])) EACommands.c:746 -1
     (nil))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (reg:DI 101)) EACommands.c:746 -1
     (nil))
(call_insn 32 31 33 2 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:746 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 33 32 34 2 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:748 -1
     (nil))
(insn 34 33 35 2 (parallel [
            (set (reg/f:DI 92 [ D.13929 ])
                (plus:DI (reg/f:DI 102)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:748 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 35 34 36 2 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:748 -1
     (nil))
(insn 36 35 37 2 (set (reg:DI 4 si)
        (reg/f:DI 92 [ D.13929 ])) EACommands.c:748 -1
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg:DI 103)) EACommands.c:748 -1
     (nil))
(call_insn 38 37 39 2 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:748 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 39 38 42 2 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:750 -1
     (nil))
(insn 42 39 43 2 (set (reg:QI 107)
        (mem/j:QI (reg/f:DI 104) [0 session_6->attributes.isPPRequired+0 S1 A64])) EACommands.c:750 -1
     (nil))
(insn 43 42 44 2 (parallel [
            (set (reg:QI 108)
                (ior:QI (reg:QI 107)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:750 -1
     (nil))
(insn 44 43 45 2 (set (mem/j:QI (reg/f:DI 104) [0 session_6->attributes.isPPRequired+0 S1 A64])
        (reg:QI 108)) EACommands.c:750 -1
     (nil))
(insn 45 44 48 2 (set (reg:SI 93 [ D.13931 ])
        (const_int 0 [0])) EACommands.c:751 -1
     (nil))
(insn 48 45 52 2 (set (reg:SI 94 [ <retval> ])
        (reg:SI 93 [ D.13931 ])) EACommands.c:751 -1
     (nil))
(insn 52 48 53 2 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) EACommands.c:752 -1
     (nil))
(insn 53 52 54 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13932+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:752 -1
     (nil))
(jump_insn 54 53 60 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) EACommands.c:752 -1
     (nil)
 -> 57)
(note 60 54 55 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 55 60 56 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:752 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 56 55 57)
(code_label 57 56 61 7 81 "" [1 uses])
(note 61 57 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 58 61 0 7 (use (reg/i:SI 0 ax)) EACommands.c:752 -1
     (nil))

;; Function TPM2_PolicyCpHash (TPM2_PolicyCpHash, funcdef_no=12, decl_uid=13066, cgraph_uid=12, symbol_order=12)

Partition 2: size 232 align 16
	hashState
Partition 1: size 8 align 8
	session_10
Partition 0: size 4 align 4
	commandCode_5

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 26 from 10 to 11.
Redirecting jump 54 from 10 to 11.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Removing jump 117.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:761 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13940+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:761 -1
     (nil))
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32])
        (const_int 366 [0x16e])) EACommands.c:763 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:767 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ D.13934 ])
        (mem/j:SI (reg/f:DI 106) [0 in_7(D)->policySession+0 S4 A32])) EACommands.c:767 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13934 ])) EACommands.c:767 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:767 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 107)
        (reg:DI 0 ax)) EACommands.c:767 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
        (reg:DI 107)) EACommands.c:767 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:771 -1
     (nil))
(insn 15 14 16 2 (set (reg:HI 89 [ D.13935 ])
        (mem/j:HI (plus:DI (reg/f:DI 108)
                (const_int 4 [0x4])) [0 in_7(D)->cpHashA.t.size+0 S2 A32])) EACommands.c:771 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:771 -1
     (nil))
(insn 17 16 18 2 (set (reg:HI 90 [ D.13935 ])
        (mem/j:HI (plus:DI (reg/f:DI 109)
                (const_int 32 [0x20])) [0 session_10->authHashAlg+0 S2 A64])) EACommands.c:771 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 91 [ D.13936 ])
        (zero_extend:SI (reg:HI 90 [ D.13935 ]))) EACommands.c:771 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 5 di)
        (reg:SI 91 [ D.13936 ])) EACommands.c:771 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashGetDigestSize") [flags 0x41]  <function_decl 0x7f3043f9ce58 CryptHashGetDigestSize>) [0 CryptHashGetDigestSize S1 A8])
            (const_int 0 [0]))) EACommands.c:771 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:HI 92 [ D.13935 ])
        (reg:HI 0 ax)) EACommands.c:771 -1
     (nil))
(insn 22 21 23 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 89 [ D.13935 ])
            (reg:HI 92 [ D.13935 ]))) EACommands.c:771 -1
     (nil))
(jump_insn 23 22 24 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) EACommands.c:771 -1
     (nil)
 -> 28)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:SI 87 [ D.13933 ])
        (const_int 469 [0x1d5])) EACommands.c:772 -1
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (label_ref:DI 114)) EACommands.c:772 654 {jump}
     (nil)
 -> 114)
(barrier 27 26 28)
(code_label 28 27 29 5 83 "" [1 uses])
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:775 -1
     (nil))
(insn 31 30 32 5 (set (reg:HI 93 [ D.13935 ])
        (mem/j:HI (plus:DI (reg/f:DI 110)
                (const_int 142 [0x8e])) [0 session_10->u1.cpHash.t.size+0 S2 A16])) EACommands.c:775 -1
     (nil))
(insn 32 31 33 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 93 [ D.13935 ])
            (const_int 0 [0]))) EACommands.c:775 -1
     (nil))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) EACommands.c:775 -1
     (nil)
 -> 56)
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:776 -1
     (nil))
(insn 36 35 37 6 (set (reg:QI 94 [ D.13937 ])
        (mem:QI (reg/f:DI 111) [0 *session_10+0 S1 A64])) EACommands.c:776 -1
     (nil))
(insn 37 36 38 6 (parallel [
            (set (reg:QI 95 [ D.13937 ])
                (and:QI (reg:QI 94 [ D.13937 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:776 -1
     (nil))
(insn 38 37 39 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 95 [ D.13937 ])
            (const_int 0 [0]))) EACommands.c:776 -1
     (nil))
(jump_insn 39 38 40 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) EACommands.c:776 -1
     (nil)
 -> 51)
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:777 -1
     (nil))
(insn 42 41 43 7 (parallel [
            (set (reg/f:DI 96 [ D.13938 ])
                (plus:DI (reg/f:DI 112)
                    (const_int 142 [0x8e])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:777 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 142 [0x8e]))
        (nil)))
(insn 43 42 44 7 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:777 -1
     (nil))
(insn 44 43 45 7 (parallel [
            (set (reg/f:DI 97 [ D.13938 ])
                (plus:DI (reg/f:DI 113)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:777 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 45 44 46 7 (set (reg:DI 4 si)
        (reg/f:DI 96 [ D.13938 ])) EACommands.c:777 -1
     (nil))
(insn 46 45 47 7 (set (reg:DI 5 di)
        (reg/f:DI 97 [ D.13938 ])) EACommands.c:777 -1
     (nil))
(call_insn 47 46 48 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("MemoryEqual2B") [flags 0x41]  <function_decl 0x7f3043f82798 MemoryEqual2B>) [0 MemoryEqual2B S1 A8])
            (const_int 0 [0]))) EACommands.c:777 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 48 47 49 7 (set (reg:SI 98 [ D.13936 ])
        (reg:SI 0 ax)) EACommands.c:777 -1
     (nil))
(insn 49 48 50 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.13936 ])
            (const_int 0 [0]))) EACommands.c:777 -1
     (nil))
(jump_insn 50 49 51 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) EACommands.c:777 -1
     (nil)
 -> 56)
(code_label 51 50 52 8 86 "" [1 uses])
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (set (reg:SI 87 [ D.13933 ])
        (const_int 337 [0x151])) EACommands.c:778 -1
     (nil))
(jump_insn 54 53 55 8 (set (pc)
        (label_ref:DI 114)) EACommands.c:778 654 {jump}
     (nil)
 -> 114)
(barrier 55 54 56)
(code_label 56 55 57 9 85 "" [2 uses])
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 9 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:783 -1
     (nil))
(insn 59 58 60 9 (set (reg:HI 99 [ D.13935 ])
        (mem/j:HI (plus:DI (reg/f:DI 114)
                (const_int 32 [0x20])) [0 session_10->authHashAlg+0 S2 A64])) EACommands.c:783 -1
     (nil))
(insn 60 59 61 9 (set (reg:SI 100 [ D.13936 ])
        (zero_extend:SI (reg:HI 99 [ D.13935 ]))) EACommands.c:783 -1
     (nil))
(insn 61 60 62 9 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:783 -1
     (nil))
(insn 62 61 63 9 (set (reg:SI 4 si)
        (reg:SI 100 [ D.13936 ])) EACommands.c:783 -1
     (nil))
(insn 63 62 64 9 (set (reg:DI 5 di)
        (reg:DI 115)) EACommands.c:783 -1
     (nil))
(call_insn 64 63 65 9 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:783 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 65 64 66 9 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:785 -1
     (nil))
(insn 66 65 67 9 (parallel [
            (set (reg/f:DI 101 [ D.13938 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:785 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 67 66 68 9 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:785 -1
     (nil))
(insn 68 67 69 9 (set (reg:DI 4 si)
        (reg/f:DI 101 [ D.13938 ])) EACommands.c:785 -1
     (nil))
(insn 69 68 70 9 (set (reg:DI 5 di)
        (reg:DI 117)) EACommands.c:785 -1
     (nil))
(call_insn 70 69 71 9 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:785 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 71 70 72 9 (set (reg:DI 102 [ D.13939 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32]))) EACommands.c:787 -1
     (nil))
(insn 72 71 73 9 (parallel [
            (set (reg:DI 118)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:787 -1
     (nil))
(insn 73 72 74 9 (set (reg:DI 1 dx)
        (reg:DI 102 [ D.13939 ])) EACommands.c:787 -1
     (nil))
(insn 74 73 75 9 (set (reg:SI 4 si)
        (const_int 4 [0x4])) EACommands.c:787 -1
     (nil))
(insn 75 74 76 9 (set (reg:DI 5 di)
        (reg:DI 118)) EACommands.c:787 -1
     (nil))
(call_insn 76 75 77 9 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:787 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 77 76 78 9 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:789 -1
     (nil))
(insn 78 77 79 9 (parallel [
            (set (reg/f:DI 103 [ D.13938 ])
                (plus:DI (reg/f:DI 119)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:789 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 79 78 80 9 (parallel [
            (set (reg:DI 120)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:789 -1
     (nil))
(insn 80 79 81 9 (set (reg:DI 4 si)
        (reg/f:DI 103 [ D.13938 ])) EACommands.c:789 -1
     (nil))
(insn 81 80 82 9 (set (reg:DI 5 di)
        (reg:DI 120)) EACommands.c:789 -1
     (nil))
(call_insn 82 81 83 9 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:789 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 83 82 84 9 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:791 -1
     (nil))
(insn 84 83 85 9 (parallel [
            (set (reg/f:DI 104 [ D.13938 ])
                (plus:DI (reg/f:DI 121)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:791 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 85 84 86 9 (parallel [
            (set (reg:DI 122)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:791 -1
     (nil))
(insn 86 85 87 9 (set (reg:DI 4 si)
        (reg/f:DI 104 [ D.13938 ])) EACommands.c:791 -1
     (nil))
(insn 87 86 88 9 (set (reg:DI 5 di)
        (reg:DI 122)) EACommands.c:791 -1
     (nil))
(call_insn 88 87 89 9 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:791 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 89 88 90 9 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:793 -1
     (nil))
(insn 90 89 91 9 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:793 -1
     (nil))
(insn 91 90 92 9 (set (reg:DI 125)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 4 [0x4])) [0 in_7(D)->cpHashA+0 S8 A32])) EACommands.c:793 -1
     (nil))
(insn 92 91 93 9 (set (mem/j:DI (plus:DI (reg/f:DI 123)
                (const_int 142 [0x8e])) [0 session_10->u1.cpHash+0 S8 A16])
        (reg:DI 125)) EACommands.c:793 -1
     (nil))
(insn 93 92 94 9 (set (reg:DI 126)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 12 [0xc])) [0 in_7(D)->cpHashA+8 S8 A32])) EACommands.c:793 -1
     (nil))
(insn 94 93 95 9 (set (mem/j:DI (plus:DI (reg/f:DI 123)
                (const_int 150 [0x96])) [0 session_10->u1.cpHash+8 S8 A16])
        (reg:DI 126)) EACommands.c:793 -1
     (nil))
(insn 95 94 96 9 (set (reg:DI 127)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 20 [0x14])) [0 in_7(D)->cpHashA+16 S8 A32])) EACommands.c:793 -1
     (nil))
(insn 96 95 97 9 (set (mem/j:DI (plus:DI (reg/f:DI 123)
                (const_int 158 [0x9e])) [0 session_10->u1.cpHash+16 S8 A16])
        (reg:DI 127)) EACommands.c:793 -1
     (nil))
(insn 97 96 98 9 (set (reg:DI 128)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 28 [0x1c])) [0 in_7(D)->cpHashA+24 S8 A32])) EACommands.c:793 -1
     (nil))
(insn 98 97 99 9 (set (mem/j:DI (plus:DI (reg/f:DI 123)
                (const_int 166 [0xa6])) [0 session_10->u1.cpHash+24 S8 A16])
        (reg:DI 128)) EACommands.c:793 -1
     (nil))
(insn 99 98 100 9 (set (reg:DI 129)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 36 [0x24])) [0 in_7(D)->cpHashA+32 S8 A32])) EACommands.c:793 -1
     (nil))
(insn 100 99 101 9 (set (mem/j:DI (plus:DI (reg/f:DI 123)
                (const_int 174 [0xae])) [0 session_10->u1.cpHash+32 S8 A16])
        (reg:DI 129)) EACommands.c:793 -1
     (nil))
(insn 101 100 102 9 (set (reg:DI 130)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 44 [0x2c])) [0 in_7(D)->cpHashA+40 S8 A32])) EACommands.c:793 -1
     (nil))
(insn 102 101 103 9 (set (mem/j:DI (plus:DI (reg/f:DI 123)
                (const_int 182 [0xb6])) [0 session_10->u1.cpHash+40 S8 A16])
        (reg:DI 130)) EACommands.c:793 -1
     (nil))
(insn 103 102 104 9 (set (reg:HI 131)
        (mem/j:HI (plus:DI (reg/f:DI 124)
                (const_int 52 [0x34])) [0 in_7(D)->cpHashA+48 S2 A32])) EACommands.c:793 -1
     (nil))
(insn 104 103 105 9 (set (mem/j:HI (plus:DI (reg/f:DI 123)
                (const_int 190 [0xbe])) [0 session_10->u1.cpHash+48 S2 A16])
        (reg:HI 131)) EACommands.c:793 -1
     (nil))
(insn 105 104 108 9 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:794 -1
     (nil))
(insn 108 105 109 9 (set (reg:QI 135)
        (mem/j:QI (reg/f:DI 132) [0 session_10->attributes.isCpHashDefined+0 S1 A64])) EACommands.c:794 -1
     (nil))
(insn 109 108 110 9 (parallel [
            (set (reg:QI 136)
                (ior:QI (reg:QI 135)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:794 -1
     (nil))
(insn 110 109 111 9 (set (mem/j:QI (reg/f:DI 132) [0 session_10->attributes.isCpHashDefined+0 S1 A64])
        (reg:QI 136)) EACommands.c:794 -1
     (nil))
(insn 111 110 114 9 (set (reg:SI 87 [ D.13933 ])
        (const_int 0 [0])) EACommands.c:795 -1
     (nil))
(code_label 114 111 115 11 87 "" [2 uses])
(note 115 114 116 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 120 11 (set (reg:SI 105 [ <retval> ])
        (reg:SI 87 [ D.13933 ])) -1
     (nil))
(insn 120 116 121 11 (set (reg/i:SI 0 ax)
        (reg:SI 105 [ <retval> ])) EACommands.c:796 -1
     (nil))
(insn 121 120 122 11 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13940+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:796 -1
     (nil))
(jump_insn 122 121 128 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) EACommands.c:796 -1
     (nil)
 -> 125)
(note 128 122 123 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(call_insn 123 128 124 13 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:796 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 124 123 125)
(code_label 125 124 129 14 88 "" [1 uses])
(note 129 125 126 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 126 129 0 14 (use (reg/i:SI 0 ax)) EACommands.c:796 -1
     (nil))

;; Function TPM2_PolicyNameHash (TPM2_PolicyNameHash, funcdef_no=13, decl_uid=13078, cgraph_uid=13, symbol_order=13)

Partition 2: size 232 align 16
	hashState
Partition 1: size 8 align 8
	session_8
Partition 0: size 4 align 4
	commandCode_3

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 26 from 11 to 12.
Redirecting jump 55 from 11 to 12.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 112.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:805 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13948+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:805 -1
     (nil))
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32])
        (const_int 368 [0x170])) EACommands.c:807 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:811 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ D.13942 ])
        (mem/j:SI (reg/f:DI 107) [0 in_5(D)->policySession+0 S4 A32])) EACommands.c:811 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13942 ])) EACommands.c:811 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:811 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 108)
        (reg:DI 0 ax)) EACommands.c:811 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
        (reg:DI 108)) EACommands.c:811 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:815 -1
     (nil))
(insn 15 14 16 2 (set (reg:HI 89 [ D.13943 ])
        (mem/j:HI (plus:DI (reg/f:DI 109)
                (const_int 4 [0x4])) [0 in_5(D)->nameHash.t.size+0 S2 A32])) EACommands.c:815 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:815 -1
     (nil))
(insn 17 16 18 2 (set (reg:HI 90 [ D.13943 ])
        (mem/j:HI (plus:DI (reg/f:DI 110)
                (const_int 32 [0x20])) [0 session_8->authHashAlg+0 S2 A64])) EACommands.c:815 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 91 [ D.13944 ])
        (zero_extend:SI (reg:HI 90 [ D.13943 ]))) EACommands.c:815 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 5 di)
        (reg:SI 91 [ D.13944 ])) EACommands.c:815 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashGetDigestSize") [flags 0x41]  <function_decl 0x7f3043f9ce58 CryptHashGetDigestSize>) [0 CryptHashGetDigestSize S1 A8])
            (const_int 0 [0]))) EACommands.c:815 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:HI 92 [ D.13943 ])
        (reg:HI 0 ax)) EACommands.c:815 -1
     (nil))
(insn 22 21 23 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 89 [ D.13943 ])
            (reg:HI 92 [ D.13943 ]))) EACommands.c:815 -1
     (nil))
(jump_insn 23 22 24 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) EACommands.c:815 -1
     (nil)
 -> 28)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:SI 87 [ D.13941 ])
        (const_int 469 [0x1d5])) EACommands.c:816 -1
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (label_ref:DI 109)) EACommands.c:816 654 {jump}
     (nil)
 -> 109)
(barrier 27 26 28)
(code_label 28 27 29 5 90 "" [1 uses])
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:818 -1
     (nil))
(insn 31 30 32 5 (set (reg:HI 93 [ D.13943 ])
        (mem/j:HI (plus:DI (reg/f:DI 111)
                (const_int 142 [0x8e])) [0 session_8->u1.cpHash.b.size+0 S2 A16])) EACommands.c:818 -1
     (nil))
(insn 32 31 33 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 93 [ D.13943 ])
            (const_int 0 [0]))) EACommands.c:818 -1
     (nil))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) EACommands.c:818 -1
     (nil)
 -> 52)
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:819 -1
     (nil))
(insn 36 35 37 6 (set (reg:QI 94 [ D.13945 ])
        (mem:QI (reg/f:DI 112) [0 *session_8+0 S1 A64])) EACommands.c:819 -1
     (nil))
(insn 37 36 38 6 (parallel [
            (set (reg:QI 95 [ D.13945 ])
                (and:QI (reg:QI 94 [ D.13945 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:819 -1
     (nil))
(insn 38 37 39 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 95 [ D.13945 ])
            (const_int 0 [0]))) EACommands.c:819 -1
     (nil))
(jump_insn 39 38 40 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) EACommands.c:819 -1
     (nil)
 -> 52)
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:820 -1
     (nil))
(insn 42 41 43 7 (set (reg:QI 96 [ D.13945 ])
        (mem:QI (reg/f:DI 113) [0 *session_8+0 S1 A64])) EACommands.c:820 -1
     (nil))
(insn 43 42 44 7 (parallel [
            (set (reg:QI 97 [ D.13945 ])
                (and:QI (reg:QI 96 [ D.13945 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:820 -1
     (nil))
(insn 44 43 45 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ D.13945 ])
            (const_int 0 [0]))) EACommands.c:820 -1
     (nil))
(jump_insn 45 44 46 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) EACommands.c:820 -1
     (nil)
 -> 52)
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 8 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:821 -1
     (nil))
(insn 48 47 49 8 (set (reg:QI 98 [ D.13945 ])
        (mem:QI (plus:DI (reg/f:DI 114)
                (const_int 1 [0x1])) [0 *session_8+1 S1 A8])) EACommands.c:821 -1
     (nil))
(insn 49 48 50 8 (parallel [
            (set (reg:QI 99 [ D.13945 ])
                (and:QI (reg:QI 98 [ D.13945 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:821 -1
     (nil))
(insn 50 49 51 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 99 [ D.13945 ])
            (const_int 0 [0]))) EACommands.c:821 -1
     (nil))
(jump_insn 51 50 52 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) EACommands.c:821 -1
     (nil)
 -> 57)
(code_label 52 51 53 9 92 "" [3 uses])
(note 53 52 54 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 9 (set (reg:SI 87 [ D.13941 ])
        (const_int 337 [0x151])) EACommands.c:822 -1
     (nil))
(jump_insn 55 54 56 9 (set (pc)
        (label_ref:DI 109)) EACommands.c:822 654 {jump}
     (nil)
 -> 109)
(barrier 56 55 57)
(code_label 57 56 58 10 93 "" [1 uses])
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:827 -1
     (nil))
(insn 60 59 61 10 (set (reg:HI 100 [ D.13943 ])
        (mem/j:HI (plus:DI (reg/f:DI 115)
                (const_int 32 [0x20])) [0 session_8->authHashAlg+0 S2 A64])) EACommands.c:827 -1
     (nil))
(insn 61 60 62 10 (set (reg:SI 101 [ D.13944 ])
        (zero_extend:SI (reg:HI 100 [ D.13943 ]))) EACommands.c:827 -1
     (nil))
(insn 62 61 63 10 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:827 -1
     (nil))
(insn 63 62 64 10 (set (reg:SI 4 si)
        (reg:SI 101 [ D.13944 ])) EACommands.c:827 -1
     (nil))
(insn 64 63 65 10 (set (reg:DI 5 di)
        (reg:DI 116)) EACommands.c:827 -1
     (nil))
(call_insn 65 64 66 10 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:827 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 66 65 67 10 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:829 -1
     (nil))
(insn 67 66 68 10 (parallel [
            (set (reg/f:DI 102 [ D.13946 ])
                (plus:DI (reg/f:DI 117)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:829 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 68 67 69 10 (parallel [
            (set (reg:DI 118)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:829 -1
     (nil))
(insn 69 68 70 10 (set (reg:DI 4 si)
        (reg/f:DI 102 [ D.13946 ])) EACommands.c:829 -1
     (nil))
(insn 70 69 71 10 (set (reg:DI 5 di)
        (reg:DI 118)) EACommands.c:829 -1
     (nil))
(call_insn 71 70 72 10 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:829 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 72 71 73 10 (set (reg:DI 103 [ D.13947 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32]))) EACommands.c:831 -1
     (nil))
(insn 73 72 74 10 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:831 -1
     (nil))
(insn 74 73 75 10 (set (reg:DI 1 dx)
        (reg:DI 103 [ D.13947 ])) EACommands.c:831 -1
     (nil))
(insn 75 74 76 10 (set (reg:SI 4 si)
        (const_int 4 [0x4])) EACommands.c:831 -1
     (nil))
(insn 76 75 77 10 (set (reg:DI 5 di)
        (reg:DI 119)) EACommands.c:831 -1
     (nil))
(call_insn 77 76 78 10 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:831 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 78 77 79 10 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:833 -1
     (nil))
(insn 79 78 80 10 (parallel [
            (set (reg/f:DI 104 [ D.13946 ])
                (plus:DI (reg/f:DI 120)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:833 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 80 79 81 10 (parallel [
            (set (reg:DI 121)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:833 -1
     (nil))
(insn 81 80 82 10 (set (reg:DI 4 si)
        (reg/f:DI 104 [ D.13946 ])) EACommands.c:833 -1
     (nil))
(insn 82 81 83 10 (set (reg:DI 5 di)
        (reg:DI 121)) EACommands.c:833 -1
     (nil))
(call_insn 83 82 84 10 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:833 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 84 83 85 10 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:835 -1
     (nil))
(insn 85 84 86 10 (parallel [
            (set (reg/f:DI 105 [ D.13946 ])
                (plus:DI (reg/f:DI 122)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:835 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 86 85 87 10 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:835 -1
     (nil))
(insn 87 86 88 10 (set (reg:DI 4 si)
        (reg/f:DI 105 [ D.13946 ])) EACommands.c:835 -1
     (nil))
(insn 88 87 89 10 (set (reg:DI 5 di)
        (reg:DI 123)) EACommands.c:835 -1
     (nil))
(call_insn 89 88 90 10 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:835 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 90 89 91 10 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:837 -1
     (nil))
(insn 91 90 92 10 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:837 -1
     (nil))
(insn 92 91 93 10 (set (reg:DI 126)
        (mem/j:DI (plus:DI (reg/f:DI 125)
                (const_int 4 [0x4])) [0 in_5(D)->nameHash+0 S8 A32])) EACommands.c:837 -1
     (nil))
(insn 93 92 94 10 (set (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 142 [0x8e])) [0 session_8->u1.cpHash+0 S8 A16])
        (reg:DI 126)) EACommands.c:837 -1
     (nil))
(insn 94 93 95 10 (set (reg:DI 127)
        (mem/j:DI (plus:DI (reg/f:DI 125)
                (const_int 12 [0xc])) [0 in_5(D)->nameHash+8 S8 A32])) EACommands.c:837 -1
     (nil))
(insn 95 94 96 10 (set (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 150 [0x96])) [0 session_8->u1.cpHash+8 S8 A16])
        (reg:DI 127)) EACommands.c:837 -1
     (nil))
(insn 96 95 97 10 (set (reg:DI 128)
        (mem/j:DI (plus:DI (reg/f:DI 125)
                (const_int 20 [0x14])) [0 in_5(D)->nameHash+16 S8 A32])) EACommands.c:837 -1
     (nil))
(insn 97 96 98 10 (set (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 158 [0x9e])) [0 session_8->u1.cpHash+16 S8 A16])
        (reg:DI 128)) EACommands.c:837 -1
     (nil))
(insn 98 97 99 10 (set (reg:DI 129)
        (mem/j:DI (plus:DI (reg/f:DI 125)
                (const_int 28 [0x1c])) [0 in_5(D)->nameHash+24 S8 A32])) EACommands.c:837 -1
     (nil))
(insn 99 98 100 10 (set (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 166 [0xa6])) [0 session_8->u1.cpHash+24 S8 A16])
        (reg:DI 129)) EACommands.c:837 -1
     (nil))
(insn 100 99 101 10 (set (reg:DI 130)
        (mem/j:DI (plus:DI (reg/f:DI 125)
                (const_int 36 [0x24])) [0 in_5(D)->nameHash+32 S8 A32])) EACommands.c:837 -1
     (nil))
(insn 101 100 102 10 (set (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 174 [0xae])) [0 session_8->u1.cpHash+32 S8 A16])
        (reg:DI 130)) EACommands.c:837 -1
     (nil))
(insn 102 101 103 10 (set (reg:DI 131)
        (mem/j:DI (plus:DI (reg/f:DI 125)
                (const_int 44 [0x2c])) [0 in_5(D)->nameHash+40 S8 A32])) EACommands.c:837 -1
     (nil))
(insn 103 102 104 10 (set (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 182 [0xb6])) [0 session_8->u1.cpHash+40 S8 A16])
        (reg:DI 131)) EACommands.c:837 -1
     (nil))
(insn 104 103 105 10 (set (reg:HI 132)
        (mem/j:HI (plus:DI (reg/f:DI 125)
                (const_int 52 [0x34])) [0 in_5(D)->nameHash+48 S2 A32])) EACommands.c:837 -1
     (nil))
(insn 105 104 106 10 (set (mem/j:HI (plus:DI (reg/f:DI 124)
                (const_int 190 [0xbe])) [0 session_8->u1.cpHash+48 S2 A16])
        (reg:HI 132)) EACommands.c:837 -1
     (nil))
(insn 106 105 109 10 (set (reg:SI 87 [ D.13941 ])
        (const_int 0 [0])) EACommands.c:838 -1
     (nil))
(code_label 109 106 110 12 94 "" [2 uses])
(note 110 109 111 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 115 12 (set (reg:SI 106 [ <retval> ])
        (reg:SI 87 [ D.13941 ])) -1
     (nil))
(insn 115 111 116 12 (set (reg/i:SI 0 ax)
        (reg:SI 106 [ <retval> ])) EACommands.c:839 -1
     (nil))
(insn 116 115 117 12 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13948+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:839 -1
     (nil))
(jump_insn 117 116 123 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) EACommands.c:839 -1
     (nil)
 -> 120)
(note 123 117 118 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(call_insn 118 123 119 14 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:839 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 119 118 120)
(code_label 120 119 124 15 95 "" [1 uses])
(note 124 120 121 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 121 124 0 15 (use (reg/i:SI 0 ax)) EACommands.c:839 -1
     (nil))

;; Function TPM2_PolicyDuplicationSelect (TPM2_PolicyDuplicationSelect, funcdef_no=14, decl_uid=13092, cgraph_uid=14, symbol_order=14)

Partition 2: size 232 align 16
	hashState
Partition 1: size 8 align 8
	session_9
Partition 0: size 4 align 4
	commandCode_4

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 20 from 10 to 11.
Redirecting jump 30 from 10 to 11.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Removing jump 125.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:848 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13956+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:848 -1
     (nil))
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32])
        (const_int 392 [0x188])) EACommands.c:851 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:854 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ D.13950 ])
        (mem/j:SI (reg/f:DI 109) [0 in_6(D)->policySession+0 S4 A32])) EACommands.c:854 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13950 ])) EACommands.c:854 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:854 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 110)
        (reg:DI 0 ax)) EACommands.c:854 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
        (reg:DI 110)) EACommands.c:854 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:856 -1
     (nil))
(insn 15 14 16 2 (set (reg:HI 89 [ D.13951 ])
        (mem/j:HI (plus:DI (reg/f:DI 111)
                (const_int 142 [0x8e])) [0 session_9->u1.cpHash.t.size+0 S2 A16])) EACommands.c:856 -1
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 89 [ D.13951 ])
            (const_int 0 [0]))) EACommands.c:856 -1
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) EACommands.c:856 -1
     (nil)
 -> 22)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:SI 87 [ D.13949 ])
        (const_int 337 [0x151])) EACommands.c:857 -1
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (label_ref:DI 122)) EACommands.c:857 654 {jump}
     (nil)
 -> 122)
(barrier 21 20 22)
(code_label 22 21 23 5 97 "" [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:859 -1
     (nil))
(insn 25 24 26 5 (set (reg:SI 90 [ D.13950 ])
        (mem/j:SI (plus:DI (reg/f:DI 112)
                (const_int 28 [0x1c])) [0 session_9->commandCode+0 S4 A32])) EACommands.c:859 -1
     (nil))
(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.13950 ])
            (const_int 0 [0]))) EACommands.c:859 -1
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) EACommands.c:859 -1
     (nil)
 -> 32)
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg:SI 87 [ D.13949 ])
        (const_int 323 [0x143])) EACommands.c:860 -1
     (nil))
(jump_insn 30 29 31 6 (set (pc)
        (label_ref:DI 122)) EACommands.c:860 654 {jump}
     (nil)
 -> 122)
(barrier 31 30 32)
(code_label 32 31 33 7 99 "" [1 uses])
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:863 -1
     (nil))
(insn 35 34 36 7 (set (reg:HI 91 [ D.13951 ])
        (mem/j:HI (plus:DI (reg/f:DI 113)
                (const_int 32 [0x20])) [0 session_9->authHashAlg+0 S2 A64])) EACommands.c:863 -1
     (nil))
(insn 36 35 37 7 (set (reg:SI 92 [ D.13952 ])
        (zero_extend:SI (reg:HI 91 [ D.13951 ]))) EACommands.c:863 -1
     (nil))
(insn 37 36 38 7 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:863 -1
     (nil))
(insn 38 37 39 7 (set (reg:SI 4 si)
        (reg:SI 92 [ D.13952 ])) EACommands.c:863 -1
     (nil))
(insn 39 38 40 7 (set (reg:DI 5 di)
        (reg:DI 114)) EACommands.c:863 -1
     (nil))
(call_insn 40 39 41 7 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:863 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 41 40 42 7 (set (reg:HI 93 [ D.13951 ])
        (reg:HI 0 ax)) EACommands.c:863 -1
     (nil))
(insn 42 41 43 7 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:863 -1
     (nil))
(insn 43 42 44 7 (set (mem/j:HI (plus:DI (reg/f:DI 115)
                (const_int 142 [0x8e])) [0 session_9->u1.cpHash.t.size+0 S2 A16])
        (reg:HI 93 [ D.13951 ])) EACommands.c:863 -1
     (nil))
(insn 44 43 45 7 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:865 -1
     (nil))
(insn 45 44 46 7 (parallel [
            (set (reg/f:DI 94 [ D.13953 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:865 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 46 45 47 7 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:865 -1
     (nil))
(insn 47 46 48 7 (set (reg:DI 4 si)
        (reg/f:DI 94 [ D.13953 ])) EACommands.c:865 -1
     (nil))
(insn 48 47 49 7 (set (reg:DI 5 di)
        (reg:DI 117)) EACommands.c:865 -1
     (nil))
(call_insn 49 48 50 7 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:865 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 50 49 51 7 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:867 -1
     (nil))
(insn 51 50 52 7 (parallel [
            (set (reg/f:DI 95 [ D.13953 ])
                (plus:DI (reg/f:DI 118)
                    (const_int 58 [0x3a])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:867 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
            (const_int 58 [0x3a]))
        (nil)))
(insn 52 51 53 7 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:867 -1
     (nil))
(insn 53 52 54 7 (set (reg:DI 4 si)
        (reg/f:DI 95 [ D.13953 ])) EACommands.c:867 -1
     (nil))
(insn 54 53 55 7 (set (reg:DI 5 di)
        (reg:DI 119)) EACommands.c:867 -1
     (nil))
(call_insn 55 54 56 7 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:867 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 56 55 57 7 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:869 -1
     (nil))
(insn 57 56 58 7 (parallel [
            (set (reg/f:DI 96 [ D.13953 ])
                (plus:DI (reg/f:DI 120)
                    (const_int 142 [0x8e])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:869 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 142 [0x8e]))
        (nil)))
(insn 58 57 59 7 (parallel [
            (set (reg:DI 121)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:869 -1
     (nil))
(insn 59 58 60 7 (set (reg:DI 4 si)
        (reg/f:DI 96 [ D.13953 ])) EACommands.c:869 -1
     (nil))
(insn 60 59 61 7 (set (reg:DI 5 di)
        (reg:DI 121)) EACommands.c:869 -1
     (nil))
(call_insn 61 60 62 7 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:869 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 62 61 63 7 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:874 -1
     (nil))
(insn 63 62 64 7 (set (reg:HI 97 [ D.13951 ])
        (mem/j:HI (plus:DI (reg/f:DI 122)
                (const_int 32 [0x20])) [0 session_9->authHashAlg+0 S2 A64])) EACommands.c:874 -1
     (nil))
(insn 64 63 65 7 (set (reg:SI 98 [ D.13952 ])
        (zero_extend:SI (reg:HI 97 [ D.13951 ]))) EACommands.c:874 -1
     (nil))
(insn 65 64 66 7 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:874 -1
     (nil))
(insn 66 65 67 7 (set (reg:SI 4 si)
        (reg:SI 98 [ D.13952 ])) EACommands.c:874 -1
     (nil))
(insn 67 66 68 7 (set (reg:DI 5 di)
        (reg:DI 123)) EACommands.c:874 -1
     (nil))
(call_insn 68 67 69 7 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:874 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 69 68 70 7 (set (reg:HI 99 [ D.13951 ])
        (reg:HI 0 ax)) EACommands.c:874 -1
     (nil))
(insn 70 69 71 7 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:874 -1
     (nil))
(insn 71 70 72 7 (set (mem/j:HI (plus:DI (reg/f:DI 124)
                (const_int 196 [0xc4])) [0 session_9->u2.policyDigest.t.size+0 S2 A32])
        (reg:HI 99 [ D.13951 ])) EACommands.c:874 -1
     (nil))
(insn 72 71 73 7 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:876 -1
     (nil))
(insn 73 72 74 7 (parallel [
            (set (reg/f:DI 100 [ D.13953 ])
                (plus:DI (reg/f:DI 125)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:876 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 74 73 75 7 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:876 -1
     (nil))
(insn 75 74 76 7 (set (reg:DI 4 si)
        (reg/f:DI 100 [ D.13953 ])) EACommands.c:876 -1
     (nil))
(insn 76 75 77 7 (set (reg:DI 5 di)
        (reg:DI 126)) EACommands.c:876 -1
     (nil))
(call_insn 77 76 78 7 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:876 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 78 77 79 7 (set (reg:DI 101 [ D.13954 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32]))) EACommands.c:878 -1
     (nil))
(insn 79 78 80 7 (parallel [
            (set (reg:DI 127)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:878 -1
     (nil))
(insn 80 79 81 7 (set (reg:DI 1 dx)
        (reg:DI 101 [ D.13954 ])) EACommands.c:878 -1
     (nil))
(insn 81 80 82 7 (set (reg:SI 4 si)
        (const_int 4 [0x4])) EACommands.c:878 -1
     (nil))
(insn 82 81 83 7 (set (reg:DI 5 di)
        (reg:DI 127)) EACommands.c:878 -1
     (nil))
(call_insn 83 82 84 7 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:878 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 84 83 85 7 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:880 -1
     (nil))
(insn 85 84 86 7 (set (reg:QI 102 [ D.13955 ])
        (mem/j:QI (plus:DI (reg/f:DI 128)
                (const_int 112 [0x70])) [0 in_6(D)->includeObject+0 S1 A32])) EACommands.c:880 -1
     (nil))
(insn 86 85 87 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 102 [ D.13955 ])
            (const_int 1 [0x1]))) EACommands.c:880 -1
     (nil))
(jump_insn 87 86 88 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) EACommands.c:880 -1
     (nil)
 -> 95)
(note 88 87 89 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 8 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:881 -1
     (nil))
(insn 90 89 91 8 (parallel [
            (set (reg/f:DI 103 [ D.13953 ])
                (plus:DI (reg/f:DI 129)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:881 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 91 90 92 8 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:881 -1
     (nil))
(insn 92 91 93 8 (set (reg:DI 4 si)
        (reg/f:DI 103 [ D.13953 ])) EACommands.c:881 -1
     (nil))
(insn 93 92 94 8 (set (reg:DI 5 di)
        (reg:DI 130)) EACommands.c:881 -1
     (nil))
(call_insn 94 93 95 8 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:881 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(code_label 95 94 96 9 100 "" [1 uses])
(note 96 95 97 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 9 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:883 -1
     (nil))
(insn 98 97 99 9 (parallel [
            (set (reg/f:DI 104 [ D.13953 ])
                (plus:DI (reg/f:DI 131)
                    (const_int 58 [0x3a])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:883 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
            (const_int 58 [0x3a]))
        (nil)))
(insn 99 98 100 9 (parallel [
            (set (reg:DI 132)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:883 -1
     (nil))
(insn 100 99 101 9 (set (reg:DI 4 si)
        (reg/f:DI 104 [ D.13953 ])) EACommands.c:883 -1
     (nil))
(insn 101 100 102 9 (set (reg:DI 5 di)
        (reg:DI 132)) EACommands.c:883 -1
     (nil))
(call_insn 102 101 103 9 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:883 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 103 102 104 9 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:885 -1
     (nil))
(insn 104 103 105 9 (set (reg:QI 105 [ D.13955 ])
        (mem/j:QI (plus:DI (reg/f:DI 133)
                (const_int 112 [0x70])) [0 in_6(D)->includeObject+0 S1 A32])) EACommands.c:885 -1
     (nil))
(insn 105 104 106 9 (set (reg:DI 106 [ D.13954 ])
        (zero_extend:DI (reg:QI 105 [ D.13955 ]))) EACommands.c:885 -1
     (nil))
(insn 106 105 107 9 (parallel [
            (set (reg:DI 134)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:885 -1
     (nil))
(insn 107 106 108 9 (set (reg:DI 1 dx)
        (reg:DI 106 [ D.13954 ])) EACommands.c:885 -1
     (nil))
(insn 108 107 109 9 (set (reg:SI 4 si)
        (const_int 1 [0x1])) EACommands.c:885 -1
     (nil))
(insn 109 108 110 9 (set (reg:DI 5 di)
        (reg:DI 134)) EACommands.c:885 -1
     (nil))
(call_insn 110 109 111 9 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:885 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 111 110 112 9 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:887 -1
     (nil))
(insn 112 111 113 9 (parallel [
            (set (reg/f:DI 107 [ D.13953 ])
                (plus:DI (reg/f:DI 135)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:887 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 113 112 114 9 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:887 -1
     (nil))
(insn 114 113 115 9 (set (reg:DI 4 si)
        (reg/f:DI 107 [ D.13953 ])) EACommands.c:887 -1
     (nil))
(insn 115 114 116 9 (set (reg:DI 5 di)
        (reg:DI 136)) EACommands.c:887 -1
     (nil))
(call_insn 116 115 117 9 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:887 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 117 116 118 9 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:889 -1
     (nil))
(insn 118 117 119 9 (set (mem/j:SI (plus:DI (reg/f:DI 137)
                (const_int 28 [0x1c])) [0 session_9->commandCode+0 S4 A32])
        (const_int 331 [0x14b])) EACommands.c:889 -1
     (nil))
(insn 119 118 122 9 (set (reg:SI 87 [ D.13949 ])
        (const_int 0 [0])) EACommands.c:890 -1
     (nil))
(code_label 122 119 123 11 101 "" [2 uses])
(note 123 122 124 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 128 11 (set (reg:SI 108 [ <retval> ])
        (reg:SI 87 [ D.13949 ])) -1
     (nil))
(insn 128 124 129 11 (set (reg/i:SI 0 ax)
        (reg:SI 108 [ <retval> ])) EACommands.c:891 -1
     (nil))
(insn 129 128 130 11 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13956+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:891 -1
     (nil))
(jump_insn 130 129 136 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 133)
            (pc))) EACommands.c:891 -1
     (nil)
 -> 133)
(note 136 130 131 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(call_insn 131 136 132 13 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:891 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 132 131 133)
(code_label 133 132 137 14 102 "" [1 uses])
(note 137 133 134 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 134 137 0 14 (use (reg/i:SI 0 ax)) EACommands.c:891 -1
     (nil))

;; Function TPM2_PolicyAuthorize (TPM2_PolicyAuthorize, funcdef_no=15, decl_uid=13107, cgraph_uid=15, symbol_order=15)

Partition 4: size 232 align 16
	hashState
Partition 5: size 60 align 16
	ticket
Partition 3: size 50 align 16
	authHash
Partition 0: size 8 align 8
	session_8
Partition 2: size 2 align 2
	digestSize_18
Partition 1: size 2 align 2
	hashAlg_11

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 28 from 13 to 14.
Redirecting jump 46 from 13 to 14.
Redirecting jump 68 from 13 to 14.
Redirecting jump 119 from 13 to 14.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Removing jump 144.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:901 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13966+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:901 -1
     (nil))
(insn 7 4 8 2 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:910 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.13958 ])
        (mem/j:SI (reg/f:DI 113) [0 in_5(D)->policySession+0 S4 A32])) EACommands.c:910 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13958 ])) EACommands.c:910 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:910 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 114)
        (reg:DI 0 ax)) EACommands.c:910 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 session+0 S8 A64])
        (reg:DI 114)) EACommands.c:910 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:912 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg/f:DI 89 [ D.13959 ])
                (plus:DI (reg/f:DI 115)
                    (const_int 106 [0x6a])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:912 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])
            (const_int 106 [0x6a]))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.13959 ])) EACommands.c:912 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ByteArrayToUint16") [flags 0x41]  <function_decl 0x7f3043f82ca8 ByteArrayToUint16>) [0 ByteArrayToUint16 S1 A8])
            (const_int 0 [0]))) EACommands.c:912 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:HI 116)
        (reg:HI 0 ax)) EACommands.c:912 -1
     (nil))
(insn 18 17 19 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -380 [0xfffffffffffffe84])) [0 hashAlg+0 S2 A16])
        (reg:HI 116)) EACommands.c:912 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 90 [ D.13960 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -380 [0xfffffffffffffe84])) [0 hashAlg+0 S2 A16]))) EACommands.c:915 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 4 si)
        (const_int 0 [0])) EACommands.c:915 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 5 di)
        (reg:SI 90 [ D.13960 ])) EACommands.c:915 -1
     (nil))
(call_insn 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashIsValidAlg") [flags 0x41]  <function_decl 0x7f3043f9cca8 CryptHashIsValidAlg>) [0 CryptHashIsValidAlg S1 A8])
            (const_int 0 [0]))) EACommands.c:915 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 23 22 24 2 (set (reg:SI 91 [ D.13960 ])
        (reg:SI 0 ax)) EACommands.c:915 -1
     (nil))
(insn 24 23 25 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.13960 ])
            (const_int 0 [0]))) EACommands.c:915 -1
     (nil))
(jump_insn 25 24 26 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) EACommands.c:915 -1
     (nil)
 -> 30)
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg:SI 87 [ D.13957 ])
        (const_int 963 [0x3c3])) EACommands.c:916 -1
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (label_ref:DI 141)) EACommands.c:916 654 {jump}
     (nil)
 -> 141)
(barrier 29 28 30)
(code_label 30 29 31 5 104 "" [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg:SI 92 [ D.13960 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -380 [0xfffffffffffffe84])) [0 hashAlg+0 S2 A16]))) EACommands.c:917 -1
     (nil))
(insn 33 32 34 5 (set (reg:SI 5 di)
        (reg:SI 92 [ D.13960 ])) EACommands.c:917 -1
     (nil))
(call_insn 34 33 35 5 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashGetDigestSize") [flags 0x41]  <function_decl 0x7f3043f9ce58 CryptHashGetDigestSize>) [0 CryptHashGetDigestSize S1 A8])
            (const_int 0 [0]))) EACommands.c:917 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 35 34 36 5 (set (reg:HI 117)
        (reg:HI 0 ax)) EACommands.c:917 -1
     (nil))
(insn 36 35 37 5 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -378 [0xfffffffffffffe86])) [0 digestSize+0 S2 A16])
        (reg:HI 117)) EACommands.c:917 -1
     (nil))
(insn 37 36 38 5 (set (reg:SI 93 [ D.13960 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -378 [0xfffffffffffffe86])) [0 digestSize+0 S2 A16]))) EACommands.c:918 -1
     (nil))
(insn 38 37 39 5 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:918 -1
     (nil))
(insn 39 38 40 5 (set (reg:HI 94 [ D.13961 ])
        (mem/j:HI (plus:DI (reg/f:DI 118)
                (const_int 104 [0x68])) [0 in_5(D)->keySign.t.size+0 S2 A32])) EACommands.c:918 -1
     (nil))
(insn 40 39 41 5 (set (reg:SI 95 [ D.13960 ])
        (zero_extend:SI (reg:HI 94 [ D.13961 ]))) EACommands.c:918 -1
     (nil))
(insn 41 40 42 5 (parallel [
            (set (reg:SI 96 [ D.13960 ])
                (plus:SI (reg:SI 95 [ D.13960 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:918 -1
     (nil))
(insn 42 41 43 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.13960 ])
            (reg:SI 96 [ D.13960 ]))) EACommands.c:918 -1
     (nil))
(jump_insn 43 42 44 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) EACommands.c:918 -1
     (nil)
 -> 48)
(note 44 43 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 6 (set (reg:SI 87 [ D.13957 ])
        (const_int 981 [0x3d5])) EACommands.c:919 -1
     (nil))
(jump_insn 46 45 47 6 (set (pc)
        (label_ref:DI 141)) EACommands.c:919 654 {jump}
     (nil)
 -> 141)
(barrier 47 46 48)
(code_label 48 47 49 7 106 "" [1 uses])
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 7 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 session+0 S8 A64])) EACommands.c:921 -1
     (nil))
(insn 51 50 52 7 (set (reg:QI 97 [ D.13962 ])
        (mem:QI (reg/f:DI 119) [0 *session_8+0 S1 A64])) EACommands.c:921 -1
     (nil))
(insn 52 51 53 7 (parallel [
            (set (reg:QI 98 [ D.13962 ])
                (and:QI (reg:QI 97 [ D.13962 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:921 -1
     (nil))
(insn 53 52 54 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 98 [ D.13962 ])
            (const_int 0 [0]))) EACommands.c:921 -1
     (nil))
(jump_insn 54 53 55 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) EACommands.c:921 -1
     (nil)
 -> 121)
(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 8 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:926 -1
     (nil))
(insn 57 56 58 8 (parallel [
            (set (reg/f:DI 99 [ D.13963 ])
                (plus:DI (reg/f:DI 120)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:926 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 58 57 59 8 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 session+0 S8 A64])) EACommands.c:925 -1
     (nil))
(insn 59 58 60 8 (parallel [
            (set (reg/f:DI 100 [ D.13963 ])
                (plus:DI (reg/f:DI 121)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:925 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -376 [0xfffffffffffffe88])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 60 59 61 8 (set (reg:DI 4 si)
        (reg/f:DI 99 [ D.13963 ])) EACommands.c:925 -1
     (nil))
(insn 61 60 62 8 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.13963 ])) EACommands.c:925 -1
     (nil))
(call_insn 62 61 63 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("MemoryEqual2B") [flags 0x41]  <function_decl 0x7f3043f82798 MemoryEqual2B>) [0 MemoryEqual2B S1 A8])
            (const_int 0 [0]))) EACommands.c:925 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 63 62 64 8 (set (reg:SI 101 [ D.13960 ])
        (reg:SI 0 ax)) EACommands.c:925 -1
     (nil))
(insn 64 63 65 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.13960 ])
            (const_int 0 [0]))) EACommands.c:925 -1
     (nil))
(jump_insn 65 64 66 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) EACommands.c:925 -1
     (nil)
 -> 70)
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 9 (set (reg:SI 87 [ D.13957 ])
        (const_int 452 [0x1c4])) EACommands.c:927 -1
     (nil))
(jump_insn 68 67 69 9 (set (pc)
        (label_ref:DI 141)) EACommands.c:927 654 {jump}
     (nil)
 -> 141)
(barrier 69 68 70)
(code_label 70 69 71 10 108 "" [1 uses])
(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 10 (set (reg:SI 102 [ D.13960 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -380 [0xfffffffffffffe84])) [0 hashAlg+0 S2 A16]))) EACommands.c:932 -1
     (nil))
(insn 73 72 74 10 (parallel [
            (set (reg:DI 122)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:932 -1
     (nil))
(insn 74 73 75 10 (set (reg:SI 4 si)
        (reg:SI 102 [ D.13960 ])) EACommands.c:932 -1
     (nil))
(insn 75 74 76 10 (set (reg:DI 5 di)
        (reg:DI 122)) EACommands.c:932 -1
     (nil))
(call_insn 76 75 77 10 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:932 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 77 76 78 10 (set (reg:HI 103 [ D.13961 ])
        (reg:HI 0 ax)) EACommands.c:932 -1
     (nil))
(insn 78 77 79 10 (set (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -368 [0xfffffffffffffe90])) [0 authHash.t.size+0 S2 A64])
        (reg:HI 103 [ D.13961 ])) EACommands.c:932 -1
     (nil))
(insn 79 78 80 10 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:934 -1
     (nil))
(insn 80 79 81 10 (parallel [
            (set (reg/f:DI 104 [ D.13963 ])
                (plus:DI (reg/f:DI 123)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:934 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 81 80 82 10 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:934 -1
     (nil))
(insn 82 81 83 10 (set (reg:DI 4 si)
        (reg/f:DI 104 [ D.13963 ])) EACommands.c:934 -1
     (nil))
(insn 83 82 84 10 (set (reg:DI 5 di)
        (reg:DI 124)) EACommands.c:934 -1
     (nil))
(call_insn 84 83 85 10 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:934 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 85 84 86 10 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:936 -1
     (nil))
(insn 86 85 87 10 (parallel [
            (set (reg/f:DI 105 [ D.13963 ])
                (plus:DI (reg/f:DI 125)
                    (const_int 54 [0x36])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:936 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])
            (const_int 54 [0x36]))
        (nil)))
(insn 87 86 88 10 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:936 -1
     (nil))
(insn 88 87 89 10 (set (reg:DI 4 si)
        (reg/f:DI 105 [ D.13963 ])) EACommands.c:936 -1
     (nil))
(insn 89 88 90 10 (set (reg:DI 5 di)
        (reg:DI 126)) EACommands.c:936 -1
     (nil))
(call_insn 90 89 91 10 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:936 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 91 90 92 10 (parallel [
            (set (reg:DI 127)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -368 [0xfffffffffffffe90])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:938 -1
     (nil))
(insn 92 91 93 10 (parallel [
            (set (reg:DI 128)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:938 -1
     (nil))
(insn 93 92 94 10 (set (reg:DI 4 si)
        (reg:DI 127)) EACommands.c:938 -1
     (nil))
(insn 94 93 95 10 (set (reg:DI 5 di)
        (reg:DI 128)) EACommands.c:938 -1
     (nil))
(call_insn 95 94 96 10 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:938 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 96 95 97 10 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:940 -1
     (nil))
(insn 97 96 98 10 (parallel [
            (set (reg/f:DI 106 [ D.13964 ])
                (plus:DI (reg/f:DI 129)
                    (const_int 104 [0x68])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:940 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])
            (const_int 104 [0x68]))
        (nil)))
(insn 98 97 99 10 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:940 -1
     (nil))
(insn 99 98 100 10 (set (reg:SI 107 [ D.13958 ])
        (mem/j:SI (plus:DI (reg/f:DI 130)
                (const_int 164 [0xa4])) [0 in_5(D)->checkTicket.hierarchy+0 S4 A32])) EACommands.c:940 -1
     (nil))
(insn 100 99 101 10 (parallel [
            (set (reg:DI 131)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:940 -1
     (nil))
(insn 101 100 102 10 (parallel [
            (set (reg:DI 132)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -368 [0xfffffffffffffe90])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:940 -1
     (nil))
(insn 102 101 103 10 (set (reg:DI 2 cx)
        (reg:DI 131)) EACommands.c:940 -1
     (nil))
(insn 103 102 104 10 (set (reg:DI 1 dx)
        (reg/f:DI 106 [ D.13964 ])) EACommands.c:940 -1
     (nil))
(insn 104 103 105 10 (set (reg:DI 4 si)
        (reg:DI 132)) EACommands.c:940 -1
     (nil))
(insn 105 104 106 10 (set (reg:SI 5 di)
        (reg:SI 107 [ D.13958 ])) EACommands.c:940 -1
     (nil))
(call_insn 106 105 107 10 (call (mem:QI (symbol_ref:DI ("TicketComputeVerified") [flags 0x41]  <function_decl 0x7f3043f8cca8 TicketComputeVerified>) [0 TicketComputeVerified S1 A8])
        (const_int 0 [0])) EACommands.c:940 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 107 106 108 10 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:943 -1
     (nil))
(insn 108 107 109 10 (parallel [
            (set (reg/f:DI 108 [ D.13963 ])
                (plus:DI (reg/f:DI 133)
                    (const_int 168 [0xa8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:943 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])
            (const_int 168 [0xa8]))
        (nil)))
(insn 109 108 110 10 (parallel [
            (set (reg:DI 134)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:943 -1
     (nil))
(insn 110 109 111 10 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg:DI 134)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:943 -1
     (nil))
(insn 111 110 112 10 (set (reg:DI 4 si)
        (reg:DI 135)) EACommands.c:943 -1
     (nil))
(insn 112 111 113 10 (set (reg:DI 5 di)
        (reg/f:DI 108 [ D.13963 ])) EACommands.c:943 -1
     (nil))
(call_insn 113 112 114 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("MemoryEqual2B") [flags 0x41]  <function_decl 0x7f3043f82798 MemoryEqual2B>) [0 MemoryEqual2B S1 A8])
            (const_int 0 [0]))) EACommands.c:943 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 114 113 115 10 (set (reg:SI 109 [ D.13960 ])
        (reg:SI 0 ax)) EACommands.c:943 -1
     (nil))
(insn 115 114 116 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.13960 ])
            (const_int 0 [0]))) EACommands.c:943 -1
     (nil))
(jump_insn 116 115 117 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) EACommands.c:943 -1
     (nil)
 -> 121)
(note 117 116 118 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 11 (set (reg:SI 87 [ D.13957 ])
        (const_int 1220 [0x4c4])) EACommands.c:944 -1
     (nil))
(jump_insn 119 118 120 11 (set (pc)
        (label_ref:DI 141)) EACommands.c:944 654 {jump}
     (nil)
 -> 141)
(barrier 120 119 121)
(code_label 121 120 122 12 107 "" [2 uses])
(note 122 121 123 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 12 (set (reg:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 session+0 S8 A64])) EACommands.c:948 -1
     (nil))
(insn 124 123 125 12 (set (reg:DI 5 di)
        (reg:DI 136)) EACommands.c:948 -1
     (nil))
(call_insn 125 124 126 12 (call (mem:QI (symbol_ref:DI ("PolicyDigestClear") [flags 0x41]  <function_decl 0x7f3043fd60d8 PolicyDigestClear>) [0 PolicyDigestClear S1 A8])
        (const_int 0 [0])) EACommands.c:948 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 126 125 127 12 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:950 -1
     (nil))
(insn 127 126 128 12 (parallel [
            (set (reg/f:DI 110 [ D.13965 ])
                (plus:DI (reg/f:DI 137)
                    (const_int 54 [0x36])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:950 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])
            (const_int 54 [0x36]))
        (nil)))
(insn 128 127 129 12 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])) EACommands.c:950 -1
     (nil))
(insn 129 128 130 12 (parallel [
            (set (reg/f:DI 111 [ D.13964 ])
                (plus:DI (reg/f:DI 138)
                    (const_int 104 [0x68])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:950 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -392 [0xfffffffffffffe78])) [0 in+0 S8 A64])
            (const_int 104 [0x68]))
        (nil)))
(insn 130 129 131 12 (set (reg:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -376 [0xfffffffffffffe88])) [0 session+0 S8 A64])) EACommands.c:950 -1
     (nil))
(insn 131 130 132 12 (set (reg:DI 38 r9)
        (reg:DI 139)) EACommands.c:950 -1
     (nil))
(insn 132 131 133 12 (set (reg:DI 37 r8)
        (const_int 0 [0])) EACommands.c:950 -1
     (nil))
(insn 133 132 134 12 (set (reg:DI 2 cx)
        (const_int 0 [0])) EACommands.c:950 -1
     (nil))
(insn 134 133 135 12 (set (reg:DI 1 dx)
        (reg/f:DI 110 [ D.13965 ])) EACommands.c:950 -1
     (nil))
(insn 135 134 136 12 (set (reg:DI 4 si)
        (reg/f:DI 111 [ D.13964 ])) EACommands.c:950 -1
     (nil))
(insn 136 135 137 12 (set (reg:SI 5 di)
        (const_int 362 [0x16a])) EACommands.c:950 -1
     (nil))
(call_insn 137 136 138 12 (call (mem:QI (symbol_ref:DI ("PolicyContextUpdate") [flags 0x41]  <function_decl 0x7f3043fd1e58 PolicyContextUpdate>) [0 PolicyContextUpdate S1 A8])
        (const_int 0 [0])) EACommands.c:950 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 138 137 141 12 (set (reg:SI 87 [ D.13957 ])
        (const_int 0 [0])) EACommands.c:952 -1
     (nil))
(code_label 141 138 142 14 109 "" [4 uses])
(note 142 141 143 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 147 14 (set (reg:SI 112 [ <retval> ])
        (reg:SI 87 [ D.13957 ])) -1
     (nil))
(insn 147 143 148 14 (set (reg/i:SI 0 ax)
        (reg:SI 112 [ <retval> ])) EACommands.c:953 -1
     (nil))
(insn 148 147 149 14 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13966+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:953 -1
     (nil))
(jump_insn 149 148 155 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 152)
            (pc))) EACommands.c:953 -1
     (nil)
 -> 152)
(note 155 149 150 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(call_insn 150 155 151 16 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:953 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 151 150 152)
(code_label 152 151 156 17 110 "" [1 uses])
(note 156 152 153 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 153 156 0 17 (use (reg/i:SI 0 ax)) EACommands.c:953 -1
     (nil))

;; Function TPM2_PolicyAuthValue (TPM2_PolicyAuthValue, funcdef_no=16, decl_uid=13121, cgraph_uid=16, symbol_order=16)

Partition 2: size 232 align 16
	hashState
Partition 1: size 8 align 8
	session_6
Partition 0: size 4 align 4
	commandCode_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 55.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:963 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13973+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:963 -1
     (nil))
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32])
        (const_int 363 [0x16b])) EACommands.c:965 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:969 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 87 [ D.13967 ])
        (mem/j:SI (reg/f:DI 95) [0 in_3(D)->policySession+0 S4 A32])) EACommands.c:969 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 87 [ D.13967 ])) EACommands.c:969 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:969 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 96)
        (reg:DI 0 ax)) EACommands.c:969 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
        (reg:DI 96)) EACommands.c:969 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:973 -1
     (nil))
(insn 15 14 16 2 (set (reg:HI 88 [ D.13968 ])
        (mem/j:HI (plus:DI (reg/f:DI 97)
                (const_int 32 [0x20])) [0 session_6->authHashAlg+0 S2 A64])) EACommands.c:973 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 89 [ D.13969 ])
        (zero_extend:SI (reg:HI 88 [ D.13968 ]))) EACommands.c:973 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:973 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 4 si)
        (reg:SI 89 [ D.13969 ])) EACommands.c:973 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg:DI 98)) EACommands.c:973 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:973 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 21 20 22 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:975 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg/f:DI 90 [ D.13970 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:975 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 23 22 24 2 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:975 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.13970 ])) EACommands.c:975 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg:DI 100)) EACommands.c:975 -1
     (nil))
(call_insn 26 25 27 2 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:975 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 27 26 28 2 (set (reg:DI 91 [ D.13971 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32]))) EACommands.c:977 -1
     (nil))
(insn 28 27 29 2 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:977 -1
     (nil))
(insn 29 28 30 2 (set (reg:DI 1 dx)
        (reg:DI 91 [ D.13971 ])) EACommands.c:977 -1
     (nil))
(insn 30 29 31 2 (set (reg:SI 4 si)
        (const_int 4 [0x4])) EACommands.c:977 -1
     (nil))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (reg:DI 101)) EACommands.c:977 -1
     (nil))
(call_insn 32 31 33 2 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:977 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 33 32 34 2 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:979 -1
     (nil))
(insn 34 33 35 2 (parallel [
            (set (reg/f:DI 92 [ D.13970 ])
                (plus:DI (reg/f:DI 102)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:979 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 35 34 36 2 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:979 -1
     (nil))
(insn 36 35 37 2 (set (reg:DI 4 si)
        (reg/f:DI 92 [ D.13970 ])) EACommands.c:979 -1
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg:DI 103)) EACommands.c:979 -1
     (nil))
(call_insn 38 37 39 2 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:979 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 39 38 42 2 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:981 -1
     (nil))
(insn 42 39 43 2 (set (reg:QI 107)
        (mem/j:QI (reg/f:DI 104) [0 session_6->attributes.isAuthValueNeeded+0 S1 A64])) EACommands.c:981 -1
     (nil))
(insn 43 42 44 2 (parallel [
            (set (reg:QI 108)
                (ior:QI (reg:QI 107)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:981 -1
     (nil))
(insn 44 43 45 2 (set (mem/j:QI (reg/f:DI 104) [0 session_6->attributes.isAuthValueNeeded+0 S1 A64])
        (reg:QI 108)) EACommands.c:981 -1
     (nil))
(insn 45 44 48 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:982 -1
     (nil))
(insn 48 45 49 2 (set (reg:QI 112)
        (mem/j:QI (reg/f:DI 109) [0 session_6->attributes.isPasswordNeeded+0 S1 A64])) EACommands.c:982 -1
     (nil))
(insn 49 48 50 2 (parallel [
            (set (reg:QI 113)
                (and:QI (reg:QI 112)
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:982 -1
     (nil))
(insn 50 49 51 2 (set (mem/j:QI (reg/f:DI 109) [0 session_6->attributes.isPasswordNeeded+0 S1 A64])
        (reg:QI 113)) EACommands.c:982 -1
     (nil))
(insn 51 50 54 2 (set (reg:SI 93 [ D.13972 ])
        (const_int 0 [0])) EACommands.c:983 -1
     (nil))
(insn 54 51 58 2 (set (reg:SI 94 [ <retval> ])
        (reg:SI 93 [ D.13972 ])) EACommands.c:983 -1
     (nil))
(insn 58 54 59 2 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) EACommands.c:984 -1
     (nil))
(insn 59 58 60 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13973+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:984 -1
     (nil))
(jump_insn 60 59 66 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) EACommands.c:984 -1
     (nil)
 -> 63)
(note 66 60 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 61 66 62 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:984 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 62 61 63)
(code_label 63 62 67 7 113 "" [1 uses])
(note 67 63 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 64 67 0 7 (use (reg/i:SI 0 ax)) EACommands.c:984 -1
     (nil))

;; Function TPM2_PolicyPassword (TPM2_PolicyPassword, funcdef_no=17, decl_uid=13132, cgraph_uid=17, symbol_order=17)

Partition 2: size 232 align 16
	hashState
Partition 1: size 8 align 8
	session_6
Partition 0: size 4 align 4
	commandCode_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 55.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:994 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13980+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:994 -1
     (nil))
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32])
        (const_int 363 [0x16b])) EACommands.c:996 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:1000 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 87 [ D.13974 ])
        (mem/j:SI (reg/f:DI 95) [0 in_3(D)->policySession+0 S4 A32])) EACommands.c:1000 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 87 [ D.13974 ])) EACommands.c:1000 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:1000 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 96)
        (reg:DI 0 ax)) EACommands.c:1000 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
        (reg:DI 96)) EACommands.c:1000 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1004 -1
     (nil))
(insn 15 14 16 2 (set (reg:HI 88 [ D.13975 ])
        (mem/j:HI (plus:DI (reg/f:DI 97)
                (const_int 32 [0x20])) [0 session_6->authHashAlg+0 S2 A64])) EACommands.c:1004 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 89 [ D.13976 ])
        (zero_extend:SI (reg:HI 88 [ D.13975 ]))) EACommands.c:1004 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1004 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 4 si)
        (reg:SI 89 [ D.13976 ])) EACommands.c:1004 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg:DI 98)) EACommands.c:1004 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:1004 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 21 20 22 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1006 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg/f:DI 90 [ D.13977 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1006 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 23 22 24 2 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1006 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.13977 ])) EACommands.c:1006 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg:DI 100)) EACommands.c:1006 -1
     (nil))
(call_insn 26 25 27 2 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:1006 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 27 26 28 2 (set (reg:DI 91 [ D.13978 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32]))) EACommands.c:1008 -1
     (nil))
(insn 28 27 29 2 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1008 -1
     (nil))
(insn 29 28 30 2 (set (reg:DI 1 dx)
        (reg:DI 91 [ D.13978 ])) EACommands.c:1008 -1
     (nil))
(insn 30 29 31 2 (set (reg:SI 4 si)
        (const_int 4 [0x4])) EACommands.c:1008 -1
     (nil))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (reg:DI 101)) EACommands.c:1008 -1
     (nil))
(call_insn 32 31 33 2 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:1008 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 33 32 34 2 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1010 -1
     (nil))
(insn 34 33 35 2 (parallel [
            (set (reg/f:DI 92 [ D.13977 ])
                (plus:DI (reg/f:DI 102)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1010 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 35 34 36 2 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1010 -1
     (nil))
(insn 36 35 37 2 (set (reg:DI 4 si)
        (reg/f:DI 92 [ D.13977 ])) EACommands.c:1010 -1
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg:DI 103)) EACommands.c:1010 -1
     (nil))
(call_insn 38 37 39 2 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:1010 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 39 38 42 2 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1012 -1
     (nil))
(insn 42 39 43 2 (set (reg:QI 107)
        (mem/j:QI (reg/f:DI 104) [0 session_6->attributes.isPasswordNeeded+0 S1 A64])) EACommands.c:1012 -1
     (nil))
(insn 43 42 44 2 (parallel [
            (set (reg:QI 108)
                (ior:QI (reg:QI 107)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1012 -1
     (nil))
(insn 44 43 45 2 (set (mem/j:QI (reg/f:DI 104) [0 session_6->attributes.isPasswordNeeded+0 S1 A64])
        (reg:QI 108)) EACommands.c:1012 -1
     (nil))
(insn 45 44 48 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1013 -1
     (nil))
(insn 48 45 49 2 (set (reg:QI 112)
        (mem/j:QI (reg/f:DI 109) [0 session_6->attributes.isAuthValueNeeded+0 S1 A64])) EACommands.c:1013 -1
     (nil))
(insn 49 48 50 2 (parallel [
            (set (reg:QI 113)
                (and:QI (reg:QI 112)
                    (const_int -17 [0xffffffffffffffef])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1013 -1
     (nil))
(insn 50 49 51 2 (set (mem/j:QI (reg/f:DI 109) [0 session_6->attributes.isAuthValueNeeded+0 S1 A64])
        (reg:QI 113)) EACommands.c:1013 -1
     (nil))
(insn 51 50 54 2 (set (reg:SI 93 [ D.13979 ])
        (const_int 0 [0])) EACommands.c:1014 -1
     (nil))
(insn 54 51 58 2 (set (reg:SI 94 [ <retval> ])
        (reg:SI 93 [ D.13979 ])) EACommands.c:1014 -1
     (nil))
(insn 58 54 59 2 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) EACommands.c:1015 -1
     (nil))
(insn 59 58 60 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13980+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:1015 -1
     (nil))
(jump_insn 60 59 66 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) EACommands.c:1015 -1
     (nil)
 -> 63)
(note 66 60 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 61 66 62 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:1015 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 62 61 63)
(code_label 63 62 67 7 116 "" [1 uses])
(note 67 63 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 64 67 0 7 (use (reg/i:SI 0 ax)) EACommands.c:1015 -1
     (nil))

;; Function TPM2_PolicyGetDigest (TPM2_PolicyGetDigest, funcdef_no=18, decl_uid=13147, cgraph_uid=18, symbol_order=18)

Partition 0: size 8 align 8
	session_5

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 33.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:1025 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) EACommands.c:1025 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) EACommands.c:1029 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 87 [ D.13981 ])
        (mem/j:SI (reg/f:DI 90) [0 in_2(D)->policySession+0 S4 A32])) EACommands.c:1029 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (reg:SI 87 [ D.13981 ])) EACommands.c:1029 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:1029 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 91)
        (reg:DI 0 ax)) EACommands.c:1029 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 session+0 S8 A64])
        (reg:DI 91)) EACommands.c:1029 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) EACommands.c:1030 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 session+0 S8 A64])) EACommands.c:1030 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 94)
        (mem/j:DI (plus:DI (reg/f:DI 93)
                (const_int 196 [0xc4])) [0 session_5->u2.policyDigest+0 S8 A32])) EACommands.c:1030 -1
     (nil))
(insn 16 15 17 2 (set (mem/j:DI (reg/f:DI 92) [0 out_6(D)->policyDigest+0 S8 A16])
        (reg:DI 94)) EACommands.c:1030 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 95)
        (mem/j:DI (plus:DI (reg/f:DI 93)
                (const_int 204 [0xcc])) [0 session_5->u2.policyDigest+8 S8 A32])) EACommands.c:1030 -1
     (nil))
(insn 18 17 19 2 (set (mem/j:DI (plus:DI (reg/f:DI 92)
                (const_int 8 [0x8])) [0 out_6(D)->policyDigest+8 S8 A16])
        (reg:DI 95)) EACommands.c:1030 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 96)
        (mem/j:DI (plus:DI (reg/f:DI 93)
                (const_int 212 [0xd4])) [0 session_5->u2.policyDigest+16 S8 A32])) EACommands.c:1030 -1
     (nil))
(insn 20 19 21 2 (set (mem/j:DI (plus:DI (reg/f:DI 92)
                (const_int 16 [0x10])) [0 out_6(D)->policyDigest+16 S8 A16])
        (reg:DI 96)) EACommands.c:1030 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 97)
        (mem/j:DI (plus:DI (reg/f:DI 93)
                (const_int 220 [0xdc])) [0 session_5->u2.policyDigest+24 S8 A32])) EACommands.c:1030 -1
     (nil))
(insn 22 21 23 2 (set (mem/j:DI (plus:DI (reg/f:DI 92)
                (const_int 24 [0x18])) [0 out_6(D)->policyDigest+24 S8 A16])
        (reg:DI 97)) EACommands.c:1030 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 98)
        (mem/j:DI (plus:DI (reg/f:DI 93)
                (const_int 228 [0xe4])) [0 session_5->u2.policyDigest+32 S8 A32])) EACommands.c:1030 -1
     (nil))
(insn 24 23 25 2 (set (mem/j:DI (plus:DI (reg/f:DI 92)
                (const_int 32 [0x20])) [0 out_6(D)->policyDigest+32 S8 A16])
        (reg:DI 98)) EACommands.c:1030 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 99)
        (mem/j:DI (plus:DI (reg/f:DI 93)
                (const_int 236 [0xec])) [0 session_5->u2.policyDigest+40 S8 A32])) EACommands.c:1030 -1
     (nil))
(insn 26 25 27 2 (set (mem/j:DI (plus:DI (reg/f:DI 92)
                (const_int 40 [0x28])) [0 out_6(D)->policyDigest+40 S8 A16])
        (reg:DI 99)) EACommands.c:1030 -1
     (nil))
(insn 27 26 28 2 (set (reg:HI 100)
        (mem/j:HI (plus:DI (reg/f:DI 93)
                (const_int 244 [0xf4])) [0 session_5->u2.policyDigest+48 S2 A32])) EACommands.c:1030 -1
     (nil))
(insn 28 27 29 2 (set (mem/j:HI (plus:DI (reg/f:DI 92)
                (const_int 48 [0x30])) [0 out_6(D)->policyDigest+48 S2 A16])
        (reg:HI 100)) EACommands.c:1030 -1
     (nil))
(insn 29 28 32 2 (set (reg:SI 88 [ D.13982 ])
        (const_int 0 [0])) EACommands.c:1031 -1
     (nil))
(insn 32 29 36 2 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.13982 ])) EACommands.c:1031 -1
     (nil))
(insn 36 32 37 2 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) EACommands.c:1032 -1
     (nil))
(insn 37 36 0 2 (use (reg/i:SI 0 ax)) EACommands.c:1032 -1
     (nil))

;; Function TPM2_PolicyNvWritten (TPM2_PolicyNvWritten, funcdef_no=19, decl_uid=13158, cgraph_uid=19, symbol_order=19)

Partition 2: size 232 align 16
	hashState
Partition 1: size 8 align 8
	session_8
Partition 0: size 4 align 4
	commandCode_3

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 34 from 7 to 8.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 95.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:1041 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13991+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1041 -1
     (nil))
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32])
        (const_int 399 [0x18f])) EACommands.c:1043 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:1047 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ D.13984 ])
        (mem/j:SI (reg/f:DI 107) [0 in_5(D)->policySession+0 S4 A32])) EACommands.c:1047 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13984 ])) EACommands.c:1047 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:1047 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 108)
        (reg:DI 0 ax)) EACommands.c:1047 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
        (reg:DI 108)) EACommands.c:1047 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1050 -1
     (nil))
(insn 15 14 16 2 (set (reg:QI 89 [ D.13985 ])
        (mem:QI (plus:DI (reg/f:DI 109)
                (const_int 1 [0x1])) [0 *session_8+1 S1 A8])) EACommands.c:1050 -1
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg:QI 90 [ D.13985 ])
                (and:QI (reg:QI 89 [ D.13985 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1050 -1
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.13985 ])
            (const_int 0 [0]))) EACommands.c:1050 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) EACommands.c:1050 -1
     (nil)
 -> 36)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1052 -1
     (nil))
(insn 21 20 22 4 (set (reg:QI 91 [ D.13985 ])
        (mem:QI (plus:DI (reg/f:DI 110)
                (const_int 1 [0x1])) [0 *session_8+1 S1 A8])) EACommands.c:1052 -1
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:QI 92 [ D.13985 ])
                (and:QI (reg:QI 91 [ D.13985 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1053 -1
     (nil))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ D.13985 ])
            (const_int 0 [0]))) EACommands.c:1053 -1
     (nil))
(insn 24 23 25 4 (set (reg:QI 93 [ D.13986 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) EACommands.c:1053 -1
     (nil))
(insn 25 24 26 4 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:1053 -1
     (nil))
(insn 26 25 27 4 (set (reg:QI 94 [ D.13985 ])
        (mem/j:QI (plus:DI (reg/f:DI 111)
                (const_int 4 [0x4])) [0 in_5(D)->writtenSet+0 S1 A32])) EACommands.c:1053 -1
     (nil))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 94 [ D.13985 ])
            (const_int 1 [0x1]))) EACommands.c:1053 -1
     (nil))
(insn 28 27 29 4 (set (reg:QI 95 [ D.13986 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) EACommands.c:1053 -1
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg:QI 96 [ D.13986 ])
                (xor:QI (reg:QI 93 [ D.13986 ])
                    (reg:QI 95 [ D.13986 ])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1053 -1
     (nil))
(insn 30 29 31 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 96 [ D.13986 ])
            (const_int 0 [0]))) EACommands.c:1052 -1
     (nil))
(jump_insn 31 30 32 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) EACommands.c:1052 -1
     (nil)
 -> 36)
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 5 (set (reg:SI 87 [ D.13983 ])
        (const_int 452 [0x1c4])) EACommands.c:1054 -1
     (nil))
(jump_insn 34 33 35 5 (set (pc)
        (label_ref:DI 92)) EACommands.c:1054 654 {jump}
     (nil)
 -> 92)
(barrier 35 34 36)
(code_label 36 35 37 6 120 "" [2 uses])
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 6 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1058 -1
     (nil))
(insn 41 38 42 6 (set (reg:QI 115)
        (mem/j:QI (plus:DI (reg/f:DI 112)
                (const_int 1 [0x1])) [0 session_8->attributes.checkNvWritten+0 S1 A8])) EACommands.c:1058 -1
     (nil))
(insn 42 41 43 6 (parallel [
            (set (reg:QI 116)
                (ior:QI (reg:QI 115)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1058 -1
     (nil))
(insn 43 42 44 6 (set (mem/j:QI (plus:DI (reg/f:DI 112)
                (const_int 1 [0x1])) [0 session_8->attributes.checkNvWritten+0 S1 A8])
        (reg:QI 116)) EACommands.c:1058 -1
     (nil))
(insn 44 43 45 6 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:1059 -1
     (nil))
(insn 45 44 46 6 (set (reg:QI 97 [ D.13985 ])
        (mem/j:QI (plus:DI (reg/f:DI 117)
                (const_int 4 [0x4])) [0 in_5(D)->writtenSet+0 S1 A32])) EACommands.c:1059 -1
     (nil))
(insn 46 45 47 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ D.13985 ])
            (const_int 1 [0x1]))) EACommands.c:1059 -1
     (nil))
(insn 47 46 48 6 (set (reg:QI 98 [ D.13986 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) EACommands.c:1059 -1
     (nil))
(insn 48 47 50 6 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1059 -1
     (nil))
(insn 50 48 51 6 (parallel [
            (set (reg:QI 120)
                (and:QI (reg:QI 98 [ D.13986 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1059 -1
     (nil))
(insn 51 50 52 6 (parallel [
            (set (reg:QI 121)
                (ashift:QI (reg:QI 120)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1059 -1
     (nil))
(insn 52 51 53 6 (set (reg:QI 122)
        (mem/j:QI (plus:DI (reg/f:DI 118)
                (const_int 1 [0x1])) [0 session_8->attributes.nvWrittenState+0 S1 A8])) EACommands.c:1059 -1
     (nil))
(insn 53 52 54 6 (parallel [
            (set (reg:QI 123)
                (and:QI (reg:QI 122)
                    (const_int -17 [0xffffffffffffffef])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1059 -1
     (nil))
(insn 54 53 55 6 (parallel [
            (set (reg:QI 124)
                (ior:QI (reg:QI 123)
                    (reg:QI 121)))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1059 -1
     (nil))
(insn 55 54 56 6 (set (mem/j:QI (plus:DI (reg/f:DI 118)
                (const_int 1 [0x1])) [0 session_8->attributes.nvWrittenState+0 S1 A8])
        (reg:QI 124)) EACommands.c:1059 -1
     (nil))
(insn 56 55 57 6 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1064 -1
     (nil))
(insn 57 56 58 6 (set (reg:HI 99 [ D.13987 ])
        (mem/j:HI (plus:DI (reg/f:DI 125)
                (const_int 32 [0x20])) [0 session_8->authHashAlg+0 S2 A64])) EACommands.c:1064 -1
     (nil))
(insn 58 57 59 6 (set (reg:SI 100 [ D.13988 ])
        (zero_extend:SI (reg:HI 99 [ D.13987 ]))) EACommands.c:1064 -1
     (nil))
(insn 59 58 60 6 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1064 -1
     (nil))
(insn 60 59 61 6 (set (reg:SI 4 si)
        (reg:SI 100 [ D.13988 ])) EACommands.c:1064 -1
     (nil))
(insn 61 60 62 6 (set (reg:DI 5 di)
        (reg:DI 126)) EACommands.c:1064 -1
     (nil))
(call_insn 62 61 63 6 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:1064 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 63 62 64 6 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1066 -1
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg/f:DI 101 [ D.13989 ])
                (plus:DI (reg/f:DI 127)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1066 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 65 64 66 6 (parallel [
            (set (reg:DI 128)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1066 -1
     (nil))
(insn 66 65 67 6 (set (reg:DI 4 si)
        (reg/f:DI 101 [ D.13989 ])) EACommands.c:1066 -1
     (nil))
(insn 67 66 68 6 (set (reg:DI 5 di)
        (reg:DI 128)) EACommands.c:1066 -1
     (nil))
(call_insn 68 67 69 6 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:1066 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 69 68 70 6 (set (reg:DI 102 [ D.13990 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32]))) EACommands.c:1068 -1
     (nil))
(insn 70 69 71 6 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1068 -1
     (nil))
(insn 71 70 72 6 (set (reg:DI 1 dx)
        (reg:DI 102 [ D.13990 ])) EACommands.c:1068 -1
     (nil))
(insn 72 71 73 6 (set (reg:SI 4 si)
        (const_int 4 [0x4])) EACommands.c:1068 -1
     (nil))
(insn 73 72 74 6 (set (reg:DI 5 di)
        (reg:DI 129)) EACommands.c:1068 -1
     (nil))
(call_insn 74 73 75 6 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:1068 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 75 74 76 6 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:1070 -1
     (nil))
(insn 76 75 77 6 (set (reg:QI 103 [ D.13985 ])
        (mem/j:QI (plus:DI (reg/f:DI 130)
                (const_int 4 [0x4])) [0 in_5(D)->writtenSet+0 S1 A32])) EACommands.c:1070 -1
     (nil))
(insn 77 76 78 6 (set (reg:DI 104 [ D.13990 ])
        (zero_extend:DI (reg:QI 103 [ D.13985 ]))) EACommands.c:1070 -1
     (nil))
(insn 78 77 79 6 (parallel [
            (set (reg:DI 131)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1070 -1
     (nil))
(insn 79 78 80 6 (set (reg:DI 1 dx)
        (reg:DI 104 [ D.13990 ])) EACommands.c:1070 -1
     (nil))
(insn 80 79 81 6 (set (reg:SI 4 si)
        (const_int 1 [0x1])) EACommands.c:1070 -1
     (nil))
(insn 81 80 82 6 (set (reg:DI 5 di)
        (reg:DI 131)) EACommands.c:1070 -1
     (nil))
(call_insn 82 81 83 6 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:1070 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 83 82 84 6 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1072 -1
     (nil))
(insn 84 83 85 6 (parallel [
            (set (reg/f:DI 105 [ D.13989 ])
                (plus:DI (reg/f:DI 132)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1072 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 85 84 86 6 (parallel [
            (set (reg:DI 133)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1072 -1
     (nil))
(insn 86 85 87 6 (set (reg:DI 4 si)
        (reg/f:DI 105 [ D.13989 ])) EACommands.c:1072 -1
     (nil))
(insn 87 86 88 6 (set (reg:DI 5 di)
        (reg:DI 133)) EACommands.c:1072 -1
     (nil))
(call_insn 88 87 89 6 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:1072 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 89 88 92 6 (set (reg:SI 87 [ D.13983 ])
        (const_int 0 [0])) EACommands.c:1073 -1
     (nil))
(code_label 92 89 93 8 122 "" [1 uses])
(note 93 92 94 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 98 8 (set (reg:SI 106 [ <retval> ])
        (reg:SI 87 [ D.13983 ])) -1
     (nil))
(insn 98 94 99 8 (set (reg/i:SI 0 ax)
        (reg:SI 106 [ <retval> ])) EACommands.c:1074 -1
     (nil))
(insn 99 98 100 8 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13991+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:1074 -1
     (nil))
(jump_insn 100 99 106 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) EACommands.c:1074 -1
     (nil)
 -> 103)
(note 106 100 101 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 101 106 102 10 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:1074 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 102 101 103)
(code_label 103 102 107 11 123 "" [1 uses])
(note 107 103 104 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 104 107 0 11 (use (reg/i:SI 0 ax)) EACommands.c:1074 -1
     (nil))

;; Function TPM2_PolicyTemplate (TPM2_PolicyTemplate, funcdef_no=20, decl_uid=13170, cgraph_uid=20, symbol_order=20)

Partition 2: size 232 align 16
	hashState
Partition 1: size 8 align 8
	session_9
Partition 0: size 4 align 4
	commandCode_4

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 32 from 11 to 12.
Redirecting jump 42 from 11 to 12.
Redirecting jump 58 from 11 to 12.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 121.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:1083 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.13999+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1083 -1
     (nil))
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32])
        (const_int 400 [0x190])) EACommands.c:1085 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:1089 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ D.13993 ])
        (mem/j:SI (reg/f:DI 106) [0 in_6(D)->policySession+0 S4 A32])) EACommands.c:1089 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13993 ])) EACommands.c:1089 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:1089 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 107)
        (reg:DI 0 ax)) EACommands.c:1089 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
        (reg:DI 107)) EACommands.c:1089 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1091 -1
     (nil))
(insn 15 14 16 2 (set (reg:QI 89 [ D.13994 ])
        (mem:QI (plus:DI (reg/f:DI 108)
                (const_int 1 [0x1])) [0 *session_9+1 S1 A8])) EACommands.c:1091 -1
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg:QI 90 [ D.13994 ])
                (and:QI (reg:QI 89 [ D.13994 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1091 -1
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.13994 ])
            (const_int 0 [0]))) EACommands.c:1091 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) EACommands.c:1091 -1
     (nil)
 -> 34)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1093 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/f:DI 91 [ D.13995 ])
                (plus:DI (reg/f:DI 109)
                    (const_int 142 [0x8e])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1093 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 142 [0x8e]))
        (nil)))
(insn 22 21 23 4 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:1093 -1
     (nil))
(insn 23 22 24 4 (parallel [
            (set (reg/f:DI 92 [ D.13995 ])
                (plus:DI (reg/f:DI 110)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1093 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 24 23 25 4 (set (reg:DI 4 si)
        (reg/f:DI 91 [ D.13995 ])) EACommands.c:1093 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.13995 ])) EACommands.c:1093 -1
     (nil))
(call_insn 26 25 27 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("MemoryEqual2B") [flags 0x41]  <function_decl 0x7f3043f82798 MemoryEqual2B>) [0 MemoryEqual2B S1 A8])
            (const_int 0 [0]))) EACommands.c:1093 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 27 26 28 4 (set (reg:SI 93 [ D.13996 ])
        (reg:SI 0 ax)) EACommands.c:1093 -1
     (nil))
(insn 28 27 29 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.13996 ])
            (const_int 0 [0]))) EACommands.c:1093 -1
     (nil))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) EACommands.c:1093 -1
     (nil)
 -> 44)
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg:SI 87 [ D.13992 ])
        (const_int 452 [0x1c4])) EACommands.c:1094 -1
     (nil))
(jump_insn 32 31 33 5 (set (pc)
        (label_ref:DI 118)) EACommands.c:1094 654 {jump}
     (nil)
 -> 118)
(barrier 33 32 34)
(code_label 34 33 35 6 125 "" [1 uses])
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1097 -1
     (nil))
(insn 37 36 38 6 (set (reg:HI 94 [ D.13997 ])
        (mem/j:HI (plus:DI (reg/f:DI 111)
                (const_int 142 [0x8e])) [0 session_9->u1.templateHash.t.size+0 S2 A16])) EACommands.c:1097 -1
     (nil))
(insn 38 37 39 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 94 [ D.13997 ])
            (const_int 0 [0]))) EACommands.c:1097 -1
     (nil))
(jump_insn 39 38 40 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) EACommands.c:1097 -1
     (nil)
 -> 44)
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg:SI 87 [ D.13992 ])
        (const_int 452 [0x1c4])) EACommands.c:1098 -1
     (nil))
(jump_insn 42 41 43 7 (set (pc)
        (label_ref:DI 118)) EACommands.c:1098 654 {jump}
     (nil)
 -> 118)
(barrier 43 42 44)
(code_label 44 43 45 8 126 "" [2 uses])
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:1100 -1
     (nil))
(insn 47 46 48 8 (set (reg:HI 95 [ D.13997 ])
        (mem/j:HI (plus:DI (reg/f:DI 112)
                (const_int 4 [0x4])) [0 in_6(D)->templateHash.t.size+0 S2 A32])) EACommands.c:1100 -1
     (nil))
(insn 48 47 49 8 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1100 -1
     (nil))
(insn 49 48 50 8 (set (reg:HI 96 [ D.13997 ])
        (mem/j:HI (plus:DI (reg/f:DI 113)
                (const_int 32 [0x20])) [0 session_9->authHashAlg+0 S2 A64])) EACommands.c:1100 -1
     (nil))
(insn 50 49 51 8 (set (reg:SI 97 [ D.13996 ])
        (zero_extend:SI (reg:HI 96 [ D.13997 ]))) EACommands.c:1100 -1
     (nil))
(insn 51 50 52 8 (set (reg:SI 5 di)
        (reg:SI 97 [ D.13996 ])) EACommands.c:1100 -1
     (nil))
(call_insn 52 51 53 8 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashGetDigestSize") [flags 0x41]  <function_decl 0x7f3043f9ce58 CryptHashGetDigestSize>) [0 CryptHashGetDigestSize S1 A8])
            (const_int 0 [0]))) EACommands.c:1100 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 53 52 54 8 (set (reg:HI 98 [ D.13997 ])
        (reg:HI 0 ax)) EACommands.c:1100 -1
     (nil))
(insn 54 53 55 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 95 [ D.13997 ])
            (reg:HI 98 [ D.13997 ]))) EACommands.c:1100 -1
     (nil))
(jump_insn 55 54 56 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) EACommands.c:1100 -1
     (nil)
 -> 60)
(note 56 55 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 9 (set (reg:SI 87 [ D.13992 ])
        (const_int 469 [0x1d5])) EACommands.c:1101 -1
     (nil))
(jump_insn 58 57 59 9 (set (pc)
        (label_ref:DI 118)) EACommands.c:1101 654 {jump}
     (nil)
 -> 118)
(barrier 59 58 60)
(code_label 60 59 61 10 128 "" [1 uses])
(note 61 60 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 10 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1107 -1
     (nil))
(insn 63 62 64 10 (set (reg:HI 99 [ D.13997 ])
        (mem/j:HI (plus:DI (reg/f:DI 114)
                (const_int 32 [0x20])) [0 session_9->authHashAlg+0 S2 A64])) EACommands.c:1107 -1
     (nil))
(insn 64 63 65 10 (set (reg:SI 100 [ D.13996 ])
        (zero_extend:SI (reg:HI 99 [ D.13997 ]))) EACommands.c:1107 -1
     (nil))
(insn 65 64 66 10 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1107 -1
     (nil))
(insn 66 65 67 10 (set (reg:SI 4 si)
        (reg:SI 100 [ D.13996 ])) EACommands.c:1107 -1
     (nil))
(insn 67 66 68 10 (set (reg:DI 5 di)
        (reg:DI 115)) EACommands.c:1107 -1
     (nil))
(call_insn 68 67 69 10 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashStart") [flags 0x41]  <function_decl 0x7f3043fa1510 CryptHashStart>) [0 CryptHashStart S1 A8])
            (const_int 0 [0]))) EACommands.c:1107 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 69 68 70 10 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1109 -1
     (nil))
(insn 70 69 71 10 (parallel [
            (set (reg/f:DI 101 [ D.13995 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1109 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 71 70 72 10 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1109 -1
     (nil))
(insn 72 71 73 10 (set (reg:DI 4 si)
        (reg/f:DI 101 [ D.13995 ])) EACommands.c:1109 -1
     (nil))
(insn 73 72 74 10 (set (reg:DI 5 di)
        (reg:DI 117)) EACommands.c:1109 -1
     (nil))
(call_insn 74 73 75 10 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:1109 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 75 74 76 10 (set (reg:DI 102 [ D.13998 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -252 [0xffffffffffffff04])) [0 commandCode+0 S4 A32]))) EACommands.c:1111 -1
     (nil))
(insn 76 75 77 10 (parallel [
            (set (reg:DI 118)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1111 -1
     (nil))
(insn 77 76 78 10 (set (reg:DI 1 dx)
        (reg:DI 102 [ D.13998 ])) EACommands.c:1111 -1
     (nil))
(insn 78 77 79 10 (set (reg:SI 4 si)
        (const_int 4 [0x4])) EACommands.c:1111 -1
     (nil))
(insn 79 78 80 10 (set (reg:DI 5 di)
        (reg:DI 118)) EACommands.c:1111 -1
     (nil))
(call_insn 80 79 81 10 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdateInt") [flags 0x41]  <function_decl 0x7f3043fa1a20 CryptDigestUpdateInt>) [0 CryptDigestUpdateInt S1 A8])
        (const_int 0 [0])) EACommands.c:1111 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 81 80 82 10 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:1113 -1
     (nil))
(insn 82 81 83 10 (parallel [
            (set (reg/f:DI 103 [ D.13995 ])
                (plus:DI (reg/f:DI 119)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1113 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 83 82 84 10 (parallel [
            (set (reg:DI 120)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1113 -1
     (nil))
(insn 84 83 85 10 (set (reg:DI 4 si)
        (reg/f:DI 103 [ D.13995 ])) EACommands.c:1113 -1
     (nil))
(insn 85 84 86 10 (set (reg:DI 5 di)
        (reg:DI 120)) EACommands.c:1113 -1
     (nil))
(call_insn 86 85 87 10 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f3043fa1870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) EACommands.c:1113 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 87 86 88 10 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1115 -1
     (nil))
(insn 88 87 89 10 (parallel [
            (set (reg/f:DI 104 [ D.13995 ])
                (plus:DI (reg/f:DI 121)
                    (const_int 196 [0xc4])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1115 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])
            (const_int 196 [0xc4]))
        (nil)))
(insn 89 88 90 10 (parallel [
            (set (reg:DI 122)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1115 -1
     (nil))
(insn 90 89 91 10 (set (reg:DI 4 si)
        (reg/f:DI 104 [ D.13995 ])) EACommands.c:1115 -1
     (nil))
(insn 91 90 92 10 (set (reg:DI 5 di)
        (reg:DI 122)) EACommands.c:1115 -1
     (nil))
(call_insn 92 91 93 10 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd2B") [flags 0x41]  <function_decl 0x7f3043fa1948 CryptHashEnd2B>) [0 CryptHashEnd2B S1 A8])
            (const_int 0 [0]))) EACommands.c:1115 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 93 92 94 10 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1117 -1
     (nil))
(insn 94 93 95 10 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [0 in+0 S8 A64])) EACommands.c:1117 -1
     (nil))
(insn 95 94 96 10 (set (reg:DI 125)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 4 [0x4])) [0 in_6(D)->templateHash+0 S8 A32])) EACommands.c:1117 -1
     (nil))
(insn 96 95 97 10 (set (mem/j:DI (plus:DI (reg/f:DI 123)
                (const_int 142 [0x8e])) [0 session_9->u1.templateHash+0 S8 A16])
        (reg:DI 125)) EACommands.c:1117 -1
     (nil))
(insn 97 96 98 10 (set (reg:DI 126)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 12 [0xc])) [0 in_6(D)->templateHash+8 S8 A32])) EACommands.c:1117 -1
     (nil))
(insn 98 97 99 10 (set (mem/j:DI (plus:DI (reg/f:DI 123)
                (const_int 150 [0x96])) [0 session_9->u1.templateHash+8 S8 A16])
        (reg:DI 126)) EACommands.c:1117 -1
     (nil))
(insn 99 98 100 10 (set (reg:DI 127)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 20 [0x14])) [0 in_6(D)->templateHash+16 S8 A32])) EACommands.c:1117 -1
     (nil))
(insn 100 99 101 10 (set (mem/j:DI (plus:DI (reg/f:DI 123)
                (const_int 158 [0x9e])) [0 session_9->u1.templateHash+16 S8 A16])
        (reg:DI 127)) EACommands.c:1117 -1
     (nil))
(insn 101 100 102 10 (set (reg:DI 128)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 28 [0x1c])) [0 in_6(D)->templateHash+24 S8 A32])) EACommands.c:1117 -1
     (nil))
(insn 102 101 103 10 (set (mem/j:DI (plus:DI (reg/f:DI 123)
                (const_int 166 [0xa6])) [0 session_9->u1.templateHash+24 S8 A16])
        (reg:DI 128)) EACommands.c:1117 -1
     (nil))
(insn 103 102 104 10 (set (reg:DI 129)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 36 [0x24])) [0 in_6(D)->templateHash+32 S8 A32])) EACommands.c:1117 -1
     (nil))
(insn 104 103 105 10 (set (mem/j:DI (plus:DI (reg/f:DI 123)
                (const_int 174 [0xae])) [0 session_9->u1.templateHash+32 S8 A16])
        (reg:DI 129)) EACommands.c:1117 -1
     (nil))
(insn 105 104 106 10 (set (reg:DI 130)
        (mem/j:DI (plus:DI (reg/f:DI 124)
                (const_int 44 [0x2c])) [0 in_6(D)->templateHash+40 S8 A32])) EACommands.c:1117 -1
     (nil))
(insn 106 105 107 10 (set (mem/j:DI (plus:DI (reg/f:DI 123)
                (const_int 182 [0xb6])) [0 session_9->u1.templateHash+40 S8 A16])
        (reg:DI 130)) EACommands.c:1117 -1
     (nil))
(insn 107 106 108 10 (set (reg:HI 131)
        (mem/j:HI (plus:DI (reg/f:DI 124)
                (const_int 52 [0x34])) [0 in_6(D)->templateHash+48 S2 A32])) EACommands.c:1117 -1
     (nil))
(insn 108 107 109 10 (set (mem/j:HI (plus:DI (reg/f:DI 123)
                (const_int 190 [0xbe])) [0 session_9->u1.templateHash+48 S2 A16])
        (reg:HI 131)) EACommands.c:1117 -1
     (nil))
(insn 109 108 112 10 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 session+0 S8 A64])) EACommands.c:1118 -1
     (nil))
(insn 112 109 113 10 (set (reg:QI 135)
        (mem/j:QI (plus:DI (reg/f:DI 132)
                (const_int 1 [0x1])) [0 session_9->attributes.isTemplateSet+0 S1 A8])) EACommands.c:1118 -1
     (nil))
(insn 113 112 114 10 (parallel [
            (set (reg:QI 136)
                (ior:QI (reg:QI 135)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1118 -1
     (nil))
(insn 114 113 115 10 (set (mem/j:QI (plus:DI (reg/f:DI 132)
                (const_int 1 [0x1])) [0 session_9->attributes.isTemplateSet+0 S1 A8])
        (reg:QI 136)) EACommands.c:1118 -1
     (nil))
(insn 115 114 118 10 (set (reg:SI 87 [ D.13992 ])
        (const_int 0 [0])) EACommands.c:1119 -1
     (nil))
(code_label 118 115 119 12 129 "" [3 uses])
(note 119 118 120 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 124 12 (set (reg:SI 105 [ <retval> ])
        (reg:SI 87 [ D.13992 ])) -1
     (nil))
(insn 124 120 125 12 (set (reg/i:SI 0 ax)
        (reg:SI 105 [ <retval> ])) EACommands.c:1120 -1
     (nil))
(insn 125 124 126 12 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.13999+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:1120 -1
     (nil))
(jump_insn 126 125 132 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) EACommands.c:1120 -1
     (nil)
 -> 129)
(note 132 126 127 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(call_insn 127 132 128 14 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:1120 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 128 127 129)
(code_label 129 128 133 15 130 "" [1 uses])
(note 133 129 130 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 130 133 0 15 (use (reg/i:SI 0 ax)) EACommands.c:1120 -1
     (nil))

;; Function TPM2_PolicyAuthorizeNV (TPM2_PolicyAuthorizeNV, funcdef_no=21, decl_uid=13183, cgraph_uid=21, symbol_order=21)

Partition 4: size 54 align 16
	name
Partition 6: size 50 align 16
	nvTemp
Partition 5: size 50 align 16
	policyInNv
Partition 1: size 8 align 8
	session_13
Partition 0: size 8 align 8
	nvIndex_9
Partition 7: size 8 align 8
	buffer
Partition 2: size 4 align 4
	result_20
Partition 8: size 4 align 4
	size
Partition 3: size 4 align 4
	locator

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 45 from 16 to 17.
Redirecting jump 90 from 16 to 17.
Redirecting jump 101 from 16 to 17.
Redirecting jump 121 from 16 to 17.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.
Removing jump 149.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) EACommands.c:1131 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.14008+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1131 -1
     (nil))
(insn 7 4 8 2 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 in+0 S8 A64])) EACommands.c:1135 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 89 [ D.14002 ])
        (mem/j:SI (plus:DI (reg/f:DI 110)
                (const_int 4 [0x4])) [0 in_6(D)->nvIndex+0 S4 A32])) EACommands.c:1135 -1
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -228 [0xffffffffffffff1c])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1135 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 111)) EACommands.c:1135 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (reg:SI 89 [ D.14002 ])) EACommands.c:1135 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvGetIndexInfo") [flags 0x41]  <function_decl 0x7f3043ed4bd0 NvGetIndexInfo>) [0 NvGetIndexInfo S1 A8])
            (const_int 0 [0]))) EACommands.c:1135 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 112)
        (reg:DI 0 ax)) EACommands.c:1135 -1
     (nil))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 nvIndex+0 S8 A64])
        (reg:DI 112)) EACommands.c:1135 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1139 -1
     (nil))
(insn 16 15 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [0 buffer+0 S8 A64])
        (reg:DI 113)) EACommands.c:1139 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 in+0 S8 A64])) EACommands.c:1143 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 90 [ D.14002 ])
        (mem/j:SI (plus:DI (reg/f:DI 114)
                (const_int 8 [0x8])) [0 in_6(D)->policySession+0 S4 A32])) EACommands.c:1143 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 5 di)
        (reg:SI 90 [ D.14002 ])) EACommands.c:1143 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SessionGet") [flags 0x41]  <function_decl 0x7f3043ecb6c0 SessionGet>) [0 SessionGet S1 A8])
            (const_int 0 [0]))) EACommands.c:1143 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 115)
        (reg:DI 0 ax)) EACommands.c:1143 -1
     (nil))
(insn 22 21 23 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [0 session+0 S8 A64])
        (reg:DI 115)) EACommands.c:1143 -1
     (nil))
(insn 23 22 24 2 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [0 session+0 S8 A64])) EACommands.c:1145 -1
     (nil))
(insn 24 23 25 2 (set (reg:QI 91 [ D.14003 ])
        (mem:QI (reg/f:DI 116) [0 *session_13+0 S1 A64])) EACommands.c:1145 -1
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg:QI 92 [ D.14003 ])
                (and:QI (reg:QI 91 [ D.14003 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1145 -1
     (nil))
(insn 26 25 27 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ D.14003 ])
            (const_int 0 [0]))) EACommands.c:1145 -1
     (nil))
(jump_insn 27 26 28 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) EACommands.c:1145 -1
     (nil)
 -> 123)
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 nvIndex+0 S8 A64])) EACommands.c:1151 -1
     (nil))
(insn 30 29 31 4 (set (reg:SI 93 [ D.14002 ])
        (mem/j:SI (plus:DI (reg/f:DI 117)
                (const_int 8 [0x8])) [0 nvIndex_9->publicArea.attributes+0 S4 A32])) EACommands.c:1151 -1
     (nil))
(insn 31 30 32 4 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 in+0 S8 A64])) EACommands.c:1151 -1
     (nil))
(insn 32 31 33 4 (set (reg:SI 94 [ D.14002 ])
        (mem/j:SI (plus:DI (reg/f:DI 118)
                (const_int 4 [0x4])) [0 in_6(D)->nvIndex+0 S4 A32])) EACommands.c:1151 -1
     (nil))
(insn 33 32 34 4 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 in+0 S8 A64])) EACommands.c:1151 -1
     (nil))
(insn 34 33 35 4 (set (reg:SI 95 [ D.14002 ])
        (mem/j:SI (reg/f:DI 119) [0 in_6(D)->authHandle+0 S4 A32])) EACommands.c:1151 -1
     (nil))
(insn 35 34 36 4 (set (reg:SI 1 dx)
        (reg:SI 93 [ D.14002 ])) EACommands.c:1151 -1
     (nil))
(insn 36 35 37 4 (set (reg:SI 4 si)
        (reg:SI 94 [ D.14002 ])) EACommands.c:1151 -1
     (nil))
(insn 37 36 38 4 (set (reg:SI 5 di)
        (reg:SI 95 [ D.14002 ])) EACommands.c:1151 -1
     (nil))
(call_insn 38 37 39 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvReadAccessChecks") [flags 0x41]  <function_decl 0x7f3043edc1b0 NvReadAccessChecks>) [0 NvReadAccessChecks S1 A8])
            (const_int 0 [0]))) EACommands.c:1151 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 39 38 40 4 (set (reg:SI 120)
        (reg:SI 0 ax)) EACommands.c:1151 -1
     (nil))
(insn 40 39 41 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [0 result+0 S4 A32])
        (reg:SI 120)) EACommands.c:1151 -1
     (nil))
(insn 41 40 42 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -220 [0xffffffffffffff24])) [0 result+0 S4 A32])
            (const_int 0 [0]))) EACommands.c:1153 -1
     (nil))
(jump_insn 42 41 43 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) EACommands.c:1153 -1
     (nil)
 -> 47)
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (reg:SI 87 [ D.14000 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [0 result+0 S4 A32])) EACommands.c:1154 -1
     (nil))
(jump_insn 45 44 46 5 (set (pc)
        (label_ref:DI 146)) EACommands.c:1154 654 {jump}
     (nil)
 -> 146)
(barrier 46 45 47)
(code_label 47 46 48 6 133 "" [1 uses])
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 6 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 nvIndex+0 S8 A64])) EACommands.c:1156 -1
     (nil))
(insn 50 49 51 6 (set (reg:HI 96 [ D.14004 ])
        (mem/j:HI (plus:DI (reg/f:DI 121)
                (const_int 62 [0x3e])) [0 nvIndex_9->publicArea.dataSize+0 S2 A16])) EACommands.c:1156 -1
     (nil))
(insn 51 50 52 6 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 96 [ D.14004 ])
            (const_int 49 [0x31]))) EACommands.c:1156 -1
     (nil))
(jump_insn 52 51 53 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) EACommands.c:1156 -1
     (nil)
 -> 59)
(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 7 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 nvIndex+0 S8 A64])) EACommands.c:1156 -1
     (nil))
(insn 55 54 56 7 (set (reg:HI 97 [ D.14004 ])
        (mem/j:HI (plus:DI (reg/f:DI 122)
                (const_int 62 [0x3e])) [0 nvIndex_9->publicArea.dataSize+0 S2 A16])) EACommands.c:1156 -1
     (nil))
(insn 56 55 57 7 (set (reg:SI 88 [ D.14001 ])
        (zero_extend:SI (reg:HI 97 [ D.14004 ]))) EACommands.c:1156 -1
     (nil))
(jump_insn 57 56 58 7 (set (pc)
        (label_ref 62)) -1
     (nil)
 -> 62)
(barrier 58 57 59)
(code_label 59 58 60 8 135 "" [1 uses])
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 8 (set (reg:SI 88 [ D.14001 ])
        (const_int 50 [0x32])) EACommands.c:1156 -1
     (nil))
(code_label 62 61 63 9 136 "" [1 uses])
(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 size+0 S4 A64])
        (reg:SI 88 [ D.14001 ])) EACommands.c:1156 -1
     (nil))
(insn 65 64 66 9 (set (reg:SI 98 [ D.14005 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [0 size+0 S4 A64])) EACommands.c:1157 -1
     (nil))
(insn 66 65 67 9 (set (reg:SI 99 [ D.14005 ])
        (zero_extend:SI (subreg:HI (reg:SI 98 [ D.14005 ]) 0))) EACommands.c:1157 -1
     (nil))
(insn 67 66 68 9 (set (reg:SI 100 [ D.14002 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -228 [0xffffffffffffff1c])) [0 locator+0 S4 A32])) EACommands.c:1157 -1
     (nil))
(insn 68 67 69 9 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1157 -1
     (nil))
(insn 69 68 70 9 (set (reg:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [0 nvIndex+0 S8 A64])) EACommands.c:1157 -1
     (nil))
(insn 70 69 71 9 (set (reg:DI 37 r8)
        (reg:DI 123)) EACommands.c:1157 -1
     (nil))
(insn 71 70 72 9 (set (reg:SI 2 cx)
        (reg:SI 99 [ D.14005 ])) EACommands.c:1157 -1
     (nil))
(insn 72 71 73 9 (set (reg:SI 1 dx)
        (const_int 0 [0])) EACommands.c:1157 -1
     (nil))
(insn 73 72 74 9 (set (reg:SI 4 si)
        (reg:SI 100 [ D.14002 ])) EACommands.c:1157 -1
     (nil))
(insn 74 73 75 9 (set (reg:DI 5 di)
        (reg:DI 124)) EACommands.c:1157 -1
     (nil))
(call_insn 75 74 76 9 (call (mem:QI (symbol_ref:DI ("NvGetIndexData") [flags 0x41]  <function_decl 0x7f3043ed4870 NvGetIndexData>) [0 NvGetIndexData S1 A8])
        (const_int 0 [0])) EACommands.c:1157 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 76 75 77 9 (parallel [
            (set (reg:DI 125)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1162 -1
     (nil))
(insn 77 76 78 9 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -216 [0xffffffffffffff28])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1162 -1
     (nil))
(insn 78 77 79 9 (parallel [
            (set (reg:DI 127)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1162 -1
     (nil))
(insn 79 78 80 9 (set (reg:SI 2 cx)
        (const_int 0 [0])) EACommands.c:1162 -1
     (nil))
(insn 80 79 81 9 (set (reg:DI 1 dx)
        (reg:DI 125)) EACommands.c:1162 -1
     (nil))
(insn 81 80 82 9 (set (reg:DI 4 si)
        (reg:DI 126)) EACommands.c:1162 -1
     (nil))
(insn 82 81 83 9 (set (reg:DI 5 di)
        (reg:DI 127)) EACommands.c:1162 -1
     (nil))
(call_insn 83 82 84 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TPMT_HA_Unmarshal") [flags 0x41]  <function_decl 0x7f3043f430d8 TPMT_HA_Unmarshal>) [0 TPMT_HA_Unmarshal S1 A8])
            (const_int 0 [0]))) EACommands.c:1162 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 84 83 85 9 (set (reg:SI 128)
        (reg:SI 0 ax)) EACommands.c:1162 -1
     (nil))
(insn 85 84 86 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [0 result+0 S4 A32])
        (reg:SI 128)) EACommands.c:1162 -1
     (nil))
(insn 86 85 87 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -220 [0xffffffffffffff24])) [0 result+0 S4 A32])
            (const_int 0 [0]))) EACommands.c:1163 -1
     (nil))
(jump_insn 87 86 88 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) EACommands.c:1163 -1
     (nil)
 -> 92)
(note 88 87 89 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 10 (set (reg:SI 87 [ D.14000 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [0 result+0 S4 A32])) EACommands.c:1164 -1
     (nil))
(jump_insn 90 89 91 10 (set (pc)
        (label_ref:DI 146)) EACommands.c:1164 654 {jump}
     (nil)
 -> 146)
(barrier 91 90 92)
(code_label 92 91 93 11 137 "" [1 uses])
(note 93 92 94 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 11 (set (reg:HI 101 [ D.14004 ])
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [0 policyInNv.hashAlg+0 S2 A64])) EACommands.c:1166 -1
     (nil))
(insn 95 94 96 11 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [0 session+0 S8 A64])) EACommands.c:1166 -1
     (nil))
(insn 96 95 97 11 (set (reg:HI 102 [ D.14004 ])
        (mem/j:HI (plus:DI (reg/f:DI 129)
                (const_int 32 [0x20])) [0 session_13->authHashAlg+0 S2 A64])) EACommands.c:1166 -1
     (nil))
(insn 97 96 98 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 101 [ D.14004 ])
            (reg:HI 102 [ D.14004 ]))) EACommands.c:1166 -1
     (nil))
(jump_insn 98 97 99 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) EACommands.c:1166 -1
     (nil)
 -> 103)
(note 99 98 100 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 12 (set (reg:SI 87 [ D.14000 ])
        (const_int 131 [0x83])) EACommands.c:1167 -1
     (nil))
(jump_insn 101 100 102 12 (set (pc)
        (label_ref:DI 146)) EACommands.c:1167 654 {jump}
     (nil)
 -> 146)
(barrier 102 101 103)
(code_label 103 102 104 13 138 "" [1 uses])
(note 104 103 105 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 13 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [0 session+0 S8 A64])) EACommands.c:1171 -1
     (nil))
(insn 106 105 107 13 (set (reg:HI 103 [ D.14004 ])
        (mem/j:HI (plus:DI (reg/f:DI 130)
                (const_int 196 [0xc4])) [0 session_13->u2.policyDigest.t.size+0 S2 A32])) EACommands.c:1171 -1
     (nil))
(insn 107 106 108 13 (set (reg:SI 104 [ D.14002 ])
        (zero_extend:SI (reg:HI 103 [ D.14004 ]))) EACommands.c:1170 -1
     (nil))
(insn 108 107 109 13 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [0 session+0 S8 A64])) EACommands.c:1170 -1
     (nil))
(insn 109 108 110 13 (parallel [
            (set (reg/f:DI 105 [ D.14006 ])
                (plus:DI (reg/f:DI 131)
                    (const_int 198 [0xc6])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1170 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [0 session+0 S8 A64])
            (const_int 198 [0xc6]))
        (nil)))
(insn 110 109 111 13 (parallel [
            (set (reg:DI 132)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1170 -1
     (nil))
(insn 111 110 112 13 (parallel [
            (set (reg:DI 133)
                (plus:DI (reg:DI 132)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1170 -1
     (nil))
(insn 112 111 113 13 (set (reg:SI 1 dx)
        (reg:SI 104 [ D.14002 ])) EACommands.c:1170 -1
     (nil))
(insn 113 112 114 13 (set (reg:DI 4 si)
        (reg/f:DI 105 [ D.14006 ])) EACommands.c:1170 -1
     (nil))
(insn 114 113 115 13 (set (reg:DI 5 di)
        (reg:DI 133)) EACommands.c:1170 -1
     (nil))
(call_insn 115 114 116 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("MemoryEqual") [flags 0x41]  <function_decl 0x7f3043f82510 MemoryEqual>) [0 MemoryEqual S1 A8])
            (const_int 0 [0]))) EACommands.c:1170 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 116 115 117 13 (set (reg:SI 106 [ D.14005 ])
        (reg:SI 0 ax)) EACommands.c:1170 -1
     (nil))
(insn 117 116 118 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 106 [ D.14005 ])
            (const_int 0 [0]))) EACommands.c:1170 -1
     (nil))
(jump_insn 118 117 119 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) EACommands.c:1170 -1
     (nil)
 -> 123)
(note 119 118 120 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 14 (set (reg:SI 87 [ D.14000 ])
        (const_int 132 [0x84])) EACommands.c:1172 -1
     (nil))
(jump_insn 121 120 122 14 (set (pc)
        (label_ref:DI 146)) EACommands.c:1172 654 {jump}
     (nil)
 -> 146)
(barrier 122 121 123)
(code_label 123 122 124 15 132 "" [2 uses])
(note 124 123 125 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 15 (set (reg:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [0 session+0 S8 A64])) EACommands.c:1176 -1
     (nil))
(insn 126 125 127 15 (set (reg:DI 5 di)
        (reg:DI 134)) EACommands.c:1176 -1
     (nil))
(call_insn 127 126 128 15 (call (mem:QI (symbol_ref:DI ("PolicyDigestClear") [flags 0x41]  <function_decl 0x7f3043fd60d8 PolicyDigestClear>) [0 PolicyDigestClear S1 A8])
        (const_int 0 [0])) EACommands.c:1176 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 128 127 129 15 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [0 in+0 S8 A64])) EACommands.c:1178 -1
     (nil))
(insn 129 128 130 15 (set (reg:SI 107 [ D.14002 ])
        (mem/j:SI (plus:DI (reg/f:DI 135)
                (const_int 4 [0x4])) [0 in_6(D)->nvIndex+0 S4 A32])) EACommands.c:1178 -1
     (nil))
(insn 130 129 131 15 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) EACommands.c:1178 -1
     (nil))
(insn 131 130 132 15 (set (reg:DI 4 si)
        (reg:DI 136)) EACommands.c:1178 -1
     (nil))
(insn 132 131 133 15 (set (reg:SI 5 di)
        (reg:SI 107 [ D.14002 ])) EACommands.c:1178 -1
     (nil))
(call_insn 133 132 134 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("EntityGetName") [flags 0x41]  <function_decl 0x7f3043ecb0d8 EntityGetName>) [0 EntityGetName S1 A8])
            (const_int 0 [0]))) EACommands.c:1178 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 134 133 135 15 (set (reg/f:DI 108 [ D.14007 ])
        (reg:DI 0 ax)) EACommands.c:1178 -1
     (nil))
(insn 135 134 136 15 (set (reg:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [0 session+0 S8 A64])) EACommands.c:1178 -1
     (nil))
(insn 136 135 137 15 (set (reg:DI 38 r9)
        (reg:DI 137)) EACommands.c:1178 -1
     (nil))
(insn 137 136 138 15 (set (reg:DI 37 r8)
        (const_int 0 [0])) EACommands.c:1178 -1
     (nil))
(insn 138 137 139 15 (set (reg:DI 2 cx)
        (const_int 0 [0])) EACommands.c:1178 -1
     (nil))
(insn 139 138 140 15 (set (reg:DI 1 dx)
        (const_int 0 [0])) EACommands.c:1178 -1
     (nil))
(insn 140 139 141 15 (set (reg:DI 4 si)
        (reg/f:DI 108 [ D.14007 ])) EACommands.c:1178 -1
     (nil))
(insn 141 140 142 15 (set (reg:SI 5 di)
        (const_int 402 [0x192])) EACommands.c:1178 -1
     (nil))
(call_insn 142 141 143 15 (call (mem:QI (symbol_ref:DI ("PolicyContextUpdate") [flags 0x41]  <function_decl 0x7f3043fd1e58 PolicyContextUpdate>) [0 PolicyContextUpdate S1 A8])
        (const_int 0 [0])) EACommands.c:1178 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 143 142 146 15 (set (reg:SI 87 [ D.14000 ])
        (const_int 0 [0])) EACommands.c:1180 -1
     (nil))
(code_label 146 143 147 17 139 "" [4 uses])
(note 147 146 148 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 152 17 (set (reg:SI 109 [ <retval> ])
        (reg:SI 87 [ D.14000 ])) -1
     (nil))
(insn 152 148 153 17 (set (reg/i:SI 0 ax)
        (reg:SI 109 [ <retval> ])) EACommands.c:1181 -1
     (nil))
(insn 153 152 154 17 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.14008+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) EACommands.c:1181 -1
     (nil))
(jump_insn 154 153 160 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) EACommands.c:1181 -1
     (nil)
 -> 157)
(note 160 154 155 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(call_insn 155 160 156 19 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f30437ad798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) EACommands.c:1181 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 156 155 157)
(code_label 157 156 161 20 140 "" [1 uses])
(note 161 157 158 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 158 161 0 20 (use (reg/i:SI 0 ax)) EACommands.c:1181 -1
     (nil))
