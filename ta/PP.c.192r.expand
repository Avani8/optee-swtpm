
;; Function PhysicalPresencePreInstall_Init (PhysicalPresencePreInstall_Init, funcdef_no=2, decl_uid=11901, cgraph_uid=2, symbol_order=2)

Partition 0: size 2 align 2
	commandIndex_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Merging block 11 into block 9...
Merged blocks 9 and 11.
Merged 9 and 11 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 1 dx)
        (const_int 15 [0xf])) PP.c:81 -1
     (nil))
(insn 6 5 7 2 (set (reg:SI 4 si)
        (const_int 0 [0])) PP.c:81 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("gp") [flags 0x40]  <var_decl 0x7f77a13c5ea0 gp>)
                (const_int 852 [0x354])))) PP.c:81 -1
     (nil))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref:DI ("MemorySet") [flags 0x41]  <function_decl 0x7f77a14e2870 MemorySet>) [0 MemorySet S1 A8])
        (const_int 0 [0])) PP.c:81 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 9 8 10 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16])
        (const_int 0 [0])) PP.c:83 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (label_ref 39)) PP.c:83 -1
     (nil)
 -> 39)
(barrier 11 10 41)
(code_label 41 11 12 4 4 "" [1 uses])
(note 12 41 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:SI 87 [ D.12940 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16]))) PP.c:85 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 97)
        (sign_extend:DI (reg:SI 87 [ D.12940 ]))) PP.c:85 -1
     (nil))
(insn 15 14 16 4 (set (reg:HI 88 [ D.12941 ])
        (mem/u/j:HI (plus:DI (mult:DI (reg:DI 97)
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("s_commandAttributes") [flags 0x40]  <var_decl 0x7f77a1407e10 s_commandAttributes>)) [0 s_commandAttributes S2 A16])) PP.c:85 -1
     (nil))
(insn 16 15 17 4 (set (reg:SI 89 [ D.12940 ])
        (zero_extend:SI (reg:HI 88 [ D.12941 ]))) PP.c:85 -1
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg:SI 90 [ D.12940 ])
                (and:SI (reg:SI 89 [ D.12940 ])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) PP.c:85 -1
     (nil))
(insn 18 17 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.12940 ])
            (const_int 0 [0]))) PP.c:85 -1
     (nil))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) PP.c:85 -1
     (nil)
 -> 34)
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg:SI 91 [ D.12940 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16]))) PP.c:86 -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 98)
        (sign_extend:DI (reg:SI 91 [ D.12940 ]))) PP.c:86 -1
     (nil))
(insn 23 22 24 5 (set (reg:HI 92 [ D.12941 ])
        (mem/u/j:HI (plus:DI (mult:DI (reg:DI 98)
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("s_commandAttributes") [flags 0x40]  <var_decl 0x7f77a1407e10 s_commandAttributes>)) [0 s_commandAttributes S2 A16])) PP.c:86 -1
     (nil))
(insn 24 23 25 5 (set (reg:SI 93 [ D.12940 ])
        (zero_extend:SI (reg:HI 92 [ D.12941 ]))) PP.c:86 -1
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg:SI 94 [ D.12940 ])
                (and:SI (reg:SI 93 [ D.12940 ])
                    (const_int 4096 [0x1000])))
            (clobber (reg:CC 17 flags))
        ]) PP.c:86 -1
     (nil))
(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.12940 ])
            (const_int 0 [0]))) PP.c:86 -1
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) PP.c:86 -1
     (nil)
 -> 34)
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg:SI 95 [ D.12942 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16]))) PP.c:87 -1
     (nil))
(insn 30 29 31 6 (set (reg:SI 1 dx)
        (const_int 15 [0xf])) PP.c:87 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("gp") [flags 0x40]  <var_decl 0x7f77a13c5ea0 gp>)
                (const_int 852 [0x354])))) PP.c:87 -1
     (nil))
(insn 32 31 33 6 (set (reg:SI 5 di)
        (reg:SI 95 [ D.12942 ])) PP.c:87 -1
     (nil))
(call_insn 33 32 34 6 (call (mem:QI (symbol_ref:DI ("SetBit") [flags 0x41]  <function_decl 0x7f77a14deca8 SetBit>) [0 SetBit S1 A8])
        (const_int 0 [0])) PP.c:87 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(code_label 34 33 35 7 3 "" [2 uses])
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (set (reg:HI 96 [ D.12941 ])
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16])) PP.c:83 -1
     (nil))
(insn 37 36 38 7 (parallel [
            (set (reg:HI 99)
                (plus:HI (reg:HI 96 [ D.12941 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) PP.c:83 -1
     (nil))
(insn 38 37 39 7 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16])
        (reg:HI 99)) PP.c:83 -1
     (nil))
(code_label 39 38 40 8 2 "" [1 uses])
(note 40 39 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 40 43 8 (set (reg:CC 17 flags)
        (compare:CC (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16])
            (const_int 112 [0x70]))) PP.c:83 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) PP.c:83 -1
     (nil)
 -> 41)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("gp") [flags 0x40]  <var_decl 0x7f77a13c5ea0 gp>)
                (const_int 852 [0x354])))) PP.c:90 -1
     (nil))
(insn 46 45 47 9 (set (reg:SI 4 si)
        (const_int 15 [0xf])) PP.c:90 -1
     (nil))
(insn 47 46 48 9 (set (reg:SI 5 di)
        (const_int 852 [0x354])) PP.c:90 -1
     (nil))
(call_insn 48 47 53 9 (call (mem:QI (symbol_ref:DI ("NvWrite") [flags 0x41]  <function_decl 0x7f77a142ebd0 NvWrite>) [0 NvWrite S1 A8])
        (const_int 0 [0])) PP.c:90 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 53 48 0 9 (const_int 0 [0]) PP.c:91 -1
     (nil))

;; Function PhysicalPresenceCommandSet (PhysicalPresenceCommandSet, funcdef_no=3, decl_uid=11903, cgraph_uid=3, symbol_order=3)

Partition 0: size 2 align 2
	commandIndex_6

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 9 failed.
Forwarding edge 2->4 to 9 failed.
Redirecting jump 14 from 8 to 9.
Edge 5->7 redirected to 9
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 9 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 commandCode+0 S4 A32])
        (reg:SI 5 di [ commandCode ])) PP.c:99 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 commandCode+0 S4 A32])) PP.c:100 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 5 di)
        (reg:SI 92)) PP.c:100 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CommandCodeToCommandIndex") [flags 0x41]  <function_decl 0x7f77a1447a20 CommandCodeToCommandIndex>) [0 CommandCodeToCommandIndex S1 A8])
            (const_int 0 [0]))) PP.c:100 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:HI 93)
        (reg:HI 0 ax)) PP.c:100 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16])
        (reg:HI 93)) PP.c:100 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16])
            (const_int -1 [0xffffffffffffffff]))) PP.c:102 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) PP.c:102 -1
     (nil)
 -> 16)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 14 13 15 4 (set (pc)
        (label_ref:DI 35)) PP.c:103 654 {jump}
     (nil)
 -> 35)
(barrier 15 14 16)
(code_label 16 15 17 5 7 "" [1 uses])
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg:SI 87 [ D.12943 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16]))) PP.c:105 -1
     (nil))
(insn 19 18 20 5 (set (reg:DI 94)
        (sign_extend:DI (reg:SI 87 [ D.12943 ]))) PP.c:105 -1
     (nil))
(insn 20 19 21 5 (set (reg:HI 88 [ D.12944 ])
        (mem/u/j:HI (plus:DI (mult:DI (reg:DI 94)
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("s_commandAttributes") [flags 0x40]  <var_decl 0x7f77a1407e10 s_commandAttributes>)) [0 s_commandAttributes S2 A16])) PP.c:105 -1
     (nil))
(insn 21 20 22 5 (set (reg:SI 89 [ D.12943 ])
        (zero_extend:SI (reg:HI 88 [ D.12944 ]))) PP.c:105 -1
     (nil))
(insn 22 21 23 5 (parallel [
            (set (reg:SI 90 [ D.12943 ])
                (and:SI (reg:SI 89 [ D.12943 ])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) PP.c:105 -1
     (nil))
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.12943 ])
            (const_int 0 [0]))) PP.c:105 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 35)
            (pc))) PP.c:105 612 {*jcc_1}
     (nil)
 -> 35)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg:SI 91 [ D.12945 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16]))) PP.c:106 -1
     (nil))
(insn 27 26 28 6 (set (reg:SI 1 dx)
        (const_int 15 [0xf])) PP.c:106 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("gp") [flags 0x40]  <var_decl 0x7f77a13c5ea0 gp>)
                (const_int 852 [0x354])))) PP.c:106 -1
     (nil))
(insn 29 28 30 6 (set (reg:SI 5 di)
        (reg:SI 91 [ D.12945 ])) PP.c:106 -1
     (nil))
(call_insn 30 29 37 6 (call (mem:QI (symbol_ref:DI ("SetBit") [flags 0x41]  <function_decl 0x7f77a14deca8 SetBit>) [0 SetBit S1 A8])
        (const_int 0 [0])) PP.c:106 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 37 30 35 6 (const_int 0 [0]) PP.c:107 -1
     (nil))
(code_label 35 37 36 9 6 "" [2 uses])
(note 36 35 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

;; Function PhysicalPresenceCommandClear (PhysicalPresenceCommandClear, funcdef_no=4, decl_uid=11905, cgraph_uid=4, symbol_order=4)

Partition 0: size 2 align 2
	commandIndex_6

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 9 failed.
Forwarding edge 2->4 to 9 failed.
Redirecting jump 14 from 8 to 9.
Edge 5->7 redirected to 9
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 9 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 commandCode+0 S4 A32])
        (reg:SI 5 di [ commandCode ])) PP.c:115 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 commandCode+0 S4 A32])) PP.c:116 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 5 di)
        (reg:SI 92)) PP.c:116 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CommandCodeToCommandIndex") [flags 0x41]  <function_decl 0x7f77a1447a20 CommandCodeToCommandIndex>) [0 CommandCodeToCommandIndex S1 A8])
            (const_int 0 [0]))) PP.c:116 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:HI 93)
        (reg:HI 0 ax)) PP.c:116 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16])
        (reg:HI 93)) PP.c:116 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16])
            (const_int -1 [0xffffffffffffffff]))) PP.c:118 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) PP.c:118 -1
     (nil)
 -> 16)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 14 13 15 4 (set (pc)
        (label_ref:DI 35)) PP.c:119 654 {jump}
     (nil)
 -> 35)
(barrier 15 14 16)
(code_label 16 15 17 5 13 "" [1 uses])
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg:SI 87 [ D.12946 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16]))) PP.c:121 -1
     (nil))
(insn 19 18 20 5 (set (reg:DI 94)
        (sign_extend:DI (reg:SI 87 [ D.12946 ]))) PP.c:121 -1
     (nil))
(insn 20 19 21 5 (set (reg:HI 88 [ D.12947 ])
        (mem/u/j:HI (plus:DI (mult:DI (reg:DI 94)
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("s_commandAttributes") [flags 0x40]  <var_decl 0x7f77a1407e10 s_commandAttributes>)) [0 s_commandAttributes S2 A16])) PP.c:121 -1
     (nil))
(insn 21 20 22 5 (set (reg:SI 89 [ D.12946 ])
        (zero_extend:SI (reg:HI 88 [ D.12947 ]))) PP.c:121 -1
     (nil))
(insn 22 21 23 5 (parallel [
            (set (reg:SI 90 [ D.12946 ])
                (and:SI (reg:SI 89 [ D.12946 ])
                    (const_int 4096 [0x1000])))
            (clobber (reg:CC 17 flags))
        ]) PP.c:121 -1
     (nil))
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.12946 ])
            (const_int 0 [0]))) PP.c:121 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 35)
            (pc))) PP.c:121 612 {*jcc_1}
     (nil)
 -> 35)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg:SI 91 [ D.12948 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16]))) PP.c:122 -1
     (nil))
(insn 27 26 28 6 (set (reg:SI 1 dx)
        (const_int 15 [0xf])) PP.c:122 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("gp") [flags 0x40]  <var_decl 0x7f77a13c5ea0 gp>)
                (const_int 852 [0x354])))) PP.c:122 -1
     (nil))
(insn 29 28 30 6 (set (reg:SI 5 di)
        (reg:SI 91 [ D.12948 ])) PP.c:122 -1
     (nil))
(call_insn 30 29 37 6 (call (mem:QI (symbol_ref:DI ("ClearBit") [flags 0x41]  <function_decl 0x7f77a14ded80 ClearBit>) [0 ClearBit S1 A8])
        (const_int 0 [0])) PP.c:122 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 37 30 35 6 (const_int 0 [0]) PP.c:123 -1
     (nil))
(code_label 35 37 36 9 12 "" [2 uses])
(note 36 35 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

;; Function PhysicalPresenceIsRequired (PhysicalPresenceIsRequired, funcdef_no=5, decl_uid=11907, cgraph_uid=5, symbol_order=5)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 16.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg:SI 90)
        (reg:SI 5 di [ commandIndex ])) PP.c:134 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 commandIndex+0 S2 A32])
        (subreg:HI (reg:SI 90) 0)) PP.c:134 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 87 [ D.12949 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 commandIndex+0 S2 A32]))) PP.c:136 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 1 dx)
        (const_int 15 [0xf])) PP.c:136 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("gp") [flags 0x40]  <var_decl 0x7f77a13c5ea0 gp>)
                (const_int 852 [0x354])))) PP.c:136 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 87 [ D.12949 ])) PP.c:136 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TestBit") [flags 0x41]  <function_decl 0x7f77a14debd0 TestBit>) [0 TestBit S1 A8])
            (const_int 0 [0]))) PP.c:136 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 12 11 15 2 (set (reg:SI 88 [ D.12950 ])
        (reg:SI 0 ax)) PP.c:136 -1
     (nil))
(insn 15 12 19 2 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.12950 ])) PP.c:136 -1
     (nil))
(insn 19 15 20 2 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) PP.c:137 -1
     (nil))
(insn 20 19 0 2 (use (reg/i:SI 0 ax)) PP.c:137 -1
     (nil))

;; Function PhysicalPresenceCapGetCCList (PhysicalPresenceCapGetCCList, funcdef_no=6, decl_uid=11911, cgraph_uid=6, symbol_order=6)

Partition 1: size 2 align 2
	commandIndex_3
Partition 0: size 1 align 1
	more_2

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Removing jump 76.
Merging block 14 into block 12...
Merged blocks 12 and 14.
Merged 12 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 commandCode+0 S4 A32])
        (reg:SI 5 di [ commandCode ])) PP.c:150 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 count+0 S4 A32])
        (reg:SI 4 si [ count ])) PP.c:150 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 commandList+0 S8 A64])
        (reg:DI 1 dx [ commandList ])) PP.c:150 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3 [0xfffffffffffffffd])) [0 more+0 S1 A8])
        (const_int 0 [0])) PP.c:151 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 commandList+0 S8 A64])) PP.c:154 -1
     (nil))
(insn 10 9 11 2 (set (mem/j:SI (reg/f:DI 98) [0 commandList_9(D)->count+0 S4 A32])
        (const_int 0 [0])) PP.c:154 -1
     (nil))
(insn 11 10 12 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 count+0 S4 A32])
            (const_int 254 [0xfe]))) PP.c:156 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) PP.c:156 -1
     (nil)
 -> 15)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 count+0 S4 A32])
        (const_int 254 [0xfe])) PP.c:156 -1
     (nil))
(code_label 15 14 16 5 21 "" [1 uses])
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 commandCode+0 S4 A32])) PP.c:158 -1
     (nil))
(insn 18 17 19 5 (set (reg:SI 5 di)
        (reg:SI 99)) PP.c:158 -1
     (nil))
(call_insn 19 18 20 5 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("GetClosestCommandIndex") [flags 0x41]  <function_decl 0x7f77a1447948 GetClosestCommandIndex>) [0 GetClosestCommandIndex S1 A8])
            (const_int 0 [0]))) PP.c:158 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 20 19 21 5 (set (reg:HI 100)
        (reg:HI 0 ax)) PP.c:158 -1
     (nil))
(insn 21 20 22 5 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16])
        (reg:HI 100)) PP.c:158 -1
     (nil))
(jump_insn 22 21 23 5 (set (pc)
        (label_ref 65)) PP.c:158 -1
     (nil)
 -> 65)
(barrier 23 22 67)
(code_label 67 23 24 6 26 "" [1 uses])
(note 24 67 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 6 (set (reg:SI 87 [ D.12951 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16]))) PP.c:162 -1
     (nil))
(insn 26 25 27 6 (set (reg:SI 5 di)
        (reg:SI 87 [ D.12951 ])) PP.c:162 -1
     (nil))
(call_insn 27 26 28 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PhysicalPresenceIsRequired") [flags 0x3]  <function_decl 0x7f77a14d9870 PhysicalPresenceIsRequired>) [0 PhysicalPresenceIsRequired S1 A8])
            (const_int 0 [0]))) PP.c:162 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 28 27 29 6 (set (reg:SI 88 [ D.12951 ])
        (reg:SI 0 ax)) PP.c:162 -1
     (nil))
(insn 29 28 30 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.12951 ])
            (const_int 0 [0]))) PP.c:162 -1
     (nil))
(jump_insn 30 29 31 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) PP.c:162 -1
     (nil)
 -> 58)
(note 31 30 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 7 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 commandList+0 S8 A64])) PP.c:164 -1
     (nil))
(insn 33 32 34 7 (set (reg:SI 90 [ D.12952 ])
        (mem/j:SI (reg/f:DI 101) [0 commandList_9(D)->count+0 S4 A32])) PP.c:164 -1
     (nil))
(insn 34 33 35 7 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 90 [ D.12952 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 count+0 S4 A32]))) PP.c:164 -1
     (nil))
(jump_insn 35 34 36 7 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) PP.c:164 -1
     (nil)
 -> 53)
(note 36 35 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 8 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 commandList+0 S8 A64])) PP.c:168 -1
     (nil))
(insn 38 37 39 8 (set (reg:SI 91 [ D.12952 ])
        (mem/j:SI (reg/f:DI 102) [0 commandList_9(D)->count+0 S4 A32])) PP.c:168 -1
     (nil))
(insn 39 38 40 8 (set (reg:SI 92 [ D.12951 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16]))) PP.c:169 -1
     (nil))
(insn 40 39 41 8 (set (reg:SI 5 di)
        (reg:SI 92 [ D.12951 ])) PP.c:169 -1
     (nil))
(call_insn 41 40 42 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("GetCommandCode") [flags 0x41]  <function_decl 0x7f77a1447bd0 GetCommandCode>) [0 GetCommandCode S1 A8])
            (const_int 0 [0]))) PP.c:169 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 42 41 43 8 (set (reg:SI 93 [ D.12952 ])
        (reg:SI 0 ax)) PP.c:169 -1
     (nil))
(insn 43 42 44 8 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 commandList+0 S8 A64])) PP.c:169 -1
     (nil))
(insn 44 43 45 8 (set (reg:DI 104)
        (zero_extend:DI (reg:SI 91 [ D.12952 ]))) PP.c:169 -1
     (nil))
(insn 45 44 46 8 (set (mem/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 104)
                        (const_int 4 [0x4]))
                    (reg/f:DI 103))
                (const_int 4 [0x4])) [0 commandList_9(D)->commandCodes S4 A32])
        (reg:SI 93 [ D.12952 ])) PP.c:169 -1
     (nil))
(insn 46 45 47 8 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 commandList+0 S8 A64])) PP.c:170 -1
     (nil))
(insn 47 46 48 8 (set (reg:SI 94 [ D.12952 ])
        (mem/j:SI (reg/f:DI 105) [0 commandList_9(D)->count+0 S4 A32])) PP.c:170 -1
     (nil))
(insn 48 47 49 8 (parallel [
            (set (reg:SI 95 [ D.12952 ])
                (plus:SI (reg:SI 94 [ D.12952 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) PP.c:170 -1
     (nil))
(insn 49 48 50 8 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 commandList+0 S8 A64])) PP.c:170 -1
     (nil))
(insn 50 49 51 8 (set (mem/j:SI (reg/f:DI 106) [0 commandList_9(D)->count+0 S4 A32])
        (reg:SI 95 [ D.12952 ])) PP.c:170 -1
     (nil))
(jump_insn 51 50 52 8 (set (pc)
        (label_ref 58)) -1
     (nil)
 -> 58)
(barrier 52 51 53)
(code_label 53 52 54 9 24 "" [1 uses])
(note 54 53 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 9 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3 [0xfffffffffffffffd])) [0 more+0 S1 A8])
        (const_int 1 [0x1])) PP.c:176 -1
     (nil))
(jump_insn 56 55 57 9 (set (pc)
        (label_ref 70)) PP.c:177 -1
     (nil)
 -> 70)
(barrier 57 56 58)
(code_label 58 57 59 10 23 "" [2 uses])
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 10 (set (reg:SI 89 [ D.12951 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16]))) PP.c:160 -1
     (nil))
(insn 61 60 62 10 (set (reg:SI 5 di)
        (reg:SI 89 [ D.12951 ])) PP.c:160 -1
     (nil))
(call_insn 62 61 63 10 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("GetNextCommandIndex") [flags 0x41]  <function_decl 0x7f77a1447af8 GetNextCommandIndex>) [0 GetNextCommandIndex S1 A8])
            (const_int 0 [0]))) PP.c:160 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 63 62 64 10 (set (reg:HI 107)
        (reg:HI 0 ax)) PP.c:160 -1
     (nil))
(insn 64 63 65 10 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16])
        (reg:HI 107)) PP.c:160 -1
     (nil))
(code_label 65 64 66 11 22 "" [1 uses])
(note 66 65 68 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 68 66 69 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 commandIndex+0 S2 A16])
            (const_int -1 [0xffffffffffffffff]))) PP.c:158 -1
     (nil))
(jump_insn 69 68 70 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) PP.c:158 -1
     (nil)
 -> 67)
(code_label 70 69 71 12 25 "" [1 uses])
(note 71 70 72 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 75 12 (set (reg:QI 96 [ D.12953 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -3 [0xfffffffffffffffd])) [0 more+0 S1 A8])) PP.c:181 -1
     (nil))
(insn 75 72 79 12 (set (reg:QI 97 [ <retval> ])
        (reg:QI 96 [ D.12953 ])) PP.c:181 -1
     (nil))
(insn 79 75 80 12 (set (reg/i:QI 0 ax)
        (reg:QI 97 [ <retval> ])) PP.c:182 -1
     (nil))
(insn 80 79 0 12 (use (reg/i:QI 0 ax)) PP.c:182 -1
     (nil))
