
;; Function TPM2_HMAC_Start (TPM2_HMAC_Start, funcdef_no=2, decl_uid=12860, cgraph_uid=2, symbol_order=2)

Partition 2: size 8 align 8
	publicArea_9
Partition 1: size 8 align 8
	keyObject_8
Partition 0: size 2 align 2
	hashAlg_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 101.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) HashCommands.c:70 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) HashCommands.c:70 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) HashCommands.c:76 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.13118 ])
        (mem/j:SI (reg/f:DI 101) [0 in_5(D)->handle+0 S4 A32])) HashCommands.c:76 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13118 ])) HashCommands.c:76 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7f19d384a0d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) HashCommands.c:76 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 102)
        (reg:DI 0 ax)) HashCommands.c:76 -1
     (nil))
(insn 12 11 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 keyObject+0 S8 A64])
        (reg:DI 102)) HashCommands.c:76 -1
     (nil))
(insn 16 12 17 2 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 keyObject+0 S8 A64])) HashCommands.c:77 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg/f:DI 106)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:77 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 keyObject+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 publicArea+0 S8 A64])
        (reg:DI 105)) HashCommands.c:77 -1
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 publicArea+0 S8 A64])) HashCommands.c:79 -1
     (nil))
(insn 20 19 21 2 (set (reg:HI 89 [ D.13119 ])
        (mem/j:HI (reg/f:DI 107) [0 publicArea_9->type+0 S2 A32])) HashCommands.c:79 -1
     (nil))
(insn 21 20 22 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 89 [ D.13119 ])
            (const_int 8 [0x8]))) HashCommands.c:79 -1
     (nil))
(jump_insn 22 21 23 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) HashCommands.c:79 -1
     (nil)
 -> 27)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:SI 87 [ D.13117 ])
        (const_int 394 [0x18a])) HashCommands.c:80 -1
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (label_ref 98)) HashCommands.c:80 -1
     (nil)
 -> 98)
(barrier 26 25 27)
(code_label 27 26 28 5 2 "" [1 uses])
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 publicArea+0 S8 A64])) HashCommands.c:82 -1
     (nil))
(insn 30 29 31 5 (set (reg:SI 90 [ D.13118 ])
        (mem/j:SI (plus:DI (reg/f:DI 108)
                (const_int 4 [0x4])) [0 publicArea_9->objectAttributes+0 S4 A32])) HashCommands.c:82 -1
     (nil))
(insn 31 30 32 5 (parallel [
            (set (reg:SI 91 [ D.13118 ])
                (and:SI (reg:SI 90 [ D.13118 ])
                    (const_int 65536 [0x10000])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:82 -1
     (nil))
(insn 32 31 33 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.13118 ])
            (const_int 0 [0]))) HashCommands.c:82 -1
     (nil))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) HashCommands.c:82 -1
     (nil)
 -> 38)
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg:SI 87 [ D.13117 ])
        (const_int 386 [0x182])) HashCommands.c:84 -1
     (nil))
(jump_insn 36 35 37 6 (set (pc)
        (label_ref 98)) HashCommands.c:84 -1
     (nil)
 -> 98)
(barrier 37 36 38)
(code_label 38 37 39 7 4 "" [1 uses])
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 publicArea+0 S8 A64])) HashCommands.c:86 -1
     (nil))
(insn 41 40 42 7 (set (reg:SI 92 [ D.13118 ])
        (mem/j:SI (plus:DI (reg/f:DI 109)
                (const_int 4 [0x4])) [0 publicArea_9->objectAttributes+0 S4 A32])) HashCommands.c:86 -1
     (nil))
(insn 42 41 43 7 (parallel [
            (set (reg:SI 93 [ D.13118 ])
                (and:SI (reg:SI 92 [ D.13118 ])
                    (const_int 262144 [0x40000])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:86 -1
     (nil))
(insn 43 42 44 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.13118 ])
            (const_int 0 [0]))) HashCommands.c:86 -1
     (nil))
(jump_insn 44 43 45 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) HashCommands.c:86 -1
     (nil)
 -> 49)
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (set (reg:SI 87 [ D.13117 ])
        (const_int 412 [0x19c])) HashCommands.c:88 -1
     (nil))
(jump_insn 47 46 48 8 (set (pc)
        (label_ref 98)) HashCommands.c:88 -1
     (nil)
 -> 98)
(barrier 48 47 49)
(code_label 49 48 50 9 5 "" [1 uses])
(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 9 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 publicArea+0 S8 A64])) HashCommands.c:90 -1
     (nil))
(insn 52 51 53 9 (set (reg:HI 94 [ D.13119 ])
        (mem/j:HI (plus:DI (reg/f:DI 110)
                (const_int 60 [0x3c])) [0 publicArea_9->parameters.keyedHashDetail.scheme.scheme+0 S2 A32])) HashCommands.c:90 -1
     (nil))
(insn 53 52 54 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 94 [ D.13119 ])
            (const_int 16 [0x10]))) HashCommands.c:90 -1
     (nil))
(jump_insn 54 53 55 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) HashCommands.c:90 -1
     (nil)
 -> 61)
(note 55 54 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 10 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) HashCommands.c:92 -1
     (nil))
(insn 57 56 58 10 (set (reg:HI 112)
        (mem/j:HI (plus:DI (reg/f:DI 111)
                (const_int 54 [0x36])) [0 in_5(D)->hashAlg+0 S2 A16])) HashCommands.c:92 -1
     (nil))
(insn 58 57 59 10 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -18 [0xffffffffffffffee])) [0 hashAlg+0 S2 A16])
        (reg:HI 112)) HashCommands.c:92 -1
     (nil))
(jump_insn 59 58 60 10 (set (pc)
        (label_ref 77)) -1
     (nil)
 -> 77)
(barrier 60 59 61)
(code_label 61 60 62 11 6 "" [1 uses])
(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 11 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 publicArea+0 S8 A64])) HashCommands.c:97 -1
     (nil))
(insn 64 63 65 11 (set (reg:HI 114)
        (mem/j:HI (plus:DI (reg/f:DI 113)
                (const_int 62 [0x3e])) [0 publicArea_9->parameters.keyedHashDetail.scheme.details.hmac.hashAlg+0 S2 A16])) HashCommands.c:97 -1
     (nil))
(insn 65 64 66 11 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -18 [0xffffffffffffffee])) [0 hashAlg+0 S2 A16])
        (reg:HI 114)) HashCommands.c:97 -1
     (nil))
(insn 66 65 67 11 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) HashCommands.c:99 -1
     (nil))
(insn 67 66 68 11 (set (reg:HI 95 [ D.13119 ])
        (mem/j:HI (plus:DI (reg/f:DI 115)
                (const_int 54 [0x36])) [0 in_5(D)->hashAlg+0 S2 A16])) HashCommands.c:99 -1
     (nil))
(insn 68 67 69 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 95 [ D.13119 ])
            (const_int 16 [0x10]))) HashCommands.c:99 -1
     (nil))
(jump_insn 69 68 70 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) HashCommands.c:99 -1
     (nil)
 -> 77)
(note 70 69 71 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 12 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) HashCommands.c:99 -1
     (nil))
(insn 72 71 73 12 (set (reg:HI 96 [ D.13119 ])
        (mem/j:HI (plus:DI (reg/f:DI 116)
                (const_int 54 [0x36])) [0 in_5(D)->hashAlg+0 S2 A16])) HashCommands.c:99 -1
     (nil))
(insn 73 72 74 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 96 [ D.13119 ])
            (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -18 [0xffffffffffffffee])) [0 hashAlg+0 S2 A16]))) HashCommands.c:99 -1
     (nil))
(jump_insn 74 73 75 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) HashCommands.c:99 -1
     (nil)
 -> 77)
(note 75 74 76 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 13 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -18 [0xffffffffffffffee])) [0 hashAlg+0 S2 A16])
        (const_int 16 [0x10])) HashCommands.c:100 -1
     (nil))
(code_label 77 76 78 14 7 "" [3 uses])
(note 78 77 79 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -18 [0xffffffffffffffee])) [0 hashAlg+0 S2 A16])
            (const_int 16 [0x10]))) HashCommands.c:103 -1
     (nil))
(jump_insn 80 79 81 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) HashCommands.c:103 -1
     (nil)
 -> 85)
(note 81 80 82 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 15 (set (reg:SI 87 [ D.13117 ])
        (const_int 708 [0x2c4])) HashCommands.c:104 -1
     (nil))
(jump_insn 83 82 84 15 (set (pc)
        (label_ref 98)) HashCommands.c:104 -1
     (nil)
 -> 98)
(barrier 84 83 85)
(code_label 85 84 86 16 8 "" [1 uses])
(note 86 85 87 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 16 (set (reg/f:DI 97 [ D.13120 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 out+0 S8 A64])) HashCommands.c:108 -1
     (nil))
(insn 88 87 89 16 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) HashCommands.c:108 -1
     (nil))
(insn 89 88 90 16 (parallel [
            (set (reg/f:DI 98 [ D.13121 ])
                (plus:DI (reg/f:DI 117)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:108 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 90 89 91 16 (set (reg:SI 99 [ D.13122 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -18 [0xffffffffffffffee])) [0 hashAlg+0 S2 A16]))) HashCommands.c:108 -1
     (nil))
(insn 91 90 92 16 (set (reg:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 keyObject+0 S8 A64])) HashCommands.c:108 -1
     (nil))
(insn 92 91 93 16 (set (reg:DI 2 cx)
        (reg/f:DI 97 [ D.13120 ])) HashCommands.c:108 -1
     (nil))
(insn 93 92 94 16 (set (reg:DI 1 dx)
        (reg/f:DI 98 [ D.13121 ])) HashCommands.c:108 -1
     (nil))
(insn 94 93 95 16 (set (reg:DI 4 si)
        (reg:DI 118)) HashCommands.c:108 -1
     (nil))
(insn 95 94 96 16 (set (reg:SI 5 di)
        (reg:SI 99 [ D.13122 ])) HashCommands.c:108 -1
     (nil))
(call_insn 96 95 97 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ObjectCreateHMACSequence") [flags 0x41]  <function_decl 0x7f19d384a948 ObjectCreateHMACSequence>) [0 ObjectCreateHMACSequence S1 A8])
            (const_int 0 [0]))) HashCommands.c:108 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 97 96 98 16 (set (reg:SI 87 [ D.13117 ])
        (reg:SI 0 ax)) HashCommands.c:108 -1
     (nil))
(code_label 98 97 99 17 3 "" [4 uses])
(note 99 98 100 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 104 17 (set (reg:SI 100 [ <retval> ])
        (reg:SI 87 [ D.13117 ])) -1
     (nil))
(insn 104 100 105 17 (set (reg/i:SI 0 ax)
        (reg:SI 100 [ <retval> ])) HashCommands.c:112 -1
     (nil))
(insn 105 104 0 17 (use (reg/i:SI 0 ax)) HashCommands.c:112 -1
     (nil))

;; Function TPM2_HashSequenceStart (TPM2_HashSequenceStart, funcdef_no=3, decl_uid=12888, cgraph_uid=3, symbol_order=3)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 35.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) HashCommands.c:169 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) HashCommands.c:169 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 in+0 S8 A64])) HashCommands.c:171 -1
     (nil))
(insn 8 7 9 2 (set (reg:HI 88 [ D.13124 ])
        (mem/j:HI (plus:DI (reg/f:DI 96)
                (const_int 50 [0x32])) [0 in_4(D)->hashAlg+0 S2 A16])) HashCommands.c:171 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 88 [ D.13124 ])
            (const_int 16 [0x10]))) HashCommands.c:171 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) HashCommands.c:171 -1
     (nil)
 -> 20)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg/f:DI 89 [ D.13125 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 out+0 S8 A64])) HashCommands.c:174 -1
     (nil))
(insn 13 12 14 4 (set (reg/f:DI 90 [ D.13126 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 in+0 S8 A64])) HashCommands.c:174 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 4 si)
        (reg/f:DI 89 [ D.13125 ])) HashCommands.c:174 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.13126 ])) HashCommands.c:174 -1
     (nil))
(call_insn 16 15 17 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ObjectCreateEventSequence") [flags 0x41]  <function_decl 0x7f19d384aaf8 ObjectCreateEventSequence>) [0 ObjectCreateEventSequence S1 A8])
            (const_int 0 [0]))) HashCommands.c:174 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 17 16 18 4 (set (reg:SI 87 [ D.13123 ])
        (reg:SI 0 ax)) HashCommands.c:174 -1
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (label_ref 32)) HashCommands.c:174 -1
     (nil)
 -> 32)
(barrier 19 18 20)
(code_label 20 19 21 5 10 "" [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:DI 91 [ D.13125 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 out+0 S8 A64])) HashCommands.c:177 -1
     (nil))
(insn 23 22 24 5 (set (reg/f:DI 92 [ D.13126 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 in+0 S8 A64])) HashCommands.c:177 -1
     (nil))
(insn 24 23 25 5 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 in+0 S8 A64])) HashCommands.c:177 -1
     (nil))
(insn 25 24 26 5 (set (reg:HI 93 [ D.13124 ])
        (mem/j:HI (plus:DI (reg/f:DI 97)
                (const_int 50 [0x32])) [0 in_4(D)->hashAlg+0 S2 A16])) HashCommands.c:177 -1
     (nil))
(insn 26 25 27 5 (set (reg:SI 94 [ D.13127 ])
        (zero_extend:SI (reg:HI 93 [ D.13124 ]))) HashCommands.c:177 -1
     (nil))
(insn 27 26 28 5 (set (reg:DI 1 dx)
        (reg/f:DI 91 [ D.13125 ])) HashCommands.c:177 -1
     (nil))
(insn 28 27 29 5 (set (reg:DI 4 si)
        (reg/f:DI 92 [ D.13126 ])) HashCommands.c:177 -1
     (nil))
(insn 29 28 30 5 (set (reg:SI 5 di)
        (reg:SI 94 [ D.13127 ])) HashCommands.c:177 -1
     (nil))
(call_insn 30 29 31 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ObjectCreateHashSequence") [flags 0x41]  <function_decl 0x7f19d384aa20 ObjectCreateHashSequence>) [0 ObjectCreateHashSequence S1 A8])
            (const_int 0 [0]))) HashCommands.c:177 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 31 30 32 5 (set (reg:SI 87 [ D.13123 ])
        (reg:SI 0 ax)) HashCommands.c:177 -1
     (nil))
(code_label 32 31 33 6 11 "" [1 uses])
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 38 6 (set (reg:SI 95 [ <retval> ])
        (reg:SI 87 [ D.13123 ])) -1
     (nil))
(insn 38 34 39 6 (set (reg/i:SI 0 ax)
        (reg:SI 95 [ <retval> ])) HashCommands.c:178 -1
     (nil))
(insn 39 38 0 6 (use (reg/i:SI 0 ax)) HashCommands.c:178 -1
     (nil))

;; Function TPM2_SequenceUpdate (TPM2_SequenceUpdate, funcdef_no=4, decl_uid=12898, cgraph_uid=4, symbol_order=4)

Partition 2: size 8 align 8
	hashObject_12
Partition 1: size 8 align 8
	object_11
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 8->9 to 17 failed.
Removing jump 121.
Merging block 19 into block 18...
Merged blocks 18 and 19.
Merged 18 and 19 without moving.


try_optimize_cfg iteration 2

Forwarding edge 8->9 to 17 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) HashCommands.c:187 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) HashCommands.c:192 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 88 [ D.13129 ])
        (mem/j:SI (reg/f:DI 107) [0 in_8(D)->sequenceHandle+0 S4 A32])) HashCommands.c:192 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13129 ])) HashCommands.c:192 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7f19d384a0d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) HashCommands.c:192 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg:DI 108)
        (reg:DI 0 ax)) HashCommands.c:192 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 object+0 S8 A64])
        (reg:DI 108)) HashCommands.c:192 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 object+0 S8 A64])) HashCommands.c:193 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])
        (reg/f:DI 109)) HashCommands.c:193 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 object+0 S8 A64])) HashCommands.c:195 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 110)) HashCommands.c:195 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ObjectIsSequence") [flags 0x41]  <function_decl 0x7f19d384a000 ObjectIsSequence>) [0 ObjectIsSequence S1 A8])
            (const_int 0 [0]))) HashCommands.c:195 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:SI 89 [ D.13130 ])
        (reg:SI 0 ax)) HashCommands.c:195 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.13130 ])
            (const_int 0 [0]))) HashCommands.c:195 -1
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) HashCommands.c:195 -1
     (nil)
 -> 24)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:SI 87 [ D.13128 ])
        (const_int 457 [0x1c9])) HashCommands.c:196 -1
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (label_ref 118)) HashCommands.c:196 -1
     (nil)
 -> 118)
(barrier 23 22 24)
(code_label 24 23 25 5 13 "" [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 object+0 S8 A64])) HashCommands.c:198 -1
     (nil))
(insn 27 26 28 5 (set (reg:QI 90 [ D.13131 ])
        (mem:QI (plus:DI (reg/f:DI 111)
                (const_int 1 [0x1])) [0 *object_11+1 S1 A8])) HashCommands.c:198 -1
     (nil))
(insn 28 27 29 5 (parallel [
            (set (reg:QI 91 [ D.13131 ])
                (and:QI (reg:QI 90 [ D.13131 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:198 -1
     (nil))
(insn 29 28 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 91 [ D.13131 ])
            (const_int 0 [0]))) HashCommands.c:198 -1
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) HashCommands.c:198 -1
     (nil)
 -> 55)
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) HashCommands.c:202 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (label_ref 47)) HashCommands.c:202 -1
     (nil)
 -> 47)
(barrier 34 33 49)
(code_label 49 34 35 7 17 "" [1 uses])
(note 35 49 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) HashCommands.c:205 -1
     (nil))
(insn 37 36 38 7 (parallel [
            (set (reg/f:DI 92 [ D.13132 ])
                (plus:DI (reg/f:DI 112)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:205 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 38 37 39 7 (set (reg:DI 113)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) HashCommands.c:205 -1
     (nil))
(insn 39 38 40 7 (parallel [
            (set (reg:DI 114)
                (mult:DI (reg:DI 113)
                    (const_int 232 [0xe8])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:205 -1
     (nil))
(insn 40 39 41 7 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg:DI 114)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:205 -1
     (nil))
(insn 41 40 42 7 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:205 -1
     (nil))
(insn 42 41 43 7 (parallel [
            (set (reg/f:DI 93 [ D.13133 ])
                (plus:DI (reg:DI 115)
                    (reg/f:DI 116)))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:205 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])
            (reg:DI 115))
        (nil)))
(insn 43 42 44 7 (set (reg:DI 4 si)
        (reg/f:DI 92 [ D.13132 ])) HashCommands.c:205 -1
     (nil))
(insn 44 43 45 7 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.13133 ])) HashCommands.c:205 -1
     (nil))
(call_insn 45 44 46 7 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f19d3937870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) HashCommands.c:205 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 46 45 47 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:202 -1
     (nil))
(code_label 47 46 48 8 16 "" [1 uses])
(note 48 47 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 48 51 8 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 2 [0x2]))) HashCommands.c:202 -1
     (nil))
(jump_insn 51 50 52 8 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) HashCommands.c:202 -1
     (nil)
 -> 49)
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 53 52 54 9 (set (pc)
        (label_ref 115)) -1
     (nil)
 -> 115)
(barrier 54 53 55)
(code_label 55 54 56 10 15 "" [1 uses])
(note 56 55 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 10 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:211 -1
     (nil))
(insn 58 57 59 10 (set (reg:QI 94 [ D.13131 ])
        (mem:QI (plus:DI (reg/f:DI 117)
                (const_int 1 [0x1])) [0 *hashObject_12+1 S1 A8])) HashCommands.c:211 -1
     (nil))
(insn 59 58 60 10 (parallel [
            (set (reg:QI 95 [ D.13131 ])
                (and:QI (reg:QI 94 [ D.13131 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:211 -1
     (nil))
(insn 60 59 61 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 95 [ D.13131 ])
            (const_int 0 [0]))) HashCommands.c:211 -1
     (nil))
(jump_insn 61 60 62 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) HashCommands.c:211 -1
     (nil)
 -> 100)
(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 11 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:214 -1
     (nil))
(insn 64 63 65 11 (set (reg:QI 96 [ D.13131 ])
        (mem:QI (plus:DI (reg/f:DI 118)
                (const_int 1 [0x1])) [0 *hashObject_12+1 S1 A8])) HashCommands.c:214 -1
     (nil))
(insn 65 64 66 11 (parallel [
            (set (reg:QI 97 [ D.13131 ])
                (and:QI (reg:QI 96 [ D.13131 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:214 -1
     (nil))
(insn 66 65 67 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ D.13131 ])
            (const_int 0 [0]))) HashCommands.c:214 -1
     (nil))
(jump_insn 67 66 68 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) HashCommands.c:214 -1
     (nil)
 -> 89)
(note 68 67 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 72 12 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:217 -1
     (nil))
(insn 72 69 73 12 (set (reg:QI 122)
        (mem/j:QI (plus:DI (reg/f:DI 119)
                (const_int 1 [0x1])) [0 hashObject_12->attributes.firstBlock+0 S1 A8])) HashCommands.c:217 -1
     (nil))
(insn 73 72 74 12 (parallel [
            (set (reg:QI 123)
                (ior:QI (reg:QI 122)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:217 -1
     (nil))
(insn 74 73 75 12 (set (mem/j:QI (plus:DI (reg/f:DI 119)
                (const_int 1 [0x1])) [0 hashObject_12->attributes.firstBlock+0 S1 A8])
        (reg:QI 123)) HashCommands.c:217 -1
     (nil))
(insn 75 74 76 12 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) HashCommands.c:221 -1
     (nil))
(insn 76 75 77 12 (parallel [
            (set (reg/f:DI 98 [ D.13132 ])
                (plus:DI (reg/f:DI 124)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:221 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 77 76 78 12 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.13132 ])) HashCommands.c:221 -1
     (nil))
(call_insn 78 77 79 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TicketIsSafe") [flags 0x41]  <function_decl 0x7f19d3922bd0 TicketIsSafe>) [0 TicketIsSafe S1 A8])
            (const_int 0 [0]))) HashCommands.c:221 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 79 78 80 12 (set (reg:SI 99 [ D.13130 ])
        (reg:SI 0 ax)) HashCommands.c:221 -1
     (nil))
(insn 80 79 81 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.13130 ])
            (const_int 0 [0]))) HashCommands.c:221 -1
     (nil))
(jump_insn 81 80 82 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) HashCommands.c:221 -1
     (nil)
 -> 89)
(note 82 81 83 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 86 13 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:222 -1
     (nil))
(insn 86 83 87 13 (set (reg:QI 128)
        (mem/j:QI (plus:DI (reg/f:DI 125)
                (const_int 1 [0x1])) [0 hashObject_12->attributes.ticketSafe+0 S1 A8])) HashCommands.c:222 -1
     (nil))
(insn 87 86 88 13 (parallel [
            (set (reg:QI 129)
                (ior:QI (reg:QI 128)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:222 -1
     (nil))
(insn 88 87 89 13 (set (mem/j:QI (plus:DI (reg/f:DI 125)
                (const_int 1 [0x1])) [0 hashObject_12->attributes.ticketSafe+0 S1 A8])
        (reg:QI 129)) HashCommands.c:222 -1
     (nil))
(code_label 89 88 90 14 20 "" [2 uses])
(note 90 89 91 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 14 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) HashCommands.c:225 -1
     (nil))
(insn 92 91 93 14 (parallel [
            (set (reg/f:DI 100 [ D.13132 ])
                (plus:DI (reg/f:DI 130)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:225 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 93 92 94 14 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:225 -1
     (nil))
(insn 94 93 95 14 (parallel [
            (set (reg/f:DI 101 [ D.13133 ])
                (plus:DI (reg/f:DI 131)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:225 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])
            (const_int 64 [0x40]))
        (nil)))
(insn 95 94 96 14 (set (reg:DI 4 si)
        (reg/f:DI 100 [ D.13132 ])) HashCommands.c:225 -1
     (nil))
(insn 96 95 97 14 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.13133 ])) HashCommands.c:225 -1
     (nil))
(call_insn 97 96 98 14 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f19d3937870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) HashCommands.c:225 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 98 97 99 14 (set (pc)
        (label_ref 115)) -1
     (nil)
 -> 115)
(barrier 99 98 100)
(code_label 100 99 101 15 19 "" [1 uses])
(note 101 100 102 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 15 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 object+0 S8 A64])) HashCommands.c:227 -1
     (nil))
(insn 103 102 104 15 (set (reg:QI 102 [ D.13131 ])
        (mem:QI (plus:DI (reg/f:DI 132)
                (const_int 1 [0x1])) [0 *object_11+1 S1 A8])) HashCommands.c:227 -1
     (nil))
(insn 104 103 105 15 (parallel [
            (set (reg:QI 103 [ D.13131 ])
                (and:QI (reg:QI 102 [ D.13131 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:227 -1
     (nil))
(insn 105 104 106 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 103 [ D.13131 ])
            (const_int 0 [0]))) HashCommands.c:227 -1
     (nil))
(jump_insn 106 105 107 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) HashCommands.c:227 -1
     (nil)
 -> 115)
(note 107 106 108 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 16 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])) HashCommands.c:231 -1
     (nil))
(insn 109 108 110 16 (parallel [
            (set (reg/f:DI 104 [ D.13132 ])
                (plus:DI (reg/f:DI 133)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:231 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 110 109 111 16 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:230 -1
     (nil))
(insn 111 110 112 16 (parallel [
            (set (reg/f:DI 105 [ D.13133 ])
                (plus:DI (reg/f:DI 134)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:230 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])
            (const_int 64 [0x40]))
        (nil)))
(insn 112 111 113 16 (set (reg:DI 4 si)
        (reg/f:DI 104 [ D.13132 ])) HashCommands.c:230 -1
     (nil))
(insn 113 112 114 16 (set (reg:DI 5 di)
        (reg/f:DI 105 [ D.13133 ])) HashCommands.c:230 -1
     (nil))
(call_insn 114 113 115 16 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f19d3937870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) HashCommands.c:230 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(code_label 115 114 116 17 18 "" [3 uses])
(note 116 115 117 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 17 (set (reg:SI 87 [ D.13128 ])
        (const_int 0 [0])) HashCommands.c:234 -1
     (nil))
(code_label 118 117 119 18 14 "" [1 uses])
(note 119 118 120 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 124 18 (set (reg:SI 106 [ <retval> ])
        (reg:SI 87 [ D.13128 ])) -1
     (nil))
(insn 124 120 125 18 (set (reg/i:SI 0 ax)
        (reg:SI 106 [ <retval> ])) HashCommands.c:235 -1
     (nil))
(insn 125 124 0 18 (use (reg/i:SI 0 ax)) HashCommands.c:235 -1
     (nil))

;; Function TPM2_SequenceComplete (TPM2_SequenceComplete, funcdef_no=5, decl_uid=12919, cgraph_uid=5, symbol_order=5)

Partition 0: size 8 align 8
	hashObject_10
Partition 1: size 2 align 2
	hashAlg_18

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 92 from 15 to 17.
Redirecting jump 106 from 15 to 17.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.
Removing jump 163.
Merging block 19 into block 18...
Merged blocks 18 and 19.
Merged 18 and 19 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) HashCommands.c:247 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) HashCommands.c:247 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) HashCommands.c:251 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.13135 ])
        (mem/j:SI (reg/f:DI 118) [0 in_7(D)->sequenceHandle+0 S4 A32])) HashCommands.c:251 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13135 ])) HashCommands.c:251 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7f19d384a0d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) HashCommands.c:251 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 119)
        (reg:DI 0 ax)) HashCommands.c:251 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])
        (reg:DI 119)) HashCommands.c:251 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:253 -1
     (nil))
(insn 14 13 15 2 (set (reg:QI 89 [ D.13136 ])
        (mem:QI (plus:DI (reg/f:DI 120)
                (const_int 1 [0x1])) [0 *hashObject_10+1 S1 A8])) HashCommands.c:253 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:QI 90 [ D.13136 ])
                (and:QI (reg:QI 89 [ D.13136 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:253 -1
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.13136 ])
            (const_int 0 [0]))) HashCommands.c:253 -1
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) HashCommands.c:253 -1
     (nil)
 -> 28)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:254 -1
     (nil))
(insn 20 19 21 4 (set (reg:QI 91 [ D.13136 ])
        (mem:QI (plus:DI (reg/f:DI 121)
                (const_int 1 [0x1])) [0 *hashObject_10+1 S1 A8])) HashCommands.c:254 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg:QI 92 [ D.13136 ])
                (and:QI (reg:QI 91 [ D.13136 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:254 -1
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ D.13136 ])
            (const_int 0 [0]))) HashCommands.c:254 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) HashCommands.c:254 -1
     (nil)
 -> 28)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg:SI 87 [ D.13134 ])
        (const_int 393 [0x189])) HashCommands.c:255 -1
     (nil))
(jump_insn 26 25 27 5 (set (pc)
        (label_ref 160)) HashCommands.c:255 -1
     (nil)
 -> 160)
(barrier 27 26 28)
(code_label 28 27 29 6 22 "" [2 uses])
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:257 -1
     (nil))
(insn 31 30 32 6 (set (reg:QI 93 [ D.13136 ])
        (mem:QI (plus:DI (reg/f:DI 122)
                (const_int 1 [0x1])) [0 *hashObject_10+1 S1 A8])) HashCommands.c:257 -1
     (nil))
(insn 32 31 33 6 (parallel [
            (set (reg:QI 94 [ D.13136 ])
                (and:QI (reg:QI 93 [ D.13136 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:257 -1
     (nil))
(insn 33 32 34 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 94 [ D.13136 ])
            (const_int 0 [0]))) HashCommands.c:257 -1
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) HashCommands.c:257 -1
     (nil)
 -> 125)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:260 -1
     (nil))
(insn 37 36 38 7 (set (reg:HI 124)
        (mem/j:HI (plus:DI (reg/f:DI 123)
                (const_int 66 [0x42])) [0 hashObject_10->state.hashState[0].hashAlg+0 S2 A16])) HashCommands.c:260 -1
     (nil))
(insn 38 37 39 7 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 hashAlg+0 S2 A16])
        (reg:HI 124)) HashCommands.c:260 -1
     (nil))
(insn 39 38 40 7 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) HashCommands.c:262 -1
     (nil))
(insn 40 39 41 7 (parallel [
            (set (reg/f:DI 95 [ D.13137 ])
                (plus:DI (reg/f:DI 125)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:262 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 41 40 42 7 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:262 -1
     (nil))
(insn 42 41 43 7 (parallel [
            (set (reg/f:DI 96 [ D.13138 ])
                (plus:DI (reg/f:DI 126)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:262 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])
            (const_int 64 [0x40]))
        (nil)))
(insn 43 42 44 7 (set (reg:DI 4 si)
        (reg/f:DI 95 [ D.13137 ])) HashCommands.c:262 -1
     (nil))
(insn 44 43 45 7 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.13138 ])) HashCommands.c:262 -1
     (nil))
(call_insn 45 44 46 7 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f19d3937870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) HashCommands.c:262 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 46 45 47 7 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:266 -1
     (nil))
(insn 47 46 48 7 (parallel [
            (set (reg/f:DI 97 [ D.13139 ])
                (plus:DI (reg/f:DI 127)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:266 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 48 47 49 7 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:264 -1
     (nil))
(insn 49 48 50 7 (parallel [
            (set (reg/f:DI 98 [ D.13138 ])
                (plus:DI (reg/f:DI 128)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:264 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])
            (const_int 64 [0x40]))
        (nil)))
(insn 50 49 51 7 (set (reg:DI 1 dx)
        (reg/f:DI 97 [ D.13139 ])) HashCommands.c:264 -1
     (nil))
(insn 51 50 52 7 (set (reg:SI 4 si)
        (const_int 48 [0x30])) HashCommands.c:264 -1
     (nil))
(insn 52 51 53 7 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.13138 ])) HashCommands.c:264 -1
     (nil))
(call_insn 53 52 54 7 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd") [flags 0x41]  <function_decl 0x7f19d39376c0 CryptHashEnd>) [0 CryptHashEnd S1 A8])
            (const_int 0 [0]))) HashCommands.c:264 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 54 53 55 7 (set (reg:HI 99 [ D.13140 ])
        (reg:HI 0 ax)) HashCommands.c:264 -1
     (nil))
(insn 55 54 56 7 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:264 -1
     (nil))
(insn 56 55 57 7 (set (mem/j:HI (reg/f:DI 129) [0 out_22(D)->result.t.size+0 S2 A32])
        (reg:HI 99 [ D.13140 ])) HashCommands.c:264 -1
     (nil))
(insn 57 56 58 7 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:268 -1
     (nil))
(insn 58 57 59 7 (set (reg:QI 100 [ D.13136 ])
        (mem:QI (plus:DI (reg/f:DI 130)
                (const_int 1 [0x1])) [0 *hashObject_10+1 S1 A8])) HashCommands.c:268 -1
     (nil))
(insn 59 58 60 7 (parallel [
            (set (reg:QI 101 [ D.13136 ])
                (and:QI (reg:QI 100 [ D.13136 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:268 -1
     (nil))
(insn 60 59 61 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 101 [ D.13136 ])
            (const_int 0 [0]))) HashCommands.c:268 -1
     (nil))
(jump_insn 61 60 62 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) HashCommands.c:268 -1
     (nil)
 -> 77)
(note 62 61 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 8 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) HashCommands.c:272 -1
     (nil))
(insn 64 63 65 8 (parallel [
            (set (reg/f:DI 102 [ D.13137 ])
                (plus:DI (reg/f:DI 131)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:272 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 65 64 66 8 (set (reg:DI 5 di)
        (reg/f:DI 102 [ D.13137 ])) HashCommands.c:272 -1
     (nil))
(call_insn 66 65 67 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("TicketIsSafe") [flags 0x41]  <function_decl 0x7f19d3922bd0 TicketIsSafe>) [0 TicketIsSafe S1 A8])
            (const_int 0 [0]))) HashCommands.c:272 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 67 66 68 8 (set (reg:SI 103 [ D.13141 ])
        (reg:SI 0 ax)) HashCommands.c:272 -1
     (nil))
(insn 68 67 69 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103 [ D.13141 ])
            (const_int 0 [0]))) HashCommands.c:272 -1
     (nil))
(jump_insn 69 68 70 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) HashCommands.c:272 -1
     (nil)
 -> 77)
(note 70 69 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 74 9 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:273 -1
     (nil))
(insn 74 71 75 9 (set (reg:QI 135)
        (mem/j:QI (plus:DI (reg/f:DI 132)
                (const_int 1 [0x1])) [0 hashObject_10->attributes.ticketSafe+0 S1 A8])) HashCommands.c:273 -1
     (nil))
(insn 75 74 76 9 (parallel [
            (set (reg:QI 136)
                (ior:QI (reg:QI 135)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:273 -1
     (nil))
(insn 76 75 77 9 (set (mem/j:QI (plus:DI (reg/f:DI 132)
                (const_int 1 [0x1])) [0 hashObject_10->attributes.ticketSafe+0 S1 A8])
        (reg:QI 136)) HashCommands.c:273 -1
     (nil))
(code_label 77 76 78 10 25 "" [2 uses])
(note 78 77 79 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 10 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:276 -1
     (nil))
(insn 80 79 81 10 (set (mem/j:HI (plus:DI (reg/f:DI 137)
                (const_int 52 [0x34])) [0 out_22(D)->validation.tag+0 S2 A32])
        (const_int -32732 [0xffffffffffff8024])) HashCommands.c:276 -1
     (nil))
(insn 81 80 82 10 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) HashCommands.c:277 -1
     (nil))
(insn 82 81 83 10 (set (reg:SI 104 [ D.13135 ])
        (mem/j:SI (plus:DI (reg/f:DI 138)
                (const_int 1032 [0x408])) [0 in_7(D)->hierarchy+0 S4 A32])) HashCommands.c:277 -1
     (nil))
(insn 83 82 84 10 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:277 -1
     (nil))
(insn 84 83 85 10 (set (mem/j:SI (plus:DI (reg/f:DI 139)
                (const_int 56 [0x38])) [0 out_22(D)->validation.hierarchy+0 S4 A32])
        (reg:SI 104 [ D.13135 ])) HashCommands.c:277 -1
     (nil))
(insn 85 84 86 10 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) HashCommands.c:278 -1
     (nil))
(insn 86 85 87 10 (set (reg:SI 105 [ D.13135 ])
        (mem/j:SI (plus:DI (reg/f:DI 140)
                (const_int 1032 [0x408])) [0 in_7(D)->hierarchy+0 S4 A32])) HashCommands.c:278 -1
     (nil))
(insn 87 86 88 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 105 [ D.13135 ])
            (const_int 1073741831 [0x40000007]))) HashCommands.c:278 -1
     (nil))
(jump_insn 88 87 89 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) HashCommands.c:278 -1
     (nil)
 -> 94)
(note 89 88 90 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 11 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:281 -1
     (nil))
(insn 91 90 92 11 (set (mem/j:HI (plus:DI (reg/f:DI 141)
                (const_int 60 [0x3c])) [0 out_22(D)->validation.digest.t.size+0 S2 A32])
        (const_int 0 [0])) HashCommands.c:281 -1
     (nil))
(jump_insn 92 91 93 11 (set (pc)
        (label_ref:DI 151)) 654 {jump}
     (nil)
 -> 151)
(barrier 93 92 94)
(code_label 94 93 95 12 26 "" [1 uses])
(note 95 94 96 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 12 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:283 -1
     (nil))
(insn 97 96 98 12 (set (reg:QI 106 [ D.13136 ])
        (mem:QI (plus:DI (reg/f:DI 142)
                (const_int 1 [0x1])) [0 *hashObject_10+1 S1 A8])) HashCommands.c:283 -1
     (nil))
(insn 98 97 99 12 (parallel [
            (set (reg:QI 107 [ D.13136 ])
                (and:QI (reg:QI 106 [ D.13136 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:283 -1
     (nil))
(insn 99 98 100 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 107 [ D.13136 ])
            (const_int 0 [0]))) HashCommands.c:283 -1
     (nil))
(jump_insn 100 99 101 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) HashCommands.c:283 -1
     (nil)
 -> 108)
(note 101 100 102 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 13 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:286 -1
     (nil))
(insn 103 102 104 13 (set (mem/j:SI (plus:DI (reg/f:DI 143)
                (const_int 56 [0x38])) [0 out_22(D)->validation.hierarchy+0 S4 A32])
        (const_int 1073741831 [0x40000007])) HashCommands.c:286 -1
     (nil))
(insn 104 103 105 13 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:287 -1
     (nil))
(insn 105 104 106 13 (set (mem/j:HI (plus:DI (reg/f:DI 144)
                (const_int 60 [0x3c])) [0 out_22(D)->validation.digest.t.size+0 S2 A32])
        (const_int 0 [0])) HashCommands.c:287 -1
     (nil))
(jump_insn 106 105 107 13 (set (pc)
        (label_ref:DI 151)) 654 {jump}
     (nil)
 -> 151)
(barrier 107 106 108)
(code_label 108 107 109 14 28 "" [1 uses])
(note 109 108 110 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 14 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:292 -1
     (nil))
(insn 111 110 112 14 (parallel [
            (set (reg/f:DI 108 [ D.13142 ])
                (plus:DI (reg/f:DI 145)
                    (const_int 52 [0x34])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:292 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])
            (const_int 52 [0x34]))
        (nil)))
(insn 112 111 113 14 (set (reg/f:DI 109 [ D.13143 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:292 -1
     (nil))
(insn 113 112 114 14 (set (reg:SI 110 [ D.13141 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10 [0xfffffffffffffff6])) [0 hashAlg+0 S2 A16]))) HashCommands.c:292 -1
     (nil))
(insn 114 113 115 14 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:292 -1
     (nil))
(insn 115 114 116 14 (set (reg:SI 111 [ D.13135 ])
        (mem/j:SI (plus:DI (reg/f:DI 146)
                (const_int 56 [0x38])) [0 out_22(D)->validation.hierarchy+0 S4 A32])) HashCommands.c:292 -1
     (nil))
(insn 116 115 117 14 (set (reg:DI 2 cx)
        (reg/f:DI 108 [ D.13142 ])) HashCommands.c:292 -1
     (nil))
(insn 117 116 118 14 (set (reg:DI 1 dx)
        (reg/f:DI 109 [ D.13143 ])) HashCommands.c:292 -1
     (nil))
(insn 118 117 119 14 (set (reg:SI 4 si)
        (reg:SI 110 [ D.13141 ])) HashCommands.c:292 -1
     (nil))
(insn 119 118 120 14 (set (reg:SI 5 di)
        (reg:SI 111 [ D.13135 ])) HashCommands.c:292 -1
     (nil))
(call_insn 120 119 123 14 (call (mem:QI (symbol_ref:DI ("TicketComputeHashCheck") [flags 0x41]  <function_decl 0x7f19d3922e58 TicketComputeHashCheck>) [0 TicketComputeHashCheck S1 A8])
        (const_int 0 [0])) HashCommands.c:292 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 123 120 124 14 (set (pc)
        (label_ref 151)) -1
     (nil)
 -> 151)
(barrier 124 123 125)
(code_label 125 124 126 16 24 "" [1 uses])
(note 126 125 127 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 16 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) HashCommands.c:299 -1
     (nil))
(insn 128 127 129 16 (parallel [
            (set (reg/f:DI 112 [ D.13137 ])
                (plus:DI (reg/f:DI 147)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:299 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 129 128 130 16 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:299 -1
     (nil))
(insn 130 129 131 16 (parallel [
            (set (reg/f:DI 113 [ D.13138 ])
                (plus:DI (reg/f:DI 148)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:299 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])
            (const_int 64 [0x40]))
        (nil)))
(insn 131 130 132 16 (set (reg:DI 4 si)
        (reg/f:DI 112 [ D.13137 ])) HashCommands.c:299 -1
     (nil))
(insn 132 131 133 16 (set (reg:DI 5 di)
        (reg/f:DI 113 [ D.13138 ])) HashCommands.c:299 -1
     (nil))
(call_insn 133 132 134 16 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f19d3937870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) HashCommands.c:299 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 134 133 135 16 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:304 -1
     (nil))
(insn 135 134 136 16 (parallel [
            (set (reg/f:DI 114 [ D.13139 ])
                (plus:DI (reg/f:DI 149)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:304 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 136 135 137 16 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:302 -1
     (nil))
(insn 137 136 138 16 (parallel [
            (set (reg/f:DI 115 [ D.13144 ])
                (plus:DI (reg/f:DI 150)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:302 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])
            (const_int 64 [0x40]))
        (nil)))
(insn 138 137 139 16 (set (reg:DI 1 dx)
        (reg/f:DI 114 [ D.13139 ])) HashCommands.c:302 -1
     (nil))
(insn 139 138 140 16 (set (reg:SI 4 si)
        (const_int 48 [0x30])) HashCommands.c:302 -1
     (nil))
(insn 140 139 141 16 (set (reg:DI 5 di)
        (reg/f:DI 115 [ D.13144 ])) HashCommands.c:302 -1
     (nil))
(call_insn 141 140 142 16 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHmacEnd") [flags 0x41]  <function_decl 0x7f19d3937bd0 CryptHmacEnd>) [0 CryptHmacEnd S1 A8])
            (const_int 0 [0]))) HashCommands.c:302 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 142 141 143 16 (set (reg:HI 116 [ D.13140 ])
        (reg:HI 0 ax)) HashCommands.c:302 -1
     (nil))
(insn 143 142 144 16 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:302 -1
     (nil))
(insn 144 143 145 16 (set (mem/j:HI (reg/f:DI 151) [0 out_22(D)->result.t.size+0 S2 A32])
        (reg:HI 116 [ D.13140 ])) HashCommands.c:302 -1
     (nil))
(insn 145 144 146 16 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:312 -1
     (nil))
(insn 146 145 147 16 (set (mem/j:HI (plus:DI (reg/f:DI 152)
                (const_int 52 [0x34])) [0 out_22(D)->validation.tag+0 S2 A32])
        (const_int -32732 [0xffffffffffff8024])) HashCommands.c:312 -1
     (nil))
(insn 147 146 148 16 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:313 -1
     (nil))
(insn 148 147 149 16 (set (mem/j:SI (plus:DI (reg/f:DI 153)
                (const_int 56 [0x38])) [0 out_22(D)->validation.hierarchy+0 S4 A32])
        (const_int 1073741831 [0x40000007])) HashCommands.c:313 -1
     (nil))
(insn 149 148 150 16 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:314 -1
     (nil))
(insn 150 149 151 16 (set (mem/j:HI (plus:DI (reg/f:DI 154)
                (const_int 60 [0x3c])) [0 out_22(D)->validation.digest.t.size+0 S2 A32])
        (const_int 0 [0])) HashCommands.c:314 -1
     (nil))
(code_label 151 150 152 17 29 "" [3 uses])
(note 152 151 153 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 156 17 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:318 -1
     (nil))
(insn 156 153 157 17 (set (reg:QI 158)
        (mem/j:QI (reg/f:DI 155) [0 hashObject_10->attributes.evict+0 S1 A64])) HashCommands.c:318 -1
     (nil))
(insn 157 156 158 17 (parallel [
            (set (reg:QI 159)
                (ior:QI (reg:QI 158)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:318 -1
     (nil))
(insn 158 157 159 17 (set (mem/j:QI (reg/f:DI 155) [0 hashObject_10->attributes.evict+0 S1 A64])
        (reg:QI 159)) HashCommands.c:318 -1
     (nil))
(insn 159 158 160 17 (set (reg:SI 87 [ D.13134 ])
        (const_int 0 [0])) HashCommands.c:319 -1
     (nil))
(code_label 160 159 161 18 23 "" [1 uses])
(note 161 160 162 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 166 18 (set (reg:SI 117 [ <retval> ])
        (reg:SI 87 [ D.13134 ])) -1
     (nil))
(insn 166 162 167 18 (set (reg/i:SI 0 ax)
        (reg:SI 117 [ <retval> ])) HashCommands.c:320 -1
     (nil))
(insn 167 166 0 18 (use (reg/i:SI 0 ax)) HashCommands.c:320 -1
     (nil))

;; Function TPM2_EventSequenceComplete (TPM2_EventSequenceComplete, funcdef_no=6, decl_uid=12936, cgraph_uid=6, symbol_order=6)

Partition 1: size 8 align 8
	hashObject_11
Partition 0: size 4 align 4
	i_1
Partition 2: size 2 align 2
	hashAlg_30

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 178.
Merging block 18 into block 17...
Merged blocks 17 and 18.
Merged 17 and 18 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])
        (reg:DI 5 di [ in ])) HashCommands.c:330 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])
        (reg:DI 4 si [ out ])) HashCommands.c:330 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) HashCommands.c:336 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.13146 ])
        (mem/j:SI (plus:DI (reg/f:DI 117)
                (const_int 4 [0x4])) [0 in_8(D)->sequenceHandle+0 S4 A32])) HashCommands.c:336 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.13146 ])) HashCommands.c:336 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("HandleToObject") [flags 0x41]  <function_decl 0x7f19d384a0d8 HandleToObject>) [0 HandleToObject S1 A8])
            (const_int 0 [0]))) HashCommands.c:336 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 118)
        (reg:DI 0 ax)) HashCommands.c:336 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])
        (reg:DI 118)) HashCommands.c:336 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:338 -1
     (nil))
(insn 14 13 15 2 (set (reg:QI 89 [ D.13147 ])
        (mem:QI (plus:DI (reg/f:DI 119)
                (const_int 1 [0x1])) [0 *hashObject_11+1 S1 A8])) HashCommands.c:338 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:QI 90 [ D.13147 ])
                (and:QI (reg:QI 89 [ D.13147 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:338 -1
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.13147 ])
            (const_int 0 [0]))) HashCommands.c:338 -1
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) HashCommands.c:338 -1
     (nil)
 -> 22)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:SI 87 [ D.13145 ])
        (const_int 649 [0x289])) HashCommands.c:339 -1
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (label_ref 175)) HashCommands.c:339 -1
     (nil)
 -> 175)
(barrier 21 20 22)
(code_label 22 21 23 5 31 "" [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) HashCommands.c:341 -1
     (nil))
(insn 25 24 26 5 (set (reg:SI 91 [ D.13146 ])
        (mem/j:SI (reg/f:DI 120) [0 in_8(D)->pcrHandle+0 S4 A32])) HashCommands.c:341 -1
     (nil))
(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.13146 ])
            (const_int 1073741831 [0x40000007]))) HashCommands.c:341 -1
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) HashCommands.c:341 -1
     (nil)
 -> 58)
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) HashCommands.c:344 -1
     (nil))
(insn 30 29 31 6 (set (reg:SI 92 [ D.13146 ])
        (mem/j:SI (reg/f:DI 121) [0 in_8(D)->pcrHandle+0 S4 A32])) HashCommands.c:344 -1
     (nil))
(insn 31 30 32 6 (set (reg:SI 5 di)
        (reg:SI 92 [ D.13146 ])) HashCommands.c:344 -1
     (nil))
(call_insn 32 31 33 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PCRIsExtendAllowed") [flags 0x41]  <function_decl 0x7f19d38781b0 PCRIsExtendAllowed>) [0 PCRIsExtendAllowed S1 A8])
            (const_int 0 [0]))) HashCommands.c:344 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 33 32 34 6 (set (reg:SI 93 [ D.13148 ])
        (reg:SI 0 ax)) HashCommands.c:344 -1
     (nil))
(insn 34 33 35 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.13148 ])
            (const_int 0 [0]))) HashCommands.c:344 -1
     (nil))
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) HashCommands.c:344 -1
     (nil)
 -> 40)
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg:SI 87 [ D.13145 ])
        (const_int 2311 [0x907])) HashCommands.c:345 -1
     (nil))
(jump_insn 38 37 39 7 (set (pc)
        (label_ref 175)) HashCommands.c:345 -1
     (nil)
 -> 175)
(barrier 39 38 40)
(code_label 40 39 41 8 34 "" [1 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) HashCommands.c:356 -1
     (nil))
(insn 43 42 44 8 (set (reg:SI 94 [ D.13146 ])
        (mem/j:SI (reg/f:DI 122) [0 in_8(D)->pcrHandle+0 S4 A32])) HashCommands.c:356 -1
     (nil))
(insn 44 43 45 8 (set (reg:SI 5 di)
        (reg:SI 94 [ D.13146 ])) HashCommands.c:356 -1
     (nil))
(call_insn 45 44 46 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PCRIsStateSaved") [flags 0x41]  <function_decl 0x7f19d3872e58 PCRIsStateSaved>) [0 PCRIsStateSaved S1 A8])
            (const_int 0 [0]))) HashCommands.c:356 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 46 45 47 8 (set (reg:SI 95 [ D.13148 ])
        (reg:SI 0 ax)) HashCommands.c:356 -1
     (nil))
(insn 47 46 48 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.13148 ])
            (const_int 0 [0]))) HashCommands.c:356 -1
     (nil))
(jump_insn 48 47 49 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) HashCommands.c:356 -1
     (nil)
 -> 58)
(note 49 48 50 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 50 49 51 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("NvClearOrderly") [flags 0x41]  <function_decl 0x7f19d3872360 NvClearOrderly>) [0 NvClearOrderly S1 A8])
            (const_int 0 [0]))) HashCommands.c:357 -1
     (nil)
    (nil))
(insn 51 50 52 9 (set (reg:SI 96 [ D.13146 ])
        (reg:SI 0 ax)) HashCommands.c:357 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.13146 ])
            (const_int 0 [0]))) HashCommands.c:357 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) HashCommands.c:357 -1
     (nil)
 -> 58)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (set (reg:SI 87 [ D.13145 ])
        (mem/c:SI (symbol_ref:DI ("g_NvStatus") [flags 0x40]  <var_decl 0x7f19d37fbcf0 g_NvStatus>) [0 g_NvStatus+0 S4 A32])) HashCommands.c:357 -1
     (nil))
(jump_insn 56 55 57 10 (set (pc)
        (label_ref 175)) HashCommands.c:357 -1
     (nil)
 -> 175)
(barrier 57 56 58)
(code_label 58 57 59 11 33 "" [3 uses])
(note 59 58 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 11 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:360 -1
     (nil))
(insn 61 60 62 11 (set (mem/j:SI (reg/f:DI 123) [0 out_26(D)->results.count+0 S4 A32])
        (const_int 0 [0])) HashCommands.c:360 -1
     (nil))
(insn 62 61 63 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) HashCommands.c:361 -1
     (nil))
(jump_insn 63 62 64 11 (set (pc)
        (label_ref 162)) HashCommands.c:361 -1
     (nil)
 -> 162)
(barrier 64 63 164)
(code_label 164 64 65 12 37 "" [1 uses])
(note 65 164 66 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 12 (set (reg:SI 124)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) HashCommands.c:363 -1
     (nil))
(insn 67 66 68 12 (set (reg:SI 5 di)
        (reg:SI 124)) HashCommands.c:363 -1
     (nil))
(call_insn 68 67 69 12 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashGetAlgByIndex") [flags 0x41]  <function_decl 0x7f19d3932d80 CryptHashGetAlgByIndex>) [0 CryptHashGetAlgByIndex S1 A8])
            (const_int 0 [0]))) HashCommands.c:363 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 69 68 70 12 (set (reg:HI 125)
        (reg:HI 0 ax)) HashCommands.c:363 -1
     (nil))
(insn 70 69 71 12 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -14 [0xfffffffffffffff2])) [0 hashAlg+0 S2 A16])
        (reg:HI 125)) HashCommands.c:363 -1
     (nil))
(insn 71 70 72 12 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) HashCommands.c:365 -1
     (nil))
(insn 72 71 73 12 (parallel [
            (set (reg/f:DI 97 [ D.13149 ])
                (plus:DI (reg/f:DI 126)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:365 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 73 72 74 12 (set (reg:DI 127)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) HashCommands.c:365 -1
     (nil))
(insn 74 73 75 12 (parallel [
            (set (reg:DI 128)
                (mult:DI (reg:DI 127)
                    (const_int 232 [0xe8])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:365 -1
     (nil))
(insn 75 74 76 12 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg:DI 128)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:365 -1
     (nil))
(insn 76 75 77 12 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:365 -1
     (nil))
(insn 77 76 78 12 (parallel [
            (set (reg/f:DI 98 [ D.13150 ])
                (plus:DI (reg:DI 129)
                    (reg/f:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:365 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])
            (reg:DI 129))
        (nil)))
(insn 78 77 79 12 (set (reg:DI 4 si)
        (reg/f:DI 97 [ D.13149 ])) HashCommands.c:365 -1
     (nil))
(insn 79 78 80 12 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.13150 ])) HashCommands.c:365 -1
     (nil))
(call_insn 80 79 81 12 (call (mem:QI (symbol_ref:DI ("CryptDigestUpdate2B") [flags 0x41]  <function_decl 0x7f19d3937870 CryptDigestUpdate2B>) [0 CryptDigestUpdate2B S1 A8])
        (const_int 0 [0])) HashCommands.c:365 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 81 80 82 12 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:367 -1
     (nil))
(insn 82 81 83 12 (set (reg:SI 99 [ D.13146 ])
        (mem/j:SI (reg/f:DI 131) [0 out_26(D)->results.count+0 S4 A32])) HashCommands.c:367 -1
     (nil))
(insn 83 82 84 12 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:367 -1
     (nil))
(insn 84 83 85 12 (set (reg:DI 133)
        (zero_extend:DI (reg:SI 99 [ D.13146 ]))) HashCommands.c:367 -1
     (nil))
(insn 85 84 86 12 (set (reg:DI 134)
        (reg:DI 133)) HashCommands.c:367 -1
     (nil))
(insn 86 85 87 12 (parallel [
            (set (reg:DI 134)
                (ashift:DI (reg:DI 134)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:367 -1
     (nil))
(insn 87 86 88 12 (parallel [
            (set (reg:DI 134)
                (plus:DI (reg:DI 134)
                    (reg:DI 133)))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:367 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 133)
            (const_int 5 [0x5]))
        (nil)))
(insn 88 87 89 12 (parallel [
            (set (reg:DI 135)
                (ashift:DI (reg:DI 134)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:367 -1
     (nil))
(insn 89 88 90 12 (parallel [
            (set (reg:DI 134)
                (plus:DI (reg:DI 134)
                    (reg:DI 135)))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:367 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 133)
            (const_int 25 [0x19]))
        (nil)))
(insn 90 89 91 12 (parallel [
            (set (reg:DI 136)
                (ashift:DI (reg:DI 134)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:367 -1
     (nil))
(insn 91 90 92 12 (set (reg:DI 134)
        (reg:DI 136)) HashCommands.c:367 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 133)
            (const_int 50 [0x32]))
        (nil)))
(insn 92 91 93 12 (parallel [
            (set (reg:DI 137)
                (plus:DI (reg/f:DI 132)
                    (reg:DI 134)))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:367 -1
     (nil))
(insn 93 92 94 12 (parallel [
            (set (reg/f:DI 138)
                (plus:DI (reg:DI 137)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:367 -1
     (nil))
(insn 94 93 95 12 (set (reg:HI 139)
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -14 [0xfffffffffffffff2])) [0 hashAlg+0 S2 A16])) HashCommands.c:367 -1
     (nil))
(insn 95 94 96 12 (set (mem/j:HI (reg/f:DI 138) [0 out_26(D)->results.digests[_34].hashAlg+0 S2 A16])
        (reg:HI 139)) HashCommands.c:367 -1
     (nil))
(insn 96 95 97 12 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:370 -1
     (nil))
(insn 97 96 98 12 (set (reg:SI 100 [ D.13146 ])
        (mem/j:SI (reg/f:DI 140) [0 out_26(D)->results.count+0 S4 A32])) HashCommands.c:370 -1
     (nil))
(insn 98 97 99 12 (set (reg:DI 141)
        (zero_extend:DI (reg:SI 100 [ D.13146 ]))) HashCommands.c:370 -1
     (nil))
(insn 99 98 100 12 (set (reg:DI 142)
        (reg:DI 141)) HashCommands.c:370 -1
     (nil))
(insn 100 99 101 12 (parallel [
            (set (reg:DI 142)
                (ashift:DI (reg:DI 142)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:370 -1
     (nil))
(insn 101 100 102 12 (parallel [
            (set (reg:DI 142)
                (plus:DI (reg:DI 142)
                    (reg:DI 141)))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:370 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 141)
            (const_int 5 [0x5]))
        (nil)))
(insn 102 101 103 12 (parallel [
            (set (reg:DI 143)
                (ashift:DI (reg:DI 142)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:370 -1
     (nil))
(insn 103 102 104 12 (parallel [
            (set (reg:DI 142)
                (plus:DI (reg:DI 142)
                    (reg:DI 143)))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:370 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 141)
            (const_int 25 [0x19]))
        (nil)))
(insn 104 103 105 12 (parallel [
            (set (reg:DI 144)
                (ashift:DI (reg:DI 142)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:370 -1
     (nil))
(insn 105 104 106 12 (set (reg:DI 142)
        (reg:DI 144)) HashCommands.c:370 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 141)
            (const_int 50 [0x32]))
        (nil)))
(insn 106 105 107 12 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:370 -1
     (nil))
(insn 107 106 108 12 (parallel [
            (set (reg:DI 145)
                (plus:DI (reg:DI 142)
                    (reg/f:DI 146)))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:370 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])
            (reg:DI 142))
        (nil)))
(insn 108 107 109 12 (parallel [
            (set (reg/f:DI 101 [ D.13151 ])
                (plus:DI (reg:DI 145)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:370 -1
     (nil))
(insn 109 108 110 12 (set (reg:SI 102 [ D.13148 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -14 [0xfffffffffffffff2])) [0 hashAlg+0 S2 A16]))) HashCommands.c:369 -1
     (nil))
(insn 110 109 111 12 (set (reg:SI 5 di)
        (reg:SI 102 [ D.13148 ])) HashCommands.c:369 -1
     (nil))
(call_insn 111 110 112 12 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashGetDigestSize") [flags 0x41]  <function_decl 0x7f19d3932e58 CryptHashGetDigestSize>) [0 CryptHashGetDigestSize S1 A8])
            (const_int 0 [0]))) HashCommands.c:369 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 112 111 113 12 (set (reg:HI 103 [ D.13152 ])
        (reg:HI 0 ax)) HashCommands.c:369 -1
     (nil))
(insn 113 112 114 12 (set (reg:SI 104 [ D.13146 ])
        (zero_extend:SI (reg:HI 103 [ D.13152 ]))) HashCommands.c:368 -1
     (nil))
(insn 114 113 115 12 (set (reg:DI 147)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) HashCommands.c:368 -1
     (nil))
(insn 115 114 116 12 (parallel [
            (set (reg:DI 148)
                (mult:DI (reg:DI 147)
                    (const_int 232 [0xe8])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:368 -1
     (nil))
(insn 116 115 117 12 (parallel [
            (set (reg:DI 149)
                (plus:DI (reg:DI 148)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:368 -1
     (nil))
(insn 117 116 118 12 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:368 -1
     (nil))
(insn 118 117 119 12 (parallel [
            (set (reg/f:DI 105 [ D.13150 ])
                (plus:DI (reg:DI 149)
                    (reg/f:DI 150)))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:368 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])
            (reg:DI 149))
        (nil)))
(insn 119 118 120 12 (set (reg:DI 1 dx)
        (reg/f:DI 101 [ D.13151 ])) HashCommands.c:368 -1
     (nil))
(insn 120 119 121 12 (set (reg:SI 4 si)
        (reg:SI 104 [ D.13146 ])) HashCommands.c:368 -1
     (nil))
(insn 121 120 122 12 (set (reg:DI 5 di)
        (reg/f:DI 105 [ D.13150 ])) HashCommands.c:368 -1
     (nil))
(call_insn 122 121 123 12 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashEnd") [flags 0x41]  <function_decl 0x7f19d39376c0 CryptHashEnd>) [0 CryptHashEnd S1 A8])
            (const_int 0 [0]))) HashCommands.c:368 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 123 122 124 12 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) HashCommands.c:372 -1
     (nil))
(insn 124 123 125 12 (set (reg:SI 106 [ D.13146 ])
        (mem/j:SI (reg/f:DI 151) [0 in_8(D)->pcrHandle+0 S4 A32])) HashCommands.c:372 -1
     (nil))
(insn 125 124 126 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 106 [ D.13146 ])
            (const_int 1073741831 [0x40000007]))) HashCommands.c:372 -1
     (nil))
(jump_insn 126 125 127 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 154)
            (pc))) HashCommands.c:372 -1
     (nil)
 -> 154)
(note 127 126 128 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 13 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:375 -1
     (nil))
(insn 129 128 130 13 (set (reg:SI 107 [ D.13146 ])
        (mem/j:SI (reg/f:DI 152) [0 out_26(D)->results.count+0 S4 A32])) HashCommands.c:375 -1
     (nil))
(insn 130 129 131 13 (set (reg:DI 153)
        (zero_extend:DI (reg:SI 107 [ D.13146 ]))) HashCommands.c:375 -1
     (nil))
(insn 131 130 132 13 (set (reg:DI 154)
        (reg:DI 153)) HashCommands.c:375 -1
     (nil))
(insn 132 131 133 13 (parallel [
            (set (reg:DI 154)
                (ashift:DI (reg:DI 154)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:375 -1
     (nil))
(insn 133 132 134 13 (parallel [
            (set (reg:DI 154)
                (plus:DI (reg:DI 154)
                    (reg:DI 153)))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:375 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 153)
            (const_int 5 [0x5]))
        (nil)))
(insn 134 133 135 13 (parallel [
            (set (reg:DI 155)
                (ashift:DI (reg:DI 154)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:375 -1
     (nil))
(insn 135 134 136 13 (parallel [
            (set (reg:DI 154)
                (plus:DI (reg:DI 154)
                    (reg:DI 155)))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:375 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 153)
            (const_int 25 [0x19]))
        (nil)))
(insn 136 135 137 13 (parallel [
            (set (reg:DI 156)
                (ashift:DI (reg:DI 154)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:375 -1
     (nil))
(insn 137 136 138 13 (set (reg:DI 154)
        (reg:DI 156)) HashCommands.c:375 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 153)
            (const_int 50 [0x32]))
        (nil)))
(insn 138 137 139 13 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:375 -1
     (nil))
(insn 139 138 140 13 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg:DI 154)
                    (reg/f:DI 158)))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:375 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])
            (reg:DI 154))
        (nil)))
(insn 140 139 141 13 (parallel [
            (set (reg/f:DI 108 [ D.13151 ])
                (plus:DI (reg:DI 157)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:375 -1
     (nil))
(insn 141 140 142 13 (set (reg:SI 109 [ D.13148 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -14 [0xfffffffffffffff2])) [0 hashAlg+0 S2 A16]))) HashCommands.c:374 -1
     (nil))
(insn 142 141 143 13 (set (reg:SI 5 di)
        (reg:SI 109 [ D.13148 ])) HashCommands.c:374 -1
     (nil))
(call_insn 143 142 144 13 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:DI ("CryptHashGetDigestSize") [flags 0x41]  <function_decl 0x7f19d3932e58 CryptHashGetDigestSize>) [0 CryptHashGetDigestSize S1 A8])
            (const_int 0 [0]))) HashCommands.c:374 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 144 143 145 13 (set (reg:HI 110 [ D.13152 ])
        (reg:HI 0 ax)) HashCommands.c:374 -1
     (nil))
(insn 145 144 146 13 (set (reg:SI 111 [ D.13146 ])
        (zero_extend:SI (reg:HI 110 [ D.13152 ]))) HashCommands.c:373 -1
     (nil))
(insn 146 145 147 13 (set (reg:SI 112 [ D.13148 ])
        (zero_extend:SI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -14 [0xfffffffffffffff2])) [0 hashAlg+0 S2 A16]))) HashCommands.c:373 -1
     (nil))
(insn 147 146 148 13 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 in+0 S8 A64])) HashCommands.c:373 -1
     (nil))
(insn 148 147 149 13 (set (reg:SI 113 [ D.13146 ])
        (mem/j:SI (reg/f:DI 159) [0 in_8(D)->pcrHandle+0 S4 A32])) HashCommands.c:373 -1
     (nil))
(insn 149 148 150 13 (set (reg:DI 2 cx)
        (reg/f:DI 108 [ D.13151 ])) HashCommands.c:373 -1
     (nil))
(insn 150 149 151 13 (set (reg:SI 1 dx)
        (reg:SI 111 [ D.13146 ])) HashCommands.c:373 -1
     (nil))
(insn 151 150 152 13 (set (reg:SI 4 si)
        (reg:SI 112 [ D.13148 ])) HashCommands.c:373 -1
     (nil))
(insn 152 151 153 13 (set (reg:SI 5 di)
        (reg:SI 113 [ D.13146 ])) HashCommands.c:373 -1
     (nil))
(call_insn 153 152 154 13 (call (mem:QI (symbol_ref:DI ("PCRExtend") [flags 0x41]  <function_decl 0x7f19d3878288 PCRExtend>) [0 PCRExtend S1 A8])
        (const_int 0 [0])) HashCommands.c:373 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(code_label 154 153 155 14 36 "" [1 uses])
(note 155 154 156 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 14 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:376 -1
     (nil))
(insn 157 156 158 14 (set (reg:SI 114 [ D.13146 ])
        (mem/j:SI (reg/f:DI 160) [0 out_26(D)->results.count+0 S4 A32])) HashCommands.c:376 -1
     (nil))
(insn 158 157 159 14 (parallel [
            (set (reg:SI 115 [ D.13146 ])
                (plus:SI (reg:SI 114 [ D.13146 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:376 -1
     (nil))
(insn 159 158 160 14 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 out+0 S8 A64])) HashCommands.c:376 -1
     (nil))
(insn 160 159 161 14 (set (mem/j:SI (reg/f:DI 161) [0 out_26(D)->results.count+0 S4 A32])
        (reg:SI 115 [ D.13146 ])) HashCommands.c:376 -1
     (nil))
(insn 161 160 162 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:361 -1
     (nil))
(code_label 162 161 163 15 35 "" [1 uses])
(note 163 162 165 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 165 163 166 15 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 2 [0x2]))) HashCommands.c:361 -1
     (nil))
(jump_insn 166 165 167 15 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 164)
            (pc))) HashCommands.c:361 -1
     (nil)
 -> 164)
(note 167 166 168 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 171 16 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hashObject+0 S8 A64])) HashCommands.c:380 -1
     (nil))
(insn 171 168 172 16 (set (reg:QI 165)
        (mem/j:QI (reg/f:DI 162) [0 hashObject_11->attributes.evict+0 S1 A64])) HashCommands.c:380 -1
     (nil))
(insn 172 171 173 16 (parallel [
            (set (reg:QI 166)
                (ior:QI (reg:QI 165)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) HashCommands.c:380 -1
     (nil))
(insn 173 172 174 16 (set (mem/j:QI (reg/f:DI 162) [0 hashObject_11->attributes.evict+0 S1 A64])
        (reg:QI 166)) HashCommands.c:380 -1
     (nil))
(insn 174 173 175 16 (set (reg:SI 87 [ D.13145 ])
        (const_int 0 [0])) HashCommands.c:381 -1
     (nil))
(code_label 175 174 176 17 32 "" [3 uses])
(note 176 175 177 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 181 17 (set (reg:SI 116 [ <retval> ])
        (reg:SI 87 [ D.13145 ])) -1
     (nil))
(insn 181 177 182 17 (set (reg/i:SI 0 ax)
        (reg:SI 116 [ <retval> ])) HashCommands.c:382 -1
     (nil))
(insn 182 181 0 17 (use (reg/i:SI 0 ax)) HashCommands.c:382 -1
     (nil))
